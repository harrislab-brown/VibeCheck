
VibeCheck.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000002cc  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001a750  080002d0  080002d0  000012d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000da0  0801aa20  0801aa20  0001ba20  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  0801b7c0  0801b7c0  0001c7c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  0801b7c8  0801b7c8  0001c7c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .fini_array   00000004  0801b7cc  0801b7cc  0001c7cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .data         000002cc  24000000  0801b7d0  0001d000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00005fa8  240002cc  0801ba9c  0001d2cc  2**2
                  ALLOC
  8 ._user_heap_stack 00000604  24006274  0801ba9c  0001e274  2**0
                  ALLOC
  9 .ARM.attributes 0000002e  00000000  00000000  0001d2cc  2**0
                  CONTENTS, READONLY
 10 .debug_info   00035d3d  00000000  00000000  0001d2fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 00006c5d  00000000  00000000  00053037  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 00002758  00000000  00000000  00059c98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_rnglists 00001e85  00000000  00000000  0005c3f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_macro  0000b43f  00000000  00000000  0005e275  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line   0003b03e  00000000  00000000  000696b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str    00171cd5  00000000  00000000  000a46f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .comment      00000043  00000000  00000000  002163c7  2**0
                  CONTENTS, READONLY
 18 .debug_frame  0000bdf8  00000000  00000000  0021640c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000072  00000000  00000000  00222204  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002d0 <__do_global_dtors_aux>:
 80002d0:	b510      	push	{r4, lr}
 80002d2:	4c05      	ldr	r4, [pc, #20]	@ (80002e8 <__do_global_dtors_aux+0x18>)
 80002d4:	7823      	ldrb	r3, [r4, #0]
 80002d6:	b933      	cbnz	r3, 80002e6 <__do_global_dtors_aux+0x16>
 80002d8:	4b04      	ldr	r3, [pc, #16]	@ (80002ec <__do_global_dtors_aux+0x1c>)
 80002da:	b113      	cbz	r3, 80002e2 <__do_global_dtors_aux+0x12>
 80002dc:	4804      	ldr	r0, [pc, #16]	@ (80002f0 <__do_global_dtors_aux+0x20>)
 80002de:	f3af 8000 	nop.w
 80002e2:	2301      	movs	r3, #1
 80002e4:	7023      	strb	r3, [r4, #0]
 80002e6:	bd10      	pop	{r4, pc}
 80002e8:	240002cc 	.word	0x240002cc
 80002ec:	00000000 	.word	0x00000000
 80002f0:	0801aa08 	.word	0x0801aa08

080002f4 <frame_dummy>:
 80002f4:	b508      	push	{r3, lr}
 80002f6:	4b03      	ldr	r3, [pc, #12]	@ (8000304 <frame_dummy+0x10>)
 80002f8:	b11b      	cbz	r3, 8000302 <frame_dummy+0xe>
 80002fa:	4903      	ldr	r1, [pc, #12]	@ (8000308 <frame_dummy+0x14>)
 80002fc:	4803      	ldr	r0, [pc, #12]	@ (800030c <frame_dummy+0x18>)
 80002fe:	f3af 8000 	nop.w
 8000302:	bd08      	pop	{r3, pc}
 8000304:	00000000 	.word	0x00000000
 8000308:	240002d0 	.word	0x240002d0
 800030c:	0801aa08 	.word	0x0801aa08

08000310 <strcmp>:
 8000310:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000314:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000318:	2a01      	cmp	r2, #1
 800031a:	bf28      	it	cs
 800031c:	429a      	cmpcs	r2, r3
 800031e:	d0f7      	beq.n	8000310 <strcmp>
 8000320:	1ad0      	subs	r0, r2, r3
 8000322:	4770      	bx	lr
	...

08000330 <memchr>:
 8000330:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000334:	2a10      	cmp	r2, #16
 8000336:	db2b      	blt.n	8000390 <memchr+0x60>
 8000338:	f010 0f07 	tst.w	r0, #7
 800033c:	d008      	beq.n	8000350 <memchr+0x20>
 800033e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000342:	3a01      	subs	r2, #1
 8000344:	428b      	cmp	r3, r1
 8000346:	d02d      	beq.n	80003a4 <memchr+0x74>
 8000348:	f010 0f07 	tst.w	r0, #7
 800034c:	b342      	cbz	r2, 80003a0 <memchr+0x70>
 800034e:	d1f6      	bne.n	800033e <memchr+0xe>
 8000350:	b4f0      	push	{r4, r5, r6, r7}
 8000352:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000356:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800035a:	f022 0407 	bic.w	r4, r2, #7
 800035e:	f07f 0700 	mvns.w	r7, #0
 8000362:	2300      	movs	r3, #0
 8000364:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000368:	3c08      	subs	r4, #8
 800036a:	ea85 0501 	eor.w	r5, r5, r1
 800036e:	ea86 0601 	eor.w	r6, r6, r1
 8000372:	fa85 f547 	uadd8	r5, r5, r7
 8000376:	faa3 f587 	sel	r5, r3, r7
 800037a:	fa86 f647 	uadd8	r6, r6, r7
 800037e:	faa5 f687 	sel	r6, r5, r7
 8000382:	b98e      	cbnz	r6, 80003a8 <memchr+0x78>
 8000384:	d1ee      	bne.n	8000364 <memchr+0x34>
 8000386:	bcf0      	pop	{r4, r5, r6, r7}
 8000388:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800038c:	f002 0207 	and.w	r2, r2, #7
 8000390:	b132      	cbz	r2, 80003a0 <memchr+0x70>
 8000392:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000396:	3a01      	subs	r2, #1
 8000398:	ea83 0301 	eor.w	r3, r3, r1
 800039c:	b113      	cbz	r3, 80003a4 <memchr+0x74>
 800039e:	d1f8      	bne.n	8000392 <memchr+0x62>
 80003a0:	2000      	movs	r0, #0
 80003a2:	4770      	bx	lr
 80003a4:	3801      	subs	r0, #1
 80003a6:	4770      	bx	lr
 80003a8:	2d00      	cmp	r5, #0
 80003aa:	bf06      	itte	eq
 80003ac:	4635      	moveq	r5, r6
 80003ae:	3803      	subeq	r0, #3
 80003b0:	3807      	subne	r0, #7
 80003b2:	f015 0f01 	tst.w	r5, #1
 80003b6:	d107      	bne.n	80003c8 <memchr+0x98>
 80003b8:	3001      	adds	r0, #1
 80003ba:	f415 7f80 	tst.w	r5, #256	@ 0x100
 80003be:	bf02      	ittt	eq
 80003c0:	3001      	addeq	r0, #1
 80003c2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80003c6:	3001      	addeq	r0, #1
 80003c8:	bcf0      	pop	{r4, r5, r6, r7}
 80003ca:	3801      	subs	r0, #1
 80003cc:	4770      	bx	lr
 80003ce:	bf00      	nop

080003d0 <strlen>:
 80003d0:	4603      	mov	r3, r0
 80003d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80003d6:	2a00      	cmp	r2, #0
 80003d8:	d1fb      	bne.n	80003d2 <strlen+0x2>
 80003da:	1a18      	subs	r0, r3, r0
 80003dc:	3801      	subs	r0, #1
 80003de:	4770      	bx	lr

080003e0 <__aeabi_drsub>:
 80003e0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80003e4:	e002      	b.n	80003ec <__adddf3>
 80003e6:	bf00      	nop

080003e8 <__aeabi_dsub>:
 80003e8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080003ec <__adddf3>:
 80003ec:	b530      	push	{r4, r5, lr}
 80003ee:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80003f2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80003f6:	ea94 0f05 	teq	r4, r5
 80003fa:	bf08      	it	eq
 80003fc:	ea90 0f02 	teqeq	r0, r2
 8000400:	bf1f      	itttt	ne
 8000402:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000406:	ea55 0c02 	orrsne.w	ip, r5, r2
 800040a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800040e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000412:	f000 80e2 	beq.w	80005da <__adddf3+0x1ee>
 8000416:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800041a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800041e:	bfb8      	it	lt
 8000420:	426d      	neglt	r5, r5
 8000422:	dd0c      	ble.n	800043e <__adddf3+0x52>
 8000424:	442c      	add	r4, r5
 8000426:	ea80 0202 	eor.w	r2, r0, r2
 800042a:	ea81 0303 	eor.w	r3, r1, r3
 800042e:	ea82 0000 	eor.w	r0, r2, r0
 8000432:	ea83 0101 	eor.w	r1, r3, r1
 8000436:	ea80 0202 	eor.w	r2, r0, r2
 800043a:	ea81 0303 	eor.w	r3, r1, r3
 800043e:	2d36      	cmp	r5, #54	@ 0x36
 8000440:	bf88      	it	hi
 8000442:	bd30      	pophi	{r4, r5, pc}
 8000444:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000448:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800044c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000450:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000454:	d002      	beq.n	800045c <__adddf3+0x70>
 8000456:	4240      	negs	r0, r0
 8000458:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800045c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000460:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000464:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000468:	d002      	beq.n	8000470 <__adddf3+0x84>
 800046a:	4252      	negs	r2, r2
 800046c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000470:	ea94 0f05 	teq	r4, r5
 8000474:	f000 80a7 	beq.w	80005c6 <__adddf3+0x1da>
 8000478:	f1a4 0401 	sub.w	r4, r4, #1
 800047c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000480:	db0d      	blt.n	800049e <__adddf3+0xb2>
 8000482:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000486:	fa22 f205 	lsr.w	r2, r2, r5
 800048a:	1880      	adds	r0, r0, r2
 800048c:	f141 0100 	adc.w	r1, r1, #0
 8000490:	fa03 f20e 	lsl.w	r2, r3, lr
 8000494:	1880      	adds	r0, r0, r2
 8000496:	fa43 f305 	asr.w	r3, r3, r5
 800049a:	4159      	adcs	r1, r3
 800049c:	e00e      	b.n	80004bc <__adddf3+0xd0>
 800049e:	f1a5 0520 	sub.w	r5, r5, #32
 80004a2:	f10e 0e20 	add.w	lr, lr, #32
 80004a6:	2a01      	cmp	r2, #1
 80004a8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80004ac:	bf28      	it	cs
 80004ae:	f04c 0c02 	orrcs.w	ip, ip, #2
 80004b2:	fa43 f305 	asr.w	r3, r3, r5
 80004b6:	18c0      	adds	r0, r0, r3
 80004b8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80004bc:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004c0:	d507      	bpl.n	80004d2 <__adddf3+0xe6>
 80004c2:	f04f 0e00 	mov.w	lr, #0
 80004c6:	f1dc 0c00 	rsbs	ip, ip, #0
 80004ca:	eb7e 0000 	sbcs.w	r0, lr, r0
 80004ce:	eb6e 0101 	sbc.w	r1, lr, r1
 80004d2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80004d6:	d31b      	bcc.n	8000510 <__adddf3+0x124>
 80004d8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80004dc:	d30c      	bcc.n	80004f8 <__adddf3+0x10c>
 80004de:	0849      	lsrs	r1, r1, #1
 80004e0:	ea5f 0030 	movs.w	r0, r0, rrx
 80004e4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80004e8:	f104 0401 	add.w	r4, r4, #1
 80004ec:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80004f0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80004f4:	f080 809a 	bcs.w	800062c <__adddf3+0x240>
 80004f8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80004fc:	bf08      	it	eq
 80004fe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000502:	f150 0000 	adcs.w	r0, r0, #0
 8000506:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800050a:	ea41 0105 	orr.w	r1, r1, r5
 800050e:	bd30      	pop	{r4, r5, pc}
 8000510:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000514:	4140      	adcs	r0, r0
 8000516:	eb41 0101 	adc.w	r1, r1, r1
 800051a:	3c01      	subs	r4, #1
 800051c:	bf28      	it	cs
 800051e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000522:	d2e9      	bcs.n	80004f8 <__adddf3+0x10c>
 8000524:	f091 0f00 	teq	r1, #0
 8000528:	bf04      	itt	eq
 800052a:	4601      	moveq	r1, r0
 800052c:	2000      	moveq	r0, #0
 800052e:	fab1 f381 	clz	r3, r1
 8000532:	bf08      	it	eq
 8000534:	3320      	addeq	r3, #32
 8000536:	f1a3 030b 	sub.w	r3, r3, #11
 800053a:	f1b3 0220 	subs.w	r2, r3, #32
 800053e:	da0c      	bge.n	800055a <__adddf3+0x16e>
 8000540:	320c      	adds	r2, #12
 8000542:	dd08      	ble.n	8000556 <__adddf3+0x16a>
 8000544:	f102 0c14 	add.w	ip, r2, #20
 8000548:	f1c2 020c 	rsb	r2, r2, #12
 800054c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000550:	fa21 f102 	lsr.w	r1, r1, r2
 8000554:	e00c      	b.n	8000570 <__adddf3+0x184>
 8000556:	f102 0214 	add.w	r2, r2, #20
 800055a:	bfd8      	it	le
 800055c:	f1c2 0c20 	rsble	ip, r2, #32
 8000560:	fa01 f102 	lsl.w	r1, r1, r2
 8000564:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000568:	bfdc      	itt	le
 800056a:	ea41 010c 	orrle.w	r1, r1, ip
 800056e:	4090      	lslle	r0, r2
 8000570:	1ae4      	subs	r4, r4, r3
 8000572:	bfa2      	ittt	ge
 8000574:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000578:	4329      	orrge	r1, r5
 800057a:	bd30      	popge	{r4, r5, pc}
 800057c:	ea6f 0404 	mvn.w	r4, r4
 8000580:	3c1f      	subs	r4, #31
 8000582:	da1c      	bge.n	80005be <__adddf3+0x1d2>
 8000584:	340c      	adds	r4, #12
 8000586:	dc0e      	bgt.n	80005a6 <__adddf3+0x1ba>
 8000588:	f104 0414 	add.w	r4, r4, #20
 800058c:	f1c4 0220 	rsb	r2, r4, #32
 8000590:	fa20 f004 	lsr.w	r0, r0, r4
 8000594:	fa01 f302 	lsl.w	r3, r1, r2
 8000598:	ea40 0003 	orr.w	r0, r0, r3
 800059c:	fa21 f304 	lsr.w	r3, r1, r4
 80005a0:	ea45 0103 	orr.w	r1, r5, r3
 80005a4:	bd30      	pop	{r4, r5, pc}
 80005a6:	f1c4 040c 	rsb	r4, r4, #12
 80005aa:	f1c4 0220 	rsb	r2, r4, #32
 80005ae:	fa20 f002 	lsr.w	r0, r0, r2
 80005b2:	fa01 f304 	lsl.w	r3, r1, r4
 80005b6:	ea40 0003 	orr.w	r0, r0, r3
 80005ba:	4629      	mov	r1, r5
 80005bc:	bd30      	pop	{r4, r5, pc}
 80005be:	fa21 f004 	lsr.w	r0, r1, r4
 80005c2:	4629      	mov	r1, r5
 80005c4:	bd30      	pop	{r4, r5, pc}
 80005c6:	f094 0f00 	teq	r4, #0
 80005ca:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80005ce:	bf06      	itte	eq
 80005d0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80005d4:	3401      	addeq	r4, #1
 80005d6:	3d01      	subne	r5, #1
 80005d8:	e74e      	b.n	8000478 <__adddf3+0x8c>
 80005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005de:	bf18      	it	ne
 80005e0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005e4:	d029      	beq.n	800063a <__adddf3+0x24e>
 80005e6:	ea94 0f05 	teq	r4, r5
 80005ea:	bf08      	it	eq
 80005ec:	ea90 0f02 	teqeq	r0, r2
 80005f0:	d005      	beq.n	80005fe <__adddf3+0x212>
 80005f2:	ea54 0c00 	orrs.w	ip, r4, r0
 80005f6:	bf04      	itt	eq
 80005f8:	4619      	moveq	r1, r3
 80005fa:	4610      	moveq	r0, r2
 80005fc:	bd30      	pop	{r4, r5, pc}
 80005fe:	ea91 0f03 	teq	r1, r3
 8000602:	bf1e      	ittt	ne
 8000604:	2100      	movne	r1, #0
 8000606:	2000      	movne	r0, #0
 8000608:	bd30      	popne	{r4, r5, pc}
 800060a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800060e:	d105      	bne.n	800061c <__adddf3+0x230>
 8000610:	0040      	lsls	r0, r0, #1
 8000612:	4149      	adcs	r1, r1
 8000614:	bf28      	it	cs
 8000616:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800061a:	bd30      	pop	{r4, r5, pc}
 800061c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000620:	bf3c      	itt	cc
 8000622:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000626:	bd30      	popcc	{r4, r5, pc}
 8000628:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800062c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000630:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000634:	f04f 0000 	mov.w	r0, #0
 8000638:	bd30      	pop	{r4, r5, pc}
 800063a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800063e:	bf1a      	itte	ne
 8000640:	4619      	movne	r1, r3
 8000642:	4610      	movne	r0, r2
 8000644:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000648:	bf1c      	itt	ne
 800064a:	460b      	movne	r3, r1
 800064c:	4602      	movne	r2, r0
 800064e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000652:	bf06      	itte	eq
 8000654:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000658:	ea91 0f03 	teqeq	r1, r3
 800065c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000660:	bd30      	pop	{r4, r5, pc}
 8000662:	bf00      	nop

08000664 <__aeabi_ui2d>:
 8000664:	f090 0f00 	teq	r0, #0
 8000668:	bf04      	itt	eq
 800066a:	2100      	moveq	r1, #0
 800066c:	4770      	bxeq	lr
 800066e:	b530      	push	{r4, r5, lr}
 8000670:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000674:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000678:	f04f 0500 	mov.w	r5, #0
 800067c:	f04f 0100 	mov.w	r1, #0
 8000680:	e750      	b.n	8000524 <__adddf3+0x138>
 8000682:	bf00      	nop

08000684 <__aeabi_i2d>:
 8000684:	f090 0f00 	teq	r0, #0
 8000688:	bf04      	itt	eq
 800068a:	2100      	moveq	r1, #0
 800068c:	4770      	bxeq	lr
 800068e:	b530      	push	{r4, r5, lr}
 8000690:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000694:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000698:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800069c:	bf48      	it	mi
 800069e:	4240      	negmi	r0, r0
 80006a0:	f04f 0100 	mov.w	r1, #0
 80006a4:	e73e      	b.n	8000524 <__adddf3+0x138>
 80006a6:	bf00      	nop

080006a8 <__aeabi_f2d>:
 80006a8:	0042      	lsls	r2, r0, #1
 80006aa:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80006ae:	ea4f 0131 	mov.w	r1, r1, rrx
 80006b2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80006b6:	bf1f      	itttt	ne
 80006b8:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80006bc:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80006c0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80006c4:	4770      	bxne	lr
 80006c6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80006ca:	bf08      	it	eq
 80006cc:	4770      	bxeq	lr
 80006ce:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80006d2:	bf04      	itt	eq
 80006d4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80006d8:	4770      	bxeq	lr
 80006da:	b530      	push	{r4, r5, lr}
 80006dc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80006e0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80006e4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80006e8:	e71c      	b.n	8000524 <__adddf3+0x138>
 80006ea:	bf00      	nop

080006ec <__aeabi_ul2d>:
 80006ec:	ea50 0201 	orrs.w	r2, r0, r1
 80006f0:	bf08      	it	eq
 80006f2:	4770      	bxeq	lr
 80006f4:	b530      	push	{r4, r5, lr}
 80006f6:	f04f 0500 	mov.w	r5, #0
 80006fa:	e00a      	b.n	8000712 <__aeabi_l2d+0x16>

080006fc <__aeabi_l2d>:
 80006fc:	ea50 0201 	orrs.w	r2, r0, r1
 8000700:	bf08      	it	eq
 8000702:	4770      	bxeq	lr
 8000704:	b530      	push	{r4, r5, lr}
 8000706:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800070a:	d502      	bpl.n	8000712 <__aeabi_l2d+0x16>
 800070c:	4240      	negs	r0, r0
 800070e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000712:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000716:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800071a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800071e:	f43f aed8 	beq.w	80004d2 <__adddf3+0xe6>
 8000722:	f04f 0203 	mov.w	r2, #3
 8000726:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800072a:	bf18      	it	ne
 800072c:	3203      	addne	r2, #3
 800072e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000732:	bf18      	it	ne
 8000734:	3203      	addne	r2, #3
 8000736:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800073a:	f1c2 0320 	rsb	r3, r2, #32
 800073e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000742:	fa20 f002 	lsr.w	r0, r0, r2
 8000746:	fa01 fe03 	lsl.w	lr, r1, r3
 800074a:	ea40 000e 	orr.w	r0, r0, lr
 800074e:	fa21 f102 	lsr.w	r1, r1, r2
 8000752:	4414      	add	r4, r2
 8000754:	e6bd      	b.n	80004d2 <__adddf3+0xe6>
 8000756:	bf00      	nop

08000758 <__aeabi_uldivmod>:
 8000758:	b953      	cbnz	r3, 8000770 <__aeabi_uldivmod+0x18>
 800075a:	b94a      	cbnz	r2, 8000770 <__aeabi_uldivmod+0x18>
 800075c:	2900      	cmp	r1, #0
 800075e:	bf08      	it	eq
 8000760:	2800      	cmpeq	r0, #0
 8000762:	bf1c      	itt	ne
 8000764:	f04f 31ff 	movne.w	r1, #4294967295
 8000768:	f04f 30ff 	movne.w	r0, #4294967295
 800076c:	f000 b9a2 	b.w	8000ab4 <__aeabi_idiv0>
 8000770:	f1ad 0c08 	sub.w	ip, sp, #8
 8000774:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000778:	f000 f83e 	bl	80007f8 <__udivmoddi4>
 800077c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000780:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000784:	b004      	add	sp, #16
 8000786:	4770      	bx	lr

08000788 <__aeabi_d2lz>:
 8000788:	b508      	push	{r3, lr}
 800078a:	4602      	mov	r2, r0
 800078c:	460b      	mov	r3, r1
 800078e:	ec43 2b17 	vmov	d7, r2, r3
 8000792:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 8000796:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800079a:	d403      	bmi.n	80007a4 <__aeabi_d2lz+0x1c>
 800079c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80007a0:	f000 b80a 	b.w	80007b8 <__aeabi_d2ulz>
 80007a4:	eeb1 7b47 	vneg.f64	d7, d7
 80007a8:	ec51 0b17 	vmov	r0, r1, d7
 80007ac:	f000 f804 	bl	80007b8 <__aeabi_d2ulz>
 80007b0:	4240      	negs	r0, r0
 80007b2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80007b6:	bd08      	pop	{r3, pc}

080007b8 <__aeabi_d2ulz>:
 80007b8:	ed9f 6b0b 	vldr	d6, [pc, #44]	@ 80007e8 <__aeabi_d2ulz+0x30>
 80007bc:	ec41 0b17 	vmov	d7, r0, r1
 80007c0:	ed9f 5b0b 	vldr	d5, [pc, #44]	@ 80007f0 <__aeabi_d2ulz+0x38>
 80007c4:	ee27 6b06 	vmul.f64	d6, d7, d6
 80007c8:	eebc 6bc6 	vcvt.u32.f64	s12, d6
 80007cc:	eeb8 4b46 	vcvt.f64.u32	d4, s12
 80007d0:	eea4 7b45 	vfms.f64	d7, d4, d5
 80007d4:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80007d8:	ee16 1a10 	vmov	r1, s12
 80007dc:	ee17 0a90 	vmov	r0, s15
 80007e0:	4770      	bx	lr
 80007e2:	bf00      	nop
 80007e4:	f3af 8000 	nop.w
 80007e8:	00000000 	.word	0x00000000
 80007ec:	3df00000 	.word	0x3df00000
 80007f0:	00000000 	.word	0x00000000
 80007f4:	41f00000 	.word	0x41f00000

080007f8 <__udivmoddi4>:
 80007f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80007fc:	9d08      	ldr	r5, [sp, #32]
 80007fe:	460c      	mov	r4, r1
 8000800:	2b00      	cmp	r3, #0
 8000802:	d14e      	bne.n	80008a2 <__udivmoddi4+0xaa>
 8000804:	4694      	mov	ip, r2
 8000806:	458c      	cmp	ip, r1
 8000808:	4686      	mov	lr, r0
 800080a:	fab2 f282 	clz	r2, r2
 800080e:	d962      	bls.n	80008d6 <__udivmoddi4+0xde>
 8000810:	b14a      	cbz	r2, 8000826 <__udivmoddi4+0x2e>
 8000812:	f1c2 0320 	rsb	r3, r2, #32
 8000816:	4091      	lsls	r1, r2
 8000818:	fa20 f303 	lsr.w	r3, r0, r3
 800081c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000820:	4319      	orrs	r1, r3
 8000822:	fa00 fe02 	lsl.w	lr, r0, r2
 8000826:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800082a:	fa1f f68c 	uxth.w	r6, ip
 800082e:	fbb1 f4f7 	udiv	r4, r1, r7
 8000832:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000836:	fb07 1114 	mls	r1, r7, r4, r1
 800083a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800083e:	fb04 f106 	mul.w	r1, r4, r6
 8000842:	4299      	cmp	r1, r3
 8000844:	d90a      	bls.n	800085c <__udivmoddi4+0x64>
 8000846:	eb1c 0303 	adds.w	r3, ip, r3
 800084a:	f104 30ff 	add.w	r0, r4, #4294967295
 800084e:	f080 8112 	bcs.w	8000a76 <__udivmoddi4+0x27e>
 8000852:	4299      	cmp	r1, r3
 8000854:	f240 810f 	bls.w	8000a76 <__udivmoddi4+0x27e>
 8000858:	3c02      	subs	r4, #2
 800085a:	4463      	add	r3, ip
 800085c:	1a59      	subs	r1, r3, r1
 800085e:	fa1f f38e 	uxth.w	r3, lr
 8000862:	fbb1 f0f7 	udiv	r0, r1, r7
 8000866:	fb07 1110 	mls	r1, r7, r0, r1
 800086a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800086e:	fb00 f606 	mul.w	r6, r0, r6
 8000872:	429e      	cmp	r6, r3
 8000874:	d90a      	bls.n	800088c <__udivmoddi4+0x94>
 8000876:	eb1c 0303 	adds.w	r3, ip, r3
 800087a:	f100 31ff 	add.w	r1, r0, #4294967295
 800087e:	f080 80fc 	bcs.w	8000a7a <__udivmoddi4+0x282>
 8000882:	429e      	cmp	r6, r3
 8000884:	f240 80f9 	bls.w	8000a7a <__udivmoddi4+0x282>
 8000888:	4463      	add	r3, ip
 800088a:	3802      	subs	r0, #2
 800088c:	1b9b      	subs	r3, r3, r6
 800088e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000892:	2100      	movs	r1, #0
 8000894:	b11d      	cbz	r5, 800089e <__udivmoddi4+0xa6>
 8000896:	40d3      	lsrs	r3, r2
 8000898:	2200      	movs	r2, #0
 800089a:	e9c5 3200 	strd	r3, r2, [r5]
 800089e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80008a2:	428b      	cmp	r3, r1
 80008a4:	d905      	bls.n	80008b2 <__udivmoddi4+0xba>
 80008a6:	b10d      	cbz	r5, 80008ac <__udivmoddi4+0xb4>
 80008a8:	e9c5 0100 	strd	r0, r1, [r5]
 80008ac:	2100      	movs	r1, #0
 80008ae:	4608      	mov	r0, r1
 80008b0:	e7f5      	b.n	800089e <__udivmoddi4+0xa6>
 80008b2:	fab3 f183 	clz	r1, r3
 80008b6:	2900      	cmp	r1, #0
 80008b8:	d146      	bne.n	8000948 <__udivmoddi4+0x150>
 80008ba:	42a3      	cmp	r3, r4
 80008bc:	d302      	bcc.n	80008c4 <__udivmoddi4+0xcc>
 80008be:	4290      	cmp	r0, r2
 80008c0:	f0c0 80f0 	bcc.w	8000aa4 <__udivmoddi4+0x2ac>
 80008c4:	1a86      	subs	r6, r0, r2
 80008c6:	eb64 0303 	sbc.w	r3, r4, r3
 80008ca:	2001      	movs	r0, #1
 80008cc:	2d00      	cmp	r5, #0
 80008ce:	d0e6      	beq.n	800089e <__udivmoddi4+0xa6>
 80008d0:	e9c5 6300 	strd	r6, r3, [r5]
 80008d4:	e7e3      	b.n	800089e <__udivmoddi4+0xa6>
 80008d6:	2a00      	cmp	r2, #0
 80008d8:	f040 8090 	bne.w	80009fc <__udivmoddi4+0x204>
 80008dc:	eba1 040c 	sub.w	r4, r1, ip
 80008e0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80008e4:	fa1f f78c 	uxth.w	r7, ip
 80008e8:	2101      	movs	r1, #1
 80008ea:	fbb4 f6f8 	udiv	r6, r4, r8
 80008ee:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80008f2:	fb08 4416 	mls	r4, r8, r6, r4
 80008f6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80008fa:	fb07 f006 	mul.w	r0, r7, r6
 80008fe:	4298      	cmp	r0, r3
 8000900:	d908      	bls.n	8000914 <__udivmoddi4+0x11c>
 8000902:	eb1c 0303 	adds.w	r3, ip, r3
 8000906:	f106 34ff 	add.w	r4, r6, #4294967295
 800090a:	d202      	bcs.n	8000912 <__udivmoddi4+0x11a>
 800090c:	4298      	cmp	r0, r3
 800090e:	f200 80cd 	bhi.w	8000aac <__udivmoddi4+0x2b4>
 8000912:	4626      	mov	r6, r4
 8000914:	1a1c      	subs	r4, r3, r0
 8000916:	fa1f f38e 	uxth.w	r3, lr
 800091a:	fbb4 f0f8 	udiv	r0, r4, r8
 800091e:	fb08 4410 	mls	r4, r8, r0, r4
 8000922:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000926:	fb00 f707 	mul.w	r7, r0, r7
 800092a:	429f      	cmp	r7, r3
 800092c:	d908      	bls.n	8000940 <__udivmoddi4+0x148>
 800092e:	eb1c 0303 	adds.w	r3, ip, r3
 8000932:	f100 34ff 	add.w	r4, r0, #4294967295
 8000936:	d202      	bcs.n	800093e <__udivmoddi4+0x146>
 8000938:	429f      	cmp	r7, r3
 800093a:	f200 80b0 	bhi.w	8000a9e <__udivmoddi4+0x2a6>
 800093e:	4620      	mov	r0, r4
 8000940:	1bdb      	subs	r3, r3, r7
 8000942:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000946:	e7a5      	b.n	8000894 <__udivmoddi4+0x9c>
 8000948:	f1c1 0620 	rsb	r6, r1, #32
 800094c:	408b      	lsls	r3, r1
 800094e:	fa22 f706 	lsr.w	r7, r2, r6
 8000952:	431f      	orrs	r7, r3
 8000954:	fa20 fc06 	lsr.w	ip, r0, r6
 8000958:	fa04 f301 	lsl.w	r3, r4, r1
 800095c:	ea43 030c 	orr.w	r3, r3, ip
 8000960:	40f4      	lsrs	r4, r6
 8000962:	fa00 f801 	lsl.w	r8, r0, r1
 8000966:	0c38      	lsrs	r0, r7, #16
 8000968:	ea4f 4913 	mov.w	r9, r3, lsr #16
 800096c:	fbb4 fef0 	udiv	lr, r4, r0
 8000970:	fa1f fc87 	uxth.w	ip, r7
 8000974:	fb00 441e 	mls	r4, r0, lr, r4
 8000978:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800097c:	fb0e f90c 	mul.w	r9, lr, ip
 8000980:	45a1      	cmp	r9, r4
 8000982:	fa02 f201 	lsl.w	r2, r2, r1
 8000986:	d90a      	bls.n	800099e <__udivmoddi4+0x1a6>
 8000988:	193c      	adds	r4, r7, r4
 800098a:	f10e 3aff 	add.w	sl, lr, #4294967295
 800098e:	f080 8084 	bcs.w	8000a9a <__udivmoddi4+0x2a2>
 8000992:	45a1      	cmp	r9, r4
 8000994:	f240 8081 	bls.w	8000a9a <__udivmoddi4+0x2a2>
 8000998:	f1ae 0e02 	sub.w	lr, lr, #2
 800099c:	443c      	add	r4, r7
 800099e:	eba4 0409 	sub.w	r4, r4, r9
 80009a2:	fa1f f983 	uxth.w	r9, r3
 80009a6:	fbb4 f3f0 	udiv	r3, r4, r0
 80009aa:	fb00 4413 	mls	r4, r0, r3, r4
 80009ae:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80009b2:	fb03 fc0c 	mul.w	ip, r3, ip
 80009b6:	45a4      	cmp	ip, r4
 80009b8:	d907      	bls.n	80009ca <__udivmoddi4+0x1d2>
 80009ba:	193c      	adds	r4, r7, r4
 80009bc:	f103 30ff 	add.w	r0, r3, #4294967295
 80009c0:	d267      	bcs.n	8000a92 <__udivmoddi4+0x29a>
 80009c2:	45a4      	cmp	ip, r4
 80009c4:	d965      	bls.n	8000a92 <__udivmoddi4+0x29a>
 80009c6:	3b02      	subs	r3, #2
 80009c8:	443c      	add	r4, r7
 80009ca:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80009ce:	fba0 9302 	umull	r9, r3, r0, r2
 80009d2:	eba4 040c 	sub.w	r4, r4, ip
 80009d6:	429c      	cmp	r4, r3
 80009d8:	46ce      	mov	lr, r9
 80009da:	469c      	mov	ip, r3
 80009dc:	d351      	bcc.n	8000a82 <__udivmoddi4+0x28a>
 80009de:	d04e      	beq.n	8000a7e <__udivmoddi4+0x286>
 80009e0:	b155      	cbz	r5, 80009f8 <__udivmoddi4+0x200>
 80009e2:	ebb8 030e 	subs.w	r3, r8, lr
 80009e6:	eb64 040c 	sbc.w	r4, r4, ip
 80009ea:	fa04 f606 	lsl.w	r6, r4, r6
 80009ee:	40cb      	lsrs	r3, r1
 80009f0:	431e      	orrs	r6, r3
 80009f2:	40cc      	lsrs	r4, r1
 80009f4:	e9c5 6400 	strd	r6, r4, [r5]
 80009f8:	2100      	movs	r1, #0
 80009fa:	e750      	b.n	800089e <__udivmoddi4+0xa6>
 80009fc:	f1c2 0320 	rsb	r3, r2, #32
 8000a00:	fa20 f103 	lsr.w	r1, r0, r3
 8000a04:	fa0c fc02 	lsl.w	ip, ip, r2
 8000a08:	fa24 f303 	lsr.w	r3, r4, r3
 8000a0c:	4094      	lsls	r4, r2
 8000a0e:	430c      	orrs	r4, r1
 8000a10:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000a14:	fa00 fe02 	lsl.w	lr, r0, r2
 8000a18:	fa1f f78c 	uxth.w	r7, ip
 8000a1c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000a20:	fb08 3110 	mls	r1, r8, r0, r3
 8000a24:	0c23      	lsrs	r3, r4, #16
 8000a26:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000a2a:	fb00 f107 	mul.w	r1, r0, r7
 8000a2e:	4299      	cmp	r1, r3
 8000a30:	d908      	bls.n	8000a44 <__udivmoddi4+0x24c>
 8000a32:	eb1c 0303 	adds.w	r3, ip, r3
 8000a36:	f100 36ff 	add.w	r6, r0, #4294967295
 8000a3a:	d22c      	bcs.n	8000a96 <__udivmoddi4+0x29e>
 8000a3c:	4299      	cmp	r1, r3
 8000a3e:	d92a      	bls.n	8000a96 <__udivmoddi4+0x29e>
 8000a40:	3802      	subs	r0, #2
 8000a42:	4463      	add	r3, ip
 8000a44:	1a5b      	subs	r3, r3, r1
 8000a46:	b2a4      	uxth	r4, r4
 8000a48:	fbb3 f1f8 	udiv	r1, r3, r8
 8000a4c:	fb08 3311 	mls	r3, r8, r1, r3
 8000a50:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000a54:	fb01 f307 	mul.w	r3, r1, r7
 8000a58:	42a3      	cmp	r3, r4
 8000a5a:	d908      	bls.n	8000a6e <__udivmoddi4+0x276>
 8000a5c:	eb1c 0404 	adds.w	r4, ip, r4
 8000a60:	f101 36ff 	add.w	r6, r1, #4294967295
 8000a64:	d213      	bcs.n	8000a8e <__udivmoddi4+0x296>
 8000a66:	42a3      	cmp	r3, r4
 8000a68:	d911      	bls.n	8000a8e <__udivmoddi4+0x296>
 8000a6a:	3902      	subs	r1, #2
 8000a6c:	4464      	add	r4, ip
 8000a6e:	1ae4      	subs	r4, r4, r3
 8000a70:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000a74:	e739      	b.n	80008ea <__udivmoddi4+0xf2>
 8000a76:	4604      	mov	r4, r0
 8000a78:	e6f0      	b.n	800085c <__udivmoddi4+0x64>
 8000a7a:	4608      	mov	r0, r1
 8000a7c:	e706      	b.n	800088c <__udivmoddi4+0x94>
 8000a7e:	45c8      	cmp	r8, r9
 8000a80:	d2ae      	bcs.n	80009e0 <__udivmoddi4+0x1e8>
 8000a82:	ebb9 0e02 	subs.w	lr, r9, r2
 8000a86:	eb63 0c07 	sbc.w	ip, r3, r7
 8000a8a:	3801      	subs	r0, #1
 8000a8c:	e7a8      	b.n	80009e0 <__udivmoddi4+0x1e8>
 8000a8e:	4631      	mov	r1, r6
 8000a90:	e7ed      	b.n	8000a6e <__udivmoddi4+0x276>
 8000a92:	4603      	mov	r3, r0
 8000a94:	e799      	b.n	80009ca <__udivmoddi4+0x1d2>
 8000a96:	4630      	mov	r0, r6
 8000a98:	e7d4      	b.n	8000a44 <__udivmoddi4+0x24c>
 8000a9a:	46d6      	mov	lr, sl
 8000a9c:	e77f      	b.n	800099e <__udivmoddi4+0x1a6>
 8000a9e:	4463      	add	r3, ip
 8000aa0:	3802      	subs	r0, #2
 8000aa2:	e74d      	b.n	8000940 <__udivmoddi4+0x148>
 8000aa4:	4606      	mov	r6, r0
 8000aa6:	4623      	mov	r3, r4
 8000aa8:	4608      	mov	r0, r1
 8000aaa:	e70f      	b.n	80008cc <__udivmoddi4+0xd4>
 8000aac:	3e02      	subs	r6, #2
 8000aae:	4463      	add	r3, ip
 8000ab0:	e730      	b.n	8000914 <__udivmoddi4+0x11c>
 8000ab2:	bf00      	nop

08000ab4 <__aeabi_idiv0>:
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <HAL_TIM_PeriodElapsedCallback>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000ab8:	b580      	push	{r7, lr}
 8000aba:	b082      	sub	sp, #8
 8000abc:	af00      	add	r7, sp, #0
 8000abe:	6078      	str	r0, [r7, #4]
	VibeCheckStrobe_PeriodElapsedUpdate(&vc.strobe);
 8000ac0:	4803      	ldr	r0, [pc, #12]	@ (8000ad0 <HAL_TIM_PeriodElapsedCallback+0x18>)
 8000ac2:	f003 fa52 	bl	8003f6a <VibeCheckStrobe_PeriodElapsedUpdate>
}
 8000ac6:	bf00      	nop
 8000ac8:	3708      	adds	r7, #8
 8000aca:	46bd      	mov	sp, r7
 8000acc:	bd80      	pop	{r7, pc}
 8000ace:	bf00      	nop
 8000ad0:	24002dac 	.word	0x24002dac

08000ad4 <HAL_DAC_ConvHalfCpltCallbackCh1>:

void HAL_DAC_ConvHalfCpltCallbackCh1(DAC_HandleTypeDef* hdac)
{
 8000ad4:	b580      	push	{r7, lr}
 8000ad6:	b082      	sub	sp, #8
 8000ad8:	af00      	add	r7, sp, #0
 8000ada:	6078      	str	r0, [r7, #4]
	VibeCheckWaveGen_DMAHalfCpltCallback(&vc.wavegen);
 8000adc:	4803      	ldr	r0, [pc, #12]	@ (8000aec <HAL_DAC_ConvHalfCpltCallbackCh1+0x18>)
 8000ade:	f004 f865 	bl	8004bac <VibeCheckWaveGen_DMAHalfCpltCallback>
}
 8000ae2:	bf00      	nop
 8000ae4:	3708      	adds	r7, #8
 8000ae6:	46bd      	mov	sp, r7
 8000ae8:	bd80      	pop	{r7, pc}
 8000aea:	bf00      	nop
 8000aec:	24002dcc 	.word	0x24002dcc

08000af0 <HAL_DAC_ConvCpltCallbackCh1>:

void HAL_DAC_ConvCpltCallbackCh1(DAC_HandleTypeDef* hdac)
{
 8000af0:	b580      	push	{r7, lr}
 8000af2:	b082      	sub	sp, #8
 8000af4:	af00      	add	r7, sp, #0
 8000af6:	6078      	str	r0, [r7, #4]
	VibeCheckWaveGen_DMACpltCallback(&vc.wavegen);
 8000af8:	4803      	ldr	r0, [pc, #12]	@ (8000b08 <HAL_DAC_ConvCpltCallbackCh1+0x18>)
 8000afa:	f004 f873 	bl	8004be4 <VibeCheckWaveGen_DMACpltCallback>
}
 8000afe:	bf00      	nop
 8000b00:	3708      	adds	r7, #8
 8000b02:	46bd      	mov	sp, r7
 8000b04:	bd80      	pop	{r7, pc}
 8000b06:	bf00      	nop
 8000b08:	24002dcc 	.word	0x24002dcc

08000b0c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000b0c:	b580      	push	{r7, lr}
 8000b0e:	b082      	sub	sp, #8
 8000b10:	af02      	add	r7, sp, #8
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MPU Configuration--------------------------------------------------------*/
  MPU_Config();
 8000b12:	f000 fec1 	bl	8001898 <MPU_Config>

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000b16:	f004 fb61 	bl	80051dc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000b1a:	f000 f839 	bl	8000b90 <SystemClock_Config>

  /* Configure the peripherals common clocks */
  PeriphCommonClock_Config();
 8000b1e:	f000 f8a7 	bl	8000c70 <PeriphCommonClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000b22:	f000 fdab 	bl	800167c <MX_GPIO_Init>
  MX_DMA_Init();
 8000b26:	f000 fd79 	bl	800161c <MX_DMA_Init>
  MX_DAC1_Init();
 8000b2a:	f000 f9b7 	bl	8000e9c <MX_DAC1_Init>
  MX_I2C2_Init();
 8000b2e:	f000 f9f1 	bl	8000f14 <MX_I2C2_Init>
  MX_SPI2_Init();
 8000b32:	f000 fa2f 	bl	8000f94 <MX_SPI2_Init>
  MX_SPI3_Init();
 8000b36:	f000 fa83 	bl	8001040 <MX_SPI3_Init>
  MX_SPI4_Init();
 8000b3a:	f000 fad7 	bl	80010ec <MX_SPI4_Init>
  MX_TIM4_Init();
 8000b3e:	f000 fc5b 	bl	80013f8 <MX_TIM4_Init>
  MX_TIM3_Init();
 8000b42:	f000 fbcb 	bl	80012dc <MX_TIM3_Init>
  MX_USART1_UART_Init();
 8000b46:	f000 fd1d 	bl	8001584 <MX_USART1_UART_Init>
  MX_TIM1_Init();
 8000b4a:	f000 fb25 	bl	8001198 <MX_TIM1_Init>
  MX_TIM2_Init();
 8000b4e:	f000 fb77 	bl	8001240 <MX_TIM2_Init>
  MX_ADC1_Init();
 8000b52:	f000 f8bd 	bl	8000cd0 <MX_ADC1_Init>
  MX_ADC2_Init();
 8000b56:	f000 f937 	bl	8000dc8 <MX_ADC2_Init>
  MX_UART7_Init();
 8000b5a:	f000 fcc5 	bl	80014e8 <MX_UART7_Init>
  MX_USB_DEVICE_Init();
 8000b5e:	f014 faf7 	bl	8015150 <MX_USB_DEVICE_Init>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

  VibeCheck_Init(&vc, &htim3, &htim1, &hdac1, &htim4);
 8000b62:	4b06      	ldr	r3, [pc, #24]	@ (8000b7c <main+0x70>)
 8000b64:	9300      	str	r3, [sp, #0]
 8000b66:	4b06      	ldr	r3, [pc, #24]	@ (8000b80 <main+0x74>)
 8000b68:	4a06      	ldr	r2, [pc, #24]	@ (8000b84 <main+0x78>)
 8000b6a:	4907      	ldr	r1, [pc, #28]	@ (8000b88 <main+0x7c>)
 8000b6c:	4807      	ldr	r0, [pc, #28]	@ (8000b8c <main+0x80>)
 8000b6e:	f001 fd8d 	bl	800268c <VibeCheck_Init>

  while (1)
  {

	  VibeCheck_Loop(&vc);
 8000b72:	4806      	ldr	r0, [pc, #24]	@ (8000b8c <main+0x80>)
 8000b74:	f001 ff36 	bl	80029e4 <VibeCheck_Loop>
 8000b78:	e7fb      	b.n	8000b72 <main+0x66>
 8000b7a:	bf00      	nop
 8000b7c:	2400079c 	.word	0x2400079c
 8000b80:	240003c8 	.word	0x240003c8
 8000b84:	240006b8 	.word	0x240006b8
 8000b88:	24000750 	.word	0x24000750
 8000b8c:	24000988 	.word	0x24000988

08000b90 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000b90:	b580      	push	{r7, lr}
 8000b92:	b09c      	sub	sp, #112	@ 0x70
 8000b94:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000b96:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000b9a:	224c      	movs	r2, #76	@ 0x4c
 8000b9c:	2100      	movs	r1, #0
 8000b9e:	4618      	mov	r0, r3
 8000ba0:	f016 fb97 	bl	80172d2 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ba4:	1d3b      	adds	r3, r7, #4
 8000ba6:	2220      	movs	r2, #32
 8000ba8:	2100      	movs	r1, #0
 8000baa:	4618      	mov	r0, r3
 8000bac:	f016 fb91 	bl	80172d2 <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 8000bb0:	2002      	movs	r0, #2
 8000bb2:	f00a f9fd 	bl	800afb0 <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 8000bb6:	2300      	movs	r3, #0
 8000bb8:	603b      	str	r3, [r7, #0]
 8000bba:	4b2c      	ldr	r3, [pc, #176]	@ (8000c6c <SystemClock_Config+0xdc>)
 8000bbc:	699b      	ldr	r3, [r3, #24]
 8000bbe:	4a2b      	ldr	r2, [pc, #172]	@ (8000c6c <SystemClock_Config+0xdc>)
 8000bc0:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8000bc4:	6193      	str	r3, [r2, #24]
 8000bc6:	4b29      	ldr	r3, [pc, #164]	@ (8000c6c <SystemClock_Config+0xdc>)
 8000bc8:	699b      	ldr	r3, [r3, #24]
 8000bca:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000bce:	603b      	str	r3, [r7, #0]
 8000bd0:	683b      	ldr	r3, [r7, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 8000bd2:	bf00      	nop
 8000bd4:	4b25      	ldr	r3, [pc, #148]	@ (8000c6c <SystemClock_Config+0xdc>)
 8000bd6:	699b      	ldr	r3, [r3, #24]
 8000bd8:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8000bdc:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8000be0:	d1f8      	bne.n	8000bd4 <SystemClock_Config+0x44>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_HSE;
 8000be2:	2321      	movs	r3, #33	@ 0x21
 8000be4:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000be6:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000bea:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 8000bec:	2301      	movs	r3, #1
 8000bee:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000bf0:	2302      	movs	r3, #2
 8000bf2:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000bf4:	2302      	movs	r3, #2
 8000bf6:	64fb      	str	r3, [r7, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLM = 2;
 8000bf8:	2302      	movs	r3, #2
 8000bfa:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLN = 40;
 8000bfc:	2328      	movs	r3, #40	@ 0x28
 8000bfe:	657b      	str	r3, [r7, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLP = 1;
 8000c00:	2301      	movs	r3, #1
 8000c02:	65bb      	str	r3, [r7, #88]	@ 0x58
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8000c04:	2302      	movs	r3, #2
 8000c06:	65fb      	str	r3, [r7, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000c08:	2302      	movs	r3, #2
 8000c0a:	663b      	str	r3, [r7, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 8000c0c:	230c      	movs	r3, #12
 8000c0e:	667b      	str	r3, [r7, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 8000c10:	2300      	movs	r3, #0
 8000c12:	66bb      	str	r3, [r7, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 8000c14:	2300      	movs	r3, #0
 8000c16:	66fb      	str	r3, [r7, #108]	@ 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000c18:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000c1c:	4618      	mov	r0, r3
 8000c1e:	f00a fa11 	bl	800b044 <HAL_RCC_OscConfig>
 8000c22:	4603      	mov	r3, r0
 8000c24:	2b00      	cmp	r3, #0
 8000c26:	d001      	beq.n	8000c2c <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8000c28:	f000 fe62 	bl	80018f0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000c2c:	233f      	movs	r3, #63	@ 0x3f
 8000c2e:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000c30:	2303      	movs	r3, #3
 8000c32:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 8000c34:	2300      	movs	r3, #0
 8000c36:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 8000c38:	2308      	movs	r3, #8
 8000c3a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 8000c3c:	2340      	movs	r3, #64	@ 0x40
 8000c3e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 8000c40:	2340      	movs	r3, #64	@ 0x40
 8000c42:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 8000c44:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000c48:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 8000c4a:	2340      	movs	r3, #64	@ 0x40
 8000c4c:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8000c4e:	1d3b      	adds	r3, r7, #4
 8000c50:	2103      	movs	r1, #3
 8000c52:	4618      	mov	r0, r3
 8000c54:	f00a fdd0 	bl	800b7f8 <HAL_RCC_ClockConfig>
 8000c58:	4603      	mov	r3, r0
 8000c5a:	2b00      	cmp	r3, #0
 8000c5c:	d001      	beq.n	8000c62 <SystemClock_Config+0xd2>
  {
    Error_Handler();
 8000c5e:	f000 fe47 	bl	80018f0 <Error_Handler>
  }
}
 8000c62:	bf00      	nop
 8000c64:	3770      	adds	r7, #112	@ 0x70
 8000c66:	46bd      	mov	sp, r7
 8000c68:	bd80      	pop	{r7, pc}
 8000c6a:	bf00      	nop
 8000c6c:	58024800 	.word	0x58024800

08000c70 <PeriphCommonClock_Config>:
/**
  * @brief Peripherals Common Clock Configuration
  * @retval None
  */
void PeriphCommonClock_Config(void)
{
 8000c70:	b580      	push	{r7, lr}
 8000c72:	b0ae      	sub	sp, #184	@ 0xb8
 8000c74:	af00      	add	r7, sp, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000c76:	463b      	mov	r3, r7
 8000c78:	22b8      	movs	r2, #184	@ 0xb8
 8000c7a:	2100      	movs	r1, #0
 8000c7c:	4618      	mov	r0, r3
 8000c7e:	f016 fb28 	bl	80172d2 <memset>

  /** Initializes the peripherals clock
  */
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8000c82:	f44f 2200 	mov.w	r2, #524288	@ 0x80000
 8000c86:	f04f 0300 	mov.w	r3, #0
 8000c8a:	e9c7 2300 	strd	r2, r3, [r7]
  PeriphClkInitStruct.PLL2.PLL2M = 2;
 8000c8e:	2302      	movs	r3, #2
 8000c90:	60bb      	str	r3, [r7, #8]
  PeriphClkInitStruct.PLL2.PLL2N = 16;
 8000c92:	2310      	movs	r3, #16
 8000c94:	60fb      	str	r3, [r7, #12]
  PeriphClkInitStruct.PLL2.PLL2P = 2;
 8000c96:	2302      	movs	r3, #2
 8000c98:	613b      	str	r3, [r7, #16]
  PeriphClkInitStruct.PLL2.PLL2Q = 2;
 8000c9a:	2302      	movs	r3, #2
 8000c9c:	617b      	str	r3, [r7, #20]
  PeriphClkInitStruct.PLL2.PLL2R = 2;
 8000c9e:	2302      	movs	r3, #2
 8000ca0:	61bb      	str	r3, [r7, #24]
  PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 8000ca2:	23c0      	movs	r3, #192	@ 0xc0
 8000ca4:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 8000ca6:	2300      	movs	r3, #0
 8000ca8:	623b      	str	r3, [r7, #32]
  PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 8000caa:	2300      	movs	r3, #0
 8000cac:	627b      	str	r3, [r7, #36]	@ 0x24
  PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 8000cae:	2300      	movs	r3, #0
 8000cb0:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000cb4:	463b      	mov	r3, r7
 8000cb6:	4618      	mov	r0, r3
 8000cb8:	f00b f92a 	bl	800bf10 <HAL_RCCEx_PeriphCLKConfig>
 8000cbc:	4603      	mov	r3, r0
 8000cbe:	2b00      	cmp	r3, #0
 8000cc0:	d001      	beq.n	8000cc6 <PeriphCommonClock_Config+0x56>
  {
    Error_Handler();
 8000cc2:	f000 fe15 	bl	80018f0 <Error_Handler>
  }
}
 8000cc6:	bf00      	nop
 8000cc8:	37b8      	adds	r7, #184	@ 0xb8
 8000cca:	46bd      	mov	sp, r7
 8000ccc:	bd80      	pop	{r7, pc}
	...

08000cd0 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000cd0:	b580      	push	{r7, lr}
 8000cd2:	b08c      	sub	sp, #48	@ 0x30
 8000cd4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 8000cd6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000cda:	2200      	movs	r2, #0
 8000cdc:	601a      	str	r2, [r3, #0]
 8000cde:	605a      	str	r2, [r3, #4]
 8000ce0:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 8000ce2:	463b      	mov	r3, r7
 8000ce4:	2224      	movs	r2, #36	@ 0x24
 8000ce6:	2100      	movs	r1, #0
 8000ce8:	4618      	mov	r0, r3
 8000cea:	f016 faf2 	bl	80172d2 <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 8000cee:	4b32      	ldr	r3, [pc, #200]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000cf0:	4a32      	ldr	r2, [pc, #200]	@ (8000dbc <MX_ADC1_Init+0xec>)
 8000cf2:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV2;
 8000cf4:	4b30      	ldr	r3, [pc, #192]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000cf6:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 8000cfa:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 8000cfc:	4b2e      	ldr	r3, [pc, #184]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000cfe:	2200      	movs	r2, #0
 8000d00:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8000d02:	4b2d      	ldr	r3, [pc, #180]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d04:	2200      	movs	r2, #0
 8000d06:	611a      	str	r2, [r3, #16]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000d08:	4b2b      	ldr	r3, [pc, #172]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d0a:	2204      	movs	r2, #4
 8000d0c:	615a      	str	r2, [r3, #20]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8000d0e:	4b2a      	ldr	r3, [pc, #168]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d10:	2200      	movs	r2, #0
 8000d12:	761a      	strb	r2, [r3, #24]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000d14:	4b28      	ldr	r3, [pc, #160]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d16:	2200      	movs	r2, #0
 8000d18:	765a      	strb	r2, [r3, #25]
  hadc1.Init.NbrOfConversion = 1;
 8000d1a:	4b27      	ldr	r3, [pc, #156]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d1c:	2201      	movs	r2, #1
 8000d1e:	61da      	str	r2, [r3, #28]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000d20:	4b25      	ldr	r3, [pc, #148]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d22:	2200      	movs	r2, #0
 8000d24:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000d28:	4b23      	ldr	r3, [pc, #140]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d2a:	2200      	movs	r2, #0
 8000d2c:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000d2e:	4b22      	ldr	r3, [pc, #136]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d30:	2200      	movs	r2, #0
 8000d32:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 8000d34:	4b20      	ldr	r3, [pc, #128]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d36:	2200      	movs	r2, #0
 8000d38:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8000d3a:	4b1f      	ldr	r3, [pc, #124]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d3c:	2200      	movs	r2, #0
 8000d3e:	63da      	str	r2, [r3, #60]	@ 0x3c
  hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 8000d40:	4b1d      	ldr	r3, [pc, #116]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d42:	2200      	movs	r2, #0
 8000d44:	641a      	str	r2, [r3, #64]	@ 0x40
  hadc1.Init.OversamplingMode = DISABLE;
 8000d46:	4b1c      	ldr	r3, [pc, #112]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d48:	2200      	movs	r2, #0
 8000d4a:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
  hadc1.Init.Oversampling.Ratio = 1;
 8000d4e:	4b1a      	ldr	r3, [pc, #104]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d50:	2201      	movs	r2, #1
 8000d52:	649a      	str	r2, [r3, #72]	@ 0x48
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000d54:	4818      	ldr	r0, [pc, #96]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d56:	f004 fd3d 	bl	80057d4 <HAL_ADC_Init>
 8000d5a:	4603      	mov	r3, r0
 8000d5c:	2b00      	cmp	r3, #0
 8000d5e:	d001      	beq.n	8000d64 <MX_ADC1_Init+0x94>
  {
    Error_Handler();
 8000d60:	f000 fdc6 	bl	80018f0 <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 8000d64:	2300      	movs	r3, #0
 8000d66:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 8000d68:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000d6c:	4619      	mov	r1, r3
 8000d6e:	4812      	ldr	r0, [pc, #72]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d70:	f005 fd7c 	bl	800686c <HAL_ADCEx_MultiModeConfigChannel>
 8000d74:	4603      	mov	r3, r0
 8000d76:	2b00      	cmp	r3, #0
 8000d78:	d001      	beq.n	8000d7e <MX_ADC1_Init+0xae>
  {
    Error_Handler();
 8000d7a:	f000 fdb9 	bl	80018f0 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_4;
 8000d7e:	4b10      	ldr	r3, [pc, #64]	@ (8000dc0 <MX_ADC1_Init+0xf0>)
 8000d80:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000d82:	2306      	movs	r3, #6
 8000d84:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8000d86:	2300      	movs	r3, #0
 8000d88:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_DIFFERENTIAL_ENDED;
 8000d8a:	4b0e      	ldr	r3, [pc, #56]	@ (8000dc4 <MX_ADC1_Init+0xf4>)
 8000d8c:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8000d8e:	2304      	movs	r3, #4
 8000d90:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 8000d92:	2300      	movs	r3, #0
 8000d94:	617b      	str	r3, [r7, #20]
  sConfig.OffsetSignedSaturation = DISABLE;
 8000d96:	2300      	movs	r3, #0
 8000d98:	f887 3021 	strb.w	r3, [r7, #33]	@ 0x21
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000d9c:	463b      	mov	r3, r7
 8000d9e:	4619      	mov	r1, r3
 8000da0:	4805      	ldr	r0, [pc, #20]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000da2:	f004 ff1f 	bl	8005be4 <HAL_ADC_ConfigChannel>
 8000da6:	4603      	mov	r3, r0
 8000da8:	2b00      	cmp	r3, #0
 8000daa:	d001      	beq.n	8000db0 <MX_ADC1_Init+0xe0>
  {
    Error_Handler();
 8000dac:	f000 fda0 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000db0:	bf00      	nop
 8000db2:	3730      	adds	r7, #48	@ 0x30
 8000db4:	46bd      	mov	sp, r7
 8000db6:	bd80      	pop	{r7, pc}
 8000db8:	240002e8 	.word	0x240002e8
 8000dbc:	40022000 	.word	0x40022000
 8000dc0:	10c00010 	.word	0x10c00010
 8000dc4:	47ff0000 	.word	0x47ff0000

08000dc8 <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 8000dc8:	b580      	push	{r7, lr}
 8000dca:	b08a      	sub	sp, #40	@ 0x28
 8000dcc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000dce:	1d3b      	adds	r3, r7, #4
 8000dd0:	2224      	movs	r2, #36	@ 0x24
 8000dd2:	2100      	movs	r1, #0
 8000dd4:	4618      	mov	r0, r3
 8000dd6:	f016 fa7c 	bl	80172d2 <memset>

  /* USER CODE END ADC2_Init 1 */

  /** Common config
  */
  hadc2.Instance = ADC2;
 8000dda:	4b2c      	ldr	r3, [pc, #176]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000ddc:	4a2c      	ldr	r2, [pc, #176]	@ (8000e90 <MX_ADC2_Init+0xc8>)
 8000dde:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV2;
 8000de0:	4b2a      	ldr	r3, [pc, #168]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000de2:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 8000de6:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_16B;
 8000de8:	4b28      	ldr	r3, [pc, #160]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000dea:	2200      	movs	r2, #0
 8000dec:	609a      	str	r2, [r3, #8]
  hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8000dee:	4b27      	ldr	r3, [pc, #156]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000df0:	2200      	movs	r2, #0
 8000df2:	611a      	str	r2, [r3, #16]
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000df4:	4b25      	ldr	r3, [pc, #148]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000df6:	2204      	movs	r2, #4
 8000df8:	615a      	str	r2, [r3, #20]
  hadc2.Init.LowPowerAutoWait = DISABLE;
 8000dfa:	4b24      	ldr	r3, [pc, #144]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000dfc:	2200      	movs	r2, #0
 8000dfe:	761a      	strb	r2, [r3, #24]
  hadc2.Init.ContinuousConvMode = DISABLE;
 8000e00:	4b22      	ldr	r3, [pc, #136]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e02:	2200      	movs	r2, #0
 8000e04:	765a      	strb	r2, [r3, #25]
  hadc2.Init.NbrOfConversion = 1;
 8000e06:	4b21      	ldr	r3, [pc, #132]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e08:	2201      	movs	r2, #1
 8000e0a:	61da      	str	r2, [r3, #28]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8000e0c:	4b1f      	ldr	r3, [pc, #124]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e0e:	2200      	movs	r2, #0
 8000e10:	f883 2020 	strb.w	r2, [r3, #32]
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000e14:	4b1d      	ldr	r3, [pc, #116]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e16:	2200      	movs	r2, #0
 8000e18:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000e1a:	4b1c      	ldr	r3, [pc, #112]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e1c:	2200      	movs	r2, #0
 8000e1e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc2.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 8000e20:	4b1a      	ldr	r3, [pc, #104]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e22:	2200      	movs	r2, #0
 8000e24:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8000e26:	4b19      	ldr	r3, [pc, #100]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e28:	2200      	movs	r2, #0
 8000e2a:	63da      	str	r2, [r3, #60]	@ 0x3c
  hadc2.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 8000e2c:	4b17      	ldr	r3, [pc, #92]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e2e:	2200      	movs	r2, #0
 8000e30:	641a      	str	r2, [r3, #64]	@ 0x40
  hadc2.Init.OversamplingMode = DISABLE;
 8000e32:	4b16      	ldr	r3, [pc, #88]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e34:	2200      	movs	r2, #0
 8000e36:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
  hadc2.Init.Oversampling.Ratio = 1;
 8000e3a:	4b14      	ldr	r3, [pc, #80]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e3c:	2201      	movs	r2, #1
 8000e3e:	649a      	str	r2, [r3, #72]	@ 0x48
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8000e40:	4812      	ldr	r0, [pc, #72]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e42:	f004 fcc7 	bl	80057d4 <HAL_ADC_Init>
 8000e46:	4603      	mov	r3, r0
 8000e48:	2b00      	cmp	r3, #0
 8000e4a:	d001      	beq.n	8000e50 <MX_ADC2_Init+0x88>
  {
    Error_Handler();
 8000e4c:	f000 fd50 	bl	80018f0 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 8000e50:	4b10      	ldr	r3, [pc, #64]	@ (8000e94 <MX_ADC2_Init+0xcc>)
 8000e52:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000e54:	2306      	movs	r3, #6
 8000e56:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8000e58:	2300      	movs	r3, #0
 8000e5a:	60fb      	str	r3, [r7, #12]
  sConfig.SingleDiff = ADC_DIFFERENTIAL_ENDED;
 8000e5c:	4b0e      	ldr	r3, [pc, #56]	@ (8000e98 <MX_ADC2_Init+0xd0>)
 8000e5e:	613b      	str	r3, [r7, #16]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8000e60:	2304      	movs	r3, #4
 8000e62:	617b      	str	r3, [r7, #20]
  sConfig.Offset = 0;
 8000e64:	2300      	movs	r3, #0
 8000e66:	61bb      	str	r3, [r7, #24]
  sConfig.OffsetSignedSaturation = DISABLE;
 8000e68:	2300      	movs	r3, #0
 8000e6a:	f887 3025 	strb.w	r3, [r7, #37]	@ 0x25
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8000e6e:	1d3b      	adds	r3, r7, #4
 8000e70:	4619      	mov	r1, r3
 8000e72:	4806      	ldr	r0, [pc, #24]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e74:	f004 feb6 	bl	8005be4 <HAL_ADC_ConfigChannel>
 8000e78:	4603      	mov	r3, r0
 8000e7a:	2b00      	cmp	r3, #0
 8000e7c:	d001      	beq.n	8000e82 <MX_ADC2_Init+0xba>
  {
    Error_Handler();
 8000e7e:	f000 fd37 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 8000e82:	bf00      	nop
 8000e84:	3728      	adds	r7, #40	@ 0x28
 8000e86:	46bd      	mov	sp, r7
 8000e88:	bd80      	pop	{r7, pc}
 8000e8a:	bf00      	nop
 8000e8c:	24000358 	.word	0x24000358
 8000e90:	40022100 	.word	0x40022100
 8000e94:	0c900008 	.word	0x0c900008
 8000e98:	47ff0000 	.word	0x47ff0000

08000e9c <MX_DAC1_Init>:
  * @brief DAC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_DAC1_Init(void)
{
 8000e9c:	b580      	push	{r7, lr}
 8000e9e:	b08a      	sub	sp, #40	@ 0x28
 8000ea0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN DAC1_Init 0 */

  /* USER CODE END DAC1_Init 0 */

  DAC_ChannelConfTypeDef sConfig = {0};
 8000ea2:	1d3b      	adds	r3, r7, #4
 8000ea4:	2224      	movs	r2, #36	@ 0x24
 8000ea6:	2100      	movs	r1, #0
 8000ea8:	4618      	mov	r0, r3
 8000eaa:	f016 fa12 	bl	80172d2 <memset>

  /* USER CODE END DAC1_Init 1 */

  /** DAC Initialization
  */
  hdac1.Instance = DAC1;
 8000eae:	4b17      	ldr	r3, [pc, #92]	@ (8000f0c <MX_DAC1_Init+0x70>)
 8000eb0:	4a17      	ldr	r2, [pc, #92]	@ (8000f10 <MX_DAC1_Init+0x74>)
 8000eb2:	601a      	str	r2, [r3, #0]
  if (HAL_DAC_Init(&hdac1) != HAL_OK)
 8000eb4:	4815      	ldr	r0, [pc, #84]	@ (8000f0c <MX_DAC1_Init+0x70>)
 8000eb6:	f005 ff43 	bl	8006d40 <HAL_DAC_Init>
 8000eba:	4603      	mov	r3, r0
 8000ebc:	2b00      	cmp	r3, #0
 8000ebe:	d001      	beq.n	8000ec4 <MX_DAC1_Init+0x28>
  {
    Error_Handler();
 8000ec0:	f000 fd16 	bl	80018f0 <Error_Handler>
  }

  /** DAC channel OUT1 config
  */
  sConfig.DAC_SampleAndHold = DAC_SAMPLEANDHOLD_DISABLE;
 8000ec4:	2300      	movs	r3, #0
 8000ec6:	607b      	str	r3, [r7, #4]
  sConfig.DAC_Trigger = DAC_TRIGGER_T1_TRGO;
 8000ec8:	2306      	movs	r3, #6
 8000eca:	60bb      	str	r3, [r7, #8]
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_DISABLE;
 8000ecc:	2302      	movs	r3, #2
 8000ece:	60fb      	str	r3, [r7, #12]
  sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_DISABLE;
 8000ed0:	2301      	movs	r3, #1
 8000ed2:	613b      	str	r3, [r7, #16]
  sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 8000ed4:	2300      	movs	r3, #0
 8000ed6:	617b      	str	r3, [r7, #20]
  if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 8000ed8:	1d3b      	adds	r3, r7, #4
 8000eda:	2200      	movs	r2, #0
 8000edc:	4619      	mov	r1, r3
 8000ede:	480b      	ldr	r0, [pc, #44]	@ (8000f0c <MX_DAC1_Init+0x70>)
 8000ee0:	f006 f81a 	bl	8006f18 <HAL_DAC_ConfigChannel>
 8000ee4:	4603      	mov	r3, r0
 8000ee6:	2b00      	cmp	r3, #0
 8000ee8:	d001      	beq.n	8000eee <MX_DAC1_Init+0x52>
  {
    Error_Handler();
 8000eea:	f000 fd01 	bl	80018f0 <Error_Handler>
  }

  /** DAC channel OUT2 config
  */
  if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8000eee:	1d3b      	adds	r3, r7, #4
 8000ef0:	2210      	movs	r2, #16
 8000ef2:	4619      	mov	r1, r3
 8000ef4:	4805      	ldr	r0, [pc, #20]	@ (8000f0c <MX_DAC1_Init+0x70>)
 8000ef6:	f006 f80f 	bl	8006f18 <HAL_DAC_ConfigChannel>
 8000efa:	4603      	mov	r3, r0
 8000efc:	2b00      	cmp	r3, #0
 8000efe:	d001      	beq.n	8000f04 <MX_DAC1_Init+0x68>
  {
    Error_Handler();
 8000f00:	f000 fcf6 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN DAC1_Init 2 */

  /* USER CODE END DAC1_Init 2 */

}
 8000f04:	bf00      	nop
 8000f06:	3728      	adds	r7, #40	@ 0x28
 8000f08:	46bd      	mov	sp, r7
 8000f0a:	bd80      	pop	{r7, pc}
 8000f0c:	240003c8 	.word	0x240003c8
 8000f10:	40007400 	.word	0x40007400

08000f14 <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 8000f14:	b580      	push	{r7, lr}
 8000f16:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 8000f18:	4b1b      	ldr	r3, [pc, #108]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f1a:	4a1c      	ldr	r2, [pc, #112]	@ (8000f8c <MX_I2C2_Init+0x78>)
 8000f1c:	601a      	str	r2, [r3, #0]
  hi2c2.Init.Timing = 0x307075B1;
 8000f1e:	4b1a      	ldr	r3, [pc, #104]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f20:	4a1b      	ldr	r2, [pc, #108]	@ (8000f90 <MX_I2C2_Init+0x7c>)
 8000f22:	605a      	str	r2, [r3, #4]
  hi2c2.Init.OwnAddress1 = 0;
 8000f24:	4b18      	ldr	r3, [pc, #96]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f26:	2200      	movs	r2, #0
 8000f28:	609a      	str	r2, [r3, #8]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000f2a:	4b17      	ldr	r3, [pc, #92]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f2c:	2201      	movs	r2, #1
 8000f2e:	60da      	str	r2, [r3, #12]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000f30:	4b15      	ldr	r3, [pc, #84]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f32:	2200      	movs	r2, #0
 8000f34:	611a      	str	r2, [r3, #16]
  hi2c2.Init.OwnAddress2 = 0;
 8000f36:	4b14      	ldr	r3, [pc, #80]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f38:	2200      	movs	r2, #0
 8000f3a:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8000f3c:	4b12      	ldr	r3, [pc, #72]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f3e:	2200      	movs	r2, #0
 8000f40:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000f42:	4b11      	ldr	r3, [pc, #68]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f44:	2200      	movs	r2, #0
 8000f46:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000f48:	4b0f      	ldr	r3, [pc, #60]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f4a:	2200      	movs	r2, #0
 8000f4c:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8000f4e:	480e      	ldr	r0, [pc, #56]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f50:	f008 fc5c 	bl	800980c <HAL_I2C_Init>
 8000f54:	4603      	mov	r3, r0
 8000f56:	2b00      	cmp	r3, #0
 8000f58:	d001      	beq.n	8000f5e <MX_I2C2_Init+0x4a>
  {
    Error_Handler();
 8000f5a:	f000 fcc9 	bl	80018f0 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8000f5e:	2100      	movs	r1, #0
 8000f60:	4809      	ldr	r0, [pc, #36]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f62:	f008 fcef 	bl	8009944 <HAL_I2CEx_ConfigAnalogFilter>
 8000f66:	4603      	mov	r3, r0
 8000f68:	2b00      	cmp	r3, #0
 8000f6a:	d001      	beq.n	8000f70 <MX_I2C2_Init+0x5c>
  {
    Error_Handler();
 8000f6c:	f000 fcc0 	bl	80018f0 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 8000f70:	2100      	movs	r1, #0
 8000f72:	4805      	ldr	r0, [pc, #20]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f74:	f008 fd31 	bl	80099da <HAL_I2CEx_ConfigDigitalFilter>
 8000f78:	4603      	mov	r3, r0
 8000f7a:	2b00      	cmp	r3, #0
 8000f7c:	d001      	beq.n	8000f82 <MX_I2C2_Init+0x6e>
  {
    Error_Handler();
 8000f7e:	f000 fcb7 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 8000f82:	bf00      	nop
 8000f84:	bd80      	pop	{r7, pc}
 8000f86:	bf00      	nop
 8000f88:	240004cc 	.word	0x240004cc
 8000f8c:	40005800 	.word	0x40005800
 8000f90:	307075b1 	.word	0x307075b1

08000f94 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8000f94:	b580      	push	{r7, lr}
 8000f96:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8000f98:	4b27      	ldr	r3, [pc, #156]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000f9a:	4a28      	ldr	r2, [pc, #160]	@ (800103c <MX_SPI2_Init+0xa8>)
 8000f9c:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8000f9e:	4b26      	ldr	r3, [pc, #152]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fa0:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8000fa4:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8000fa6:	4b24      	ldr	r3, [pc, #144]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fa8:	2200      	movs	r2, #0
 8000faa:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 8000fac:	4b22      	ldr	r3, [pc, #136]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fae:	2203      	movs	r2, #3
 8000fb0:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000fb2:	4b21      	ldr	r3, [pc, #132]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fb4:	2200      	movs	r2, #0
 8000fb6:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000fb8:	4b1f      	ldr	r3, [pc, #124]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fba:	2200      	movs	r2, #0
 8000fbc:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8000fbe:	4b1e      	ldr	r3, [pc, #120]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fc0:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000fc4:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000fc6:	4b1c      	ldr	r3, [pc, #112]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fc8:	2200      	movs	r2, #0
 8000fca:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000fcc:	4b1a      	ldr	r3, [pc, #104]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fce:	2200      	movs	r2, #0
 8000fd0:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8000fd2:	4b19      	ldr	r3, [pc, #100]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fd4:	2200      	movs	r2, #0
 8000fd6:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000fd8:	4b17      	ldr	r3, [pc, #92]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fda:	2200      	movs	r2, #0
 8000fdc:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 0x0;
 8000fde:	4b16      	ldr	r3, [pc, #88]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fe0:	2200      	movs	r2, #0
 8000fe2:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8000fe4:	4b14      	ldr	r3, [pc, #80]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fe6:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000fea:	635a      	str	r2, [r3, #52]	@ 0x34
  hspi2.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8000fec:	4b12      	ldr	r3, [pc, #72]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fee:	2200      	movs	r2, #0
 8000ff0:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi2.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 8000ff2:	4b11      	ldr	r3, [pc, #68]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	63da      	str	r2, [r3, #60]	@ 0x3c
  hspi2.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000ff8:	4b0f      	ldr	r3, [pc, #60]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000ffa:	2200      	movs	r2, #0
 8000ffc:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi2.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000ffe:	4b0e      	ldr	r3, [pc, #56]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8001000:	2200      	movs	r2, #0
 8001002:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi2.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 8001004:	4b0c      	ldr	r3, [pc, #48]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8001006:	2200      	movs	r2, #0
 8001008:	649a      	str	r2, [r3, #72]	@ 0x48
  hspi2.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 800100a:	4b0b      	ldr	r3, [pc, #44]	@ (8001038 <MX_SPI2_Init+0xa4>)
 800100c:	2200      	movs	r2, #0
 800100e:	64da      	str	r2, [r3, #76]	@ 0x4c
  hspi2.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 8001010:	4b09      	ldr	r3, [pc, #36]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8001012:	2200      	movs	r2, #0
 8001014:	651a      	str	r2, [r3, #80]	@ 0x50
  hspi2.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 8001016:	4b08      	ldr	r3, [pc, #32]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8001018:	2200      	movs	r2, #0
 800101a:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi2.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 800101c:	4b06      	ldr	r3, [pc, #24]	@ (8001038 <MX_SPI2_Init+0xa4>)
 800101e:	2200      	movs	r2, #0
 8001020:	659a      	str	r2, [r3, #88]	@ 0x58
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8001022:	4805      	ldr	r0, [pc, #20]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8001024:	f00d fb5a 	bl	800e6dc <HAL_SPI_Init>
 8001028:	4603      	mov	r3, r0
 800102a:	2b00      	cmp	r3, #0
 800102c:	d001      	beq.n	8001032 <MX_SPI2_Init+0x9e>
  {
    Error_Handler();
 800102e:	f000 fc5f 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8001032:	bf00      	nop
 8001034:	bd80      	pop	{r7, pc}
 8001036:	bf00      	nop
 8001038:	24000520 	.word	0x24000520
 800103c:	40003800 	.word	0x40003800

08001040 <MX_SPI3_Init>:
  * @brief SPI3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI3_Init(void)
{
 8001040:	b580      	push	{r7, lr}
 8001042:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  /* SPI3 parameter configuration*/
  hspi3.Instance = SPI3;
 8001044:	4b27      	ldr	r3, [pc, #156]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 8001046:	4a28      	ldr	r2, [pc, #160]	@ (80010e8 <MX_SPI3_Init+0xa8>)
 8001048:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 800104a:	4b26      	ldr	r3, [pc, #152]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 800104c:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8001050:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 8001052:	4b24      	ldr	r3, [pc, #144]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 8001054:	2200      	movs	r2, #0
 8001056:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_4BIT;
 8001058:	4b22      	ldr	r3, [pc, #136]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 800105a:	2203      	movs	r2, #3
 800105c:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 800105e:	4b21      	ldr	r3, [pc, #132]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 8001060:	2200      	movs	r2, #0
 8001062:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001064:	4b1f      	ldr	r3, [pc, #124]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 8001066:	2200      	movs	r2, #0
 8001068:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 800106a:	4b1e      	ldr	r3, [pc, #120]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 800106c:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001070:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001072:	4b1c      	ldr	r3, [pc, #112]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 8001074:	2200      	movs	r2, #0
 8001076:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001078:	4b1a      	ldr	r3, [pc, #104]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 800107a:	2200      	movs	r2, #0
 800107c:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 800107e:	4b19      	ldr	r3, [pc, #100]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 8001080:	2200      	movs	r2, #0
 8001082:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001084:	4b17      	ldr	r3, [pc, #92]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 8001086:	2200      	movs	r2, #0
 8001088:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi3.Init.CRCPolynomial = 0x0;
 800108a:	4b16      	ldr	r3, [pc, #88]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 800108c:	2200      	movs	r2, #0
 800108e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi3.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8001090:	4b14      	ldr	r3, [pc, #80]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 8001092:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001096:	635a      	str	r2, [r3, #52]	@ 0x34
  hspi3.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8001098:	4b12      	ldr	r3, [pc, #72]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 800109a:	2200      	movs	r2, #0
 800109c:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi3.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 800109e:	4b11      	ldr	r3, [pc, #68]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010a0:	2200      	movs	r2, #0
 80010a2:	63da      	str	r2, [r3, #60]	@ 0x3c
  hspi3.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 80010a4:	4b0f      	ldr	r3, [pc, #60]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010a6:	2200      	movs	r2, #0
 80010a8:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi3.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 80010aa:	4b0e      	ldr	r3, [pc, #56]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010ac:	2200      	movs	r2, #0
 80010ae:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi3.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 80010b0:	4b0c      	ldr	r3, [pc, #48]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010b2:	2200      	movs	r2, #0
 80010b4:	649a      	str	r2, [r3, #72]	@ 0x48
  hspi3.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 80010b6:	4b0b      	ldr	r3, [pc, #44]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010b8:	2200      	movs	r2, #0
 80010ba:	64da      	str	r2, [r3, #76]	@ 0x4c
  hspi3.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 80010bc:	4b09      	ldr	r3, [pc, #36]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010be:	2200      	movs	r2, #0
 80010c0:	651a      	str	r2, [r3, #80]	@ 0x50
  hspi3.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 80010c2:	4b08      	ldr	r3, [pc, #32]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010c4:	2200      	movs	r2, #0
 80010c6:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi3.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 80010c8:	4b06      	ldr	r3, [pc, #24]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010ca:	2200      	movs	r2, #0
 80010cc:	659a      	str	r2, [r3, #88]	@ 0x58
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 80010ce:	4805      	ldr	r0, [pc, #20]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010d0:	f00d fb04 	bl	800e6dc <HAL_SPI_Init>
 80010d4:	4603      	mov	r3, r0
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	d001      	beq.n	80010de <MX_SPI3_Init+0x9e>
  {
    Error_Handler();
 80010da:	f000 fc09 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 80010de:	bf00      	nop
 80010e0:	bd80      	pop	{r7, pc}
 80010e2:	bf00      	nop
 80010e4:	240005a8 	.word	0x240005a8
 80010e8:	40003c00 	.word	0x40003c00

080010ec <MX_SPI4_Init>:
  * @brief SPI4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI4_Init(void)
{
 80010ec:	b580      	push	{r7, lr}
 80010ee:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI4_Init 1 */

  /* USER CODE END SPI4_Init 1 */
  /* SPI4 parameter configuration*/
  hspi4.Instance = SPI4;
 80010f0:	4b27      	ldr	r3, [pc, #156]	@ (8001190 <MX_SPI4_Init+0xa4>)
 80010f2:	4a28      	ldr	r2, [pc, #160]	@ (8001194 <MX_SPI4_Init+0xa8>)
 80010f4:	601a      	str	r2, [r3, #0]
  hspi4.Init.Mode = SPI_MODE_MASTER;
 80010f6:	4b26      	ldr	r3, [pc, #152]	@ (8001190 <MX_SPI4_Init+0xa4>)
 80010f8:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 80010fc:	605a      	str	r2, [r3, #4]
  hspi4.Init.Direction = SPI_DIRECTION_2LINES;
 80010fe:	4b24      	ldr	r3, [pc, #144]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001100:	2200      	movs	r2, #0
 8001102:	609a      	str	r2, [r3, #8]
  hspi4.Init.DataSize = SPI_DATASIZE_4BIT;
 8001104:	4b22      	ldr	r3, [pc, #136]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001106:	2203      	movs	r2, #3
 8001108:	60da      	str	r2, [r3, #12]
  hspi4.Init.CLKPolarity = SPI_POLARITY_LOW;
 800110a:	4b21      	ldr	r3, [pc, #132]	@ (8001190 <MX_SPI4_Init+0xa4>)
 800110c:	2200      	movs	r2, #0
 800110e:	611a      	str	r2, [r3, #16]
  hspi4.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001110:	4b1f      	ldr	r3, [pc, #124]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001112:	2200      	movs	r2, #0
 8001114:	615a      	str	r2, [r3, #20]
  hspi4.Init.NSS = SPI_NSS_SOFT;
 8001116:	4b1e      	ldr	r3, [pc, #120]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001118:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800111c:	619a      	str	r2, [r3, #24]
  hspi4.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800111e:	4b1c      	ldr	r3, [pc, #112]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001120:	2200      	movs	r2, #0
 8001122:	61da      	str	r2, [r3, #28]
  hspi4.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001124:	4b1a      	ldr	r3, [pc, #104]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001126:	2200      	movs	r2, #0
 8001128:	621a      	str	r2, [r3, #32]
  hspi4.Init.TIMode = SPI_TIMODE_DISABLE;
 800112a:	4b19      	ldr	r3, [pc, #100]	@ (8001190 <MX_SPI4_Init+0xa4>)
 800112c:	2200      	movs	r2, #0
 800112e:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi4.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001130:	4b17      	ldr	r3, [pc, #92]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001132:	2200      	movs	r2, #0
 8001134:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi4.Init.CRCPolynomial = 0x0;
 8001136:	4b16      	ldr	r3, [pc, #88]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001138:	2200      	movs	r2, #0
 800113a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi4.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 800113c:	4b14      	ldr	r3, [pc, #80]	@ (8001190 <MX_SPI4_Init+0xa4>)
 800113e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001142:	635a      	str	r2, [r3, #52]	@ 0x34
  hspi4.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8001144:	4b12      	ldr	r3, [pc, #72]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001146:	2200      	movs	r2, #0
 8001148:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi4.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 800114a:	4b11      	ldr	r3, [pc, #68]	@ (8001190 <MX_SPI4_Init+0xa4>)
 800114c:	2200      	movs	r2, #0
 800114e:	63da      	str	r2, [r3, #60]	@ 0x3c
  hspi4.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8001150:	4b0f      	ldr	r3, [pc, #60]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001152:	2200      	movs	r2, #0
 8001154:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi4.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8001156:	4b0e      	ldr	r3, [pc, #56]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001158:	2200      	movs	r2, #0
 800115a:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi4.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 800115c:	4b0c      	ldr	r3, [pc, #48]	@ (8001190 <MX_SPI4_Init+0xa4>)
 800115e:	2200      	movs	r2, #0
 8001160:	649a      	str	r2, [r3, #72]	@ 0x48
  hspi4.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 8001162:	4b0b      	ldr	r3, [pc, #44]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001164:	2200      	movs	r2, #0
 8001166:	64da      	str	r2, [r3, #76]	@ 0x4c
  hspi4.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 8001168:	4b09      	ldr	r3, [pc, #36]	@ (8001190 <MX_SPI4_Init+0xa4>)
 800116a:	2200      	movs	r2, #0
 800116c:	651a      	str	r2, [r3, #80]	@ 0x50
  hspi4.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 800116e:	4b08      	ldr	r3, [pc, #32]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001170:	2200      	movs	r2, #0
 8001172:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi4.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 8001174:	4b06      	ldr	r3, [pc, #24]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001176:	2200      	movs	r2, #0
 8001178:	659a      	str	r2, [r3, #88]	@ 0x58
  if (HAL_SPI_Init(&hspi4) != HAL_OK)
 800117a:	4805      	ldr	r0, [pc, #20]	@ (8001190 <MX_SPI4_Init+0xa4>)
 800117c:	f00d faae 	bl	800e6dc <HAL_SPI_Init>
 8001180:	4603      	mov	r3, r0
 8001182:	2b00      	cmp	r3, #0
 8001184:	d001      	beq.n	800118a <MX_SPI4_Init+0x9e>
  {
    Error_Handler();
 8001186:	f000 fbb3 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI4_Init 2 */

  /* USER CODE END SPI4_Init 2 */

}
 800118a:	bf00      	nop
 800118c:	bd80      	pop	{r7, pc}
 800118e:	bf00      	nop
 8001190:	24000630 	.word	0x24000630
 8001194:	40013400 	.word	0x40013400

08001198 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8001198:	b580      	push	{r7, lr}
 800119a:	b088      	sub	sp, #32
 800119c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800119e:	f107 0310 	add.w	r3, r7, #16
 80011a2:	2200      	movs	r2, #0
 80011a4:	601a      	str	r2, [r3, #0]
 80011a6:	605a      	str	r2, [r3, #4]
 80011a8:	609a      	str	r2, [r3, #8]
 80011aa:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80011ac:	1d3b      	adds	r3, r7, #4
 80011ae:	2200      	movs	r2, #0
 80011b0:	601a      	str	r2, [r3, #0]
 80011b2:	605a      	str	r2, [r3, #4]
 80011b4:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80011b6:	4b20      	ldr	r3, [pc, #128]	@ (8001238 <MX_TIM1_Init+0xa0>)
 80011b8:	4a20      	ldr	r2, [pc, #128]	@ (800123c <MX_TIM1_Init+0xa4>)
 80011ba:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 80011bc:	4b1e      	ldr	r3, [pc, #120]	@ (8001238 <MX_TIM1_Init+0xa0>)
 80011be:	2200      	movs	r2, #0
 80011c0:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80011c2:	4b1d      	ldr	r3, [pc, #116]	@ (8001238 <MX_TIM1_Init+0xa0>)
 80011c4:	2200      	movs	r2, #0
 80011c6:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 80011c8:	4b1b      	ldr	r3, [pc, #108]	@ (8001238 <MX_TIM1_Init+0xa0>)
 80011ca:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80011ce:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80011d0:	4b19      	ldr	r3, [pc, #100]	@ (8001238 <MX_TIM1_Init+0xa0>)
 80011d2:	2200      	movs	r2, #0
 80011d4:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80011d6:	4b18      	ldr	r3, [pc, #96]	@ (8001238 <MX_TIM1_Init+0xa0>)
 80011d8:	2200      	movs	r2, #0
 80011da:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80011dc:	4b16      	ldr	r3, [pc, #88]	@ (8001238 <MX_TIM1_Init+0xa0>)
 80011de:	2200      	movs	r2, #0
 80011e0:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80011e2:	4815      	ldr	r0, [pc, #84]	@ (8001238 <MX_TIM1_Init+0xa0>)
 80011e4:	f00d fbb9 	bl	800e95a <HAL_TIM_Base_Init>
 80011e8:	4603      	mov	r3, r0
 80011ea:	2b00      	cmp	r3, #0
 80011ec:	d001      	beq.n	80011f2 <MX_TIM1_Init+0x5a>
  {
    Error_Handler();
 80011ee:	f000 fb7f 	bl	80018f0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80011f2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80011f6:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 80011f8:	f107 0310 	add.w	r3, r7, #16
 80011fc:	4619      	mov	r1, r3
 80011fe:	480e      	ldr	r0, [pc, #56]	@ (8001238 <MX_TIM1_Init+0xa0>)
 8001200:	f00e fb6a 	bl	800f8d8 <HAL_TIM_ConfigClockSource>
 8001204:	4603      	mov	r3, r0
 8001206:	2b00      	cmp	r3, #0
 8001208:	d001      	beq.n	800120e <MX_TIM1_Init+0x76>
  {
    Error_Handler();
 800120a:	f000 fb71 	bl	80018f0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 800120e:	2320      	movs	r3, #32
 8001210:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8001212:	2300      	movs	r3, #0
 8001214:	60bb      	str	r3, [r7, #8]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001216:	2300      	movs	r3, #0
 8001218:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800121a:	1d3b      	adds	r3, r7, #4
 800121c:	4619      	mov	r1, r3
 800121e:	4806      	ldr	r0, [pc, #24]	@ (8001238 <MX_TIM1_Init+0xa0>)
 8001220:	f00f f9ac 	bl	801057c <HAL_TIMEx_MasterConfigSynchronization>
 8001224:	4603      	mov	r3, r0
 8001226:	2b00      	cmp	r3, #0
 8001228:	d001      	beq.n	800122e <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 800122a:	f000 fb61 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 800122e:	bf00      	nop
 8001230:	3720      	adds	r7, #32
 8001232:	46bd      	mov	sp, r7
 8001234:	bd80      	pop	{r7, pc}
 8001236:	bf00      	nop
 8001238:	240006b8 	.word	0x240006b8
 800123c:	40010000 	.word	0x40010000

08001240 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001240:	b580      	push	{r7, lr}
 8001242:	b088      	sub	sp, #32
 8001244:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001246:	f107 0310 	add.w	r3, r7, #16
 800124a:	2200      	movs	r2, #0
 800124c:	601a      	str	r2, [r3, #0]
 800124e:	605a      	str	r2, [r3, #4]
 8001250:	609a      	str	r2, [r3, #8]
 8001252:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001254:	1d3b      	adds	r3, r7, #4
 8001256:	2200      	movs	r2, #0
 8001258:	601a      	str	r2, [r3, #0]
 800125a:	605a      	str	r2, [r3, #4]
 800125c:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800125e:	4b1e      	ldr	r3, [pc, #120]	@ (80012d8 <MX_TIM2_Init+0x98>)
 8001260:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001264:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8001266:	4b1c      	ldr	r3, [pc, #112]	@ (80012d8 <MX_TIM2_Init+0x98>)
 8001268:	2200      	movs	r2, #0
 800126a:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800126c:	4b1a      	ldr	r3, [pc, #104]	@ (80012d8 <MX_TIM2_Init+0x98>)
 800126e:	2200      	movs	r2, #0
 8001270:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 8001272:	4b19      	ldr	r3, [pc, #100]	@ (80012d8 <MX_TIM2_Init+0x98>)
 8001274:	f04f 32ff 	mov.w	r2, #4294967295
 8001278:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800127a:	4b17      	ldr	r3, [pc, #92]	@ (80012d8 <MX_TIM2_Init+0x98>)
 800127c:	2200      	movs	r2, #0
 800127e:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001280:	4b15      	ldr	r3, [pc, #84]	@ (80012d8 <MX_TIM2_Init+0x98>)
 8001282:	2200      	movs	r2, #0
 8001284:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001286:	4814      	ldr	r0, [pc, #80]	@ (80012d8 <MX_TIM2_Init+0x98>)
 8001288:	f00d fb67 	bl	800e95a <HAL_TIM_Base_Init>
 800128c:	4603      	mov	r3, r0
 800128e:	2b00      	cmp	r3, #0
 8001290:	d001      	beq.n	8001296 <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 8001292:	f000 fb2d 	bl	80018f0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001296:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800129a:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800129c:	f107 0310 	add.w	r3, r7, #16
 80012a0:	4619      	mov	r1, r3
 80012a2:	480d      	ldr	r0, [pc, #52]	@ (80012d8 <MX_TIM2_Init+0x98>)
 80012a4:	f00e fb18 	bl	800f8d8 <HAL_TIM_ConfigClockSource>
 80012a8:	4603      	mov	r3, r0
 80012aa:	2b00      	cmp	r3, #0
 80012ac:	d001      	beq.n	80012b2 <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 80012ae:	f000 fb1f 	bl	80018f0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 80012b2:	2320      	movs	r3, #32
 80012b4:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80012b6:	2300      	movs	r3, #0
 80012b8:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80012ba:	1d3b      	adds	r3, r7, #4
 80012bc:	4619      	mov	r1, r3
 80012be:	4806      	ldr	r0, [pc, #24]	@ (80012d8 <MX_TIM2_Init+0x98>)
 80012c0:	f00f f95c 	bl	801057c <HAL_TIMEx_MasterConfigSynchronization>
 80012c4:	4603      	mov	r3, r0
 80012c6:	2b00      	cmp	r3, #0
 80012c8:	d001      	beq.n	80012ce <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 80012ca:	f000 fb11 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80012ce:	bf00      	nop
 80012d0:	3720      	adds	r7, #32
 80012d2:	46bd      	mov	sp, r7
 80012d4:	bd80      	pop	{r7, pc}
 80012d6:	bf00      	nop
 80012d8:	24000704 	.word	0x24000704

080012dc <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80012dc:	b580      	push	{r7, lr}
 80012de:	b08e      	sub	sp, #56	@ 0x38
 80012e0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80012e2:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80012e6:	2200      	movs	r2, #0
 80012e8:	601a      	str	r2, [r3, #0]
 80012ea:	605a      	str	r2, [r3, #4]
 80012ec:	609a      	str	r2, [r3, #8]
 80012ee:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80012f0:	f107 031c 	add.w	r3, r7, #28
 80012f4:	2200      	movs	r2, #0
 80012f6:	601a      	str	r2, [r3, #0]
 80012f8:	605a      	str	r2, [r3, #4]
 80012fa:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80012fc:	463b      	mov	r3, r7
 80012fe:	2200      	movs	r2, #0
 8001300:	601a      	str	r2, [r3, #0]
 8001302:	605a      	str	r2, [r3, #4]
 8001304:	609a      	str	r2, [r3, #8]
 8001306:	60da      	str	r2, [r3, #12]
 8001308:	611a      	str	r2, [r3, #16]
 800130a:	615a      	str	r2, [r3, #20]
 800130c:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 800130e:	4b38      	ldr	r3, [pc, #224]	@ (80013f0 <MX_TIM3_Init+0x114>)
 8001310:	4a38      	ldr	r2, [pc, #224]	@ (80013f4 <MX_TIM3_Init+0x118>)
 8001312:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 8001314:	4b36      	ldr	r3, [pc, #216]	@ (80013f0 <MX_TIM3_Init+0x114>)
 8001316:	2200      	movs	r2, #0
 8001318:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800131a:	4b35      	ldr	r3, [pc, #212]	@ (80013f0 <MX_TIM3_Init+0x114>)
 800131c:	2200      	movs	r2, #0
 800131e:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 8001320:	4b33      	ldr	r3, [pc, #204]	@ (80013f0 <MX_TIM3_Init+0x114>)
 8001322:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001326:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001328:	4b31      	ldr	r3, [pc, #196]	@ (80013f0 <MX_TIM3_Init+0x114>)
 800132a:	2200      	movs	r2, #0
 800132c:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800132e:	4b30      	ldr	r3, [pc, #192]	@ (80013f0 <MX_TIM3_Init+0x114>)
 8001330:	2200      	movs	r2, #0
 8001332:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001334:	482e      	ldr	r0, [pc, #184]	@ (80013f0 <MX_TIM3_Init+0x114>)
 8001336:	f00d fb10 	bl	800e95a <HAL_TIM_Base_Init>
 800133a:	4603      	mov	r3, r0
 800133c:	2b00      	cmp	r3, #0
 800133e:	d001      	beq.n	8001344 <MX_TIM3_Init+0x68>
  {
    Error_Handler();
 8001340:	f000 fad6 	bl	80018f0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001344:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001348:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800134a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800134e:	4619      	mov	r1, r3
 8001350:	4827      	ldr	r0, [pc, #156]	@ (80013f0 <MX_TIM3_Init+0x114>)
 8001352:	f00e fac1 	bl	800f8d8 <HAL_TIM_ConfigClockSource>
 8001356:	4603      	mov	r3, r0
 8001358:	2b00      	cmp	r3, #0
 800135a:	d001      	beq.n	8001360 <MX_TIM3_Init+0x84>
  {
    Error_Handler();
 800135c:	f000 fac8 	bl	80018f0 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8001360:	4823      	ldr	r0, [pc, #140]	@ (80013f0 <MX_TIM3_Init+0x114>)
 8001362:	f00d fc55 	bl	800ec10 <HAL_TIM_PWM_Init>
 8001366:	4603      	mov	r3, r0
 8001368:	2b00      	cmp	r3, #0
 800136a:	d001      	beq.n	8001370 <MX_TIM3_Init+0x94>
  {
    Error_Handler();
 800136c:	f000 fac0 	bl	80018f0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001370:	2300      	movs	r3, #0
 8001372:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001374:	2300      	movs	r3, #0
 8001376:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001378:	f107 031c 	add.w	r3, r7, #28
 800137c:	4619      	mov	r1, r3
 800137e:	481c      	ldr	r0, [pc, #112]	@ (80013f0 <MX_TIM3_Init+0x114>)
 8001380:	f00f f8fc 	bl	801057c <HAL_TIMEx_MasterConfigSynchronization>
 8001384:	4603      	mov	r3, r0
 8001386:	2b00      	cmp	r3, #0
 8001388:	d001      	beq.n	800138e <MX_TIM3_Init+0xb2>
  {
    Error_Handler();
 800138a:	f000 fab1 	bl	80018f0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800138e:	2360      	movs	r3, #96	@ 0x60
 8001390:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 8001392:	2300      	movs	r3, #0
 8001394:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001396:	2300      	movs	r3, #0
 8001398:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800139a:	2300      	movs	r3, #0
 800139c:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800139e:	463b      	mov	r3, r7
 80013a0:	2200      	movs	r2, #0
 80013a2:	4619      	mov	r1, r3
 80013a4:	4812      	ldr	r0, [pc, #72]	@ (80013f0 <MX_TIM3_Init+0x114>)
 80013a6:	f00e f983 	bl	800f6b0 <HAL_TIM_PWM_ConfigChannel>
 80013aa:	4603      	mov	r3, r0
 80013ac:	2b00      	cmp	r3, #0
 80013ae:	d001      	beq.n	80013b4 <MX_TIM3_Init+0xd8>
  {
    Error_Handler();
 80013b0:	f000 fa9e 	bl	80018f0 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80013b4:	463b      	mov	r3, r7
 80013b6:	2204      	movs	r2, #4
 80013b8:	4619      	mov	r1, r3
 80013ba:	480d      	ldr	r0, [pc, #52]	@ (80013f0 <MX_TIM3_Init+0x114>)
 80013bc:	f00e f978 	bl	800f6b0 <HAL_TIM_PWM_ConfigChannel>
 80013c0:	4603      	mov	r3, r0
 80013c2:	2b00      	cmp	r3, #0
 80013c4:	d001      	beq.n	80013ca <MX_TIM3_Init+0xee>
  {
    Error_Handler();
 80013c6:	f000 fa93 	bl	80018f0 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 80013ca:	463b      	mov	r3, r7
 80013cc:	2208      	movs	r2, #8
 80013ce:	4619      	mov	r1, r3
 80013d0:	4807      	ldr	r0, [pc, #28]	@ (80013f0 <MX_TIM3_Init+0x114>)
 80013d2:	f00e f96d 	bl	800f6b0 <HAL_TIM_PWM_ConfigChannel>
 80013d6:	4603      	mov	r3, r0
 80013d8:	2b00      	cmp	r3, #0
 80013da:	d001      	beq.n	80013e0 <MX_TIM3_Init+0x104>
  {
    Error_Handler();
 80013dc:	f000 fa88 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 80013e0:	4803      	ldr	r0, [pc, #12]	@ (80013f0 <MX_TIM3_Init+0x114>)
 80013e2:	f000 fe93 	bl	800210c <HAL_TIM_MspPostInit>

}
 80013e6:	bf00      	nop
 80013e8:	3738      	adds	r7, #56	@ 0x38
 80013ea:	46bd      	mov	sp, r7
 80013ec:	bd80      	pop	{r7, pc}
 80013ee:	bf00      	nop
 80013f0:	24000750 	.word	0x24000750
 80013f4:	40000400 	.word	0x40000400

080013f8 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 80013f8:	b580      	push	{r7, lr}
 80013fa:	b08e      	sub	sp, #56	@ 0x38
 80013fc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80013fe:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001402:	2200      	movs	r2, #0
 8001404:	601a      	str	r2, [r3, #0]
 8001406:	605a      	str	r2, [r3, #4]
 8001408:	609a      	str	r2, [r3, #8]
 800140a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800140c:	f107 031c 	add.w	r3, r7, #28
 8001410:	2200      	movs	r2, #0
 8001412:	601a      	str	r2, [r3, #0]
 8001414:	605a      	str	r2, [r3, #4]
 8001416:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001418:	463b      	mov	r3, r7
 800141a:	2200      	movs	r2, #0
 800141c:	601a      	str	r2, [r3, #0]
 800141e:	605a      	str	r2, [r3, #4]
 8001420:	609a      	str	r2, [r3, #8]
 8001422:	60da      	str	r2, [r3, #12]
 8001424:	611a      	str	r2, [r3, #16]
 8001426:	615a      	str	r2, [r3, #20]
 8001428:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 800142a:	4b2d      	ldr	r3, [pc, #180]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 800142c:	4a2d      	ldr	r2, [pc, #180]	@ (80014e4 <MX_TIM4_Init+0xec>)
 800142e:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8001430:	4b2b      	ldr	r3, [pc, #172]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 8001432:	2200      	movs	r2, #0
 8001434:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001436:	4b2a      	ldr	r3, [pc, #168]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 8001438:	2200      	movs	r2, #0
 800143a:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 800143c:	4b28      	ldr	r3, [pc, #160]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 800143e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001442:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001444:	4b26      	ldr	r3, [pc, #152]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 8001446:	2200      	movs	r2, #0
 8001448:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800144a:	4b25      	ldr	r3, [pc, #148]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 800144c:	2200      	movs	r2, #0
 800144e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001450:	4823      	ldr	r0, [pc, #140]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 8001452:	f00d fa82 	bl	800e95a <HAL_TIM_Base_Init>
 8001456:	4603      	mov	r3, r0
 8001458:	2b00      	cmp	r3, #0
 800145a:	d001      	beq.n	8001460 <MX_TIM4_Init+0x68>
  {
    Error_Handler();
 800145c:	f000 fa48 	bl	80018f0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001460:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001464:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001466:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800146a:	4619      	mov	r1, r3
 800146c:	481c      	ldr	r0, [pc, #112]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 800146e:	f00e fa33 	bl	800f8d8 <HAL_TIM_ConfigClockSource>
 8001472:	4603      	mov	r3, r0
 8001474:	2b00      	cmp	r3, #0
 8001476:	d001      	beq.n	800147c <MX_TIM4_Init+0x84>
  {
    Error_Handler();
 8001478:	f000 fa3a 	bl	80018f0 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 800147c:	4818      	ldr	r0, [pc, #96]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 800147e:	f00d fbc7 	bl	800ec10 <HAL_TIM_PWM_Init>
 8001482:	4603      	mov	r3, r0
 8001484:	2b00      	cmp	r3, #0
 8001486:	d001      	beq.n	800148c <MX_TIM4_Init+0x94>
  {
    Error_Handler();
 8001488:	f000 fa32 	bl	80018f0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800148c:	2300      	movs	r3, #0
 800148e:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001490:	2300      	movs	r3, #0
 8001492:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001494:	f107 031c 	add.w	r3, r7, #28
 8001498:	4619      	mov	r1, r3
 800149a:	4811      	ldr	r0, [pc, #68]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 800149c:	f00f f86e 	bl	801057c <HAL_TIMEx_MasterConfigSynchronization>
 80014a0:	4603      	mov	r3, r0
 80014a2:	2b00      	cmp	r3, #0
 80014a4:	d001      	beq.n	80014aa <MX_TIM4_Init+0xb2>
  {
    Error_Handler();
 80014a6:	f000 fa23 	bl	80018f0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80014aa:	2360      	movs	r3, #96	@ 0x60
 80014ac:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 80014ae:	2300      	movs	r3, #0
 80014b0:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80014b2:	2300      	movs	r3, #0
 80014b4:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80014b6:	2300      	movs	r3, #0
 80014b8:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80014ba:	463b      	mov	r3, r7
 80014bc:	2200      	movs	r2, #0
 80014be:	4619      	mov	r1, r3
 80014c0:	4807      	ldr	r0, [pc, #28]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 80014c2:	f00e f8f5 	bl	800f6b0 <HAL_TIM_PWM_ConfigChannel>
 80014c6:	4603      	mov	r3, r0
 80014c8:	2b00      	cmp	r3, #0
 80014ca:	d001      	beq.n	80014d0 <MX_TIM4_Init+0xd8>
  {
    Error_Handler();
 80014cc:	f000 fa10 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 80014d0:	4803      	ldr	r0, [pc, #12]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 80014d2:	f000 fe1b 	bl	800210c <HAL_TIM_MspPostInit>

}
 80014d6:	bf00      	nop
 80014d8:	3738      	adds	r7, #56	@ 0x38
 80014da:	46bd      	mov	sp, r7
 80014dc:	bd80      	pop	{r7, pc}
 80014de:	bf00      	nop
 80014e0:	2400079c 	.word	0x2400079c
 80014e4:	40000800 	.word	0x40000800

080014e8 <MX_UART7_Init>:
  * @brief UART7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART7_Init(void)
{
 80014e8:	b580      	push	{r7, lr}
 80014ea:	af00      	add	r7, sp, #0
  /* USER CODE END UART7_Init 0 */

  /* USER CODE BEGIN UART7_Init 1 */

  /* USER CODE END UART7_Init 1 */
  huart7.Instance = UART7;
 80014ec:	4b23      	ldr	r3, [pc, #140]	@ (800157c <MX_UART7_Init+0x94>)
 80014ee:	4a24      	ldr	r2, [pc, #144]	@ (8001580 <MX_UART7_Init+0x98>)
 80014f0:	601a      	str	r2, [r3, #0]
  huart7.Init.BaudRate = 115200;
 80014f2:	4b22      	ldr	r3, [pc, #136]	@ (800157c <MX_UART7_Init+0x94>)
 80014f4:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80014f8:	605a      	str	r2, [r3, #4]
  huart7.Init.WordLength = UART_WORDLENGTH_8B;
 80014fa:	4b20      	ldr	r3, [pc, #128]	@ (800157c <MX_UART7_Init+0x94>)
 80014fc:	2200      	movs	r2, #0
 80014fe:	609a      	str	r2, [r3, #8]
  huart7.Init.StopBits = UART_STOPBITS_1;
 8001500:	4b1e      	ldr	r3, [pc, #120]	@ (800157c <MX_UART7_Init+0x94>)
 8001502:	2200      	movs	r2, #0
 8001504:	60da      	str	r2, [r3, #12]
  huart7.Init.Parity = UART_PARITY_NONE;
 8001506:	4b1d      	ldr	r3, [pc, #116]	@ (800157c <MX_UART7_Init+0x94>)
 8001508:	2200      	movs	r2, #0
 800150a:	611a      	str	r2, [r3, #16]
  huart7.Init.Mode = UART_MODE_TX_RX;
 800150c:	4b1b      	ldr	r3, [pc, #108]	@ (800157c <MX_UART7_Init+0x94>)
 800150e:	220c      	movs	r2, #12
 8001510:	615a      	str	r2, [r3, #20]
  huart7.Init.HwFlowCtl = UART_HWCONTROL_RTS_CTS;
 8001512:	4b1a      	ldr	r3, [pc, #104]	@ (800157c <MX_UART7_Init+0x94>)
 8001514:	f44f 7240 	mov.w	r2, #768	@ 0x300
 8001518:	619a      	str	r2, [r3, #24]
  huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 800151a:	4b18      	ldr	r3, [pc, #96]	@ (800157c <MX_UART7_Init+0x94>)
 800151c:	2200      	movs	r2, #0
 800151e:	61da      	str	r2, [r3, #28]
  huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001520:	4b16      	ldr	r3, [pc, #88]	@ (800157c <MX_UART7_Init+0x94>)
 8001522:	2200      	movs	r2, #0
 8001524:	621a      	str	r2, [r3, #32]
  huart7.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8001526:	4b15      	ldr	r3, [pc, #84]	@ (800157c <MX_UART7_Init+0x94>)
 8001528:	2200      	movs	r2, #0
 800152a:	625a      	str	r2, [r3, #36]	@ 0x24
  huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800152c:	4b13      	ldr	r3, [pc, #76]	@ (800157c <MX_UART7_Init+0x94>)
 800152e:	2200      	movs	r2, #0
 8001530:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart7) != HAL_OK)
 8001532:	4812      	ldr	r0, [pc, #72]	@ (800157c <MX_UART7_Init+0x94>)
 8001534:	f00f f8dc 	bl	80106f0 <HAL_UART_Init>
 8001538:	4603      	mov	r3, r0
 800153a:	2b00      	cmp	r3, #0
 800153c:	d001      	beq.n	8001542 <MX_UART7_Init+0x5a>
  {
    Error_Handler();
 800153e:	f000 f9d7 	bl	80018f0 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart7, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001542:	2100      	movs	r1, #0
 8001544:	480d      	ldr	r0, [pc, #52]	@ (800157c <MX_UART7_Init+0x94>)
 8001546:	f010 f9e8 	bl	801191a <HAL_UARTEx_SetTxFifoThreshold>
 800154a:	4603      	mov	r3, r0
 800154c:	2b00      	cmp	r3, #0
 800154e:	d001      	beq.n	8001554 <MX_UART7_Init+0x6c>
  {
    Error_Handler();
 8001550:	f000 f9ce 	bl	80018f0 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart7, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001554:	2100      	movs	r1, #0
 8001556:	4809      	ldr	r0, [pc, #36]	@ (800157c <MX_UART7_Init+0x94>)
 8001558:	f010 fa1d 	bl	8011996 <HAL_UARTEx_SetRxFifoThreshold>
 800155c:	4603      	mov	r3, r0
 800155e:	2b00      	cmp	r3, #0
 8001560:	d001      	beq.n	8001566 <MX_UART7_Init+0x7e>
  {
    Error_Handler();
 8001562:	f000 f9c5 	bl	80018f0 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart7) != HAL_OK)
 8001566:	4805      	ldr	r0, [pc, #20]	@ (800157c <MX_UART7_Init+0x94>)
 8001568:	f010 f99e 	bl	80118a8 <HAL_UARTEx_DisableFifoMode>
 800156c:	4603      	mov	r3, r0
 800156e:	2b00      	cmp	r3, #0
 8001570:	d001      	beq.n	8001576 <MX_UART7_Init+0x8e>
  {
    Error_Handler();
 8001572:	f000 f9bd 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN UART7_Init 2 */

  /* USER CODE END UART7_Init 2 */

}
 8001576:	bf00      	nop
 8001578:	bd80      	pop	{r7, pc}
 800157a:	bf00      	nop
 800157c:	24000860 	.word	0x24000860
 8001580:	40007800 	.word	0x40007800

08001584 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8001584:	b580      	push	{r7, lr}
 8001586:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001588:	4b22      	ldr	r3, [pc, #136]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 800158a:	4a23      	ldr	r2, [pc, #140]	@ (8001618 <MX_USART1_UART_Init+0x94>)
 800158c:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800158e:	4b21      	ldr	r3, [pc, #132]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 8001590:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001594:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001596:	4b1f      	ldr	r3, [pc, #124]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 8001598:	2200      	movs	r2, #0
 800159a:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800159c:	4b1d      	ldr	r3, [pc, #116]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 800159e:	2200      	movs	r2, #0
 80015a0:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80015a2:	4b1c      	ldr	r3, [pc, #112]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015a4:	2200      	movs	r2, #0
 80015a6:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80015a8:	4b1a      	ldr	r3, [pc, #104]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015aa:	220c      	movs	r2, #12
 80015ac:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80015ae:	4b19      	ldr	r3, [pc, #100]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015b0:	2200      	movs	r2, #0
 80015b2:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80015b4:	4b17      	ldr	r3, [pc, #92]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015b6:	2200      	movs	r2, #0
 80015b8:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80015ba:	4b16      	ldr	r3, [pc, #88]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015bc:	2200      	movs	r2, #0
 80015be:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 80015c0:	4b14      	ldr	r3, [pc, #80]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015c2:	2200      	movs	r2, #0
 80015c4:	625a      	str	r2, [r3, #36]	@ 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80015c6:	4b13      	ldr	r3, [pc, #76]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015c8:	2200      	movs	r2, #0
 80015ca:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80015cc:	4811      	ldr	r0, [pc, #68]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015ce:	f00f f88f 	bl	80106f0 <HAL_UART_Init>
 80015d2:	4603      	mov	r3, r0
 80015d4:	2b00      	cmp	r3, #0
 80015d6:	d001      	beq.n	80015dc <MX_USART1_UART_Init+0x58>
  {
    Error_Handler();
 80015d8:	f000 f98a 	bl	80018f0 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 80015dc:	2100      	movs	r1, #0
 80015de:	480d      	ldr	r0, [pc, #52]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015e0:	f010 f99b 	bl	801191a <HAL_UARTEx_SetTxFifoThreshold>
 80015e4:	4603      	mov	r3, r0
 80015e6:	2b00      	cmp	r3, #0
 80015e8:	d001      	beq.n	80015ee <MX_USART1_UART_Init+0x6a>
  {
    Error_Handler();
 80015ea:	f000 f981 	bl	80018f0 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 80015ee:	2100      	movs	r1, #0
 80015f0:	4808      	ldr	r0, [pc, #32]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015f2:	f010 f9d0 	bl	8011996 <HAL_UARTEx_SetRxFifoThreshold>
 80015f6:	4603      	mov	r3, r0
 80015f8:	2b00      	cmp	r3, #0
 80015fa:	d001      	beq.n	8001600 <MX_USART1_UART_Init+0x7c>
  {
    Error_Handler();
 80015fc:	f000 f978 	bl	80018f0 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 8001600:	4804      	ldr	r0, [pc, #16]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 8001602:	f010 f951 	bl	80118a8 <HAL_UARTEx_DisableFifoMode>
 8001606:	4603      	mov	r3, r0
 8001608:	2b00      	cmp	r3, #0
 800160a:	d001      	beq.n	8001610 <MX_USART1_UART_Init+0x8c>
  {
    Error_Handler();
 800160c:	f000 f970 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8001610:	bf00      	nop
 8001612:	bd80      	pop	{r7, pc}
 8001614:	240008f4 	.word	0x240008f4
 8001618:	40011000 	.word	0x40011000

0800161c <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 800161c:	b580      	push	{r7, lr}
 800161e:	b082      	sub	sp, #8
 8001620:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001622:	4b15      	ldr	r3, [pc, #84]	@ (8001678 <MX_DMA_Init+0x5c>)
 8001624:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8001628:	4a13      	ldr	r2, [pc, #76]	@ (8001678 <MX_DMA_Init+0x5c>)
 800162a:	f043 0301 	orr.w	r3, r3, #1
 800162e:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8001632:	4b11      	ldr	r3, [pc, #68]	@ (8001678 <MX_DMA_Init+0x5c>)
 8001634:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8001638:	f003 0301 	and.w	r3, r3, #1
 800163c:	607b      	str	r3, [r7, #4]
 800163e:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 8001640:	2200      	movs	r2, #0
 8001642:	2100      	movs	r1, #0
 8001644:	200b      	movs	r0, #11
 8001646:	f005 face 	bl	8006be6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 800164a:	200b      	movs	r0, #11
 800164c:	f005 fae5 	bl	8006c1a <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 0, 0);
 8001650:	2200      	movs	r2, #0
 8001652:	2100      	movs	r1, #0
 8001654:	200c      	movs	r0, #12
 8001656:	f005 fac6 	bl	8006be6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 800165a:	200c      	movs	r0, #12
 800165c:	f005 fadd 	bl	8006c1a <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream2_IRQn, 0, 0);
 8001660:	2200      	movs	r2, #0
 8001662:	2100      	movs	r1, #0
 8001664:	200d      	movs	r0, #13
 8001666:	f005 fabe 	bl	8006be6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream2_IRQn);
 800166a:	200d      	movs	r0, #13
 800166c:	f005 fad5 	bl	8006c1a <HAL_NVIC_EnableIRQ>

}
 8001670:	bf00      	nop
 8001672:	3708      	adds	r7, #8
 8001674:	46bd      	mov	sp, r7
 8001676:	bd80      	pop	{r7, pc}
 8001678:	58024400 	.word	0x58024400

0800167c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800167c:	b580      	push	{r7, lr}
 800167e:	b08c      	sub	sp, #48	@ 0x30
 8001680:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001682:	f107 031c 	add.w	r3, r7, #28
 8001686:	2200      	movs	r2, #0
 8001688:	601a      	str	r2, [r3, #0]
 800168a:	605a      	str	r2, [r3, #4]
 800168c:	609a      	str	r2, [r3, #8]
 800168e:	60da      	str	r2, [r3, #12]
 8001690:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001692:	4b7b      	ldr	r3, [pc, #492]	@ (8001880 <MX_GPIO_Init+0x204>)
 8001694:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001698:	4a79      	ldr	r2, [pc, #484]	@ (8001880 <MX_GPIO_Init+0x204>)
 800169a:	f043 0310 	orr.w	r3, r3, #16
 800169e:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80016a2:	4b77      	ldr	r3, [pc, #476]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016a4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80016a8:	f003 0310 	and.w	r3, r3, #16
 80016ac:	61bb      	str	r3, [r7, #24]
 80016ae:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80016b0:	4b73      	ldr	r3, [pc, #460]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016b2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80016b6:	4a72      	ldr	r2, [pc, #456]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016b8:	f043 0304 	orr.w	r3, r3, #4
 80016bc:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80016c0:	4b6f      	ldr	r3, [pc, #444]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016c2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80016c6:	f003 0304 	and.w	r3, r3, #4
 80016ca:	617b      	str	r3, [r7, #20]
 80016cc:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80016ce:	4b6c      	ldr	r3, [pc, #432]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016d0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80016d4:	4a6a      	ldr	r2, [pc, #424]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016d6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80016da:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80016de:	4b68      	ldr	r3, [pc, #416]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016e0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80016e4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80016e8:	613b      	str	r3, [r7, #16]
 80016ea:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80016ec:	4b64      	ldr	r3, [pc, #400]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016ee:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80016f2:	4a63      	ldr	r2, [pc, #396]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016f4:	f043 0301 	orr.w	r3, r3, #1
 80016f8:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80016fc:	4b60      	ldr	r3, [pc, #384]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016fe:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001702:	f003 0301 	and.w	r3, r3, #1
 8001706:	60fb      	str	r3, [r7, #12]
 8001708:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800170a:	4b5d      	ldr	r3, [pc, #372]	@ (8001880 <MX_GPIO_Init+0x204>)
 800170c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001710:	4a5b      	ldr	r2, [pc, #364]	@ (8001880 <MX_GPIO_Init+0x204>)
 8001712:	f043 0302 	orr.w	r3, r3, #2
 8001716:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 800171a:	4b59      	ldr	r3, [pc, #356]	@ (8001880 <MX_GPIO_Init+0x204>)
 800171c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001720:	f003 0302 	and.w	r3, r3, #2
 8001724:	60bb      	str	r3, [r7, #8]
 8001726:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001728:	4b55      	ldr	r3, [pc, #340]	@ (8001880 <MX_GPIO_Init+0x204>)
 800172a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800172e:	4a54      	ldr	r2, [pc, #336]	@ (8001880 <MX_GPIO_Init+0x204>)
 8001730:	f043 0308 	orr.w	r3, r3, #8
 8001734:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001738:	4b51      	ldr	r3, [pc, #324]	@ (8001880 <MX_GPIO_Init+0x204>)
 800173a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800173e:	f003 0308 	and.w	r3, r3, #8
 8001742:	607b      	str	r3, [r7, #4]
 8001744:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SPI4_CS_GPIO_Port, SPI4_CS_Pin, GPIO_PIN_RESET);
 8001746:	2200      	movs	r2, #0
 8001748:	2110      	movs	r1, #16
 800174a:	484e      	ldr	r0, [pc, #312]	@ (8001884 <MX_GPIO_Init+0x208>)
 800174c:	f008 f844 	bl	80097d8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIO_TIMING2_GPIO_Port, GPIO_TIMING2_Pin, GPIO_PIN_RESET);
 8001750:	2200      	movs	r2, #0
 8001752:	2104      	movs	r1, #4
 8001754:	484c      	ldr	r0, [pc, #304]	@ (8001888 <MX_GPIO_Init+0x20c>)
 8001756:	f008 f83f 	bl	80097d8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIO_TIMING1_GPIO_Port, GPIO_TIMING1_Pin, GPIO_PIN_RESET);
 800175a:	2200      	movs	r2, #0
 800175c:	2101      	movs	r1, #1
 800175e:	484b      	ldr	r0, [pc, #300]	@ (800188c <MX_GPIO_Init+0x210>)
 8001760:	f008 f83a 	bl	80097d8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, MUTE_INDICATOR_Pin|MUTE_SIGNAL_Pin, GPIO_PIN_SET);
 8001764:	2201      	movs	r2, #1
 8001766:	210a      	movs	r1, #10
 8001768:	4848      	ldr	r0, [pc, #288]	@ (800188c <MX_GPIO_Init+0x210>)
 800176a:	f008 f835 	bl	80097d8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, ACCEL_NCS1_Pin|RECORD_INDICATOR_Pin, GPIO_PIN_RESET);
 800176e:	2200      	movs	r2, #0
 8001770:	f44f 5188 	mov.w	r1, #4352	@ 0x1100
 8001774:	4846      	ldr	r0, [pc, #280]	@ (8001890 <MX_GPIO_Init+0x214>)
 8001776:	f008 f82f 	bl	80097d8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SPI3_CS_GPIO_Port, SPI3_CS_Pin, GPIO_PIN_RESET);
 800177a:	2200      	movs	r2, #0
 800177c:	2101      	movs	r1, #1
 800177e:	4845      	ldr	r0, [pc, #276]	@ (8001894 <MX_GPIO_Init+0x218>)
 8001780:	f008 f82a 	bl	80097d8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : SPI4_INT1_Pin */
  GPIO_InitStruct.Pin = SPI4_INT1_Pin;
 8001784:	2308      	movs	r3, #8
 8001786:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001788:	2300      	movs	r3, #0
 800178a:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800178c:	2300      	movs	r3, #0
 800178e:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(SPI4_INT1_GPIO_Port, &GPIO_InitStruct);
 8001790:	f107 031c 	add.w	r3, r7, #28
 8001794:	4619      	mov	r1, r3
 8001796:	483b      	ldr	r0, [pc, #236]	@ (8001884 <MX_GPIO_Init+0x208>)
 8001798:	f007 fe5e 	bl	8009458 <HAL_GPIO_Init>

  /*Configure GPIO pin : SPI4_CS_Pin */
  GPIO_InitStruct.Pin = SPI4_CS_Pin;
 800179c:	2310      	movs	r3, #16
 800179e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017a0:	2301      	movs	r3, #1
 80017a2:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017a4:	2300      	movs	r3, #0
 80017a6:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017a8:	2300      	movs	r3, #0
 80017aa:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(SPI4_CS_GPIO_Port, &GPIO_InitStruct);
 80017ac:	f107 031c 	add.w	r3, r7, #28
 80017b0:	4619      	mov	r1, r3
 80017b2:	4834      	ldr	r0, [pc, #208]	@ (8001884 <MX_GPIO_Init+0x208>)
 80017b4:	f007 fe50 	bl	8009458 <HAL_GPIO_Init>

  /*Configure GPIO pins : PC13 DAC_EXT_Pin */
  GPIO_InitStruct.Pin = GPIO_PIN_13|DAC_EXT_Pin;
 80017b8:	f44f 5308 	mov.w	r3, #8704	@ 0x2200
 80017bc:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80017be:	2300      	movs	r3, #0
 80017c0:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017c2:	2300      	movs	r3, #0
 80017c4:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017c6:	f107 031c 	add.w	r3, r7, #28
 80017ca:	4619      	mov	r1, r3
 80017cc:	482e      	ldr	r0, [pc, #184]	@ (8001888 <MX_GPIO_Init+0x20c>)
 80017ce:	f007 fe43 	bl	8009458 <HAL_GPIO_Init>

  /*Configure GPIO pin : GPIO_TIMING2_Pin */
  GPIO_InitStruct.Pin = GPIO_TIMING2_Pin;
 80017d2:	2304      	movs	r3, #4
 80017d4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017d6:	2301      	movs	r3, #1
 80017d8:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017da:	2300      	movs	r3, #0
 80017dc:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017de:	2300      	movs	r3, #0
 80017e0:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIO_TIMING2_GPIO_Port, &GPIO_InitStruct);
 80017e2:	f107 031c 	add.w	r3, r7, #28
 80017e6:	4619      	mov	r1, r3
 80017e8:	4827      	ldr	r0, [pc, #156]	@ (8001888 <MX_GPIO_Init+0x20c>)
 80017ea:	f007 fe35 	bl	8009458 <HAL_GPIO_Init>

  /*Configure GPIO pins : GPIO_TIMING1_Pin MUTE_INDICATOR_Pin MUTE_SIGNAL_Pin */
  GPIO_InitStruct.Pin = GPIO_TIMING1_Pin|MUTE_INDICATOR_Pin|MUTE_SIGNAL_Pin;
 80017ee:	230b      	movs	r3, #11
 80017f0:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017f2:	2301      	movs	r3, #1
 80017f4:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017f6:	2300      	movs	r3, #0
 80017f8:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017fa:	2300      	movs	r3, #0
 80017fc:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017fe:	f107 031c 	add.w	r3, r7, #28
 8001802:	4619      	mov	r1, r3
 8001804:	4821      	ldr	r0, [pc, #132]	@ (800188c <MX_GPIO_Init+0x210>)
 8001806:	f007 fe27 	bl	8009458 <HAL_GPIO_Init>

  /*Configure GPIO pins : MUTE_BUTTON_Pin BIG_RED_BUTTON_Pin */
  GPIO_InitStruct.Pin = MUTE_BUTTON_Pin|BIG_RED_BUTTON_Pin;
 800180a:	f248 0304 	movw	r3, #32772	@ 0x8004
 800180e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001810:	2300      	movs	r3, #0
 8001812:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001814:	2300      	movs	r3, #0
 8001816:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001818:	f107 031c 	add.w	r3, r7, #28
 800181c:	4619      	mov	r1, r3
 800181e:	481b      	ldr	r0, [pc, #108]	@ (800188c <MX_GPIO_Init+0x210>)
 8001820:	f007 fe1a 	bl	8009458 <HAL_GPIO_Init>

  /*Configure GPIO pins : ACCEL_NCS1_Pin RECORD_INDICATOR_Pin */
  GPIO_InitStruct.Pin = ACCEL_NCS1_Pin|RECORD_INDICATOR_Pin;
 8001824:	f44f 5388 	mov.w	r3, #4352	@ 0x1100
 8001828:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800182a:	2301      	movs	r3, #1
 800182c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800182e:	2300      	movs	r3, #0
 8001830:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001832:	2300      	movs	r3, #0
 8001834:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001836:	f107 031c 	add.w	r3, r7, #28
 800183a:	4619      	mov	r1, r3
 800183c:	4814      	ldr	r0, [pc, #80]	@ (8001890 <MX_GPIO_Init+0x214>)
 800183e:	f007 fe0b 	bl	8009458 <HAL_GPIO_Init>

  /*Configure GPIO pins : ACCEL_INTA1_Pin ACCEL_INTB1_Pin SPI3_INT1_Pin SPI3_INT2_Pin */
  GPIO_InitStruct.Pin = ACCEL_INTA1_Pin|ACCEL_INTB1_Pin|SPI3_INT1_Pin|SPI3_INT2_Pin;
 8001842:	f240 3306 	movw	r3, #774	@ 0x306
 8001846:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001848:	2300      	movs	r3, #0
 800184a:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800184c:	2300      	movs	r3, #0
 800184e:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001850:	f107 031c 	add.w	r3, r7, #28
 8001854:	4619      	mov	r1, r3
 8001856:	480f      	ldr	r0, [pc, #60]	@ (8001894 <MX_GPIO_Init+0x218>)
 8001858:	f007 fdfe 	bl	8009458 <HAL_GPIO_Init>

  /*Configure GPIO pin : SPI3_CS_Pin */
  GPIO_InitStruct.Pin = SPI3_CS_Pin;
 800185c:	2301      	movs	r3, #1
 800185e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001860:	2301      	movs	r3, #1
 8001862:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001864:	2300      	movs	r3, #0
 8001866:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001868:	2300      	movs	r3, #0
 800186a:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(SPI3_CS_GPIO_Port, &GPIO_InitStruct);
 800186c:	f107 031c 	add.w	r3, r7, #28
 8001870:	4619      	mov	r1, r3
 8001872:	4808      	ldr	r0, [pc, #32]	@ (8001894 <MX_GPIO_Init+0x218>)
 8001874:	f007 fdf0 	bl	8009458 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001878:	bf00      	nop
 800187a:	3730      	adds	r7, #48	@ 0x30
 800187c:	46bd      	mov	sp, r7
 800187e:	bd80      	pop	{r7, pc}
 8001880:	58024400 	.word	0x58024400
 8001884:	58021000 	.word	0x58021000
 8001888:	58020800 	.word	0x58020800
 800188c:	58020000 	.word	0x58020000
 8001890:	58020400 	.word	0x58020400
 8001894:	58020c00 	.word	0x58020c00

08001898 <MPU_Config>:
/* USER CODE END 4 */

 /* MPU Configuration */

void MPU_Config(void)
{
 8001898:	b580      	push	{r7, lr}
 800189a:	b084      	sub	sp, #16
 800189c:	af00      	add	r7, sp, #0
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 800189e:	463b      	mov	r3, r7
 80018a0:	2200      	movs	r2, #0
 80018a2:	601a      	str	r2, [r3, #0]
 80018a4:	605a      	str	r2, [r3, #4]
 80018a6:	609a      	str	r2, [r3, #8]
 80018a8:	60da      	str	r2, [r3, #12]

  /* Disables the MPU */
  HAL_MPU_Disable();
 80018aa:	f005 f9d1 	bl	8006c50 <HAL_MPU_Disable>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80018ae:	2301      	movs	r3, #1
 80018b0:	703b      	strb	r3, [r7, #0]
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 80018b2:	2300      	movs	r3, #0
 80018b4:	707b      	strb	r3, [r7, #1]
  MPU_InitStruct.BaseAddress = 0x0;
 80018b6:	2300      	movs	r3, #0
 80018b8:	607b      	str	r3, [r7, #4]
  MPU_InitStruct.Size = MPU_REGION_SIZE_4GB;
 80018ba:	231f      	movs	r3, #31
 80018bc:	723b      	strb	r3, [r7, #8]
  MPU_InitStruct.SubRegionDisable = 0x87;
 80018be:	2387      	movs	r3, #135	@ 0x87
 80018c0:	727b      	strb	r3, [r7, #9]
  MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 80018c2:	2300      	movs	r3, #0
 80018c4:	72bb      	strb	r3, [r7, #10]
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 80018c6:	2300      	movs	r3, #0
 80018c8:	72fb      	strb	r3, [r7, #11]
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 80018ca:	2301      	movs	r3, #1
 80018cc:	733b      	strb	r3, [r7, #12]
  MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
 80018ce:	2301      	movs	r3, #1
 80018d0:	737b      	strb	r3, [r7, #13]
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 80018d2:	2300      	movs	r3, #0
 80018d4:	73bb      	strb	r3, [r7, #14]
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 80018d6:	2300      	movs	r3, #0
 80018d8:	73fb      	strb	r3, [r7, #15]

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80018da:	463b      	mov	r3, r7
 80018dc:	4618      	mov	r0, r3
 80018de:	f005 f9ef 	bl	8006cc0 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 80018e2:	2004      	movs	r0, #4
 80018e4:	f005 f9cc 	bl	8006c80 <HAL_MPU_Enable>

}
 80018e8:	bf00      	nop
 80018ea:	3710      	adds	r7, #16
 80018ec:	46bd      	mov	sp, r7
 80018ee:	bd80      	pop	{r7, pc}

080018f0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80018f0:	b480      	push	{r7}
 80018f2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80018f4:	b672      	cpsid	i
}
 80018f6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80018f8:	bf00      	nop
 80018fa:	e7fd      	b.n	80018f8 <Error_Handler+0x8>

080018fc <Sequencer_Init>:
 */

#include "sequencer.h"

void Sequencer_Init(Sequencer* sequencer)
{
 80018fc:	b480      	push	{r7}
 80018fe:	b083      	sub	sp, #12
 8001900:	af00      	add	r7, sp, #0
 8001902:	6078      	str	r0, [r7, #4]
	sequencer->sequence_time_array = NULL;
 8001904:	687b      	ldr	r3, [r7, #4]
 8001906:	2200      	movs	r2, #0
 8001908:	601a      	str	r2, [r3, #0]
	sequencer->sequence_len = 0;
 800190a:	687b      	ldr	r3, [r7, #4]
 800190c:	2200      	movs	r2, #0
 800190e:	605a      	str	r2, [r3, #4]
	sequencer->sequence_index = 0;
 8001910:	687b      	ldr	r3, [r7, #4]
 8001912:	2200      	movs	r2, #0
 8001914:	609a      	str	r2, [r3, #8]
	sequencer->time = 0;
 8001916:	687b      	ldr	r3, [r7, #4]
 8001918:	2200      	movs	r2, #0
 800191a:	60da      	str	r2, [r3, #12]

	sequencer->is_running = 0;
 800191c:	687b      	ldr	r3, [r7, #4]
 800191e:	2200      	movs	r2, #0
 8001920:	741a      	strb	r2, [r3, #16]
	sequencer->is_looping = 0;
 8001922:	687b      	ldr	r3, [r7, #4]
 8001924:	2200      	movs	r2, #0
 8001926:	745a      	strb	r2, [r3, #17]
}
 8001928:	bf00      	nop
 800192a:	370c      	adds	r7, #12
 800192c:	46bd      	mov	sp, r7
 800192e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001932:	4770      	bx	lr

08001934 <Sequencer_SetSequence>:

void Sequencer_SetSequence(Sequencer* sequencer, const uint32_t* sequence_time_array, const uint32_t sequence_len, uint8_t is_looping)
{
 8001934:	b480      	push	{r7}
 8001936:	b085      	sub	sp, #20
 8001938:	af00      	add	r7, sp, #0
 800193a:	60f8      	str	r0, [r7, #12]
 800193c:	60b9      	str	r1, [r7, #8]
 800193e:	607a      	str	r2, [r7, #4]
 8001940:	70fb      	strb	r3, [r7, #3]
	sequencer->sequence_time_array = sequence_time_array;
 8001942:	68fb      	ldr	r3, [r7, #12]
 8001944:	68ba      	ldr	r2, [r7, #8]
 8001946:	601a      	str	r2, [r3, #0]
	sequencer->sequence_len = sequence_len;
 8001948:	68fb      	ldr	r3, [r7, #12]
 800194a:	687a      	ldr	r2, [r7, #4]
 800194c:	605a      	str	r2, [r3, #4]
	sequencer->is_looping = is_looping;
 800194e:	68fb      	ldr	r3, [r7, #12]
 8001950:	78fa      	ldrb	r2, [r7, #3]
 8001952:	745a      	strb	r2, [r3, #17]
}
 8001954:	bf00      	nop
 8001956:	3714      	adds	r7, #20
 8001958:	46bd      	mov	sp, r7
 800195a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800195e:	4770      	bx	lr

08001960 <Sequencer_Update>:

uint32_t Sequencer_Update(Sequencer* sequencer, uint32_t time, uint32_t* index)
{
 8001960:	b480      	push	{r7}
 8001962:	b085      	sub	sp, #20
 8001964:	af00      	add	r7, sp, #0
 8001966:	60f8      	str	r0, [r7, #12]
 8001968:	60b9      	str	r1, [r7, #8]
 800196a:	607a      	str	r2, [r7, #4]
	/*
	 * each element in the time array says how long to hold that step for
	 */

	if (sequencer->is_running && sequencer->sequence_time_array != NULL)
 800196c:	68fb      	ldr	r3, [r7, #12]
 800196e:	7c1b      	ldrb	r3, [r3, #16]
 8001970:	2b00      	cmp	r3, #0
 8001972:	d030      	beq.n	80019d6 <Sequencer_Update+0x76>
 8001974:	68fb      	ldr	r3, [r7, #12]
 8001976:	681b      	ldr	r3, [r3, #0]
 8001978:	2b00      	cmp	r3, #0
 800197a:	d02c      	beq.n	80019d6 <Sequencer_Update+0x76>
	{
		if (time > sequencer->time)
 800197c:	68fb      	ldr	r3, [r7, #12]
 800197e:	68db      	ldr	r3, [r3, #12]
 8001980:	68ba      	ldr	r2, [r7, #8]
 8001982:	429a      	cmp	r2, r3
 8001984:	d927      	bls.n	80019d6 <Sequencer_Update+0x76>
		{
			*index = sequencer->sequence_index;
 8001986:	68fb      	ldr	r3, [r7, #12]
 8001988:	689a      	ldr	r2, [r3, #8]
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	601a      	str	r2, [r3, #0]
			sequencer->time += sequencer->sequence_time_array[sequencer->sequence_index];
 800198e:	68fb      	ldr	r3, [r7, #12]
 8001990:	68da      	ldr	r2, [r3, #12]
 8001992:	68fb      	ldr	r3, [r7, #12]
 8001994:	6819      	ldr	r1, [r3, #0]
 8001996:	68fb      	ldr	r3, [r7, #12]
 8001998:	689b      	ldr	r3, [r3, #8]
 800199a:	009b      	lsls	r3, r3, #2
 800199c:	440b      	add	r3, r1
 800199e:	681b      	ldr	r3, [r3, #0]
 80019a0:	441a      	add	r2, r3
 80019a2:	68fb      	ldr	r3, [r7, #12]
 80019a4:	60da      	str	r2, [r3, #12]
			sequencer->sequence_index++;
 80019a6:	68fb      	ldr	r3, [r7, #12]
 80019a8:	689b      	ldr	r3, [r3, #8]
 80019aa:	1c5a      	adds	r2, r3, #1
 80019ac:	68fb      	ldr	r3, [r7, #12]
 80019ae:	609a      	str	r2, [r3, #8]

			if (sequencer->sequence_index == sequencer->sequence_len)  /* reached the end of the sequence */
 80019b0:	68fb      	ldr	r3, [r7, #12]
 80019b2:	689a      	ldr	r2, [r3, #8]
 80019b4:	68fb      	ldr	r3, [r7, #12]
 80019b6:	685b      	ldr	r3, [r3, #4]
 80019b8:	429a      	cmp	r2, r3
 80019ba:	d10a      	bne.n	80019d2 <Sequencer_Update+0x72>
			{
				if (sequencer->is_looping)
 80019bc:	68fb      	ldr	r3, [r7, #12]
 80019be:	7c5b      	ldrb	r3, [r3, #17]
 80019c0:	2b00      	cmp	r3, #0
 80019c2:	d003      	beq.n	80019cc <Sequencer_Update+0x6c>
					sequencer->sequence_index = 0;
 80019c4:	68fb      	ldr	r3, [r7, #12]
 80019c6:	2200      	movs	r2, #0
 80019c8:	609a      	str	r2, [r3, #8]
 80019ca:	e002      	b.n	80019d2 <Sequencer_Update+0x72>
				else
					sequencer->is_running = 0;
 80019cc:	68fb      	ldr	r3, [r7, #12]
 80019ce:	2200      	movs	r2, #0
 80019d0:	741a      	strb	r2, [r3, #16]
			}

			return 1;
 80019d2:	2301      	movs	r3, #1
 80019d4:	e000      	b.n	80019d8 <Sequencer_Update+0x78>
		}
	}

	return 0;
 80019d6:	2300      	movs	r3, #0
}
 80019d8:	4618      	mov	r0, r3
 80019da:	3714      	adds	r7, #20
 80019dc:	46bd      	mov	sp, r7
 80019de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019e2:	4770      	bx	lr

080019e4 <Sequencer_Start>:

void Sequencer_Start(Sequencer* sequencer, uint32_t time)
{
 80019e4:	b480      	push	{r7}
 80019e6:	b083      	sub	sp, #12
 80019e8:	af00      	add	r7, sp, #0
 80019ea:	6078      	str	r0, [r7, #4]
 80019ec:	6039      	str	r1, [r7, #0]
	sequencer->time = time;
 80019ee:	687b      	ldr	r3, [r7, #4]
 80019f0:	683a      	ldr	r2, [r7, #0]
 80019f2:	60da      	str	r2, [r3, #12]
	sequencer->sequence_index = 0;
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	2200      	movs	r2, #0
 80019f8:	609a      	str	r2, [r3, #8]
	sequencer->is_running = 1;
 80019fa:	687b      	ldr	r3, [r7, #4]
 80019fc:	2201      	movs	r2, #1
 80019fe:	741a      	strb	r2, [r3, #16]
}
 8001a00:	bf00      	nop
 8001a02:	370c      	adds	r7, #12
 8001a04:	46bd      	mov	sp, r7
 8001a06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a0a:	4770      	bx	lr

08001a0c <Sequencer_Stop>:

void Sequencer_Stop(Sequencer* sequencer)
{
 8001a0c:	b480      	push	{r7}
 8001a0e:	b083      	sub	sp, #12
 8001a10:	af00      	add	r7, sp, #0
 8001a12:	6078      	str	r0, [r7, #4]
	sequencer->is_running = 0;
 8001a14:	687b      	ldr	r3, [r7, #4]
 8001a16:	2200      	movs	r2, #0
 8001a18:	741a      	strb	r2, [r3, #16]
}
 8001a1a:	bf00      	nop
 8001a1c:	370c      	adds	r7, #12
 8001a1e:	46bd      	mov	sp, r7
 8001a20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a24:	4770      	bx	lr

08001a26 <Sequencer_IsRunning>:

uint32_t Sequencer_IsRunning(Sequencer* sequencer)
{
 8001a26:	b480      	push	{r7}
 8001a28:	b083      	sub	sp, #12
 8001a2a:	af00      	add	r7, sp, #0
 8001a2c:	6078      	str	r0, [r7, #4]
	return sequencer->is_running;
 8001a2e:	687b      	ldr	r3, [r7, #4]
 8001a30:	7c1b      	ldrb	r3, [r3, #16]
}
 8001a32:	4618      	mov	r0, r3
 8001a34:	370c      	adds	r7, #12
 8001a36:	46bd      	mov	sp, r7
 8001a38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a3c:	4770      	bx	lr
	...

08001a40 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001a40:	b480      	push	{r7}
 8001a42:	b083      	sub	sp, #12
 8001a44:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001a46:	4b0a      	ldr	r3, [pc, #40]	@ (8001a70 <HAL_MspInit+0x30>)
 8001a48:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8001a4c:	4a08      	ldr	r2, [pc, #32]	@ (8001a70 <HAL_MspInit+0x30>)
 8001a4e:	f043 0302 	orr.w	r3, r3, #2
 8001a52:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 8001a56:	4b06      	ldr	r3, [pc, #24]	@ (8001a70 <HAL_MspInit+0x30>)
 8001a58:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8001a5c:	f003 0302 	and.w	r3, r3, #2
 8001a60:	607b      	str	r3, [r7, #4]
 8001a62:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a64:	bf00      	nop
 8001a66:	370c      	adds	r7, #12
 8001a68:	46bd      	mov	sp, r7
 8001a6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a6e:	4770      	bx	lr
 8001a70:	58024400 	.word	0x58024400

08001a74 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001a74:	b580      	push	{r7, lr}
 8001a76:	b08c      	sub	sp, #48	@ 0x30
 8001a78:	af00      	add	r7, sp, #0
 8001a7a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a7c:	f107 031c 	add.w	r3, r7, #28
 8001a80:	2200      	movs	r2, #0
 8001a82:	601a      	str	r2, [r3, #0]
 8001a84:	605a      	str	r2, [r3, #4]
 8001a86:	609a      	str	r2, [r3, #8]
 8001a88:	60da      	str	r2, [r3, #12]
 8001a8a:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8001a8c:	687b      	ldr	r3, [r7, #4]
 8001a8e:	681b      	ldr	r3, [r3, #0]
 8001a90:	4a39      	ldr	r2, [pc, #228]	@ (8001b78 <HAL_ADC_MspInit+0x104>)
 8001a92:	4293      	cmp	r3, r2
 8001a94:	d133      	bne.n	8001afe <HAL_ADC_MspInit+0x8a>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    HAL_RCC_ADC12_CLK_ENABLED++;
 8001a96:	4b39      	ldr	r3, [pc, #228]	@ (8001b7c <HAL_ADC_MspInit+0x108>)
 8001a98:	681b      	ldr	r3, [r3, #0]
 8001a9a:	3301      	adds	r3, #1
 8001a9c:	4a37      	ldr	r2, [pc, #220]	@ (8001b7c <HAL_ADC_MspInit+0x108>)
 8001a9e:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC12_CLK_ENABLED==1){
 8001aa0:	4b36      	ldr	r3, [pc, #216]	@ (8001b7c <HAL_ADC_MspInit+0x108>)
 8001aa2:	681b      	ldr	r3, [r3, #0]
 8001aa4:	2b01      	cmp	r3, #1
 8001aa6:	d10e      	bne.n	8001ac6 <HAL_ADC_MspInit+0x52>
      __HAL_RCC_ADC12_CLK_ENABLE();
 8001aa8:	4b35      	ldr	r3, [pc, #212]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001aaa:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8001aae:	4a34      	ldr	r2, [pc, #208]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001ab0:	f043 0320 	orr.w	r3, r3, #32
 8001ab4:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8001ab8:	4b31      	ldr	r3, [pc, #196]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001aba:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8001abe:	f003 0320 	and.w	r3, r3, #32
 8001ac2:	61bb      	str	r3, [r7, #24]
 8001ac4:	69bb      	ldr	r3, [r7, #24]
    }

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ac6:	4b2e      	ldr	r3, [pc, #184]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001ac8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001acc:	4a2c      	ldr	r2, [pc, #176]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001ace:	f043 0304 	orr.w	r3, r3, #4
 8001ad2:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001ad6:	4b2a      	ldr	r3, [pc, #168]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001ad8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001adc:	f003 0304 	and.w	r3, r3, #4
 8001ae0:	617b      	str	r3, [r7, #20]
 8001ae2:	697b      	ldr	r3, [r7, #20]
    /**ADC1 GPIO Configuration
    PC4     ------> ADC1_INP4
    PC5     ------> ADC1_INN4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 8001ae4:	2330      	movs	r3, #48	@ 0x30
 8001ae6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001ae8:	2303      	movs	r3, #3
 8001aea:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001aec:	2300      	movs	r3, #0
 8001aee:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001af0:	f107 031c 	add.w	r3, r7, #28
 8001af4:	4619      	mov	r1, r3
 8001af6:	4823      	ldr	r0, [pc, #140]	@ (8001b84 <HAL_ADC_MspInit+0x110>)
 8001af8:	f007 fcae 	bl	8009458 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
 8001afc:	e037      	b.n	8001b6e <HAL_ADC_MspInit+0xfa>
  else if(hadc->Instance==ADC2)
 8001afe:	687b      	ldr	r3, [r7, #4]
 8001b00:	681b      	ldr	r3, [r3, #0]
 8001b02:	4a21      	ldr	r2, [pc, #132]	@ (8001b88 <HAL_ADC_MspInit+0x114>)
 8001b04:	4293      	cmp	r3, r2
 8001b06:	d132      	bne.n	8001b6e <HAL_ADC_MspInit+0xfa>
    HAL_RCC_ADC12_CLK_ENABLED++;
 8001b08:	4b1c      	ldr	r3, [pc, #112]	@ (8001b7c <HAL_ADC_MspInit+0x108>)
 8001b0a:	681b      	ldr	r3, [r3, #0]
 8001b0c:	3301      	adds	r3, #1
 8001b0e:	4a1b      	ldr	r2, [pc, #108]	@ (8001b7c <HAL_ADC_MspInit+0x108>)
 8001b10:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC12_CLK_ENABLED==1){
 8001b12:	4b1a      	ldr	r3, [pc, #104]	@ (8001b7c <HAL_ADC_MspInit+0x108>)
 8001b14:	681b      	ldr	r3, [r3, #0]
 8001b16:	2b01      	cmp	r3, #1
 8001b18:	d10e      	bne.n	8001b38 <HAL_ADC_MspInit+0xc4>
      __HAL_RCC_ADC12_CLK_ENABLE();
 8001b1a:	4b19      	ldr	r3, [pc, #100]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001b1c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8001b20:	4a17      	ldr	r2, [pc, #92]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001b22:	f043 0320 	orr.w	r3, r3, #32
 8001b26:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8001b2a:	4b15      	ldr	r3, [pc, #84]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001b2c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8001b30:	f003 0320 	and.w	r3, r3, #32
 8001b34:	613b      	str	r3, [r7, #16]
 8001b36:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b38:	4b11      	ldr	r3, [pc, #68]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001b3a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001b3e:	4a10      	ldr	r2, [pc, #64]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001b40:	f043 0301 	orr.w	r3, r3, #1
 8001b44:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001b48:	4b0d      	ldr	r3, [pc, #52]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001b4a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001b4e:	f003 0301 	and.w	r3, r3, #1
 8001b52:	60fb      	str	r3, [r7, #12]
 8001b54:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001b56:	23c0      	movs	r3, #192	@ 0xc0
 8001b58:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b5a:	2303      	movs	r3, #3
 8001b5c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b5e:	2300      	movs	r3, #0
 8001b60:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b62:	f107 031c 	add.w	r3, r7, #28
 8001b66:	4619      	mov	r1, r3
 8001b68:	4808      	ldr	r0, [pc, #32]	@ (8001b8c <HAL_ADC_MspInit+0x118>)
 8001b6a:	f007 fc75 	bl	8009458 <HAL_GPIO_Init>
}
 8001b6e:	bf00      	nop
 8001b70:	3730      	adds	r7, #48	@ 0x30
 8001b72:	46bd      	mov	sp, r7
 8001b74:	bd80      	pop	{r7, pc}
 8001b76:	bf00      	nop
 8001b78:	40022000 	.word	0x40022000
 8001b7c:	24004538 	.word	0x24004538
 8001b80:	58024400 	.word	0x58024400
 8001b84:	58020800 	.word	0x58020800
 8001b88:	40022100 	.word	0x40022100
 8001b8c:	58020000 	.word	0x58020000

08001b90 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001b90:	b580      	push	{r7, lr}
 8001b92:	b08a      	sub	sp, #40	@ 0x28
 8001b94:	af00      	add	r7, sp, #0
 8001b96:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b98:	f107 0314 	add.w	r3, r7, #20
 8001b9c:	2200      	movs	r2, #0
 8001b9e:	601a      	str	r2, [r3, #0]
 8001ba0:	605a      	str	r2, [r3, #4]
 8001ba2:	609a      	str	r2, [r3, #8]
 8001ba4:	60da      	str	r2, [r3, #12]
 8001ba6:	611a      	str	r2, [r3, #16]
  if(hdac->Instance==DAC1)
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	4a48      	ldr	r2, [pc, #288]	@ (8001cd0 <HAL_DAC_MspInit+0x140>)
 8001bae:	4293      	cmp	r3, r2
 8001bb0:	f040 808a 	bne.w	8001cc8 <HAL_DAC_MspInit+0x138>
  {
  /* USER CODE BEGIN DAC1_MspInit 0 */

  /* USER CODE END DAC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC12_CLK_ENABLE();
 8001bb4:	4b47      	ldr	r3, [pc, #284]	@ (8001cd4 <HAL_DAC_MspInit+0x144>)
 8001bb6:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001bba:	4a46      	ldr	r2, [pc, #280]	@ (8001cd4 <HAL_DAC_MspInit+0x144>)
 8001bbc:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8001bc0:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8001bc4:	4b43      	ldr	r3, [pc, #268]	@ (8001cd4 <HAL_DAC_MspInit+0x144>)
 8001bc6:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001bca:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8001bce:	613b      	str	r3, [r7, #16]
 8001bd0:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001bd2:	4b40      	ldr	r3, [pc, #256]	@ (8001cd4 <HAL_DAC_MspInit+0x144>)
 8001bd4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001bd8:	4a3e      	ldr	r2, [pc, #248]	@ (8001cd4 <HAL_DAC_MspInit+0x144>)
 8001bda:	f043 0301 	orr.w	r3, r3, #1
 8001bde:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001be2:	4b3c      	ldr	r3, [pc, #240]	@ (8001cd4 <HAL_DAC_MspInit+0x144>)
 8001be4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001be8:	f003 0301 	and.w	r3, r3, #1
 8001bec:	60fb      	str	r3, [r7, #12]
 8001bee:	68fb      	ldr	r3, [r7, #12]
    /**DAC1 GPIO Configuration
    PA4     ------> DAC1_OUT1
    PA5     ------> DAC1_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 8001bf0:	2330      	movs	r3, #48	@ 0x30
 8001bf2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001bf4:	2303      	movs	r3, #3
 8001bf6:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bf8:	2300      	movs	r3, #0
 8001bfa:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bfc:	f107 0314 	add.w	r3, r7, #20
 8001c00:	4619      	mov	r1, r3
 8001c02:	4835      	ldr	r0, [pc, #212]	@ (8001cd8 <HAL_DAC_MspInit+0x148>)
 8001c04:	f007 fc28 	bl	8009458 <HAL_GPIO_Init>

    /* DAC1 DMA Init */
    /* DAC1_CH1 Init */
    hdma_dac1_ch1.Instance = DMA1_Stream0;
 8001c08:	4b34      	ldr	r3, [pc, #208]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c0a:	4a35      	ldr	r2, [pc, #212]	@ (8001ce0 <HAL_DAC_MspInit+0x150>)
 8001c0c:	601a      	str	r2, [r3, #0]
    hdma_dac1_ch1.Init.Request = DMA_REQUEST_DAC1;
 8001c0e:	4b33      	ldr	r3, [pc, #204]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c10:	2243      	movs	r2, #67	@ 0x43
 8001c12:	605a      	str	r2, [r3, #4]
    hdma_dac1_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001c14:	4b31      	ldr	r3, [pc, #196]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c16:	2240      	movs	r2, #64	@ 0x40
 8001c18:	609a      	str	r2, [r3, #8]
    hdma_dac1_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 8001c1a:	4b30      	ldr	r3, [pc, #192]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c1c:	2200      	movs	r2, #0
 8001c1e:	60da      	str	r2, [r3, #12]
    hdma_dac1_ch1.Init.MemInc = DMA_MINC_ENABLE;
 8001c20:	4b2e      	ldr	r3, [pc, #184]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c22:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001c26:	611a      	str	r2, [r3, #16]
    hdma_dac1_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8001c28:	4b2c      	ldr	r3, [pc, #176]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c2a:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001c2e:	615a      	str	r2, [r3, #20]
    hdma_dac1_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8001c30:	4b2a      	ldr	r3, [pc, #168]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c32:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8001c36:	619a      	str	r2, [r3, #24]
    hdma_dac1_ch1.Init.Mode = DMA_CIRCULAR;
 8001c38:	4b28      	ldr	r3, [pc, #160]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c3a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001c3e:	61da      	str	r2, [r3, #28]
    hdma_dac1_ch1.Init.Priority = DMA_PRIORITY_LOW;
 8001c40:	4b26      	ldr	r3, [pc, #152]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c42:	2200      	movs	r2, #0
 8001c44:	621a      	str	r2, [r3, #32]
    hdma_dac1_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001c46:	4b25      	ldr	r3, [pc, #148]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c48:	2200      	movs	r2, #0
 8001c4a:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_dac1_ch1) != HAL_OK)
 8001c4c:	4823      	ldr	r0, [pc, #140]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c4e:	f005 fb2f 	bl	80072b0 <HAL_DMA_Init>
 8001c52:	4603      	mov	r3, r0
 8001c54:	2b00      	cmp	r3, #0
 8001c56:	d001      	beq.n	8001c5c <HAL_DAC_MspInit+0xcc>
    {
      Error_Handler();
 8001c58:	f7ff fe4a 	bl	80018f0 <Error_Handler>
    }

    __HAL_LINKDMA(hdac,DMA_Handle1,hdma_dac1_ch1);
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	4a1f      	ldr	r2, [pc, #124]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c60:	609a      	str	r2, [r3, #8]
 8001c62:	4a1e      	ldr	r2, [pc, #120]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c64:	687b      	ldr	r3, [r7, #4]
 8001c66:	6393      	str	r3, [r2, #56]	@ 0x38

    /* DAC1_CH2 Init */
    hdma_dac1_ch2.Instance = DMA1_Stream1;
 8001c68:	4b1e      	ldr	r3, [pc, #120]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001c6a:	4a1f      	ldr	r2, [pc, #124]	@ (8001ce8 <HAL_DAC_MspInit+0x158>)
 8001c6c:	601a      	str	r2, [r3, #0]
    hdma_dac1_ch2.Init.Request = DMA_REQUEST_DAC2;
 8001c6e:	4b1d      	ldr	r3, [pc, #116]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001c70:	2244      	movs	r2, #68	@ 0x44
 8001c72:	605a      	str	r2, [r3, #4]
    hdma_dac1_ch2.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001c74:	4b1b      	ldr	r3, [pc, #108]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001c76:	2240      	movs	r2, #64	@ 0x40
 8001c78:	609a      	str	r2, [r3, #8]
    hdma_dac1_ch2.Init.PeriphInc = DMA_PINC_DISABLE;
 8001c7a:	4b1a      	ldr	r3, [pc, #104]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001c7c:	2200      	movs	r2, #0
 8001c7e:	60da      	str	r2, [r3, #12]
    hdma_dac1_ch2.Init.MemInc = DMA_MINC_ENABLE;
 8001c80:	4b18      	ldr	r3, [pc, #96]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001c82:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001c86:	611a      	str	r2, [r3, #16]
    hdma_dac1_ch2.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8001c88:	4b16      	ldr	r3, [pc, #88]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001c8a:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001c8e:	615a      	str	r2, [r3, #20]
    hdma_dac1_ch2.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8001c90:	4b14      	ldr	r3, [pc, #80]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001c92:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8001c96:	619a      	str	r2, [r3, #24]
    hdma_dac1_ch2.Init.Mode = DMA_CIRCULAR;
 8001c98:	4b12      	ldr	r3, [pc, #72]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001c9a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001c9e:	61da      	str	r2, [r3, #28]
    hdma_dac1_ch2.Init.Priority = DMA_PRIORITY_LOW;
 8001ca0:	4b10      	ldr	r3, [pc, #64]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001ca2:	2200      	movs	r2, #0
 8001ca4:	621a      	str	r2, [r3, #32]
    hdma_dac1_ch2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001ca6:	4b0f      	ldr	r3, [pc, #60]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001ca8:	2200      	movs	r2, #0
 8001caa:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_dac1_ch2) != HAL_OK)
 8001cac:	480d      	ldr	r0, [pc, #52]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001cae:	f005 faff 	bl	80072b0 <HAL_DMA_Init>
 8001cb2:	4603      	mov	r3, r0
 8001cb4:	2b00      	cmp	r3, #0
 8001cb6:	d001      	beq.n	8001cbc <HAL_DAC_MspInit+0x12c>
    {
      Error_Handler();
 8001cb8:	f7ff fe1a 	bl	80018f0 <Error_Handler>
    }

    __HAL_LINKDMA(hdac,DMA_Handle2,hdma_dac1_ch2);
 8001cbc:	687b      	ldr	r3, [r7, #4]
 8001cbe:	4a09      	ldr	r2, [pc, #36]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001cc0:	60da      	str	r2, [r3, #12]
 8001cc2:	4a08      	ldr	r2, [pc, #32]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001cc4:	687b      	ldr	r3, [r7, #4]
 8001cc6:	6393      	str	r3, [r2, #56]	@ 0x38

  /* USER CODE END DAC1_MspInit 1 */

  }

}
 8001cc8:	bf00      	nop
 8001cca:	3728      	adds	r7, #40	@ 0x28
 8001ccc:	46bd      	mov	sp, r7
 8001cce:	bd80      	pop	{r7, pc}
 8001cd0:	40007400 	.word	0x40007400
 8001cd4:	58024400 	.word	0x58024400
 8001cd8:	58020000 	.word	0x58020000
 8001cdc:	240003dc 	.word	0x240003dc
 8001ce0:	40020010 	.word	0x40020010
 8001ce4:	24000454 	.word	0x24000454
 8001ce8:	40020028 	.word	0x40020028

08001cec <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001cec:	b580      	push	{r7, lr}
 8001cee:	b0b8      	sub	sp, #224	@ 0xe0
 8001cf0:	af00      	add	r7, sp, #0
 8001cf2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cf4:	f107 03cc 	add.w	r3, r7, #204	@ 0xcc
 8001cf8:	2200      	movs	r2, #0
 8001cfa:	601a      	str	r2, [r3, #0]
 8001cfc:	605a      	str	r2, [r3, #4]
 8001cfe:	609a      	str	r2, [r3, #8]
 8001d00:	60da      	str	r2, [r3, #12]
 8001d02:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001d04:	f107 0310 	add.w	r3, r7, #16
 8001d08:	22b8      	movs	r2, #184	@ 0xb8
 8001d0a:	2100      	movs	r1, #0
 8001d0c:	4618      	mov	r0, r3
 8001d0e:	f015 fae0 	bl	80172d2 <memset>
  if(hi2c->Instance==I2C2)
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	681b      	ldr	r3, [r3, #0]
 8001d16:	4a27      	ldr	r2, [pc, #156]	@ (8001db4 <HAL_I2C_MspInit+0xc8>)
 8001d18:	4293      	cmp	r3, r2
 8001d1a:	d146      	bne.n	8001daa <HAL_I2C_MspInit+0xbe>

  /* USER CODE END I2C2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8001d1c:	f04f 0208 	mov.w	r2, #8
 8001d20:	f04f 0300 	mov.w	r3, #0
 8001d24:	e9c7 2304 	strd	r2, r3, [r7, #16]
    PeriphClkInitStruct.I2c123ClockSelection = RCC_I2C1235CLKSOURCE_D2PCLK1;
 8001d28:	2300      	movs	r3, #0
 8001d2a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d2e:	f107 0310 	add.w	r3, r7, #16
 8001d32:	4618      	mov	r0, r3
 8001d34:	f00a f8ec 	bl	800bf10 <HAL_RCCEx_PeriphCLKConfig>
 8001d38:	4603      	mov	r3, r0
 8001d3a:	2b00      	cmp	r3, #0
 8001d3c:	d001      	beq.n	8001d42 <HAL_I2C_MspInit+0x56>
    {
      Error_Handler();
 8001d3e:	f7ff fdd7 	bl	80018f0 <Error_Handler>
    }

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d42:	4b1d      	ldr	r3, [pc, #116]	@ (8001db8 <HAL_I2C_MspInit+0xcc>)
 8001d44:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001d48:	4a1b      	ldr	r2, [pc, #108]	@ (8001db8 <HAL_I2C_MspInit+0xcc>)
 8001d4a:	f043 0302 	orr.w	r3, r3, #2
 8001d4e:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001d52:	4b19      	ldr	r3, [pc, #100]	@ (8001db8 <HAL_I2C_MspInit+0xcc>)
 8001d54:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001d58:	f003 0302 	and.w	r3, r3, #2
 8001d5c:	60fb      	str	r3, [r7, #12]
 8001d5e:	68fb      	ldr	r3, [r7, #12]
    /**I2C2 GPIO Configuration
    PB10     ------> I2C2_SCL
    PB11     ------> I2C2_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 8001d60:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8001d64:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001d68:	2312      	movs	r3, #18
 8001d6a:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d6e:	2300      	movs	r3, #0
 8001d70:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d74:	2300      	movs	r3, #0
 8001d76:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8001d7a:	2304      	movs	r3, #4
 8001d7c:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d80:	f107 03cc 	add.w	r3, r7, #204	@ 0xcc
 8001d84:	4619      	mov	r1, r3
 8001d86:	480d      	ldr	r0, [pc, #52]	@ (8001dbc <HAL_I2C_MspInit+0xd0>)
 8001d88:	f007 fb66 	bl	8009458 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8001d8c:	4b0a      	ldr	r3, [pc, #40]	@ (8001db8 <HAL_I2C_MspInit+0xcc>)
 8001d8e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001d92:	4a09      	ldr	r2, [pc, #36]	@ (8001db8 <HAL_I2C_MspInit+0xcc>)
 8001d94:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001d98:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8001d9c:	4b06      	ldr	r3, [pc, #24]	@ (8001db8 <HAL_I2C_MspInit+0xcc>)
 8001d9e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001da2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001da6:	60bb      	str	r3, [r7, #8]
 8001da8:	68bb      	ldr	r3, [r7, #8]

  /* USER CODE END I2C2_MspInit 1 */

  }

}
 8001daa:	bf00      	nop
 8001dac:	37e0      	adds	r7, #224	@ 0xe0
 8001dae:	46bd      	mov	sp, r7
 8001db0:	bd80      	pop	{r7, pc}
 8001db2:	bf00      	nop
 8001db4:	40005800 	.word	0x40005800
 8001db8:	58024400 	.word	0x58024400
 8001dbc:	58020400 	.word	0x58020400

08001dc0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001dc0:	b580      	push	{r7, lr}
 8001dc2:	b0bc      	sub	sp, #240	@ 0xf0
 8001dc4:	af00      	add	r7, sp, #0
 8001dc6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001dc8:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 8001dcc:	2200      	movs	r2, #0
 8001dce:	601a      	str	r2, [r3, #0]
 8001dd0:	605a      	str	r2, [r3, #4]
 8001dd2:	609a      	str	r2, [r3, #8]
 8001dd4:	60da      	str	r2, [r3, #12]
 8001dd6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001dd8:	f107 0320 	add.w	r3, r7, #32
 8001ddc:	22b8      	movs	r2, #184	@ 0xb8
 8001dde:	2100      	movs	r1, #0
 8001de0:	4618      	mov	r0, r3
 8001de2:	f015 fa76 	bl	80172d2 <memset>
  if(hspi->Instance==SPI2)
 8001de6:	687b      	ldr	r3, [r7, #4]
 8001de8:	681b      	ldr	r3, [r3, #0]
 8001dea:	4a72      	ldr	r2, [pc, #456]	@ (8001fb4 <HAL_SPI_MspInit+0x1f4>)
 8001dec:	4293      	cmp	r3, r2
 8001dee:	d146      	bne.n	8001e7e <HAL_SPI_MspInit+0xbe>

  /* USER CODE END SPI2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI2;
 8001df0:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001df4:	f04f 0300 	mov.w	r3, #0
 8001df8:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL;
 8001dfc:	2300      	movs	r3, #0
 8001dfe:	67fb      	str	r3, [r7, #124]	@ 0x7c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001e00:	f107 0320 	add.w	r3, r7, #32
 8001e04:	4618      	mov	r0, r3
 8001e06:	f00a f883 	bl	800bf10 <HAL_RCCEx_PeriphCLKConfig>
 8001e0a:	4603      	mov	r3, r0
 8001e0c:	2b00      	cmp	r3, #0
 8001e0e:	d001      	beq.n	8001e14 <HAL_SPI_MspInit+0x54>
    {
      Error_Handler();
 8001e10:	f7ff fd6e 	bl	80018f0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001e14:	4b68      	ldr	r3, [pc, #416]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001e16:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001e1a:	4a67      	ldr	r2, [pc, #412]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001e1c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001e20:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8001e24:	4b64      	ldr	r3, [pc, #400]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001e26:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001e2a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001e2e:	61fb      	str	r3, [r7, #28]
 8001e30:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001e32:	4b61      	ldr	r3, [pc, #388]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001e34:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001e38:	4a5f      	ldr	r2, [pc, #380]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001e3a:	f043 0302 	orr.w	r3, r3, #2
 8001e3e:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001e42:	4b5d      	ldr	r3, [pc, #372]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001e44:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001e48:	f003 0302 	and.w	r3, r3, #2
 8001e4c:	61bb      	str	r3, [r7, #24]
 8001e4e:	69bb      	ldr	r3, [r7, #24]
    /**SPI2 GPIO Configuration
    PB13     ------> SPI2_SCK
    PB14     ------> SPI2_MISO
    PB15     ------> SPI2_MOSI
    */
    GPIO_InitStruct.Pin = ACCEL_SCK1_Pin|ACCEL_MISO1_Pin|ACCEL_MOSI1_Pin;
 8001e50:	f44f 4360 	mov.w	r3, #57344	@ 0xe000
 8001e54:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e58:	2302      	movs	r3, #2
 8001e5a:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e5e:	2300      	movs	r3, #0
 8001e60:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e64:	2300      	movs	r3, #0
 8001e66:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001e6a:	2305      	movs	r3, #5
 8001e6c:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e70:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 8001e74:	4619      	mov	r1, r3
 8001e76:	4851      	ldr	r0, [pc, #324]	@ (8001fbc <HAL_SPI_MspInit+0x1fc>)
 8001e78:	f007 faee 	bl	8009458 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI4_MspInit 1 */

  /* USER CODE END SPI4_MspInit 1 */
  }

}
 8001e7c:	e096      	b.n	8001fac <HAL_SPI_MspInit+0x1ec>
  else if(hspi->Instance==SPI3)
 8001e7e:	687b      	ldr	r3, [r7, #4]
 8001e80:	681b      	ldr	r3, [r3, #0]
 8001e82:	4a4f      	ldr	r2, [pc, #316]	@ (8001fc0 <HAL_SPI_MspInit+0x200>)
 8001e84:	4293      	cmp	r3, r2
 8001e86:	d146      	bne.n	8001f16 <HAL_SPI_MspInit+0x156>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI3;
 8001e88:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001e8c:	f04f 0300 	mov.w	r3, #0
 8001e90:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL;
 8001e94:	2300      	movs	r3, #0
 8001e96:	67fb      	str	r3, [r7, #124]	@ 0x7c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001e98:	f107 0320 	add.w	r3, r7, #32
 8001e9c:	4618      	mov	r0, r3
 8001e9e:	f00a f837 	bl	800bf10 <HAL_RCCEx_PeriphCLKConfig>
 8001ea2:	4603      	mov	r3, r0
 8001ea4:	2b00      	cmp	r3, #0
 8001ea6:	d001      	beq.n	8001eac <HAL_SPI_MspInit+0xec>
      Error_Handler();
 8001ea8:	f7ff fd22 	bl	80018f0 <Error_Handler>
    __HAL_RCC_SPI3_CLK_ENABLE();
 8001eac:	4b42      	ldr	r3, [pc, #264]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001eae:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001eb2:	4a41      	ldr	r2, [pc, #260]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001eb4:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8001eb8:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8001ebc:	4b3e      	ldr	r3, [pc, #248]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001ebe:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001ec2:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8001ec6:	617b      	str	r3, [r7, #20]
 8001ec8:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001eca:	4b3b      	ldr	r3, [pc, #236]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001ecc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001ed0:	4a39      	ldr	r2, [pc, #228]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001ed2:	f043 0304 	orr.w	r3, r3, #4
 8001ed6:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001eda:	4b37      	ldr	r3, [pc, #220]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001edc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001ee0:	f003 0304 	and.w	r3, r3, #4
 8001ee4:	613b      	str	r3, [r7, #16]
 8001ee6:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 8001ee8:	f44f 53e0 	mov.w	r3, #7168	@ 0x1c00
 8001eec:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ef0:	2302      	movs	r3, #2
 8001ef2:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ef6:	2300      	movs	r3, #0
 8001ef8:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001efc:	2300      	movs	r3, #0
 8001efe:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 8001f02:	2306      	movs	r3, #6
 8001f04:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f08:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 8001f0c:	4619      	mov	r1, r3
 8001f0e:	482d      	ldr	r0, [pc, #180]	@ (8001fc4 <HAL_SPI_MspInit+0x204>)
 8001f10:	f007 faa2 	bl	8009458 <HAL_GPIO_Init>
}
 8001f14:	e04a      	b.n	8001fac <HAL_SPI_MspInit+0x1ec>
  else if(hspi->Instance==SPI4)
 8001f16:	687b      	ldr	r3, [r7, #4]
 8001f18:	681b      	ldr	r3, [r3, #0]
 8001f1a:	4a2b      	ldr	r2, [pc, #172]	@ (8001fc8 <HAL_SPI_MspInit+0x208>)
 8001f1c:	4293      	cmp	r3, r2
 8001f1e:	d145      	bne.n	8001fac <HAL_SPI_MspInit+0x1ec>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI4;
 8001f20:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001f24:	f04f 0300 	mov.w	r3, #0
 8001f28:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.Spi45ClockSelection = RCC_SPI45CLKSOURCE_D2PCLK1;
 8001f2c:	2300      	movs	r3, #0
 8001f2e:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001f32:	f107 0320 	add.w	r3, r7, #32
 8001f36:	4618      	mov	r0, r3
 8001f38:	f009 ffea 	bl	800bf10 <HAL_RCCEx_PeriphCLKConfig>
 8001f3c:	4603      	mov	r3, r0
 8001f3e:	2b00      	cmp	r3, #0
 8001f40:	d001      	beq.n	8001f46 <HAL_SPI_MspInit+0x186>
      Error_Handler();
 8001f42:	f7ff fcd5 	bl	80018f0 <Error_Handler>
    __HAL_RCC_SPI4_CLK_ENABLE();
 8001f46:	4b1c      	ldr	r3, [pc, #112]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001f48:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001f4c:	4a1a      	ldr	r2, [pc, #104]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001f4e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001f52:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8001f56:	4b18      	ldr	r3, [pc, #96]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001f58:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001f5c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001f60:	60fb      	str	r3, [r7, #12]
 8001f62:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8001f64:	4b14      	ldr	r3, [pc, #80]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001f66:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001f6a:	4a13      	ldr	r2, [pc, #76]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001f6c:	f043 0310 	orr.w	r3, r3, #16
 8001f70:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001f74:	4b10      	ldr	r3, [pc, #64]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001f76:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001f7a:	f003 0310 	and.w	r3, r3, #16
 8001f7e:	60bb      	str	r3, [r7, #8]
 8001f80:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_5|GPIO_PIN_6;
 8001f82:	2364      	movs	r3, #100	@ 0x64
 8001f84:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f88:	2302      	movs	r3, #2
 8001f8a:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f8e:	2300      	movs	r3, #0
 8001f90:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f94:	2300      	movs	r3, #0
 8001f96:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI4;
 8001f9a:	2305      	movs	r3, #5
 8001f9c:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001fa0:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 8001fa4:	4619      	mov	r1, r3
 8001fa6:	4809      	ldr	r0, [pc, #36]	@ (8001fcc <HAL_SPI_MspInit+0x20c>)
 8001fa8:	f007 fa56 	bl	8009458 <HAL_GPIO_Init>
}
 8001fac:	bf00      	nop
 8001fae:	37f0      	adds	r7, #240	@ 0xf0
 8001fb0:	46bd      	mov	sp, r7
 8001fb2:	bd80      	pop	{r7, pc}
 8001fb4:	40003800 	.word	0x40003800
 8001fb8:	58024400 	.word	0x58024400
 8001fbc:	58020400 	.word	0x58020400
 8001fc0:	40003c00 	.word	0x40003c00
 8001fc4:	58020800 	.word	0x58020800
 8001fc8:	40013400 	.word	0x40013400
 8001fcc:	58021000 	.word	0x58021000

08001fd0 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001fd0:	b580      	push	{r7, lr}
 8001fd2:	b086      	sub	sp, #24
 8001fd4:	af00      	add	r7, sp, #0
 8001fd6:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8001fd8:	687b      	ldr	r3, [r7, #4]
 8001fda:	681b      	ldr	r3, [r3, #0]
 8001fdc:	4a45      	ldr	r2, [pc, #276]	@ (80020f4 <HAL_TIM_Base_MspInit+0x124>)
 8001fde:	4293      	cmp	r3, r2
 8001fe0:	d10f      	bne.n	8002002 <HAL_TIM_Base_MspInit+0x32>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001fe2:	4b45      	ldr	r3, [pc, #276]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8001fe4:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001fe8:	4a43      	ldr	r2, [pc, #268]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8001fea:	f043 0301 	orr.w	r3, r3, #1
 8001fee:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8001ff2:	4b41      	ldr	r3, [pc, #260]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8001ff4:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001ff8:	f003 0301 	and.w	r3, r3, #1
 8001ffc:	617b      	str	r3, [r7, #20]
 8001ffe:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 8002000:	e074      	b.n	80020ec <HAL_TIM_Base_MspInit+0x11c>
  else if(htim_base->Instance==TIM2)
 8002002:	687b      	ldr	r3, [r7, #4]
 8002004:	681b      	ldr	r3, [r3, #0]
 8002006:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800200a:	d10f      	bne.n	800202c <HAL_TIM_Base_MspInit+0x5c>
    __HAL_RCC_TIM2_CLK_ENABLE();
 800200c:	4b3a      	ldr	r3, [pc, #232]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 800200e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8002012:	4a39      	ldr	r2, [pc, #228]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8002014:	f043 0301 	orr.w	r3, r3, #1
 8002018:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 800201c:	4b36      	ldr	r3, [pc, #216]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 800201e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8002022:	f003 0301 	and.w	r3, r3, #1
 8002026:	613b      	str	r3, [r7, #16]
 8002028:	693b      	ldr	r3, [r7, #16]
}
 800202a:	e05f      	b.n	80020ec <HAL_TIM_Base_MspInit+0x11c>
  else if(htim_base->Instance==TIM3)
 800202c:	687b      	ldr	r3, [r7, #4]
 800202e:	681b      	ldr	r3, [r3, #0]
 8002030:	4a32      	ldr	r2, [pc, #200]	@ (80020fc <HAL_TIM_Base_MspInit+0x12c>)
 8002032:	4293      	cmp	r3, r2
 8002034:	d117      	bne.n	8002066 <HAL_TIM_Base_MspInit+0x96>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002036:	4b30      	ldr	r3, [pc, #192]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8002038:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 800203c:	4a2e      	ldr	r2, [pc, #184]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 800203e:	f043 0302 	orr.w	r3, r3, #2
 8002042:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8002046:	4b2c      	ldr	r3, [pc, #176]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8002048:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 800204c:	f003 0302 	and.w	r3, r3, #2
 8002050:	60fb      	str	r3, [r7, #12]
 8002052:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8002054:	2200      	movs	r2, #0
 8002056:	2100      	movs	r1, #0
 8002058:	201d      	movs	r0, #29
 800205a:	f004 fdc4 	bl	8006be6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 800205e:	201d      	movs	r0, #29
 8002060:	f004 fddb 	bl	8006c1a <HAL_NVIC_EnableIRQ>
}
 8002064:	e042      	b.n	80020ec <HAL_TIM_Base_MspInit+0x11c>
  else if(htim_base->Instance==TIM4)
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	4a25      	ldr	r2, [pc, #148]	@ (8002100 <HAL_TIM_Base_MspInit+0x130>)
 800206c:	4293      	cmp	r3, r2
 800206e:	d13d      	bne.n	80020ec <HAL_TIM_Base_MspInit+0x11c>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8002070:	4b21      	ldr	r3, [pc, #132]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8002072:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8002076:	4a20      	ldr	r2, [pc, #128]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8002078:	f043 0304 	orr.w	r3, r3, #4
 800207c:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8002080:	4b1d      	ldr	r3, [pc, #116]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8002082:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8002086:	f003 0304 	and.w	r3, r3, #4
 800208a:	60bb      	str	r3, [r7, #8]
 800208c:	68bb      	ldr	r3, [r7, #8]
    hdma_tim4_ch1.Instance = DMA1_Stream2;
 800208e:	4b1d      	ldr	r3, [pc, #116]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 8002090:	4a1d      	ldr	r2, [pc, #116]	@ (8002108 <HAL_TIM_Base_MspInit+0x138>)
 8002092:	601a      	str	r2, [r3, #0]
    hdma_tim4_ch1.Init.Request = DMA_REQUEST_TIM4_CH1;
 8002094:	4b1b      	ldr	r3, [pc, #108]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 8002096:	221d      	movs	r2, #29
 8002098:	605a      	str	r2, [r3, #4]
    hdma_tim4_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 800209a:	4b1a      	ldr	r3, [pc, #104]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 800209c:	2240      	movs	r2, #64	@ 0x40
 800209e:	609a      	str	r2, [r3, #8]
    hdma_tim4_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 80020a0:	4b18      	ldr	r3, [pc, #96]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020a2:	2200      	movs	r2, #0
 80020a4:	60da      	str	r2, [r3, #12]
    hdma_tim4_ch1.Init.MemInc = DMA_MINC_ENABLE;
 80020a6:	4b17      	ldr	r3, [pc, #92]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020a8:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80020ac:	611a      	str	r2, [r3, #16]
    hdma_tim4_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80020ae:	4b15      	ldr	r3, [pc, #84]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020b0:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80020b4:	615a      	str	r2, [r3, #20]
    hdma_tim4_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 80020b6:	4b13      	ldr	r3, [pc, #76]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020b8:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80020bc:	619a      	str	r2, [r3, #24]
    hdma_tim4_ch1.Init.Mode = DMA_NORMAL;
 80020be:	4b11      	ldr	r3, [pc, #68]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020c0:	2200      	movs	r2, #0
 80020c2:	61da      	str	r2, [r3, #28]
    hdma_tim4_ch1.Init.Priority = DMA_PRIORITY_LOW;
 80020c4:	4b0f      	ldr	r3, [pc, #60]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020c6:	2200      	movs	r2, #0
 80020c8:	621a      	str	r2, [r3, #32]
    hdma_tim4_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80020ca:	4b0e      	ldr	r3, [pc, #56]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020cc:	2200      	movs	r2, #0
 80020ce:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_tim4_ch1) != HAL_OK)
 80020d0:	480c      	ldr	r0, [pc, #48]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020d2:	f005 f8ed 	bl	80072b0 <HAL_DMA_Init>
 80020d6:	4603      	mov	r3, r0
 80020d8:	2b00      	cmp	r3, #0
 80020da:	d001      	beq.n	80020e0 <HAL_TIM_Base_MspInit+0x110>
      Error_Handler();
 80020dc:	f7ff fc08 	bl	80018f0 <Error_Handler>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC1],hdma_tim4_ch1);
 80020e0:	687b      	ldr	r3, [r7, #4]
 80020e2:	4a08      	ldr	r2, [pc, #32]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020e4:	625a      	str	r2, [r3, #36]	@ 0x24
 80020e6:	4a07      	ldr	r2, [pc, #28]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020e8:	687b      	ldr	r3, [r7, #4]
 80020ea:	6393      	str	r3, [r2, #56]	@ 0x38
}
 80020ec:	bf00      	nop
 80020ee:	3718      	adds	r7, #24
 80020f0:	46bd      	mov	sp, r7
 80020f2:	bd80      	pop	{r7, pc}
 80020f4:	40010000 	.word	0x40010000
 80020f8:	58024400 	.word	0x58024400
 80020fc:	40000400 	.word	0x40000400
 8002100:	40000800 	.word	0x40000800
 8002104:	240007e8 	.word	0x240007e8
 8002108:	40020040 	.word	0x40020040

0800210c <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 800210c:	b580      	push	{r7, lr}
 800210e:	b08a      	sub	sp, #40	@ 0x28
 8002110:	af00      	add	r7, sp, #0
 8002112:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002114:	f107 0314 	add.w	r3, r7, #20
 8002118:	2200      	movs	r2, #0
 800211a:	601a      	str	r2, [r3, #0]
 800211c:	605a      	str	r2, [r3, #4]
 800211e:	609a      	str	r2, [r3, #8]
 8002120:	60da      	str	r2, [r3, #12]
 8002122:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM3)
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	681b      	ldr	r3, [r3, #0]
 8002128:	4a26      	ldr	r2, [pc, #152]	@ (80021c4 <HAL_TIM_MspPostInit+0xb8>)
 800212a:	4293      	cmp	r3, r2
 800212c:	d120      	bne.n	8002170 <HAL_TIM_MspPostInit+0x64>
  {
  /* USER CODE BEGIN TIM3_MspPostInit 0 */

  /* USER CODE END TIM3_MspPostInit 0 */
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800212e:	4b26      	ldr	r3, [pc, #152]	@ (80021c8 <HAL_TIM_MspPostInit+0xbc>)
 8002130:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8002134:	4a24      	ldr	r2, [pc, #144]	@ (80021c8 <HAL_TIM_MspPostInit+0xbc>)
 8002136:	f043 0304 	orr.w	r3, r3, #4
 800213a:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 800213e:	4b22      	ldr	r3, [pc, #136]	@ (80021c8 <HAL_TIM_MspPostInit+0xbc>)
 8002140:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8002144:	f003 0304 	and.w	r3, r3, #4
 8002148:	613b      	str	r3, [r7, #16]
 800214a:	693b      	ldr	r3, [r7, #16]
    /**TIM3 GPIO Configuration
    PC6     ------> TIM3_CH1
    PC7     ------> TIM3_CH2
    PC8     ------> TIM3_CH3
    */
    GPIO_InitStruct.Pin = LED_STROBE_1_Pin|LED_STROBE_2_Pin|LED_STROBE_3_Pin;
 800214c:	f44f 73e0 	mov.w	r3, #448	@ 0x1c0
 8002150:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002152:	2302      	movs	r3, #2
 8002154:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002156:	2300      	movs	r3, #0
 8002158:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800215a:	2300      	movs	r3, #0
 800215c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 800215e:	2302      	movs	r3, #2
 8002160:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002162:	f107 0314 	add.w	r3, r7, #20
 8002166:	4619      	mov	r1, r3
 8002168:	4818      	ldr	r0, [pc, #96]	@ (80021cc <HAL_TIM_MspPostInit+0xc0>)
 800216a:	f007 f975 	bl	8009458 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 800216e:	e024      	b.n	80021ba <HAL_TIM_MspPostInit+0xae>
  else if(htim->Instance==TIM4)
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	681b      	ldr	r3, [r3, #0]
 8002174:	4a16      	ldr	r2, [pc, #88]	@ (80021d0 <HAL_TIM_MspPostInit+0xc4>)
 8002176:	4293      	cmp	r3, r2
 8002178:	d11f      	bne.n	80021ba <HAL_TIM_MspPostInit+0xae>
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800217a:	4b13      	ldr	r3, [pc, #76]	@ (80021c8 <HAL_TIM_MspPostInit+0xbc>)
 800217c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8002180:	4a11      	ldr	r2, [pc, #68]	@ (80021c8 <HAL_TIM_MspPostInit+0xbc>)
 8002182:	f043 0308 	orr.w	r3, r3, #8
 8002186:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 800218a:	4b0f      	ldr	r3, [pc, #60]	@ (80021c8 <HAL_TIM_MspPostInit+0xbc>)
 800218c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8002190:	f003 0308 	and.w	r3, r3, #8
 8002194:	60fb      	str	r3, [r7, #12]
 8002196:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = LED_ACCEL_Pin;
 8002198:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800219c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800219e:	2302      	movs	r3, #2
 80021a0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021a2:	2300      	movs	r3, #0
 80021a4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80021a6:	2300      	movs	r3, #0
 80021a8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 80021aa:	2302      	movs	r3, #2
 80021ac:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(LED_ACCEL_GPIO_Port, &GPIO_InitStruct);
 80021ae:	f107 0314 	add.w	r3, r7, #20
 80021b2:	4619      	mov	r1, r3
 80021b4:	4807      	ldr	r0, [pc, #28]	@ (80021d4 <HAL_TIM_MspPostInit+0xc8>)
 80021b6:	f007 f94f 	bl	8009458 <HAL_GPIO_Init>
}
 80021ba:	bf00      	nop
 80021bc:	3728      	adds	r7, #40	@ 0x28
 80021be:	46bd      	mov	sp, r7
 80021c0:	bd80      	pop	{r7, pc}
 80021c2:	bf00      	nop
 80021c4:	40000400 	.word	0x40000400
 80021c8:	58024400 	.word	0x58024400
 80021cc:	58020800 	.word	0x58020800
 80021d0:	40000800 	.word	0x40000800
 80021d4:	58020c00 	.word	0x58020c00

080021d8 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80021d8:	b580      	push	{r7, lr}
 80021da:	b0ba      	sub	sp, #232	@ 0xe8
 80021dc:	af00      	add	r7, sp, #0
 80021de:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021e0:	f107 03d4 	add.w	r3, r7, #212	@ 0xd4
 80021e4:	2200      	movs	r2, #0
 80021e6:	601a      	str	r2, [r3, #0]
 80021e8:	605a      	str	r2, [r3, #4]
 80021ea:	609a      	str	r2, [r3, #8]
 80021ec:	60da      	str	r2, [r3, #12]
 80021ee:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80021f0:	f107 0318 	add.w	r3, r7, #24
 80021f4:	22b8      	movs	r2, #184	@ 0xb8
 80021f6:	2100      	movs	r1, #0
 80021f8:	4618      	mov	r0, r3
 80021fa:	f015 f86a 	bl	80172d2 <memset>
  if(huart->Instance==UART7)
 80021fe:	687b      	ldr	r3, [r7, #4]
 8002200:	681b      	ldr	r3, [r3, #0]
 8002202:	4a4d      	ldr	r2, [pc, #308]	@ (8002338 <HAL_UART_MspInit+0x160>)
 8002204:	4293      	cmp	r3, r2
 8002206:	d147      	bne.n	8002298 <HAL_UART_MspInit+0xc0>

  /* USER CODE END UART7_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_UART7;
 8002208:	f04f 0202 	mov.w	r2, #2
 800220c:	f04f 0300 	mov.w	r3, #0
 8002210:	e9c7 2306 	strd	r2, r3, [r7, #24]
    PeriphClkInitStruct.Usart234578ClockSelection = RCC_USART234578CLKSOURCE_D2PCLK1;
 8002214:	2300      	movs	r3, #0
 8002216:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800221a:	f107 0318 	add.w	r3, r7, #24
 800221e:	4618      	mov	r0, r3
 8002220:	f009 fe76 	bl	800bf10 <HAL_RCCEx_PeriphCLKConfig>
 8002224:	4603      	mov	r3, r0
 8002226:	2b00      	cmp	r3, #0
 8002228:	d001      	beq.n	800222e <HAL_UART_MspInit+0x56>
    {
      Error_Handler();
 800222a:	f7ff fb61 	bl	80018f0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_UART7_CLK_ENABLE();
 800222e:	4b43      	ldr	r3, [pc, #268]	@ (800233c <HAL_UART_MspInit+0x164>)
 8002230:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8002234:	4a41      	ldr	r2, [pc, #260]	@ (800233c <HAL_UART_MspInit+0x164>)
 8002236:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800223a:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 800223e:	4b3f      	ldr	r3, [pc, #252]	@ (800233c <HAL_UART_MspInit+0x164>)
 8002240:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8002244:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8002248:	617b      	str	r3, [r7, #20]
 800224a:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 800224c:	4b3b      	ldr	r3, [pc, #236]	@ (800233c <HAL_UART_MspInit+0x164>)
 800224e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8002252:	4a3a      	ldr	r2, [pc, #232]	@ (800233c <HAL_UART_MspInit+0x164>)
 8002254:	f043 0310 	orr.w	r3, r3, #16
 8002258:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 800225c:	4b37      	ldr	r3, [pc, #220]	@ (800233c <HAL_UART_MspInit+0x164>)
 800225e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8002262:	f003 0310 	and.w	r3, r3, #16
 8002266:	613b      	str	r3, [r7, #16]
 8002268:	693b      	ldr	r3, [r7, #16]
    PE7     ------> UART7_RX
    PE8     ------> UART7_TX
    PE9     ------> UART7_RTS
    PE10     ------> UART7_CTS
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10;
 800226a:	f44f 63f0 	mov.w	r3, #1920	@ 0x780
 800226e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002272:	2302      	movs	r3, #2
 8002274:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002278:	2300      	movs	r3, #0
 800227a:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800227e:	2300      	movs	r3, #0
 8002280:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF7_UART7;
 8002284:	2307      	movs	r3, #7
 8002286:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800228a:	f107 03d4 	add.w	r3, r7, #212	@ 0xd4
 800228e:	4619      	mov	r1, r3
 8002290:	482b      	ldr	r0, [pc, #172]	@ (8002340 <HAL_UART_MspInit+0x168>)
 8002292:	f007 f8e1 	bl	8009458 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8002296:	e04a      	b.n	800232e <HAL_UART_MspInit+0x156>
  else if(huart->Instance==USART1)
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	681b      	ldr	r3, [r3, #0]
 800229c:	4a29      	ldr	r2, [pc, #164]	@ (8002344 <HAL_UART_MspInit+0x16c>)
 800229e:	4293      	cmp	r3, r2
 80022a0:	d145      	bne.n	800232e <HAL_UART_MspInit+0x156>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 80022a2:	f04f 0201 	mov.w	r2, #1
 80022a6:	f04f 0300 	mov.w	r3, #0
 80022aa:	e9c7 2306 	strd	r2, r3, [r7, #24]
    PeriphClkInitStruct.Usart16ClockSelection = RCC_USART16910CLKSOURCE_D2PCLK2;
 80022ae:	2300      	movs	r3, #0
 80022b0:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80022b4:	f107 0318 	add.w	r3, r7, #24
 80022b8:	4618      	mov	r0, r3
 80022ba:	f009 fe29 	bl	800bf10 <HAL_RCCEx_PeriphCLKConfig>
 80022be:	4603      	mov	r3, r0
 80022c0:	2b00      	cmp	r3, #0
 80022c2:	d001      	beq.n	80022c8 <HAL_UART_MspInit+0xf0>
      Error_Handler();
 80022c4:	f7ff fb14 	bl	80018f0 <Error_Handler>
    __HAL_RCC_USART1_CLK_ENABLE();
 80022c8:	4b1c      	ldr	r3, [pc, #112]	@ (800233c <HAL_UART_MspInit+0x164>)
 80022ca:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80022ce:	4a1b      	ldr	r2, [pc, #108]	@ (800233c <HAL_UART_MspInit+0x164>)
 80022d0:	f043 0310 	orr.w	r3, r3, #16
 80022d4:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 80022d8:	4b18      	ldr	r3, [pc, #96]	@ (800233c <HAL_UART_MspInit+0x164>)
 80022da:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80022de:	f003 0310 	and.w	r3, r3, #16
 80022e2:	60fb      	str	r3, [r7, #12]
 80022e4:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80022e6:	4b15      	ldr	r3, [pc, #84]	@ (800233c <HAL_UART_MspInit+0x164>)
 80022e8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80022ec:	4a13      	ldr	r2, [pc, #76]	@ (800233c <HAL_UART_MspInit+0x164>)
 80022ee:	f043 0302 	orr.w	r3, r3, #2
 80022f2:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80022f6:	4b11      	ldr	r3, [pc, #68]	@ (800233c <HAL_UART_MspInit+0x164>)
 80022f8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80022fc:	f003 0302 	and.w	r3, r3, #2
 8002300:	60bb      	str	r3, [r7, #8]
 8002302:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = VCP_TX_Pin|VCP_RX_Pin;
 8002304:	23c0      	movs	r3, #192	@ 0xc0
 8002306:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800230a:	2302      	movs	r3, #2
 800230c:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002310:	2300      	movs	r3, #0
 8002312:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002316:	2300      	movs	r3, #0
 8002318:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800231c:	2307      	movs	r3, #7
 800231e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002322:	f107 03d4 	add.w	r3, r7, #212	@ 0xd4
 8002326:	4619      	mov	r1, r3
 8002328:	4807      	ldr	r0, [pc, #28]	@ (8002348 <HAL_UART_MspInit+0x170>)
 800232a:	f007 f895 	bl	8009458 <HAL_GPIO_Init>
}
 800232e:	bf00      	nop
 8002330:	37e8      	adds	r7, #232	@ 0xe8
 8002332:	46bd      	mov	sp, r7
 8002334:	bd80      	pop	{r7, pc}
 8002336:	bf00      	nop
 8002338:	40007800 	.word	0x40007800
 800233c:	58024400 	.word	0x58024400
 8002340:	58021000 	.word	0x58021000
 8002344:	40011000 	.word	0x40011000
 8002348:	58020400 	.word	0x58020400

0800234c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800234c:	b480      	push	{r7}
 800234e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002350:	bf00      	nop
 8002352:	e7fd      	b.n	8002350 <NMI_Handler+0x4>

08002354 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002354:	b480      	push	{r7}
 8002356:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002358:	bf00      	nop
 800235a:	e7fd      	b.n	8002358 <HardFault_Handler+0x4>

0800235c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800235c:	b480      	push	{r7}
 800235e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002360:	bf00      	nop
 8002362:	e7fd      	b.n	8002360 <MemManage_Handler+0x4>

08002364 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002364:	b480      	push	{r7}
 8002366:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002368:	bf00      	nop
 800236a:	e7fd      	b.n	8002368 <BusFault_Handler+0x4>

0800236c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800236c:	b480      	push	{r7}
 800236e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002370:	bf00      	nop
 8002372:	e7fd      	b.n	8002370 <UsageFault_Handler+0x4>

08002374 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002374:	b480      	push	{r7}
 8002376:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002378:	bf00      	nop
 800237a:	46bd      	mov	sp, r7
 800237c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002380:	4770      	bx	lr

08002382 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002382:	b480      	push	{r7}
 8002384:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002386:	bf00      	nop
 8002388:	46bd      	mov	sp, r7
 800238a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800238e:	4770      	bx	lr

08002390 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002390:	b480      	push	{r7}
 8002392:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002394:	bf00      	nop
 8002396:	46bd      	mov	sp, r7
 8002398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800239c:	4770      	bx	lr

0800239e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800239e:	b580      	push	{r7, lr}
 80023a0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80023a2:	f002 ff8d 	bl	80052c0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80023a6:	bf00      	nop
 80023a8:	bd80      	pop	{r7, pc}
	...

080023ac <DMA1_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA1 stream0 global interrupt.
  */
void DMA1_Stream0_IRQHandler(void)
{
 80023ac:	b580      	push	{r7, lr}
 80023ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */

  /* USER CODE END DMA1_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_dac1_ch1);
 80023b0:	4802      	ldr	r0, [pc, #8]	@ (80023bc <DMA1_Stream0_IRQHandler+0x10>)
 80023b2:	f005 fd3f 	bl	8007e34 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */

  /* USER CODE END DMA1_Stream0_IRQn 1 */
}
 80023b6:	bf00      	nop
 80023b8:	bd80      	pop	{r7, pc}
 80023ba:	bf00      	nop
 80023bc:	240003dc 	.word	0x240003dc

080023c0 <DMA1_Stream1_IRQHandler>:

/**
  * @brief This function handles DMA1 stream1 global interrupt.
  */
void DMA1_Stream1_IRQHandler(void)
{
 80023c0:	b580      	push	{r7, lr}
 80023c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_dac1_ch2);
 80023c4:	4802      	ldr	r0, [pc, #8]	@ (80023d0 <DMA1_Stream1_IRQHandler+0x10>)
 80023c6:	f005 fd35 	bl	8007e34 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */

  /* USER CODE END DMA1_Stream1_IRQn 1 */
}
 80023ca:	bf00      	nop
 80023cc:	bd80      	pop	{r7, pc}
 80023ce:	bf00      	nop
 80023d0:	24000454 	.word	0x24000454

080023d4 <DMA1_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA1 stream2 global interrupt.
  */
void DMA1_Stream2_IRQHandler(void)
{
 80023d4:	b580      	push	{r7, lr}
 80023d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream2_IRQn 0 */

  /* USER CODE END DMA1_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim4_ch1);
 80023d8:	4802      	ldr	r0, [pc, #8]	@ (80023e4 <DMA1_Stream2_IRQHandler+0x10>)
 80023da:	f005 fd2b 	bl	8007e34 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream2_IRQn 1 */

  /* USER CODE END DMA1_Stream2_IRQn 1 */
}
 80023de:	bf00      	nop
 80023e0:	bd80      	pop	{r7, pc}
 80023e2:	bf00      	nop
 80023e4:	240007e8 	.word	0x240007e8

080023e8 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 80023e8:	b580      	push	{r7, lr}
 80023ea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 80023ec:	4802      	ldr	r0, [pc, #8]	@ (80023f8 <TIM3_IRQHandler+0x10>)
 80023ee:	f00d f857 	bl	800f4a0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 80023f2:	bf00      	nop
 80023f4:	bd80      	pop	{r7, pc}
 80023f6:	bf00      	nop
 80023f8:	24000750 	.word	0x24000750

080023fc <OTG_HS_IRQHandler>:

/**
  * @brief This function handles USB On The Go HS global interrupt.
  */
void OTG_HS_IRQHandler(void)
{
 80023fc:	b580      	push	{r7, lr}
 80023fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN OTG_HS_IRQn 0 */

  /* USER CODE END OTG_HS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_HS);
 8002400:	4802      	ldr	r0, [pc, #8]	@ (800240c <OTG_HS_IRQHandler+0x10>)
 8002402:	f007 fc77 	bl	8009cf4 <HAL_PCD_IRQHandler>
  /* USER CODE BEGIN OTG_HS_IRQn 1 */

  /* USER CODE END OTG_HS_IRQn 1 */
}
 8002406:	bf00      	nop
 8002408:	bd80      	pop	{r7, pc}
 800240a:	bf00      	nop
 800240c:	24005a24 	.word	0x24005a24

08002410 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002410:	b480      	push	{r7}
 8002412:	af00      	add	r7, sp, #0
  return 1;
 8002414:	2301      	movs	r3, #1
}
 8002416:	4618      	mov	r0, r3
 8002418:	46bd      	mov	sp, r7
 800241a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800241e:	4770      	bx	lr

08002420 <_kill>:

int _kill(int pid, int sig)
{
 8002420:	b580      	push	{r7, lr}
 8002422:	b082      	sub	sp, #8
 8002424:	af00      	add	r7, sp, #0
 8002426:	6078      	str	r0, [r7, #4]
 8002428:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800242a:	f014 ffc3 	bl	80173b4 <__errno>
 800242e:	4603      	mov	r3, r0
 8002430:	2216      	movs	r2, #22
 8002432:	601a      	str	r2, [r3, #0]
  return -1;
 8002434:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002438:	4618      	mov	r0, r3
 800243a:	3708      	adds	r7, #8
 800243c:	46bd      	mov	sp, r7
 800243e:	bd80      	pop	{r7, pc}

08002440 <_exit>:

void _exit (int status)
{
 8002440:	b580      	push	{r7, lr}
 8002442:	b082      	sub	sp, #8
 8002444:	af00      	add	r7, sp, #0
 8002446:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002448:	f04f 31ff 	mov.w	r1, #4294967295
 800244c:	6878      	ldr	r0, [r7, #4]
 800244e:	f7ff ffe7 	bl	8002420 <_kill>
  while (1) {}    /* Make sure we hang here */
 8002452:	bf00      	nop
 8002454:	e7fd      	b.n	8002452 <_exit+0x12>

08002456 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002456:	b580      	push	{r7, lr}
 8002458:	b086      	sub	sp, #24
 800245a:	af00      	add	r7, sp, #0
 800245c:	60f8      	str	r0, [r7, #12]
 800245e:	60b9      	str	r1, [r7, #8]
 8002460:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002462:	2300      	movs	r3, #0
 8002464:	617b      	str	r3, [r7, #20]
 8002466:	e00a      	b.n	800247e <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002468:	f3af 8000 	nop.w
 800246c:	4601      	mov	r1, r0
 800246e:	68bb      	ldr	r3, [r7, #8]
 8002470:	1c5a      	adds	r2, r3, #1
 8002472:	60ba      	str	r2, [r7, #8]
 8002474:	b2ca      	uxtb	r2, r1
 8002476:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002478:	697b      	ldr	r3, [r7, #20]
 800247a:	3301      	adds	r3, #1
 800247c:	617b      	str	r3, [r7, #20]
 800247e:	697a      	ldr	r2, [r7, #20]
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	429a      	cmp	r2, r3
 8002484:	dbf0      	blt.n	8002468 <_read+0x12>
  }

  return len;
 8002486:	687b      	ldr	r3, [r7, #4]
}
 8002488:	4618      	mov	r0, r3
 800248a:	3718      	adds	r7, #24
 800248c:	46bd      	mov	sp, r7
 800248e:	bd80      	pop	{r7, pc}

08002490 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002490:	b580      	push	{r7, lr}
 8002492:	b086      	sub	sp, #24
 8002494:	af00      	add	r7, sp, #0
 8002496:	60f8      	str	r0, [r7, #12]
 8002498:	60b9      	str	r1, [r7, #8]
 800249a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800249c:	2300      	movs	r3, #0
 800249e:	617b      	str	r3, [r7, #20]
 80024a0:	e009      	b.n	80024b6 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80024a2:	68bb      	ldr	r3, [r7, #8]
 80024a4:	1c5a      	adds	r2, r3, #1
 80024a6:	60ba      	str	r2, [r7, #8]
 80024a8:	781b      	ldrb	r3, [r3, #0]
 80024aa:	4618      	mov	r0, r3
 80024ac:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80024b0:	697b      	ldr	r3, [r7, #20]
 80024b2:	3301      	adds	r3, #1
 80024b4:	617b      	str	r3, [r7, #20]
 80024b6:	697a      	ldr	r2, [r7, #20]
 80024b8:	687b      	ldr	r3, [r7, #4]
 80024ba:	429a      	cmp	r2, r3
 80024bc:	dbf1      	blt.n	80024a2 <_write+0x12>
  }
  return len;
 80024be:	687b      	ldr	r3, [r7, #4]
}
 80024c0:	4618      	mov	r0, r3
 80024c2:	3718      	adds	r7, #24
 80024c4:	46bd      	mov	sp, r7
 80024c6:	bd80      	pop	{r7, pc}

080024c8 <_close>:

int _close(int file)
{
 80024c8:	b480      	push	{r7}
 80024ca:	b083      	sub	sp, #12
 80024cc:	af00      	add	r7, sp, #0
 80024ce:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80024d0:	f04f 33ff 	mov.w	r3, #4294967295
}
 80024d4:	4618      	mov	r0, r3
 80024d6:	370c      	adds	r7, #12
 80024d8:	46bd      	mov	sp, r7
 80024da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024de:	4770      	bx	lr

080024e0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80024e0:	b480      	push	{r7}
 80024e2:	b083      	sub	sp, #12
 80024e4:	af00      	add	r7, sp, #0
 80024e6:	6078      	str	r0, [r7, #4]
 80024e8:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80024ea:	683b      	ldr	r3, [r7, #0]
 80024ec:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80024f0:	605a      	str	r2, [r3, #4]
  return 0;
 80024f2:	2300      	movs	r3, #0
}
 80024f4:	4618      	mov	r0, r3
 80024f6:	370c      	adds	r7, #12
 80024f8:	46bd      	mov	sp, r7
 80024fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024fe:	4770      	bx	lr

08002500 <_isatty>:

int _isatty(int file)
{
 8002500:	b480      	push	{r7}
 8002502:	b083      	sub	sp, #12
 8002504:	af00      	add	r7, sp, #0
 8002506:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002508:	2301      	movs	r3, #1
}
 800250a:	4618      	mov	r0, r3
 800250c:	370c      	adds	r7, #12
 800250e:	46bd      	mov	sp, r7
 8002510:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002514:	4770      	bx	lr

08002516 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002516:	b480      	push	{r7}
 8002518:	b085      	sub	sp, #20
 800251a:	af00      	add	r7, sp, #0
 800251c:	60f8      	str	r0, [r7, #12]
 800251e:	60b9      	str	r1, [r7, #8]
 8002520:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002522:	2300      	movs	r3, #0
}
 8002524:	4618      	mov	r0, r3
 8002526:	3714      	adds	r7, #20
 8002528:	46bd      	mov	sp, r7
 800252a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800252e:	4770      	bx	lr

08002530 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002530:	b580      	push	{r7, lr}
 8002532:	b086      	sub	sp, #24
 8002534:	af00      	add	r7, sp, #0
 8002536:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002538:	4a14      	ldr	r2, [pc, #80]	@ (800258c <_sbrk+0x5c>)
 800253a:	4b15      	ldr	r3, [pc, #84]	@ (8002590 <_sbrk+0x60>)
 800253c:	1ad3      	subs	r3, r2, r3
 800253e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002540:	697b      	ldr	r3, [r7, #20]
 8002542:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002544:	4b13      	ldr	r3, [pc, #76]	@ (8002594 <_sbrk+0x64>)
 8002546:	681b      	ldr	r3, [r3, #0]
 8002548:	2b00      	cmp	r3, #0
 800254a:	d102      	bne.n	8002552 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800254c:	4b11      	ldr	r3, [pc, #68]	@ (8002594 <_sbrk+0x64>)
 800254e:	4a12      	ldr	r2, [pc, #72]	@ (8002598 <_sbrk+0x68>)
 8002550:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002552:	4b10      	ldr	r3, [pc, #64]	@ (8002594 <_sbrk+0x64>)
 8002554:	681a      	ldr	r2, [r3, #0]
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	4413      	add	r3, r2
 800255a:	693a      	ldr	r2, [r7, #16]
 800255c:	429a      	cmp	r2, r3
 800255e:	d207      	bcs.n	8002570 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002560:	f014 ff28 	bl	80173b4 <__errno>
 8002564:	4603      	mov	r3, r0
 8002566:	220c      	movs	r2, #12
 8002568:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800256a:	f04f 33ff 	mov.w	r3, #4294967295
 800256e:	e009      	b.n	8002584 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002570:	4b08      	ldr	r3, [pc, #32]	@ (8002594 <_sbrk+0x64>)
 8002572:	681b      	ldr	r3, [r3, #0]
 8002574:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002576:	4b07      	ldr	r3, [pc, #28]	@ (8002594 <_sbrk+0x64>)
 8002578:	681a      	ldr	r2, [r3, #0]
 800257a:	687b      	ldr	r3, [r7, #4]
 800257c:	4413      	add	r3, r2
 800257e:	4a05      	ldr	r2, [pc, #20]	@ (8002594 <_sbrk+0x64>)
 8002580:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002582:	68fb      	ldr	r3, [r7, #12]
}
 8002584:	4618      	mov	r0, r3
 8002586:	3718      	adds	r7, #24
 8002588:	46bd      	mov	sp, r7
 800258a:	bd80      	pop	{r7, pc}
 800258c:	24050000 	.word	0x24050000
 8002590:	00000400 	.word	0x00000400
 8002594:	2400453c 	.word	0x2400453c
 8002598:	24006278 	.word	0x24006278

0800259c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 800259c:	b480      	push	{r7}
 800259e:	af00      	add	r7, sp, #0
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 80025a0:	4b32      	ldr	r3, [pc, #200]	@ (800266c <SystemInit+0xd0>)
 80025a2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80025a6:	4a31      	ldr	r2, [pc, #196]	@ (800266c <SystemInit+0xd0>)
 80025a8:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80025ac:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/

   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80025b0:	4b2f      	ldr	r3, [pc, #188]	@ (8002670 <SystemInit+0xd4>)
 80025b2:	681b      	ldr	r3, [r3, #0]
 80025b4:	f003 030f 	and.w	r3, r3, #15
 80025b8:	2b06      	cmp	r3, #6
 80025ba:	d807      	bhi.n	80025cc <SystemInit+0x30>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 80025bc:	4b2c      	ldr	r3, [pc, #176]	@ (8002670 <SystemInit+0xd4>)
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	f023 030f 	bic.w	r3, r3, #15
 80025c4:	4a2a      	ldr	r2, [pc, #168]	@ (8002670 <SystemInit+0xd4>)
 80025c6:	f043 0307 	orr.w	r3, r3, #7
 80025ca:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 80025cc:	4b29      	ldr	r3, [pc, #164]	@ (8002674 <SystemInit+0xd8>)
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	4a28      	ldr	r2, [pc, #160]	@ (8002674 <SystemInit+0xd8>)
 80025d2:	f043 0301 	orr.w	r3, r3, #1
 80025d6:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 80025d8:	4b26      	ldr	r3, [pc, #152]	@ (8002674 <SystemInit+0xd8>)
 80025da:	2200      	movs	r2, #0
 80025dc:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 80025de:	4b25      	ldr	r3, [pc, #148]	@ (8002674 <SystemInit+0xd8>)
 80025e0:	681a      	ldr	r2, [r3, #0]
 80025e2:	4924      	ldr	r1, [pc, #144]	@ (8002674 <SystemInit+0xd8>)
 80025e4:	4b24      	ldr	r3, [pc, #144]	@ (8002678 <SystemInit+0xdc>)
 80025e6:	4013      	ands	r3, r2
 80025e8:	600b      	str	r3, [r1, #0]

   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80025ea:	4b21      	ldr	r3, [pc, #132]	@ (8002670 <SystemInit+0xd4>)
 80025ec:	681b      	ldr	r3, [r3, #0]
 80025ee:	f003 0308 	and.w	r3, r3, #8
 80025f2:	2b00      	cmp	r3, #0
 80025f4:	d007      	beq.n	8002606 <SystemInit+0x6a>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 80025f6:	4b1e      	ldr	r3, [pc, #120]	@ (8002670 <SystemInit+0xd4>)
 80025f8:	681b      	ldr	r3, [r3, #0]
 80025fa:	f023 030f 	bic.w	r3, r3, #15
 80025fe:	4a1c      	ldr	r2, [pc, #112]	@ (8002670 <SystemInit+0xd4>)
 8002600:	f043 0307 	orr.w	r3, r3, #7
 8002604:	6013      	str	r3, [r2, #0]
  }

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 8002606:	4b1b      	ldr	r3, [pc, #108]	@ (8002674 <SystemInit+0xd8>)
 8002608:	2200      	movs	r2, #0
 800260a:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
 800260c:	4b19      	ldr	r3, [pc, #100]	@ (8002674 <SystemInit+0xd8>)
 800260e:	2200      	movs	r2, #0
 8002610:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
 8002612:	4b18      	ldr	r3, [pc, #96]	@ (8002674 <SystemInit+0xd8>)
 8002614:	2200      	movs	r2, #0
 8002616:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 8002618:	4b16      	ldr	r3, [pc, #88]	@ (8002674 <SystemInit+0xd8>)
 800261a:	4a18      	ldr	r2, [pc, #96]	@ (800267c <SystemInit+0xe0>)
 800261c:	629a      	str	r2, [r3, #40]	@ 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 800261e:	4b15      	ldr	r3, [pc, #84]	@ (8002674 <SystemInit+0xd8>)
 8002620:	4a17      	ldr	r2, [pc, #92]	@ (8002680 <SystemInit+0xe4>)
 8002622:	62da      	str	r2, [r3, #44]	@ 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 8002624:	4b13      	ldr	r3, [pc, #76]	@ (8002674 <SystemInit+0xd8>)
 8002626:	4a17      	ldr	r2, [pc, #92]	@ (8002684 <SystemInit+0xe8>)
 8002628:	631a      	str	r2, [r3, #48]	@ 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 800262a:	4b12      	ldr	r3, [pc, #72]	@ (8002674 <SystemInit+0xd8>)
 800262c:	2200      	movs	r2, #0
 800262e:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 8002630:	4b10      	ldr	r3, [pc, #64]	@ (8002674 <SystemInit+0xd8>)
 8002632:	4a14      	ldr	r2, [pc, #80]	@ (8002684 <SystemInit+0xe8>)
 8002634:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 8002636:	4b0f      	ldr	r3, [pc, #60]	@ (8002674 <SystemInit+0xd8>)
 8002638:	2200      	movs	r2, #0
 800263a:	63da      	str	r2, [r3, #60]	@ 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 800263c:	4b0d      	ldr	r3, [pc, #52]	@ (8002674 <SystemInit+0xd8>)
 800263e:	4a11      	ldr	r2, [pc, #68]	@ (8002684 <SystemInit+0xe8>)
 8002640:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 8002642:	4b0c      	ldr	r3, [pc, #48]	@ (8002674 <SystemInit+0xd8>)
 8002644:	2200      	movs	r2, #0
 8002646:	645a      	str	r2, [r3, #68]	@ 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8002648:	4b0a      	ldr	r3, [pc, #40]	@ (8002674 <SystemInit+0xd8>)
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	4a09      	ldr	r2, [pc, #36]	@ (8002674 <SystemInit+0xd8>)
 800264e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002652:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 8002654:	4b07      	ldr	r3, [pc, #28]	@ (8002674 <SystemInit+0xd8>)
 8002656:	2200      	movs	r2, #0
 8002658:	661a      	str	r2, [r3, #96]	@ 0x60
  /*
   * Disable the FMC bank1 (enabled after reset).
   * This, prevents CPU speculation access on this bank which blocks the use of FMC during
   * 24us. During this time the others FMC master (such as LTDC) cannot use it!
   */
  FMC_Bank1_R->BTCR[0] = 0x000030D2;
 800265a:	4b0b      	ldr	r3, [pc, #44]	@ (8002688 <SystemInit+0xec>)
 800265c:	f243 02d2 	movw	r2, #12498	@ 0x30d2
 8002660:	601a      	str	r2, [r3, #0]
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM or in Internal FLASH */
#endif /* USER_VECT_TAB_ADDRESS */

#endif /*DUAL_CORE && CORE_CM4*/
}
 8002662:	bf00      	nop
 8002664:	46bd      	mov	sp, r7
 8002666:	f85d 7b04 	ldr.w	r7, [sp], #4
 800266a:	4770      	bx	lr
 800266c:	e000ed00 	.word	0xe000ed00
 8002670:	52002000 	.word	0x52002000
 8002674:	58024400 	.word	0x58024400
 8002678:	eaf6ed7f 	.word	0xeaf6ed7f
 800267c:	02020200 	.word	0x02020200
 8002680:	01ff0000 	.word	0x01ff0000
 8002684:	01010280 	.word	0x01010280
 8002688:	52004000 	.word	0x52004000

0800268c <VibeCheck_Init>:
void VibeCheck_Init(VibeCheck* vc,
		TIM_HandleTypeDef* htim_strobe,
		TIM_HandleTypeDef* htim_wavegen,
		DAC_HandleTypeDef* hdac_wavegen,
		TIM_HandleTypeDef* htim_rgb)
{
 800268c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800268e:	b0e3      	sub	sp, #396	@ 0x18c
 8002690:	af10      	add	r7, sp, #64	@ 0x40
 8002692:	f507 74a4 	add.w	r4, r7, #328	@ 0x148
 8002696:	f5a4 749a 	sub.w	r4, r4, #308	@ 0x134
 800269a:	6020      	str	r0, [r4, #0]
 800269c:	f507 70a4 	add.w	r0, r7, #328	@ 0x148
 80026a0:	f5a0 709c 	sub.w	r0, r0, #312	@ 0x138
 80026a4:	6001      	str	r1, [r0, #0]
 80026a6:	f507 71a4 	add.w	r1, r7, #328	@ 0x148
 80026aa:	f5a1 719e 	sub.w	r1, r1, #316	@ 0x13c
 80026ae:	600a      	str	r2, [r1, #0]
 80026b0:	f507 72a4 	add.w	r2, r7, #328	@ 0x148
 80026b4:	f5a2 72a0 	sub.w	r2, r2, #320	@ 0x140
 80026b8:	6013      	str	r3, [r2, #0]
	VibeCheckShell_Init(&vc->shell);  /* the shell is linked to the USB middle-ware in usbd_cdc_if.c */
 80026ba:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80026be:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80026c2:	681b      	ldr	r3, [r3, #0]
 80026c4:	4618      	mov	r0, r3
 80026c6:	f000 fec5 	bl	8003454 <VibeCheckShell_Init>

	VibeCheckShell_InputHandler strobe_cmd = {
 80026ca:	4ab8      	ldr	r2, [pc, #736]	@ (80029ac <VibeCheck_Init+0x320>)
 80026cc:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 80026d0:	6810      	ldr	r0, [r2, #0]
 80026d2:	6018      	str	r0, [r3, #0]
 80026d4:	8891      	ldrh	r1, [r2, #4]
 80026d6:	7992      	ldrb	r2, [r2, #6]
 80026d8:	8099      	strh	r1, [r3, #4]
 80026da:	719a      	strb	r2, [r3, #6]
 80026dc:	f207 1307 	addw	r3, r7, #263	@ 0x107
 80026e0:	2239      	movs	r2, #57	@ 0x39
 80026e2:	2100      	movs	r1, #0
 80026e4:	4618      	mov	r0, r3
 80026e6:	f014 fdf4 	bl	80172d2 <memset>
 80026ea:	4bb1      	ldr	r3, [pc, #708]	@ (80029b0 <VibeCheck_Init+0x324>)
 80026ec:	f8c7 3140 	str.w	r3, [r7, #320]	@ 0x140
			.name = "strobe",
			.execute = VibeCheckStrobeCMD_Execute,
			.obj = &vc->strobe
 80026f0:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80026f4:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80026f8:	681a      	ldr	r2, [r3, #0]
 80026fa:	f242 4324 	movw	r3, #9252	@ 0x2424
 80026fe:	4413      	add	r3, r2
	VibeCheckShell_InputHandler strobe_cmd = {
 8002700:	f8c7 3144 	str.w	r3, [r7, #324]	@ 0x144
	};

	VibeCheckShell_InputHandler wavegen_cmd = {
 8002704:	4aab      	ldr	r2, [pc, #684]	@ (80029b4 <VibeCheck_Init+0x328>)
 8002706:	f107 03b8 	add.w	r3, r7, #184	@ 0xb8
 800270a:	6810      	ldr	r0, [r2, #0]
 800270c:	6851      	ldr	r1, [r2, #4]
 800270e:	c303      	stmia	r3!, {r0, r1}
 8002710:	f107 03c0 	add.w	r3, r7, #192	@ 0xc0
 8002714:	2238      	movs	r2, #56	@ 0x38
 8002716:	2100      	movs	r1, #0
 8002718:	4618      	mov	r0, r3
 800271a:	f014 fdda 	bl	80172d2 <memset>
 800271e:	4ba6      	ldr	r3, [pc, #664]	@ (80029b8 <VibeCheck_Init+0x32c>)
 8002720:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
			.name = "wavegen",
			.execute = VibeCheckWaveGenCMD_Execute,
			.obj = &vc->wavegen
 8002724:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002728:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 800272c:	681a      	ldr	r2, [r3, #0]
 800272e:	f242 4344 	movw	r3, #9284	@ 0x2444
 8002732:	4413      	add	r3, r2
	VibeCheckShell_InputHandler wavegen_cmd = {
 8002734:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
	};

	VibeCheckShell_InputHandler rgb_cmd = {
 8002738:	4ba0      	ldr	r3, [pc, #640]	@ (80029bc <VibeCheck_Init+0x330>)
 800273a:	673b      	str	r3, [r7, #112]	@ 0x70
 800273c:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 8002740:	223c      	movs	r2, #60	@ 0x3c
 8002742:	2100      	movs	r1, #0
 8002744:	4618      	mov	r0, r3
 8002746:	f014 fdc4 	bl	80172d2 <memset>
 800274a:	4b9d      	ldr	r3, [pc, #628]	@ (80029c0 <VibeCheck_Init+0x334>)
 800274c:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
			.name = "rgb",
			.execute = VibeCheckRGBCMD_Execute,
			.obj = &vc->rgb
 8002750:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002754:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8002758:	681a      	ldr	r2, [r3, #0]
 800275a:	f243 4390 	movw	r3, #13456	@ 0x3490
 800275e:	4413      	add	r3, r2
	VibeCheckShell_InputHandler rgb_cmd = {
 8002760:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
	};

	VibeCheckShell_InputHandler accel_cmd = {
 8002764:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002768:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 800276c:	4995      	ldr	r1, [pc, #596]	@ (80029c4 <VibeCheck_Init+0x338>)
 800276e:	461a      	mov	r2, r3
 8002770:	6808      	ldr	r0, [r1, #0]
 8002772:	6010      	str	r0, [r2, #0]
 8002774:	8889      	ldrh	r1, [r1, #4]
 8002776:	8091      	strh	r1, [r2, #4]
 8002778:	3306      	adds	r3, #6
 800277a:	223a      	movs	r2, #58	@ 0x3a
 800277c:	2100      	movs	r1, #0
 800277e:	4618      	mov	r0, r3
 8002780:	f014 fda7 	bl	80172d2 <memset>
 8002784:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002788:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 800278c:	4a8e      	ldr	r2, [pc, #568]	@ (80029c8 <VibeCheck_Init+0x33c>)
 800278e:	641a      	str	r2, [r3, #64]	@ 0x40
			.name = "accel",
			.execute = VibeCheckAccelCMD_Execute,
			.obj = &vc->accel
 8002790:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002794:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8002798:	681a      	ldr	r2, [r3, #0]
 800279a:	f643 2310 	movw	r3, #14864	@ 0x3a10
 800279e:	4413      	add	r3, r2
	VibeCheckShell_InputHandler accel_cmd = {
 80027a0:	f507 72a4 	add.w	r2, r7, #328	@ 0x148
 80027a4:	f5a2 7290 	sub.w	r2, r2, #288	@ 0x120
 80027a8:	6453      	str	r3, [r2, #68]	@ 0x44
	};

	VibeCheckShell_RegisterInputHandler(&vc->shell, strobe_cmd);
 80027aa:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80027ae:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80027b2:	681e      	ldr	r6, [r3, #0]
 80027b4:	466d      	mov	r5, sp
 80027b6:	f507 7486 	add.w	r4, r7, #268	@ 0x10c
 80027ba:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80027bc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80027be:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80027c0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80027c2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80027c4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80027c6:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80027ca:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 80027ce:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 80027d2:	cb0e      	ldmia	r3, {r1, r2, r3}
 80027d4:	4630      	mov	r0, r6
 80027d6:	f000 ff6b 	bl	80036b0 <VibeCheckShell_RegisterInputHandler>
	VibeCheckShell_RegisterInputHandler(&vc->shell, wavegen_cmd);
 80027da:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80027de:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80027e2:	681e      	ldr	r6, [r3, #0]
 80027e4:	466d      	mov	r5, sp
 80027e6:	f107 04c4 	add.w	r4, r7, #196	@ 0xc4
 80027ea:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80027ec:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80027ee:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80027f0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80027f2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80027f4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80027f6:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80027fa:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 80027fe:	f107 03b8 	add.w	r3, r7, #184	@ 0xb8
 8002802:	cb0e      	ldmia	r3, {r1, r2, r3}
 8002804:	4630      	mov	r0, r6
 8002806:	f000 ff53 	bl	80036b0 <VibeCheckShell_RegisterInputHandler>
	VibeCheckShell_RegisterInputHandler(&vc->shell, rgb_cmd);
 800280a:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 800280e:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8002812:	681e      	ldr	r6, [r3, #0]
 8002814:	466d      	mov	r5, sp
 8002816:	f107 047c 	add.w	r4, r7, #124	@ 0x7c
 800281a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800281c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800281e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002820:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002822:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002824:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002826:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800282a:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800282e:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 8002832:	cb0e      	ldmia	r3, {r1, r2, r3}
 8002834:	4630      	mov	r0, r6
 8002836:	f000 ff3b 	bl	80036b0 <VibeCheckShell_RegisterInputHandler>
	VibeCheckShell_RegisterInputHandler(&vc->shell, accel_cmd);
 800283a:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 800283e:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8002842:	681b      	ldr	r3, [r3, #0]
 8002844:	607b      	str	r3, [r7, #4]
 8002846:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 800284a:	f5a3 7690 	sub.w	r6, r3, #288	@ 0x120
 800284e:	466d      	mov	r5, sp
 8002850:	f106 040c 	add.w	r4, r6, #12
 8002854:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002856:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002858:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800285a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800285c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800285e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002860:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8002864:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8002868:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
 800286c:	6878      	ldr	r0, [r7, #4]
 800286e:	f000 ff1f 	bl	80036b0 <VibeCheckShell_RegisterInputHandler>

	VibeCheckShell_OutputHandler wavegen_sender = {
 8002872:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002876:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 800287a:	4a54      	ldr	r2, [pc, #336]	@ (80029cc <VibeCheck_Init+0x340>)
 800287c:	601a      	str	r2, [r3, #0]
			.execute = VibeCheckWaveGenSender_Execute,
			.obj = &vc->wavegen
 800287e:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002882:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8002886:	681a      	ldr	r2, [r3, #0]
 8002888:	f242 4344 	movw	r3, #9284	@ 0x2444
 800288c:	4413      	add	r3, r2
	VibeCheckShell_OutputHandler wavegen_sender = {
 800288e:	f507 72a4 	add.w	r2, r7, #328	@ 0x148
 8002892:	f5a2 7294 	sub.w	r2, r2, #296	@ 0x128
 8002896:	6053      	str	r3, [r2, #4]
	};

	VibeCheckShell_OutputHandler accel_sender = {
 8002898:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 800289c:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 80028a0:	4a4b      	ldr	r2, [pc, #300]	@ (80029d0 <VibeCheck_Init+0x344>)
 80028a2:	601a      	str	r2, [r3, #0]
			.execute = VibeCheckAccelSender_Execute,
			.obj = &vc->accel
 80028a4:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80028a8:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80028ac:	681a      	ldr	r2, [r3, #0]
 80028ae:	f643 2310 	movw	r3, #14864	@ 0x3a10
 80028b2:	4413      	add	r3, r2
	VibeCheckShell_OutputHandler accel_sender = {
 80028b4:	f507 72a4 	add.w	r2, r7, #328	@ 0x148
 80028b8:	f5a2 7298 	sub.w	r2, r2, #304	@ 0x130
 80028bc:	6053      	str	r3, [r2, #4]
	};

	VibeCheckShell_RegisterOutputHandler(&vc->shell, wavegen_sender);
 80028be:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80028c2:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80028c6:	6818      	ldr	r0, [r3, #0]
 80028c8:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80028cc:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 80028d0:	e893 0006 	ldmia.w	r3, {r1, r2}
 80028d4:	f000 ff1e 	bl	8003714 <VibeCheckShell_RegisterOutputHandler>
	VibeCheckShell_RegisterOutputHandler(&vc->shell, accel_sender);
 80028d8:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80028dc:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80028e0:	6818      	ldr	r0, [r3, #0]
 80028e2:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80028e6:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 80028ea:	e893 0006 	ldmia.w	r3, {r1, r2}
 80028ee:	f000 ff11 	bl	8003714 <VibeCheckShell_RegisterOutputHandler>

	VibeCheckStrobe_Init(&vc->strobe, htim_strobe);
 80028f2:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80028f6:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80028fa:	681a      	ldr	r2, [r3, #0]
 80028fc:	f242 4324 	movw	r3, #9252	@ 0x2424
 8002900:	4413      	add	r3, r2
 8002902:	f507 72a4 	add.w	r2, r7, #328	@ 0x148
 8002906:	f5a2 729c 	sub.w	r2, r2, #312	@ 0x138
 800290a:	6811      	ldr	r1, [r2, #0]
 800290c:	4618      	mov	r0, r3
 800290e:	f001 f97f 	bl	8003c10 <VibeCheckStrobe_Init>
	VibeCheckWaveGen_Init(&vc->wavegen, hdac_wavegen, htim_wavegen);
 8002912:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002916:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 800291a:	681a      	ldr	r2, [r3, #0]
 800291c:	f242 4344 	movw	r3, #9284	@ 0x2444
 8002920:	4413      	add	r3, r2
 8002922:	f507 72a4 	add.w	r2, r7, #328	@ 0x148
 8002926:	f5a2 729e 	sub.w	r2, r2, #316	@ 0x13c
 800292a:	f507 71a4 	add.w	r1, r7, #328	@ 0x148
 800292e:	f5a1 71a0 	sub.w	r1, r1, #320	@ 0x140
 8002932:	6812      	ldr	r2, [r2, #0]
 8002934:	6809      	ldr	r1, [r1, #0]
 8002936:	4618      	mov	r0, r3
 8002938:	f001 febc 	bl	80046b4 <VibeCheckWaveGen_Init>
	VibeCheckRGB_Init(&vc->rgb, htim_rgb);
 800293c:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002940:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8002944:	681a      	ldr	r2, [r3, #0]
 8002946:	f243 4390 	movw	r3, #13456	@ 0x3490
 800294a:	4413      	add	r3, r2
 800294c:	f8d7 1160 	ldr.w	r1, [r7, #352]	@ 0x160
 8002950:	4618      	mov	r0, r3
 8002952:	f000 fa7f 	bl	8002e54 <VibeCheckRGB_Init>
	VibeCheckRGB_SetBaseSequence(&vc->rgb, base_sequence_times, base_sequence_colors, base_sequence_len);
 8002956:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 800295a:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 800295e:	681b      	ldr	r3, [r3, #0]
 8002960:	f243 4090 	movw	r0, #13456	@ 0x3490
 8002964:	4418      	add	r0, r3
 8002966:	2310      	movs	r3, #16
 8002968:	4a1a      	ldr	r2, [pc, #104]	@ (80029d4 <VibeCheck_Init+0x348>)
 800296a:	491b      	ldr	r1, [pc, #108]	@ (80029d8 <VibeCheck_Init+0x34c>)
 800296c:	f000 fb25 	bl	8002fba <VibeCheckRGB_SetBaseSequence>
	VibeCheckRGB_SetTopSequence(&vc->rgb, top_sequence_times, top_sequence_colors, top_sequence_len);
 8002970:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002974:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8002978:	681b      	ldr	r3, [r3, #0]
 800297a:	f243 4090 	movw	r0, #13456	@ 0x3490
 800297e:	4418      	add	r0, r3
 8002980:	2304      	movs	r3, #4
 8002982:	4a16      	ldr	r2, [pc, #88]	@ (80029dc <VibeCheck_Init+0x350>)
 8002984:	4916      	ldr	r1, [pc, #88]	@ (80029e0 <VibeCheck_Init+0x354>)
 8002986:	f000 fb4f 	bl	8003028 <VibeCheckRGB_SetTopSequence>
	VibeCheckAccel_Init(&vc->accel);
 800298a:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 800298e:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8002992:	681a      	ldr	r2, [r3, #0]
 8002994:	f643 2310 	movw	r3, #14864	@ 0x3a10
 8002998:	4413      	add	r3, r2
 800299a:	4618      	mov	r0, r3
 800299c:	f000 f857 	bl	8002a4e <VibeCheckAccel_Init>
}
 80029a0:	bf00      	nop
 80029a2:	f507 77a6 	add.w	r7, r7, #332	@ 0x14c
 80029a6:	46bd      	mov	sp, r7
 80029a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80029aa:	bf00      	nop
 80029ac:	0801aa20 	.word	0x0801aa20
 80029b0:	080041b1 	.word	0x080041b1
 80029b4:	0801aa28 	.word	0x0801aa28
 80029b8:	08004fb5 	.word	0x08004fb5
 80029bc:	00626772 	.word	0x00626772
 80029c0:	0800328d 	.word	0x0800328d
 80029c4:	0801aa30 	.word	0x0801aa30
 80029c8:	08002cd1 	.word	0x08002cd1
 80029cc:	08005111 	.word	0x08005111
 80029d0:	08002d89 	.word	0x08002d89
 80029d4:	0801ac6c 	.word	0x0801ac6c
 80029d8:	0801ac2c 	.word	0x0801ac2c
 80029dc:	0801abc0 	.word	0x0801abc0
 80029e0:	0801abb0 	.word	0x0801abb0

080029e4 <VibeCheck_Loop>:

void VibeCheck_Loop(VibeCheck* vc)
{
 80029e4:	b580      	push	{r7, lr}
 80029e6:	b086      	sub	sp, #24
 80029e8:	af00      	add	r7, sp, #0
 80029ea:	6078      	str	r0, [r7, #4]
	VibeCheckWaveGen_Update(&vc->wavegen);
 80029ec:	687a      	ldr	r2, [r7, #4]
 80029ee:	f242 4344 	movw	r3, #9284	@ 0x2444
 80029f2:	4413      	add	r3, r2
 80029f4:	4618      	mov	r0, r3
 80029f6:	f001 fefd 	bl	80047f4 <VibeCheckWaveGen_Update>
	VibeCheckRGB_Update(&vc->rgb);
 80029fa:	687a      	ldr	r2, [r7, #4]
 80029fc:	f243 4390 	movw	r3, #13456	@ 0x3490
 8002a00:	4413      	add	r3, r2
 8002a02:	4618      	mov	r0, r3
 8002a04:	f000 fa5c 	bl	8002ec0 <VibeCheckRGB_Update>
	VibeCheckAccel_Update(&vc->accel);
 8002a08:	687a      	ldr	r2, [r7, #4]
 8002a0a:	f643 2310 	movw	r3, #14864	@ 0x3a10
 8002a0e:	4413      	add	r3, r2
 8002a10:	4618      	mov	r0, r3
 8002a12:	f000 f837 	bl	8002a84 <VibeCheckAccel_Update>

	VibeCheckShell_Status shell_status = VibeCheckShell_Update(&vc->shell);
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	4618      	mov	r0, r3
 8002a1a:	f000 fd55 	bl	80034c8 <VibeCheckShell_Update>
 8002a1e:	4603      	mov	r3, r0
 8002a20:	617b      	str	r3, [r7, #20]

	char* usb_tx;
	uint32_t usb_tx_len;
	if (VibeCheckShell_GetOutput(&vc->shell, &usb_tx, &usb_tx_len))
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	f107 020c 	add.w	r2, r7, #12
 8002a28:	f107 0110 	add.w	r1, r7, #16
 8002a2c:	4618      	mov	r0, r3
 8002a2e:	f000 fee7 	bl	8003800 <VibeCheckShell_GetOutput>
 8002a32:	4603      	mov	r3, r0
 8002a34:	2b00      	cmp	r3, #0
 8002a36:	d006      	beq.n	8002a46 <VibeCheck_Loop+0x62>
	{
		CDC_Transmit_HS((uint8_t*)usb_tx, usb_tx_len);
 8002a38:	693b      	ldr	r3, [r7, #16]
 8002a3a:	68fa      	ldr	r2, [r7, #12]
 8002a3c:	b292      	uxth	r2, r2
 8002a3e:	4611      	mov	r1, r2
 8002a40:	4618      	mov	r0, r3
 8002a42:	f012 fc4d 	bl	80152e0 <CDC_Transmit_HS>
	}
}
 8002a46:	bf00      	nop
 8002a48:	3718      	adds	r7, #24
 8002a4a:	46bd      	mov	sp, r7
 8002a4c:	bd80      	pop	{r7, pc}

08002a4e <VibeCheckAccel_Init>:
 */

#include "vibecheck_accel.h"

void VibeCheckAccel_Init(VibeCheckAccel* accel)
{
 8002a4e:	b480      	push	{r7}
 8002a50:	b083      	sub	sp, #12
 8002a52:	af00      	add	r7, sp, #0
 8002a54:	6078      	str	r0, [r7, #4]
	accel->data_ind = 0;
 8002a56:	687b      	ldr	r3, [r7, #4]
 8002a58:	2200      	movs	r2, #0
 8002a5a:	f8c3 2190 	str.w	r2, [r3, #400]	@ 0x190
	accel->data_ready = 0;
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	2200      	movs	r2, #0
 8002a62:	f8c3 2194 	str.w	r2, [r3, #404]	@ 0x194
	accel->time_prev_update = 0;
 8002a66:	687b      	ldr	r3, [r7, #4]
 8002a68:	2200      	movs	r2, #0
 8002a6a:	f8c3 2198 	str.w	r2, [r3, #408]	@ 0x198
	accel->generate_fake_data = 0;
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	2200      	movs	r2, #0
 8002a72:	f8c3 219c 	str.w	r2, [r3, #412]	@ 0x19c
}
 8002a76:	bf00      	nop
 8002a78:	370c      	adds	r7, #12
 8002a7a:	46bd      	mov	sp, r7
 8002a7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a80:	4770      	bx	lr
	...

08002a84 <VibeCheckAccel_Update>:

void VibeCheckAccel_Update(VibeCheckAccel* accel)
{
 8002a84:	b580      	push	{r7, lr}
 8002a86:	b086      	sub	sp, #24
 8002a88:	af00      	add	r7, sp, #0
 8002a8a:	6078      	str	r0, [r7, #4]
	uint32_t time = HAL_GetTick();
 8002a8c:	f002 fc2c 	bl	80052e8 <HAL_GetTick>
 8002a90:	6178      	str	r0, [r7, #20]
	if (time - accel->time_prev_update > VC_ACCEL_UPDATE_INTERVAL_MS)
 8002a92:	687b      	ldr	r3, [r7, #4]
 8002a94:	f8d3 3198 	ldr.w	r3, [r3, #408]	@ 0x198
 8002a98:	697a      	ldr	r2, [r7, #20]
 8002a9a:	1ad3      	subs	r3, r2, r3
 8002a9c:	2b0a      	cmp	r3, #10
 8002a9e:	d95e      	bls.n	8002b5e <VibeCheckAccel_Update+0xda>
	{
		/* TODO: check if accelerometers have been plugged/unplugged */

		if (accel->generate_fake_data)
 8002aa0:	687b      	ldr	r3, [r7, #4]
 8002aa2:	f8d3 319c 	ldr.w	r3, [r3, #412]	@ 0x19c
 8002aa6:	2b00      	cmp	r3, #0
 8002aa8:	d055      	beq.n	8002b56 <VibeCheckAccel_Update+0xd2>
		{
			float val1 = sinf(2.0f * 3.14159f * time);
 8002aaa:	697b      	ldr	r3, [r7, #20]
 8002aac:	ee07 3a90 	vmov	s15, r3
 8002ab0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002ab4:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8002b68 <VibeCheckAccel_Update+0xe4>
 8002ab8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002abc:	eeb0 0a67 	vmov.f32	s0, s15
 8002ac0:	f017 f96a 	bl	8019d98 <sinf>
 8002ac4:	ed87 0a04 	vstr	s0, [r7, #16]
			float val2 = sinf(2.0f * 3.14159f * time + 3.14159f / 3.0f);
 8002ac8:	697b      	ldr	r3, [r7, #20]
 8002aca:	ee07 3a90 	vmov	s15, r3
 8002ace:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002ad2:	ed9f 7a25 	vldr	s14, [pc, #148]	@ 8002b68 <VibeCheckAccel_Update+0xe4>
 8002ad6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002ada:	ed9f 7a24 	vldr	s14, [pc, #144]	@ 8002b6c <VibeCheckAccel_Update+0xe8>
 8002ade:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002ae2:	eeb0 0a67 	vmov.f32	s0, s15
 8002ae6:	f017 f957 	bl	8019d98 <sinf>
 8002aea:	ed87 0a03 	vstr	s0, [r7, #12]
			float val3 = sinf(2.0f * 3.14159f * time + 2.0f * 3.14159f / 3.0f);
 8002aee:	697b      	ldr	r3, [r7, #20]
 8002af0:	ee07 3a90 	vmov	s15, r3
 8002af4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002af8:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 8002b68 <VibeCheckAccel_Update+0xe4>
 8002afc:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002b00:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 8002b70 <VibeCheckAccel_Update+0xec>
 8002b04:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002b08:	eeb0 0a67 	vmov.f32	s0, s15
 8002b0c:	f017 f944 	bl	8019d98 <sinf>
 8002b10:	ed87 0a02 	vstr	s0, [r7, #8]

			VibeCheckAccel_AddData(accel, 1, time, val1, val2, val3);
 8002b14:	ed97 1a02 	vldr	s2, [r7, #8]
 8002b18:	edd7 0a03 	vldr	s1, [r7, #12]
 8002b1c:	ed97 0a04 	vldr	s0, [r7, #16]
 8002b20:	697a      	ldr	r2, [r7, #20]
 8002b22:	2101      	movs	r1, #1
 8002b24:	6878      	ldr	r0, [r7, #4]
 8002b26:	f000 f825 	bl	8002b74 <VibeCheckAccel_AddData>
			VibeCheckAccel_AddData(accel, 2, time, val3, val1, val2);
 8002b2a:	ed97 1a03 	vldr	s2, [r7, #12]
 8002b2e:	edd7 0a04 	vldr	s1, [r7, #16]
 8002b32:	ed97 0a02 	vldr	s0, [r7, #8]
 8002b36:	697a      	ldr	r2, [r7, #20]
 8002b38:	2102      	movs	r1, #2
 8002b3a:	6878      	ldr	r0, [r7, #4]
 8002b3c:	f000 f81a 	bl	8002b74 <VibeCheckAccel_AddData>
			VibeCheckAccel_AddData(accel, 3, time, val2, val3, val1);
 8002b40:	ed97 1a04 	vldr	s2, [r7, #16]
 8002b44:	edd7 0a02 	vldr	s1, [r7, #8]
 8002b48:	ed97 0a03 	vldr	s0, [r7, #12]
 8002b4c:	697a      	ldr	r2, [r7, #20]
 8002b4e:	2103      	movs	r1, #3
 8002b50:	6878      	ldr	r0, [r7, #4]
 8002b52:	f000 f80f 	bl	8002b74 <VibeCheckAccel_AddData>
		}

		accel->time_prev_update = time;
 8002b56:	687b      	ldr	r3, [r7, #4]
 8002b58:	697a      	ldr	r2, [r7, #20]
 8002b5a:	f8c3 2198 	str.w	r2, [r3, #408]	@ 0x198
	}
}
 8002b5e:	bf00      	nop
 8002b60:	3718      	adds	r7, #24
 8002b62:	46bd      	mov	sp, r7
 8002b64:	bd80      	pop	{r7, pc}
 8002b66:	bf00      	nop
 8002b68:	40c90fd0 	.word	0x40c90fd0
 8002b6c:	3f860a8b 	.word	0x3f860a8b
 8002b70:	40060a8b 	.word	0x40060a8b

08002b74 <VibeCheckAccel_AddData>:

void VibeCheckAccel_AddData(VibeCheckAccel* accel, uint8_t id, uint32_t time, float x, float y, float z)
{
 8002b74:	b480      	push	{r7}
 8002b76:	b087      	sub	sp, #28
 8002b78:	af00      	add	r7, sp, #0
 8002b7a:	6178      	str	r0, [r7, #20]
 8002b7c:	460b      	mov	r3, r1
 8002b7e:	60fa      	str	r2, [r7, #12]
 8002b80:	ed87 0a02 	vstr	s0, [r7, #8]
 8002b84:	edc7 0a01 	vstr	s1, [r7, #4]
 8002b88:	ed87 1a00 	vstr	s2, [r7]
 8002b8c:	74fb      	strb	r3, [r7, #19]
	accel->data[accel->data_ind].id = id;
 8002b8e:	697b      	ldr	r3, [r7, #20]
 8002b90:	f8d3 2190 	ldr.w	r2, [r3, #400]	@ 0x190
 8002b94:	6979      	ldr	r1, [r7, #20]
 8002b96:	4613      	mov	r3, r2
 8002b98:	009b      	lsls	r3, r3, #2
 8002b9a:	4413      	add	r3, r2
 8002b9c:	009b      	lsls	r3, r3, #2
 8002b9e:	440b      	add	r3, r1
 8002ba0:	7cfa      	ldrb	r2, [r7, #19]
 8002ba2:	701a      	strb	r2, [r3, #0]
	accel->data[accel->data_ind].time = time;
 8002ba4:	697b      	ldr	r3, [r7, #20]
 8002ba6:	f8d3 2190 	ldr.w	r2, [r3, #400]	@ 0x190
 8002baa:	6979      	ldr	r1, [r7, #20]
 8002bac:	4613      	mov	r3, r2
 8002bae:	009b      	lsls	r3, r3, #2
 8002bb0:	4413      	add	r3, r2
 8002bb2:	009b      	lsls	r3, r3, #2
 8002bb4:	440b      	add	r3, r1
 8002bb6:	3304      	adds	r3, #4
 8002bb8:	68fa      	ldr	r2, [r7, #12]
 8002bba:	601a      	str	r2, [r3, #0]
	accel->data[accel->data_ind].x = x;
 8002bbc:	697b      	ldr	r3, [r7, #20]
 8002bbe:	f8d3 2190 	ldr.w	r2, [r3, #400]	@ 0x190
 8002bc2:	6979      	ldr	r1, [r7, #20]
 8002bc4:	4613      	mov	r3, r2
 8002bc6:	009b      	lsls	r3, r3, #2
 8002bc8:	4413      	add	r3, r2
 8002bca:	009b      	lsls	r3, r3, #2
 8002bcc:	440b      	add	r3, r1
 8002bce:	3308      	adds	r3, #8
 8002bd0:	68ba      	ldr	r2, [r7, #8]
 8002bd2:	601a      	str	r2, [r3, #0]
	accel->data[accel->data_ind].y = y;
 8002bd4:	697b      	ldr	r3, [r7, #20]
 8002bd6:	f8d3 2190 	ldr.w	r2, [r3, #400]	@ 0x190
 8002bda:	6979      	ldr	r1, [r7, #20]
 8002bdc:	4613      	mov	r3, r2
 8002bde:	009b      	lsls	r3, r3, #2
 8002be0:	4413      	add	r3, r2
 8002be2:	009b      	lsls	r3, r3, #2
 8002be4:	440b      	add	r3, r1
 8002be6:	330c      	adds	r3, #12
 8002be8:	687a      	ldr	r2, [r7, #4]
 8002bea:	601a      	str	r2, [r3, #0]
	accel->data[accel->data_ind].z = z;
 8002bec:	697b      	ldr	r3, [r7, #20]
 8002bee:	f8d3 2190 	ldr.w	r2, [r3, #400]	@ 0x190
 8002bf2:	6979      	ldr	r1, [r7, #20]
 8002bf4:	4613      	mov	r3, r2
 8002bf6:	009b      	lsls	r3, r3, #2
 8002bf8:	4413      	add	r3, r2
 8002bfa:	009b      	lsls	r3, r3, #2
 8002bfc:	440b      	add	r3, r1
 8002bfe:	3310      	adds	r3, #16
 8002c00:	683a      	ldr	r2, [r7, #0]
 8002c02:	601a      	str	r2, [r3, #0]

	accel->data_ind++;
 8002c04:	697b      	ldr	r3, [r7, #20]
 8002c06:	f8d3 3190 	ldr.w	r3, [r3, #400]	@ 0x190
 8002c0a:	1c5a      	adds	r2, r3, #1
 8002c0c:	697b      	ldr	r3, [r7, #20]
 8002c0e:	f8c3 2190 	str.w	r2, [r3, #400]	@ 0x190
	if (accel->data_ind == VC_ACCEL_DATA_PER_PACKET)
 8002c12:	697b      	ldr	r3, [r7, #20]
 8002c14:	f8d3 3190 	ldr.w	r3, [r3, #400]	@ 0x190
 8002c18:	2b0a      	cmp	r3, #10
 8002c1a:	d104      	bne.n	8002c26 <VibeCheckAccel_AddData+0xb2>
	{
		accel->data_ready = 1;
 8002c1c:	697b      	ldr	r3, [r7, #20]
 8002c1e:	2201      	movs	r2, #1
 8002c20:	f8c3 2194 	str.w	r2, [r3, #404]	@ 0x194
	else if (accel->data_ind == 2 * VC_ACCEL_DATA_PER_PACKET)
	{
		accel->data_ind = 0;
		accel->data_ready = 1;
	}
}
 8002c24:	e00c      	b.n	8002c40 <VibeCheckAccel_AddData+0xcc>
	else if (accel->data_ind == 2 * VC_ACCEL_DATA_PER_PACKET)
 8002c26:	697b      	ldr	r3, [r7, #20]
 8002c28:	f8d3 3190 	ldr.w	r3, [r3, #400]	@ 0x190
 8002c2c:	2b14      	cmp	r3, #20
 8002c2e:	d107      	bne.n	8002c40 <VibeCheckAccel_AddData+0xcc>
		accel->data_ind = 0;
 8002c30:	697b      	ldr	r3, [r7, #20]
 8002c32:	2200      	movs	r2, #0
 8002c34:	f8c3 2190 	str.w	r2, [r3, #400]	@ 0x190
		accel->data_ready = 1;
 8002c38:	697b      	ldr	r3, [r7, #20]
 8002c3a:	2201      	movs	r2, #1
 8002c3c:	f8c3 2194 	str.w	r2, [r3, #404]	@ 0x194
}
 8002c40:	bf00      	nop
 8002c42:	371c      	adds	r7, #28
 8002c44:	46bd      	mov	sp, r7
 8002c46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c4a:	4770      	bx	lr

08002c4c <VibeCheckAccel_StartFakeData>:

void VibeCheckAccel_StartFakeData(VibeCheckAccel* accel)
{
 8002c4c:	b480      	push	{r7}
 8002c4e:	b083      	sub	sp, #12
 8002c50:	af00      	add	r7, sp, #0
 8002c52:	6078      	str	r0, [r7, #4]
	accel->generate_fake_data = 1;
 8002c54:	687b      	ldr	r3, [r7, #4]
 8002c56:	2201      	movs	r2, #1
 8002c58:	f8c3 219c 	str.w	r2, [r3, #412]	@ 0x19c
}
 8002c5c:	bf00      	nop
 8002c5e:	370c      	adds	r7, #12
 8002c60:	46bd      	mov	sp, r7
 8002c62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c66:	4770      	bx	lr

08002c68 <VibeCheckAccel_StopFakeData>:

void VibeCheckAccel_StopFakeData(VibeCheckAccel* accel)
{
 8002c68:	b480      	push	{r7}
 8002c6a:	b083      	sub	sp, #12
 8002c6c:	af00      	add	r7, sp, #0
 8002c6e:	6078      	str	r0, [r7, #4]
	accel->generate_fake_data = 0;
 8002c70:	687b      	ldr	r3, [r7, #4]
 8002c72:	2200      	movs	r2, #0
 8002c74:	f8c3 219c 	str.w	r2, [r3, #412]	@ 0x19c
}
 8002c78:	bf00      	nop
 8002c7a:	370c      	adds	r7, #12
 8002c7c:	46bd      	mov	sp, r7
 8002c7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c82:	4770      	bx	lr

08002c84 <VibeCheckAccel_GetDataReady>:

uint32_t VibeCheckAccel_GetDataReady(VibeCheckAccel* accel, VibeCheckAccel_Data** data)
{
 8002c84:	b480      	push	{r7}
 8002c86:	b083      	sub	sp, #12
 8002c88:	af00      	add	r7, sp, #0
 8002c8a:	6078      	str	r0, [r7, #4]
 8002c8c:	6039      	str	r1, [r7, #0]
	if (accel->data_ready)
 8002c8e:	687b      	ldr	r3, [r7, #4]
 8002c90:	f8d3 3194 	ldr.w	r3, [r3, #404]	@ 0x194
 8002c94:	2b00      	cmp	r3, #0
 8002c96:	d013      	beq.n	8002cc0 <VibeCheckAccel_GetDataReady+0x3c>
	{
		accel->data_ready = 0;
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	2200      	movs	r2, #0
 8002c9c:	f8c3 2194 	str.w	r2, [r3, #404]	@ 0x194
		if (accel->data_ind < VC_ACCEL_DATA_PER_PACKET)
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	f8d3 3190 	ldr.w	r3, [r3, #400]	@ 0x190
 8002ca6:	2b09      	cmp	r3, #9
 8002ca8:	d805      	bhi.n	8002cb6 <VibeCheckAccel_GetDataReady+0x32>
		{
			/* ready to send the second half */
			*data = &accel->data[VC_ACCEL_DATA_PER_PACKET];
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	f103 02c8 	add.w	r2, r3, #200	@ 0xc8
 8002cb0:	683b      	ldr	r3, [r7, #0]
 8002cb2:	601a      	str	r2, [r3, #0]
 8002cb4:	e002      	b.n	8002cbc <VibeCheckAccel_GetDataReady+0x38>
		}
		else
		{
			/* ready to send the first half */
			*data = &accel->data[0];
 8002cb6:	687a      	ldr	r2, [r7, #4]
 8002cb8:	683b      	ldr	r3, [r7, #0]
 8002cba:	601a      	str	r2, [r3, #0]
		}
		return 1;
 8002cbc:	2301      	movs	r3, #1
 8002cbe:	e000      	b.n	8002cc2 <VibeCheckAccel_GetDataReady+0x3e>
	}
	return 0;
 8002cc0:	2300      	movs	r3, #0
}
 8002cc2:	4618      	mov	r0, r3
 8002cc4:	370c      	adds	r7, #12
 8002cc6:	46bd      	mov	sp, r7
 8002cc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ccc:	4770      	bx	lr
	...

08002cd0 <VibeCheckAccelCMD_Execute>:
 */

#include "vibecheck_accel_handler.h"

uint32_t VibeCheckAccelCMD_Execute(void* obj, VibeCheckShell* shell)
{
 8002cd0:	b580      	push	{r7, lr}
 8002cd2:	b094      	sub	sp, #80	@ 0x50
 8002cd4:	af00      	add	r7, sp, #0
 8002cd6:	6078      	str	r0, [r7, #4]
 8002cd8:	6039      	str	r1, [r7, #0]
	VibeCheckAccel* accel = (VibeCheckAccel*)obj;
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	64fb      	str	r3, [r7, #76]	@ 0x4c

	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8002cde:	f107 030c 	add.w	r3, r7, #12
 8002ce2:	2240      	movs	r2, #64	@ 0x40
 8002ce4:	4619      	mov	r1, r3
 8002ce6:	6838      	ldr	r0, [r7, #0]
 8002ce8:	f000 fe06 	bl	80038f8 <VibeCheckShell_GetNextString>
 8002cec:	4603      	mov	r3, r0
 8002cee:	2b00      	cmp	r3, #0
 8002cf0:	d03c      	beq.n	8002d6c <VibeCheckAccelCMD_Execute+0x9c>
	{
		if (!strcmp(str, "fakedata"))
 8002cf2:	f107 030c 	add.w	r3, r7, #12
 8002cf6:	4920      	ldr	r1, [pc, #128]	@ (8002d78 <VibeCheckAccelCMD_Execute+0xa8>)
 8002cf8:	4618      	mov	r0, r3
 8002cfa:	f7fd fb09 	bl	8000310 <strcmp>
 8002cfe:	4603      	mov	r3, r0
 8002d00:	2b00      	cmp	r3, #0
 8002d02:	d133      	bne.n	8002d6c <VibeCheckAccelCMD_Execute+0x9c>
		{
			if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8002d04:	f107 030c 	add.w	r3, r7, #12
 8002d08:	2240      	movs	r2, #64	@ 0x40
 8002d0a:	4619      	mov	r1, r3
 8002d0c:	6838      	ldr	r0, [r7, #0]
 8002d0e:	f000 fdf3 	bl	80038f8 <VibeCheckShell_GetNextString>
 8002d12:	4603      	mov	r3, r0
 8002d14:	2b00      	cmp	r3, #0
 8002d16:	d029      	beq.n	8002d6c <VibeCheckAccelCMD_Execute+0x9c>
			{
				if (!strcmp(str, "start"))
 8002d18:	f107 030c 	add.w	r3, r7, #12
 8002d1c:	4917      	ldr	r1, [pc, #92]	@ (8002d7c <VibeCheckAccelCMD_Execute+0xac>)
 8002d1e:	4618      	mov	r0, r3
 8002d20:	f7fd faf6 	bl	8000310 <strcmp>
 8002d24:	4603      	mov	r3, r0
 8002d26:	2b00      	cmp	r3, #0
 8002d28:	d10b      	bne.n	8002d42 <VibeCheckAccelCMD_Execute+0x72>
				{
					VibeCheckAccel_StartFakeData(accel);
 8002d2a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 8002d2c:	f7ff ff8e 	bl	8002c4c <VibeCheckAccel_StartFakeData>
					VibeCheckShell_PutOutputString(shell, "ack");
 8002d30:	4913      	ldr	r1, [pc, #76]	@ (8002d80 <VibeCheckAccelCMD_Execute+0xb0>)
 8002d32:	6838      	ldr	r0, [r7, #0]
 8002d34:	f000 fee0 	bl	8003af8 <VibeCheckShell_PutOutputString>
					VibeCheckShell_PutOutputDelimiter(shell);
 8002d38:	6838      	ldr	r0, [r7, #0]
 8002d3a:	f000 ff5b 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
					return 1;
 8002d3e:	2301      	movs	r3, #1
 8002d40:	e015      	b.n	8002d6e <VibeCheckAccelCMD_Execute+0x9e>
				}
				else if (!strcmp(str, "stop"))
 8002d42:	f107 030c 	add.w	r3, r7, #12
 8002d46:	490f      	ldr	r1, [pc, #60]	@ (8002d84 <VibeCheckAccelCMD_Execute+0xb4>)
 8002d48:	4618      	mov	r0, r3
 8002d4a:	f7fd fae1 	bl	8000310 <strcmp>
 8002d4e:	4603      	mov	r3, r0
 8002d50:	2b00      	cmp	r3, #0
 8002d52:	d10b      	bne.n	8002d6c <VibeCheckAccelCMD_Execute+0x9c>
				{
					VibeCheckAccel_StopFakeData(accel);
 8002d54:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 8002d56:	f7ff ff87 	bl	8002c68 <VibeCheckAccel_StopFakeData>
					VibeCheckShell_PutOutputString(shell, "ack");
 8002d5a:	4909      	ldr	r1, [pc, #36]	@ (8002d80 <VibeCheckAccelCMD_Execute+0xb0>)
 8002d5c:	6838      	ldr	r0, [r7, #0]
 8002d5e:	f000 fecb 	bl	8003af8 <VibeCheckShell_PutOutputString>
					VibeCheckShell_PutOutputDelimiter(shell);
 8002d62:	6838      	ldr	r0, [r7, #0]
 8002d64:	f000 ff46 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
					return 1;
 8002d68:	2301      	movs	r3, #1
 8002d6a:	e000      	b.n	8002d6e <VibeCheckAccelCMD_Execute+0x9e>
				}
			}
		}
	}

	return 0;
 8002d6c:	2300      	movs	r3, #0
}
 8002d6e:	4618      	mov	r0, r3
 8002d70:	3750      	adds	r7, #80	@ 0x50
 8002d72:	46bd      	mov	sp, r7
 8002d74:	bd80      	pop	{r7, pc}
 8002d76:	bf00      	nop
 8002d78:	0801aa38 	.word	0x0801aa38
 8002d7c:	0801aa44 	.word	0x0801aa44
 8002d80:	0801aa4c 	.word	0x0801aa4c
 8002d84:	0801aa50 	.word	0x0801aa50

08002d88 <VibeCheckAccelSender_Execute>:


uint32_t VibeCheckAccelSender_Execute(void* obj, VibeCheckShell* shell)
{
 8002d88:	b580      	push	{r7, lr}
 8002d8a:	b086      	sub	sp, #24
 8002d8c:	af00      	add	r7, sp, #0
 8002d8e:	6078      	str	r0, [r7, #4]
 8002d90:	6039      	str	r1, [r7, #0]
	VibeCheckAccel* accel = (VibeCheckAccel*)obj;
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	613b      	str	r3, [r7, #16]

	VibeCheckAccel_Data* data;
	if (VibeCheckAccel_GetDataReady(accel, &data))
 8002d96:	f107 030c 	add.w	r3, r7, #12
 8002d9a:	4619      	mov	r1, r3
 8002d9c:	6938      	ldr	r0, [r7, #16]
 8002d9e:	f7ff ff71 	bl	8002c84 <VibeCheckAccel_GetDataReady>
 8002da2:	4603      	mov	r3, r0
 8002da4:	2b00      	cmp	r3, #0
 8002da6:	d04e      	beq.n	8002e46 <VibeCheckAccelSender_Execute+0xbe>
	{
		VibeCheckShell_PutOutputString(shell, "data");
 8002da8:	4929      	ldr	r1, [pc, #164]	@ (8002e50 <VibeCheckAccelSender_Execute+0xc8>)
 8002daa:	6838      	ldr	r0, [r7, #0]
 8002dac:	f000 fea4 	bl	8003af8 <VibeCheckShell_PutOutputString>
		VibeCheckShell_PutOutputSeparator(shell);
 8002db0:	6838      	ldr	r0, [r7, #0]
 8002db2:	f000 ff11 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>
		VibeCheckShell_PutOutputInt(shell, VC_ACCEL_DATA_PER_PACKET);
 8002db6:	210a      	movs	r1, #10
 8002db8:	6838      	ldr	r0, [r7, #0]
 8002dba:	f000 fed7 	bl	8003b6c <VibeCheckShell_PutOutputInt>

		uint32_t data_written = 0;
 8002dbe:	2300      	movs	r3, #0
 8002dc0:	617b      	str	r3, [r7, #20]
		while (data_written < VC_ACCEL_DATA_PER_PACKET)
 8002dc2:	e038      	b.n	8002e36 <VibeCheckAccelSender_Execute+0xae>
		{
			VibeCheckShell_PutOutputSeparator(shell);
 8002dc4:	6838      	ldr	r0, [r7, #0]
 8002dc6:	f000 ff07 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputInt(shell, data->id);
 8002dca:	68fb      	ldr	r3, [r7, #12]
 8002dcc:	781b      	ldrb	r3, [r3, #0]
 8002dce:	4619      	mov	r1, r3
 8002dd0:	6838      	ldr	r0, [r7, #0]
 8002dd2:	f000 fecb 	bl	8003b6c <VibeCheckShell_PutOutputInt>
			VibeCheckShell_PutOutputSeparator(shell);
 8002dd6:	6838      	ldr	r0, [r7, #0]
 8002dd8:	f000 fefe 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputInt(shell, data->time);
 8002ddc:	68fb      	ldr	r3, [r7, #12]
 8002dde:	685b      	ldr	r3, [r3, #4]
 8002de0:	4619      	mov	r1, r3
 8002de2:	6838      	ldr	r0, [r7, #0]
 8002de4:	f000 fec2 	bl	8003b6c <VibeCheckShell_PutOutputInt>
			VibeCheckShell_PutOutputSeparator(shell);
 8002de8:	6838      	ldr	r0, [r7, #0]
 8002dea:	f000 fef5 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputFloat(shell, data->x);
 8002dee:	68fb      	ldr	r3, [r7, #12]
 8002df0:	edd3 7a02 	vldr	s15, [r3, #8]
 8002df4:	eeb0 0a67 	vmov.f32	s0, s15
 8002df8:	6838      	ldr	r0, [r7, #0]
 8002dfa:	f000 fecf 	bl	8003b9c <VibeCheckShell_PutOutputFloat>
			VibeCheckShell_PutOutputSeparator(shell);
 8002dfe:	6838      	ldr	r0, [r7, #0]
 8002e00:	f000 feea 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputFloat(shell, data->y);
 8002e04:	68fb      	ldr	r3, [r7, #12]
 8002e06:	edd3 7a03 	vldr	s15, [r3, #12]
 8002e0a:	eeb0 0a67 	vmov.f32	s0, s15
 8002e0e:	6838      	ldr	r0, [r7, #0]
 8002e10:	f000 fec4 	bl	8003b9c <VibeCheckShell_PutOutputFloat>
			VibeCheckShell_PutOutputSeparator(shell);
 8002e14:	6838      	ldr	r0, [r7, #0]
 8002e16:	f000 fedf 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputFloat(shell, data->z);
 8002e1a:	68fb      	ldr	r3, [r7, #12]
 8002e1c:	edd3 7a04 	vldr	s15, [r3, #16]
 8002e20:	eeb0 0a67 	vmov.f32	s0, s15
 8002e24:	6838      	ldr	r0, [r7, #0]
 8002e26:	f000 feb9 	bl	8003b9c <VibeCheckShell_PutOutputFloat>

			data++;
 8002e2a:	68fb      	ldr	r3, [r7, #12]
 8002e2c:	3314      	adds	r3, #20
 8002e2e:	60fb      	str	r3, [r7, #12]
			data_written++;
 8002e30:	697b      	ldr	r3, [r7, #20]
 8002e32:	3301      	adds	r3, #1
 8002e34:	617b      	str	r3, [r7, #20]
		while (data_written < VC_ACCEL_DATA_PER_PACKET)
 8002e36:	697b      	ldr	r3, [r7, #20]
 8002e38:	2b09      	cmp	r3, #9
 8002e3a:	d9c3      	bls.n	8002dc4 <VibeCheckAccelSender_Execute+0x3c>
		}

		VibeCheckShell_PutOutputDelimiter(shell);
 8002e3c:	6838      	ldr	r0, [r7, #0]
 8002e3e:	f000 fed9 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>

		return 1;
 8002e42:	2301      	movs	r3, #1
 8002e44:	e000      	b.n	8002e48 <VibeCheckAccelSender_Execute+0xc0>
	}
	else
	{
		return 0;
 8002e46:	2300      	movs	r3, #0
	}
}
 8002e48:	4618      	mov	r0, r3
 8002e4a:	3718      	adds	r7, #24
 8002e4c:	46bd      	mov	sp, r7
 8002e4e:	bd80      	pop	{r7, pc}
 8002e50:	0801aa58 	.word	0x0801aa58

08002e54 <VibeCheckRGB_Init>:

#include "vibecheck_rgb.h"


void VibeCheckRGB_Init(VibeCheckRGB* rgb, TIM_HandleTypeDef* htim)
{
 8002e54:	b580      	push	{r7, lr}
 8002e56:	b084      	sub	sp, #16
 8002e58:	af00      	add	r7, sp, #0
 8002e5a:	6078      	str	r0, [r7, #4]
 8002e5c:	6039      	str	r1, [r7, #0]
	Sequencer_Init(&rgb->base_sequence);
 8002e5e:	687b      	ldr	r3, [r7, #4]
 8002e60:	f503 63aa 	add.w	r3, r3, #1360	@ 0x550
 8002e64:	4618      	mov	r0, r3
 8002e66:	f7fe fd49 	bl	80018fc <Sequencer_Init>
	Sequencer_Init(&rgb->top_sequence);
 8002e6a:	687b      	ldr	r3, [r7, #4]
 8002e6c:	f503 63ad 	add.w	r3, r3, #1384	@ 0x568
 8002e70:	4618      	mov	r0, r3
 8002e72:	f7fe fd43 	bl	80018fc <Sequencer_Init>

	htim->Instance->PSC = VC_RGB_TIM_PSC - 1;
 8002e76:	683b      	ldr	r3, [r7, #0]
 8002e78:	681b      	ldr	r3, [r3, #0]
 8002e7a:	2202      	movs	r2, #2
 8002e7c:	629a      	str	r2, [r3, #40]	@ 0x28
	htim->Instance->ARR = VC_RGB_TIM_ARR - 1;
 8002e7e:	683b      	ldr	r3, [r7, #0]
 8002e80:	681b      	ldr	r3, [r3, #0]
 8002e82:	2263      	movs	r2, #99	@ 0x63
 8002e84:	62da      	str	r2, [r3, #44]	@ 0x2c
	rgb->htim = htim;
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	683a      	ldr	r2, [r7, #0]
 8002e8a:	601a      	str	r2, [r3, #0]

	/* clear the DMA buffer, particularly setting all zeros during the reset time */
	for (uint32_t i = 0; i < VC_RGB_BUF_LEN; i++)
 8002e8c:	2300      	movs	r3, #0
 8002e8e:	60fb      	str	r3, [r7, #12]
 8002e90:	e008      	b.n	8002ea4 <VibeCheckRGB_Init+0x50>
		rgb->bit_stream[i] = 0;
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	68fa      	ldr	r2, [r7, #12]
 8002e96:	3210      	adds	r2, #16
 8002e98:	2100      	movs	r1, #0
 8002e9a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
	for (uint32_t i = 0; i < VC_RGB_BUF_LEN; i++)
 8002e9e:	68fb      	ldr	r3, [r7, #12]
 8002ea0:	3301      	adds	r3, #1
 8002ea2:	60fb      	str	r3, [r7, #12]
 8002ea4:	68fb      	ldr	r3, [r7, #12]
 8002ea6:	f5b3 7f26 	cmp.w	r3, #664	@ 0x298
 8002eaa:	d3f2      	bcc.n	8002e92 <VibeCheckRGB_Init+0x3e>

	/* turn off all LEDs */
	VibeCheckRGB_SetAllOff(rgb);
 8002eac:	6878      	ldr	r0, [r7, #4]
 8002eae:	f000 f94a 	bl	8003146 <VibeCheckRGB_SetAllOff>
	VibeCheckRGB_SendColors(rgb);
 8002eb2:	6878      	ldr	r0, [r7, #4]
 8002eb4:	f000 f961 	bl	800317a <VibeCheckRGB_SendColors>
}
 8002eb8:	bf00      	nop
 8002eba:	3710      	adds	r7, #16
 8002ebc:	46bd      	mov	sp, r7
 8002ebe:	bd80      	pop	{r7, pc}

08002ec0 <VibeCheckRGB_Update>:


void VibeCheckRGB_Update(VibeCheckRGB* rgb)  /* call repeatedly in the main loop */
{
 8002ec0:	b580      	push	{r7, lr}
 8002ec2:	b08a      	sub	sp, #40	@ 0x28
 8002ec4:	af02      	add	r7, sp, #8
 8002ec6:	6078      	str	r0, [r7, #4]
	uint32_t time = HAL_GetTick();
 8002ec8:	f002 fa0e 	bl	80052e8 <HAL_GetTick>
 8002ecc:	6178      	str	r0, [r7, #20]
	uint32_t step;
	if (Sequencer_Update(&rgb->top_sequence, time, &step))
 8002ece:	687b      	ldr	r3, [r7, #4]
 8002ed0:	f503 63ad 	add.w	r3, r3, #1384	@ 0x568
 8002ed4:	f107 0210 	add.w	r2, r7, #16
 8002ed8:	6979      	ldr	r1, [r7, #20]
 8002eda:	4618      	mov	r0, r3
 8002edc:	f7fe fd40 	bl	8001960 <Sequencer_Update>
 8002ee0:	4603      	mov	r3, r0
 8002ee2:	2b00      	cmp	r3, #0
 8002ee4:	d028      	beq.n	8002f38 <VibeCheckRGB_Update+0x78>
	{
		for (uint32_t i = 0; i < VC_RGB_NUM_LEDS; i++)
 8002ee6:	2300      	movs	r3, #0
 8002ee8:	61fb      	str	r3, [r7, #28]
 8002eea:	e01e      	b.n	8002f2a <VibeCheckRGB_Update+0x6a>
		{
			VibeCheckRGB_Color color = rgb->top_sequence_colors[VC_RGB_NUM_LEDS * step + i];
 8002eec:	687b      	ldr	r3, [r7, #4]
 8002eee:	f8d3 157c 	ldr.w	r1, [r3, #1404]	@ 0x57c
 8002ef2:	693a      	ldr	r2, [r7, #16]
 8002ef4:	4613      	mov	r3, r2
 8002ef6:	00db      	lsls	r3, r3, #3
 8002ef8:	441a      	add	r2, r3
 8002efa:	69fb      	ldr	r3, [r7, #28]
 8002efc:	441a      	add	r2, r3
 8002efe:	4613      	mov	r3, r2
 8002f00:	005b      	lsls	r3, r3, #1
 8002f02:	4413      	add	r3, r2
 8002f04:	18ca      	adds	r2, r1, r3
 8002f06:	f107 030c 	add.w	r3, r7, #12
 8002f0a:	8811      	ldrh	r1, [r2, #0]
 8002f0c:	7892      	ldrb	r2, [r2, #2]
 8002f0e:	8019      	strh	r1, [r3, #0]
 8002f10:	709a      	strb	r2, [r3, #2]
			VibeCheckRGB_SetColor(rgb, i, color.r, color.g, color.b);
 8002f12:	7b3a      	ldrb	r2, [r7, #12]
 8002f14:	7b79      	ldrb	r1, [r7, #13]
 8002f16:	7bbb      	ldrb	r3, [r7, #14]
 8002f18:	9300      	str	r3, [sp, #0]
 8002f1a:	460b      	mov	r3, r1
 8002f1c:	69f9      	ldr	r1, [r7, #28]
 8002f1e:	6878      	ldr	r0, [r7, #4]
 8002f20:	f000 f8b9 	bl	8003096 <VibeCheckRGB_SetColor>
		for (uint32_t i = 0; i < VC_RGB_NUM_LEDS; i++)
 8002f24:	69fb      	ldr	r3, [r7, #28]
 8002f26:	3301      	adds	r3, #1
 8002f28:	61fb      	str	r3, [r7, #28]
 8002f2a:	69fb      	ldr	r3, [r7, #28]
 8002f2c:	2b08      	cmp	r3, #8
 8002f2e:	d9dd      	bls.n	8002eec <VibeCheckRGB_Update+0x2c>
		}
		VibeCheckRGB_SendColors(rgb);
 8002f30:	6878      	ldr	r0, [r7, #4]
 8002f32:	f000 f922 	bl	800317a <VibeCheckRGB_SendColors>
			VibeCheckRGB_Color color = rgb->base_sequence_colors[VC_RGB_NUM_LEDS * step + i];
			VibeCheckRGB_SetColor(rgb, i, color.r, color.g, color.b);
		}
		VibeCheckRGB_SendColors(rgb);
	}
}
 8002f36:	e03c      	b.n	8002fb2 <VibeCheckRGB_Update+0xf2>
	else if (!Sequencer_IsRunning(&rgb->top_sequence) && Sequencer_Update(&rgb->base_sequence, time, &step))
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	f503 63ad 	add.w	r3, r3, #1384	@ 0x568
 8002f3e:	4618      	mov	r0, r3
 8002f40:	f7fe fd71 	bl	8001a26 <Sequencer_IsRunning>
 8002f44:	4603      	mov	r3, r0
 8002f46:	2b00      	cmp	r3, #0
 8002f48:	d133      	bne.n	8002fb2 <VibeCheckRGB_Update+0xf2>
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	f503 63aa 	add.w	r3, r3, #1360	@ 0x550
 8002f50:	f107 0210 	add.w	r2, r7, #16
 8002f54:	6979      	ldr	r1, [r7, #20]
 8002f56:	4618      	mov	r0, r3
 8002f58:	f7fe fd02 	bl	8001960 <Sequencer_Update>
 8002f5c:	4603      	mov	r3, r0
 8002f5e:	2b00      	cmp	r3, #0
 8002f60:	d027      	beq.n	8002fb2 <VibeCheckRGB_Update+0xf2>
		for (uint32_t i = 0; i < VC_RGB_NUM_LEDS; i++)
 8002f62:	2300      	movs	r3, #0
 8002f64:	61bb      	str	r3, [r7, #24]
 8002f66:	e01e      	b.n	8002fa6 <VibeCheckRGB_Update+0xe6>
			VibeCheckRGB_Color color = rgb->base_sequence_colors[VC_RGB_NUM_LEDS * step + i];
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	f8d3 1564 	ldr.w	r1, [r3, #1380]	@ 0x564
 8002f6e:	693a      	ldr	r2, [r7, #16]
 8002f70:	4613      	mov	r3, r2
 8002f72:	00db      	lsls	r3, r3, #3
 8002f74:	441a      	add	r2, r3
 8002f76:	69bb      	ldr	r3, [r7, #24]
 8002f78:	441a      	add	r2, r3
 8002f7a:	4613      	mov	r3, r2
 8002f7c:	005b      	lsls	r3, r3, #1
 8002f7e:	4413      	add	r3, r2
 8002f80:	18ca      	adds	r2, r1, r3
 8002f82:	f107 0308 	add.w	r3, r7, #8
 8002f86:	8811      	ldrh	r1, [r2, #0]
 8002f88:	7892      	ldrb	r2, [r2, #2]
 8002f8a:	8019      	strh	r1, [r3, #0]
 8002f8c:	709a      	strb	r2, [r3, #2]
			VibeCheckRGB_SetColor(rgb, i, color.r, color.g, color.b);
 8002f8e:	7a3a      	ldrb	r2, [r7, #8]
 8002f90:	7a79      	ldrb	r1, [r7, #9]
 8002f92:	7abb      	ldrb	r3, [r7, #10]
 8002f94:	9300      	str	r3, [sp, #0]
 8002f96:	460b      	mov	r3, r1
 8002f98:	69b9      	ldr	r1, [r7, #24]
 8002f9a:	6878      	ldr	r0, [r7, #4]
 8002f9c:	f000 f87b 	bl	8003096 <VibeCheckRGB_SetColor>
		for (uint32_t i = 0; i < VC_RGB_NUM_LEDS; i++)
 8002fa0:	69bb      	ldr	r3, [r7, #24]
 8002fa2:	3301      	adds	r3, #1
 8002fa4:	61bb      	str	r3, [r7, #24]
 8002fa6:	69bb      	ldr	r3, [r7, #24]
 8002fa8:	2b08      	cmp	r3, #8
 8002faa:	d9dd      	bls.n	8002f68 <VibeCheckRGB_Update+0xa8>
		VibeCheckRGB_SendColors(rgb);
 8002fac:	6878      	ldr	r0, [r7, #4]
 8002fae:	f000 f8e4 	bl	800317a <VibeCheckRGB_SendColors>
}
 8002fb2:	bf00      	nop
 8002fb4:	3720      	adds	r7, #32
 8002fb6:	46bd      	mov	sp, r7
 8002fb8:	bd80      	pop	{r7, pc}

08002fba <VibeCheckRGB_SetBaseSequence>:


void VibeCheckRGB_SetBaseSequence(VibeCheckRGB* rgb, const uint32_t* time, const VibeCheckRGB_Color* color, uint32_t len)
{
 8002fba:	b580      	push	{r7, lr}
 8002fbc:	b084      	sub	sp, #16
 8002fbe:	af00      	add	r7, sp, #0
 8002fc0:	60f8      	str	r0, [r7, #12]
 8002fc2:	60b9      	str	r1, [r7, #8]
 8002fc4:	607a      	str	r2, [r7, #4]
 8002fc6:	603b      	str	r3, [r7, #0]
	rgb->base_sequence_colors = color;
 8002fc8:	68fb      	ldr	r3, [r7, #12]
 8002fca:	687a      	ldr	r2, [r7, #4]
 8002fcc:	f8c3 2564 	str.w	r2, [r3, #1380]	@ 0x564
	Sequencer_SetSequence(&rgb->base_sequence, time, len, 1);
 8002fd0:	68fb      	ldr	r3, [r7, #12]
 8002fd2:	f503 60aa 	add.w	r0, r3, #1360	@ 0x550
 8002fd6:	2301      	movs	r3, #1
 8002fd8:	683a      	ldr	r2, [r7, #0]
 8002fda:	68b9      	ldr	r1, [r7, #8]
 8002fdc:	f7fe fcaa 	bl	8001934 <Sequencer_SetSequence>
}
 8002fe0:	bf00      	nop
 8002fe2:	3710      	adds	r7, #16
 8002fe4:	46bd      	mov	sp, r7
 8002fe6:	bd80      	pop	{r7, pc}

08002fe8 <VibeCheckRGB_StartBaseSequence>:

void VibeCheckRGB_StartBaseSequence(VibeCheckRGB* rgb)
{
 8002fe8:	b590      	push	{r4, r7, lr}
 8002fea:	b083      	sub	sp, #12
 8002fec:	af00      	add	r7, sp, #0
 8002fee:	6078      	str	r0, [r7, #4]
	Sequencer_Start(&rgb->base_sequence, HAL_GetTick());
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	f503 64aa 	add.w	r4, r3, #1360	@ 0x550
 8002ff6:	f002 f977 	bl	80052e8 <HAL_GetTick>
 8002ffa:	4603      	mov	r3, r0
 8002ffc:	4619      	mov	r1, r3
 8002ffe:	4620      	mov	r0, r4
 8003000:	f7fe fcf0 	bl	80019e4 <Sequencer_Start>
}
 8003004:	bf00      	nop
 8003006:	370c      	adds	r7, #12
 8003008:	46bd      	mov	sp, r7
 800300a:	bd90      	pop	{r4, r7, pc}

0800300c <VibeCheckRGB_StopBaseSequence>:

void VibeCheckRGB_StopBaseSequence(VibeCheckRGB* rgb)
{
 800300c:	b580      	push	{r7, lr}
 800300e:	b082      	sub	sp, #8
 8003010:	af00      	add	r7, sp, #0
 8003012:	6078      	str	r0, [r7, #4]
	Sequencer_Stop(&rgb->base_sequence);
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	f503 63aa 	add.w	r3, r3, #1360	@ 0x550
 800301a:	4618      	mov	r0, r3
 800301c:	f7fe fcf6 	bl	8001a0c <Sequencer_Stop>
}
 8003020:	bf00      	nop
 8003022:	3708      	adds	r7, #8
 8003024:	46bd      	mov	sp, r7
 8003026:	bd80      	pop	{r7, pc}

08003028 <VibeCheckRGB_SetTopSequence>:

void VibeCheckRGB_SetTopSequence(VibeCheckRGB* rgb, const uint32_t* time, const VibeCheckRGB_Color* color, uint32_t len)
{
 8003028:	b580      	push	{r7, lr}
 800302a:	b084      	sub	sp, #16
 800302c:	af00      	add	r7, sp, #0
 800302e:	60f8      	str	r0, [r7, #12]
 8003030:	60b9      	str	r1, [r7, #8]
 8003032:	607a      	str	r2, [r7, #4]
 8003034:	603b      	str	r3, [r7, #0]
	rgb->top_sequence_colors = color;
 8003036:	68fb      	ldr	r3, [r7, #12]
 8003038:	687a      	ldr	r2, [r7, #4]
 800303a:	f8c3 257c 	str.w	r2, [r3, #1404]	@ 0x57c
	Sequencer_SetSequence(&rgb->top_sequence, time, len, 0);
 800303e:	68fb      	ldr	r3, [r7, #12]
 8003040:	f503 60ad 	add.w	r0, r3, #1384	@ 0x568
 8003044:	2300      	movs	r3, #0
 8003046:	683a      	ldr	r2, [r7, #0]
 8003048:	68b9      	ldr	r1, [r7, #8]
 800304a:	f7fe fc73 	bl	8001934 <Sequencer_SetSequence>
}
 800304e:	bf00      	nop
 8003050:	3710      	adds	r7, #16
 8003052:	46bd      	mov	sp, r7
 8003054:	bd80      	pop	{r7, pc}

08003056 <VibeCheckRGB_StartTopSequence>:

void VibeCheckRGB_StartTopSequence(VibeCheckRGB* rgb)
{
 8003056:	b590      	push	{r4, r7, lr}
 8003058:	b083      	sub	sp, #12
 800305a:	af00      	add	r7, sp, #0
 800305c:	6078      	str	r0, [r7, #4]
	Sequencer_Start(&rgb->top_sequence, HAL_GetTick());
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	f503 64ad 	add.w	r4, r3, #1384	@ 0x568
 8003064:	f002 f940 	bl	80052e8 <HAL_GetTick>
 8003068:	4603      	mov	r3, r0
 800306a:	4619      	mov	r1, r3
 800306c:	4620      	mov	r0, r4
 800306e:	f7fe fcb9 	bl	80019e4 <Sequencer_Start>
}
 8003072:	bf00      	nop
 8003074:	370c      	adds	r7, #12
 8003076:	46bd      	mov	sp, r7
 8003078:	bd90      	pop	{r4, r7, pc}

0800307a <VibeCheckRGB_StopTopSequence>:

void VibeCheckRGB_StopTopSequence(VibeCheckRGB* rgb)
{
 800307a:	b580      	push	{r7, lr}
 800307c:	b082      	sub	sp, #8
 800307e:	af00      	add	r7, sp, #0
 8003080:	6078      	str	r0, [r7, #4]
	Sequencer_Stop(&rgb->top_sequence);
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	f503 63ad 	add.w	r3, r3, #1384	@ 0x568
 8003088:	4618      	mov	r0, r3
 800308a:	f7fe fcbf 	bl	8001a0c <Sequencer_Stop>
}
 800308e:	bf00      	nop
 8003090:	3708      	adds	r7, #8
 8003092:	46bd      	mov	sp, r7
 8003094:	bd80      	pop	{r7, pc}

08003096 <VibeCheckRGB_SetColor>:


void VibeCheckRGB_SetColor(VibeCheckRGB* rgb, uint32_t index, uint8_t r, uint8_t g, uint8_t b)  /* set the color of an individual LED */
{
 8003096:	b480      	push	{r7}
 8003098:	b085      	sub	sp, #20
 800309a:	af00      	add	r7, sp, #0
 800309c:	60f8      	str	r0, [r7, #12]
 800309e:	60b9      	str	r1, [r7, #8]
 80030a0:	4611      	mov	r1, r2
 80030a2:	461a      	mov	r2, r3
 80030a4:	460b      	mov	r3, r1
 80030a6:	71fb      	strb	r3, [r7, #7]
 80030a8:	4613      	mov	r3, r2
 80030aa:	71bb      	strb	r3, [r7, #6]
	if (index > VC_RGB_NUM_LEDS - 1)
 80030ac:	68bb      	ldr	r3, [r7, #8]
 80030ae:	2b08      	cmp	r3, #8
 80030b0:	d901      	bls.n	80030b6 <VibeCheckRGB_SetColor+0x20>
		index = VC_RGB_NUM_LEDS - 1;
 80030b2:	2308      	movs	r3, #8
 80030b4:	60bb      	str	r3, [r7, #8]

	rgb->colors[index].r = r;
 80030b6:	68f9      	ldr	r1, [r7, #12]
 80030b8:	68ba      	ldr	r2, [r7, #8]
 80030ba:	4613      	mov	r3, r2
 80030bc:	005b      	lsls	r3, r3, #1
 80030be:	4413      	add	r3, r2
 80030c0:	440b      	add	r3, r1
 80030c2:	3304      	adds	r3, #4
 80030c4:	79fa      	ldrb	r2, [r7, #7]
 80030c6:	701a      	strb	r2, [r3, #0]
	rgb->colors[index].g = g;
 80030c8:	68f9      	ldr	r1, [r7, #12]
 80030ca:	68ba      	ldr	r2, [r7, #8]
 80030cc:	4613      	mov	r3, r2
 80030ce:	005b      	lsls	r3, r3, #1
 80030d0:	4413      	add	r3, r2
 80030d2:	440b      	add	r3, r1
 80030d4:	3305      	adds	r3, #5
 80030d6:	79ba      	ldrb	r2, [r7, #6]
 80030d8:	701a      	strb	r2, [r3, #0]
	rgb->colors[index].b = b;
 80030da:	68f9      	ldr	r1, [r7, #12]
 80030dc:	68ba      	ldr	r2, [r7, #8]
 80030de:	4613      	mov	r3, r2
 80030e0:	005b      	lsls	r3, r3, #1
 80030e2:	4413      	add	r3, r2
 80030e4:	440b      	add	r3, r1
 80030e6:	3306      	adds	r3, #6
 80030e8:	7e3a      	ldrb	r2, [r7, #24]
 80030ea:	701a      	strb	r2, [r3, #0]
}
 80030ec:	bf00      	nop
 80030ee:	3714      	adds	r7, #20
 80030f0:	46bd      	mov	sp, r7
 80030f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030f6:	4770      	bx	lr

080030f8 <VibeCheckRGB_GetColor>:


VibeCheckRGB_Color VibeCheckRGB_GetColor(VibeCheckRGB* rgb, uint32_t index)
{
 80030f8:	b480      	push	{r7}
 80030fa:	b085      	sub	sp, #20
 80030fc:	af00      	add	r7, sp, #0
 80030fe:	6078      	str	r0, [r7, #4]
 8003100:	6039      	str	r1, [r7, #0]
	if (index > VC_RGB_NUM_LEDS - 1)
 8003102:	683b      	ldr	r3, [r7, #0]
 8003104:	2b08      	cmp	r3, #8
 8003106:	d901      	bls.n	800310c <VibeCheckRGB_GetColor+0x14>
			index = VC_RGB_NUM_LEDS - 1;
 8003108:	2308      	movs	r3, #8
 800310a:	603b      	str	r3, [r7, #0]

	return rgb->colors[index];
 800310c:	6879      	ldr	r1, [r7, #4]
 800310e:	683a      	ldr	r2, [r7, #0]
 8003110:	4613      	mov	r3, r2
 8003112:	005b      	lsls	r3, r3, #1
 8003114:	4413      	add	r3, r2
 8003116:	18ca      	adds	r2, r1, r3
 8003118:	f107 030c 	add.w	r3, r7, #12
 800311c:	3204      	adds	r2, #4
 800311e:	8811      	ldrh	r1, [r2, #0]
 8003120:	7892      	ldrb	r2, [r2, #2]
 8003122:	8019      	strh	r1, [r3, #0]
 8003124:	709a      	strb	r2, [r3, #2]
 8003126:	2300      	movs	r3, #0
 8003128:	7b3a      	ldrb	r2, [r7, #12]
 800312a:	f362 0307 	bfi	r3, r2, #0, #8
 800312e:	7b7a      	ldrb	r2, [r7, #13]
 8003130:	f362 230f 	bfi	r3, r2, #8, #8
 8003134:	7bba      	ldrb	r2, [r7, #14]
 8003136:	f362 4317 	bfi	r3, r2, #16, #8
}
 800313a:	4618      	mov	r0, r3
 800313c:	3714      	adds	r7, #20
 800313e:	46bd      	mov	sp, r7
 8003140:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003144:	4770      	bx	lr

08003146 <VibeCheckRGB_SetAllOff>:


void VibeCheckRGB_SetAllOff(VibeCheckRGB* rgb)
{
 8003146:	b580      	push	{r7, lr}
 8003148:	b086      	sub	sp, #24
 800314a:	af02      	add	r7, sp, #8
 800314c:	6078      	str	r0, [r7, #4]
	for (uint32_t i = 0; i < VC_RGB_NUM_LEDS; i++)
 800314e:	2300      	movs	r3, #0
 8003150:	60fb      	str	r3, [r7, #12]
 8003152:	e00a      	b.n	800316a <VibeCheckRGB_SetAllOff+0x24>
		VibeCheckRGB_SetColor(rgb, i, 0, 0, 0);
 8003154:	2300      	movs	r3, #0
 8003156:	9300      	str	r3, [sp, #0]
 8003158:	2300      	movs	r3, #0
 800315a:	2200      	movs	r2, #0
 800315c:	68f9      	ldr	r1, [r7, #12]
 800315e:	6878      	ldr	r0, [r7, #4]
 8003160:	f7ff ff99 	bl	8003096 <VibeCheckRGB_SetColor>
	for (uint32_t i = 0; i < VC_RGB_NUM_LEDS; i++)
 8003164:	68fb      	ldr	r3, [r7, #12]
 8003166:	3301      	adds	r3, #1
 8003168:	60fb      	str	r3, [r7, #12]
 800316a:	68fb      	ldr	r3, [r7, #12]
 800316c:	2b08      	cmp	r3, #8
 800316e:	d9f1      	bls.n	8003154 <VibeCheckRGB_SetAllOff+0xe>
}
 8003170:	bf00      	nop
 8003172:	bf00      	nop
 8003174:	3710      	adds	r7, #16
 8003176:	46bd      	mov	sp, r7
 8003178:	bd80      	pop	{r7, pc}

0800317a <VibeCheckRGB_SendColors>:


void VibeCheckRGB_SendColors(VibeCheckRGB* rgb)  /* send the colors to the LEDs */
{
 800317a:	b580      	push	{r7, lr}
 800317c:	b088      	sub	sp, #32
 800317e:	af00      	add	r7, sp, #0
 8003180:	6078      	str	r0, [r7, #4]
	/* compute the bit stream timings */
	uint32_t i = VC_RGB_RESET_PERIODS;  /* put the reset periods first so we are not affected by spurious pin events at startup and such */
 8003182:	23e0      	movs	r3, #224	@ 0xe0
 8003184:	61fb      	str	r3, [r7, #28]
	for (uint32_t j = 0; j < VC_RGB_NUM_LEDS; j++)  /* Bit order for LED is G7, G6, ..., G0, R7, ..., R0, B7, ..., B0 */
 8003186:	2300      	movs	r3, #0
 8003188:	61bb      	str	r3, [r7, #24]
 800318a:	e06e      	b.n	800326a <VibeCheckRGB_SendColors+0xf0>
	{
		for (uint32_t k = 8; k > 0; k--)  /* green */
 800318c:	2308      	movs	r3, #8
 800318e:	617b      	str	r3, [r7, #20]
 8003190:	e01d      	b.n	80031ce <VibeCheckRGB_SendColors+0x54>
			rgb->bit_stream[i++] = ((rgb->colors[j].g >> (k - 1)) & 0x01) ? VC_RGB_TIM_HIGH : VC_RGB_TIM_LOW;
 8003192:	6879      	ldr	r1, [r7, #4]
 8003194:	69ba      	ldr	r2, [r7, #24]
 8003196:	4613      	mov	r3, r2
 8003198:	005b      	lsls	r3, r3, #1
 800319a:	4413      	add	r3, r2
 800319c:	440b      	add	r3, r1
 800319e:	3305      	adds	r3, #5
 80031a0:	781b      	ldrb	r3, [r3, #0]
 80031a2:	461a      	mov	r2, r3
 80031a4:	697b      	ldr	r3, [r7, #20]
 80031a6:	3b01      	subs	r3, #1
 80031a8:	fa42 f303 	asr.w	r3, r2, r3
 80031ac:	f003 0301 	and.w	r3, r3, #1
 80031b0:	2b00      	cmp	r3, #0
 80031b2:	d001      	beq.n	80031b8 <VibeCheckRGB_SendColors+0x3e>
 80031b4:	2130      	movs	r1, #48	@ 0x30
 80031b6:	e000      	b.n	80031ba <VibeCheckRGB_SendColors+0x40>
 80031b8:	2118      	movs	r1, #24
 80031ba:	69fb      	ldr	r3, [r7, #28]
 80031bc:	1c5a      	adds	r2, r3, #1
 80031be:	61fa      	str	r2, [r7, #28]
 80031c0:	687a      	ldr	r2, [r7, #4]
 80031c2:	3310      	adds	r3, #16
 80031c4:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		for (uint32_t k = 8; k > 0; k--)  /* green */
 80031c8:	697b      	ldr	r3, [r7, #20]
 80031ca:	3b01      	subs	r3, #1
 80031cc:	617b      	str	r3, [r7, #20]
 80031ce:	697b      	ldr	r3, [r7, #20]
 80031d0:	2b00      	cmp	r3, #0
 80031d2:	d1de      	bne.n	8003192 <VibeCheckRGB_SendColors+0x18>

		for (uint32_t k = 8; k > 0; k--)  /* red */
 80031d4:	2308      	movs	r3, #8
 80031d6:	613b      	str	r3, [r7, #16]
 80031d8:	e01d      	b.n	8003216 <VibeCheckRGB_SendColors+0x9c>
			rgb->bit_stream[i++] = ((rgb->colors[j].r >> (k - 1)) & 0x01) ? VC_RGB_TIM_HIGH : VC_RGB_TIM_LOW;
 80031da:	6879      	ldr	r1, [r7, #4]
 80031dc:	69ba      	ldr	r2, [r7, #24]
 80031de:	4613      	mov	r3, r2
 80031e0:	005b      	lsls	r3, r3, #1
 80031e2:	4413      	add	r3, r2
 80031e4:	440b      	add	r3, r1
 80031e6:	3304      	adds	r3, #4
 80031e8:	781b      	ldrb	r3, [r3, #0]
 80031ea:	461a      	mov	r2, r3
 80031ec:	693b      	ldr	r3, [r7, #16]
 80031ee:	3b01      	subs	r3, #1
 80031f0:	fa42 f303 	asr.w	r3, r2, r3
 80031f4:	f003 0301 	and.w	r3, r3, #1
 80031f8:	2b00      	cmp	r3, #0
 80031fa:	d001      	beq.n	8003200 <VibeCheckRGB_SendColors+0x86>
 80031fc:	2130      	movs	r1, #48	@ 0x30
 80031fe:	e000      	b.n	8003202 <VibeCheckRGB_SendColors+0x88>
 8003200:	2118      	movs	r1, #24
 8003202:	69fb      	ldr	r3, [r7, #28]
 8003204:	1c5a      	adds	r2, r3, #1
 8003206:	61fa      	str	r2, [r7, #28]
 8003208:	687a      	ldr	r2, [r7, #4]
 800320a:	3310      	adds	r3, #16
 800320c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		for (uint32_t k = 8; k > 0; k--)  /* red */
 8003210:	693b      	ldr	r3, [r7, #16]
 8003212:	3b01      	subs	r3, #1
 8003214:	613b      	str	r3, [r7, #16]
 8003216:	693b      	ldr	r3, [r7, #16]
 8003218:	2b00      	cmp	r3, #0
 800321a:	d1de      	bne.n	80031da <VibeCheckRGB_SendColors+0x60>

		for (uint32_t k = 8; k > 0; k--)  /* blue */
 800321c:	2308      	movs	r3, #8
 800321e:	60fb      	str	r3, [r7, #12]
 8003220:	e01d      	b.n	800325e <VibeCheckRGB_SendColors+0xe4>
			rgb->bit_stream[i++] = ((rgb->colors[j].b >> (k - 1)) & 0x01) ? VC_RGB_TIM_HIGH : VC_RGB_TIM_LOW;
 8003222:	6879      	ldr	r1, [r7, #4]
 8003224:	69ba      	ldr	r2, [r7, #24]
 8003226:	4613      	mov	r3, r2
 8003228:	005b      	lsls	r3, r3, #1
 800322a:	4413      	add	r3, r2
 800322c:	440b      	add	r3, r1
 800322e:	3306      	adds	r3, #6
 8003230:	781b      	ldrb	r3, [r3, #0]
 8003232:	461a      	mov	r2, r3
 8003234:	68fb      	ldr	r3, [r7, #12]
 8003236:	3b01      	subs	r3, #1
 8003238:	fa42 f303 	asr.w	r3, r2, r3
 800323c:	f003 0301 	and.w	r3, r3, #1
 8003240:	2b00      	cmp	r3, #0
 8003242:	d001      	beq.n	8003248 <VibeCheckRGB_SendColors+0xce>
 8003244:	2130      	movs	r1, #48	@ 0x30
 8003246:	e000      	b.n	800324a <VibeCheckRGB_SendColors+0xd0>
 8003248:	2118      	movs	r1, #24
 800324a:	69fb      	ldr	r3, [r7, #28]
 800324c:	1c5a      	adds	r2, r3, #1
 800324e:	61fa      	str	r2, [r7, #28]
 8003250:	687a      	ldr	r2, [r7, #4]
 8003252:	3310      	adds	r3, #16
 8003254:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		for (uint32_t k = 8; k > 0; k--)  /* blue */
 8003258:	68fb      	ldr	r3, [r7, #12]
 800325a:	3b01      	subs	r3, #1
 800325c:	60fb      	str	r3, [r7, #12]
 800325e:	68fb      	ldr	r3, [r7, #12]
 8003260:	2b00      	cmp	r3, #0
 8003262:	d1de      	bne.n	8003222 <VibeCheckRGB_SendColors+0xa8>
	for (uint32_t j = 0; j < VC_RGB_NUM_LEDS; j++)  /* Bit order for LED is G7, G6, ..., G0, R7, ..., R0, B7, ..., B0 */
 8003264:	69bb      	ldr	r3, [r7, #24]
 8003266:	3301      	adds	r3, #1
 8003268:	61bb      	str	r3, [r7, #24]
 800326a:	69bb      	ldr	r3, [r7, #24]
 800326c:	2b08      	cmp	r3, #8
 800326e:	d98d      	bls.n	800318c <VibeCheckRGB_SendColors+0x12>
	}

	/* start the DMA transfer */
	(void)HAL_TIM_PWM_Start_DMA(rgb->htim, VC_RGB_TIM_CHANNEL, (uint32_t*)rgb->bit_stream, VC_RGB_BUF_LEN);
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	6818      	ldr	r0, [r3, #0]
 8003274:	687b      	ldr	r3, [r7, #4]
 8003276:	f103 0220 	add.w	r2, r3, #32
 800327a:	f44f 7326 	mov.w	r3, #664	@ 0x298
 800327e:	2100      	movs	r1, #0
 8003280:	f00b feda 	bl	800f038 <HAL_TIM_PWM_Start_DMA>
}
 8003284:	bf00      	nop
 8003286:	3720      	adds	r7, #32
 8003288:	46bd      	mov	sp, r7
 800328a:	bd80      	pop	{r7, pc}

0800328c <VibeCheckRGBCMD_Execute>:

*/


uint32_t VibeCheckRGBCMD_Execute(void* obj, VibeCheckShell* shell)
{
 800328c:	b580      	push	{r7, lr}
 800328e:	b09c      	sub	sp, #112	@ 0x70
 8003290:	af02      	add	r7, sp, #8
 8003292:	6078      	str	r0, [r7, #4]
 8003294:	6039      	str	r1, [r7, #0]
	VibeCheckRGB* rgb = (VibeCheckRGB*) obj;
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	667b      	str	r3, [r7, #100]	@ 0x64

	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 800329a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800329e:	2240      	movs	r2, #64	@ 0x40
 80032a0:	4619      	mov	r1, r3
 80032a2:	6838      	ldr	r0, [r7, #0]
 80032a4:	f000 fb28 	bl	80038f8 <VibeCheckShell_GetNextString>
 80032a8:	4603      	mov	r3, r0
 80032aa:	2b00      	cmp	r3, #0
 80032ac:	f000 80c2 	beq.w	8003434 <VibeCheckRGBCMD_Execute+0x1a8>
	{
		if (!strcmp(str, "set"))
 80032b0:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80032b4:	4962      	ldr	r1, [pc, #392]	@ (8003440 <VibeCheckRGBCMD_Execute+0x1b4>)
 80032b6:	4618      	mov	r0, r3
 80032b8:	f7fd f82a 	bl	8000310 <strcmp>
 80032bc:	4603      	mov	r3, r0
 80032be:	2b00      	cmp	r3, #0
 80032c0:	d141      	bne.n	8003346 <VibeCheckRGBCMD_Execute+0xba>
		{
			int32_t index, r, g, b;
			if (VibeCheckShell_GetNextInt(shell, &index)
 80032c2:	f107 0320 	add.w	r3, r7, #32
 80032c6:	4619      	mov	r1, r3
 80032c8:	6838      	ldr	r0, [r7, #0]
 80032ca:	f000 fb85 	bl	80039d8 <VibeCheckShell_GetNextInt>
 80032ce:	4603      	mov	r3, r0
 80032d0:	2b00      	cmp	r3, #0
 80032d2:	f000 80af 	beq.w	8003434 <VibeCheckRGBCMD_Execute+0x1a8>
					&& VibeCheckShell_GetNextInt(shell, &r)
 80032d6:	f107 031c 	add.w	r3, r7, #28
 80032da:	4619      	mov	r1, r3
 80032dc:	6838      	ldr	r0, [r7, #0]
 80032de:	f000 fb7b 	bl	80039d8 <VibeCheckShell_GetNextInt>
 80032e2:	4603      	mov	r3, r0
 80032e4:	2b00      	cmp	r3, #0
 80032e6:	f000 80a5 	beq.w	8003434 <VibeCheckRGBCMD_Execute+0x1a8>
					&& VibeCheckShell_GetNextInt(shell, &g)
 80032ea:	f107 0318 	add.w	r3, r7, #24
 80032ee:	4619      	mov	r1, r3
 80032f0:	6838      	ldr	r0, [r7, #0]
 80032f2:	f000 fb71 	bl	80039d8 <VibeCheckShell_GetNextInt>
 80032f6:	4603      	mov	r3, r0
 80032f8:	2b00      	cmp	r3, #0
 80032fa:	f000 809b 	beq.w	8003434 <VibeCheckRGBCMD_Execute+0x1a8>
					&& VibeCheckShell_GetNextInt(shell, &b))
 80032fe:	f107 0314 	add.w	r3, r7, #20
 8003302:	4619      	mov	r1, r3
 8003304:	6838      	ldr	r0, [r7, #0]
 8003306:	f000 fb67 	bl	80039d8 <VibeCheckShell_GetNextInt>
 800330a:	4603      	mov	r3, r0
 800330c:	2b00      	cmp	r3, #0
 800330e:	f000 8091 	beq.w	8003434 <VibeCheckRGBCMD_Execute+0x1a8>
			{
				VibeCheckRGB_SetColor(rgb, index, r, g, b);
 8003312:	6a3b      	ldr	r3, [r7, #32]
 8003314:	4618      	mov	r0, r3
 8003316:	69fb      	ldr	r3, [r7, #28]
 8003318:	b2da      	uxtb	r2, r3
 800331a:	69bb      	ldr	r3, [r7, #24]
 800331c:	b2d9      	uxtb	r1, r3
 800331e:	697b      	ldr	r3, [r7, #20]
 8003320:	b2db      	uxtb	r3, r3
 8003322:	9300      	str	r3, [sp, #0]
 8003324:	460b      	mov	r3, r1
 8003326:	4601      	mov	r1, r0
 8003328:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 800332a:	f7ff feb4 	bl	8003096 <VibeCheckRGB_SetColor>
				VibeCheckRGB_SendColors(rgb);
 800332e:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 8003330:	f7ff ff23 	bl	800317a <VibeCheckRGB_SendColors>
				VibeCheckShell_PutOutputString(shell, "ack");
 8003334:	4943      	ldr	r1, [pc, #268]	@ (8003444 <VibeCheckRGBCMD_Execute+0x1b8>)
 8003336:	6838      	ldr	r0, [r7, #0]
 8003338:	f000 fbde 	bl	8003af8 <VibeCheckShell_PutOutputString>
				VibeCheckShell_PutOutputDelimiter(shell);
 800333c:	6838      	ldr	r0, [r7, #0]
 800333e:	f000 fc59 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
				return 1;
 8003342:	2301      	movs	r3, #1
 8003344:	e077      	b.n	8003436 <VibeCheckRGBCMD_Execute+0x1aa>
			}
		}
		else if (!strcmp(str, "get"))
 8003346:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800334a:	493f      	ldr	r1, [pc, #252]	@ (8003448 <VibeCheckRGBCMD_Execute+0x1bc>)
 800334c:	4618      	mov	r0, r3
 800334e:	f7fc ffdf 	bl	8000310 <strcmp>
 8003352:	4603      	mov	r3, r0
 8003354:	2b00      	cmp	r3, #0
 8003356:	d137      	bne.n	80033c8 <VibeCheckRGBCMD_Execute+0x13c>
		{
			int32_t index;
			if (VibeCheckShell_GetNextInt(shell, &index))
 8003358:	f107 0310 	add.w	r3, r7, #16
 800335c:	4619      	mov	r1, r3
 800335e:	6838      	ldr	r0, [r7, #0]
 8003360:	f000 fb3a 	bl	80039d8 <VibeCheckShell_GetNextInt>
 8003364:	4603      	mov	r3, r0
 8003366:	2b00      	cmp	r3, #0
 8003368:	d064      	beq.n	8003434 <VibeCheckRGBCMD_Execute+0x1a8>
			{
				VibeCheckRGB_Color color = VibeCheckRGB_GetColor(rgb, index);
 800336a:	693b      	ldr	r3, [r7, #16]
 800336c:	4619      	mov	r1, r3
 800336e:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 8003370:	f7ff fec2 	bl	80030f8 <VibeCheckRGB_GetColor>
 8003374:	4603      	mov	r3, r0
 8003376:	461a      	mov	r2, r3
 8003378:	733a      	strb	r2, [r7, #12]
 800337a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800337e:	737a      	strb	r2, [r7, #13]
 8003380:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8003384:	73bb      	strb	r3, [r7, #14]

				VibeCheckShell_PutOutputString(shell, "ack");
 8003386:	492f      	ldr	r1, [pc, #188]	@ (8003444 <VibeCheckRGBCMD_Execute+0x1b8>)
 8003388:	6838      	ldr	r0, [r7, #0]
 800338a:	f000 fbb5 	bl	8003af8 <VibeCheckShell_PutOutputString>
				VibeCheckShell_PutOutputSeparator(shell);
 800338e:	6838      	ldr	r0, [r7, #0]
 8003390:	f000 fc22 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>
				VibeCheckShell_PutOutputInt(shell, color.r);
 8003394:	7b3b      	ldrb	r3, [r7, #12]
 8003396:	4619      	mov	r1, r3
 8003398:	6838      	ldr	r0, [r7, #0]
 800339a:	f000 fbe7 	bl	8003b6c <VibeCheckShell_PutOutputInt>
				VibeCheckShell_PutOutputSeparator(shell);
 800339e:	6838      	ldr	r0, [r7, #0]
 80033a0:	f000 fc1a 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>
				VibeCheckShell_PutOutputInt(shell, color.g);
 80033a4:	7b7b      	ldrb	r3, [r7, #13]
 80033a6:	4619      	mov	r1, r3
 80033a8:	6838      	ldr	r0, [r7, #0]
 80033aa:	f000 fbdf 	bl	8003b6c <VibeCheckShell_PutOutputInt>
				VibeCheckShell_PutOutputSeparator(shell);
 80033ae:	6838      	ldr	r0, [r7, #0]
 80033b0:	f000 fc12 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>
				VibeCheckShell_PutOutputInt(shell, color.b);
 80033b4:	7bbb      	ldrb	r3, [r7, #14]
 80033b6:	4619      	mov	r1, r3
 80033b8:	6838      	ldr	r0, [r7, #0]
 80033ba:	f000 fbd7 	bl	8003b6c <VibeCheckShell_PutOutputInt>
				VibeCheckShell_PutOutputDelimiter(shell);
 80033be:	6838      	ldr	r0, [r7, #0]
 80033c0:	f000 fc18 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
				return 1;
 80033c4:	2301      	movs	r3, #1
 80033c6:	e036      	b.n	8003436 <VibeCheckRGBCMD_Execute+0x1aa>
			}
		}
		else if (!strcmp(str, "start"))  /* TODO: revisit this once we have a clearer idea of how the LED sequence should behave */
 80033c8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033cc:	491f      	ldr	r1, [pc, #124]	@ (800344c <VibeCheckRGBCMD_Execute+0x1c0>)
 80033ce:	4618      	mov	r0, r3
 80033d0:	f7fc ff9e 	bl	8000310 <strcmp>
 80033d4:	4603      	mov	r3, r0
 80033d6:	2b00      	cmp	r3, #0
 80033d8:	d10e      	bne.n	80033f8 <VibeCheckRGBCMD_Execute+0x16c>
		{
			VibeCheckRGB_StartBaseSequence(rgb);
 80033da:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 80033dc:	f7ff fe04 	bl	8002fe8 <VibeCheckRGB_StartBaseSequence>
			VibeCheckRGB_StartTopSequence(rgb);
 80033e0:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 80033e2:	f7ff fe38 	bl	8003056 <VibeCheckRGB_StartTopSequence>
			VibeCheckShell_PutOutputString(shell, "ack");
 80033e6:	4917      	ldr	r1, [pc, #92]	@ (8003444 <VibeCheckRGBCMD_Execute+0x1b8>)
 80033e8:	6838      	ldr	r0, [r7, #0]
 80033ea:	f000 fb85 	bl	8003af8 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputDelimiter(shell);
 80033ee:	6838      	ldr	r0, [r7, #0]
 80033f0:	f000 fc00 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 80033f4:	2301      	movs	r3, #1
 80033f6:	e01e      	b.n	8003436 <VibeCheckRGBCMD_Execute+0x1aa>
		}
		else if (!strcmp(str, "stop"))
 80033f8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033fc:	4914      	ldr	r1, [pc, #80]	@ (8003450 <VibeCheckRGBCMD_Execute+0x1c4>)
 80033fe:	4618      	mov	r0, r3
 8003400:	f7fc ff86 	bl	8000310 <strcmp>
 8003404:	4603      	mov	r3, r0
 8003406:	2b00      	cmp	r3, #0
 8003408:	d114      	bne.n	8003434 <VibeCheckRGBCMD_Execute+0x1a8>
		{
			VibeCheckRGB_StopBaseSequence(rgb);
 800340a:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 800340c:	f7ff fdfe 	bl	800300c <VibeCheckRGB_StopBaseSequence>
			VibeCheckRGB_StopTopSequence(rgb);
 8003410:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 8003412:	f7ff fe32 	bl	800307a <VibeCheckRGB_StopTopSequence>
			VibeCheckRGB_SetAllOff(rgb);
 8003416:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 8003418:	f7ff fe95 	bl	8003146 <VibeCheckRGB_SetAllOff>
			VibeCheckRGB_SendColors(rgb);
 800341c:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 800341e:	f7ff feac 	bl	800317a <VibeCheckRGB_SendColors>
			VibeCheckShell_PutOutputString(shell, "ack");
 8003422:	4908      	ldr	r1, [pc, #32]	@ (8003444 <VibeCheckRGBCMD_Execute+0x1b8>)
 8003424:	6838      	ldr	r0, [r7, #0]
 8003426:	f000 fb67 	bl	8003af8 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputDelimiter(shell);
 800342a:	6838      	ldr	r0, [r7, #0]
 800342c:	f000 fbe2 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8003430:	2301      	movs	r3, #1
 8003432:	e000      	b.n	8003436 <VibeCheckRGBCMD_Execute+0x1aa>
		}
	}

	return 0;
 8003434:	2300      	movs	r3, #0
}
 8003436:	4618      	mov	r0, r3
 8003438:	3768      	adds	r7, #104	@ 0x68
 800343a:	46bd      	mov	sp, r7
 800343c:	bd80      	pop	{r7, pc}
 800343e:	bf00      	nop
 8003440:	0801aa60 	.word	0x0801aa60
 8003444:	0801aa64 	.word	0x0801aa64
 8003448:	0801aa68 	.word	0x0801aa68
 800344c:	0801aa6c 	.word	0x0801aa6c
 8003450:	0801aa74 	.word	0x0801aa74

08003454 <VibeCheckShell_Init>:

#include "vibecheck_shell.h"


void VibeCheckShell_Init(VibeCheckShell* shell)
{
 8003454:	b480      	push	{r7}
 8003456:	b083      	sub	sp, #12
 8003458:	af00      	add	r7, sp, #0
 800345a:	6078      	str	r0, [r7, #4]
	shell->input_head = 0;
 800345c:	687b      	ldr	r3, [r7, #4]
 800345e:	2200      	movs	r2, #0
 8003460:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
	shell->input_tail = 0;
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	2200      	movs	r2, #0
 8003468:	f8c3 2804 	str.w	r2, [r3, #2052]	@ 0x804
	shell->input_count = 0;
 800346c:	687b      	ldr	r3, [r7, #4]
 800346e:	2200      	movs	r2, #0
 8003470:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
	shell->input_delimiter_count = 0;
 8003474:	687b      	ldr	r3, [r7, #4]
 8003476:	2200      	movs	r2, #0
 8003478:	f8c3 280c 	str.w	r2, [r3, #2060]	@ 0x80c

	shell->output_head = 0;
 800347c:	687b      	ldr	r3, [r7, #4]
 800347e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003482:	461a      	mov	r2, r3
 8003484:	2300      	movs	r3, #0
 8003486:	6113      	str	r3, [r2, #16]
	shell->output_tail = 0;
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800348e:	461a      	mov	r2, r3
 8003490:	2300      	movs	r3, #0
 8003492:	6153      	str	r3, [r2, #20]
	shell->output_count = 0;
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800349a:	461a      	mov	r2, r3
 800349c:	2300      	movs	r3, #0
 800349e:	6193      	str	r3, [r2, #24]

	shell->ih_count = 0;
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80034a6:	461a      	mov	r2, r3
 80034a8:	2300      	movs	r3, #0
 80034aa:	f8c2 321c 	str.w	r3, [r2, #540]	@ 0x21c
	shell->oh_count = 0;
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80034b4:	461a      	mov	r2, r3
 80034b6:	2300      	movs	r3, #0
 80034b8:	f8c2 3420 	str.w	r3, [r2, #1056]	@ 0x420
}
 80034bc:	bf00      	nop
 80034be:	370c      	adds	r7, #12
 80034c0:	46bd      	mov	sp, r7
 80034c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034c6:	4770      	bx	lr

080034c8 <VibeCheckShell_Update>:

VibeCheckShell_Status VibeCheckShell_Update(VibeCheckShell* shell)
{
 80034c8:	b590      	push	{r4, r7, lr}
 80034ca:	b099      	sub	sp, #100	@ 0x64
 80034cc:	af00      	add	r7, sp, #0
 80034ce:	6078      	str	r0, [r7, #4]

	VibeCheckShell_Status status = {
 80034d0:	2300      	movs	r3, #0
 80034d2:	64fb      	str	r3, [r7, #76]	@ 0x4c
			.ibuf_status = VC_SHELL_INPUT_BUFFER_OK,
			.obuf_status = VC_SHELL_OUTPUT_BUFFER_OK
	};

	/* check if character buffer overflow */
	if (shell->input_count >= VC_SHELL_IO_BUF_LEN)
 80034d4:	687b      	ldr	r3, [r7, #4]
 80034d6:	f8d3 3808 	ldr.w	r3, [r3, #2056]	@ 0x808
 80034da:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80034de:	d302      	bcc.n	80034e6 <VibeCheckShell_Update+0x1e>
		status.ibuf_status = VC_SHELL_INPUT_BUFFER_OVERFLOW;
 80034e0:	2301      	movs	r3, #1
 80034e2:	f887 304e 	strb.w	r3, [r7, #78]	@ 0x4e


	/* handle the inputs */
	if (shell->input_delimiter_count)
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	f8d3 380c 	ldr.w	r3, [r3, #2060]	@ 0x80c
 80034ec:	2b00      	cmp	r3, #0
 80034ee:	f000 8092 	beq.w	8003616 <VibeCheckShell_Update+0x14e>
		status.ihandl_status = VC_SHELL_INPUT_PROCESSED;
 80034f2:	2301      	movs	r3, #1
 80034f4:	f887 304c 	strb.w	r3, [r7, #76]	@ 0x4c

	while (shell->input_delimiter_count)
 80034f8:	e08d      	b.n	8003616 <VibeCheckShell_Update+0x14e>
	{
		/* look for a handler */
		char ih_name[VC_SHELL_MAX_TOKEN_LEN];
		if (VibeCheckShell_GetNextString(shell, ih_name, VC_SHELL_MAX_TOKEN_LEN))
 80034fa:	f107 030c 	add.w	r3, r7, #12
 80034fe:	2240      	movs	r2, #64	@ 0x40
 8003500:	4619      	mov	r1, r3
 8003502:	6878      	ldr	r0, [r7, #4]
 8003504:	f000 f9f8 	bl	80038f8 <VibeCheckShell_GetNextString>
 8003508:	4603      	mov	r3, r0
 800350a:	2b00      	cmp	r3, #0
 800350c:	d04d      	beq.n	80035aa <VibeCheckShell_Update+0xe2>
		{
			for (uint32_t i = 0; i < shell->ih_count; i++)
 800350e:	2300      	movs	r3, #0
 8003510:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003512:	e041      	b.n	8003598 <VibeCheckShell_Update+0xd0>
			{
				if (!strcmp(shell->input_handlers[i].name, ih_name))
 8003514:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8003516:	4613      	mov	r3, r2
 8003518:	00db      	lsls	r3, r3, #3
 800351a:	4413      	add	r3, r2
 800351c:	00db      	lsls	r3, r3, #3
 800351e:	f241 0218 	movw	r2, #4120	@ 0x1018
 8003522:	441a      	add	r2, r3
 8003524:	687b      	ldr	r3, [r7, #4]
 8003526:	4413      	add	r3, r2
 8003528:	3304      	adds	r3, #4
 800352a:	f107 020c 	add.w	r2, r7, #12
 800352e:	4611      	mov	r1, r2
 8003530:	4618      	mov	r0, r3
 8003532:	f7fc feed 	bl	8000310 <strcmp>
 8003536:	4603      	mov	r3, r0
 8003538:	2b00      	cmp	r3, #0
 800353a:	d11e      	bne.n	800357a <VibeCheckShell_Update+0xb2>
				{
					/* found a handler for this input */
					if (!shell->input_handlers[i].execute(shell->input_handlers[i].obj, shell))
 800353c:	6879      	ldr	r1, [r7, #4]
 800353e:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8003540:	4613      	mov	r3, r2
 8003542:	00db      	lsls	r3, r3, #3
 8003544:	4413      	add	r3, r2
 8003546:	00db      	lsls	r3, r3, #3
 8003548:	18ca      	adds	r2, r1, r3
 800354a:	f241 035c 	movw	r3, #4188	@ 0x105c
 800354e:	4413      	add	r3, r2
 8003550:	681c      	ldr	r4, [r3, #0]
 8003552:	6879      	ldr	r1, [r7, #4]
 8003554:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8003556:	4613      	mov	r3, r2
 8003558:	00db      	lsls	r3, r3, #3
 800355a:	4413      	add	r3, r2
 800355c:	00db      	lsls	r3, r3, #3
 800355e:	440b      	add	r3, r1
 8003560:	f503 5383 	add.w	r3, r3, #4192	@ 0x1060
 8003564:	681b      	ldr	r3, [r3, #0]
 8003566:	6879      	ldr	r1, [r7, #4]
 8003568:	4618      	mov	r0, r3
 800356a:	47a0      	blx	r4
 800356c:	4603      	mov	r3, r0
 800356e:	2b00      	cmp	r3, #0
 8003570:	d11f      	bne.n	80035b2 <VibeCheckShell_Update+0xea>
						status.ihandl_status = VC_SHELL_INPUT_ERROR_EXECUTING;
 8003572:	2303      	movs	r3, #3
 8003574:	f887 304c 	strb.w	r3, [r7, #76]	@ 0x4c
					break;
 8003578:	e01b      	b.n	80035b2 <VibeCheckShell_Update+0xea>
				}

				if (i == shell->ih_count - 1)
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8003580:	f8d3 321c 	ldr.w	r3, [r3, #540]	@ 0x21c
 8003584:	3b01      	subs	r3, #1
 8003586:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8003588:	429a      	cmp	r2, r3
 800358a:	d102      	bne.n	8003592 <VibeCheckShell_Update+0xca>
					status.ihandl_status = VC_SHELL_INPUT_ERROR_NO_HANDLER;
 800358c:	2302      	movs	r3, #2
 800358e:	f887 304c 	strb.w	r3, [r7, #76]	@ 0x4c
			for (uint32_t i = 0; i < shell->ih_count; i++)
 8003592:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8003594:	3301      	adds	r3, #1
 8003596:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003598:	687b      	ldr	r3, [r7, #4]
 800359a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800359e:	f8d3 321c 	ldr.w	r3, [r3, #540]	@ 0x21c
 80035a2:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 80035a4:	429a      	cmp	r2, r3
 80035a6:	d3b5      	bcc.n	8003514 <VibeCheckShell_Update+0x4c>
 80035a8:	e004      	b.n	80035b4 <VibeCheckShell_Update+0xec>
			}
		}
		else
		{
			/* couldn't get a string from the input for handler name */
			status.ihandl_status = VC_SHELL_INPUT_ERROR_NO_HANDLER;
 80035aa:	2302      	movs	r3, #2
 80035ac:	f887 304c 	strb.w	r3, [r7, #76]	@ 0x4c
 80035b0:	e000      	b.n	80035b4 <VibeCheckShell_Update+0xec>
					break;
 80035b2:	bf00      	nop
		}

		/* clean up the remainder of the previous message */
		while (1)
		{
			char x = shell->input[shell->input_tail];
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
 80035ba:	687a      	ldr	r2, [r7, #4]
 80035bc:	5cd3      	ldrb	r3, [r2, r3]
 80035be:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57

			shell->input_count--;
 80035c2:	687b      	ldr	r3, [r7, #4]
 80035c4:	f8d3 3808 	ldr.w	r3, [r3, #2056]	@ 0x808
 80035c8:	1e5a      	subs	r2, r3, #1
 80035ca:	687b      	ldr	r3, [r7, #4]
 80035cc:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
			shell->input_tail++;
 80035d0:	687b      	ldr	r3, [r7, #4]
 80035d2:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
 80035d6:	1c5a      	adds	r2, r3, #1
 80035d8:	687b      	ldr	r3, [r7, #4]
 80035da:	f8c3 2804 	str.w	r2, [r3, #2052]	@ 0x804
			if (shell->input_tail == VC_SHELL_IO_BUF_LEN)
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
 80035e4:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80035e8:	d103      	bne.n	80035f2 <VibeCheckShell_Update+0x12a>
				shell->input_tail = 0;
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	2200      	movs	r2, #0
 80035ee:	f8c3 2804 	str.w	r2, [r3, #2052]	@ 0x804

			if(strchr(VC_SHELL_DELIMITER, x) != NULL)
 80035f2:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 80035f6:	4619      	mov	r1, r3
 80035f8:	482c      	ldr	r0, [pc, #176]	@ (80036ac <VibeCheckShell_Update+0x1e4>)
 80035fa:	f013 fe72 	bl	80172e2 <strchr>
 80035fe:	4603      	mov	r3, r0
 8003600:	2b00      	cmp	r3, #0
 8003602:	d100      	bne.n	8003606 <VibeCheckShell_Update+0x13e>
		{
 8003604:	e7d6      	b.n	80035b4 <VibeCheckShell_Update+0xec>
				break;  /* found the delimiter */
 8003606:	bf00      	nop
		}


		shell->input_delimiter_count--;
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	f8d3 380c 	ldr.w	r3, [r3, #2060]	@ 0x80c
 800360e:	1e5a      	subs	r2, r3, #1
 8003610:	687b      	ldr	r3, [r7, #4]
 8003612:	f8c3 280c 	str.w	r2, [r3, #2060]	@ 0x80c
	while (shell->input_delimiter_count)
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	f8d3 380c 	ldr.w	r3, [r3, #2060]	@ 0x80c
 800361c:	2b00      	cmp	r3, #0
 800361e:	f47f af6c 	bne.w	80034fa <VibeCheckShell_Update+0x32>
	}


	/* handle the outputs */
	for (uint32_t i = 0; i < shell->oh_count; i++)
 8003622:	2300      	movs	r3, #0
 8003624:	65bb      	str	r3, [r7, #88]	@ 0x58
 8003626:	e018      	b.n	800365a <VibeCheckShell_Update+0x192>
	{
		if (shell->output_handlers[i].execute(shell->output_handlers[i].obj, shell))
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800362c:	f202 4244 	addw	r2, r2, #1092	@ 0x444
 8003630:	f853 2032 	ldr.w	r2, [r3, r2, lsl #3]
 8003634:	6879      	ldr	r1, [r7, #4]
 8003636:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8003638:	f203 4344 	addw	r3, r3, #1092	@ 0x444
 800363c:	00db      	lsls	r3, r3, #3
 800363e:	440b      	add	r3, r1
 8003640:	685b      	ldr	r3, [r3, #4]
 8003642:	6879      	ldr	r1, [r7, #4]
 8003644:	4618      	mov	r0, r3
 8003646:	4790      	blx	r2
 8003648:	4603      	mov	r3, r0
 800364a:	2b00      	cmp	r3, #0
 800364c:	d002      	beq.n	8003654 <VibeCheckShell_Update+0x18c>
		{
			status.ohandl_status = VC_SHELL_OUTPUT_PROCESSED;
 800364e:	2301      	movs	r3, #1
 8003650:	f887 304d 	strb.w	r3, [r7, #77]	@ 0x4d
	for (uint32_t i = 0; i < shell->oh_count; i++)
 8003654:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8003656:	3301      	adds	r3, #1
 8003658:	65bb      	str	r3, [r7, #88]	@ 0x58
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8003660:	f8d3 3420 	ldr.w	r3, [r3, #1056]	@ 0x420
 8003664:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8003666:	429a      	cmp	r2, r3
 8003668:	d3de      	bcc.n	8003628 <VibeCheckShell_Update+0x160>
		}
	}

	/* check if character buffer overflow */
	if (shell->output_count >= VC_SHELL_IO_BUF_LEN)
 800366a:	687b      	ldr	r3, [r7, #4]
 800366c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003670:	699b      	ldr	r3, [r3, #24]
 8003672:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8003676:	d302      	bcc.n	800367e <VibeCheckShell_Update+0x1b6>
		status.obuf_status = VC_SHELL_OUTPUT_BUFFER_OVERFLOW;
 8003678:	2301      	movs	r3, #1
 800367a:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f


	return status;
 800367e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8003680:	653b      	str	r3, [r7, #80]	@ 0x50
 8003682:	2300      	movs	r3, #0
 8003684:	f897 2050 	ldrb.w	r2, [r7, #80]	@ 0x50
 8003688:	f362 0307 	bfi	r3, r2, #0, #8
 800368c:	f897 2051 	ldrb.w	r2, [r7, #81]	@ 0x51
 8003690:	f362 230f 	bfi	r3, r2, #8, #8
 8003694:	f897 2052 	ldrb.w	r2, [r7, #82]	@ 0x52
 8003698:	f362 4317 	bfi	r3, r2, #16, #8
 800369c:	f897 2053 	ldrb.w	r2, [r7, #83]	@ 0x53
 80036a0:	f362 631f 	bfi	r3, r2, #24, #8
}
 80036a4:	4618      	mov	r0, r3
 80036a6:	3764      	adds	r7, #100	@ 0x64
 80036a8:	46bd      	mov	sp, r7
 80036aa:	bd90      	pop	{r4, r7, pc}
 80036ac:	0801aa7c 	.word	0x0801aa7c

080036b0 <VibeCheckShell_RegisterInputHandler>:

void VibeCheckShell_RegisterInputHandler(VibeCheckShell* shell, VibeCheckShell_InputHandler handler)
{
 80036b0:	b084      	sub	sp, #16
 80036b2:	b580      	push	{r7, lr}
 80036b4:	b082      	sub	sp, #8
 80036b6:	af00      	add	r7, sp, #0
 80036b8:	6078      	str	r0, [r7, #4]
 80036ba:	f107 0014 	add.w	r0, r7, #20
 80036be:	e880 000e 	stmia.w	r0, {r1, r2, r3}
	if (shell->ih_count < VC_SHELL_MAX_NUM_HANDLERS)
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80036c8:	f8d3 321c 	ldr.w	r3, [r3, #540]	@ 0x21c
 80036cc:	2b3f      	cmp	r3, #63	@ 0x3f
 80036ce:	d81a      	bhi.n	8003706 <VibeCheckShell_RegisterInputHandler+0x56>
		shell->input_handlers[shell->ih_count++] = handler;
 80036d0:	687b      	ldr	r3, [r7, #4]
 80036d2:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80036d6:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 80036da:	1c53      	adds	r3, r2, #1
 80036dc:	6879      	ldr	r1, [r7, #4]
 80036de:	f501 5100 	add.w	r1, r1, #8192	@ 0x2000
 80036e2:	f8c1 321c 	str.w	r3, [r1, #540]	@ 0x21c
 80036e6:	6879      	ldr	r1, [r7, #4]
 80036e8:	4613      	mov	r3, r2
 80036ea:	00db      	lsls	r3, r3, #3
 80036ec:	4413      	add	r3, r2
 80036ee:	00db      	lsls	r3, r3, #3
 80036f0:	18ca      	adds	r2, r1, r3
 80036f2:	f241 0318 	movw	r3, #4120	@ 0x1018
 80036f6:	4413      	add	r3, r2
 80036f8:	3304      	adds	r3, #4
 80036fa:	f107 0114 	add.w	r1, r7, #20
 80036fe:	2248      	movs	r2, #72	@ 0x48
 8003700:	4618      	mov	r0, r3
 8003702:	f013 fe84 	bl	801740e <memcpy>
}
 8003706:	bf00      	nop
 8003708:	3708      	adds	r7, #8
 800370a:	46bd      	mov	sp, r7
 800370c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8003710:	b004      	add	sp, #16
 8003712:	4770      	bx	lr

08003714 <VibeCheckShell_RegisterOutputHandler>:

void VibeCheckShell_RegisterOutputHandler(VibeCheckShell* shell, VibeCheckShell_OutputHandler handler)
{
 8003714:	b480      	push	{r7}
 8003716:	b085      	sub	sp, #20
 8003718:	af00      	add	r7, sp, #0
 800371a:	60f8      	str	r0, [r7, #12]
 800371c:	1d3b      	adds	r3, r7, #4
 800371e:	e883 0006 	stmia.w	r3, {r1, r2}
	if (shell->oh_count < VC_SHELL_MAX_NUM_HANDLERS)
 8003722:	68fb      	ldr	r3, [r7, #12]
 8003724:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8003728:	f8d3 3420 	ldr.w	r3, [r3, #1056]	@ 0x420
 800372c:	2b3f      	cmp	r3, #63	@ 0x3f
 800372e:	d814      	bhi.n	800375a <VibeCheckShell_RegisterOutputHandler+0x46>
		shell->output_handlers[shell->oh_count++] = handler;
 8003730:	68fb      	ldr	r3, [r7, #12]
 8003732:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8003736:	f8d3 3420 	ldr.w	r3, [r3, #1056]	@ 0x420
 800373a:	1c5a      	adds	r2, r3, #1
 800373c:	68f9      	ldr	r1, [r7, #12]
 800373e:	f501 5100 	add.w	r1, r1, #8192	@ 0x2000
 8003742:	f8c1 2420 	str.w	r2, [r1, #1056]	@ 0x420
 8003746:	68fa      	ldr	r2, [r7, #12]
 8003748:	f203 4344 	addw	r3, r3, #1092	@ 0x444
 800374c:	00db      	lsls	r3, r3, #3
 800374e:	4413      	add	r3, r2
 8003750:	1d3a      	adds	r2, r7, #4
 8003752:	e892 0003 	ldmia.w	r2, {r0, r1}
 8003756:	e883 0003 	stmia.w	r3, {r0, r1}
}
 800375a:	bf00      	nop
 800375c:	3714      	adds	r7, #20
 800375e:	46bd      	mov	sp, r7
 8003760:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003764:	4770      	bx	lr
	...

08003768 <VibeCheckShell_PutInput>:

void VibeCheckShell_PutInput(VibeCheckShell* shell, char* input, uint32_t input_max_len)
{
 8003768:	b580      	push	{r7, lr}
 800376a:	b086      	sub	sp, #24
 800376c:	af00      	add	r7, sp, #0
 800376e:	60f8      	str	r0, [r7, #12]
 8003770:	60b9      	str	r1, [r7, #8]
 8003772:	607a      	str	r2, [r7, #4]
	/* add to the input buffer */
	for (uint32_t i = 0; i < input_max_len; i++)
 8003774:	2300      	movs	r3, #0
 8003776:	617b      	str	r3, [r7, #20]
 8003778:	e035      	b.n	80037e6 <VibeCheckShell_PutInput+0x7e>
	{
		if (*input)
 800377a:	68bb      	ldr	r3, [r7, #8]
 800377c:	781b      	ldrb	r3, [r3, #0]
 800377e:	2b00      	cmp	r3, #0
 8003780:	d036      	beq.n	80037f0 <VibeCheckShell_PutInput+0x88>
		{
			shell->input[shell->input_head++] = *input;
 8003782:	68fb      	ldr	r3, [r7, #12]
 8003784:	f8d3 3800 	ldr.w	r3, [r3, #2048]	@ 0x800
 8003788:	1c59      	adds	r1, r3, #1
 800378a:	68fa      	ldr	r2, [r7, #12]
 800378c:	f8c2 1800 	str.w	r1, [r2, #2048]	@ 0x800
 8003790:	68ba      	ldr	r2, [r7, #8]
 8003792:	7811      	ldrb	r1, [r2, #0]
 8003794:	68fa      	ldr	r2, [r7, #12]
 8003796:	54d1      	strb	r1, [r2, r3]
			if (shell->input_head == VC_SHELL_IO_BUF_LEN)
 8003798:	68fb      	ldr	r3, [r7, #12]
 800379a:	f8d3 3800 	ldr.w	r3, [r3, #2048]	@ 0x800
 800379e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80037a2:	d103      	bne.n	80037ac <VibeCheckShell_PutInput+0x44>
					shell->input_head = 0;
 80037a4:	68fb      	ldr	r3, [r7, #12]
 80037a6:	2200      	movs	r2, #0
 80037a8:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
			shell->input_count++;
 80037ac:	68fb      	ldr	r3, [r7, #12]
 80037ae:	f8d3 3808 	ldr.w	r3, [r3, #2056]	@ 0x808
 80037b2:	1c5a      	adds	r2, r3, #1
 80037b4:	68fb      	ldr	r3, [r7, #12]
 80037b6:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808

			if (strchr(VC_SHELL_DELIMITER, *input) != NULL)
 80037ba:	68bb      	ldr	r3, [r7, #8]
 80037bc:	781b      	ldrb	r3, [r3, #0]
 80037be:	4619      	mov	r1, r3
 80037c0:	480e      	ldr	r0, [pc, #56]	@ (80037fc <VibeCheckShell_PutInput+0x94>)
 80037c2:	f013 fd8e 	bl	80172e2 <strchr>
 80037c6:	4603      	mov	r3, r0
 80037c8:	2b00      	cmp	r3, #0
 80037ca:	d006      	beq.n	80037da <VibeCheckShell_PutInput+0x72>
				shell->input_delimiter_count++;
 80037cc:	68fb      	ldr	r3, [r7, #12]
 80037ce:	f8d3 380c 	ldr.w	r3, [r3, #2060]	@ 0x80c
 80037d2:	1c5a      	adds	r2, r3, #1
 80037d4:	68fb      	ldr	r3, [r7, #12]
 80037d6:	f8c3 280c 	str.w	r2, [r3, #2060]	@ 0x80c

			input++;
 80037da:	68bb      	ldr	r3, [r7, #8]
 80037dc:	3301      	adds	r3, #1
 80037de:	60bb      	str	r3, [r7, #8]
	for (uint32_t i = 0; i < input_max_len; i++)
 80037e0:	697b      	ldr	r3, [r7, #20]
 80037e2:	3301      	adds	r3, #1
 80037e4:	617b      	str	r3, [r7, #20]
 80037e6:	697a      	ldr	r2, [r7, #20]
 80037e8:	687b      	ldr	r3, [r7, #4]
 80037ea:	429a      	cmp	r2, r3
 80037ec:	d3c5      	bcc.n	800377a <VibeCheckShell_PutInput+0x12>
		}
		else
			break;
	}
}
 80037ee:	e000      	b.n	80037f2 <VibeCheckShell_PutInput+0x8a>
			break;
 80037f0:	bf00      	nop
}
 80037f2:	bf00      	nop
 80037f4:	3718      	adds	r7, #24
 80037f6:	46bd      	mov	sp, r7
 80037f8:	bd80      	pop	{r7, pc}
 80037fa:	bf00      	nop
 80037fc:	0801aa7c 	.word	0x0801aa7c

08003800 <VibeCheckShell_GetOutput>:


uint32_t VibeCheckShell_GetOutput(VibeCheckShell* shell, char** output, uint32_t* len)
{
 8003800:	b480      	push	{r7}
 8003802:	b085      	sub	sp, #20
 8003804:	af00      	add	r7, sp, #0
 8003806:	60f8      	str	r0, [r7, #12]
 8003808:	60b9      	str	r1, [r7, #8]
 800380a:	607a      	str	r2, [r7, #4]
	/* returns true if there is stuff in the output buffer we haven't yet sent */
	if (shell->output_head == shell->output_tail)
 800380c:	68fb      	ldr	r3, [r7, #12]
 800380e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003812:	691a      	ldr	r2, [r3, #16]
 8003814:	68fb      	ldr	r3, [r7, #12]
 8003816:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800381a:	695b      	ldr	r3, [r3, #20]
 800381c:	429a      	cmp	r2, r3
 800381e:	d101      	bne.n	8003824 <VibeCheckShell_GetOutput+0x24>
		return 0;
 8003820:	2300      	movs	r3, #0
 8003822:	e062      	b.n	80038ea <VibeCheckShell_GetOutput+0xea>

	if (shell->output_head > shell->output_tail)
 8003824:	68fb      	ldr	r3, [r7, #12]
 8003826:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800382a:	691a      	ldr	r2, [r3, #16]
 800382c:	68fb      	ldr	r3, [r7, #12]
 800382e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003832:	695b      	ldr	r3, [r3, #20]
 8003834:	429a      	cmp	r2, r3
 8003836:	d930      	bls.n	800389a <VibeCheckShell_GetOutput+0x9a>
	{
		/* the output doesn't wrap so send it 'normally' */
		*output = &shell->output[shell->output_tail];
 8003838:	68fb      	ldr	r3, [r7, #12]
 800383a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800383e:	695b      	ldr	r3, [r3, #20]
 8003840:	f503 6301 	add.w	r3, r3, #2064	@ 0x810
 8003844:	68fa      	ldr	r2, [r7, #12]
 8003846:	441a      	add	r2, r3
 8003848:	68bb      	ldr	r3, [r7, #8]
 800384a:	601a      	str	r2, [r3, #0]
		*len = shell->output_head - shell->output_tail;
 800384c:	68fb      	ldr	r3, [r7, #12]
 800384e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003852:	691a      	ldr	r2, [r3, #16]
 8003854:	68fb      	ldr	r3, [r7, #12]
 8003856:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800385a:	695b      	ldr	r3, [r3, #20]
 800385c:	1ad2      	subs	r2, r2, r3
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	601a      	str	r2, [r3, #0]
		shell->output_count -= shell->output_head - shell->output_tail;
 8003862:	68fb      	ldr	r3, [r7, #12]
 8003864:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003868:	699a      	ldr	r2, [r3, #24]
 800386a:	68fb      	ldr	r3, [r7, #12]
 800386c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003870:	6959      	ldr	r1, [r3, #20]
 8003872:	68fb      	ldr	r3, [r7, #12]
 8003874:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003878:	691b      	ldr	r3, [r3, #16]
 800387a:	1acb      	subs	r3, r1, r3
 800387c:	4413      	add	r3, r2
 800387e:	68fa      	ldr	r2, [r7, #12]
 8003880:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 8003884:	6193      	str	r3, [r2, #24]
		shell->output_tail = shell->output_head;
 8003886:	68fb      	ldr	r3, [r7, #12]
 8003888:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800388c:	691b      	ldr	r3, [r3, #16]
 800388e:	68fa      	ldr	r2, [r7, #12]
 8003890:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 8003894:	6153      	str	r3, [r2, #20]
		return 1;
 8003896:	2301      	movs	r3, #1
 8003898:	e027      	b.n	80038ea <VibeCheckShell_GetOutput+0xea>
	}
	else
	{
		/* the output wraps: only return up to the end of the buffer region so our output is contiguous in memory */
		*output = &shell->output[shell->output_tail];
 800389a:	68fb      	ldr	r3, [r7, #12]
 800389c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80038a0:	695b      	ldr	r3, [r3, #20]
 80038a2:	f503 6301 	add.w	r3, r3, #2064	@ 0x810
 80038a6:	68fa      	ldr	r2, [r7, #12]
 80038a8:	441a      	add	r2, r3
 80038aa:	68bb      	ldr	r3, [r7, #8]
 80038ac:	601a      	str	r2, [r3, #0]
		*len = VC_SHELL_IO_BUF_LEN - shell->output_tail;
 80038ae:	68fb      	ldr	r3, [r7, #12]
 80038b0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80038b4:	695b      	ldr	r3, [r3, #20]
 80038b6:	f5c3 6200 	rsb	r2, r3, #2048	@ 0x800
 80038ba:	687b      	ldr	r3, [r7, #4]
 80038bc:	601a      	str	r2, [r3, #0]
		shell->output_count -= VC_SHELL_IO_BUF_LEN - shell->output_tail;
 80038be:	68fb      	ldr	r3, [r7, #12]
 80038c0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80038c4:	699a      	ldr	r2, [r3, #24]
 80038c6:	68fb      	ldr	r3, [r7, #12]
 80038c8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80038cc:	695b      	ldr	r3, [r3, #20]
 80038ce:	4413      	add	r3, r2
 80038d0:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 80038d4:	68fa      	ldr	r2, [r7, #12]
 80038d6:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 80038da:	6193      	str	r3, [r2, #24]
		shell->output_tail = 0;
 80038dc:	68fb      	ldr	r3, [r7, #12]
 80038de:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80038e2:	461a      	mov	r2, r3
 80038e4:	2300      	movs	r3, #0
 80038e6:	6153      	str	r3, [r2, #20]
		return 1;
 80038e8:	2301      	movs	r3, #1
	}

}
 80038ea:	4618      	mov	r0, r3
 80038ec:	3714      	adds	r7, #20
 80038ee:	46bd      	mov	sp, r7
 80038f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038f4:	4770      	bx	lr
	...

080038f8 <VibeCheckShell_GetNextString>:


/* these return true if they successfully get the next token */
uint32_t VibeCheckShell_GetNextString(VibeCheckShell* shell, char* next, uint32_t max_len)
{
 80038f8:	b580      	push	{r7, lr}
 80038fa:	b086      	sub	sp, #24
 80038fc:	af00      	add	r7, sp, #0
 80038fe:	60f8      	str	r0, [r7, #12]
 8003900:	60b9      	str	r1, [r7, #8]
 8003902:	607a      	str	r2, [r7, #4]

	for (uint32_t i = 0; i < max_len; )
 8003904:	2300      	movs	r3, #0
 8003906:	617b      	str	r3, [r7, #20]
 8003908:	e057      	b.n	80039ba <VibeCheckShell_GetNextString+0xc2>
	{

		char x = shell->input[shell->input_tail];
 800390a:	68fb      	ldr	r3, [r7, #12]
 800390c:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
 8003910:	68fa      	ldr	r2, [r7, #12]
 8003912:	5cd3      	ldrb	r3, [r2, r3]
 8003914:	74fb      	strb	r3, [r7, #19]

		if (strchr(VC_SHELL_DELIMITER, x) != NULL)
 8003916:	7cfb      	ldrb	r3, [r7, #19]
 8003918:	4619      	mov	r1, r3
 800391a:	482c      	ldr	r0, [pc, #176]	@ (80039cc <VibeCheckShell_GetNextString+0xd4>)
 800391c:	f013 fce1 	bl	80172e2 <strchr>
 8003920:	4603      	mov	r3, r0
 8003922:	2b00      	cmp	r3, #0
 8003924:	d009      	beq.n	800393a <VibeCheckShell_GetNextString+0x42>
		{
			/* this is a delimiter */
			if (i)  /* we have something in the token so return it */
 8003926:	697b      	ldr	r3, [r7, #20]
 8003928:	2b00      	cmp	r3, #0
 800392a:	d004      	beq.n	8003936 <VibeCheckShell_GetNextString+0x3e>
			{
				*next = '\0';
 800392c:	68bb      	ldr	r3, [r7, #8]
 800392e:	2200      	movs	r2, #0
 8003930:	701a      	strb	r2, [r3, #0]
				return 1;
 8003932:	2301      	movs	r3, #1
 8003934:	e046      	b.n	80039c4 <VibeCheckShell_GetNextString+0xcc>
			}
			else
				return 0;  /* don't go any further than the delimiter */
 8003936:	2300      	movs	r3, #0
 8003938:	e044      	b.n	80039c4 <VibeCheckShell_GetNextString+0xcc>
		}
		else
		{
			shell->input_count--;
 800393a:	68fb      	ldr	r3, [r7, #12]
 800393c:	f8d3 3808 	ldr.w	r3, [r3, #2056]	@ 0x808
 8003940:	1e5a      	subs	r2, r3, #1
 8003942:	68fb      	ldr	r3, [r7, #12]
 8003944:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
			shell->input_tail++;
 8003948:	68fb      	ldr	r3, [r7, #12]
 800394a:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
 800394e:	1c5a      	adds	r2, r3, #1
 8003950:	68fb      	ldr	r3, [r7, #12]
 8003952:	f8c3 2804 	str.w	r2, [r3, #2052]	@ 0x804
			if (shell->input_tail == VC_SHELL_IO_BUF_LEN)
 8003956:	68fb      	ldr	r3, [r7, #12]
 8003958:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
 800395c:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8003960:	d103      	bne.n	800396a <VibeCheckShell_GetNextString+0x72>
				shell->input_tail = 0;
 8003962:	68fb      	ldr	r3, [r7, #12]
 8003964:	2200      	movs	r2, #0
 8003966:	f8c3 2804 	str.w	r2, [r3, #2052]	@ 0x804

			if (strchr(VC_SHELL_INPUT_SEPARATORS, x) != NULL)
 800396a:	7cfb      	ldrb	r3, [r7, #19]
 800396c:	4619      	mov	r1, r3
 800396e:	4818      	ldr	r0, [pc, #96]	@ (80039d0 <VibeCheckShell_GetNextString+0xd8>)
 8003970:	f013 fcb7 	bl	80172e2 <strchr>
 8003974:	4603      	mov	r3, r0
 8003976:	2b00      	cmp	r3, #0
 8003978:	d007      	beq.n	800398a <VibeCheckShell_GetNextString+0x92>
			{
				/* this is a separator */
				if (i) /* if we have something in the token return it, otherwise just continue in order to skip leading separators */
 800397a:	697b      	ldr	r3, [r7, #20]
 800397c:	2b00      	cmp	r3, #0
 800397e:	d01c      	beq.n	80039ba <VibeCheckShell_GetNextString+0xc2>
				{
					*next = '\0';
 8003980:	68bb      	ldr	r3, [r7, #8]
 8003982:	2200      	movs	r2, #0
 8003984:	701a      	strb	r2, [r3, #0]
					return 1;
 8003986:	2301      	movs	r3, #1
 8003988:	e01c      	b.n	80039c4 <VibeCheckShell_GetNextString+0xcc>
				}
			}
			else
			{
				/* this is a character */
				*(next++) = tolower(x);  /* turn to all lower case letters */
 800398a:	7cfb      	ldrb	r3, [r7, #19]
 800398c:	74bb      	strb	r3, [r7, #18]
 800398e:	7cbb      	ldrb	r3, [r7, #18]
 8003990:	3301      	adds	r3, #1
 8003992:	4a10      	ldr	r2, [pc, #64]	@ (80039d4 <VibeCheckShell_GetNextString+0xdc>)
 8003994:	4413      	add	r3, r2
 8003996:	781b      	ldrb	r3, [r3, #0]
 8003998:	f003 0303 	and.w	r3, r3, #3
 800399c:	2b01      	cmp	r3, #1
 800399e:	d103      	bne.n	80039a8 <VibeCheckShell_GetNextString+0xb0>
 80039a0:	7cbb      	ldrb	r3, [r7, #18]
 80039a2:	f103 0220 	add.w	r2, r3, #32
 80039a6:	e000      	b.n	80039aa <VibeCheckShell_GetNextString+0xb2>
 80039a8:	7cba      	ldrb	r2, [r7, #18]
 80039aa:	68bb      	ldr	r3, [r7, #8]
 80039ac:	1c59      	adds	r1, r3, #1
 80039ae:	60b9      	str	r1, [r7, #8]
 80039b0:	b2d2      	uxtb	r2, r2
 80039b2:	701a      	strb	r2, [r3, #0]
				i++;
 80039b4:	697b      	ldr	r3, [r7, #20]
 80039b6:	3301      	adds	r3, #1
 80039b8:	617b      	str	r3, [r7, #20]
	for (uint32_t i = 0; i < max_len; )
 80039ba:	697a      	ldr	r2, [r7, #20]
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	429a      	cmp	r2, r3
 80039c0:	d3a3      	bcc.n	800390a <VibeCheckShell_GetNextString+0x12>
			}
		}
	}

	return 0;
 80039c2:	2300      	movs	r3, #0
}
 80039c4:	4618      	mov	r0, r3
 80039c6:	3718      	adds	r7, #24
 80039c8:	46bd      	mov	sp, r7
 80039ca:	bd80      	pop	{r7, pc}
 80039cc:	0801aa7c 	.word	0x0801aa7c
 80039d0:	0801aa80 	.word	0x0801aa80
 80039d4:	0801b0d8 	.word	0x0801b0d8

080039d8 <VibeCheckShell_GetNextInt>:


uint32_t VibeCheckShell_GetNextInt(VibeCheckShell* shell, int32_t* next)
{
 80039d8:	b580      	push	{r7, lr}
 80039da:	b096      	sub	sp, #88	@ 0x58
 80039dc:	af00      	add	r7, sp, #0
 80039de:	6078      	str	r0, [r7, #4]
 80039e0:	6039      	str	r1, [r7, #0]
	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 80039e2:	f107 0314 	add.w	r3, r7, #20
 80039e6:	2240      	movs	r2, #64	@ 0x40
 80039e8:	4619      	mov	r1, r3
 80039ea:	6878      	ldr	r0, [r7, #4]
 80039ec:	f7ff ff84 	bl	80038f8 <VibeCheckShell_GetNextString>
 80039f0:	4603      	mov	r3, r0
 80039f2:	2b00      	cmp	r3, #0
 80039f4:	d02f      	beq.n	8003a56 <VibeCheckShell_GetNextInt+0x7e>
	{
		char valid[] = "-0123456789";
 80039f6:	4a1a      	ldr	r2, [pc, #104]	@ (8003a60 <VibeCheckShell_GetNextInt+0x88>)
 80039f8:	f107 0308 	add.w	r3, r7, #8
 80039fc:	ca07      	ldmia	r2, {r0, r1, r2}
 80039fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
		for (uint32_t i = 0; i < strlen(str); i++)
 8003a02:	2300      	movs	r3, #0
 8003a04:	657b      	str	r3, [r7, #84]	@ 0x54
 8003a06:	e013      	b.n	8003a30 <VibeCheckShell_GetNextInt+0x58>
			if (strchr(valid, str[i]) == NULL)
 8003a08:	f107 0214 	add.w	r2, r7, #20
 8003a0c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003a0e:	4413      	add	r3, r2
 8003a10:	781b      	ldrb	r3, [r3, #0]
 8003a12:	461a      	mov	r2, r3
 8003a14:	f107 0308 	add.w	r3, r7, #8
 8003a18:	4611      	mov	r1, r2
 8003a1a:	4618      	mov	r0, r3
 8003a1c:	f013 fc61 	bl	80172e2 <strchr>
 8003a20:	4603      	mov	r3, r0
 8003a22:	2b00      	cmp	r3, #0
 8003a24:	d101      	bne.n	8003a2a <VibeCheckShell_GetNextInt+0x52>
				return 0;  /* next token contains non-numeric characters */
 8003a26:	2300      	movs	r3, #0
 8003a28:	e016      	b.n	8003a58 <VibeCheckShell_GetNextInt+0x80>
		for (uint32_t i = 0; i < strlen(str); i++)
 8003a2a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003a2c:	3301      	adds	r3, #1
 8003a2e:	657b      	str	r3, [r7, #84]	@ 0x54
 8003a30:	f107 0314 	add.w	r3, r7, #20
 8003a34:	4618      	mov	r0, r3
 8003a36:	f7fc fccb 	bl	80003d0 <strlen>
 8003a3a:	4602      	mov	r2, r0
 8003a3c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003a3e:	4293      	cmp	r3, r2
 8003a40:	d3e2      	bcc.n	8003a08 <VibeCheckShell_GetNextInt+0x30>
		*next = atoi(str);
 8003a42:	f107 0314 	add.w	r3, r7, #20
 8003a46:	4618      	mov	r0, r3
 8003a48:	f012 f8a1 	bl	8015b8e <atoi>
 8003a4c:	4602      	mov	r2, r0
 8003a4e:	683b      	ldr	r3, [r7, #0]
 8003a50:	601a      	str	r2, [r3, #0]
		return 1;
 8003a52:	2301      	movs	r3, #1
 8003a54:	e000      	b.n	8003a58 <VibeCheckShell_GetNextInt+0x80>
	}

	return 0;
 8003a56:	2300      	movs	r3, #0
}
 8003a58:	4618      	mov	r0, r3
 8003a5a:	3758      	adds	r7, #88	@ 0x58
 8003a5c:	46bd      	mov	sp, r7
 8003a5e:	bd80      	pop	{r7, pc}
 8003a60:	0801aa84 	.word	0x0801aa84

08003a64 <VibeCheckShell_GetNextFloat>:


uint32_t VibeCheckShell_GetNextFloat(VibeCheckShell* shell, float* next)
{
 8003a64:	b590      	push	{r4, r7, lr}
 8003a66:	b099      	sub	sp, #100	@ 0x64
 8003a68:	af00      	add	r7, sp, #0
 8003a6a:	6078      	str	r0, [r7, #4]
 8003a6c:	6039      	str	r1, [r7, #0]
	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8003a6e:	f107 031c 	add.w	r3, r7, #28
 8003a72:	2240      	movs	r2, #64	@ 0x40
 8003a74:	4619      	mov	r1, r3
 8003a76:	6878      	ldr	r0, [r7, #4]
 8003a78:	f7ff ff3e 	bl	80038f8 <VibeCheckShell_GetNextString>
 8003a7c:	4603      	mov	r3, r0
 8003a7e:	2b00      	cmp	r3, #0
 8003a80:	d033      	beq.n	8003aea <VibeCheckShell_GetNextFloat+0x86>
	{
		char valid[] = ".-0123456789";
 8003a82:	4b1c      	ldr	r3, [pc, #112]	@ (8003af4 <VibeCheckShell_GetNextFloat+0x90>)
 8003a84:	f107 040c 	add.w	r4, r7, #12
 8003a88:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8003a8a:	c407      	stmia	r4!, {r0, r1, r2}
 8003a8c:	7023      	strb	r3, [r4, #0]
		for (uint32_t i = 0; i < strlen(str); i++)
 8003a8e:	2300      	movs	r3, #0
 8003a90:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003a92:	e013      	b.n	8003abc <VibeCheckShell_GetNextFloat+0x58>
			if (strchr(valid, str[i]) == NULL)
 8003a94:	f107 021c 	add.w	r2, r7, #28
 8003a98:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8003a9a:	4413      	add	r3, r2
 8003a9c:	781b      	ldrb	r3, [r3, #0]
 8003a9e:	461a      	mov	r2, r3
 8003aa0:	f107 030c 	add.w	r3, r7, #12
 8003aa4:	4611      	mov	r1, r2
 8003aa6:	4618      	mov	r0, r3
 8003aa8:	f013 fc1b 	bl	80172e2 <strchr>
 8003aac:	4603      	mov	r3, r0
 8003aae:	2b00      	cmp	r3, #0
 8003ab0:	d101      	bne.n	8003ab6 <VibeCheckShell_GetNextFloat+0x52>
				return 0;  /* next token contains non-numeric characters */
 8003ab2:	2300      	movs	r3, #0
 8003ab4:	e01a      	b.n	8003aec <VibeCheckShell_GetNextFloat+0x88>
		for (uint32_t i = 0; i < strlen(str); i++)
 8003ab6:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8003ab8:	3301      	adds	r3, #1
 8003aba:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003abc:	f107 031c 	add.w	r3, r7, #28
 8003ac0:	4618      	mov	r0, r3
 8003ac2:	f7fc fc85 	bl	80003d0 <strlen>
 8003ac6:	4602      	mov	r2, r0
 8003ac8:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8003aca:	4293      	cmp	r3, r2
 8003acc:	d3e2      	bcc.n	8003a94 <VibeCheckShell_GetNextFloat+0x30>
		*next = atof(str);
 8003ace:	f107 031c 	add.w	r3, r7, #28
 8003ad2:	4618      	mov	r0, r3
 8003ad4:	f012 f858 	bl	8015b88 <atof>
 8003ad8:	eeb0 7b40 	vmov.f64	d7, d0
 8003adc:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8003ae0:	683b      	ldr	r3, [r7, #0]
 8003ae2:	edc3 7a00 	vstr	s15, [r3]
		return 1;
 8003ae6:	2301      	movs	r3, #1
 8003ae8:	e000      	b.n	8003aec <VibeCheckShell_GetNextFloat+0x88>
	}

	return 0;
 8003aea:	2300      	movs	r3, #0
}
 8003aec:	4618      	mov	r0, r3
 8003aee:	3764      	adds	r7, #100	@ 0x64
 8003af0:	46bd      	mov	sp, r7
 8003af2:	bd90      	pop	{r4, r7, pc}
 8003af4:	0801aa90 	.word	0x0801aa90

08003af8 <VibeCheckShell_PutOutputString>:



/* add things to the output */
void VibeCheckShell_PutOutputString(VibeCheckShell* shell, char* str)
{
 8003af8:	b480      	push	{r7}
 8003afa:	b083      	sub	sp, #12
 8003afc:	af00      	add	r7, sp, #0
 8003afe:	6078      	str	r0, [r7, #4]
 8003b00:	6039      	str	r1, [r7, #0]
	while (*str)
 8003b02:	e027      	b.n	8003b54 <VibeCheckShell_PutOutputString+0x5c>
	{
		shell->output[shell->output_head++] = *(str++);
 8003b04:	683a      	ldr	r2, [r7, #0]
 8003b06:	1c53      	adds	r3, r2, #1
 8003b08:	603b      	str	r3, [r7, #0]
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003b10:	691b      	ldr	r3, [r3, #16]
 8003b12:	1c59      	adds	r1, r3, #1
 8003b14:	6878      	ldr	r0, [r7, #4]
 8003b16:	f500 5080 	add.w	r0, r0, #4096	@ 0x1000
 8003b1a:	6101      	str	r1, [r0, #16]
 8003b1c:	7811      	ldrb	r1, [r2, #0]
 8003b1e:	687a      	ldr	r2, [r7, #4]
 8003b20:	4413      	add	r3, r2
 8003b22:	460a      	mov	r2, r1
 8003b24:	f883 2810 	strb.w	r2, [r3, #2064]	@ 0x810
		shell->output_count++;
 8003b28:	687b      	ldr	r3, [r7, #4]
 8003b2a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003b2e:	699b      	ldr	r3, [r3, #24]
 8003b30:	3301      	adds	r3, #1
 8003b32:	687a      	ldr	r2, [r7, #4]
 8003b34:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 8003b38:	6193      	str	r3, [r2, #24]
		if (shell->output_head == VC_SHELL_IO_BUF_LEN)
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003b40:	691b      	ldr	r3, [r3, #16]
 8003b42:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8003b46:	d105      	bne.n	8003b54 <VibeCheckShell_PutOutputString+0x5c>
			shell->output_head = 0;
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003b4e:	461a      	mov	r2, r3
 8003b50:	2300      	movs	r3, #0
 8003b52:	6113      	str	r3, [r2, #16]
	while (*str)
 8003b54:	683b      	ldr	r3, [r7, #0]
 8003b56:	781b      	ldrb	r3, [r3, #0]
 8003b58:	2b00      	cmp	r3, #0
 8003b5a:	d1d3      	bne.n	8003b04 <VibeCheckShell_PutOutputString+0xc>
	}
}
 8003b5c:	bf00      	nop
 8003b5e:	bf00      	nop
 8003b60:	370c      	adds	r7, #12
 8003b62:	46bd      	mov	sp, r7
 8003b64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b68:	4770      	bx	lr
	...

08003b6c <VibeCheckShell_PutOutputInt>:

void VibeCheckShell_PutOutputInt(VibeCheckShell* shell, uint32_t val)
{
 8003b6c:	b580      	push	{r7, lr}
 8003b6e:	b092      	sub	sp, #72	@ 0x48
 8003b70:	af00      	add	r7, sp, #0
 8003b72:	6078      	str	r0, [r7, #4]
 8003b74:	6039      	str	r1, [r7, #0]
	char str[VC_SHELL_MAX_TOKEN_LEN];
	sprintf(str, "%ld", val);
 8003b76:	f107 0308 	add.w	r3, r7, #8
 8003b7a:	683a      	ldr	r2, [r7, #0]
 8003b7c:	4906      	ldr	r1, [pc, #24]	@ (8003b98 <VibeCheckShell_PutOutputInt+0x2c>)
 8003b7e:	4618      	mov	r0, r3
 8003b80:	f013 fb44 	bl	801720c <siprintf>
	VibeCheckShell_PutOutputString(shell, str);
 8003b84:	f107 0308 	add.w	r3, r7, #8
 8003b88:	4619      	mov	r1, r3
 8003b8a:	6878      	ldr	r0, [r7, #4]
 8003b8c:	f7ff ffb4 	bl	8003af8 <VibeCheckShell_PutOutputString>
}
 8003b90:	bf00      	nop
 8003b92:	3748      	adds	r7, #72	@ 0x48
 8003b94:	46bd      	mov	sp, r7
 8003b96:	bd80      	pop	{r7, pc}
 8003b98:	0801aaa0 	.word	0x0801aaa0

08003b9c <VibeCheckShell_PutOutputFloat>:

void VibeCheckShell_PutOutputFloat(VibeCheckShell* shell, float val)
{
 8003b9c:	b580      	push	{r7, lr}
 8003b9e:	b092      	sub	sp, #72	@ 0x48
 8003ba0:	af00      	add	r7, sp, #0
 8003ba2:	6078      	str	r0, [r7, #4]
 8003ba4:	ed87 0a00 	vstr	s0, [r7]
	char str[VC_SHELL_MAX_TOKEN_LEN];
	sprintf(str, "%f", val);
 8003ba8:	edd7 7a00 	vldr	s15, [r7]
 8003bac:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8003bb0:	f107 0008 	add.w	r0, r7, #8
 8003bb4:	ec53 2b17 	vmov	r2, r3, d7
 8003bb8:	4906      	ldr	r1, [pc, #24]	@ (8003bd4 <VibeCheckShell_PutOutputFloat+0x38>)
 8003bba:	f013 fb27 	bl	801720c <siprintf>
	VibeCheckShell_PutOutputString(shell, str);
 8003bbe:	f107 0308 	add.w	r3, r7, #8
 8003bc2:	4619      	mov	r1, r3
 8003bc4:	6878      	ldr	r0, [r7, #4]
 8003bc6:	f7ff ff97 	bl	8003af8 <VibeCheckShell_PutOutputString>
}
 8003bca:	bf00      	nop
 8003bcc:	3748      	adds	r7, #72	@ 0x48
 8003bce:	46bd      	mov	sp, r7
 8003bd0:	bd80      	pop	{r7, pc}
 8003bd2:	bf00      	nop
 8003bd4:	0801aaa4 	.word	0x0801aaa4

08003bd8 <VibeCheckShell_PutOutputSeparator>:

void VibeCheckShell_PutOutputSeparator(VibeCheckShell* shell)
{
 8003bd8:	b580      	push	{r7, lr}
 8003bda:	b082      	sub	sp, #8
 8003bdc:	af00      	add	r7, sp, #0
 8003bde:	6078      	str	r0, [r7, #4]
	VibeCheckShell_PutOutputString(shell, VC_SHELL_OUTPUT_SEPARATOR);
 8003be0:	4903      	ldr	r1, [pc, #12]	@ (8003bf0 <VibeCheckShell_PutOutputSeparator+0x18>)
 8003be2:	6878      	ldr	r0, [r7, #4]
 8003be4:	f7ff ff88 	bl	8003af8 <VibeCheckShell_PutOutputString>
}
 8003be8:	bf00      	nop
 8003bea:	3708      	adds	r7, #8
 8003bec:	46bd      	mov	sp, r7
 8003bee:	bd80      	pop	{r7, pc}
 8003bf0:	0801aaa8 	.word	0x0801aaa8

08003bf4 <VibeCheckShell_PutOutputDelimiter>:

void VibeCheckShell_PutOutputDelimiter(VibeCheckShell* shell)
{
 8003bf4:	b580      	push	{r7, lr}
 8003bf6:	b082      	sub	sp, #8
 8003bf8:	af00      	add	r7, sp, #0
 8003bfa:	6078      	str	r0, [r7, #4]
	VibeCheckShell_PutOutputString(shell, VC_SHELL_DELIMITER);
 8003bfc:	4903      	ldr	r1, [pc, #12]	@ (8003c0c <VibeCheckShell_PutOutputDelimiter+0x18>)
 8003bfe:	6878      	ldr	r0, [r7, #4]
 8003c00:	f7ff ff7a 	bl	8003af8 <VibeCheckShell_PutOutputString>
}
 8003c04:	bf00      	nop
 8003c06:	3708      	adds	r7, #8
 8003c08:	46bd      	mov	sp, r7
 8003c0a:	bd80      	pop	{r7, pc}
 8003c0c:	0801aa7c 	.word	0x0801aa7c

08003c10 <VibeCheckStrobe_Init>:

#include "vibecheck_strobe.h"


void VibeCheckStrobe_Init(VibeCheckStrobe* strobe, TIM_HandleTypeDef* htim)
{
 8003c10:	b580      	push	{r7, lr}
 8003c12:	b082      	sub	sp, #8
 8003c14:	af00      	add	r7, sp, #0
 8003c16:	6078      	str	r0, [r7, #4]
 8003c18:	6039      	str	r1, [r7, #0]
	strobe->htim = htim;
 8003c1a:	687b      	ldr	r3, [r7, #4]
 8003c1c:	683a      	ldr	r2, [r7, #0]
 8003c1e:	601a      	str	r2, [r3, #0]
	strobe->freq_hz = VC_STROBE_MIN_FREQ_HZ;
 8003c20:	687b      	ldr	r3, [r7, #4]
 8003c22:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8003c26:	605a      	str	r2, [r3, #4]
	strobe->exposure_ms = 1.0f;
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8003c2e:	609a      	str	r2, [r3, #8]
	strobe->phase_deg = 0.0f;
 8003c30:	687b      	ldr	r3, [r7, #4]
 8003c32:	f04f 0200 	mov.w	r2, #0
 8003c36:	60da      	str	r2, [r3, #12]

	/* set up the timer registers */
	strobe->htim->Instance->PSC = VC_STROBE_TIM_PSC - 1;
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	681b      	ldr	r3, [r3, #0]
 8003c3c:	681b      	ldr	r3, [r3, #0]
 8003c3e:	f640 125f 	movw	r2, #2399	@ 0x95f
 8003c42:	629a      	str	r2, [r3, #40]	@ 0x28

	VibeCheckStrobe_SetFrequency(strobe, strobe->freq_hz);
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	edd3 7a01 	vldr	s15, [r3, #4]
 8003c4a:	eeb0 0a67 	vmov.f32	s0, s15
 8003c4e:	6878      	ldr	r0, [r7, #4]
 8003c50:	f000 f84a 	bl	8003ce8 <VibeCheckStrobe_SetFrequency>
	VibeCheckStrobe_SetExposure(strobe, strobe->exposure_ms);
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	edd3 7a02 	vldr	s15, [r3, #8]
 8003c5a:	eeb0 0a67 	vmov.f32	s0, s15
 8003c5e:	6878      	ldr	r0, [r7, #4]
 8003c60:	f000 f928 	bl	8003eb4 <VibeCheckStrobe_SetExposure>

}
 8003c64:	bf00      	nop
 8003c66:	3708      	adds	r7, #8
 8003c68:	46bd      	mov	sp, r7
 8003c6a:	bd80      	pop	{r7, pc}

08003c6c <VibeCheckStrobe_Start>:

void VibeCheckStrobe_Start(VibeCheckStrobe* strobe)
{
 8003c6c:	b580      	push	{r7, lr}
 8003c6e:	b082      	sub	sp, #8
 8003c70:	af00      	add	r7, sp, #0
 8003c72:	6078      	str	r0, [r7, #4]
	/* start the timers with interrupts when period completes */
	HAL_TIM_Base_Start_IT(strobe->htim);
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	4618      	mov	r0, r3
 8003c7a:	f00a ff43 	bl	800eb04 <HAL_TIM_Base_Start_IT>
	HAL_TIM_PWM_Start(strobe->htim, TIM_CHANNEL_1);
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	681b      	ldr	r3, [r3, #0]
 8003c82:	2100      	movs	r1, #0
 8003c84:	4618      	mov	r0, r3
 8003c86:	f00b f825 	bl	800ecd4 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(strobe->htim, TIM_CHANNEL_2);
 8003c8a:	687b      	ldr	r3, [r7, #4]
 8003c8c:	681b      	ldr	r3, [r3, #0]
 8003c8e:	2104      	movs	r1, #4
 8003c90:	4618      	mov	r0, r3
 8003c92:	f00b f81f 	bl	800ecd4 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(strobe->htim, TIM_CHANNEL_3);
 8003c96:	687b      	ldr	r3, [r7, #4]
 8003c98:	681b      	ldr	r3, [r3, #0]
 8003c9a:	2108      	movs	r1, #8
 8003c9c:	4618      	mov	r0, r3
 8003c9e:	f00b f819 	bl	800ecd4 <HAL_TIM_PWM_Start>
}
 8003ca2:	bf00      	nop
 8003ca4:	3708      	adds	r7, #8
 8003ca6:	46bd      	mov	sp, r7
 8003ca8:	bd80      	pop	{r7, pc}

08003caa <VibeCheckStrobe_Stop>:

void VibeCheckStrobe_Stop(VibeCheckStrobe* strobe)
{
 8003caa:	b580      	push	{r7, lr}
 8003cac:	b082      	sub	sp, #8
 8003cae:	af00      	add	r7, sp, #0
 8003cb0:	6078      	str	r0, [r7, #4]
	HAL_TIM_Base_Start_IT(strobe->htim);
 8003cb2:	687b      	ldr	r3, [r7, #4]
 8003cb4:	681b      	ldr	r3, [r3, #0]
 8003cb6:	4618      	mov	r0, r3
 8003cb8:	f00a ff24 	bl	800eb04 <HAL_TIM_Base_Start_IT>
	HAL_TIM_PWM_Stop(strobe->htim, TIM_CHANNEL_1);
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	681b      	ldr	r3, [r3, #0]
 8003cc0:	2100      	movs	r1, #0
 8003cc2:	4618      	mov	r0, r3
 8003cc4:	f00b f922 	bl	800ef0c <HAL_TIM_PWM_Stop>
	HAL_TIM_PWM_Stop(strobe->htim, TIM_CHANNEL_2);
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	681b      	ldr	r3, [r3, #0]
 8003ccc:	2104      	movs	r1, #4
 8003cce:	4618      	mov	r0, r3
 8003cd0:	f00b f91c 	bl	800ef0c <HAL_TIM_PWM_Stop>
	HAL_TIM_PWM_Stop(strobe->htim, TIM_CHANNEL_3);
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	2108      	movs	r1, #8
 8003cda:	4618      	mov	r0, r3
 8003cdc:	f00b f916 	bl	800ef0c <HAL_TIM_PWM_Stop>
}
 8003ce0:	bf00      	nop
 8003ce2:	3708      	adds	r7, #8
 8003ce4:	46bd      	mov	sp, r7
 8003ce6:	bd80      	pop	{r7, pc}

08003ce8 <VibeCheckStrobe_SetFrequency>:

void VibeCheckStrobe_SetFrequency(VibeCheckStrobe* strobe, float freq_hz)
{
 8003ce8:	b480      	push	{r7}
 8003cea:	b083      	sub	sp, #12
 8003cec:	af00      	add	r7, sp, #0
 8003cee:	6078      	str	r0, [r7, #4]
 8003cf0:	ed87 0a00 	vstr	s0, [r7]
	if (freq_hz < VC_STROBE_MIN_FREQ_HZ)
 8003cf4:	edd7 7a00 	vldr	s15, [r7]
 8003cf8:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 8003cfc:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003d00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003d04:	d502      	bpl.n	8003d0c <VibeCheckStrobe_SetFrequency+0x24>
		freq_hz = VC_STROBE_MIN_FREQ_HZ;
 8003d06:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8003d0a:	603b      	str	r3, [r7, #0]
	if (freq_hz > VC_STROBE_MAX_FREQ_HZ)
 8003d0c:	edd7 7a00 	vldr	s15, [r7]
 8003d10:	ed9f 7a1a 	vldr	s14, [pc, #104]	@ 8003d7c <VibeCheckStrobe_SetFrequency+0x94>
 8003d14:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003d18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003d1c:	dd01      	ble.n	8003d22 <VibeCheckStrobe_SetFrequency+0x3a>
		freq_hz = VC_STROBE_MAX_FREQ_HZ;
 8003d1e:	4b18      	ldr	r3, [pc, #96]	@ (8003d80 <VibeCheckStrobe_SetFrequency+0x98>)
 8003d20:	603b      	str	r3, [r7, #0]

	strobe->arr_steady = VC_STROBE_TIM_COUNTS_PER_SECOND / freq_hz - 1;
 8003d22:	eddf 6a18 	vldr	s13, [pc, #96]	@ 8003d84 <VibeCheckStrobe_SetFrequency+0x9c>
 8003d26:	ed97 7a00 	vldr	s14, [r7]
 8003d2a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003d2e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8003d32:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003d36:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003d3a:	ee17 2a90 	vmov	r2, s15
 8003d3e:	687b      	ldr	r3, [r7, #4]
 8003d40:	611a      	str	r2, [r3, #16]
	strobe->freq_hz = VC_STROBE_TIM_COUNTS_PER_SECOND / ((float)strobe->arr_steady + 1.0f);
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	691b      	ldr	r3, [r3, #16]
 8003d46:	ee07 3a90 	vmov	s15, r3
 8003d4a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003d4e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8003d52:	ee37 7a87 	vadd.f32	s14, s15, s14
 8003d56:	eddf 6a0b 	vldr	s13, [pc, #44]	@ 8003d84 <VibeCheckStrobe_SetFrequency+0x9c>
 8003d5a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	edc3 7a01 	vstr	s15, [r3, #4]
	strobe->htim->Instance->ARR = strobe->arr_steady;
 8003d64:	687b      	ldr	r3, [r7, #4]
 8003d66:	681b      	ldr	r3, [r3, #0]
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	687a      	ldr	r2, [r7, #4]
 8003d6c:	6912      	ldr	r2, [r2, #16]
 8003d6e:	62da      	str	r2, [r3, #44]	@ 0x2c
}
 8003d70:	bf00      	nop
 8003d72:	370c      	adds	r7, #12
 8003d74:	46bd      	mov	sp, r7
 8003d76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d7a:	4770      	bx	lr
 8003d7c:	447a0000 	.word	0x447a0000
 8003d80:	447a0000 	.word	0x447a0000
 8003d84:	47c35000 	.word	0x47c35000

08003d88 <VibeCheckStrobe_GetFrequency>:

float VibeCheckStrobe_GetFrequency(VibeCheckStrobe* strobe)
{
 8003d88:	b480      	push	{r7}
 8003d8a:	b083      	sub	sp, #12
 8003d8c:	af00      	add	r7, sp, #0
 8003d8e:	6078      	str	r0, [r7, #4]
	return strobe->freq_hz;
 8003d90:	687b      	ldr	r3, [r7, #4]
 8003d92:	685b      	ldr	r3, [r3, #4]
 8003d94:	ee07 3a90 	vmov	s15, r3
}
 8003d98:	eeb0 0a67 	vmov.f32	s0, s15
 8003d9c:	370c      	adds	r7, #12
 8003d9e:	46bd      	mov	sp, r7
 8003da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003da4:	4770      	bx	lr
	...

08003da8 <VibeCheckStrobe_SetPhase>:

void VibeCheckStrobe_SetPhase(VibeCheckStrobe* strobe, float phase_deg)
{
 8003da8:	b480      	push	{r7}
 8003daa:	b085      	sub	sp, #20
 8003dac:	af00      	add	r7, sp, #0
 8003dae:	6078      	str	r0, [r7, #4]
 8003db0:	ed87 0a00 	vstr	s0, [r7]
	 * To shift the phase, update ARR for a single period and then put it back
	 * The most reliable way would probably by with DMA into the ARR register, but this seems more complicated
	 * Instead let's try with an interrupt at the end of each period, and some struct variables to keep track of the phase update sequence
	 */

	if (phase_deg < VC_STROBE_MIN_PHASE_DEG)
 8003db4:	edd7 7a00 	vldr	s15, [r7]
 8003db8:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8003e80 <VibeCheckStrobe_SetPhase+0xd8>
 8003dbc:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003dc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003dc4:	d501      	bpl.n	8003dca <VibeCheckStrobe_SetPhase+0x22>
		phase_deg = VC_STROBE_MIN_PHASE_DEG;
 8003dc6:	4b2f      	ldr	r3, [pc, #188]	@ (8003e84 <VibeCheckStrobe_SetPhase+0xdc>)
 8003dc8:	603b      	str	r3, [r7, #0]
	if (phase_deg > VC_STROBE_MAX_PHASE_DEG)
 8003dca:	edd7 7a00 	vldr	s15, [r7]
 8003dce:	ed9f 7a2e 	vldr	s14, [pc, #184]	@ 8003e88 <VibeCheckStrobe_SetPhase+0xe0>
 8003dd2:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003dd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003dda:	dd01      	ble.n	8003de0 <VibeCheckStrobe_SetPhase+0x38>
		phase_deg = VC_STROBE_MAX_PHASE_DEG;
 8003ddc:	4b2b      	ldr	r3, [pc, #172]	@ (8003e8c <VibeCheckStrobe_SetPhase+0xe4>)
 8003dde:	603b      	str	r3, [r7, #0]


	/* TODO: need to test if this works */
	float deg_shift = phase_deg - strobe->phase_deg;  /* how many degrees we want to shift the phase */
 8003de0:	687b      	ldr	r3, [r7, #4]
 8003de2:	edd3 7a03 	vldr	s15, [r3, #12]
 8003de6:	ed97 7a00 	vldr	s14, [r7]
 8003dea:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003dee:	edc7 7a03 	vstr	s15, [r7, #12]
	int32_t arr_shift = deg_shift / 360.0f * strobe->arr_steady;  /* how much we need to alter the ARR for a single period to achieve the target phase shift */
 8003df2:	edd7 7a03 	vldr	s15, [r7, #12]
 8003df6:	eddf 6a26 	vldr	s13, [pc, #152]	@ 8003e90 <VibeCheckStrobe_SetPhase+0xe8>
 8003dfa:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8003dfe:	687b      	ldr	r3, [r7, #4]
 8003e00:	691b      	ldr	r3, [r3, #16]
 8003e02:	ee07 3a90 	vmov	s15, r3
 8003e06:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003e0a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003e0e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003e12:	ee17 3a90 	vmov	r3, s15
 8003e16:	60bb      	str	r3, [r7, #8]

	if (arr_shift && !strobe->phase_change_pending && !strobe->revert_arr_pending)
 8003e18:	68bb      	ldr	r3, [r7, #8]
 8003e1a:	2b00      	cmp	r3, #0
 8003e1c:	d029      	beq.n	8003e72 <VibeCheckStrobe_SetPhase+0xca>
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	699b      	ldr	r3, [r3, #24]
 8003e22:	2b00      	cmp	r3, #0
 8003e24:	d125      	bne.n	8003e72 <VibeCheckStrobe_SetPhase+0xca>
 8003e26:	687b      	ldr	r3, [r7, #4]
 8003e28:	69db      	ldr	r3, [r3, #28]
 8003e2a:	2b00      	cmp	r3, #0
 8003e2c:	d121      	bne.n	8003e72 <VibeCheckStrobe_SetPhase+0xca>
	{
		strobe->phase_deg += (float)arr_shift / (float)strobe->arr_steady * 360.0f;  /* calculate the actual phase shift accounting for rounding error */
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	ed93 7a03 	vldr	s14, [r3, #12]
 8003e34:	68bb      	ldr	r3, [r7, #8]
 8003e36:	ee07 3a90 	vmov	s15, r3
 8003e3a:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	691b      	ldr	r3, [r3, #16]
 8003e42:	ee07 3a90 	vmov	s15, r3
 8003e46:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8003e4a:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8003e4e:	eddf 6a10 	vldr	s13, [pc, #64]	@ 8003e90 <VibeCheckStrobe_SetPhase+0xe8>
 8003e52:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8003e56:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	edc3 7a03 	vstr	s15, [r3, #12]
		strobe->arr_phase = strobe->arr_steady + arr_shift;
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	691a      	ldr	r2, [r3, #16]
 8003e64:	68bb      	ldr	r3, [r7, #8]
 8003e66:	441a      	add	r2, r3
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	615a      	str	r2, [r3, #20]
		strobe->phase_change_pending = 1;  /* set the flag to enact the phase shift on the ARR interrupt */
 8003e6c:	687b      	ldr	r3, [r7, #4]
 8003e6e:	2201      	movs	r2, #1
 8003e70:	619a      	str	r2, [r3, #24]
	}
}
 8003e72:	bf00      	nop
 8003e74:	3714      	adds	r7, #20
 8003e76:	46bd      	mov	sp, r7
 8003e78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e7c:	4770      	bx	lr
 8003e7e:	bf00      	nop
 8003e80:	c3340000 	.word	0xc3340000
 8003e84:	c3340000 	.word	0xc3340000
 8003e88:	43340000 	.word	0x43340000
 8003e8c:	43340000 	.word	0x43340000
 8003e90:	43b40000 	.word	0x43b40000

08003e94 <VibeCheckStrobe_GetPhase>:

float VibeCheckStrobe_GetPhase(VibeCheckStrobe* strobe)
{
 8003e94:	b480      	push	{r7}
 8003e96:	b083      	sub	sp, #12
 8003e98:	af00      	add	r7, sp, #0
 8003e9a:	6078      	str	r0, [r7, #4]
	return strobe->phase_deg;
 8003e9c:	687b      	ldr	r3, [r7, #4]
 8003e9e:	68db      	ldr	r3, [r3, #12]
 8003ea0:	ee07 3a90 	vmov	s15, r3
}
 8003ea4:	eeb0 0a67 	vmov.f32	s0, s15
 8003ea8:	370c      	adds	r7, #12
 8003eaa:	46bd      	mov	sp, r7
 8003eac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eb0:	4770      	bx	lr
	...

08003eb4 <VibeCheckStrobe_SetExposure>:

void VibeCheckStrobe_SetExposure(VibeCheckStrobe* strobe, float exposure_ms)
{
 8003eb4:	b480      	push	{r7}
 8003eb6:	b085      	sub	sp, #20
 8003eb8:	af00      	add	r7, sp, #0
 8003eba:	6078      	str	r0, [r7, #4]
 8003ebc:	ed87 0a00 	vstr	s0, [r7]

	uint32_t ccr_val = exposure_ms * 0.001f * VC_STROBE_TIM_COUNTS_PER_SECOND;
 8003ec0:	edd7 7a00 	vldr	s15, [r7]
 8003ec4:	ed9f 7a1e 	vldr	s14, [pc, #120]	@ 8003f40 <VibeCheckStrobe_SetExposure+0x8c>
 8003ec8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003ecc:	ed9f 7a1d 	vldr	s14, [pc, #116]	@ 8003f44 <VibeCheckStrobe_SetExposure+0x90>
 8003ed0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003ed4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003ed8:	ee17 3a90 	vmov	r3, s15
 8003edc:	60fb      	str	r3, [r7, #12]
	if (ccr_val > strobe->htim->Instance->ARR)
 8003ede:	687b      	ldr	r3, [r7, #4]
 8003ee0:	681b      	ldr	r3, [r3, #0]
 8003ee2:	681b      	ldr	r3, [r3, #0]
 8003ee4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ee6:	68fa      	ldr	r2, [r7, #12]
 8003ee8:	429a      	cmp	r2, r3
 8003eea:	d904      	bls.n	8003ef6 <VibeCheckStrobe_SetExposure+0x42>
		ccr_val = strobe->htim->Instance->ARR;
 8003eec:	687b      	ldr	r3, [r7, #4]
 8003eee:	681b      	ldr	r3, [r3, #0]
 8003ef0:	681b      	ldr	r3, [r3, #0]
 8003ef2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ef4:	60fb      	str	r3, [r7, #12]
	strobe->exposure_ms = (float)ccr_val / (float)VC_STROBE_TIM_COUNTS_PER_SECOND * 1000.0f;
 8003ef6:	68fb      	ldr	r3, [r7, #12]
 8003ef8:	ee07 3a90 	vmov	s15, r3
 8003efc:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8003f00:	eddf 6a10 	vldr	s13, [pc, #64]	@ 8003f44 <VibeCheckStrobe_SetExposure+0x90>
 8003f04:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8003f08:	ed9f 7a0f 	vldr	s14, [pc, #60]	@ 8003f48 <VibeCheckStrobe_SetExposure+0x94>
 8003f0c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003f10:	687b      	ldr	r3, [r7, #4]
 8003f12:	edc3 7a02 	vstr	s15, [r3, #8]
	strobe->htim->Instance->CCR1 = ccr_val;
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	681b      	ldr	r3, [r3, #0]
 8003f1a:	681b      	ldr	r3, [r3, #0]
 8003f1c:	68fa      	ldr	r2, [r7, #12]
 8003f1e:	635a      	str	r2, [r3, #52]	@ 0x34
	strobe->htim->Instance->CCR2 = ccr_val;
 8003f20:	687b      	ldr	r3, [r7, #4]
 8003f22:	681b      	ldr	r3, [r3, #0]
 8003f24:	681b      	ldr	r3, [r3, #0]
 8003f26:	68fa      	ldr	r2, [r7, #12]
 8003f28:	639a      	str	r2, [r3, #56]	@ 0x38
	strobe->htim->Instance->CCR3 = ccr_val;
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	681b      	ldr	r3, [r3, #0]
 8003f2e:	681b      	ldr	r3, [r3, #0]
 8003f30:	68fa      	ldr	r2, [r7, #12]
 8003f32:	63da      	str	r2, [r3, #60]	@ 0x3c
}
 8003f34:	bf00      	nop
 8003f36:	3714      	adds	r7, #20
 8003f38:	46bd      	mov	sp, r7
 8003f3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f3e:	4770      	bx	lr
 8003f40:	3a83126f 	.word	0x3a83126f
 8003f44:	47c35000 	.word	0x47c35000
 8003f48:	447a0000 	.word	0x447a0000

08003f4c <VibeCheckStrobe_GetExposure>:

float VibeCheckStrobe_GetExposure(VibeCheckStrobe* strobe)
{
 8003f4c:	b480      	push	{r7}
 8003f4e:	b083      	sub	sp, #12
 8003f50:	af00      	add	r7, sp, #0
 8003f52:	6078      	str	r0, [r7, #4]
	return strobe->exposure_ms;
 8003f54:	687b      	ldr	r3, [r7, #4]
 8003f56:	689b      	ldr	r3, [r3, #8]
 8003f58:	ee07 3a90 	vmov	s15, r3
}
 8003f5c:	eeb0 0a67 	vmov.f32	s0, s15
 8003f60:	370c      	adds	r7, #12
 8003f62:	46bd      	mov	sp, r7
 8003f64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f68:	4770      	bx	lr

08003f6a <VibeCheckStrobe_PeriodElapsedUpdate>:


/* use an interrupt to make sure this is called each period */
void VibeCheckStrobe_PeriodElapsedUpdate(VibeCheckStrobe* strobe)
{
 8003f6a:	b480      	push	{r7}
 8003f6c:	b083      	sub	sp, #12
 8003f6e:	af00      	add	r7, sp, #0
 8003f70:	6078      	str	r0, [r7, #4]
	if (strobe->revert_arr_pending)
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	69db      	ldr	r3, [r3, #28]
 8003f76:	2b00      	cmp	r3, #0
 8003f78:	d008      	beq.n	8003f8c <VibeCheckStrobe_PeriodElapsedUpdate+0x22>
	{
		strobe->htim->Instance->ARR = strobe->arr_steady;
 8003f7a:	687b      	ldr	r3, [r7, #4]
 8003f7c:	681b      	ldr	r3, [r3, #0]
 8003f7e:	681b      	ldr	r3, [r3, #0]
 8003f80:	687a      	ldr	r2, [r7, #4]
 8003f82:	6912      	ldr	r2, [r2, #16]
 8003f84:	62da      	str	r2, [r3, #44]	@ 0x2c
		strobe->revert_arr_pending = 0;
 8003f86:	687b      	ldr	r3, [r7, #4]
 8003f88:	2200      	movs	r2, #0
 8003f8a:	61da      	str	r2, [r3, #28]
	}

	if (strobe->phase_change_pending)
 8003f8c:	687b      	ldr	r3, [r7, #4]
 8003f8e:	699b      	ldr	r3, [r3, #24]
 8003f90:	2b00      	cmp	r3, #0
 8003f92:	d00b      	beq.n	8003fac <VibeCheckStrobe_PeriodElapsedUpdate+0x42>
	{
		strobe->htim->Instance->ARR = strobe->arr_phase;
 8003f94:	687b      	ldr	r3, [r7, #4]
 8003f96:	681b      	ldr	r3, [r3, #0]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	687a      	ldr	r2, [r7, #4]
 8003f9c:	6952      	ldr	r2, [r2, #20]
 8003f9e:	62da      	str	r2, [r3, #44]	@ 0x2c
		strobe->revert_arr_pending = 1;
 8003fa0:	687b      	ldr	r3, [r7, #4]
 8003fa2:	2201      	movs	r2, #1
 8003fa4:	61da      	str	r2, [r3, #28]
		strobe->phase_change_pending = 0;
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	2200      	movs	r2, #0
 8003faa:	619a      	str	r2, [r3, #24]
	}
}
 8003fac:	bf00      	nop
 8003fae:	370c      	adds	r7, #12
 8003fb0:	46bd      	mov	sp, r7
 8003fb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fb6:	4770      	bx	lr

08003fb8 <VibeCheckStrobeCMD_Set>:
*/



static uint32_t VibeCheckStrobeCMD_Set(VibeCheckStrobe* strobe, VibeCheckShell* shell)
{
 8003fb8:	b580      	push	{r7, lr}
 8003fba:	b096      	sub	sp, #88	@ 0x58
 8003fbc:	af00      	add	r7, sp, #0
 8003fbe:	6078      	str	r0, [r7, #4]
 8003fc0:	6039      	str	r1, [r7, #0]
	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8003fc2:	f107 0318 	add.w	r3, r7, #24
 8003fc6:	2240      	movs	r2, #64	@ 0x40
 8003fc8:	4619      	mov	r1, r3
 8003fca:	6838      	ldr	r0, [r7, #0]
 8003fcc:	f7ff fc94 	bl	80038f8 <VibeCheckShell_GetNextString>
 8003fd0:	4603      	mov	r3, r0
 8003fd2:	2b00      	cmp	r3, #0
 8003fd4:	d065      	beq.n	80040a2 <VibeCheckStrobeCMD_Set+0xea>
	{
		if (!strcmp(str, "frequency"))
 8003fd6:	f107 0318 	add.w	r3, r7, #24
 8003fda:	4934      	ldr	r1, [pc, #208]	@ (80040ac <VibeCheckStrobeCMD_Set+0xf4>)
 8003fdc:	4618      	mov	r0, r3
 8003fde:	f7fc f997 	bl	8000310 <strcmp>
 8003fe2:	4603      	mov	r3, r0
 8003fe4:	2b00      	cmp	r3, #0
 8003fe6:	d118      	bne.n	800401a <VibeCheckStrobeCMD_Set+0x62>
		{
			float val;
			if (VibeCheckShell_GetNextFloat(shell, &val))
 8003fe8:	f107 0314 	add.w	r3, r7, #20
 8003fec:	4619      	mov	r1, r3
 8003fee:	6838      	ldr	r0, [r7, #0]
 8003ff0:	f7ff fd38 	bl	8003a64 <VibeCheckShell_GetNextFloat>
 8003ff4:	4603      	mov	r3, r0
 8003ff6:	2b00      	cmp	r3, #0
 8003ff8:	d053      	beq.n	80040a2 <VibeCheckStrobeCMD_Set+0xea>
			{
				VibeCheckStrobe_SetFrequency(strobe, val);
 8003ffa:	edd7 7a05 	vldr	s15, [r7, #20]
 8003ffe:	eeb0 0a67 	vmov.f32	s0, s15
 8004002:	6878      	ldr	r0, [r7, #4]
 8004004:	f7ff fe70 	bl	8003ce8 <VibeCheckStrobe_SetFrequency>
				VibeCheckShell_PutOutputString(shell, "ack");
 8004008:	4929      	ldr	r1, [pc, #164]	@ (80040b0 <VibeCheckStrobeCMD_Set+0xf8>)
 800400a:	6838      	ldr	r0, [r7, #0]
 800400c:	f7ff fd74 	bl	8003af8 <VibeCheckShell_PutOutputString>
				VibeCheckShell_PutOutputDelimiter(shell);
 8004010:	6838      	ldr	r0, [r7, #0]
 8004012:	f7ff fdef 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
				return 1;
 8004016:	2301      	movs	r3, #1
 8004018:	e044      	b.n	80040a4 <VibeCheckStrobeCMD_Set+0xec>
			}
		}
		else if (!strcmp(str, "phase"))
 800401a:	f107 0318 	add.w	r3, r7, #24
 800401e:	4925      	ldr	r1, [pc, #148]	@ (80040b4 <VibeCheckStrobeCMD_Set+0xfc>)
 8004020:	4618      	mov	r0, r3
 8004022:	f7fc f975 	bl	8000310 <strcmp>
 8004026:	4603      	mov	r3, r0
 8004028:	2b00      	cmp	r3, #0
 800402a:	d118      	bne.n	800405e <VibeCheckStrobeCMD_Set+0xa6>
		{
			float val;
			if (VibeCheckShell_GetNextFloat(shell, &val))
 800402c:	f107 0310 	add.w	r3, r7, #16
 8004030:	4619      	mov	r1, r3
 8004032:	6838      	ldr	r0, [r7, #0]
 8004034:	f7ff fd16 	bl	8003a64 <VibeCheckShell_GetNextFloat>
 8004038:	4603      	mov	r3, r0
 800403a:	2b00      	cmp	r3, #0
 800403c:	d031      	beq.n	80040a2 <VibeCheckStrobeCMD_Set+0xea>
			{
				VibeCheckStrobe_SetPhase(strobe, val);
 800403e:	edd7 7a04 	vldr	s15, [r7, #16]
 8004042:	eeb0 0a67 	vmov.f32	s0, s15
 8004046:	6878      	ldr	r0, [r7, #4]
 8004048:	f7ff feae 	bl	8003da8 <VibeCheckStrobe_SetPhase>
				VibeCheckShell_PutOutputString(shell, "ack");
 800404c:	4918      	ldr	r1, [pc, #96]	@ (80040b0 <VibeCheckStrobeCMD_Set+0xf8>)
 800404e:	6838      	ldr	r0, [r7, #0]
 8004050:	f7ff fd52 	bl	8003af8 <VibeCheckShell_PutOutputString>
				VibeCheckShell_PutOutputDelimiter(shell);
 8004054:	6838      	ldr	r0, [r7, #0]
 8004056:	f7ff fdcd 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
				return 1;
 800405a:	2301      	movs	r3, #1
 800405c:	e022      	b.n	80040a4 <VibeCheckStrobeCMD_Set+0xec>
			}
		}
		else if (!strcmp(str, "exposure"))
 800405e:	f107 0318 	add.w	r3, r7, #24
 8004062:	4915      	ldr	r1, [pc, #84]	@ (80040b8 <VibeCheckStrobeCMD_Set+0x100>)
 8004064:	4618      	mov	r0, r3
 8004066:	f7fc f953 	bl	8000310 <strcmp>
 800406a:	4603      	mov	r3, r0
 800406c:	2b00      	cmp	r3, #0
 800406e:	d118      	bne.n	80040a2 <VibeCheckStrobeCMD_Set+0xea>
		{
			float val;
			if (VibeCheckShell_GetNextFloat(shell, &val))
 8004070:	f107 030c 	add.w	r3, r7, #12
 8004074:	4619      	mov	r1, r3
 8004076:	6838      	ldr	r0, [r7, #0]
 8004078:	f7ff fcf4 	bl	8003a64 <VibeCheckShell_GetNextFloat>
 800407c:	4603      	mov	r3, r0
 800407e:	2b00      	cmp	r3, #0
 8004080:	d00f      	beq.n	80040a2 <VibeCheckStrobeCMD_Set+0xea>
			{
				VibeCheckStrobe_SetExposure(strobe, val);
 8004082:	edd7 7a03 	vldr	s15, [r7, #12]
 8004086:	eeb0 0a67 	vmov.f32	s0, s15
 800408a:	6878      	ldr	r0, [r7, #4]
 800408c:	f7ff ff12 	bl	8003eb4 <VibeCheckStrobe_SetExposure>
				VibeCheckShell_PutOutputString(shell, "ack");
 8004090:	4907      	ldr	r1, [pc, #28]	@ (80040b0 <VibeCheckStrobeCMD_Set+0xf8>)
 8004092:	6838      	ldr	r0, [r7, #0]
 8004094:	f7ff fd30 	bl	8003af8 <VibeCheckShell_PutOutputString>
				VibeCheckShell_PutOutputDelimiter(shell);
 8004098:	6838      	ldr	r0, [r7, #0]
 800409a:	f7ff fdab 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
				return 1;
 800409e:	2301      	movs	r3, #1
 80040a0:	e000      	b.n	80040a4 <VibeCheckStrobeCMD_Set+0xec>
			}
		}
	}

	return 0;
 80040a2:	2300      	movs	r3, #0
}
 80040a4:	4618      	mov	r0, r3
 80040a6:	3758      	adds	r7, #88	@ 0x58
 80040a8:	46bd      	mov	sp, r7
 80040aa:	bd80      	pop	{r7, pc}
 80040ac:	0801aaac 	.word	0x0801aaac
 80040b0:	0801aab8 	.word	0x0801aab8
 80040b4:	0801aabc 	.word	0x0801aabc
 80040b8:	0801aac4 	.word	0x0801aac4

080040bc <VibeCheckStrobeCMD_Get>:

static uint32_t VibeCheckStrobeCMD_Get(VibeCheckStrobe* strobe, VibeCheckShell* shell)
{
 80040bc:	b580      	push	{r7, lr}
 80040be:	b092      	sub	sp, #72	@ 0x48
 80040c0:	af00      	add	r7, sp, #0
 80040c2:	6078      	str	r0, [r7, #4]
 80040c4:	6039      	str	r1, [r7, #0]
	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 80040c6:	f107 0308 	add.w	r3, r7, #8
 80040ca:	2240      	movs	r2, #64	@ 0x40
 80040cc:	4619      	mov	r1, r3
 80040ce:	6838      	ldr	r0, [r7, #0]
 80040d0:	f7ff fc12 	bl	80038f8 <VibeCheckShell_GetNextString>
 80040d4:	4603      	mov	r3, r0
 80040d6:	2b00      	cmp	r3, #0
 80040d8:	d05c      	beq.n	8004194 <VibeCheckStrobeCMD_Get+0xd8>
	{
		if (!strcmp(str, "frequency"))
 80040da:	f107 0308 	add.w	r3, r7, #8
 80040de:	4930      	ldr	r1, [pc, #192]	@ (80041a0 <VibeCheckStrobeCMD_Get+0xe4>)
 80040e0:	4618      	mov	r0, r3
 80040e2:	f7fc f915 	bl	8000310 <strcmp>
 80040e6:	4603      	mov	r3, r0
 80040e8:	2b00      	cmp	r3, #0
 80040ea:	d115      	bne.n	8004118 <VibeCheckStrobeCMD_Get+0x5c>
		{
			VibeCheckShell_PutOutputString(shell, "ack");
 80040ec:	492d      	ldr	r1, [pc, #180]	@ (80041a4 <VibeCheckStrobeCMD_Get+0xe8>)
 80040ee:	6838      	ldr	r0, [r7, #0]
 80040f0:	f7ff fd02 	bl	8003af8 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputSeparator(shell);
 80040f4:	6838      	ldr	r0, [r7, #0]
 80040f6:	f7ff fd6f 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputFloat(shell, VibeCheckStrobe_GetFrequency(strobe));
 80040fa:	6878      	ldr	r0, [r7, #4]
 80040fc:	f7ff fe44 	bl	8003d88 <VibeCheckStrobe_GetFrequency>
 8004100:	eef0 7a40 	vmov.f32	s15, s0
 8004104:	eeb0 0a67 	vmov.f32	s0, s15
 8004108:	6838      	ldr	r0, [r7, #0]
 800410a:	f7ff fd47 	bl	8003b9c <VibeCheckShell_PutOutputFloat>
			VibeCheckShell_PutOutputDelimiter(shell);
 800410e:	6838      	ldr	r0, [r7, #0]
 8004110:	f7ff fd70 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8004114:	2301      	movs	r3, #1
 8004116:	e03e      	b.n	8004196 <VibeCheckStrobeCMD_Get+0xda>
		}
		else if (!strcmp(str, "phase"))
 8004118:	f107 0308 	add.w	r3, r7, #8
 800411c:	4922      	ldr	r1, [pc, #136]	@ (80041a8 <VibeCheckStrobeCMD_Get+0xec>)
 800411e:	4618      	mov	r0, r3
 8004120:	f7fc f8f6 	bl	8000310 <strcmp>
 8004124:	4603      	mov	r3, r0
 8004126:	2b00      	cmp	r3, #0
 8004128:	d115      	bne.n	8004156 <VibeCheckStrobeCMD_Get+0x9a>
		{
			VibeCheckShell_PutOutputString(shell, "ack");
 800412a:	491e      	ldr	r1, [pc, #120]	@ (80041a4 <VibeCheckStrobeCMD_Get+0xe8>)
 800412c:	6838      	ldr	r0, [r7, #0]
 800412e:	f7ff fce3 	bl	8003af8 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputSeparator(shell);
 8004132:	6838      	ldr	r0, [r7, #0]
 8004134:	f7ff fd50 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputFloat(shell, VibeCheckStrobe_GetPhase(strobe));
 8004138:	6878      	ldr	r0, [r7, #4]
 800413a:	f7ff feab 	bl	8003e94 <VibeCheckStrobe_GetPhase>
 800413e:	eef0 7a40 	vmov.f32	s15, s0
 8004142:	eeb0 0a67 	vmov.f32	s0, s15
 8004146:	6838      	ldr	r0, [r7, #0]
 8004148:	f7ff fd28 	bl	8003b9c <VibeCheckShell_PutOutputFloat>
			VibeCheckShell_PutOutputDelimiter(shell);
 800414c:	6838      	ldr	r0, [r7, #0]
 800414e:	f7ff fd51 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8004152:	2301      	movs	r3, #1
 8004154:	e01f      	b.n	8004196 <VibeCheckStrobeCMD_Get+0xda>
		}
		else if (!strcmp(str, "exposure"))
 8004156:	f107 0308 	add.w	r3, r7, #8
 800415a:	4914      	ldr	r1, [pc, #80]	@ (80041ac <VibeCheckStrobeCMD_Get+0xf0>)
 800415c:	4618      	mov	r0, r3
 800415e:	f7fc f8d7 	bl	8000310 <strcmp>
 8004162:	4603      	mov	r3, r0
 8004164:	2b00      	cmp	r3, #0
 8004166:	d115      	bne.n	8004194 <VibeCheckStrobeCMD_Get+0xd8>
		{
			VibeCheckShell_PutOutputString(shell, "ack");
 8004168:	490e      	ldr	r1, [pc, #56]	@ (80041a4 <VibeCheckStrobeCMD_Get+0xe8>)
 800416a:	6838      	ldr	r0, [r7, #0]
 800416c:	f7ff fcc4 	bl	8003af8 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputSeparator(shell);
 8004170:	6838      	ldr	r0, [r7, #0]
 8004172:	f7ff fd31 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputFloat(shell, VibeCheckStrobe_GetExposure(strobe));
 8004176:	6878      	ldr	r0, [r7, #4]
 8004178:	f7ff fee8 	bl	8003f4c <VibeCheckStrobe_GetExposure>
 800417c:	eef0 7a40 	vmov.f32	s15, s0
 8004180:	eeb0 0a67 	vmov.f32	s0, s15
 8004184:	6838      	ldr	r0, [r7, #0]
 8004186:	f7ff fd09 	bl	8003b9c <VibeCheckShell_PutOutputFloat>
			VibeCheckShell_PutOutputDelimiter(shell);
 800418a:	6838      	ldr	r0, [r7, #0]
 800418c:	f7ff fd32 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8004190:	2301      	movs	r3, #1
 8004192:	e000      	b.n	8004196 <VibeCheckStrobeCMD_Get+0xda>
		}
	}

	return 0;
 8004194:	2300      	movs	r3, #0
}
 8004196:	4618      	mov	r0, r3
 8004198:	3748      	adds	r7, #72	@ 0x48
 800419a:	46bd      	mov	sp, r7
 800419c:	bd80      	pop	{r7, pc}
 800419e:	bf00      	nop
 80041a0:	0801aaac 	.word	0x0801aaac
 80041a4:	0801aab8 	.word	0x0801aab8
 80041a8:	0801aabc 	.word	0x0801aabc
 80041ac:	0801aac4 	.word	0x0801aac4

080041b0 <VibeCheckStrobeCMD_Execute>:

uint32_t VibeCheckStrobeCMD_Execute(void* obj, VibeCheckShell* shell)
{
 80041b0:	b580      	push	{r7, lr}
 80041b2:	b094      	sub	sp, #80	@ 0x50
 80041b4:	af00      	add	r7, sp, #0
 80041b6:	6078      	str	r0, [r7, #4]
 80041b8:	6039      	str	r1, [r7, #0]
	VibeCheckStrobe* strobe = (VibeCheckStrobe*)obj;
 80041ba:	687b      	ldr	r3, [r7, #4]
 80041bc:	64fb      	str	r3, [r7, #76]	@ 0x4c

	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 80041be:	f107 030c 	add.w	r3, r7, #12
 80041c2:	2240      	movs	r2, #64	@ 0x40
 80041c4:	4619      	mov	r1, r3
 80041c6:	6838      	ldr	r0, [r7, #0]
 80041c8:	f7ff fb96 	bl	80038f8 <VibeCheckShell_GetNextString>
 80041cc:	4603      	mov	r3, r0
 80041ce:	2b00      	cmp	r3, #0
 80041d0:	d04d      	beq.n	800426e <VibeCheckStrobeCMD_Execute+0xbe>
	{
		if (!strcmp(str, "start"))
 80041d2:	f107 030c 	add.w	r3, r7, #12
 80041d6:	4928      	ldr	r1, [pc, #160]	@ (8004278 <VibeCheckStrobeCMD_Execute+0xc8>)
 80041d8:	4618      	mov	r0, r3
 80041da:	f7fc f899 	bl	8000310 <strcmp>
 80041de:	4603      	mov	r3, r0
 80041e0:	2b00      	cmp	r3, #0
 80041e2:	d10b      	bne.n	80041fc <VibeCheckStrobeCMD_Execute+0x4c>
		{
			VibeCheckStrobe_Start(strobe);
 80041e4:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 80041e6:	f7ff fd41 	bl	8003c6c <VibeCheckStrobe_Start>
			VibeCheckShell_PutOutputString(shell, "ack");
 80041ea:	4924      	ldr	r1, [pc, #144]	@ (800427c <VibeCheckStrobeCMD_Execute+0xcc>)
 80041ec:	6838      	ldr	r0, [r7, #0]
 80041ee:	f7ff fc83 	bl	8003af8 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputDelimiter(shell);
 80041f2:	6838      	ldr	r0, [r7, #0]
 80041f4:	f7ff fcfe 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 80041f8:	2301      	movs	r3, #1
 80041fa:	e039      	b.n	8004270 <VibeCheckStrobeCMD_Execute+0xc0>
		}
		else if (!strcmp(str, "stop"))
 80041fc:	f107 030c 	add.w	r3, r7, #12
 8004200:	491f      	ldr	r1, [pc, #124]	@ (8004280 <VibeCheckStrobeCMD_Execute+0xd0>)
 8004202:	4618      	mov	r0, r3
 8004204:	f7fc f884 	bl	8000310 <strcmp>
 8004208:	4603      	mov	r3, r0
 800420a:	2b00      	cmp	r3, #0
 800420c:	d10b      	bne.n	8004226 <VibeCheckStrobeCMD_Execute+0x76>
		{
			VibeCheckStrobe_Stop(strobe);
 800420e:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 8004210:	f7ff fd4b 	bl	8003caa <VibeCheckStrobe_Stop>
			VibeCheckShell_PutOutputString(shell, "ack");
 8004214:	4919      	ldr	r1, [pc, #100]	@ (800427c <VibeCheckStrobeCMD_Execute+0xcc>)
 8004216:	6838      	ldr	r0, [r7, #0]
 8004218:	f7ff fc6e 	bl	8003af8 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputDelimiter(shell);
 800421c:	6838      	ldr	r0, [r7, #0]
 800421e:	f7ff fce9 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8004222:	2301      	movs	r3, #1
 8004224:	e024      	b.n	8004270 <VibeCheckStrobeCMD_Execute+0xc0>
		}
		else if (!strcmp(str, "set"))
 8004226:	f107 030c 	add.w	r3, r7, #12
 800422a:	4916      	ldr	r1, [pc, #88]	@ (8004284 <VibeCheckStrobeCMD_Execute+0xd4>)
 800422c:	4618      	mov	r0, r3
 800422e:	f7fc f86f 	bl	8000310 <strcmp>
 8004232:	4603      	mov	r3, r0
 8004234:	2b00      	cmp	r3, #0
 8004236:	d108      	bne.n	800424a <VibeCheckStrobeCMD_Execute+0x9a>
		{
			if (VibeCheckStrobeCMD_Set(strobe, shell))
 8004238:	6839      	ldr	r1, [r7, #0]
 800423a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 800423c:	f7ff febc 	bl	8003fb8 <VibeCheckStrobeCMD_Set>
 8004240:	4603      	mov	r3, r0
 8004242:	2b00      	cmp	r3, #0
 8004244:	d013      	beq.n	800426e <VibeCheckStrobeCMD_Execute+0xbe>
			{
				return 1;
 8004246:	2301      	movs	r3, #1
 8004248:	e012      	b.n	8004270 <VibeCheckStrobeCMD_Execute+0xc0>
			}
		}
		else if (!strcmp(str, "get"))
 800424a:	f107 030c 	add.w	r3, r7, #12
 800424e:	490e      	ldr	r1, [pc, #56]	@ (8004288 <VibeCheckStrobeCMD_Execute+0xd8>)
 8004250:	4618      	mov	r0, r3
 8004252:	f7fc f85d 	bl	8000310 <strcmp>
 8004256:	4603      	mov	r3, r0
 8004258:	2b00      	cmp	r3, #0
 800425a:	d108      	bne.n	800426e <VibeCheckStrobeCMD_Execute+0xbe>
		{
			if (VibeCheckStrobeCMD_Get(strobe, shell))
 800425c:	6839      	ldr	r1, [r7, #0]
 800425e:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 8004260:	f7ff ff2c 	bl	80040bc <VibeCheckStrobeCMD_Get>
 8004264:	4603      	mov	r3, r0
 8004266:	2b00      	cmp	r3, #0
 8004268:	d001      	beq.n	800426e <VibeCheckStrobeCMD_Execute+0xbe>
			{
				return 1;
 800426a:	2301      	movs	r3, #1
 800426c:	e000      	b.n	8004270 <VibeCheckStrobeCMD_Execute+0xc0>
			}
		}
	}

	return 0;
 800426e:	2300      	movs	r3, #0
}
 8004270:	4618      	mov	r0, r3
 8004272:	3750      	adds	r7, #80	@ 0x50
 8004274:	46bd      	mov	sp, r7
 8004276:	bd80      	pop	{r7, pc}
 8004278:	0801aad0 	.word	0x0801aad0
 800427c:	0801aab8 	.word	0x0801aab8
 8004280:	0801aad8 	.word	0x0801aad8
 8004284:	0801aae0 	.word	0x0801aae0
 8004288:	0801aae4 	.word	0x0801aae4
 800428c:	00000000 	.word	0x00000000

08004290 <ComputeSineWave>:

static const uint32_t demo_times1[] = {150,    150, 150,    150, 300,    150,    150,    300,    300,    300,    300,           300,   150,    150, 300,    150,       150, 300,    300,    150,   150,    300,        150,   150,    300,    300,    300,    300,        300,    150,   300,    150,   150,    150,    300,    150,    300,    150,    75,     75,   75,   75,  150,    150,    600};
static const float demo_freqs1[] =    {58.27,  185, 233.08, 185, 277.18, 233.08, 277.18, 369.99, 349.23, 277.18, 233.08,        0,     233.08, 185, 277.18, 233.08, 277.18, 369.99, 349.23, 51.91, 277.18, 233.08,     77.78, 311.13, 277.18, 233.08, 207.65, 0,          369.99, 415.3, 369.99, 415.3, 369.99,   0,    369.99, 466.16, 369.99, 466.16, 369.99, 0,  369.99, 0,   369.99,   0,   46.25};

static void ComputeSineWave(uint32_t* buf, uint32_t len, float amplitude)
{
 8004290:	b580      	push	{r7, lr}
 8004292:	ed2d 8b02 	vpush	{d8}
 8004296:	b086      	sub	sp, #24
 8004298:	af00      	add	r7, sp, #0
 800429a:	60f8      	str	r0, [r7, #12]
 800429c:	60b9      	str	r1, [r7, #8]
 800429e:	ed87 0a01 	vstr	s0, [r7, #4]
	for (uint32_t i = 0; i < len; i++)
 80042a2:	2300      	movs	r3, #0
 80042a4:	617b      	str	r3, [r7, #20]
 80042a6:	e032      	b.n	800430e <ComputeSineWave+0x7e>
		*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE * (1.0f + amplitude * sin((float)i * 2.0f * 3.14159f / (float)len));
 80042a8:	edd7 7a01 	vldr	s15, [r7, #4]
 80042ac:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 80042b0:	697b      	ldr	r3, [r7, #20]
 80042b2:	ee07 3a90 	vmov	s15, r3
 80042b6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80042ba:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80042be:	ed9f 7a1c 	vldr	s14, [pc, #112]	@ 8004330 <ComputeSineWave+0xa0>
 80042c2:	ee67 6a87 	vmul.f32	s13, s15, s14
 80042c6:	68bb      	ldr	r3, [r7, #8]
 80042c8:	ee07 3a90 	vmov	s15, r3
 80042cc:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80042d0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80042d4:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80042d8:	eeb0 0b47 	vmov.f64	d0, d7
 80042dc:	f015 fce4 	bl	8019ca8 <sin>
 80042e0:	eeb0 7b40 	vmov.f64	d7, d0
 80042e4:	ee28 7b07 	vmul.f64	d7, d8, d7
 80042e8:	eeb7 6b00 	vmov.f64	d6, #112	@ 0x3f800000  1.0
 80042ec:	ee37 7b06 	vadd.f64	d7, d7, d6
 80042f0:	ed9f 6b0d 	vldr	d6, [pc, #52]	@ 8004328 <ComputeSineWave+0x98>
 80042f4:	ee27 7b06 	vmul.f64	d7, d7, d6
 80042f8:	68fb      	ldr	r3, [r7, #12]
 80042fa:	1d1a      	adds	r2, r3, #4
 80042fc:	60fa      	str	r2, [r7, #12]
 80042fe:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8004302:	ee17 2a90 	vmov	r2, s15
 8004306:	601a      	str	r2, [r3, #0]
	for (uint32_t i = 0; i < len; i++)
 8004308:	697b      	ldr	r3, [r7, #20]
 800430a:	3301      	adds	r3, #1
 800430c:	617b      	str	r3, [r7, #20]
 800430e:	697a      	ldr	r2, [r7, #20]
 8004310:	68bb      	ldr	r3, [r7, #8]
 8004312:	429a      	cmp	r2, r3
 8004314:	d3c8      	bcc.n	80042a8 <ComputeSineWave+0x18>
}
 8004316:	bf00      	nop
 8004318:	bf00      	nop
 800431a:	3718      	adds	r7, #24
 800431c:	46bd      	mov	sp, r7
 800431e:	ecbd 8b02 	vpop	{d8}
 8004322:	bd80      	pop	{r7, pc}
 8004324:	f3af 8000 	nop.w
 8004328:	00000000 	.word	0x00000000
 800432c:	409ffe00 	.word	0x409ffe00
 8004330:	40490fd0 	.word	0x40490fd0

08004334 <ComputeSquareWave>:

static void ComputeSquareWave(uint32_t* buf, uint32_t len, float amplitude)
{
 8004334:	b480      	push	{r7}
 8004336:	b087      	sub	sp, #28
 8004338:	af00      	add	r7, sp, #0
 800433a:	60f8      	str	r0, [r7, #12]
 800433c:	60b9      	str	r1, [r7, #8]
 800433e:	ed87 0a01 	vstr	s0, [r7, #4]
	for (uint32_t i = 0; i < len; i++)
 8004342:	2300      	movs	r3, #0
 8004344:	617b      	str	r3, [r7, #20]
 8004346:	e02c      	b.n	80043a2 <ComputeSquareWave+0x6e>
		if (i < len / 2)
 8004348:	68bb      	ldr	r3, [r7, #8]
 800434a:	085b      	lsrs	r3, r3, #1
 800434c:	697a      	ldr	r2, [r7, #20]
 800434e:	429a      	cmp	r2, r3
 8004350:	d212      	bcs.n	8004378 <ComputeSquareWave+0x44>
			*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE * (1 + amplitude);
 8004352:	edd7 7a01 	vldr	s15, [r7, #4]
 8004356:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800435a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800435e:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 80043b8 <ComputeSquareWave+0x84>
 8004362:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004366:	68fb      	ldr	r3, [r7, #12]
 8004368:	1d1a      	adds	r2, r3, #4
 800436a:	60fa      	str	r2, [r7, #12]
 800436c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004370:	ee17 2a90 	vmov	r2, s15
 8004374:	601a      	str	r2, [r3, #0]
 8004376:	e011      	b.n	800439c <ComputeSquareWave+0x68>
		else
			*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE * (1 - amplitude);
 8004378:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800437c:	edd7 7a01 	vldr	s15, [r7, #4]
 8004380:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004384:	ed9f 7a0c 	vldr	s14, [pc, #48]	@ 80043b8 <ComputeSquareWave+0x84>
 8004388:	ee67 7a87 	vmul.f32	s15, s15, s14
 800438c:	68fb      	ldr	r3, [r7, #12]
 800438e:	1d1a      	adds	r2, r3, #4
 8004390:	60fa      	str	r2, [r7, #12]
 8004392:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004396:	ee17 2a90 	vmov	r2, s15
 800439a:	601a      	str	r2, [r3, #0]
	for (uint32_t i = 0; i < len; i++)
 800439c:	697b      	ldr	r3, [r7, #20]
 800439e:	3301      	adds	r3, #1
 80043a0:	617b      	str	r3, [r7, #20]
 80043a2:	697a      	ldr	r2, [r7, #20]
 80043a4:	68bb      	ldr	r3, [r7, #8]
 80043a6:	429a      	cmp	r2, r3
 80043a8:	d3ce      	bcc.n	8004348 <ComputeSquareWave+0x14>
}
 80043aa:	bf00      	nop
 80043ac:	bf00      	nop
 80043ae:	371c      	adds	r7, #28
 80043b0:	46bd      	mov	sp, r7
 80043b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043b6:	4770      	bx	lr
 80043b8:	44fff000 	.word	0x44fff000

080043bc <ComputeSawWave>:

static void ComputeSawWave(uint32_t* buf, uint32_t len, float amplitude)
{
 80043bc:	b480      	push	{r7}
 80043be:	b087      	sub	sp, #28
 80043c0:	af00      	add	r7, sp, #0
 80043c2:	60f8      	str	r0, [r7, #12]
 80043c4:	60b9      	str	r1, [r7, #8]
 80043c6:	ed87 0a01 	vstr	s0, [r7, #4]
	for (uint32_t i = 0; i < len; i++)
 80043ca:	2300      	movs	r3, #0
 80043cc:	617b      	str	r3, [r7, #20]
 80043ce:	e052      	b.n	8004476 <ComputeSawWave+0xba>
		if (i < len / 2)
 80043d0:	68bb      	ldr	r3, [r7, #8]
 80043d2:	085b      	lsrs	r3, r3, #1
 80043d4:	697a      	ldr	r2, [r7, #20]
 80043d6:	429a      	cmp	r2, r3
 80043d8:	d222      	bcs.n	8004420 <ComputeSawWave+0x64>
			*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE * (1 + 2 * (float)i * amplitude / (float)len);
 80043da:	697b      	ldr	r3, [r7, #20]
 80043dc:	ee07 3a90 	vmov	s15, r3
 80043e0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80043e4:	ee37 7aa7 	vadd.f32	s14, s15, s15
 80043e8:	edd7 7a01 	vldr	s15, [r7, #4]
 80043ec:	ee67 6a27 	vmul.f32	s13, s14, s15
 80043f0:	68bb      	ldr	r3, [r7, #8]
 80043f2:	ee07 3a90 	vmov	s15, r3
 80043f6:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80043fa:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80043fe:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8004402:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004406:	ed9f 7a21 	vldr	s14, [pc, #132]	@ 800448c <ComputeSawWave+0xd0>
 800440a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800440e:	68fb      	ldr	r3, [r7, #12]
 8004410:	1d1a      	adds	r2, r3, #4
 8004412:	60fa      	str	r2, [r7, #12]
 8004414:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004418:	ee17 2a90 	vmov	r2, s15
 800441c:	601a      	str	r2, [r3, #0]
 800441e:	e027      	b.n	8004470 <ComputeSawWave+0xb4>
		else
			*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE * (1 - 2 * amplitude + 2 * (float)i * amplitude / (float)len);
 8004420:	edd7 7a01 	vldr	s15, [r7, #4]
 8004424:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8004428:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800442c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8004430:	697b      	ldr	r3, [r7, #20]
 8004432:	ee07 3a90 	vmov	s15, r3
 8004436:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800443a:	ee77 6aa7 	vadd.f32	s13, s15, s15
 800443e:	edd7 7a01 	vldr	s15, [r7, #4]
 8004442:	ee26 6aa7 	vmul.f32	s12, s13, s15
 8004446:	68bb      	ldr	r3, [r7, #8]
 8004448:	ee07 3a90 	vmov	s15, r3
 800444c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004450:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8004454:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004458:	ed9f 7a0c 	vldr	s14, [pc, #48]	@ 800448c <ComputeSawWave+0xd0>
 800445c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004460:	68fb      	ldr	r3, [r7, #12]
 8004462:	1d1a      	adds	r2, r3, #4
 8004464:	60fa      	str	r2, [r7, #12]
 8004466:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800446a:	ee17 2a90 	vmov	r2, s15
 800446e:	601a      	str	r2, [r3, #0]
	for (uint32_t i = 0; i < len; i++)
 8004470:	697b      	ldr	r3, [r7, #20]
 8004472:	3301      	adds	r3, #1
 8004474:	617b      	str	r3, [r7, #20]
 8004476:	697a      	ldr	r2, [r7, #20]
 8004478:	68bb      	ldr	r3, [r7, #8]
 800447a:	429a      	cmp	r2, r3
 800447c:	d3a8      	bcc.n	80043d0 <ComputeSawWave+0x14>
}
 800447e:	bf00      	nop
 8004480:	bf00      	nop
 8004482:	371c      	adds	r7, #28
 8004484:	46bd      	mov	sp, r7
 8004486:	f85d 7b04 	ldr.w	r7, [sp], #4
 800448a:	4770      	bx	lr
 800448c:	44fff000 	.word	0x44fff000

08004490 <ComputeTriangleWave>:

static void ComputeTriangleWave(uint32_t* buf, uint32_t len, float amplitude)
{
 8004490:	b480      	push	{r7}
 8004492:	b087      	sub	sp, #28
 8004494:	af00      	add	r7, sp, #0
 8004496:	60f8      	str	r0, [r7, #12]
 8004498:	60b9      	str	r1, [r7, #8]
 800449a:	ed87 0a01 	vstr	s0, [r7, #4]
	for (uint32_t i = 0; i < len; i++)
 800449e:	2300      	movs	r3, #0
 80044a0:	617b      	str	r3, [r7, #20]
 80044a2:	e082      	b.n	80045aa <ComputeTriangleWave+0x11a>
		if (i < len / 4)
 80044a4:	68bb      	ldr	r3, [r7, #8]
 80044a6:	089b      	lsrs	r3, r3, #2
 80044a8:	697a      	ldr	r2, [r7, #20]
 80044aa:	429a      	cmp	r2, r3
 80044ac:	d221      	bcs.n	80044f2 <ComputeTriangleWave+0x62>
			*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE * (1 + 4 * i * amplitude / (float)len);
 80044ae:	697b      	ldr	r3, [r7, #20]
 80044b0:	009b      	lsls	r3, r3, #2
 80044b2:	ee07 3a90 	vmov	s15, r3
 80044b6:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80044ba:	edd7 7a01 	vldr	s15, [r7, #4]
 80044be:	ee67 6a27 	vmul.f32	s13, s14, s15
 80044c2:	68bb      	ldr	r3, [r7, #8]
 80044c4:	ee07 3a90 	vmov	s15, r3
 80044c8:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80044cc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80044d0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80044d4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80044d8:	ed9f 7a3a 	vldr	s14, [pc, #232]	@ 80045c4 <ComputeTriangleWave+0x134>
 80044dc:	ee67 7a87 	vmul.f32	s15, s15, s14
 80044e0:	68fb      	ldr	r3, [r7, #12]
 80044e2:	1d1a      	adds	r2, r3, #4
 80044e4:	60fa      	str	r2, [r7, #12]
 80044e6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80044ea:	ee17 2a90 	vmov	r2, s15
 80044ee:	601a      	str	r2, [r3, #0]
 80044f0:	e058      	b.n	80045a4 <ComputeTriangleWave+0x114>
		else if (i < 3 * len / 4)
 80044f2:	68ba      	ldr	r2, [r7, #8]
 80044f4:	4613      	mov	r3, r2
 80044f6:	005b      	lsls	r3, r3, #1
 80044f8:	4413      	add	r3, r2
 80044fa:	089b      	lsrs	r3, r3, #2
 80044fc:	697a      	ldr	r2, [r7, #20]
 80044fe:	429a      	cmp	r2, r3
 8004500:	d227      	bcs.n	8004552 <ComputeTriangleWave+0xc2>
			*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE * (1 + 2 * amplitude - 4 * i * amplitude / (float)len);
 8004502:	edd7 7a01 	vldr	s15, [r7, #4]
 8004506:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800450a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800450e:	ee37 7a87 	vadd.f32	s14, s15, s14
 8004512:	697b      	ldr	r3, [r7, #20]
 8004514:	009b      	lsls	r3, r3, #2
 8004516:	ee07 3a90 	vmov	s15, r3
 800451a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800451e:	edd7 7a01 	vldr	s15, [r7, #4]
 8004522:	ee26 6aa7 	vmul.f32	s12, s13, s15
 8004526:	68bb      	ldr	r3, [r7, #8]
 8004528:	ee07 3a90 	vmov	s15, r3
 800452c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004530:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8004534:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004538:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 80045c4 <ComputeTriangleWave+0x134>
 800453c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004540:	68fb      	ldr	r3, [r7, #12]
 8004542:	1d1a      	adds	r2, r3, #4
 8004544:	60fa      	str	r2, [r7, #12]
 8004546:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800454a:	ee17 2a90 	vmov	r2, s15
 800454e:	601a      	str	r2, [r3, #0]
 8004550:	e028      	b.n	80045a4 <ComputeTriangleWave+0x114>
		else
			*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE * (1 - 4 * amplitude + 4 * i * amplitude / (float)len);
 8004552:	edd7 7a01 	vldr	s15, [r7, #4]
 8004556:	eeb1 7a00 	vmov.f32	s14, #16	@ 0x40800000  4.0
 800455a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800455e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8004562:	ee37 7a67 	vsub.f32	s14, s14, s15
 8004566:	697b      	ldr	r3, [r7, #20]
 8004568:	009b      	lsls	r3, r3, #2
 800456a:	ee07 3a90 	vmov	s15, r3
 800456e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004572:	edd7 7a01 	vldr	s15, [r7, #4]
 8004576:	ee26 6aa7 	vmul.f32	s12, s13, s15
 800457a:	68bb      	ldr	r3, [r7, #8]
 800457c:	ee07 3a90 	vmov	s15, r3
 8004580:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004584:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8004588:	ee77 7a27 	vadd.f32	s15, s14, s15
 800458c:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 80045c4 <ComputeTriangleWave+0x134>
 8004590:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004594:	68fb      	ldr	r3, [r7, #12]
 8004596:	1d1a      	adds	r2, r3, #4
 8004598:	60fa      	str	r2, [r7, #12]
 800459a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800459e:	ee17 2a90 	vmov	r2, s15
 80045a2:	601a      	str	r2, [r3, #0]
	for (uint32_t i = 0; i < len; i++)
 80045a4:	697b      	ldr	r3, [r7, #20]
 80045a6:	3301      	adds	r3, #1
 80045a8:	617b      	str	r3, [r7, #20]
 80045aa:	697a      	ldr	r2, [r7, #20]
 80045ac:	68bb      	ldr	r3, [r7, #8]
 80045ae:	429a      	cmp	r2, r3
 80045b0:	f4ff af78 	bcc.w	80044a4 <ComputeTriangleWave+0x14>
}
 80045b4:	bf00      	nop
 80045b6:	bf00      	nop
 80045b8:	371c      	adds	r7, #28
 80045ba:	46bd      	mov	sp, r7
 80045bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045c0:	4770      	bx	lr
 80045c2:	bf00      	nop
 80045c4:	44fff000 	.word	0x44fff000

080045c8 <ComputeNullWave>:

static void ComputeNullWave(uint32_t* buf, uint32_t len)
{
 80045c8:	b480      	push	{r7}
 80045ca:	b085      	sub	sp, #20
 80045cc:	af00      	add	r7, sp, #0
 80045ce:	6078      	str	r0, [r7, #4]
 80045d0:	6039      	str	r1, [r7, #0]
	for (uint32_t i = 0; i < len; i++)
 80045d2:	2300      	movs	r3, #0
 80045d4:	60fb      	str	r3, [r7, #12]
 80045d6:	e008      	b.n	80045ea <ComputeNullWave+0x22>
		*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE;
 80045d8:	687b      	ldr	r3, [r7, #4]
 80045da:	1d1a      	adds	r2, r3, #4
 80045dc:	607a      	str	r2, [r7, #4]
 80045de:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 80045e2:	601a      	str	r2, [r3, #0]
	for (uint32_t i = 0; i < len; i++)
 80045e4:	68fb      	ldr	r3, [r7, #12]
 80045e6:	3301      	adds	r3, #1
 80045e8:	60fb      	str	r3, [r7, #12]
 80045ea:	68fa      	ldr	r2, [r7, #12]
 80045ec:	683b      	ldr	r3, [r7, #0]
 80045ee:	429a      	cmp	r2, r3
 80045f0:	d3f2      	bcc.n	80045d8 <ComputeNullWave+0x10>
}
 80045f2:	bf00      	nop
 80045f4:	bf00      	nop
 80045f6:	3714      	adds	r7, #20
 80045f8:	46bd      	mov	sp, r7
 80045fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045fe:	4770      	bx	lr

08004600 <VibeCheckWaveGen_RecomputeWave>:




static void VibeCheckWaveGen_RecomputeWave(VibeCheckWaveGen* wavegen, uint32_t* buf)
{
 8004600:	b580      	push	{r7, lr}
 8004602:	b082      	sub	sp, #8
 8004604:	af00      	add	r7, sp, #0
 8004606:	6078      	str	r0, [r7, #4]
 8004608:	6039      	str	r1, [r7, #0]
	if (wavegen->is_running)
 800460a:	687b      	ldr	r3, [r7, #4]
 800460c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004610:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004612:	2b00      	cmp	r3, #0
 8004614:	d044      	beq.n	80046a0 <VibeCheckWaveGen_RecomputeWave+0xa0>
	{
		switch (wavegen->waveform)
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800461c:	7e1b      	ldrb	r3, [r3, #24]
 800461e:	2b03      	cmp	r3, #3
 8004620:	d844      	bhi.n	80046ac <VibeCheckWaveGen_RecomputeWave+0xac>
 8004622:	a201      	add	r2, pc, #4	@ (adr r2, 8004628 <VibeCheckWaveGen_RecomputeWave+0x28>)
 8004624:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004628:	08004639 	.word	0x08004639
 800462c:	08004653 	.word	0x08004653
 8004630:	0800466d 	.word	0x0800466d
 8004634:	08004687 	.word	0x08004687
		{
		case VC_WAVE_SINE:
			ComputeSineWave(buf, VC_WAVE_BUF_LEN, wavegen->amplitude);
 8004638:	687b      	ldr	r3, [r7, #4]
 800463a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800463e:	edd3 7a08 	vldr	s15, [r3, #32]
 8004642:	eeb0 0a67 	vmov.f32	s0, s15
 8004646:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800464a:	6838      	ldr	r0, [r7, #0]
 800464c:	f7ff fe20 	bl	8004290 <ComputeSineWave>
			break;
 8004650:	e02c      	b.n	80046ac <VibeCheckWaveGen_RecomputeWave+0xac>
		case VC_WAVE_SQUARE:
			ComputeSquareWave(buf, VC_WAVE_BUF_LEN, wavegen->amplitude);
 8004652:	687b      	ldr	r3, [r7, #4]
 8004654:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004658:	edd3 7a08 	vldr	s15, [r3, #32]
 800465c:	eeb0 0a67 	vmov.f32	s0, s15
 8004660:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8004664:	6838      	ldr	r0, [r7, #0]
 8004666:	f7ff fe65 	bl	8004334 <ComputeSquareWave>
			break;
 800466a:	e01f      	b.n	80046ac <VibeCheckWaveGen_RecomputeWave+0xac>
		case VC_WAVE_SAW:
			ComputeSawWave(buf, VC_WAVE_BUF_LEN, wavegen->amplitude);
 800466c:	687b      	ldr	r3, [r7, #4]
 800466e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004672:	edd3 7a08 	vldr	s15, [r3, #32]
 8004676:	eeb0 0a67 	vmov.f32	s0, s15
 800467a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800467e:	6838      	ldr	r0, [r7, #0]
 8004680:	f7ff fe9c 	bl	80043bc <ComputeSawWave>
			break;
 8004684:	e012      	b.n	80046ac <VibeCheckWaveGen_RecomputeWave+0xac>
		case VC_WAVE_TRIANGLE:
			ComputeTriangleWave(buf, VC_WAVE_BUF_LEN, wavegen->amplitude);
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800468c:	edd3 7a08 	vldr	s15, [r3, #32]
 8004690:	eeb0 0a67 	vmov.f32	s0, s15
 8004694:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8004698:	6838      	ldr	r0, [r7, #0]
 800469a:	f7ff fef9 	bl	8004490 <ComputeTriangleWave>
			break;
 800469e:	e005      	b.n	80046ac <VibeCheckWaveGen_RecomputeWave+0xac>
		}
	}
	else
	{
		ComputeNullWave(buf, VC_WAVE_BUF_LEN);
 80046a0:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80046a4:	6838      	ldr	r0, [r7, #0]
 80046a6:	f7ff ff8f 	bl	80045c8 <ComputeNullWave>
	}
}
 80046aa:	e7ff      	b.n	80046ac <VibeCheckWaveGen_RecomputeWave+0xac>
 80046ac:	bf00      	nop
 80046ae:	3708      	adds	r7, #8
 80046b0:	46bd      	mov	sp, r7
 80046b2:	bd80      	pop	{r7, pc}

080046b4 <VibeCheckWaveGen_Init>:


void VibeCheckWaveGen_Init(VibeCheckWaveGen* wavegen, DAC_HandleTypeDef *hdac, TIM_HandleTypeDef* htim)
{
 80046b4:	b580      	push	{r7, lr}
 80046b6:	b086      	sub	sp, #24
 80046b8:	af02      	add	r7, sp, #8
 80046ba:	60f8      	str	r0, [r7, #12]
 80046bc:	60b9      	str	r1, [r7, #8]
 80046be:	607a      	str	r2, [r7, #4]
	wavegen->hdac = hdac;
 80046c0:	68fb      	ldr	r3, [r7, #12]
 80046c2:	68ba      	ldr	r2, [r7, #8]
 80046c4:	605a      	str	r2, [r3, #4]
	wavegen->htim = htim;
 80046c6:	68fb      	ldr	r3, [r7, #12]
 80046c8:	687a      	ldr	r2, [r7, #4]
 80046ca:	601a      	str	r2, [r3, #0]
	wavegen->freq_hz = 440.0f;
 80046cc:	68fb      	ldr	r3, [r7, #12]
 80046ce:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80046d2:	461a      	mov	r2, r3
 80046d4:	4b44      	ldr	r3, [pc, #272]	@ (80047e8 <VibeCheckWaveGen_Init+0x134>)
 80046d6:	61d3      	str	r3, [r2, #28]
	wavegen->amplitude = 0.001f;
 80046d8:	68fb      	ldr	r3, [r7, #12]
 80046da:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80046de:	461a      	mov	r2, r3
 80046e0:	4b42      	ldr	r3, [pc, #264]	@ (80047ec <VibeCheckWaveGen_Init+0x138>)
 80046e2:	6213      	str	r3, [r2, #32]
	wavegen->waveform = VC_WAVE_SINE;
 80046e4:	68fb      	ldr	r3, [r7, #12]
 80046e6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80046ea:	2200      	movs	r2, #0
 80046ec:	761a      	strb	r2, [r3, #24]

	wavegen->is_running = 0;
 80046ee:	68fb      	ldr	r3, [r7, #12]
 80046f0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80046f4:	461a      	mov	r2, r3
 80046f6:	2300      	movs	r3, #0
 80046f8:	6253      	str	r3, [r2, #36]	@ 0x24
	wavegen->is_muted = 0;
 80046fa:	68fb      	ldr	r3, [r7, #12]
 80046fc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004700:	461a      	mov	r2, r3
 8004702:	2300      	movs	r3, #0
 8004704:	6293      	str	r3, [r2, #40]	@ 0x28
	wavegen->mute_button_flag = 0;
 8004706:	68fb      	ldr	r3, [r7, #12]
 8004708:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800470c:	461a      	mov	r2, r3
 800470e:	2300      	movs	r3, #0
 8004710:	62d3      	str	r3, [r2, #44]	@ 0x2c
	wavegen->time_prev_button_press = 0;
 8004712:	68fb      	ldr	r3, [r7, #12]
 8004714:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004718:	461a      	mov	r2, r3
 800471a:	2300      	movs	r3, #0
 800471c:	6313      	str	r3, [r2, #48]	@ 0x30

	wavegen->wave_ping_compute_pending = 0;
 800471e:	68fb      	ldr	r3, [r7, #12]
 8004720:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004724:	461a      	mov	r2, r3
 8004726:	2300      	movs	r3, #0
 8004728:	6093      	str	r3, [r2, #8]
	wavegen->wave_pong_compute_pending = 0;
 800472a:	68fb      	ldr	r3, [r7, #12]
 800472c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004730:	461a      	mov	r2, r3
 8004732:	2300      	movs	r3, #0
 8004734:	60d3      	str	r3, [r2, #12]
	wavegen->wave_ping_compute_ready = 0;
 8004736:	68fb      	ldr	r3, [r7, #12]
 8004738:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800473c:	461a      	mov	r2, r3
 800473e:	2300      	movs	r3, #0
 8004740:	6113      	str	r3, [r2, #16]
	wavegen->wave_pong_compute_ready = 0;
 8004742:	68fb      	ldr	r3, [r7, #12]
 8004744:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004748:	461a      	mov	r2, r3
 800474a:	2300      	movs	r3, #0
 800474c:	6153      	str	r3, [r2, #20]

	wavegen->demo_num = 0;
 800474e:	68fb      	ldr	r3, [r7, #12]
 8004750:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004754:	461a      	mov	r2, r3
 8004756:	2300      	movs	r3, #0
 8004758:	6353      	str	r3, [r2, #52]	@ 0x34

	/* set up timer registers */
	wavegen->htim->Instance->PSC = VC_WAVE_TIM_PSC - 1;
 800475a:	68fb      	ldr	r3, [r7, #12]
 800475c:	681b      	ldr	r3, [r3, #0]
 800475e:	681b      	ldr	r3, [r3, #0]
 8004760:	220b      	movs	r2, #11
 8004762:	629a      	str	r2, [r3, #40]	@ 0x28
	VibeCheckWaveGen_SetFrequency(wavegen, wavegen->freq_hz);
 8004764:	68fb      	ldr	r3, [r7, #12]
 8004766:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800476a:	edd3 7a07 	vldr	s15, [r3, #28]
 800476e:	eeb0 0a67 	vmov.f32	s0, s15
 8004772:	68f8      	ldr	r0, [r7, #12]
 8004774:	f000 f920 	bl	80049b8 <VibeCheckWaveGen_SetFrequency>

	/* compute the initial wave (set the DAC to the midpoint to avoid noise) */
	VibeCheckWaveGen_RecomputeWave(wavegen, &wavegen->wave[0]);
 8004778:	68fb      	ldr	r3, [r7, #12]
 800477a:	3308      	adds	r3, #8
 800477c:	4619      	mov	r1, r3
 800477e:	68f8      	ldr	r0, [r7, #12]
 8004780:	f7ff ff3e 	bl	8004600 <VibeCheckWaveGen_RecomputeWave>
	VibeCheckWaveGen_RecomputeWave(wavegen, &wavegen->wave[VC_WAVE_BUF_LEN]);
 8004784:	68fb      	ldr	r3, [r7, #12]
 8004786:	f603 0308 	addw	r3, r3, #2056	@ 0x808
 800478a:	4619      	mov	r1, r3
 800478c:	68f8      	ldr	r0, [r7, #12]
 800478e:	f7ff ff37 	bl	8004600 <VibeCheckWaveGen_RecomputeWave>

	/* start the DAC */
	HAL_DAC_Start_DMA(wavegen->hdac, DAC_CHANNEL_1, wavegen->wave, VC_WAVE_BUF_LEN, DAC_ALIGN_12B_R);
 8004792:	68fb      	ldr	r3, [r7, #12]
 8004794:	6858      	ldr	r0, [r3, #4]
 8004796:	68fb      	ldr	r3, [r7, #12]
 8004798:	f103 0208 	add.w	r2, r3, #8
 800479c:	2300      	movs	r3, #0
 800479e:	9300      	str	r3, [sp, #0]
 80047a0:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80047a4:	2100      	movs	r1, #0
 80047a6:	f002 faed 	bl	8006d84 <HAL_DAC_Start_DMA>
	HAL_DAC_Start_DMA(wavegen->hdac, DAC_CHANNEL_2, wavegen->wave, VC_WAVE_BUF_LEN, DAC_ALIGN_12B_R);
 80047aa:	68fb      	ldr	r3, [r7, #12]
 80047ac:	6858      	ldr	r0, [r3, #4]
 80047ae:	68fb      	ldr	r3, [r7, #12]
 80047b0:	f103 0208 	add.w	r2, r3, #8
 80047b4:	2300      	movs	r3, #0
 80047b6:	9300      	str	r3, [sp, #0]
 80047b8:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80047bc:	2110      	movs	r1, #16
 80047be:	f002 fae1 	bl	8006d84 <HAL_DAC_Start_DMA>
	HAL_TIM_Base_Start(wavegen->htim);
 80047c2:	68fb      	ldr	r3, [r7, #12]
 80047c4:	681b      	ldr	r3, [r3, #0]
 80047c6:	4618      	mov	r0, r3
 80047c8:	f00a f91e 	bl	800ea08 <HAL_TIM_Base_Start>

	/* un-mute the output and turn off the mute LED*/
	HAL_GPIO_WritePin(MUTE_SIGNAL_GPIO_Port, MUTE_SIGNAL_Pin, GPIO_PIN_RESET);
 80047cc:	2200      	movs	r2, #0
 80047ce:	2108      	movs	r1, #8
 80047d0:	4807      	ldr	r0, [pc, #28]	@ (80047f0 <VibeCheckWaveGen_Init+0x13c>)
 80047d2:	f005 f801 	bl	80097d8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(MUTE_INDICATOR_GPIO_Port, MUTE_INDICATOR_Pin, GPIO_PIN_RESET);
 80047d6:	2200      	movs	r2, #0
 80047d8:	2102      	movs	r1, #2
 80047da:	4805      	ldr	r0, [pc, #20]	@ (80047f0 <VibeCheckWaveGen_Init+0x13c>)
 80047dc:	f004 fffc 	bl	80097d8 <HAL_GPIO_WritePin>
}
 80047e0:	bf00      	nop
 80047e2:	3710      	adds	r7, #16
 80047e4:	46bd      	mov	sp, r7
 80047e6:	bd80      	pop	{r7, pc}
 80047e8:	43dc0000 	.word	0x43dc0000
 80047ec:	3a83126f 	.word	0x3a83126f
 80047f0:	58020000 	.word	0x58020000

080047f4 <VibeCheckWaveGen_Update>:

void VibeCheckWaveGen_Update(VibeCheckWaveGen* wavegen)
{
 80047f4:	b580      	push	{r7, lr}
 80047f6:	b084      	sub	sp, #16
 80047f8:	af00      	add	r7, sp, #0
 80047fa:	6078      	str	r0, [r7, #4]
	/* call in the main loop */

	/* check the mute button */
	uint32_t time = HAL_GetTick();
 80047fc:	f000 fd74 	bl	80052e8 <HAL_GetTick>
 8004800:	60f8      	str	r0, [r7, #12]
	if (time - wavegen->time_prev_button_press > VC_WAVE_BUTTON_DEBOUNCE_MS && HAL_GPIO_ReadPin(MUTE_BUTTON_GPIO_Port, MUTE_BUTTON_Pin))
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004808:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800480a:	68fa      	ldr	r2, [r7, #12]
 800480c:	1ad3      	subs	r3, r2, r3
 800480e:	2bfa      	cmp	r3, #250	@ 0xfa
 8004810:	d939      	bls.n	8004886 <VibeCheckWaveGen_Update+0x92>
 8004812:	2104      	movs	r1, #4
 8004814:	4843      	ldr	r0, [pc, #268]	@ (8004924 <VibeCheckWaveGen_Update+0x130>)
 8004816:	f004 ffc7 	bl	80097a8 <HAL_GPIO_ReadPin>
 800481a:	4603      	mov	r3, r0
 800481c:	2b00      	cmp	r3, #0
 800481e:	d032      	beq.n	8004886 <VibeCheckWaveGen_Update+0x92>

		/*
		 * the line driver seems to have some kind of slow start built in so no
		 * need to worry about pops when muting via the hardware pin
		 */
		if (wavegen->is_muted)
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004826:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004828:	2b00      	cmp	r3, #0
 800482a:	d010      	beq.n	800484e <VibeCheckWaveGen_Update+0x5a>
		{
			wavegen->is_muted = 0;
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004832:	461a      	mov	r2, r3
 8004834:	2300      	movs	r3, #0
 8004836:	6293      	str	r3, [r2, #40]	@ 0x28
			HAL_GPIO_WritePin(MUTE_SIGNAL_GPIO_Port, MUTE_SIGNAL_Pin, GPIO_PIN_RESET);  /* un-mute the output */
 8004838:	2200      	movs	r2, #0
 800483a:	2108      	movs	r1, #8
 800483c:	4839      	ldr	r0, [pc, #228]	@ (8004924 <VibeCheckWaveGen_Update+0x130>)
 800483e:	f004 ffcb 	bl	80097d8 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(MUTE_INDICATOR_GPIO_Port, MUTE_INDICATOR_Pin, GPIO_PIN_RESET);  /* turn off the LED */
 8004842:	2200      	movs	r2, #0
 8004844:	2102      	movs	r1, #2
 8004846:	4837      	ldr	r0, [pc, #220]	@ (8004924 <VibeCheckWaveGen_Update+0x130>)
 8004848:	f004 ffc6 	bl	80097d8 <HAL_GPIO_WritePin>
 800484c:	e00f      	b.n	800486e <VibeCheckWaveGen_Update+0x7a>
		}
		else
		{
			wavegen->is_muted = 1;
 800484e:	687b      	ldr	r3, [r7, #4]
 8004850:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004854:	461a      	mov	r2, r3
 8004856:	2301      	movs	r3, #1
 8004858:	6293      	str	r3, [r2, #40]	@ 0x28
			HAL_GPIO_WritePin(MUTE_SIGNAL_GPIO_Port, MUTE_SIGNAL_Pin, GPIO_PIN_SET);  /* mute the output */
 800485a:	2201      	movs	r2, #1
 800485c:	2108      	movs	r1, #8
 800485e:	4831      	ldr	r0, [pc, #196]	@ (8004924 <VibeCheckWaveGen_Update+0x130>)
 8004860:	f004 ffba 	bl	80097d8 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(MUTE_INDICATOR_GPIO_Port, MUTE_INDICATOR_Pin, GPIO_PIN_SET);  /* turn on the LED */
 8004864:	2201      	movs	r2, #1
 8004866:	2102      	movs	r1, #2
 8004868:	482e      	ldr	r0, [pc, #184]	@ (8004924 <VibeCheckWaveGen_Update+0x130>)
 800486a:	f004 ffb5 	bl	80097d8 <HAL_GPIO_WritePin>
		}

		wavegen->mute_button_flag = 1;  /* can alert the shell via this flag when we press the mute button */
 800486e:	687b      	ldr	r3, [r7, #4]
 8004870:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004874:	461a      	mov	r2, r3
 8004876:	2301      	movs	r3, #1
 8004878:	62d3      	str	r3, [r2, #44]	@ 0x2c
		wavegen->time_prev_button_press = time;
 800487a:	687b      	ldr	r3, [r7, #4]
 800487c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004880:	461a      	mov	r2, r3
 8004882:	68fb      	ldr	r3, [r7, #12]
 8004884:	6313      	str	r3, [r2, #48]	@ 0x30
	}

	/*
	 * to make a smooth transition between waves when a parameter is changed, change the two halves of the double buffer separately
	 */
	if (wavegen->wave_ping_compute_ready)
 8004886:	687b      	ldr	r3, [r7, #4]
 8004888:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800488c:	691b      	ldr	r3, [r3, #16]
 800488e:	2b00      	cmp	r3, #0
 8004890:	d00b      	beq.n	80048aa <VibeCheckWaveGen_Update+0xb6>
	{
		VibeCheckWaveGen_RecomputeWave(wavegen, &wavegen->wave[0]);
 8004892:	687b      	ldr	r3, [r7, #4]
 8004894:	3308      	adds	r3, #8
 8004896:	4619      	mov	r1, r3
 8004898:	6878      	ldr	r0, [r7, #4]
 800489a:	f7ff feb1 	bl	8004600 <VibeCheckWaveGen_RecomputeWave>
		wavegen->wave_ping_compute_ready = 0;
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80048a4:	461a      	mov	r2, r3
 80048a6:	2300      	movs	r3, #0
 80048a8:	6113      	str	r3, [r2, #16]
	}
	if (wavegen->wave_pong_compute_ready)
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80048b0:	695b      	ldr	r3, [r3, #20]
 80048b2:	2b00      	cmp	r3, #0
 80048b4:	d00c      	beq.n	80048d0 <VibeCheckWaveGen_Update+0xdc>
	{
		VibeCheckWaveGen_RecomputeWave(wavegen, &wavegen->wave[VC_WAVE_BUF_LEN]);
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	f603 0308 	addw	r3, r3, #2056	@ 0x808
 80048bc:	4619      	mov	r1, r3
 80048be:	6878      	ldr	r0, [r7, #4]
 80048c0:	f7ff fe9e 	bl	8004600 <VibeCheckWaveGen_RecomputeWave>
		wavegen->wave_pong_compute_ready = 0;
 80048c4:	687b      	ldr	r3, [r7, #4]
 80048c6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80048ca:	461a      	mov	r2, r3
 80048cc:	2300      	movs	r3, #0
 80048ce:	6153      	str	r3, [r2, #20]

	/*
	 * update the sequencer
	 */
	uint32_t seq_index;
	if (Sequencer_Update(&wavegen->sequencer, time, &seq_index))
 80048d0:	687a      	ldr	r2, [r7, #4]
 80048d2:	f241 0338 	movw	r3, #4152	@ 0x1038
 80048d6:	4413      	add	r3, r2
 80048d8:	f107 0208 	add.w	r2, r7, #8
 80048dc:	68f9      	ldr	r1, [r7, #12]
 80048de:	4618      	mov	r0, r3
 80048e0:	f7fd f83e 	bl	8001960 <Sequencer_Update>
 80048e4:	4603      	mov	r3, r0
 80048e6:	2b00      	cmp	r3, #0
 80048e8:	d017      	beq.n	800491a <VibeCheckWaveGen_Update+0x126>
	{
		VibeCheckWaveGen_SetFrequency(wavegen, wavegen->demo_num ? demo_freqs1[seq_index] : demo_freqs0[seq_index]);
 80048ea:	687b      	ldr	r3, [r7, #4]
 80048ec:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80048f0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80048f2:	2b00      	cmp	r3, #0
 80048f4:	d006      	beq.n	8004904 <VibeCheckWaveGen_Update+0x110>
 80048f6:	68bb      	ldr	r3, [r7, #8]
 80048f8:	4a0b      	ldr	r2, [pc, #44]	@ (8004928 <VibeCheckWaveGen_Update+0x134>)
 80048fa:	009b      	lsls	r3, r3, #2
 80048fc:	4413      	add	r3, r2
 80048fe:	edd3 7a00 	vldr	s15, [r3]
 8004902:	e005      	b.n	8004910 <VibeCheckWaveGen_Update+0x11c>
 8004904:	68bb      	ldr	r3, [r7, #8]
 8004906:	4a09      	ldr	r2, [pc, #36]	@ (800492c <VibeCheckWaveGen_Update+0x138>)
 8004908:	009b      	lsls	r3, r3, #2
 800490a:	4413      	add	r3, r2
 800490c:	edd3 7a00 	vldr	s15, [r3]
 8004910:	eeb0 0a67 	vmov.f32	s0, s15
 8004914:	6878      	ldr	r0, [r7, #4]
 8004916:	f000 f84f 	bl	80049b8 <VibeCheckWaveGen_SetFrequency>
	}

}
 800491a:	bf00      	nop
 800491c:	3710      	adds	r7, #16
 800491e:	46bd      	mov	sp, r7
 8004920:	bd80      	pop	{r7, pc}
 8004922:	bf00      	nop
 8004924:	58020000 	.word	0x58020000
 8004928:	0801afa0 	.word	0x0801afa0
 800492c:	0801ae84 	.word	0x0801ae84

08004930 <VibeCheckWaveGen_Start>:

void VibeCheckWaveGen_Start(VibeCheckWaveGen* wavegen)
{
 8004930:	b480      	push	{r7}
 8004932:	b083      	sub	sp, #12
 8004934:	af00      	add	r7, sp, #0
 8004936:	6078      	str	r0, [r7, #4]
	if (!wavegen->is_running)
 8004938:	687b      	ldr	r3, [r7, #4]
 800493a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800493e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004940:	2b00      	cmp	r3, #0
 8004942:	d111      	bne.n	8004968 <VibeCheckWaveGen_Start+0x38>
	{
		wavegen->is_running = 1;
 8004944:	687b      	ldr	r3, [r7, #4]
 8004946:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800494a:	461a      	mov	r2, r3
 800494c:	2301      	movs	r3, #1
 800494e:	6253      	str	r3, [r2, #36]	@ 0x24
		wavegen->wave_ping_compute_pending = 1;
 8004950:	687b      	ldr	r3, [r7, #4]
 8004952:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004956:	461a      	mov	r2, r3
 8004958:	2301      	movs	r3, #1
 800495a:	6093      	str	r3, [r2, #8]
		wavegen->wave_pong_compute_pending = 1;
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004962:	461a      	mov	r2, r3
 8004964:	2301      	movs	r3, #1
 8004966:	60d3      	str	r3, [r2, #12]
	}

}
 8004968:	bf00      	nop
 800496a:	370c      	adds	r7, #12
 800496c:	46bd      	mov	sp, r7
 800496e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004972:	4770      	bx	lr

08004974 <VibeCheckWaveGen_Stop>:

void VibeCheckWaveGen_Stop(VibeCheckWaveGen* wavegen)
{
 8004974:	b480      	push	{r7}
 8004976:	b083      	sub	sp, #12
 8004978:	af00      	add	r7, sp, #0
 800497a:	6078      	str	r0, [r7, #4]
	if (wavegen->is_running)
 800497c:	687b      	ldr	r3, [r7, #4]
 800497e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004982:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004984:	2b00      	cmp	r3, #0
 8004986:	d011      	beq.n	80049ac <VibeCheckWaveGen_Stop+0x38>
	{
		wavegen->is_running = 0;
 8004988:	687b      	ldr	r3, [r7, #4]
 800498a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800498e:	461a      	mov	r2, r3
 8004990:	2300      	movs	r3, #0
 8004992:	6253      	str	r3, [r2, #36]	@ 0x24
		wavegen->wave_ping_compute_pending = 1;
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800499a:	461a      	mov	r2, r3
 800499c:	2301      	movs	r3, #1
 800499e:	6093      	str	r3, [r2, #8]
		wavegen->wave_pong_compute_pending = 1;
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80049a6:	461a      	mov	r2, r3
 80049a8:	2301      	movs	r3, #1
 80049aa:	60d3      	str	r3, [r2, #12]
	}
}
 80049ac:	bf00      	nop
 80049ae:	370c      	adds	r7, #12
 80049b0:	46bd      	mov	sp, r7
 80049b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049b6:	4770      	bx	lr

080049b8 <VibeCheckWaveGen_SetFrequency>:

void VibeCheckWaveGen_SetFrequency(VibeCheckWaveGen* wavegen, float freq_hz)
{
 80049b8:	b480      	push	{r7}
 80049ba:	b085      	sub	sp, #20
 80049bc:	af00      	add	r7, sp, #0
 80049be:	6078      	str	r0, [r7, #4]
 80049c0:	ed87 0a00 	vstr	s0, [r7]
	if (freq_hz < VC_WAVE_MIN_FREQ_HZ)
 80049c4:	edd7 7a00 	vldr	s15, [r7]
 80049c8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80049cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80049d0:	d502      	bpl.n	80049d8 <VibeCheckWaveGen_SetFrequency+0x20>
		freq_hz = VC_WAVE_MIN_FREQ_HZ;
 80049d2:	f04f 0300 	mov.w	r3, #0
 80049d6:	603b      	str	r3, [r7, #0]
	if (freq_hz > VC_WAVE_MAX_FREQ_HZ)
 80049d8:	edd7 7a00 	vldr	s15, [r7]
 80049dc:	ed9f 7a1e 	vldr	s14, [pc, #120]	@ 8004a58 <VibeCheckWaveGen_SetFrequency+0xa0>
 80049e0:	eef4 7ac7 	vcmpe.f32	s15, s14
 80049e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80049e8:	dd01      	ble.n	80049ee <VibeCheckWaveGen_SetFrequency+0x36>
		freq_hz = VC_WAVE_MAX_FREQ_HZ;
 80049ea:	4b1c      	ldr	r3, [pc, #112]	@ (8004a5c <VibeCheckWaveGen_SetFrequency+0xa4>)
 80049ec:	603b      	str	r3, [r7, #0]

	uint32_t arr = VC_WAVE_TIM_COUNTS_PER_SECOND / (VC_WAVE_BUF_LEN * freq_hz) - 1;
 80049ee:	edd7 7a00 	vldr	s15, [r7]
 80049f2:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 8004a60 <VibeCheckWaveGen_SetFrequency+0xa8>
 80049f6:	ee27 7a87 	vmul.f32	s14, s15, s14
 80049fa:	eddf 6a1a 	vldr	s13, [pc, #104]	@ 8004a64 <VibeCheckWaveGen_SetFrequency+0xac>
 80049fe:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8004a02:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8004a06:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8004a0a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004a0e:	ee17 3a90 	vmov	r3, s15
 8004a12:	60fb      	str	r3, [r7, #12]
	wavegen->freq_hz = VC_WAVE_TIM_COUNTS_PER_SECOND / ((float)arr + 1.0f) / VC_WAVE_BUF_LEN;
 8004a14:	68fb      	ldr	r3, [r7, #12]
 8004a16:	ee07 3a90 	vmov	s15, r3
 8004a1a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004a1e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8004a22:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a26:	eddf 6a0f 	vldr	s13, [pc, #60]	@ 8004a64 <VibeCheckWaveGen_SetFrequency+0xac>
 8004a2a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8004a2e:	eddf 6a0c 	vldr	s13, [pc, #48]	@ 8004a60 <VibeCheckWaveGen_SetFrequency+0xa8>
 8004a32:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004a36:	687b      	ldr	r3, [r7, #4]
 8004a38:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004a3c:	edc3 7a07 	vstr	s15, [r3, #28]
	wavegen->htim->Instance->ARR = arr;
 8004a40:	687b      	ldr	r3, [r7, #4]
 8004a42:	681b      	ldr	r3, [r3, #0]
 8004a44:	681b      	ldr	r3, [r3, #0]
 8004a46:	68fa      	ldr	r2, [r7, #12]
 8004a48:	62da      	str	r2, [r3, #44]	@ 0x2c
}
 8004a4a:	bf00      	nop
 8004a4c:	3714      	adds	r7, #20
 8004a4e:	46bd      	mov	sp, r7
 8004a50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a54:	4770      	bx	lr
 8004a56:	bf00      	nop
 8004a58:	46989600 	.word	0x46989600
 8004a5c:	46989600 	.word	0x46989600
 8004a60:	44000000 	.word	0x44000000
 8004a64:	4b989680 	.word	0x4b989680

08004a68 <VibeCheckWaveGen_GetFrequency>:

float VibeCheckWaveGen_GetFrequency(VibeCheckWaveGen* wavegen)
{
 8004a68:	b480      	push	{r7}
 8004a6a:	b083      	sub	sp, #12
 8004a6c:	af00      	add	r7, sp, #0
 8004a6e:	6078      	str	r0, [r7, #4]
	return wavegen->freq_hz;
 8004a70:	687b      	ldr	r3, [r7, #4]
 8004a72:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004a76:	69db      	ldr	r3, [r3, #28]
 8004a78:	ee07 3a90 	vmov	s15, r3
}
 8004a7c:	eeb0 0a67 	vmov.f32	s0, s15
 8004a80:	370c      	adds	r7, #12
 8004a82:	46bd      	mov	sp, r7
 8004a84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a88:	4770      	bx	lr

08004a8a <VibeCheckWaveGen_SetAmplitude>:

void VibeCheckWaveGen_SetAmplitude(VibeCheckWaveGen* wavegen, float amplitude)
{
 8004a8a:	b480      	push	{r7}
 8004a8c:	b083      	sub	sp, #12
 8004a8e:	af00      	add	r7, sp, #0
 8004a90:	6078      	str	r0, [r7, #4]
 8004a92:	ed87 0a00 	vstr	s0, [r7]
	if (amplitude < 0.0f)
 8004a96:	edd7 7a00 	vldr	s15, [r7]
 8004a9a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004a9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004aa2:	d502      	bpl.n	8004aaa <VibeCheckWaveGen_SetAmplitude+0x20>
		amplitude = 0.0f;
 8004aa4:	f04f 0300 	mov.w	r3, #0
 8004aa8:	603b      	str	r3, [r7, #0]
	if (amplitude > 1.0f)
 8004aaa:	edd7 7a00 	vldr	s15, [r7]
 8004aae:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8004ab2:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004ab6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004aba:	dd02      	ble.n	8004ac2 <VibeCheckWaveGen_SetAmplitude+0x38>
		amplitude = 1.0f;
 8004abc:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8004ac0:	603b      	str	r3, [r7, #0]

	wavegen->amplitude = amplitude;
 8004ac2:	687b      	ldr	r3, [r7, #4]
 8004ac4:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004ac8:	461a      	mov	r2, r3
 8004aca:	683b      	ldr	r3, [r7, #0]
 8004acc:	6213      	str	r3, [r2, #32]
	wavegen->wave_ping_compute_pending = 1;
 8004ace:	687b      	ldr	r3, [r7, #4]
 8004ad0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004ad4:	461a      	mov	r2, r3
 8004ad6:	2301      	movs	r3, #1
 8004ad8:	6093      	str	r3, [r2, #8]
	wavegen->wave_pong_compute_pending = 1;
 8004ada:	687b      	ldr	r3, [r7, #4]
 8004adc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004ae0:	461a      	mov	r2, r3
 8004ae2:	2301      	movs	r3, #1
 8004ae4:	60d3      	str	r3, [r2, #12]
}
 8004ae6:	bf00      	nop
 8004ae8:	370c      	adds	r7, #12
 8004aea:	46bd      	mov	sp, r7
 8004aec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004af0:	4770      	bx	lr

08004af2 <VibeCheckWaveGen_GetAmplitude>:

float VibeCheckWaveGen_GetAmplitude(VibeCheckWaveGen* wavegen)
{
 8004af2:	b480      	push	{r7}
 8004af4:	b083      	sub	sp, #12
 8004af6:	af00      	add	r7, sp, #0
 8004af8:	6078      	str	r0, [r7, #4]
	return wavegen->amplitude;
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004b00:	6a1b      	ldr	r3, [r3, #32]
 8004b02:	ee07 3a90 	vmov	s15, r3
}
 8004b06:	eeb0 0a67 	vmov.f32	s0, s15
 8004b0a:	370c      	adds	r7, #12
 8004b0c:	46bd      	mov	sp, r7
 8004b0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b12:	4770      	bx	lr

08004b14 <VibeCheckWaveGen_SetWaveform>:

void VibeCheckWaveGen_SetWaveform(VibeCheckWaveGen* wavegen, VibeCheckWaveGen_Waveform waveform)
{
 8004b14:	b480      	push	{r7}
 8004b16:	b083      	sub	sp, #12
 8004b18:	af00      	add	r7, sp, #0
 8004b1a:	6078      	str	r0, [r7, #4]
 8004b1c:	460b      	mov	r3, r1
 8004b1e:	70fb      	strb	r3, [r7, #3]
	wavegen->waveform = waveform;
 8004b20:	687b      	ldr	r3, [r7, #4]
 8004b22:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004b26:	461a      	mov	r2, r3
 8004b28:	78fb      	ldrb	r3, [r7, #3]
 8004b2a:	7613      	strb	r3, [r2, #24]
	wavegen->wave_ping_compute_pending = 1;
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004b32:	461a      	mov	r2, r3
 8004b34:	2301      	movs	r3, #1
 8004b36:	6093      	str	r3, [r2, #8]
	wavegen->wave_pong_compute_pending = 1;
 8004b38:	687b      	ldr	r3, [r7, #4]
 8004b3a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004b3e:	461a      	mov	r2, r3
 8004b40:	2301      	movs	r3, #1
 8004b42:	60d3      	str	r3, [r2, #12]
}
 8004b44:	bf00      	nop
 8004b46:	370c      	adds	r7, #12
 8004b48:	46bd      	mov	sp, r7
 8004b4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b4e:	4770      	bx	lr

08004b50 <VibeCheckWaveGen_GetWaveform>:

VibeCheckWaveGen_Waveform VibeCheckWaveGen_GetWaveform(VibeCheckWaveGen* wavegen)
{
 8004b50:	b480      	push	{r7}
 8004b52:	b083      	sub	sp, #12
 8004b54:	af00      	add	r7, sp, #0
 8004b56:	6078      	str	r0, [r7, #4]
	return wavegen->waveform;
 8004b58:	687b      	ldr	r3, [r7, #4]
 8004b5a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004b5e:	7e1b      	ldrb	r3, [r3, #24]
}
 8004b60:	4618      	mov	r0, r3
 8004b62:	370c      	adds	r7, #12
 8004b64:	46bd      	mov	sp, r7
 8004b66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b6a:	4770      	bx	lr

08004b6c <VibeCheckWaveGen_WasMuteButtonPressed>:

uint32_t VibeCheckWaveGen_WasMuteButtonPressed(VibeCheckWaveGen* wavegen, uint32_t* is_muted)
{
 8004b6c:	b480      	push	{r7}
 8004b6e:	b083      	sub	sp, #12
 8004b70:	af00      	add	r7, sp, #0
 8004b72:	6078      	str	r0, [r7, #4]
 8004b74:	6039      	str	r1, [r7, #0]
	if (wavegen->mute_button_flag)
 8004b76:	687b      	ldr	r3, [r7, #4]
 8004b78:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004b7c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004b7e:	2b00      	cmp	r3, #0
 8004b80:	d00d      	beq.n	8004b9e <VibeCheckWaveGen_WasMuteButtonPressed+0x32>
	{
		wavegen->mute_button_flag = 0;
 8004b82:	687b      	ldr	r3, [r7, #4]
 8004b84:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004b88:	461a      	mov	r2, r3
 8004b8a:	2300      	movs	r3, #0
 8004b8c:	62d3      	str	r3, [r2, #44]	@ 0x2c
		*is_muted = wavegen->is_muted;
 8004b8e:	687b      	ldr	r3, [r7, #4]
 8004b90:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004b94:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8004b96:	683b      	ldr	r3, [r7, #0]
 8004b98:	601a      	str	r2, [r3, #0]
		return 1;
 8004b9a:	2301      	movs	r3, #1
 8004b9c:	e000      	b.n	8004ba0 <VibeCheckWaveGen_WasMuteButtonPressed+0x34>
	}

	return 0;
 8004b9e:	2300      	movs	r3, #0
}
 8004ba0:	4618      	mov	r0, r3
 8004ba2:	370c      	adds	r7, #12
 8004ba4:	46bd      	mov	sp, r7
 8004ba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004baa:	4770      	bx	lr

08004bac <VibeCheckWaveGen_DMAHalfCpltCallback>:


/* keeps track of which end of the double buffer to compute when updating the wave */
void VibeCheckWaveGen_DMAHalfCpltCallback(VibeCheckWaveGen* wavegen)
{
 8004bac:	b480      	push	{r7}
 8004bae:	b083      	sub	sp, #12
 8004bb0:	af00      	add	r7, sp, #0
 8004bb2:	6078      	str	r0, [r7, #4]
	if (wavegen->wave_ping_compute_pending)
 8004bb4:	687b      	ldr	r3, [r7, #4]
 8004bb6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004bba:	689b      	ldr	r3, [r3, #8]
 8004bbc:	2b00      	cmp	r3, #0
 8004bbe:	d00b      	beq.n	8004bd8 <VibeCheckWaveGen_DMAHalfCpltCallback+0x2c>
	{
		wavegen->wave_ping_compute_pending = 0;
 8004bc0:	687b      	ldr	r3, [r7, #4]
 8004bc2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004bc6:	461a      	mov	r2, r3
 8004bc8:	2300      	movs	r3, #0
 8004bca:	6093      	str	r3, [r2, #8]
		wavegen->wave_ping_compute_ready = 1;
 8004bcc:	687b      	ldr	r3, [r7, #4]
 8004bce:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004bd2:	461a      	mov	r2, r3
 8004bd4:	2301      	movs	r3, #1
 8004bd6:	6113      	str	r3, [r2, #16]
	}
}
 8004bd8:	bf00      	nop
 8004bda:	370c      	adds	r7, #12
 8004bdc:	46bd      	mov	sp, r7
 8004bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004be2:	4770      	bx	lr

08004be4 <VibeCheckWaveGen_DMACpltCallback>:

void VibeCheckWaveGen_DMACpltCallback(VibeCheckWaveGen* wavegen)
{
 8004be4:	b480      	push	{r7}
 8004be6:	b083      	sub	sp, #12
 8004be8:	af00      	add	r7, sp, #0
 8004bea:	6078      	str	r0, [r7, #4]
	if (wavegen->wave_pong_compute_pending)
 8004bec:	687b      	ldr	r3, [r7, #4]
 8004bee:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004bf2:	68db      	ldr	r3, [r3, #12]
 8004bf4:	2b00      	cmp	r3, #0
 8004bf6:	d00b      	beq.n	8004c10 <VibeCheckWaveGen_DMACpltCallback+0x2c>
	{
		wavegen->wave_pong_compute_pending = 0;
 8004bf8:	687b      	ldr	r3, [r7, #4]
 8004bfa:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004bfe:	461a      	mov	r2, r3
 8004c00:	2300      	movs	r3, #0
 8004c02:	60d3      	str	r3, [r2, #12]
		wavegen->wave_pong_compute_ready = 1;
 8004c04:	687b      	ldr	r3, [r7, #4]
 8004c06:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004c0a:	461a      	mov	r2, r3
 8004c0c:	2301      	movs	r3, #1
 8004c0e:	6153      	str	r3, [r2, #20]
	}
}
 8004c10:	bf00      	nop
 8004c12:	370c      	adds	r7, #12
 8004c14:	46bd      	mov	sp, r7
 8004c16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c1a:	4770      	bx	lr

08004c1c <VibeCheckWaveGen_StartDemo>:



void VibeCheckWaveGen_StartDemo(VibeCheckWaveGen* wavegen)
{
 8004c1c:	b590      	push	{r4, r7, lr}
 8004c1e:	b083      	sub	sp, #12
 8004c20:	af00      	add	r7, sp, #0
 8004c22:	6078      	str	r0, [r7, #4]
	Sequencer_Init(&wavegen->sequencer);
 8004c24:	687a      	ldr	r2, [r7, #4]
 8004c26:	f241 0338 	movw	r3, #4152	@ 0x1038
 8004c2a:	4413      	add	r3, r2
 8004c2c:	4618      	mov	r0, r3
 8004c2e:	f7fc fe65 	bl	80018fc <Sequencer_Init>
	if (wavegen->demo_num)
 8004c32:	687b      	ldr	r3, [r7, #4]
 8004c34:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004c38:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004c3a:	2b00      	cmp	r3, #0
 8004c3c:	d009      	beq.n	8004c52 <VibeCheckWaveGen_StartDemo+0x36>
		Sequencer_SetSequence(&wavegen->sequencer, demo_times0, sizeof(demo_times0) / sizeof(demo_times0[0]), 1);
 8004c3e:	687b      	ldr	r3, [r7, #4]
 8004c40:	f241 0038 	movw	r0, #4152	@ 0x1038
 8004c44:	4418      	add	r0, r3
 8004c46:	2301      	movs	r3, #1
 8004c48:	221a      	movs	r2, #26
 8004c4a:	4916      	ldr	r1, [pc, #88]	@ (8004ca4 <VibeCheckWaveGen_StartDemo+0x88>)
 8004c4c:	f7fc fe72 	bl	8001934 <Sequencer_SetSequence>
 8004c50:	e008      	b.n	8004c64 <VibeCheckWaveGen_StartDemo+0x48>
	else
		Sequencer_SetSequence(&wavegen->sequencer, demo_times1, sizeof(demo_times1) / sizeof(demo_times1[0]), 1);
 8004c52:	687b      	ldr	r3, [r7, #4]
 8004c54:	f241 0038 	movw	r0, #4152	@ 0x1038
 8004c58:	4418      	add	r0, r3
 8004c5a:	2301      	movs	r3, #1
 8004c5c:	222d      	movs	r2, #45	@ 0x2d
 8004c5e:	4912      	ldr	r1, [pc, #72]	@ (8004ca8 <VibeCheckWaveGen_StartDemo+0x8c>)
 8004c60:	f7fc fe68 	bl	8001934 <Sequencer_SetSequence>
	wavegen->demo_num = !wavegen->demo_num;
 8004c64:	687b      	ldr	r3, [r7, #4]
 8004c66:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004c6a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004c6c:	2b00      	cmp	r3, #0
 8004c6e:	bf0c      	ite	eq
 8004c70:	2301      	moveq	r3, #1
 8004c72:	2300      	movne	r3, #0
 8004c74:	b2db      	uxtb	r3, r3
 8004c76:	461a      	mov	r2, r3
 8004c78:	687b      	ldr	r3, [r7, #4]
 8004c7a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004c7e:	635a      	str	r2, [r3, #52]	@ 0x34
	Sequencer_Start(&wavegen->sequencer, HAL_GetTick());
 8004c80:	687b      	ldr	r3, [r7, #4]
 8004c82:	f241 0438 	movw	r4, #4152	@ 0x1038
 8004c86:	441c      	add	r4, r3
 8004c88:	f000 fb2e 	bl	80052e8 <HAL_GetTick>
 8004c8c:	4603      	mov	r3, r0
 8004c8e:	4619      	mov	r1, r3
 8004c90:	4620      	mov	r0, r4
 8004c92:	f7fc fea7 	bl	80019e4 <Sequencer_Start>
	VibeCheckWaveGen_Start(wavegen);
 8004c96:	6878      	ldr	r0, [r7, #4]
 8004c98:	f7ff fe4a 	bl	8004930 <VibeCheckWaveGen_Start>
}
 8004c9c:	bf00      	nop
 8004c9e:	370c      	adds	r7, #12
 8004ca0:	46bd      	mov	sp, r7
 8004ca2:	bd90      	pop	{r4, r7, pc}
 8004ca4:	0801ae1c 	.word	0x0801ae1c
 8004ca8:	0801aeec 	.word	0x0801aeec

08004cac <VibeCheckWaveGen_StopDemo>:

void VibeCheckWaveGen_StopDemo(VibeCheckWaveGen* wavegen)
{
 8004cac:	b580      	push	{r7, lr}
 8004cae:	b082      	sub	sp, #8
 8004cb0:	af00      	add	r7, sp, #0
 8004cb2:	6078      	str	r0, [r7, #4]
	VibeCheckWaveGen_Stop(wavegen);
 8004cb4:	6878      	ldr	r0, [r7, #4]
 8004cb6:	f7ff fe5d 	bl	8004974 <VibeCheckWaveGen_Stop>
	Sequencer_Stop(&wavegen->sequencer);
 8004cba:	687a      	ldr	r2, [r7, #4]
 8004cbc:	f241 0338 	movw	r3, #4152	@ 0x1038
 8004cc0:	4413      	add	r3, r2
 8004cc2:	4618      	mov	r0, r3
 8004cc4:	f7fc fea2 	bl	8001a0c <Sequencer_Stop>
}
 8004cc8:	bf00      	nop
 8004cca:	3708      	adds	r7, #8
 8004ccc:	46bd      	mov	sp, r7
 8004cce:	bd80      	pop	{r7, pc}

08004cd0 <VibeCheckWaveGenCMD_Set>:
*/



static uint32_t VibeCheckWaveGenCMD_Set(VibeCheckWaveGen* wavegen, VibeCheckShell* shell)
{
 8004cd0:	b580      	push	{r7, lr}
 8004cd2:	b094      	sub	sp, #80	@ 0x50
 8004cd4:	af00      	add	r7, sp, #0
 8004cd6:	6078      	str	r0, [r7, #4]
 8004cd8:	6039      	str	r1, [r7, #0]
	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8004cda:	f107 0310 	add.w	r3, r7, #16
 8004cde:	2240      	movs	r2, #64	@ 0x40
 8004ce0:	4619      	mov	r1, r3
 8004ce2:	6838      	ldr	r0, [r7, #0]
 8004ce4:	f7fe fe08 	bl	80038f8 <VibeCheckShell_GetNextString>
 8004ce8:	4603      	mov	r3, r0
 8004cea:	2b00      	cmp	r3, #0
 8004cec:	f000 80b0 	beq.w	8004e50 <VibeCheckWaveGenCMD_Set+0x180>
	{
		if (!strcmp(str, "frequency"))
 8004cf0:	f107 0310 	add.w	r3, r7, #16
 8004cf4:	4959      	ldr	r1, [pc, #356]	@ (8004e5c <VibeCheckWaveGenCMD_Set+0x18c>)
 8004cf6:	4618      	mov	r0, r3
 8004cf8:	f7fb fb0a 	bl	8000310 <strcmp>
 8004cfc:	4603      	mov	r3, r0
 8004cfe:	2b00      	cmp	r3, #0
 8004d00:	d119      	bne.n	8004d36 <VibeCheckWaveGenCMD_Set+0x66>
		{
			float val;
			if (VibeCheckShell_GetNextFloat(shell, &val))
 8004d02:	f107 030c 	add.w	r3, r7, #12
 8004d06:	4619      	mov	r1, r3
 8004d08:	6838      	ldr	r0, [r7, #0]
 8004d0a:	f7fe feab 	bl	8003a64 <VibeCheckShell_GetNextFloat>
 8004d0e:	4603      	mov	r3, r0
 8004d10:	2b00      	cmp	r3, #0
 8004d12:	f000 809d 	beq.w	8004e50 <VibeCheckWaveGenCMD_Set+0x180>
			{
				VibeCheckWaveGen_SetFrequency(wavegen, val);
 8004d16:	edd7 7a03 	vldr	s15, [r7, #12]
 8004d1a:	eeb0 0a67 	vmov.f32	s0, s15
 8004d1e:	6878      	ldr	r0, [r7, #4]
 8004d20:	f7ff fe4a 	bl	80049b8 <VibeCheckWaveGen_SetFrequency>
				VibeCheckShell_PutOutputString(shell, "ack");
 8004d24:	494e      	ldr	r1, [pc, #312]	@ (8004e60 <VibeCheckWaveGenCMD_Set+0x190>)
 8004d26:	6838      	ldr	r0, [r7, #0]
 8004d28:	f7fe fee6 	bl	8003af8 <VibeCheckShell_PutOutputString>
				VibeCheckShell_PutOutputDelimiter(shell);
 8004d2c:	6838      	ldr	r0, [r7, #0]
 8004d2e:	f7fe ff61 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
				return 1;
 8004d32:	2301      	movs	r3, #1
 8004d34:	e08d      	b.n	8004e52 <VibeCheckWaveGenCMD_Set+0x182>
			}
		}
		else if (!strcmp(str, "amplitude"))
 8004d36:	f107 0310 	add.w	r3, r7, #16
 8004d3a:	494a      	ldr	r1, [pc, #296]	@ (8004e64 <VibeCheckWaveGenCMD_Set+0x194>)
 8004d3c:	4618      	mov	r0, r3
 8004d3e:	f7fb fae7 	bl	8000310 <strcmp>
 8004d42:	4603      	mov	r3, r0
 8004d44:	2b00      	cmp	r3, #0
 8004d46:	d118      	bne.n	8004d7a <VibeCheckWaveGenCMD_Set+0xaa>
		{
			float val;
			if (VibeCheckShell_GetNextFloat(shell, &val))
 8004d48:	f107 0308 	add.w	r3, r7, #8
 8004d4c:	4619      	mov	r1, r3
 8004d4e:	6838      	ldr	r0, [r7, #0]
 8004d50:	f7fe fe88 	bl	8003a64 <VibeCheckShell_GetNextFloat>
 8004d54:	4603      	mov	r3, r0
 8004d56:	2b00      	cmp	r3, #0
 8004d58:	d07a      	beq.n	8004e50 <VibeCheckWaveGenCMD_Set+0x180>
			{
				VibeCheckWaveGen_SetAmplitude(wavegen, val);
 8004d5a:	edd7 7a02 	vldr	s15, [r7, #8]
 8004d5e:	eeb0 0a67 	vmov.f32	s0, s15
 8004d62:	6878      	ldr	r0, [r7, #4]
 8004d64:	f7ff fe91 	bl	8004a8a <VibeCheckWaveGen_SetAmplitude>
				VibeCheckShell_PutOutputString(shell, "ack");
 8004d68:	493d      	ldr	r1, [pc, #244]	@ (8004e60 <VibeCheckWaveGenCMD_Set+0x190>)
 8004d6a:	6838      	ldr	r0, [r7, #0]
 8004d6c:	f7fe fec4 	bl	8003af8 <VibeCheckShell_PutOutputString>
				VibeCheckShell_PutOutputDelimiter(shell);
 8004d70:	6838      	ldr	r0, [r7, #0]
 8004d72:	f7fe ff3f 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
				return 1;
 8004d76:	2301      	movs	r3, #1
 8004d78:	e06b      	b.n	8004e52 <VibeCheckWaveGenCMD_Set+0x182>
			}
		}
		else if (!strcmp(str, "waveform"))
 8004d7a:	f107 0310 	add.w	r3, r7, #16
 8004d7e:	493a      	ldr	r1, [pc, #232]	@ (8004e68 <VibeCheckWaveGenCMD_Set+0x198>)
 8004d80:	4618      	mov	r0, r3
 8004d82:	f7fb fac5 	bl	8000310 <strcmp>
 8004d86:	4603      	mov	r3, r0
 8004d88:	2b00      	cmp	r3, #0
 8004d8a:	d161      	bne.n	8004e50 <VibeCheckWaveGenCMD_Set+0x180>
		{
			if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8004d8c:	f107 0310 	add.w	r3, r7, #16
 8004d90:	2240      	movs	r2, #64	@ 0x40
 8004d92:	4619      	mov	r1, r3
 8004d94:	6838      	ldr	r0, [r7, #0]
 8004d96:	f7fe fdaf 	bl	80038f8 <VibeCheckShell_GetNextString>
 8004d9a:	4603      	mov	r3, r0
 8004d9c:	2b00      	cmp	r3, #0
 8004d9e:	d057      	beq.n	8004e50 <VibeCheckWaveGenCMD_Set+0x180>
			{
				if (!strcmp(str, "sine"))
 8004da0:	f107 0310 	add.w	r3, r7, #16
 8004da4:	4931      	ldr	r1, [pc, #196]	@ (8004e6c <VibeCheckWaveGenCMD_Set+0x19c>)
 8004da6:	4618      	mov	r0, r3
 8004da8:	f7fb fab2 	bl	8000310 <strcmp>
 8004dac:	4603      	mov	r3, r0
 8004dae:	2b00      	cmp	r3, #0
 8004db0:	d10c      	bne.n	8004dcc <VibeCheckWaveGenCMD_Set+0xfc>
				{
					VibeCheckWaveGen_SetWaveform(wavegen, VC_WAVE_SINE);
 8004db2:	2100      	movs	r1, #0
 8004db4:	6878      	ldr	r0, [r7, #4]
 8004db6:	f7ff fead 	bl	8004b14 <VibeCheckWaveGen_SetWaveform>
					VibeCheckShell_PutOutputString(shell, "ack");
 8004dba:	4929      	ldr	r1, [pc, #164]	@ (8004e60 <VibeCheckWaveGenCMD_Set+0x190>)
 8004dbc:	6838      	ldr	r0, [r7, #0]
 8004dbe:	f7fe fe9b 	bl	8003af8 <VibeCheckShell_PutOutputString>
					VibeCheckShell_PutOutputDelimiter(shell);
 8004dc2:	6838      	ldr	r0, [r7, #0]
 8004dc4:	f7fe ff16 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
					return 1;
 8004dc8:	2301      	movs	r3, #1
 8004dca:	e042      	b.n	8004e52 <VibeCheckWaveGenCMD_Set+0x182>
				}
				else if (!strcmp(str, "square"))
 8004dcc:	f107 0310 	add.w	r3, r7, #16
 8004dd0:	4927      	ldr	r1, [pc, #156]	@ (8004e70 <VibeCheckWaveGenCMD_Set+0x1a0>)
 8004dd2:	4618      	mov	r0, r3
 8004dd4:	f7fb fa9c 	bl	8000310 <strcmp>
 8004dd8:	4603      	mov	r3, r0
 8004dda:	2b00      	cmp	r3, #0
 8004ddc:	d10c      	bne.n	8004df8 <VibeCheckWaveGenCMD_Set+0x128>
				{
					VibeCheckWaveGen_SetWaveform(wavegen, VC_WAVE_SQUARE);
 8004dde:	2101      	movs	r1, #1
 8004de0:	6878      	ldr	r0, [r7, #4]
 8004de2:	f7ff fe97 	bl	8004b14 <VibeCheckWaveGen_SetWaveform>
					VibeCheckShell_PutOutputString(shell, "ack");
 8004de6:	491e      	ldr	r1, [pc, #120]	@ (8004e60 <VibeCheckWaveGenCMD_Set+0x190>)
 8004de8:	6838      	ldr	r0, [r7, #0]
 8004dea:	f7fe fe85 	bl	8003af8 <VibeCheckShell_PutOutputString>
					VibeCheckShell_PutOutputDelimiter(shell);
 8004dee:	6838      	ldr	r0, [r7, #0]
 8004df0:	f7fe ff00 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
					return 1;
 8004df4:	2301      	movs	r3, #1
 8004df6:	e02c      	b.n	8004e52 <VibeCheckWaveGenCMD_Set+0x182>
				}
				else if (!strcmp(str, "saw"))
 8004df8:	f107 0310 	add.w	r3, r7, #16
 8004dfc:	491d      	ldr	r1, [pc, #116]	@ (8004e74 <VibeCheckWaveGenCMD_Set+0x1a4>)
 8004dfe:	4618      	mov	r0, r3
 8004e00:	f7fb fa86 	bl	8000310 <strcmp>
 8004e04:	4603      	mov	r3, r0
 8004e06:	2b00      	cmp	r3, #0
 8004e08:	d10c      	bne.n	8004e24 <VibeCheckWaveGenCMD_Set+0x154>
				{
					VibeCheckWaveGen_SetWaveform(wavegen, VC_WAVE_SAW);
 8004e0a:	2102      	movs	r1, #2
 8004e0c:	6878      	ldr	r0, [r7, #4]
 8004e0e:	f7ff fe81 	bl	8004b14 <VibeCheckWaveGen_SetWaveform>
					VibeCheckShell_PutOutputString(shell, "ack");
 8004e12:	4913      	ldr	r1, [pc, #76]	@ (8004e60 <VibeCheckWaveGenCMD_Set+0x190>)
 8004e14:	6838      	ldr	r0, [r7, #0]
 8004e16:	f7fe fe6f 	bl	8003af8 <VibeCheckShell_PutOutputString>
					VibeCheckShell_PutOutputDelimiter(shell);
 8004e1a:	6838      	ldr	r0, [r7, #0]
 8004e1c:	f7fe feea 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
					return 1;
 8004e20:	2301      	movs	r3, #1
 8004e22:	e016      	b.n	8004e52 <VibeCheckWaveGenCMD_Set+0x182>
				}
				else if (!strcmp(str, "triangle"))
 8004e24:	f107 0310 	add.w	r3, r7, #16
 8004e28:	4913      	ldr	r1, [pc, #76]	@ (8004e78 <VibeCheckWaveGenCMD_Set+0x1a8>)
 8004e2a:	4618      	mov	r0, r3
 8004e2c:	f7fb fa70 	bl	8000310 <strcmp>
 8004e30:	4603      	mov	r3, r0
 8004e32:	2b00      	cmp	r3, #0
 8004e34:	d10c      	bne.n	8004e50 <VibeCheckWaveGenCMD_Set+0x180>
				{
					VibeCheckWaveGen_SetWaveform(wavegen, VC_WAVE_TRIANGLE);
 8004e36:	2103      	movs	r1, #3
 8004e38:	6878      	ldr	r0, [r7, #4]
 8004e3a:	f7ff fe6b 	bl	8004b14 <VibeCheckWaveGen_SetWaveform>
					VibeCheckShell_PutOutputString(shell, "ack");
 8004e3e:	4908      	ldr	r1, [pc, #32]	@ (8004e60 <VibeCheckWaveGenCMD_Set+0x190>)
 8004e40:	6838      	ldr	r0, [r7, #0]
 8004e42:	f7fe fe59 	bl	8003af8 <VibeCheckShell_PutOutputString>
					VibeCheckShell_PutOutputDelimiter(shell);
 8004e46:	6838      	ldr	r0, [r7, #0]
 8004e48:	f7fe fed4 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
					return 1;
 8004e4c:	2301      	movs	r3, #1
 8004e4e:	e000      	b.n	8004e52 <VibeCheckWaveGenCMD_Set+0x182>
				}
			}
		}
	}

	return 0;
 8004e50:	2300      	movs	r3, #0
}
 8004e52:	4618      	mov	r0, r3
 8004e54:	3750      	adds	r7, #80	@ 0x50
 8004e56:	46bd      	mov	sp, r7
 8004e58:	bd80      	pop	{r7, pc}
 8004e5a:	bf00      	nop
 8004e5c:	0801aae8 	.word	0x0801aae8
 8004e60:	0801aaf4 	.word	0x0801aaf4
 8004e64:	0801aaf8 	.word	0x0801aaf8
 8004e68:	0801ab04 	.word	0x0801ab04
 8004e6c:	0801ab10 	.word	0x0801ab10
 8004e70:	0801ab18 	.word	0x0801ab18
 8004e74:	0801ab20 	.word	0x0801ab20
 8004e78:	0801ab24 	.word	0x0801ab24

08004e7c <VibeCheckWaveGenCMD_Get>:

static uint32_t VibeCheckWaveGenCMD_Get(VibeCheckWaveGen* wavegen, VibeCheckShell* shell)
{
 8004e7c:	b580      	push	{r7, lr}
 8004e7e:	b092      	sub	sp, #72	@ 0x48
 8004e80:	af00      	add	r7, sp, #0
 8004e82:	6078      	str	r0, [r7, #4]
 8004e84:	6039      	str	r1, [r7, #0]
	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8004e86:	f107 0308 	add.w	r3, r7, #8
 8004e8a:	2240      	movs	r2, #64	@ 0x40
 8004e8c:	4619      	mov	r1, r3
 8004e8e:	6838      	ldr	r0, [r7, #0]
 8004e90:	f7fe fd32 	bl	80038f8 <VibeCheckShell_GetNextString>
 8004e94:	4603      	mov	r3, r0
 8004e96:	2b00      	cmp	r3, #0
 8004e98:	d077      	beq.n	8004f8a <VibeCheckWaveGenCMD_Get+0x10e>
	{
		if (!strcmp(str, "frequency"))
 8004e9a:	f107 0308 	add.w	r3, r7, #8
 8004e9e:	493d      	ldr	r1, [pc, #244]	@ (8004f94 <VibeCheckWaveGenCMD_Get+0x118>)
 8004ea0:	4618      	mov	r0, r3
 8004ea2:	f7fb fa35 	bl	8000310 <strcmp>
 8004ea6:	4603      	mov	r3, r0
 8004ea8:	2b00      	cmp	r3, #0
 8004eaa:	d115      	bne.n	8004ed8 <VibeCheckWaveGenCMD_Get+0x5c>
		{
			VibeCheckShell_PutOutputString(shell, "ack");
 8004eac:	493a      	ldr	r1, [pc, #232]	@ (8004f98 <VibeCheckWaveGenCMD_Get+0x11c>)
 8004eae:	6838      	ldr	r0, [r7, #0]
 8004eb0:	f7fe fe22 	bl	8003af8 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputSeparator(shell);
 8004eb4:	6838      	ldr	r0, [r7, #0]
 8004eb6:	f7fe fe8f 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputFloat(shell, VibeCheckWaveGen_GetFrequency(wavegen));
 8004eba:	6878      	ldr	r0, [r7, #4]
 8004ebc:	f7ff fdd4 	bl	8004a68 <VibeCheckWaveGen_GetFrequency>
 8004ec0:	eef0 7a40 	vmov.f32	s15, s0
 8004ec4:	eeb0 0a67 	vmov.f32	s0, s15
 8004ec8:	6838      	ldr	r0, [r7, #0]
 8004eca:	f7fe fe67 	bl	8003b9c <VibeCheckShell_PutOutputFloat>
			VibeCheckShell_PutOutputDelimiter(shell);
 8004ece:	6838      	ldr	r0, [r7, #0]
 8004ed0:	f7fe fe90 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8004ed4:	2301      	movs	r3, #1
 8004ed6:	e059      	b.n	8004f8c <VibeCheckWaveGenCMD_Get+0x110>
		}
		else if (!strcmp(str, "amplitude"))
 8004ed8:	f107 0308 	add.w	r3, r7, #8
 8004edc:	492f      	ldr	r1, [pc, #188]	@ (8004f9c <VibeCheckWaveGenCMD_Get+0x120>)
 8004ede:	4618      	mov	r0, r3
 8004ee0:	f7fb fa16 	bl	8000310 <strcmp>
 8004ee4:	4603      	mov	r3, r0
 8004ee6:	2b00      	cmp	r3, #0
 8004ee8:	d115      	bne.n	8004f16 <VibeCheckWaveGenCMD_Get+0x9a>
		{
			VibeCheckShell_PutOutputString(shell, "ack");
 8004eea:	492b      	ldr	r1, [pc, #172]	@ (8004f98 <VibeCheckWaveGenCMD_Get+0x11c>)
 8004eec:	6838      	ldr	r0, [r7, #0]
 8004eee:	f7fe fe03 	bl	8003af8 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputSeparator(shell);
 8004ef2:	6838      	ldr	r0, [r7, #0]
 8004ef4:	f7fe fe70 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputFloat(shell, VibeCheckWaveGen_GetAmplitude(wavegen));
 8004ef8:	6878      	ldr	r0, [r7, #4]
 8004efa:	f7ff fdfa 	bl	8004af2 <VibeCheckWaveGen_GetAmplitude>
 8004efe:	eef0 7a40 	vmov.f32	s15, s0
 8004f02:	eeb0 0a67 	vmov.f32	s0, s15
 8004f06:	6838      	ldr	r0, [r7, #0]
 8004f08:	f7fe fe48 	bl	8003b9c <VibeCheckShell_PutOutputFloat>
			VibeCheckShell_PutOutputDelimiter(shell);
 8004f0c:	6838      	ldr	r0, [r7, #0]
 8004f0e:	f7fe fe71 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8004f12:	2301      	movs	r3, #1
 8004f14:	e03a      	b.n	8004f8c <VibeCheckWaveGenCMD_Get+0x110>
		}
		else if (!strcmp(str, "waveform"))
 8004f16:	f107 0308 	add.w	r3, r7, #8
 8004f1a:	4921      	ldr	r1, [pc, #132]	@ (8004fa0 <VibeCheckWaveGenCMD_Get+0x124>)
 8004f1c:	4618      	mov	r0, r3
 8004f1e:	f7fb f9f7 	bl	8000310 <strcmp>
 8004f22:	4603      	mov	r3, r0
 8004f24:	2b00      	cmp	r3, #0
 8004f26:	d130      	bne.n	8004f8a <VibeCheckWaveGenCMD_Get+0x10e>
		{
			VibeCheckShell_PutOutputString(shell, "ack");
 8004f28:	491b      	ldr	r1, [pc, #108]	@ (8004f98 <VibeCheckWaveGenCMD_Get+0x11c>)
 8004f2a:	6838      	ldr	r0, [r7, #0]
 8004f2c:	f7fe fde4 	bl	8003af8 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputSeparator(shell);
 8004f30:	6838      	ldr	r0, [r7, #0]
 8004f32:	f7fe fe51 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>
			switch (VibeCheckWaveGen_GetWaveform(wavegen))
 8004f36:	6878      	ldr	r0, [r7, #4]
 8004f38:	f7ff fe0a 	bl	8004b50 <VibeCheckWaveGen_GetWaveform>
 8004f3c:	4603      	mov	r3, r0
 8004f3e:	2b03      	cmp	r3, #3
 8004f40:	d81e      	bhi.n	8004f80 <VibeCheckWaveGenCMD_Get+0x104>
 8004f42:	a201      	add	r2, pc, #4	@ (adr r2, 8004f48 <VibeCheckWaveGenCMD_Get+0xcc>)
 8004f44:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004f48:	08004f59 	.word	0x08004f59
 8004f4c:	08004f63 	.word	0x08004f63
 8004f50:	08004f6d 	.word	0x08004f6d
 8004f54:	08004f77 	.word	0x08004f77
			{
			case VC_WAVE_SINE:
				VibeCheckShell_PutOutputString(shell, "sine");
 8004f58:	4912      	ldr	r1, [pc, #72]	@ (8004fa4 <VibeCheckWaveGenCMD_Get+0x128>)
 8004f5a:	6838      	ldr	r0, [r7, #0]
 8004f5c:	f7fe fdcc 	bl	8003af8 <VibeCheckShell_PutOutputString>
				break;
 8004f60:	e00e      	b.n	8004f80 <VibeCheckWaveGenCMD_Get+0x104>
			case VC_WAVE_SQUARE:
				VibeCheckShell_PutOutputString(shell, "square");
 8004f62:	4911      	ldr	r1, [pc, #68]	@ (8004fa8 <VibeCheckWaveGenCMD_Get+0x12c>)
 8004f64:	6838      	ldr	r0, [r7, #0]
 8004f66:	f7fe fdc7 	bl	8003af8 <VibeCheckShell_PutOutputString>
				break;
 8004f6a:	e009      	b.n	8004f80 <VibeCheckWaveGenCMD_Get+0x104>
			case VC_WAVE_SAW:
				VibeCheckShell_PutOutputString(shell, "saw");
 8004f6c:	490f      	ldr	r1, [pc, #60]	@ (8004fac <VibeCheckWaveGenCMD_Get+0x130>)
 8004f6e:	6838      	ldr	r0, [r7, #0]
 8004f70:	f7fe fdc2 	bl	8003af8 <VibeCheckShell_PutOutputString>
				break;
 8004f74:	e004      	b.n	8004f80 <VibeCheckWaveGenCMD_Get+0x104>
			case VC_WAVE_TRIANGLE:
				VibeCheckShell_PutOutputString(shell, "triangle");
 8004f76:	490e      	ldr	r1, [pc, #56]	@ (8004fb0 <VibeCheckWaveGenCMD_Get+0x134>)
 8004f78:	6838      	ldr	r0, [r7, #0]
 8004f7a:	f7fe fdbd 	bl	8003af8 <VibeCheckShell_PutOutputString>
				break;
 8004f7e:	bf00      	nop
			}
			VibeCheckShell_PutOutputDelimiter(shell);
 8004f80:	6838      	ldr	r0, [r7, #0]
 8004f82:	f7fe fe37 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8004f86:	2301      	movs	r3, #1
 8004f88:	e000      	b.n	8004f8c <VibeCheckWaveGenCMD_Get+0x110>
		}
	}

	return 0;
 8004f8a:	2300      	movs	r3, #0
}
 8004f8c:	4618      	mov	r0, r3
 8004f8e:	3748      	adds	r7, #72	@ 0x48
 8004f90:	46bd      	mov	sp, r7
 8004f92:	bd80      	pop	{r7, pc}
 8004f94:	0801aae8 	.word	0x0801aae8
 8004f98:	0801aaf4 	.word	0x0801aaf4
 8004f9c:	0801aaf8 	.word	0x0801aaf8
 8004fa0:	0801ab04 	.word	0x0801ab04
 8004fa4:	0801ab10 	.word	0x0801ab10
 8004fa8:	0801ab18 	.word	0x0801ab18
 8004fac:	0801ab20 	.word	0x0801ab20
 8004fb0:	0801ab24 	.word	0x0801ab24

08004fb4 <VibeCheckWaveGenCMD_Execute>:


uint32_t VibeCheckWaveGenCMD_Execute(void* obj, VibeCheckShell* shell)
{
 8004fb4:	b580      	push	{r7, lr}
 8004fb6:	b094      	sub	sp, #80	@ 0x50
 8004fb8:	af00      	add	r7, sp, #0
 8004fba:	6078      	str	r0, [r7, #4]
 8004fbc:	6039      	str	r1, [r7, #0]
	VibeCheckWaveGen* wavegen = (VibeCheckWaveGen*)obj;
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	64fb      	str	r3, [r7, #76]	@ 0x4c

	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8004fc2:	f107 030c 	add.w	r3, r7, #12
 8004fc6:	2240      	movs	r2, #64	@ 0x40
 8004fc8:	4619      	mov	r1, r3
 8004fca:	6838      	ldr	r0, [r7, #0]
 8004fcc:	f7fe fc94 	bl	80038f8 <VibeCheckShell_GetNextString>
 8004fd0:	4603      	mov	r3, r0
 8004fd2:	2b00      	cmp	r3, #0
 8004fd4:	f000 808b 	beq.w	80050ee <VibeCheckWaveGenCMD_Execute+0x13a>
	{
		if (!strcmp(str, "start"))
 8004fd8:	f107 030c 	add.w	r3, r7, #12
 8004fdc:	4946      	ldr	r1, [pc, #280]	@ (80050f8 <VibeCheckWaveGenCMD_Execute+0x144>)
 8004fde:	4618      	mov	r0, r3
 8004fe0:	f7fb f996 	bl	8000310 <strcmp>
 8004fe4:	4603      	mov	r3, r0
 8004fe6:	2b00      	cmp	r3, #0
 8004fe8:	d10b      	bne.n	8005002 <VibeCheckWaveGenCMD_Execute+0x4e>
		{
			VibeCheckWaveGen_Start(wavegen);
 8004fea:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 8004fec:	f7ff fca0 	bl	8004930 <VibeCheckWaveGen_Start>
			VibeCheckShell_PutOutputString(shell, "ack");
 8004ff0:	4942      	ldr	r1, [pc, #264]	@ (80050fc <VibeCheckWaveGenCMD_Execute+0x148>)
 8004ff2:	6838      	ldr	r0, [r7, #0]
 8004ff4:	f7fe fd80 	bl	8003af8 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputDelimiter(shell);
 8004ff8:	6838      	ldr	r0, [r7, #0]
 8004ffa:	f7fe fdfb 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8004ffe:	2301      	movs	r3, #1
 8005000:	e076      	b.n	80050f0 <VibeCheckWaveGenCMD_Execute+0x13c>
		}
		else if (!strcmp(str, "stop"))
 8005002:	f107 030c 	add.w	r3, r7, #12
 8005006:	493e      	ldr	r1, [pc, #248]	@ (8005100 <VibeCheckWaveGenCMD_Execute+0x14c>)
 8005008:	4618      	mov	r0, r3
 800500a:	f7fb f981 	bl	8000310 <strcmp>
 800500e:	4603      	mov	r3, r0
 8005010:	2b00      	cmp	r3, #0
 8005012:	d10b      	bne.n	800502c <VibeCheckWaveGenCMD_Execute+0x78>
		{
			VibeCheckWaveGen_Stop(wavegen);
 8005014:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 8005016:	f7ff fcad 	bl	8004974 <VibeCheckWaveGen_Stop>
			VibeCheckShell_PutOutputString(shell, "ack");
 800501a:	4938      	ldr	r1, [pc, #224]	@ (80050fc <VibeCheckWaveGenCMD_Execute+0x148>)
 800501c:	6838      	ldr	r0, [r7, #0]
 800501e:	f7fe fd6b 	bl	8003af8 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputDelimiter(shell);
 8005022:	6838      	ldr	r0, [r7, #0]
 8005024:	f7fe fde6 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8005028:	2301      	movs	r3, #1
 800502a:	e061      	b.n	80050f0 <VibeCheckWaveGenCMD_Execute+0x13c>
		}
		else if (!strcmp(str, "set"))
 800502c:	f107 030c 	add.w	r3, r7, #12
 8005030:	4934      	ldr	r1, [pc, #208]	@ (8005104 <VibeCheckWaveGenCMD_Execute+0x150>)
 8005032:	4618      	mov	r0, r3
 8005034:	f7fb f96c 	bl	8000310 <strcmp>
 8005038:	4603      	mov	r3, r0
 800503a:	2b00      	cmp	r3, #0
 800503c:	d108      	bne.n	8005050 <VibeCheckWaveGenCMD_Execute+0x9c>
		{
			if (VibeCheckWaveGenCMD_Set(wavegen, shell))
 800503e:	6839      	ldr	r1, [r7, #0]
 8005040:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 8005042:	f7ff fe45 	bl	8004cd0 <VibeCheckWaveGenCMD_Set>
 8005046:	4603      	mov	r3, r0
 8005048:	2b00      	cmp	r3, #0
 800504a:	d050      	beq.n	80050ee <VibeCheckWaveGenCMD_Execute+0x13a>
			{
				return 1;
 800504c:	2301      	movs	r3, #1
 800504e:	e04f      	b.n	80050f0 <VibeCheckWaveGenCMD_Execute+0x13c>
			}
		}
		else if (!strcmp(str, "get"))
 8005050:	f107 030c 	add.w	r3, r7, #12
 8005054:	492c      	ldr	r1, [pc, #176]	@ (8005108 <VibeCheckWaveGenCMD_Execute+0x154>)
 8005056:	4618      	mov	r0, r3
 8005058:	f7fb f95a 	bl	8000310 <strcmp>
 800505c:	4603      	mov	r3, r0
 800505e:	2b00      	cmp	r3, #0
 8005060:	d108      	bne.n	8005074 <VibeCheckWaveGenCMD_Execute+0xc0>
		{
			if (VibeCheckWaveGenCMD_Get(wavegen, shell))
 8005062:	6839      	ldr	r1, [r7, #0]
 8005064:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 8005066:	f7ff ff09 	bl	8004e7c <VibeCheckWaveGenCMD_Get>
 800506a:	4603      	mov	r3, r0
 800506c:	2b00      	cmp	r3, #0
 800506e:	d03e      	beq.n	80050ee <VibeCheckWaveGenCMD_Execute+0x13a>
			{
				return 1;
 8005070:	2301      	movs	r3, #1
 8005072:	e03d      	b.n	80050f0 <VibeCheckWaveGenCMD_Execute+0x13c>
			}
		}
		else if (!strcmp(str, "demo"))
 8005074:	f107 030c 	add.w	r3, r7, #12
 8005078:	4924      	ldr	r1, [pc, #144]	@ (800510c <VibeCheckWaveGenCMD_Execute+0x158>)
 800507a:	4618      	mov	r0, r3
 800507c:	f7fb f948 	bl	8000310 <strcmp>
 8005080:	4603      	mov	r3, r0
 8005082:	2b00      	cmp	r3, #0
 8005084:	d133      	bne.n	80050ee <VibeCheckWaveGenCMD_Execute+0x13a>
		{
			if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8005086:	f107 030c 	add.w	r3, r7, #12
 800508a:	2240      	movs	r2, #64	@ 0x40
 800508c:	4619      	mov	r1, r3
 800508e:	6838      	ldr	r0, [r7, #0]
 8005090:	f7fe fc32 	bl	80038f8 <VibeCheckShell_GetNextString>
 8005094:	4603      	mov	r3, r0
 8005096:	2b00      	cmp	r3, #0
 8005098:	d029      	beq.n	80050ee <VibeCheckWaveGenCMD_Execute+0x13a>
			{
				if (!strcmp(str, "start"))
 800509a:	f107 030c 	add.w	r3, r7, #12
 800509e:	4916      	ldr	r1, [pc, #88]	@ (80050f8 <VibeCheckWaveGenCMD_Execute+0x144>)
 80050a0:	4618      	mov	r0, r3
 80050a2:	f7fb f935 	bl	8000310 <strcmp>
 80050a6:	4603      	mov	r3, r0
 80050a8:	2b00      	cmp	r3, #0
 80050aa:	d10b      	bne.n	80050c4 <VibeCheckWaveGenCMD_Execute+0x110>
				{
					VibeCheckWaveGen_StartDemo(wavegen);
 80050ac:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 80050ae:	f7ff fdb5 	bl	8004c1c <VibeCheckWaveGen_StartDemo>
					VibeCheckShell_PutOutputString(shell, "ack");
 80050b2:	4912      	ldr	r1, [pc, #72]	@ (80050fc <VibeCheckWaveGenCMD_Execute+0x148>)
 80050b4:	6838      	ldr	r0, [r7, #0]
 80050b6:	f7fe fd1f 	bl	8003af8 <VibeCheckShell_PutOutputString>
					VibeCheckShell_PutOutputDelimiter(shell);
 80050ba:	6838      	ldr	r0, [r7, #0]
 80050bc:	f7fe fd9a 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
					return 1;
 80050c0:	2301      	movs	r3, #1
 80050c2:	e015      	b.n	80050f0 <VibeCheckWaveGenCMD_Execute+0x13c>
				}
				else if (!strcmp(str, "stop"))
 80050c4:	f107 030c 	add.w	r3, r7, #12
 80050c8:	490d      	ldr	r1, [pc, #52]	@ (8005100 <VibeCheckWaveGenCMD_Execute+0x14c>)
 80050ca:	4618      	mov	r0, r3
 80050cc:	f7fb f920 	bl	8000310 <strcmp>
 80050d0:	4603      	mov	r3, r0
 80050d2:	2b00      	cmp	r3, #0
 80050d4:	d10b      	bne.n	80050ee <VibeCheckWaveGenCMD_Execute+0x13a>
				{
					VibeCheckWaveGen_StopDemo(wavegen);
 80050d6:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 80050d8:	f7ff fde8 	bl	8004cac <VibeCheckWaveGen_StopDemo>
					VibeCheckShell_PutOutputString(shell, "ack");
 80050dc:	4907      	ldr	r1, [pc, #28]	@ (80050fc <VibeCheckWaveGenCMD_Execute+0x148>)
 80050de:	6838      	ldr	r0, [r7, #0]
 80050e0:	f7fe fd0a 	bl	8003af8 <VibeCheckShell_PutOutputString>
					VibeCheckShell_PutOutputDelimiter(shell);
 80050e4:	6838      	ldr	r0, [r7, #0]
 80050e6:	f7fe fd85 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>
					return 1;
 80050ea:	2301      	movs	r3, #1
 80050ec:	e000      	b.n	80050f0 <VibeCheckWaveGenCMD_Execute+0x13c>
				}
			}
		}
	}

	return 0;
 80050ee:	2300      	movs	r3, #0
}
 80050f0:	4618      	mov	r0, r3
 80050f2:	3750      	adds	r7, #80	@ 0x50
 80050f4:	46bd      	mov	sp, r7
 80050f6:	bd80      	pop	{r7, pc}
 80050f8:	0801ab30 	.word	0x0801ab30
 80050fc:	0801aaf4 	.word	0x0801aaf4
 8005100:	0801ab38 	.word	0x0801ab38
 8005104:	0801ab40 	.word	0x0801ab40
 8005108:	0801ab44 	.word	0x0801ab44
 800510c:	0801ab48 	.word	0x0801ab48

08005110 <VibeCheckWaveGenSender_Execute>:


uint32_t VibeCheckWaveGenSender_Execute(void* obj, VibeCheckShell* shell)
{
 8005110:	b580      	push	{r7, lr}
 8005112:	b084      	sub	sp, #16
 8005114:	af00      	add	r7, sp, #0
 8005116:	6078      	str	r0, [r7, #4]
 8005118:	6039      	str	r1, [r7, #0]
	/* this will send a message to the host when the mute button is pressed */

	VibeCheckWaveGen* wavegen = (VibeCheckWaveGen*)obj;
 800511a:	687b      	ldr	r3, [r7, #4]
 800511c:	60fb      	str	r3, [r7, #12]

	uint32_t is_muted;
	if (VibeCheckWaveGen_WasMuteButtonPressed(wavegen, &is_muted))
 800511e:	f107 0308 	add.w	r3, r7, #8
 8005122:	4619      	mov	r1, r3
 8005124:	68f8      	ldr	r0, [r7, #12]
 8005126:	f7ff fd21 	bl	8004b6c <VibeCheckWaveGen_WasMuteButtonPressed>
 800512a:	4603      	mov	r3, r0
 800512c:	2b00      	cmp	r3, #0
 800512e:	d01e      	beq.n	800516e <VibeCheckWaveGenSender_Execute+0x5e>
	{
		VibeCheckShell_PutOutputString(shell, "msg");
 8005130:	4911      	ldr	r1, [pc, #68]	@ (8005178 <VibeCheckWaveGenSender_Execute+0x68>)
 8005132:	6838      	ldr	r0, [r7, #0]
 8005134:	f7fe fce0 	bl	8003af8 <VibeCheckShell_PutOutputString>
		VibeCheckShell_PutOutputSeparator(shell);
 8005138:	6838      	ldr	r0, [r7, #0]
 800513a:	f7fe fd4d 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>
		VibeCheckShell_PutOutputString(shell, "wavegen");  /* TODO: this name should really be kept in a single place */
 800513e:	490f      	ldr	r1, [pc, #60]	@ (800517c <VibeCheckWaveGenSender_Execute+0x6c>)
 8005140:	6838      	ldr	r0, [r7, #0]
 8005142:	f7fe fcd9 	bl	8003af8 <VibeCheckShell_PutOutputString>
		VibeCheckShell_PutOutputSeparator(shell);
 8005146:	6838      	ldr	r0, [r7, #0]
 8005148:	f7fe fd46 	bl	8003bd8 <VibeCheckShell_PutOutputSeparator>

		if (is_muted)
 800514c:	68bb      	ldr	r3, [r7, #8]
 800514e:	2b00      	cmp	r3, #0
 8005150:	d004      	beq.n	800515c <VibeCheckWaveGenSender_Execute+0x4c>
			VibeCheckShell_PutOutputString(shell, "muted");
 8005152:	490b      	ldr	r1, [pc, #44]	@ (8005180 <VibeCheckWaveGenSender_Execute+0x70>)
 8005154:	6838      	ldr	r0, [r7, #0]
 8005156:	f7fe fccf 	bl	8003af8 <VibeCheckShell_PutOutputString>
 800515a:	e003      	b.n	8005164 <VibeCheckWaveGenSender_Execute+0x54>
		else
			VibeCheckShell_PutOutputString(shell, "unmuted");
 800515c:	4909      	ldr	r1, [pc, #36]	@ (8005184 <VibeCheckWaveGenSender_Execute+0x74>)
 800515e:	6838      	ldr	r0, [r7, #0]
 8005160:	f7fe fcca 	bl	8003af8 <VibeCheckShell_PutOutputString>

		VibeCheckShell_PutOutputDelimiter(shell);
 8005164:	6838      	ldr	r0, [r7, #0]
 8005166:	f7fe fd45 	bl	8003bf4 <VibeCheckShell_PutOutputDelimiter>

		return 1;
 800516a:	2301      	movs	r3, #1
 800516c:	e000      	b.n	8005170 <VibeCheckWaveGenSender_Execute+0x60>
	}

	return 0;
 800516e:	2300      	movs	r3, #0
}
 8005170:	4618      	mov	r0, r3
 8005172:	3710      	adds	r7, #16
 8005174:	46bd      	mov	sp, r7
 8005176:	bd80      	pop	{r7, pc}
 8005178:	0801ab50 	.word	0x0801ab50
 800517c:	0801ab54 	.word	0x0801ab54
 8005180:	0801ab5c 	.word	0x0801ab5c
 8005184:	0801ab64 	.word	0x0801ab64

08005188 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
 8005188:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80051c0 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit
 800518c:	f7fd fa06 	bl	800259c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8005190:	480c      	ldr	r0, [pc, #48]	@ (80051c4 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8005192:	490d      	ldr	r1, [pc, #52]	@ (80051c8 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8005194:	4a0d      	ldr	r2, [pc, #52]	@ (80051cc <LoopFillZerobss+0x1a>)
  movs r3, #0
 8005196:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8005198:	e002      	b.n	80051a0 <LoopCopyDataInit>

0800519a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800519a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800519c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800519e:	3304      	adds	r3, #4

080051a0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80051a0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80051a2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80051a4:	d3f9      	bcc.n	800519a <CopyDataInit>
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80051a6:	4a0a      	ldr	r2, [pc, #40]	@ (80051d0 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 80051a8:	4c0a      	ldr	r4, [pc, #40]	@ (80051d4 <LoopFillZerobss+0x22>)
  movs r3, #0
 80051aa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80051ac:	e001      	b.n	80051b2 <LoopFillZerobss>

080051ae <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80051ae:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80051b0:	3204      	adds	r2, #4

080051b2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80051b2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80051b4:	d3fb      	bcc.n	80051ae <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 80051b6:	f012 f903 	bl	80173c0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80051ba:	f7fb fca7 	bl	8000b0c <main>
  bx  lr
 80051be:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80051c0:	24050000 	.word	0x24050000
  ldr r0, =_sdata
 80051c4:	24000000 	.word	0x24000000
  ldr r1, =_edata
 80051c8:	240002cc 	.word	0x240002cc
  ldr r2, =_sidata
 80051cc:	0801b7d0 	.word	0x0801b7d0
  ldr r2, =_sbss
 80051d0:	240002cc 	.word	0x240002cc
  ldr r4, =_ebss
 80051d4:	24006274 	.word	0x24006274

080051d8 <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80051d8:	e7fe      	b.n	80051d8 <ADC3_IRQHandler>
	...

080051dc <HAL_Init>:
 80051dc:	b580      	push	{r7, lr}
 80051de:	b082      	sub	sp, #8
 80051e0:	af00      	add	r7, sp, #0
 80051e2:	2003      	movs	r0, #3
 80051e4:	f001 fcf4 	bl	8006bd0 <HAL_NVIC_SetPriorityGrouping>
 80051e8:	f006 fcbc 	bl	800bb64 <HAL_RCC_GetSysClockFreq>
 80051ec:	4602      	mov	r2, r0
 80051ee:	4b15      	ldr	r3, [pc, #84]	@ (8005244 <HAL_Init+0x68>)
 80051f0:	699b      	ldr	r3, [r3, #24]
 80051f2:	0a1b      	lsrs	r3, r3, #8
 80051f4:	f003 030f 	and.w	r3, r3, #15
 80051f8:	4913      	ldr	r1, [pc, #76]	@ (8005248 <HAL_Init+0x6c>)
 80051fa:	5ccb      	ldrb	r3, [r1, r3]
 80051fc:	f003 031f 	and.w	r3, r3, #31
 8005200:	fa22 f303 	lsr.w	r3, r2, r3
 8005204:	607b      	str	r3, [r7, #4]
 8005206:	4b0f      	ldr	r3, [pc, #60]	@ (8005244 <HAL_Init+0x68>)
 8005208:	699b      	ldr	r3, [r3, #24]
 800520a:	f003 030f 	and.w	r3, r3, #15
 800520e:	4a0e      	ldr	r2, [pc, #56]	@ (8005248 <HAL_Init+0x6c>)
 8005210:	5cd3      	ldrb	r3, [r2, r3]
 8005212:	f003 031f 	and.w	r3, r3, #31
 8005216:	687a      	ldr	r2, [r7, #4]
 8005218:	fa22 f303 	lsr.w	r3, r2, r3
 800521c:	4a0b      	ldr	r2, [pc, #44]	@ (800524c <HAL_Init+0x70>)
 800521e:	6013      	str	r3, [r2, #0]
 8005220:	4a0b      	ldr	r2, [pc, #44]	@ (8005250 <HAL_Init+0x74>)
 8005222:	687b      	ldr	r3, [r7, #4]
 8005224:	6013      	str	r3, [r2, #0]
 8005226:	200f      	movs	r0, #15
 8005228:	f000 f814 	bl	8005254 <HAL_InitTick>
 800522c:	4603      	mov	r3, r0
 800522e:	2b00      	cmp	r3, #0
 8005230:	d001      	beq.n	8005236 <HAL_Init+0x5a>
 8005232:	2301      	movs	r3, #1
 8005234:	e002      	b.n	800523c <HAL_Init+0x60>
 8005236:	f7fc fc03 	bl	8001a40 <HAL_MspInit>
 800523a:	2300      	movs	r3, #0
 800523c:	4618      	mov	r0, r3
 800523e:	3708      	adds	r7, #8
 8005240:	46bd      	mov	sp, r7
 8005242:	bd80      	pop	{r7, pc}
 8005244:	58024400 	.word	0x58024400
 8005248:	0801aba0 	.word	0x0801aba0
 800524c:	24000004 	.word	0x24000004
 8005250:	24000000 	.word	0x24000000

08005254 <HAL_InitTick>:
 8005254:	b580      	push	{r7, lr}
 8005256:	b082      	sub	sp, #8
 8005258:	af00      	add	r7, sp, #0
 800525a:	6078      	str	r0, [r7, #4]
 800525c:	4b15      	ldr	r3, [pc, #84]	@ (80052b4 <HAL_InitTick+0x60>)
 800525e:	781b      	ldrb	r3, [r3, #0]
 8005260:	2b00      	cmp	r3, #0
 8005262:	d101      	bne.n	8005268 <HAL_InitTick+0x14>
 8005264:	2301      	movs	r3, #1
 8005266:	e021      	b.n	80052ac <HAL_InitTick+0x58>
 8005268:	4b13      	ldr	r3, [pc, #76]	@ (80052b8 <HAL_InitTick+0x64>)
 800526a:	681a      	ldr	r2, [r3, #0]
 800526c:	4b11      	ldr	r3, [pc, #68]	@ (80052b4 <HAL_InitTick+0x60>)
 800526e:	781b      	ldrb	r3, [r3, #0]
 8005270:	4619      	mov	r1, r3
 8005272:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8005276:	fbb3 f3f1 	udiv	r3, r3, r1
 800527a:	fbb2 f3f3 	udiv	r3, r2, r3
 800527e:	4618      	mov	r0, r3
 8005280:	f001 fcd9 	bl	8006c36 <HAL_SYSTICK_Config>
 8005284:	4603      	mov	r3, r0
 8005286:	2b00      	cmp	r3, #0
 8005288:	d001      	beq.n	800528e <HAL_InitTick+0x3a>
 800528a:	2301      	movs	r3, #1
 800528c:	e00e      	b.n	80052ac <HAL_InitTick+0x58>
 800528e:	687b      	ldr	r3, [r7, #4]
 8005290:	2b0f      	cmp	r3, #15
 8005292:	d80a      	bhi.n	80052aa <HAL_InitTick+0x56>
 8005294:	2200      	movs	r2, #0
 8005296:	6879      	ldr	r1, [r7, #4]
 8005298:	f04f 30ff 	mov.w	r0, #4294967295
 800529c:	f001 fca3 	bl	8006be6 <HAL_NVIC_SetPriority>
 80052a0:	4a06      	ldr	r2, [pc, #24]	@ (80052bc <HAL_InitTick+0x68>)
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	6013      	str	r3, [r2, #0]
 80052a6:	2300      	movs	r3, #0
 80052a8:	e000      	b.n	80052ac <HAL_InitTick+0x58>
 80052aa:	2301      	movs	r3, #1
 80052ac:	4618      	mov	r0, r3
 80052ae:	3708      	adds	r7, #8
 80052b0:	46bd      	mov	sp, r7
 80052b2:	bd80      	pop	{r7, pc}
 80052b4:	2400000c 	.word	0x2400000c
 80052b8:	24000000 	.word	0x24000000
 80052bc:	24000008 	.word	0x24000008

080052c0 <HAL_IncTick>:
 80052c0:	b480      	push	{r7}
 80052c2:	af00      	add	r7, sp, #0
 80052c4:	4b06      	ldr	r3, [pc, #24]	@ (80052e0 <HAL_IncTick+0x20>)
 80052c6:	781b      	ldrb	r3, [r3, #0]
 80052c8:	461a      	mov	r2, r3
 80052ca:	4b06      	ldr	r3, [pc, #24]	@ (80052e4 <HAL_IncTick+0x24>)
 80052cc:	681b      	ldr	r3, [r3, #0]
 80052ce:	4413      	add	r3, r2
 80052d0:	4a04      	ldr	r2, [pc, #16]	@ (80052e4 <HAL_IncTick+0x24>)
 80052d2:	6013      	str	r3, [r2, #0]
 80052d4:	bf00      	nop
 80052d6:	46bd      	mov	sp, r7
 80052d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052dc:	4770      	bx	lr
 80052de:	bf00      	nop
 80052e0:	2400000c 	.word	0x2400000c
 80052e4:	24004540 	.word	0x24004540

080052e8 <HAL_GetTick>:
 80052e8:	b480      	push	{r7}
 80052ea:	af00      	add	r7, sp, #0
 80052ec:	4b03      	ldr	r3, [pc, #12]	@ (80052fc <HAL_GetTick+0x14>)
 80052ee:	681b      	ldr	r3, [r3, #0]
 80052f0:	4618      	mov	r0, r3
 80052f2:	46bd      	mov	sp, r7
 80052f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052f8:	4770      	bx	lr
 80052fa:	bf00      	nop
 80052fc:	24004540 	.word	0x24004540

08005300 <HAL_Delay>:
 8005300:	b580      	push	{r7, lr}
 8005302:	b084      	sub	sp, #16
 8005304:	af00      	add	r7, sp, #0
 8005306:	6078      	str	r0, [r7, #4]
 8005308:	f7ff ffee 	bl	80052e8 <HAL_GetTick>
 800530c:	60b8      	str	r0, [r7, #8]
 800530e:	687b      	ldr	r3, [r7, #4]
 8005310:	60fb      	str	r3, [r7, #12]
 8005312:	68fb      	ldr	r3, [r7, #12]
 8005314:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005318:	d005      	beq.n	8005326 <HAL_Delay+0x26>
 800531a:	4b0a      	ldr	r3, [pc, #40]	@ (8005344 <HAL_Delay+0x44>)
 800531c:	781b      	ldrb	r3, [r3, #0]
 800531e:	461a      	mov	r2, r3
 8005320:	68fb      	ldr	r3, [r7, #12]
 8005322:	4413      	add	r3, r2
 8005324:	60fb      	str	r3, [r7, #12]
 8005326:	bf00      	nop
 8005328:	f7ff ffde 	bl	80052e8 <HAL_GetTick>
 800532c:	4602      	mov	r2, r0
 800532e:	68bb      	ldr	r3, [r7, #8]
 8005330:	1ad3      	subs	r3, r2, r3
 8005332:	68fa      	ldr	r2, [r7, #12]
 8005334:	429a      	cmp	r2, r3
 8005336:	d8f7      	bhi.n	8005328 <HAL_Delay+0x28>
 8005338:	bf00      	nop
 800533a:	bf00      	nop
 800533c:	3710      	adds	r7, #16
 800533e:	46bd      	mov	sp, r7
 8005340:	bd80      	pop	{r7, pc}
 8005342:	bf00      	nop
 8005344:	2400000c 	.word	0x2400000c

08005348 <LL_ADC_SetCommonClock>:
 8005348:	b480      	push	{r7}
 800534a:	b083      	sub	sp, #12
 800534c:	af00      	add	r7, sp, #0
 800534e:	6078      	str	r0, [r7, #4]
 8005350:	6039      	str	r1, [r7, #0]
 8005352:	687b      	ldr	r3, [r7, #4]
 8005354:	689b      	ldr	r3, [r3, #8]
 8005356:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 800535a:	683b      	ldr	r3, [r7, #0]
 800535c:	431a      	orrs	r2, r3
 800535e:	687b      	ldr	r3, [r7, #4]
 8005360:	609a      	str	r2, [r3, #8]
 8005362:	bf00      	nop
 8005364:	370c      	adds	r7, #12
 8005366:	46bd      	mov	sp, r7
 8005368:	f85d 7b04 	ldr.w	r7, [sp], #4
 800536c:	4770      	bx	lr

0800536e <LL_ADC_SetCommonPathInternalCh>:
 800536e:	b480      	push	{r7}
 8005370:	b083      	sub	sp, #12
 8005372:	af00      	add	r7, sp, #0
 8005374:	6078      	str	r0, [r7, #4]
 8005376:	6039      	str	r1, [r7, #0]
 8005378:	687b      	ldr	r3, [r7, #4]
 800537a:	689b      	ldr	r3, [r3, #8]
 800537c:	f023 72e0 	bic.w	r2, r3, #29360128	@ 0x1c00000
 8005380:	683b      	ldr	r3, [r7, #0]
 8005382:	431a      	orrs	r2, r3
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	609a      	str	r2, [r3, #8]
 8005388:	bf00      	nop
 800538a:	370c      	adds	r7, #12
 800538c:	46bd      	mov	sp, r7
 800538e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005392:	4770      	bx	lr

08005394 <LL_ADC_GetCommonPathInternalCh>:
 8005394:	b480      	push	{r7}
 8005396:	b083      	sub	sp, #12
 8005398:	af00      	add	r7, sp, #0
 800539a:	6078      	str	r0, [r7, #4]
 800539c:	687b      	ldr	r3, [r7, #4]
 800539e:	689b      	ldr	r3, [r3, #8]
 80053a0:	f003 73e0 	and.w	r3, r3, #29360128	@ 0x1c00000
 80053a4:	4618      	mov	r0, r3
 80053a6:	370c      	adds	r7, #12
 80053a8:	46bd      	mov	sp, r7
 80053aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053ae:	4770      	bx	lr

080053b0 <LL_ADC_SetOffset>:
 80053b0:	b480      	push	{r7}
 80053b2:	b087      	sub	sp, #28
 80053b4:	af00      	add	r7, sp, #0
 80053b6:	60f8      	str	r0, [r7, #12]
 80053b8:	60b9      	str	r1, [r7, #8]
 80053ba:	607a      	str	r2, [r7, #4]
 80053bc:	603b      	str	r3, [r7, #0]
 80053be:	68fb      	ldr	r3, [r7, #12]
 80053c0:	3360      	adds	r3, #96	@ 0x60
 80053c2:	461a      	mov	r2, r3
 80053c4:	68bb      	ldr	r3, [r7, #8]
 80053c6:	009b      	lsls	r3, r3, #2
 80053c8:	4413      	add	r3, r2
 80053ca:	617b      	str	r3, [r7, #20]
 80053cc:	68fb      	ldr	r3, [r7, #12]
 80053ce:	4a10      	ldr	r2, [pc, #64]	@ (8005410 <LL_ADC_SetOffset+0x60>)
 80053d0:	4293      	cmp	r3, r2
 80053d2:	d10b      	bne.n	80053ec <LL_ADC_SetOffset+0x3c>
 80053d4:	697b      	ldr	r3, [r7, #20]
 80053d6:	681b      	ldr	r3, [r3, #0]
 80053d8:	687b      	ldr	r3, [r7, #4]
 80053da:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 80053de:	683b      	ldr	r3, [r7, #0]
 80053e0:	4313      	orrs	r3, r2
 80053e2:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 80053e6:	697b      	ldr	r3, [r7, #20]
 80053e8:	601a      	str	r2, [r3, #0]
 80053ea:	e00b      	b.n	8005404 <LL_ADC_SetOffset+0x54>
 80053ec:	697b      	ldr	r3, [r7, #20]
 80053ee:	681b      	ldr	r3, [r3, #0]
 80053f0:	f003 4200 	and.w	r2, r3, #2147483648	@ 0x80000000
 80053f4:	687b      	ldr	r3, [r7, #4]
 80053f6:	f003 41f8 	and.w	r1, r3, #2080374784	@ 0x7c000000
 80053fa:	683b      	ldr	r3, [r7, #0]
 80053fc:	430b      	orrs	r3, r1
 80053fe:	431a      	orrs	r2, r3
 8005400:	697b      	ldr	r3, [r7, #20]
 8005402:	601a      	str	r2, [r3, #0]
 8005404:	bf00      	nop
 8005406:	371c      	adds	r7, #28
 8005408:	46bd      	mov	sp, r7
 800540a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800540e:	4770      	bx	lr
 8005410:	58026000 	.word	0x58026000

08005414 <LL_ADC_GetOffsetChannel>:
 8005414:	b480      	push	{r7}
 8005416:	b085      	sub	sp, #20
 8005418:	af00      	add	r7, sp, #0
 800541a:	6078      	str	r0, [r7, #4]
 800541c:	6039      	str	r1, [r7, #0]
 800541e:	687b      	ldr	r3, [r7, #4]
 8005420:	3360      	adds	r3, #96	@ 0x60
 8005422:	461a      	mov	r2, r3
 8005424:	683b      	ldr	r3, [r7, #0]
 8005426:	009b      	lsls	r3, r3, #2
 8005428:	4413      	add	r3, r2
 800542a:	60fb      	str	r3, [r7, #12]
 800542c:	68fb      	ldr	r3, [r7, #12]
 800542e:	681b      	ldr	r3, [r3, #0]
 8005430:	f003 43f8 	and.w	r3, r3, #2080374784	@ 0x7c000000
 8005434:	4618      	mov	r0, r3
 8005436:	3714      	adds	r7, #20
 8005438:	46bd      	mov	sp, r7
 800543a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800543e:	4770      	bx	lr

08005440 <LL_ADC_SetDataRightShift>:
 8005440:	b480      	push	{r7}
 8005442:	b085      	sub	sp, #20
 8005444:	af00      	add	r7, sp, #0
 8005446:	60f8      	str	r0, [r7, #12]
 8005448:	60b9      	str	r1, [r7, #8]
 800544a:	607a      	str	r2, [r7, #4]
 800544c:	68fb      	ldr	r3, [r7, #12]
 800544e:	691b      	ldr	r3, [r3, #16]
 8005450:	f423 42f0 	bic.w	r2, r3, #30720	@ 0x7800
 8005454:	68bb      	ldr	r3, [r7, #8]
 8005456:	f003 031f 	and.w	r3, r3, #31
 800545a:	6879      	ldr	r1, [r7, #4]
 800545c:	fa01 f303 	lsl.w	r3, r1, r3
 8005460:	431a      	orrs	r2, r3
 8005462:	68fb      	ldr	r3, [r7, #12]
 8005464:	611a      	str	r2, [r3, #16]
 8005466:	bf00      	nop
 8005468:	3714      	adds	r7, #20
 800546a:	46bd      	mov	sp, r7
 800546c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005470:	4770      	bx	lr
	...

08005474 <LL_ADC_SetOffsetSignedSaturation>:
 8005474:	b480      	push	{r7}
 8005476:	b087      	sub	sp, #28
 8005478:	af00      	add	r7, sp, #0
 800547a:	60f8      	str	r0, [r7, #12]
 800547c:	60b9      	str	r1, [r7, #8]
 800547e:	607a      	str	r2, [r7, #4]
 8005480:	68fb      	ldr	r3, [r7, #12]
 8005482:	4a0c      	ldr	r2, [pc, #48]	@ (80054b4 <LL_ADC_SetOffsetSignedSaturation+0x40>)
 8005484:	4293      	cmp	r3, r2
 8005486:	d00e      	beq.n	80054a6 <LL_ADC_SetOffsetSignedSaturation+0x32>
 8005488:	68fb      	ldr	r3, [r7, #12]
 800548a:	3360      	adds	r3, #96	@ 0x60
 800548c:	461a      	mov	r2, r3
 800548e:	68bb      	ldr	r3, [r7, #8]
 8005490:	009b      	lsls	r3, r3, #2
 8005492:	4413      	add	r3, r2
 8005494:	617b      	str	r3, [r7, #20]
 8005496:	697b      	ldr	r3, [r7, #20]
 8005498:	681b      	ldr	r3, [r3, #0]
 800549a:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 800549e:	687b      	ldr	r3, [r7, #4]
 80054a0:	431a      	orrs	r2, r3
 80054a2:	697b      	ldr	r3, [r7, #20]
 80054a4:	601a      	str	r2, [r3, #0]
 80054a6:	bf00      	nop
 80054a8:	371c      	adds	r7, #28
 80054aa:	46bd      	mov	sp, r7
 80054ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054b0:	4770      	bx	lr
 80054b2:	bf00      	nop
 80054b4:	58026000 	.word	0x58026000

080054b8 <LL_ADC_SetOffsetSaturation>:
 80054b8:	b480      	push	{r7}
 80054ba:	b087      	sub	sp, #28
 80054bc:	af00      	add	r7, sp, #0
 80054be:	60f8      	str	r0, [r7, #12]
 80054c0:	60b9      	str	r1, [r7, #8]
 80054c2:	607a      	str	r2, [r7, #4]
 80054c4:	68fb      	ldr	r3, [r7, #12]
 80054c6:	4a0c      	ldr	r2, [pc, #48]	@ (80054f8 <LL_ADC_SetOffsetSaturation+0x40>)
 80054c8:	4293      	cmp	r3, r2
 80054ca:	d10e      	bne.n	80054ea <LL_ADC_SetOffsetSaturation+0x32>
 80054cc:	68fb      	ldr	r3, [r7, #12]
 80054ce:	3360      	adds	r3, #96	@ 0x60
 80054d0:	461a      	mov	r2, r3
 80054d2:	68bb      	ldr	r3, [r7, #8]
 80054d4:	009b      	lsls	r3, r3, #2
 80054d6:	4413      	add	r3, r2
 80054d8:	617b      	str	r3, [r7, #20]
 80054da:	697b      	ldr	r3, [r7, #20]
 80054dc:	681b      	ldr	r3, [r3, #0]
 80054de:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 80054e2:	687b      	ldr	r3, [r7, #4]
 80054e4:	431a      	orrs	r2, r3
 80054e6:	697b      	ldr	r3, [r7, #20]
 80054e8:	601a      	str	r2, [r3, #0]
 80054ea:	bf00      	nop
 80054ec:	371c      	adds	r7, #28
 80054ee:	46bd      	mov	sp, r7
 80054f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054f4:	4770      	bx	lr
 80054f6:	bf00      	nop
 80054f8:	58026000 	.word	0x58026000

080054fc <LL_ADC_SetOffsetSign>:
 80054fc:	b480      	push	{r7}
 80054fe:	b087      	sub	sp, #28
 8005500:	af00      	add	r7, sp, #0
 8005502:	60f8      	str	r0, [r7, #12]
 8005504:	60b9      	str	r1, [r7, #8]
 8005506:	607a      	str	r2, [r7, #4]
 8005508:	68fb      	ldr	r3, [r7, #12]
 800550a:	4a0c      	ldr	r2, [pc, #48]	@ (800553c <LL_ADC_SetOffsetSign+0x40>)
 800550c:	4293      	cmp	r3, r2
 800550e:	d10e      	bne.n	800552e <LL_ADC_SetOffsetSign+0x32>
 8005510:	68fb      	ldr	r3, [r7, #12]
 8005512:	3360      	adds	r3, #96	@ 0x60
 8005514:	461a      	mov	r2, r3
 8005516:	68bb      	ldr	r3, [r7, #8]
 8005518:	009b      	lsls	r3, r3, #2
 800551a:	4413      	add	r3, r2
 800551c:	617b      	str	r3, [r7, #20]
 800551e:	697b      	ldr	r3, [r7, #20]
 8005520:	681b      	ldr	r3, [r3, #0]
 8005522:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8005526:	687b      	ldr	r3, [r7, #4]
 8005528:	431a      	orrs	r2, r3
 800552a:	697b      	ldr	r3, [r7, #20]
 800552c:	601a      	str	r2, [r3, #0]
 800552e:	bf00      	nop
 8005530:	371c      	adds	r7, #28
 8005532:	46bd      	mov	sp, r7
 8005534:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005538:	4770      	bx	lr
 800553a:	bf00      	nop
 800553c:	58026000 	.word	0x58026000

08005540 <LL_ADC_SetOffsetState>:
 8005540:	b480      	push	{r7}
 8005542:	b087      	sub	sp, #28
 8005544:	af00      	add	r7, sp, #0
 8005546:	60f8      	str	r0, [r7, #12]
 8005548:	60b9      	str	r1, [r7, #8]
 800554a:	607a      	str	r2, [r7, #4]
 800554c:	68fb      	ldr	r3, [r7, #12]
 800554e:	3360      	adds	r3, #96	@ 0x60
 8005550:	461a      	mov	r2, r3
 8005552:	68bb      	ldr	r3, [r7, #8]
 8005554:	009b      	lsls	r3, r3, #2
 8005556:	4413      	add	r3, r2
 8005558:	617b      	str	r3, [r7, #20]
 800555a:	68fb      	ldr	r3, [r7, #12]
 800555c:	4a0c      	ldr	r2, [pc, #48]	@ (8005590 <LL_ADC_SetOffsetState+0x50>)
 800555e:	4293      	cmp	r3, r2
 8005560:	d108      	bne.n	8005574 <LL_ADC_SetOffsetState+0x34>
 8005562:	697b      	ldr	r3, [r7, #20]
 8005564:	681b      	ldr	r3, [r3, #0]
 8005566:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 800556a:	687b      	ldr	r3, [r7, #4]
 800556c:	431a      	orrs	r2, r3
 800556e:	697b      	ldr	r3, [r7, #20]
 8005570:	601a      	str	r2, [r3, #0]
 8005572:	e007      	b.n	8005584 <LL_ADC_SetOffsetState+0x44>
 8005574:	697b      	ldr	r3, [r7, #20]
 8005576:	681b      	ldr	r3, [r3, #0]
 8005578:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 800557c:	687b      	ldr	r3, [r7, #4]
 800557e:	431a      	orrs	r2, r3
 8005580:	697b      	ldr	r3, [r7, #20]
 8005582:	601a      	str	r2, [r3, #0]
 8005584:	bf00      	nop
 8005586:	371c      	adds	r7, #28
 8005588:	46bd      	mov	sp, r7
 800558a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800558e:	4770      	bx	lr
 8005590:	58026000 	.word	0x58026000

08005594 <LL_ADC_REG_SetSequencerRanks>:
 8005594:	b480      	push	{r7}
 8005596:	b087      	sub	sp, #28
 8005598:	af00      	add	r7, sp, #0
 800559a:	60f8      	str	r0, [r7, #12]
 800559c:	60b9      	str	r1, [r7, #8]
 800559e:	607a      	str	r2, [r7, #4]
 80055a0:	68fb      	ldr	r3, [r7, #12]
 80055a2:	3330      	adds	r3, #48	@ 0x30
 80055a4:	461a      	mov	r2, r3
 80055a6:	68bb      	ldr	r3, [r7, #8]
 80055a8:	0a1b      	lsrs	r3, r3, #8
 80055aa:	009b      	lsls	r3, r3, #2
 80055ac:	f003 030c 	and.w	r3, r3, #12
 80055b0:	4413      	add	r3, r2
 80055b2:	617b      	str	r3, [r7, #20]
 80055b4:	697b      	ldr	r3, [r7, #20]
 80055b6:	681a      	ldr	r2, [r3, #0]
 80055b8:	68bb      	ldr	r3, [r7, #8]
 80055ba:	f003 031f 	and.w	r3, r3, #31
 80055be:	211f      	movs	r1, #31
 80055c0:	fa01 f303 	lsl.w	r3, r1, r3
 80055c4:	43db      	mvns	r3, r3
 80055c6:	401a      	ands	r2, r3
 80055c8:	687b      	ldr	r3, [r7, #4]
 80055ca:	0e9b      	lsrs	r3, r3, #26
 80055cc:	f003 011f 	and.w	r1, r3, #31
 80055d0:	68bb      	ldr	r3, [r7, #8]
 80055d2:	f003 031f 	and.w	r3, r3, #31
 80055d6:	fa01 f303 	lsl.w	r3, r1, r3
 80055da:	431a      	orrs	r2, r3
 80055dc:	697b      	ldr	r3, [r7, #20]
 80055de:	601a      	str	r2, [r3, #0]
 80055e0:	bf00      	nop
 80055e2:	371c      	adds	r7, #28
 80055e4:	46bd      	mov	sp, r7
 80055e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055ea:	4770      	bx	lr

080055ec <LL_ADC_SetChannelSamplingTime>:
 80055ec:	b480      	push	{r7}
 80055ee:	b087      	sub	sp, #28
 80055f0:	af00      	add	r7, sp, #0
 80055f2:	60f8      	str	r0, [r7, #12]
 80055f4:	60b9      	str	r1, [r7, #8]
 80055f6:	607a      	str	r2, [r7, #4]
 80055f8:	68fb      	ldr	r3, [r7, #12]
 80055fa:	3314      	adds	r3, #20
 80055fc:	461a      	mov	r2, r3
 80055fe:	68bb      	ldr	r3, [r7, #8]
 8005600:	0e5b      	lsrs	r3, r3, #25
 8005602:	009b      	lsls	r3, r3, #2
 8005604:	f003 0304 	and.w	r3, r3, #4
 8005608:	4413      	add	r3, r2
 800560a:	617b      	str	r3, [r7, #20]
 800560c:	697b      	ldr	r3, [r7, #20]
 800560e:	681a      	ldr	r2, [r3, #0]
 8005610:	68bb      	ldr	r3, [r7, #8]
 8005612:	0d1b      	lsrs	r3, r3, #20
 8005614:	f003 031f 	and.w	r3, r3, #31
 8005618:	2107      	movs	r1, #7
 800561a:	fa01 f303 	lsl.w	r3, r1, r3
 800561e:	43db      	mvns	r3, r3
 8005620:	401a      	ands	r2, r3
 8005622:	68bb      	ldr	r3, [r7, #8]
 8005624:	0d1b      	lsrs	r3, r3, #20
 8005626:	f003 031f 	and.w	r3, r3, #31
 800562a:	6879      	ldr	r1, [r7, #4]
 800562c:	fa01 f303 	lsl.w	r3, r1, r3
 8005630:	431a      	orrs	r2, r3
 8005632:	697b      	ldr	r3, [r7, #20]
 8005634:	601a      	str	r2, [r3, #0]
 8005636:	bf00      	nop
 8005638:	371c      	adds	r7, #28
 800563a:	46bd      	mov	sp, r7
 800563c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005640:	4770      	bx	lr
	...

08005644 <LL_ADC_SetChannelSingleDiff>:
 8005644:	b480      	push	{r7}
 8005646:	b085      	sub	sp, #20
 8005648:	af00      	add	r7, sp, #0
 800564a:	60f8      	str	r0, [r7, #12]
 800564c:	60b9      	str	r1, [r7, #8]
 800564e:	607a      	str	r2, [r7, #4]
 8005650:	68fb      	ldr	r3, [r7, #12]
 8005652:	4a1a      	ldr	r2, [pc, #104]	@ (80056bc <LL_ADC_SetChannelSingleDiff+0x78>)
 8005654:	4293      	cmp	r3, r2
 8005656:	d115      	bne.n	8005684 <LL_ADC_SetChannelSingleDiff+0x40>
 8005658:	68fb      	ldr	r3, [r7, #12]
 800565a:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 800565e:	68bb      	ldr	r3, [r7, #8]
 8005660:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005664:	43db      	mvns	r3, r3
 8005666:	401a      	ands	r2, r3
 8005668:	687b      	ldr	r3, [r7, #4]
 800566a:	f003 0318 	and.w	r3, r3, #24
 800566e:	4914      	ldr	r1, [pc, #80]	@ (80056c0 <LL_ADC_SetChannelSingleDiff+0x7c>)
 8005670:	40d9      	lsrs	r1, r3
 8005672:	68bb      	ldr	r3, [r7, #8]
 8005674:	400b      	ands	r3, r1
 8005676:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800567a:	431a      	orrs	r2, r3
 800567c:	68fb      	ldr	r3, [r7, #12]
 800567e:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 8005682:	e014      	b.n	80056ae <LL_ADC_SetChannelSingleDiff+0x6a>
 8005684:	68fb      	ldr	r3, [r7, #12]
 8005686:	f8d3 20c0 	ldr.w	r2, [r3, #192]	@ 0xc0
 800568a:	68bb      	ldr	r3, [r7, #8]
 800568c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005690:	43db      	mvns	r3, r3
 8005692:	401a      	ands	r2, r3
 8005694:	687b      	ldr	r3, [r7, #4]
 8005696:	f003 0318 	and.w	r3, r3, #24
 800569a:	4909      	ldr	r1, [pc, #36]	@ (80056c0 <LL_ADC_SetChannelSingleDiff+0x7c>)
 800569c:	40d9      	lsrs	r1, r3
 800569e:	68bb      	ldr	r3, [r7, #8]
 80056a0:	400b      	ands	r3, r1
 80056a2:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80056a6:	431a      	orrs	r2, r3
 80056a8:	68fb      	ldr	r3, [r7, #12]
 80056aa:	f8c3 20c0 	str.w	r2, [r3, #192]	@ 0xc0
 80056ae:	bf00      	nop
 80056b0:	3714      	adds	r7, #20
 80056b2:	46bd      	mov	sp, r7
 80056b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056b8:	4770      	bx	lr
 80056ba:	bf00      	nop
 80056bc:	58026000 	.word	0x58026000
 80056c0:	000fffff 	.word	0x000fffff

080056c4 <LL_ADC_DisableDeepPowerDown>:
 80056c4:	b480      	push	{r7}
 80056c6:	b083      	sub	sp, #12
 80056c8:	af00      	add	r7, sp, #0
 80056ca:	6078      	str	r0, [r7, #4]
 80056cc:	687b      	ldr	r3, [r7, #4]
 80056ce:	689a      	ldr	r2, [r3, #8]
 80056d0:	4b04      	ldr	r3, [pc, #16]	@ (80056e4 <LL_ADC_DisableDeepPowerDown+0x20>)
 80056d2:	4013      	ands	r3, r2
 80056d4:	687a      	ldr	r2, [r7, #4]
 80056d6:	6093      	str	r3, [r2, #8]
 80056d8:	bf00      	nop
 80056da:	370c      	adds	r7, #12
 80056dc:	46bd      	mov	sp, r7
 80056de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056e2:	4770      	bx	lr
 80056e4:	5fffffc0 	.word	0x5fffffc0

080056e8 <LL_ADC_IsDeepPowerDownEnabled>:
 80056e8:	b480      	push	{r7}
 80056ea:	b083      	sub	sp, #12
 80056ec:	af00      	add	r7, sp, #0
 80056ee:	6078      	str	r0, [r7, #4]
 80056f0:	687b      	ldr	r3, [r7, #4]
 80056f2:	689b      	ldr	r3, [r3, #8]
 80056f4:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 80056f8:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80056fc:	d101      	bne.n	8005702 <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 80056fe:	2301      	movs	r3, #1
 8005700:	e000      	b.n	8005704 <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 8005702:	2300      	movs	r3, #0
 8005704:	4618      	mov	r0, r3
 8005706:	370c      	adds	r7, #12
 8005708:	46bd      	mov	sp, r7
 800570a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800570e:	4770      	bx	lr

08005710 <LL_ADC_EnableInternalRegulator>:
 8005710:	b480      	push	{r7}
 8005712:	b083      	sub	sp, #12
 8005714:	af00      	add	r7, sp, #0
 8005716:	6078      	str	r0, [r7, #4]
 8005718:	687b      	ldr	r3, [r7, #4]
 800571a:	689a      	ldr	r2, [r3, #8]
 800571c:	4b05      	ldr	r3, [pc, #20]	@ (8005734 <LL_ADC_EnableInternalRegulator+0x24>)
 800571e:	4013      	ands	r3, r2
 8005720:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 8005724:	687b      	ldr	r3, [r7, #4]
 8005726:	609a      	str	r2, [r3, #8]
 8005728:	bf00      	nop
 800572a:	370c      	adds	r7, #12
 800572c:	46bd      	mov	sp, r7
 800572e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005732:	4770      	bx	lr
 8005734:	6fffffc0 	.word	0x6fffffc0

08005738 <LL_ADC_IsInternalRegulatorEnabled>:
 8005738:	b480      	push	{r7}
 800573a:	b083      	sub	sp, #12
 800573c:	af00      	add	r7, sp, #0
 800573e:	6078      	str	r0, [r7, #4]
 8005740:	687b      	ldr	r3, [r7, #4]
 8005742:	689b      	ldr	r3, [r3, #8]
 8005744:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005748:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800574c:	d101      	bne.n	8005752 <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 800574e:	2301      	movs	r3, #1
 8005750:	e000      	b.n	8005754 <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 8005752:	2300      	movs	r3, #0
 8005754:	4618      	mov	r0, r3
 8005756:	370c      	adds	r7, #12
 8005758:	46bd      	mov	sp, r7
 800575a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800575e:	4770      	bx	lr

08005760 <LL_ADC_IsEnabled>:
 8005760:	b480      	push	{r7}
 8005762:	b083      	sub	sp, #12
 8005764:	af00      	add	r7, sp, #0
 8005766:	6078      	str	r0, [r7, #4]
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	689b      	ldr	r3, [r3, #8]
 800576c:	f003 0301 	and.w	r3, r3, #1
 8005770:	2b01      	cmp	r3, #1
 8005772:	d101      	bne.n	8005778 <LL_ADC_IsEnabled+0x18>
 8005774:	2301      	movs	r3, #1
 8005776:	e000      	b.n	800577a <LL_ADC_IsEnabled+0x1a>
 8005778:	2300      	movs	r3, #0
 800577a:	4618      	mov	r0, r3
 800577c:	370c      	adds	r7, #12
 800577e:	46bd      	mov	sp, r7
 8005780:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005784:	4770      	bx	lr

08005786 <LL_ADC_REG_IsConversionOngoing>:
 8005786:	b480      	push	{r7}
 8005788:	b083      	sub	sp, #12
 800578a:	af00      	add	r7, sp, #0
 800578c:	6078      	str	r0, [r7, #4]
 800578e:	687b      	ldr	r3, [r7, #4]
 8005790:	689b      	ldr	r3, [r3, #8]
 8005792:	f003 0304 	and.w	r3, r3, #4
 8005796:	2b04      	cmp	r3, #4
 8005798:	d101      	bne.n	800579e <LL_ADC_REG_IsConversionOngoing+0x18>
 800579a:	2301      	movs	r3, #1
 800579c:	e000      	b.n	80057a0 <LL_ADC_REG_IsConversionOngoing+0x1a>
 800579e:	2300      	movs	r3, #0
 80057a0:	4618      	mov	r0, r3
 80057a2:	370c      	adds	r7, #12
 80057a4:	46bd      	mov	sp, r7
 80057a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057aa:	4770      	bx	lr

080057ac <LL_ADC_INJ_IsConversionOngoing>:
 80057ac:	b480      	push	{r7}
 80057ae:	b083      	sub	sp, #12
 80057b0:	af00      	add	r7, sp, #0
 80057b2:	6078      	str	r0, [r7, #4]
 80057b4:	687b      	ldr	r3, [r7, #4]
 80057b6:	689b      	ldr	r3, [r3, #8]
 80057b8:	f003 0308 	and.w	r3, r3, #8
 80057bc:	2b08      	cmp	r3, #8
 80057be:	d101      	bne.n	80057c4 <LL_ADC_INJ_IsConversionOngoing+0x18>
 80057c0:	2301      	movs	r3, #1
 80057c2:	e000      	b.n	80057c6 <LL_ADC_INJ_IsConversionOngoing+0x1a>
 80057c4:	2300      	movs	r3, #0
 80057c6:	4618      	mov	r0, r3
 80057c8:	370c      	adds	r7, #12
 80057ca:	46bd      	mov	sp, r7
 80057cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057d0:	4770      	bx	lr
	...

080057d4 <HAL_ADC_Init>:
 80057d4:	b590      	push	{r4, r7, lr}
 80057d6:	b089      	sub	sp, #36	@ 0x24
 80057d8:	af00      	add	r7, sp, #0
 80057da:	6078      	str	r0, [r7, #4]
 80057dc:	2300      	movs	r3, #0
 80057de:	77fb      	strb	r3, [r7, #31]
 80057e0:	2300      	movs	r3, #0
 80057e2:	60bb      	str	r3, [r7, #8]
 80057e4:	687b      	ldr	r3, [r7, #4]
 80057e6:	2b00      	cmp	r3, #0
 80057e8:	d101      	bne.n	80057ee <HAL_ADC_Init+0x1a>
 80057ea:	2301      	movs	r3, #1
 80057ec:	e1ee      	b.n	8005bcc <HAL_ADC_Init+0x3f8>
 80057ee:	687b      	ldr	r3, [r7, #4]
 80057f0:	691b      	ldr	r3, [r3, #16]
 80057f2:	2b00      	cmp	r3, #0
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80057f8:	2b00      	cmp	r3, #0
 80057fa:	d109      	bne.n	8005810 <HAL_ADC_Init+0x3c>
 80057fc:	6878      	ldr	r0, [r7, #4]
 80057fe:	f7fc f939 	bl	8001a74 <HAL_ADC_MspInit>
 8005802:	687b      	ldr	r3, [r7, #4]
 8005804:	2200      	movs	r2, #0
 8005806:	665a      	str	r2, [r3, #100]	@ 0x64
 8005808:	687b      	ldr	r3, [r7, #4]
 800580a:	2200      	movs	r2, #0
 800580c:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8005810:	687b      	ldr	r3, [r7, #4]
 8005812:	681b      	ldr	r3, [r3, #0]
 8005814:	4618      	mov	r0, r3
 8005816:	f7ff ff67 	bl	80056e8 <LL_ADC_IsDeepPowerDownEnabled>
 800581a:	4603      	mov	r3, r0
 800581c:	2b00      	cmp	r3, #0
 800581e:	d004      	beq.n	800582a <HAL_ADC_Init+0x56>
 8005820:	687b      	ldr	r3, [r7, #4]
 8005822:	681b      	ldr	r3, [r3, #0]
 8005824:	4618      	mov	r0, r3
 8005826:	f7ff ff4d 	bl	80056c4 <LL_ADC_DisableDeepPowerDown>
 800582a:	687b      	ldr	r3, [r7, #4]
 800582c:	681b      	ldr	r3, [r3, #0]
 800582e:	4618      	mov	r0, r3
 8005830:	f7ff ff82 	bl	8005738 <LL_ADC_IsInternalRegulatorEnabled>
 8005834:	4603      	mov	r3, r0
 8005836:	2b00      	cmp	r3, #0
 8005838:	d114      	bne.n	8005864 <HAL_ADC_Init+0x90>
 800583a:	687b      	ldr	r3, [r7, #4]
 800583c:	681b      	ldr	r3, [r3, #0]
 800583e:	4618      	mov	r0, r3
 8005840:	f7ff ff66 	bl	8005710 <LL_ADC_EnableInternalRegulator>
 8005844:	4b8e      	ldr	r3, [pc, #568]	@ (8005a80 <HAL_ADC_Init+0x2ac>)
 8005846:	681b      	ldr	r3, [r3, #0]
 8005848:	099b      	lsrs	r3, r3, #6
 800584a:	4a8e      	ldr	r2, [pc, #568]	@ (8005a84 <HAL_ADC_Init+0x2b0>)
 800584c:	fba2 2303 	umull	r2, r3, r2, r3
 8005850:	099b      	lsrs	r3, r3, #6
 8005852:	3301      	adds	r3, #1
 8005854:	60bb      	str	r3, [r7, #8]
 8005856:	e002      	b.n	800585e <HAL_ADC_Init+0x8a>
 8005858:	68bb      	ldr	r3, [r7, #8]
 800585a:	3b01      	subs	r3, #1
 800585c:	60bb      	str	r3, [r7, #8]
 800585e:	68bb      	ldr	r3, [r7, #8]
 8005860:	2b00      	cmp	r3, #0
 8005862:	d1f9      	bne.n	8005858 <HAL_ADC_Init+0x84>
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	681b      	ldr	r3, [r3, #0]
 8005868:	4618      	mov	r0, r3
 800586a:	f7ff ff65 	bl	8005738 <LL_ADC_IsInternalRegulatorEnabled>
 800586e:	4603      	mov	r3, r0
 8005870:	2b00      	cmp	r3, #0
 8005872:	d10d      	bne.n	8005890 <HAL_ADC_Init+0xbc>
 8005874:	687b      	ldr	r3, [r7, #4]
 8005876:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005878:	f043 0210 	orr.w	r2, r3, #16
 800587c:	687b      	ldr	r3, [r7, #4]
 800587e:	661a      	str	r2, [r3, #96]	@ 0x60
 8005880:	687b      	ldr	r3, [r7, #4]
 8005882:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005884:	f043 0201 	orr.w	r2, r3, #1
 8005888:	687b      	ldr	r3, [r7, #4]
 800588a:	665a      	str	r2, [r3, #100]	@ 0x64
 800588c:	2301      	movs	r3, #1
 800588e:	77fb      	strb	r3, [r7, #31]
 8005890:	687b      	ldr	r3, [r7, #4]
 8005892:	681b      	ldr	r3, [r3, #0]
 8005894:	4618      	mov	r0, r3
 8005896:	f7ff ff76 	bl	8005786 <LL_ADC_REG_IsConversionOngoing>
 800589a:	6178      	str	r0, [r7, #20]
 800589c:	687b      	ldr	r3, [r7, #4]
 800589e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80058a0:	f003 0310 	and.w	r3, r3, #16
 80058a4:	2b00      	cmp	r3, #0
 80058a6:	f040 8188 	bne.w	8005bba <HAL_ADC_Init+0x3e6>
 80058aa:	697b      	ldr	r3, [r7, #20]
 80058ac:	2b00      	cmp	r3, #0
 80058ae:	f040 8184 	bne.w	8005bba <HAL_ADC_Init+0x3e6>
 80058b2:	687b      	ldr	r3, [r7, #4]
 80058b4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80058b6:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 80058ba:	f043 0202 	orr.w	r2, r3, #2
 80058be:	687b      	ldr	r3, [r7, #4]
 80058c0:	661a      	str	r2, [r3, #96]	@ 0x60
 80058c2:	687b      	ldr	r3, [r7, #4]
 80058c4:	681b      	ldr	r3, [r3, #0]
 80058c6:	4618      	mov	r0, r3
 80058c8:	f7ff ff4a 	bl	8005760 <LL_ADC_IsEnabled>
 80058cc:	4603      	mov	r3, r0
 80058ce:	2b00      	cmp	r3, #0
 80058d0:	d136      	bne.n	8005940 <HAL_ADC_Init+0x16c>
 80058d2:	687b      	ldr	r3, [r7, #4]
 80058d4:	681b      	ldr	r3, [r3, #0]
 80058d6:	4a6c      	ldr	r2, [pc, #432]	@ (8005a88 <HAL_ADC_Init+0x2b4>)
 80058d8:	4293      	cmp	r3, r2
 80058da:	d004      	beq.n	80058e6 <HAL_ADC_Init+0x112>
 80058dc:	687b      	ldr	r3, [r7, #4]
 80058de:	681b      	ldr	r3, [r3, #0]
 80058e0:	4a6a      	ldr	r2, [pc, #424]	@ (8005a8c <HAL_ADC_Init+0x2b8>)
 80058e2:	4293      	cmp	r3, r2
 80058e4:	d10e      	bne.n	8005904 <HAL_ADC_Init+0x130>
 80058e6:	4868      	ldr	r0, [pc, #416]	@ (8005a88 <HAL_ADC_Init+0x2b4>)
 80058e8:	f7ff ff3a 	bl	8005760 <LL_ADC_IsEnabled>
 80058ec:	4604      	mov	r4, r0
 80058ee:	4867      	ldr	r0, [pc, #412]	@ (8005a8c <HAL_ADC_Init+0x2b8>)
 80058f0:	f7ff ff36 	bl	8005760 <LL_ADC_IsEnabled>
 80058f4:	4603      	mov	r3, r0
 80058f6:	4323      	orrs	r3, r4
 80058f8:	2b00      	cmp	r3, #0
 80058fa:	bf0c      	ite	eq
 80058fc:	2301      	moveq	r3, #1
 80058fe:	2300      	movne	r3, #0
 8005900:	b2db      	uxtb	r3, r3
 8005902:	e008      	b.n	8005916 <HAL_ADC_Init+0x142>
 8005904:	4862      	ldr	r0, [pc, #392]	@ (8005a90 <HAL_ADC_Init+0x2bc>)
 8005906:	f7ff ff2b 	bl	8005760 <LL_ADC_IsEnabled>
 800590a:	4603      	mov	r3, r0
 800590c:	2b00      	cmp	r3, #0
 800590e:	bf0c      	ite	eq
 8005910:	2301      	moveq	r3, #1
 8005912:	2300      	movne	r3, #0
 8005914:	b2db      	uxtb	r3, r3
 8005916:	2b00      	cmp	r3, #0
 8005918:	d012      	beq.n	8005940 <HAL_ADC_Init+0x16c>
 800591a:	687b      	ldr	r3, [r7, #4]
 800591c:	681b      	ldr	r3, [r3, #0]
 800591e:	4a5a      	ldr	r2, [pc, #360]	@ (8005a88 <HAL_ADC_Init+0x2b4>)
 8005920:	4293      	cmp	r3, r2
 8005922:	d004      	beq.n	800592e <HAL_ADC_Init+0x15a>
 8005924:	687b      	ldr	r3, [r7, #4]
 8005926:	681b      	ldr	r3, [r3, #0]
 8005928:	4a58      	ldr	r2, [pc, #352]	@ (8005a8c <HAL_ADC_Init+0x2b8>)
 800592a:	4293      	cmp	r3, r2
 800592c:	d101      	bne.n	8005932 <HAL_ADC_Init+0x15e>
 800592e:	4a59      	ldr	r2, [pc, #356]	@ (8005a94 <HAL_ADC_Init+0x2c0>)
 8005930:	e000      	b.n	8005934 <HAL_ADC_Init+0x160>
 8005932:	4a59      	ldr	r2, [pc, #356]	@ (8005a98 <HAL_ADC_Init+0x2c4>)
 8005934:	687b      	ldr	r3, [r7, #4]
 8005936:	685b      	ldr	r3, [r3, #4]
 8005938:	4619      	mov	r1, r3
 800593a:	4610      	mov	r0, r2
 800593c:	f7ff fd04 	bl	8005348 <LL_ADC_SetCommonClock>
 8005940:	687b      	ldr	r3, [r7, #4]
 8005942:	681b      	ldr	r3, [r3, #0]
 8005944:	4a52      	ldr	r2, [pc, #328]	@ (8005a90 <HAL_ADC_Init+0x2bc>)
 8005946:	4293      	cmp	r3, r2
 8005948:	d129      	bne.n	800599e <HAL_ADC_Init+0x1ca>
 800594a:	687b      	ldr	r3, [r7, #4]
 800594c:	7e5b      	ldrb	r3, [r3, #25]
 800594e:	035a      	lsls	r2, r3, #13
 8005950:	687b      	ldr	r3, [r7, #4]
 8005952:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005954:	431a      	orrs	r2, r3
 8005956:	687b      	ldr	r3, [r7, #4]
 8005958:	68db      	ldr	r3, [r3, #12]
 800595a:	431a      	orrs	r2, r3
 800595c:	687b      	ldr	r3, [r7, #4]
 800595e:	689b      	ldr	r3, [r3, #8]
 8005960:	2b08      	cmp	r3, #8
 8005962:	d013      	beq.n	800598c <HAL_ADC_Init+0x1b8>
 8005964:	687b      	ldr	r3, [r7, #4]
 8005966:	689b      	ldr	r3, [r3, #8]
 8005968:	2b0c      	cmp	r3, #12
 800596a:	d00d      	beq.n	8005988 <HAL_ADC_Init+0x1b4>
 800596c:	687b      	ldr	r3, [r7, #4]
 800596e:	689b      	ldr	r3, [r3, #8]
 8005970:	2b1c      	cmp	r3, #28
 8005972:	d007      	beq.n	8005984 <HAL_ADC_Init+0x1b0>
 8005974:	687b      	ldr	r3, [r7, #4]
 8005976:	689b      	ldr	r3, [r3, #8]
 8005978:	2b18      	cmp	r3, #24
 800597a:	d101      	bne.n	8005980 <HAL_ADC_Init+0x1ac>
 800597c:	2318      	movs	r3, #24
 800597e:	e006      	b.n	800598e <HAL_ADC_Init+0x1ba>
 8005980:	2300      	movs	r3, #0
 8005982:	e004      	b.n	800598e <HAL_ADC_Init+0x1ba>
 8005984:	2310      	movs	r3, #16
 8005986:	e002      	b.n	800598e <HAL_ADC_Init+0x1ba>
 8005988:	2308      	movs	r3, #8
 800598a:	e000      	b.n	800598e <HAL_ADC_Init+0x1ba>
 800598c:	2300      	movs	r3, #0
 800598e:	431a      	orrs	r2, r3
 8005990:	687b      	ldr	r3, [r7, #4]
 8005992:	f893 3020 	ldrb.w	r3, [r3, #32]
 8005996:	041b      	lsls	r3, r3, #16
 8005998:	4313      	orrs	r3, r2
 800599a:	61bb      	str	r3, [r7, #24]
 800599c:	e00e      	b.n	80059bc <HAL_ADC_Init+0x1e8>
 800599e:	687b      	ldr	r3, [r7, #4]
 80059a0:	7e5b      	ldrb	r3, [r3, #25]
 80059a2:	035a      	lsls	r2, r3, #13
 80059a4:	687b      	ldr	r3, [r7, #4]
 80059a6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80059a8:	431a      	orrs	r2, r3
 80059aa:	687b      	ldr	r3, [r7, #4]
 80059ac:	689b      	ldr	r3, [r3, #8]
 80059ae:	431a      	orrs	r2, r3
 80059b0:	687b      	ldr	r3, [r7, #4]
 80059b2:	f893 3020 	ldrb.w	r3, [r3, #32]
 80059b6:	041b      	lsls	r3, r3, #16
 80059b8:	4313      	orrs	r3, r2
 80059ba:	61bb      	str	r3, [r7, #24]
 80059bc:	687b      	ldr	r3, [r7, #4]
 80059be:	f893 3020 	ldrb.w	r3, [r3, #32]
 80059c2:	2b01      	cmp	r3, #1
 80059c4:	d106      	bne.n	80059d4 <HAL_ADC_Init+0x200>
 80059c6:	687b      	ldr	r3, [r7, #4]
 80059c8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80059ca:	3b01      	subs	r3, #1
 80059cc:	045b      	lsls	r3, r3, #17
 80059ce:	69ba      	ldr	r2, [r7, #24]
 80059d0:	4313      	orrs	r3, r2
 80059d2:	61bb      	str	r3, [r7, #24]
 80059d4:	687b      	ldr	r3, [r7, #4]
 80059d6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80059d8:	2b00      	cmp	r3, #0
 80059da:	d009      	beq.n	80059f0 <HAL_ADC_Init+0x21c>
 80059dc:	687b      	ldr	r3, [r7, #4]
 80059de:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80059e0:	f403 7278 	and.w	r2, r3, #992	@ 0x3e0
 80059e4:	687b      	ldr	r3, [r7, #4]
 80059e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80059e8:	4313      	orrs	r3, r2
 80059ea:	69ba      	ldr	r2, [r7, #24]
 80059ec:	4313      	orrs	r3, r2
 80059ee:	61bb      	str	r3, [r7, #24]
 80059f0:	687b      	ldr	r3, [r7, #4]
 80059f2:	681b      	ldr	r3, [r3, #0]
 80059f4:	4a26      	ldr	r2, [pc, #152]	@ (8005a90 <HAL_ADC_Init+0x2bc>)
 80059f6:	4293      	cmp	r3, r2
 80059f8:	d115      	bne.n	8005a26 <HAL_ADC_Init+0x252>
 80059fa:	687b      	ldr	r3, [r7, #4]
 80059fc:	681b      	ldr	r3, [r3, #0]
 80059fe:	68da      	ldr	r2, [r3, #12]
 8005a00:	4b26      	ldr	r3, [pc, #152]	@ (8005a9c <HAL_ADC_Init+0x2c8>)
 8005a02:	4013      	ands	r3, r2
 8005a04:	687a      	ldr	r2, [r7, #4]
 8005a06:	6812      	ldr	r2, [r2, #0]
 8005a08:	69b9      	ldr	r1, [r7, #24]
 8005a0a:	430b      	orrs	r3, r1
 8005a0c:	60d3      	str	r3, [r2, #12]
 8005a0e:	687b      	ldr	r3, [r7, #4]
 8005a10:	681b      	ldr	r3, [r3, #0]
 8005a12:	691b      	ldr	r3, [r3, #16]
 8005a14:	f023 6140 	bic.w	r1, r3, #201326592	@ 0xc000000
 8005a18:	687b      	ldr	r3, [r7, #4]
 8005a1a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005a1c:	687b      	ldr	r3, [r7, #4]
 8005a1e:	681b      	ldr	r3, [r3, #0]
 8005a20:	430a      	orrs	r2, r1
 8005a22:	611a      	str	r2, [r3, #16]
 8005a24:	e009      	b.n	8005a3a <HAL_ADC_Init+0x266>
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	681b      	ldr	r3, [r3, #0]
 8005a2a:	68da      	ldr	r2, [r3, #12]
 8005a2c:	4b1c      	ldr	r3, [pc, #112]	@ (8005aa0 <HAL_ADC_Init+0x2cc>)
 8005a2e:	4013      	ands	r3, r2
 8005a30:	687a      	ldr	r2, [r7, #4]
 8005a32:	6812      	ldr	r2, [r2, #0]
 8005a34:	69b9      	ldr	r1, [r7, #24]
 8005a36:	430b      	orrs	r3, r1
 8005a38:	60d3      	str	r3, [r2, #12]
 8005a3a:	687b      	ldr	r3, [r7, #4]
 8005a3c:	681b      	ldr	r3, [r3, #0]
 8005a3e:	4618      	mov	r0, r3
 8005a40:	f7ff fea1 	bl	8005786 <LL_ADC_REG_IsConversionOngoing>
 8005a44:	6138      	str	r0, [r7, #16]
 8005a46:	687b      	ldr	r3, [r7, #4]
 8005a48:	681b      	ldr	r3, [r3, #0]
 8005a4a:	4618      	mov	r0, r3
 8005a4c:	f7ff feae 	bl	80057ac <LL_ADC_INJ_IsConversionOngoing>
 8005a50:	60f8      	str	r0, [r7, #12]
 8005a52:	693b      	ldr	r3, [r7, #16]
 8005a54:	2b00      	cmp	r3, #0
 8005a56:	f040 808e 	bne.w	8005b76 <HAL_ADC_Init+0x3a2>
 8005a5a:	68fb      	ldr	r3, [r7, #12]
 8005a5c:	2b00      	cmp	r3, #0
 8005a5e:	f040 808a 	bne.w	8005b76 <HAL_ADC_Init+0x3a2>
 8005a62:	687b      	ldr	r3, [r7, #4]
 8005a64:	681b      	ldr	r3, [r3, #0]
 8005a66:	4a0a      	ldr	r2, [pc, #40]	@ (8005a90 <HAL_ADC_Init+0x2bc>)
 8005a68:	4293      	cmp	r3, r2
 8005a6a:	d11b      	bne.n	8005aa4 <HAL_ADC_Init+0x2d0>
 8005a6c:	687b      	ldr	r3, [r7, #4]
 8005a6e:	7e1b      	ldrb	r3, [r3, #24]
 8005a70:	039a      	lsls	r2, r3, #14
 8005a72:	687b      	ldr	r3, [r7, #4]
 8005a74:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8005a78:	005b      	lsls	r3, r3, #1
 8005a7a:	4313      	orrs	r3, r2
 8005a7c:	61bb      	str	r3, [r7, #24]
 8005a7e:	e018      	b.n	8005ab2 <HAL_ADC_Init+0x2de>
 8005a80:	24000000 	.word	0x24000000
 8005a84:	053e2d63 	.word	0x053e2d63
 8005a88:	40022000 	.word	0x40022000
 8005a8c:	40022100 	.word	0x40022100
 8005a90:	58026000 	.word	0x58026000
 8005a94:	40022300 	.word	0x40022300
 8005a98:	58026300 	.word	0x58026300
 8005a9c:	fff04007 	.word	0xfff04007
 8005aa0:	fff0c003 	.word	0xfff0c003
 8005aa4:	687b      	ldr	r3, [r7, #4]
 8005aa6:	7e1b      	ldrb	r3, [r3, #24]
 8005aa8:	039a      	lsls	r2, r3, #14
 8005aaa:	687b      	ldr	r3, [r7, #4]
 8005aac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005aae:	4313      	orrs	r3, r2
 8005ab0:	61bb      	str	r3, [r7, #24]
 8005ab2:	687b      	ldr	r3, [r7, #4]
 8005ab4:	681b      	ldr	r3, [r3, #0]
 8005ab6:	68da      	ldr	r2, [r3, #12]
 8005ab8:	4b46      	ldr	r3, [pc, #280]	@ (8005bd4 <HAL_ADC_Init+0x400>)
 8005aba:	4013      	ands	r3, r2
 8005abc:	687a      	ldr	r2, [r7, #4]
 8005abe:	6812      	ldr	r2, [r2, #0]
 8005ac0:	69b9      	ldr	r1, [r7, #24]
 8005ac2:	430b      	orrs	r3, r1
 8005ac4:	60d3      	str	r3, [r2, #12]
 8005ac6:	687b      	ldr	r3, [r7, #4]
 8005ac8:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8005acc:	2b01      	cmp	r3, #1
 8005ace:	d137      	bne.n	8005b40 <HAL_ADC_Init+0x36c>
 8005ad0:	687b      	ldr	r3, [r7, #4]
 8005ad2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005ad4:	2b00      	cmp	r3, #0
 8005ad6:	687b      	ldr	r3, [r7, #4]
 8005ad8:	681b      	ldr	r3, [r3, #0]
 8005ada:	4a3f      	ldr	r2, [pc, #252]	@ (8005bd8 <HAL_ADC_Init+0x404>)
 8005adc:	4293      	cmp	r3, r2
 8005ade:	d116      	bne.n	8005b0e <HAL_ADC_Init+0x33a>
 8005ae0:	687b      	ldr	r3, [r7, #4]
 8005ae2:	681b      	ldr	r3, [r3, #0]
 8005ae4:	691a      	ldr	r2, [r3, #16]
 8005ae6:	4b3d      	ldr	r3, [pc, #244]	@ (8005bdc <HAL_ADC_Init+0x408>)
 8005ae8:	4013      	ands	r3, r2
 8005aea:	687a      	ldr	r2, [r7, #4]
 8005aec:	6c91      	ldr	r1, [r2, #72]	@ 0x48
 8005aee:	687a      	ldr	r2, [r7, #4]
 8005af0:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 8005af2:	4311      	orrs	r1, r2
 8005af4:	687a      	ldr	r2, [r7, #4]
 8005af6:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8005af8:	4311      	orrs	r1, r2
 8005afa:	687a      	ldr	r2, [r7, #4]
 8005afc:	6d52      	ldr	r2, [r2, #84]	@ 0x54
 8005afe:	430a      	orrs	r2, r1
 8005b00:	431a      	orrs	r2, r3
 8005b02:	687b      	ldr	r3, [r7, #4]
 8005b04:	681b      	ldr	r3, [r3, #0]
 8005b06:	f042 0201 	orr.w	r2, r2, #1
 8005b0a:	611a      	str	r2, [r3, #16]
 8005b0c:	e020      	b.n	8005b50 <HAL_ADC_Init+0x37c>
 8005b0e:	687b      	ldr	r3, [r7, #4]
 8005b10:	681b      	ldr	r3, [r3, #0]
 8005b12:	691a      	ldr	r2, [r3, #16]
 8005b14:	4b32      	ldr	r3, [pc, #200]	@ (8005be0 <HAL_ADC_Init+0x40c>)
 8005b16:	4013      	ands	r3, r2
 8005b18:	687a      	ldr	r2, [r7, #4]
 8005b1a:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 8005b1c:	3a01      	subs	r2, #1
 8005b1e:	0411      	lsls	r1, r2, #16
 8005b20:	687a      	ldr	r2, [r7, #4]
 8005b22:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 8005b24:	4311      	orrs	r1, r2
 8005b26:	687a      	ldr	r2, [r7, #4]
 8005b28:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8005b2a:	4311      	orrs	r1, r2
 8005b2c:	687a      	ldr	r2, [r7, #4]
 8005b2e:	6d52      	ldr	r2, [r2, #84]	@ 0x54
 8005b30:	430a      	orrs	r2, r1
 8005b32:	431a      	orrs	r2, r3
 8005b34:	687b      	ldr	r3, [r7, #4]
 8005b36:	681b      	ldr	r3, [r3, #0]
 8005b38:	f042 0201 	orr.w	r2, r2, #1
 8005b3c:	611a      	str	r2, [r3, #16]
 8005b3e:	e007      	b.n	8005b50 <HAL_ADC_Init+0x37c>
 8005b40:	687b      	ldr	r3, [r7, #4]
 8005b42:	681b      	ldr	r3, [r3, #0]
 8005b44:	691a      	ldr	r2, [r3, #16]
 8005b46:	687b      	ldr	r3, [r7, #4]
 8005b48:	681b      	ldr	r3, [r3, #0]
 8005b4a:	f022 0201 	bic.w	r2, r2, #1
 8005b4e:	611a      	str	r2, [r3, #16]
 8005b50:	687b      	ldr	r3, [r7, #4]
 8005b52:	681b      	ldr	r3, [r3, #0]
 8005b54:	691b      	ldr	r3, [r3, #16]
 8005b56:	f023 4170 	bic.w	r1, r3, #4026531840	@ 0xf0000000
 8005b5a:	687b      	ldr	r3, [r7, #4]
 8005b5c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005b5e:	687b      	ldr	r3, [r7, #4]
 8005b60:	681b      	ldr	r3, [r3, #0]
 8005b62:	430a      	orrs	r2, r1
 8005b64:	611a      	str	r2, [r3, #16]
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	681b      	ldr	r3, [r3, #0]
 8005b6a:	4a1b      	ldr	r2, [pc, #108]	@ (8005bd8 <HAL_ADC_Init+0x404>)
 8005b6c:	4293      	cmp	r3, r2
 8005b6e:	d002      	beq.n	8005b76 <HAL_ADC_Init+0x3a2>
 8005b70:	6878      	ldr	r0, [r7, #4]
 8005b72:	f000 fd67 	bl	8006644 <ADC_ConfigureBoostMode>
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	691b      	ldr	r3, [r3, #16]
 8005b7a:	2b01      	cmp	r3, #1
 8005b7c:	d10c      	bne.n	8005b98 <HAL_ADC_Init+0x3c4>
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	681b      	ldr	r3, [r3, #0]
 8005b82:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005b84:	f023 010f 	bic.w	r1, r3, #15
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	69db      	ldr	r3, [r3, #28]
 8005b8c:	1e5a      	subs	r2, r3, #1
 8005b8e:	687b      	ldr	r3, [r7, #4]
 8005b90:	681b      	ldr	r3, [r3, #0]
 8005b92:	430a      	orrs	r2, r1
 8005b94:	631a      	str	r2, [r3, #48]	@ 0x30
 8005b96:	e007      	b.n	8005ba8 <HAL_ADC_Init+0x3d4>
 8005b98:	687b      	ldr	r3, [r7, #4]
 8005b9a:	681b      	ldr	r3, [r3, #0]
 8005b9c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005b9e:	687b      	ldr	r3, [r7, #4]
 8005ba0:	681b      	ldr	r3, [r3, #0]
 8005ba2:	f022 020f 	bic.w	r2, r2, #15
 8005ba6:	631a      	str	r2, [r3, #48]	@ 0x30
 8005ba8:	687b      	ldr	r3, [r7, #4]
 8005baa:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005bac:	f023 0303 	bic.w	r3, r3, #3
 8005bb0:	f043 0201 	orr.w	r2, r3, #1
 8005bb4:	687b      	ldr	r3, [r7, #4]
 8005bb6:	661a      	str	r2, [r3, #96]	@ 0x60
 8005bb8:	e007      	b.n	8005bca <HAL_ADC_Init+0x3f6>
 8005bba:	687b      	ldr	r3, [r7, #4]
 8005bbc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005bbe:	f043 0210 	orr.w	r2, r3, #16
 8005bc2:	687b      	ldr	r3, [r7, #4]
 8005bc4:	661a      	str	r2, [r3, #96]	@ 0x60
 8005bc6:	2301      	movs	r3, #1
 8005bc8:	77fb      	strb	r3, [r7, #31]
 8005bca:	7ffb      	ldrb	r3, [r7, #31]
 8005bcc:	4618      	mov	r0, r3
 8005bce:	3724      	adds	r7, #36	@ 0x24
 8005bd0:	46bd      	mov	sp, r7
 8005bd2:	bd90      	pop	{r4, r7, pc}
 8005bd4:	ffffbffc 	.word	0xffffbffc
 8005bd8:	58026000 	.word	0x58026000
 8005bdc:	fc00f81f 	.word	0xfc00f81f
 8005be0:	fc00f81e 	.word	0xfc00f81e

08005be4 <HAL_ADC_ConfigChannel>:
 8005be4:	b590      	push	{r4, r7, lr}
 8005be6:	b0b9      	sub	sp, #228	@ 0xe4
 8005be8:	af00      	add	r7, sp, #0
 8005bea:	6078      	str	r0, [r7, #4]
 8005bec:	6039      	str	r1, [r7, #0]
 8005bee:	2300      	movs	r3, #0
 8005bf0:	f887 30df 	strb.w	r3, [r7, #223]	@ 0xdf
 8005bf4:	2300      	movs	r3, #0
 8005bf6:	60bb      	str	r3, [r7, #8]
 8005bf8:	687b      	ldr	r3, [r7, #4]
 8005bfa:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8005bfe:	2b01      	cmp	r3, #1
 8005c00:	683b      	ldr	r3, [r7, #0]
 8005c02:	68db      	ldr	r3, [r3, #12]
 8005c04:	4aab      	ldr	r2, [pc, #684]	@ (8005eb4 <HAL_ADC_ConfigChannel+0x2d0>)
 8005c06:	4293      	cmp	r3, r2
 8005c08:	687b      	ldr	r3, [r7, #4]
 8005c0a:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8005c0e:	2b01      	cmp	r3, #1
 8005c10:	d102      	bne.n	8005c18 <HAL_ADC_ConfigChannel+0x34>
 8005c12:	2302      	movs	r3, #2
 8005c14:	f000 bcfe 	b.w	8006614 <HAL_ADC_ConfigChannel+0xa30>
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	2201      	movs	r2, #1
 8005c1c:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	681b      	ldr	r3, [r3, #0]
 8005c24:	4618      	mov	r0, r3
 8005c26:	f7ff fdae 	bl	8005786 <LL_ADC_REG_IsConversionOngoing>
 8005c2a:	4603      	mov	r3, r0
 8005c2c:	2b00      	cmp	r3, #0
 8005c2e:	f040 84e2 	bne.w	80065f6 <HAL_ADC_ConfigChannel+0xa12>
 8005c32:	683b      	ldr	r3, [r7, #0]
 8005c34:	681b      	ldr	r3, [r3, #0]
 8005c36:	2b00      	cmp	r3, #0
 8005c38:	db38      	blt.n	8005cac <HAL_ADC_ConfigChannel+0xc8>
 8005c3a:	687b      	ldr	r3, [r7, #4]
 8005c3c:	681b      	ldr	r3, [r3, #0]
 8005c3e:	4a9e      	ldr	r2, [pc, #632]	@ (8005eb8 <HAL_ADC_ConfigChannel+0x2d4>)
 8005c40:	4293      	cmp	r3, r2
 8005c42:	d033      	beq.n	8005cac <HAL_ADC_ConfigChannel+0xc8>
 8005c44:	683b      	ldr	r3, [r7, #0]
 8005c46:	681b      	ldr	r3, [r3, #0]
 8005c48:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005c4c:	2b00      	cmp	r3, #0
 8005c4e:	d108      	bne.n	8005c62 <HAL_ADC_ConfigChannel+0x7e>
 8005c50:	683b      	ldr	r3, [r7, #0]
 8005c52:	681b      	ldr	r3, [r3, #0]
 8005c54:	0e9b      	lsrs	r3, r3, #26
 8005c56:	f003 031f 	and.w	r3, r3, #31
 8005c5a:	2201      	movs	r2, #1
 8005c5c:	fa02 f303 	lsl.w	r3, r2, r3
 8005c60:	e01d      	b.n	8005c9e <HAL_ADC_ConfigChannel+0xba>
 8005c62:	683b      	ldr	r3, [r7, #0]
 8005c64:	681b      	ldr	r3, [r3, #0]
 8005c66:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8005c6a:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8005c6e:	fa93 f3a3 	rbit	r3, r3
 8005c72:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8005c76:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8005c7a:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8005c7e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8005c82:	2b00      	cmp	r3, #0
 8005c84:	d101      	bne.n	8005c8a <HAL_ADC_ConfigChannel+0xa6>
 8005c86:	2320      	movs	r3, #32
 8005c88:	e004      	b.n	8005c94 <HAL_ADC_ConfigChannel+0xb0>
 8005c8a:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8005c8e:	fab3 f383 	clz	r3, r3
 8005c92:	b2db      	uxtb	r3, r3
 8005c94:	f003 031f 	and.w	r3, r3, #31
 8005c98:	2201      	movs	r2, #1
 8005c9a:	fa02 f303 	lsl.w	r3, r2, r3
 8005c9e:	687a      	ldr	r2, [r7, #4]
 8005ca0:	6812      	ldr	r2, [r2, #0]
 8005ca2:	69d1      	ldr	r1, [r2, #28]
 8005ca4:	687a      	ldr	r2, [r7, #4]
 8005ca6:	6812      	ldr	r2, [r2, #0]
 8005ca8:	430b      	orrs	r3, r1
 8005caa:	61d3      	str	r3, [r2, #28]
 8005cac:	687b      	ldr	r3, [r7, #4]
 8005cae:	6818      	ldr	r0, [r3, #0]
 8005cb0:	683b      	ldr	r3, [r7, #0]
 8005cb2:	6859      	ldr	r1, [r3, #4]
 8005cb4:	683b      	ldr	r3, [r7, #0]
 8005cb6:	681b      	ldr	r3, [r3, #0]
 8005cb8:	461a      	mov	r2, r3
 8005cba:	f7ff fc6b 	bl	8005594 <LL_ADC_REG_SetSequencerRanks>
 8005cbe:	687b      	ldr	r3, [r7, #4]
 8005cc0:	681b      	ldr	r3, [r3, #0]
 8005cc2:	4618      	mov	r0, r3
 8005cc4:	f7ff fd5f 	bl	8005786 <LL_ADC_REG_IsConversionOngoing>
 8005cc8:	f8c7 00d4 	str.w	r0, [r7, #212]	@ 0xd4
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	681b      	ldr	r3, [r3, #0]
 8005cd0:	4618      	mov	r0, r3
 8005cd2:	f7ff fd6b 	bl	80057ac <LL_ADC_INJ_IsConversionOngoing>
 8005cd6:	f8c7 00d0 	str.w	r0, [r7, #208]	@ 0xd0
 8005cda:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8005cde:	2b00      	cmp	r3, #0
 8005ce0:	f040 8270 	bne.w	80061c4 <HAL_ADC_ConfigChannel+0x5e0>
 8005ce4:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 8005ce8:	2b00      	cmp	r3, #0
 8005cea:	f040 826b 	bne.w	80061c4 <HAL_ADC_ConfigChannel+0x5e0>
 8005cee:	687b      	ldr	r3, [r7, #4]
 8005cf0:	6818      	ldr	r0, [r3, #0]
 8005cf2:	683b      	ldr	r3, [r7, #0]
 8005cf4:	6819      	ldr	r1, [r3, #0]
 8005cf6:	683b      	ldr	r3, [r7, #0]
 8005cf8:	689b      	ldr	r3, [r3, #8]
 8005cfa:	461a      	mov	r2, r3
 8005cfc:	f7ff fc76 	bl	80055ec <LL_ADC_SetChannelSamplingTime>
 8005d00:	687b      	ldr	r3, [r7, #4]
 8005d02:	681b      	ldr	r3, [r3, #0]
 8005d04:	4a6c      	ldr	r2, [pc, #432]	@ (8005eb8 <HAL_ADC_ConfigChannel+0x2d4>)
 8005d06:	4293      	cmp	r3, r2
 8005d08:	d10d      	bne.n	8005d26 <HAL_ADC_ConfigChannel+0x142>
 8005d0a:	683b      	ldr	r3, [r7, #0]
 8005d0c:	695a      	ldr	r2, [r3, #20]
 8005d0e:	687b      	ldr	r3, [r7, #4]
 8005d10:	681b      	ldr	r3, [r3, #0]
 8005d12:	68db      	ldr	r3, [r3, #12]
 8005d14:	08db      	lsrs	r3, r3, #3
 8005d16:	f003 0303 	and.w	r3, r3, #3
 8005d1a:	005b      	lsls	r3, r3, #1
 8005d1c:	fa02 f303 	lsl.w	r3, r2, r3
 8005d20:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005d24:	e032      	b.n	8005d8c <HAL_ADC_ConfigChannel+0x1a8>
 8005d26:	4b65      	ldr	r3, [pc, #404]	@ (8005ebc <HAL_ADC_ConfigChannel+0x2d8>)
 8005d28:	681b      	ldr	r3, [r3, #0]
 8005d2a:	f003 4370 	and.w	r3, r3, #4026531840	@ 0xf0000000
 8005d2e:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8005d32:	d10b      	bne.n	8005d4c <HAL_ADC_ConfigChannel+0x168>
 8005d34:	683b      	ldr	r3, [r7, #0]
 8005d36:	695a      	ldr	r2, [r3, #20]
 8005d38:	687b      	ldr	r3, [r7, #4]
 8005d3a:	681b      	ldr	r3, [r3, #0]
 8005d3c:	68db      	ldr	r3, [r3, #12]
 8005d3e:	089b      	lsrs	r3, r3, #2
 8005d40:	f003 0307 	and.w	r3, r3, #7
 8005d44:	005b      	lsls	r3, r3, #1
 8005d46:	fa02 f303 	lsl.w	r3, r2, r3
 8005d4a:	e01d      	b.n	8005d88 <HAL_ADC_ConfigChannel+0x1a4>
 8005d4c:	687b      	ldr	r3, [r7, #4]
 8005d4e:	681b      	ldr	r3, [r3, #0]
 8005d50:	68db      	ldr	r3, [r3, #12]
 8005d52:	f003 0310 	and.w	r3, r3, #16
 8005d56:	2b00      	cmp	r3, #0
 8005d58:	d10b      	bne.n	8005d72 <HAL_ADC_ConfigChannel+0x18e>
 8005d5a:	683b      	ldr	r3, [r7, #0]
 8005d5c:	695a      	ldr	r2, [r3, #20]
 8005d5e:	687b      	ldr	r3, [r7, #4]
 8005d60:	681b      	ldr	r3, [r3, #0]
 8005d62:	68db      	ldr	r3, [r3, #12]
 8005d64:	089b      	lsrs	r3, r3, #2
 8005d66:	f003 0307 	and.w	r3, r3, #7
 8005d6a:	005b      	lsls	r3, r3, #1
 8005d6c:	fa02 f303 	lsl.w	r3, r2, r3
 8005d70:	e00a      	b.n	8005d88 <HAL_ADC_ConfigChannel+0x1a4>
 8005d72:	683b      	ldr	r3, [r7, #0]
 8005d74:	695a      	ldr	r2, [r3, #20]
 8005d76:	687b      	ldr	r3, [r7, #4]
 8005d78:	681b      	ldr	r3, [r3, #0]
 8005d7a:	68db      	ldr	r3, [r3, #12]
 8005d7c:	089b      	lsrs	r3, r3, #2
 8005d7e:	f003 0304 	and.w	r3, r3, #4
 8005d82:	005b      	lsls	r3, r3, #1
 8005d84:	fa02 f303 	lsl.w	r3, r2, r3
 8005d88:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005d8c:	683b      	ldr	r3, [r7, #0]
 8005d8e:	691b      	ldr	r3, [r3, #16]
 8005d90:	2b04      	cmp	r3, #4
 8005d92:	d048      	beq.n	8005e26 <HAL_ADC_ConfigChannel+0x242>
 8005d94:	687b      	ldr	r3, [r7, #4]
 8005d96:	6818      	ldr	r0, [r3, #0]
 8005d98:	683b      	ldr	r3, [r7, #0]
 8005d9a:	6919      	ldr	r1, [r3, #16]
 8005d9c:	683b      	ldr	r3, [r7, #0]
 8005d9e:	681a      	ldr	r2, [r3, #0]
 8005da0:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8005da4:	f7ff fb04 	bl	80053b0 <LL_ADC_SetOffset>
 8005da8:	687b      	ldr	r3, [r7, #4]
 8005daa:	681b      	ldr	r3, [r3, #0]
 8005dac:	4a42      	ldr	r2, [pc, #264]	@ (8005eb8 <HAL_ADC_ConfigChannel+0x2d4>)
 8005dae:	4293      	cmp	r3, r2
 8005db0:	d119      	bne.n	8005de6 <HAL_ADC_ConfigChannel+0x202>
 8005db2:	687b      	ldr	r3, [r7, #4]
 8005db4:	6818      	ldr	r0, [r3, #0]
 8005db6:	683b      	ldr	r3, [r7, #0]
 8005db8:	6919      	ldr	r1, [r3, #16]
 8005dba:	683b      	ldr	r3, [r7, #0]
 8005dbc:	69db      	ldr	r3, [r3, #28]
 8005dbe:	461a      	mov	r2, r3
 8005dc0:	f7ff fb9c 	bl	80054fc <LL_ADC_SetOffsetSign>
 8005dc4:	687b      	ldr	r3, [r7, #4]
 8005dc6:	6818      	ldr	r0, [r3, #0]
 8005dc8:	683b      	ldr	r3, [r7, #0]
 8005dca:	6919      	ldr	r1, [r3, #16]
 8005dcc:	683b      	ldr	r3, [r7, #0]
 8005dce:	f893 3020 	ldrb.w	r3, [r3, #32]
 8005dd2:	2b01      	cmp	r3, #1
 8005dd4:	d102      	bne.n	8005ddc <HAL_ADC_ConfigChannel+0x1f8>
 8005dd6:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8005dda:	e000      	b.n	8005dde <HAL_ADC_ConfigChannel+0x1fa>
 8005ddc:	2300      	movs	r3, #0
 8005dde:	461a      	mov	r2, r3
 8005de0:	f7ff fb6a 	bl	80054b8 <LL_ADC_SetOffsetSaturation>
 8005de4:	e1ee      	b.n	80061c4 <HAL_ADC_ConfigChannel+0x5e0>
 8005de6:	687b      	ldr	r3, [r7, #4]
 8005de8:	6818      	ldr	r0, [r3, #0]
 8005dea:	683b      	ldr	r3, [r7, #0]
 8005dec:	6919      	ldr	r1, [r3, #16]
 8005dee:	683b      	ldr	r3, [r7, #0]
 8005df0:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8005df4:	2b01      	cmp	r3, #1
 8005df6:	d102      	bne.n	8005dfe <HAL_ADC_ConfigChannel+0x21a>
 8005df8:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8005dfc:	e000      	b.n	8005e00 <HAL_ADC_ConfigChannel+0x21c>
 8005dfe:	2300      	movs	r3, #0
 8005e00:	461a      	mov	r2, r3
 8005e02:	f7ff fb37 	bl	8005474 <LL_ADC_SetOffsetSignedSaturation>
 8005e06:	687b      	ldr	r3, [r7, #4]
 8005e08:	6818      	ldr	r0, [r3, #0]
 8005e0a:	683b      	ldr	r3, [r7, #0]
 8005e0c:	6919      	ldr	r1, [r3, #16]
 8005e0e:	683b      	ldr	r3, [r7, #0]
 8005e10:	7e1b      	ldrb	r3, [r3, #24]
 8005e12:	2b01      	cmp	r3, #1
 8005e14:	d102      	bne.n	8005e1c <HAL_ADC_ConfigChannel+0x238>
 8005e16:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8005e1a:	e000      	b.n	8005e1e <HAL_ADC_ConfigChannel+0x23a>
 8005e1c:	2300      	movs	r3, #0
 8005e1e:	461a      	mov	r2, r3
 8005e20:	f7ff fb0e 	bl	8005440 <LL_ADC_SetDataRightShift>
 8005e24:	e1ce      	b.n	80061c4 <HAL_ADC_ConfigChannel+0x5e0>
 8005e26:	687b      	ldr	r3, [r7, #4]
 8005e28:	681b      	ldr	r3, [r3, #0]
 8005e2a:	4a23      	ldr	r2, [pc, #140]	@ (8005eb8 <HAL_ADC_ConfigChannel+0x2d4>)
 8005e2c:	4293      	cmp	r3, r2
 8005e2e:	f040 8181 	bne.w	8006134 <HAL_ADC_ConfigChannel+0x550>
 8005e32:	687b      	ldr	r3, [r7, #4]
 8005e34:	681b      	ldr	r3, [r3, #0]
 8005e36:	2100      	movs	r1, #0
 8005e38:	4618      	mov	r0, r3
 8005e3a:	f7ff faeb 	bl	8005414 <LL_ADC_GetOffsetChannel>
 8005e3e:	4603      	mov	r3, r0
 8005e40:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005e44:	2b00      	cmp	r3, #0
 8005e46:	d10a      	bne.n	8005e5e <HAL_ADC_ConfigChannel+0x27a>
 8005e48:	687b      	ldr	r3, [r7, #4]
 8005e4a:	681b      	ldr	r3, [r3, #0]
 8005e4c:	2100      	movs	r1, #0
 8005e4e:	4618      	mov	r0, r3
 8005e50:	f7ff fae0 	bl	8005414 <LL_ADC_GetOffsetChannel>
 8005e54:	4603      	mov	r3, r0
 8005e56:	0e9b      	lsrs	r3, r3, #26
 8005e58:	f003 021f 	and.w	r2, r3, #31
 8005e5c:	e01e      	b.n	8005e9c <HAL_ADC_ConfigChannel+0x2b8>
 8005e5e:	687b      	ldr	r3, [r7, #4]
 8005e60:	681b      	ldr	r3, [r3, #0]
 8005e62:	2100      	movs	r1, #0
 8005e64:	4618      	mov	r0, r3
 8005e66:	f7ff fad5 	bl	8005414 <LL_ADC_GetOffsetChannel>
 8005e6a:	4603      	mov	r3, r0
 8005e6c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8005e70:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8005e74:	fa93 f3a3 	rbit	r3, r3
 8005e78:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005e7c:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8005e80:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8005e84:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 8005e88:	2b00      	cmp	r3, #0
 8005e8a:	d101      	bne.n	8005e90 <HAL_ADC_ConfigChannel+0x2ac>
 8005e8c:	2320      	movs	r3, #32
 8005e8e:	e004      	b.n	8005e9a <HAL_ADC_ConfigChannel+0x2b6>
 8005e90:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 8005e94:	fab3 f383 	clz	r3, r3
 8005e98:	b2db      	uxtb	r3, r3
 8005e9a:	461a      	mov	r2, r3
 8005e9c:	683b      	ldr	r3, [r7, #0]
 8005e9e:	681b      	ldr	r3, [r3, #0]
 8005ea0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005ea4:	2b00      	cmp	r3, #0
 8005ea6:	d10b      	bne.n	8005ec0 <HAL_ADC_ConfigChannel+0x2dc>
 8005ea8:	683b      	ldr	r3, [r7, #0]
 8005eaa:	681b      	ldr	r3, [r3, #0]
 8005eac:	0e9b      	lsrs	r3, r3, #26
 8005eae:	f003 031f 	and.w	r3, r3, #31
 8005eb2:	e01e      	b.n	8005ef2 <HAL_ADC_ConfigChannel+0x30e>
 8005eb4:	47ff0000 	.word	0x47ff0000
 8005eb8:	58026000 	.word	0x58026000
 8005ebc:	5c001000 	.word	0x5c001000
 8005ec0:	683b      	ldr	r3, [r7, #0]
 8005ec2:	681b      	ldr	r3, [r3, #0]
 8005ec4:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8005ec8:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005ecc:	fa93 f3a3 	rbit	r3, r3
 8005ed0:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8005ed4:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8005ed8:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005edc:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8005ee0:	2b00      	cmp	r3, #0
 8005ee2:	d101      	bne.n	8005ee8 <HAL_ADC_ConfigChannel+0x304>
 8005ee4:	2320      	movs	r3, #32
 8005ee6:	e004      	b.n	8005ef2 <HAL_ADC_ConfigChannel+0x30e>
 8005ee8:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8005eec:	fab3 f383 	clz	r3, r3
 8005ef0:	b2db      	uxtb	r3, r3
 8005ef2:	429a      	cmp	r2, r3
 8005ef4:	d106      	bne.n	8005f04 <HAL_ADC_ConfigChannel+0x320>
 8005ef6:	687b      	ldr	r3, [r7, #4]
 8005ef8:	681b      	ldr	r3, [r3, #0]
 8005efa:	2200      	movs	r2, #0
 8005efc:	2100      	movs	r1, #0
 8005efe:	4618      	mov	r0, r3
 8005f00:	f7ff fb1e 	bl	8005540 <LL_ADC_SetOffsetState>
 8005f04:	687b      	ldr	r3, [r7, #4]
 8005f06:	681b      	ldr	r3, [r3, #0]
 8005f08:	2101      	movs	r1, #1
 8005f0a:	4618      	mov	r0, r3
 8005f0c:	f7ff fa82 	bl	8005414 <LL_ADC_GetOffsetChannel>
 8005f10:	4603      	mov	r3, r0
 8005f12:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005f16:	2b00      	cmp	r3, #0
 8005f18:	d10a      	bne.n	8005f30 <HAL_ADC_ConfigChannel+0x34c>
 8005f1a:	687b      	ldr	r3, [r7, #4]
 8005f1c:	681b      	ldr	r3, [r3, #0]
 8005f1e:	2101      	movs	r1, #1
 8005f20:	4618      	mov	r0, r3
 8005f22:	f7ff fa77 	bl	8005414 <LL_ADC_GetOffsetChannel>
 8005f26:	4603      	mov	r3, r0
 8005f28:	0e9b      	lsrs	r3, r3, #26
 8005f2a:	f003 021f 	and.w	r2, r3, #31
 8005f2e:	e01e      	b.n	8005f6e <HAL_ADC_ConfigChannel+0x38a>
 8005f30:	687b      	ldr	r3, [r7, #4]
 8005f32:	681b      	ldr	r3, [r3, #0]
 8005f34:	2101      	movs	r1, #1
 8005f36:	4618      	mov	r0, r3
 8005f38:	f7ff fa6c 	bl	8005414 <LL_ADC_GetOffsetChannel>
 8005f3c:	4603      	mov	r3, r0
 8005f3e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8005f42:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8005f46:	fa93 f3a3 	rbit	r3, r3
 8005f4a:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005f4e:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8005f52:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8005f56:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8005f5a:	2b00      	cmp	r3, #0
 8005f5c:	d101      	bne.n	8005f62 <HAL_ADC_ConfigChannel+0x37e>
 8005f5e:	2320      	movs	r3, #32
 8005f60:	e004      	b.n	8005f6c <HAL_ADC_ConfigChannel+0x388>
 8005f62:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8005f66:	fab3 f383 	clz	r3, r3
 8005f6a:	b2db      	uxtb	r3, r3
 8005f6c:	461a      	mov	r2, r3
 8005f6e:	683b      	ldr	r3, [r7, #0]
 8005f70:	681b      	ldr	r3, [r3, #0]
 8005f72:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005f76:	2b00      	cmp	r3, #0
 8005f78:	d105      	bne.n	8005f86 <HAL_ADC_ConfigChannel+0x3a2>
 8005f7a:	683b      	ldr	r3, [r7, #0]
 8005f7c:	681b      	ldr	r3, [r3, #0]
 8005f7e:	0e9b      	lsrs	r3, r3, #26
 8005f80:	f003 031f 	and.w	r3, r3, #31
 8005f84:	e018      	b.n	8005fb8 <HAL_ADC_ConfigChannel+0x3d4>
 8005f86:	683b      	ldr	r3, [r7, #0]
 8005f88:	681b      	ldr	r3, [r3, #0]
 8005f8a:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8005f8e:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 8005f92:	fa93 f3a3 	rbit	r3, r3
 8005f96:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005f9a:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8005f9e:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005fa2:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005fa6:	2b00      	cmp	r3, #0
 8005fa8:	d101      	bne.n	8005fae <HAL_ADC_ConfigChannel+0x3ca>
 8005faa:	2320      	movs	r3, #32
 8005fac:	e004      	b.n	8005fb8 <HAL_ADC_ConfigChannel+0x3d4>
 8005fae:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005fb2:	fab3 f383 	clz	r3, r3
 8005fb6:	b2db      	uxtb	r3, r3
 8005fb8:	429a      	cmp	r2, r3
 8005fba:	d106      	bne.n	8005fca <HAL_ADC_ConfigChannel+0x3e6>
 8005fbc:	687b      	ldr	r3, [r7, #4]
 8005fbe:	681b      	ldr	r3, [r3, #0]
 8005fc0:	2200      	movs	r2, #0
 8005fc2:	2101      	movs	r1, #1
 8005fc4:	4618      	mov	r0, r3
 8005fc6:	f7ff fabb 	bl	8005540 <LL_ADC_SetOffsetState>
 8005fca:	687b      	ldr	r3, [r7, #4]
 8005fcc:	681b      	ldr	r3, [r3, #0]
 8005fce:	2102      	movs	r1, #2
 8005fd0:	4618      	mov	r0, r3
 8005fd2:	f7ff fa1f 	bl	8005414 <LL_ADC_GetOffsetChannel>
 8005fd6:	4603      	mov	r3, r0
 8005fd8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005fdc:	2b00      	cmp	r3, #0
 8005fde:	d10a      	bne.n	8005ff6 <HAL_ADC_ConfigChannel+0x412>
 8005fe0:	687b      	ldr	r3, [r7, #4]
 8005fe2:	681b      	ldr	r3, [r3, #0]
 8005fe4:	2102      	movs	r1, #2
 8005fe6:	4618      	mov	r0, r3
 8005fe8:	f7ff fa14 	bl	8005414 <LL_ADC_GetOffsetChannel>
 8005fec:	4603      	mov	r3, r0
 8005fee:	0e9b      	lsrs	r3, r3, #26
 8005ff0:	f003 021f 	and.w	r2, r3, #31
 8005ff4:	e01e      	b.n	8006034 <HAL_ADC_ConfigChannel+0x450>
 8005ff6:	687b      	ldr	r3, [r7, #4]
 8005ff8:	681b      	ldr	r3, [r3, #0]
 8005ffa:	2102      	movs	r1, #2
 8005ffc:	4618      	mov	r0, r3
 8005ffe:	f7ff fa09 	bl	8005414 <LL_ADC_GetOffsetChannel>
 8006002:	4603      	mov	r3, r0
 8006004:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8006008:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800600c:	fa93 f3a3 	rbit	r3, r3
 8006010:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8006014:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8006018:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800601c:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8006020:	2b00      	cmp	r3, #0
 8006022:	d101      	bne.n	8006028 <HAL_ADC_ConfigChannel+0x444>
 8006024:	2320      	movs	r3, #32
 8006026:	e004      	b.n	8006032 <HAL_ADC_ConfigChannel+0x44e>
 8006028:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800602c:	fab3 f383 	clz	r3, r3
 8006030:	b2db      	uxtb	r3, r3
 8006032:	461a      	mov	r2, r3
 8006034:	683b      	ldr	r3, [r7, #0]
 8006036:	681b      	ldr	r3, [r3, #0]
 8006038:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800603c:	2b00      	cmp	r3, #0
 800603e:	d105      	bne.n	800604c <HAL_ADC_ConfigChannel+0x468>
 8006040:	683b      	ldr	r3, [r7, #0]
 8006042:	681b      	ldr	r3, [r3, #0]
 8006044:	0e9b      	lsrs	r3, r3, #26
 8006046:	f003 031f 	and.w	r3, r3, #31
 800604a:	e014      	b.n	8006076 <HAL_ADC_ConfigChannel+0x492>
 800604c:	683b      	ldr	r3, [r7, #0]
 800604e:	681b      	ldr	r3, [r3, #0]
 8006050:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8006052:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8006054:	fa93 f3a3 	rbit	r3, r3
 8006058:	67bb      	str	r3, [r7, #120]	@ 0x78
 800605a:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800605c:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8006060:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8006064:	2b00      	cmp	r3, #0
 8006066:	d101      	bne.n	800606c <HAL_ADC_ConfigChannel+0x488>
 8006068:	2320      	movs	r3, #32
 800606a:	e004      	b.n	8006076 <HAL_ADC_ConfigChannel+0x492>
 800606c:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8006070:	fab3 f383 	clz	r3, r3
 8006074:	b2db      	uxtb	r3, r3
 8006076:	429a      	cmp	r2, r3
 8006078:	d106      	bne.n	8006088 <HAL_ADC_ConfigChannel+0x4a4>
 800607a:	687b      	ldr	r3, [r7, #4]
 800607c:	681b      	ldr	r3, [r3, #0]
 800607e:	2200      	movs	r2, #0
 8006080:	2102      	movs	r1, #2
 8006082:	4618      	mov	r0, r3
 8006084:	f7ff fa5c 	bl	8005540 <LL_ADC_SetOffsetState>
 8006088:	687b      	ldr	r3, [r7, #4]
 800608a:	681b      	ldr	r3, [r3, #0]
 800608c:	2103      	movs	r1, #3
 800608e:	4618      	mov	r0, r3
 8006090:	f7ff f9c0 	bl	8005414 <LL_ADC_GetOffsetChannel>
 8006094:	4603      	mov	r3, r0
 8006096:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800609a:	2b00      	cmp	r3, #0
 800609c:	d10a      	bne.n	80060b4 <HAL_ADC_ConfigChannel+0x4d0>
 800609e:	687b      	ldr	r3, [r7, #4]
 80060a0:	681b      	ldr	r3, [r3, #0]
 80060a2:	2103      	movs	r1, #3
 80060a4:	4618      	mov	r0, r3
 80060a6:	f7ff f9b5 	bl	8005414 <LL_ADC_GetOffsetChannel>
 80060aa:	4603      	mov	r3, r0
 80060ac:	0e9b      	lsrs	r3, r3, #26
 80060ae:	f003 021f 	and.w	r2, r3, #31
 80060b2:	e017      	b.n	80060e4 <HAL_ADC_ConfigChannel+0x500>
 80060b4:	687b      	ldr	r3, [r7, #4]
 80060b6:	681b      	ldr	r3, [r3, #0]
 80060b8:	2103      	movs	r1, #3
 80060ba:	4618      	mov	r0, r3
 80060bc:	f7ff f9aa 	bl	8005414 <LL_ADC_GetOffsetChannel>
 80060c0:	4603      	mov	r3, r0
 80060c2:	673b      	str	r3, [r7, #112]	@ 0x70
 80060c4:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80060c6:	fa93 f3a3 	rbit	r3, r3
 80060ca:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80060cc:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80060ce:	677b      	str	r3, [r7, #116]	@ 0x74
 80060d0:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80060d2:	2b00      	cmp	r3, #0
 80060d4:	d101      	bne.n	80060da <HAL_ADC_ConfigChannel+0x4f6>
 80060d6:	2320      	movs	r3, #32
 80060d8:	e003      	b.n	80060e2 <HAL_ADC_ConfigChannel+0x4fe>
 80060da:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80060dc:	fab3 f383 	clz	r3, r3
 80060e0:	b2db      	uxtb	r3, r3
 80060e2:	461a      	mov	r2, r3
 80060e4:	683b      	ldr	r3, [r7, #0]
 80060e6:	681b      	ldr	r3, [r3, #0]
 80060e8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80060ec:	2b00      	cmp	r3, #0
 80060ee:	d105      	bne.n	80060fc <HAL_ADC_ConfigChannel+0x518>
 80060f0:	683b      	ldr	r3, [r7, #0]
 80060f2:	681b      	ldr	r3, [r3, #0]
 80060f4:	0e9b      	lsrs	r3, r3, #26
 80060f6:	f003 031f 	and.w	r3, r3, #31
 80060fa:	e011      	b.n	8006120 <HAL_ADC_ConfigChannel+0x53c>
 80060fc:	683b      	ldr	r3, [r7, #0]
 80060fe:	681b      	ldr	r3, [r3, #0]
 8006100:	667b      	str	r3, [r7, #100]	@ 0x64
 8006102:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8006104:	fa93 f3a3 	rbit	r3, r3
 8006108:	663b      	str	r3, [r7, #96]	@ 0x60
 800610a:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800610c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800610e:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8006110:	2b00      	cmp	r3, #0
 8006112:	d101      	bne.n	8006118 <HAL_ADC_ConfigChannel+0x534>
 8006114:	2320      	movs	r3, #32
 8006116:	e003      	b.n	8006120 <HAL_ADC_ConfigChannel+0x53c>
 8006118:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800611a:	fab3 f383 	clz	r3, r3
 800611e:	b2db      	uxtb	r3, r3
 8006120:	429a      	cmp	r2, r3
 8006122:	d14f      	bne.n	80061c4 <HAL_ADC_ConfigChannel+0x5e0>
 8006124:	687b      	ldr	r3, [r7, #4]
 8006126:	681b      	ldr	r3, [r3, #0]
 8006128:	2200      	movs	r2, #0
 800612a:	2103      	movs	r1, #3
 800612c:	4618      	mov	r0, r3
 800612e:	f7ff fa07 	bl	8005540 <LL_ADC_SetOffsetState>
 8006132:	e047      	b.n	80061c4 <HAL_ADC_ConfigChannel+0x5e0>
 8006134:	687b      	ldr	r3, [r7, #4]
 8006136:	681b      	ldr	r3, [r3, #0]
 8006138:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800613a:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800613e:	683b      	ldr	r3, [r7, #0]
 8006140:	681b      	ldr	r3, [r3, #0]
 8006142:	069b      	lsls	r3, r3, #26
 8006144:	429a      	cmp	r2, r3
 8006146:	d107      	bne.n	8006158 <HAL_ADC_ConfigChannel+0x574>
 8006148:	687b      	ldr	r3, [r7, #4]
 800614a:	681b      	ldr	r3, [r3, #0]
 800614c:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800614e:	687b      	ldr	r3, [r7, #4]
 8006150:	681b      	ldr	r3, [r3, #0]
 8006152:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 8006156:	661a      	str	r2, [r3, #96]	@ 0x60
 8006158:	687b      	ldr	r3, [r7, #4]
 800615a:	681b      	ldr	r3, [r3, #0]
 800615c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800615e:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8006162:	683b      	ldr	r3, [r7, #0]
 8006164:	681b      	ldr	r3, [r3, #0]
 8006166:	069b      	lsls	r3, r3, #26
 8006168:	429a      	cmp	r2, r3
 800616a:	d107      	bne.n	800617c <HAL_ADC_ConfigChannel+0x598>
 800616c:	687b      	ldr	r3, [r7, #4]
 800616e:	681b      	ldr	r3, [r3, #0]
 8006170:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 8006172:	687b      	ldr	r3, [r7, #4]
 8006174:	681b      	ldr	r3, [r3, #0]
 8006176:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 800617a:	665a      	str	r2, [r3, #100]	@ 0x64
 800617c:	687b      	ldr	r3, [r7, #4]
 800617e:	681b      	ldr	r3, [r3, #0]
 8006180:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8006182:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8006186:	683b      	ldr	r3, [r7, #0]
 8006188:	681b      	ldr	r3, [r3, #0]
 800618a:	069b      	lsls	r3, r3, #26
 800618c:	429a      	cmp	r2, r3
 800618e:	d107      	bne.n	80061a0 <HAL_ADC_ConfigChannel+0x5bc>
 8006190:	687b      	ldr	r3, [r7, #4]
 8006192:	681b      	ldr	r3, [r3, #0]
 8006194:	6e9a      	ldr	r2, [r3, #104]	@ 0x68
 8006196:	687b      	ldr	r3, [r7, #4]
 8006198:	681b      	ldr	r3, [r3, #0]
 800619a:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 800619e:	669a      	str	r2, [r3, #104]	@ 0x68
 80061a0:	687b      	ldr	r3, [r7, #4]
 80061a2:	681b      	ldr	r3, [r3, #0]
 80061a4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80061a6:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 80061aa:	683b      	ldr	r3, [r7, #0]
 80061ac:	681b      	ldr	r3, [r3, #0]
 80061ae:	069b      	lsls	r3, r3, #26
 80061b0:	429a      	cmp	r2, r3
 80061b2:	d107      	bne.n	80061c4 <HAL_ADC_ConfigChannel+0x5e0>
 80061b4:	687b      	ldr	r3, [r7, #4]
 80061b6:	681b      	ldr	r3, [r3, #0]
 80061b8:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
 80061ba:	687b      	ldr	r3, [r7, #4]
 80061bc:	681b      	ldr	r3, [r3, #0]
 80061be:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 80061c2:	66da      	str	r2, [r3, #108]	@ 0x6c
 80061c4:	687b      	ldr	r3, [r7, #4]
 80061c6:	681b      	ldr	r3, [r3, #0]
 80061c8:	4618      	mov	r0, r3
 80061ca:	f7ff fac9 	bl	8005760 <LL_ADC_IsEnabled>
 80061ce:	4603      	mov	r3, r0
 80061d0:	2b00      	cmp	r3, #0
 80061d2:	f040 8219 	bne.w	8006608 <HAL_ADC_ConfigChannel+0xa24>
 80061d6:	687b      	ldr	r3, [r7, #4]
 80061d8:	6818      	ldr	r0, [r3, #0]
 80061da:	683b      	ldr	r3, [r7, #0]
 80061dc:	6819      	ldr	r1, [r3, #0]
 80061de:	683b      	ldr	r3, [r7, #0]
 80061e0:	68db      	ldr	r3, [r3, #12]
 80061e2:	461a      	mov	r2, r3
 80061e4:	f7ff fa2e 	bl	8005644 <LL_ADC_SetChannelSingleDiff>
 80061e8:	683b      	ldr	r3, [r7, #0]
 80061ea:	68db      	ldr	r3, [r3, #12]
 80061ec:	4aa1      	ldr	r2, [pc, #644]	@ (8006474 <HAL_ADC_ConfigChannel+0x890>)
 80061ee:	4293      	cmp	r3, r2
 80061f0:	f040 812e 	bne.w	8006450 <HAL_ADC_ConfigChannel+0x86c>
 80061f4:	687b      	ldr	r3, [r7, #4]
 80061f6:	6818      	ldr	r0, [r3, #0]
 80061f8:	683b      	ldr	r3, [r7, #0]
 80061fa:	681b      	ldr	r3, [r3, #0]
 80061fc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006200:	2b00      	cmp	r3, #0
 8006202:	d10b      	bne.n	800621c <HAL_ADC_ConfigChannel+0x638>
 8006204:	683b      	ldr	r3, [r7, #0]
 8006206:	681b      	ldr	r3, [r3, #0]
 8006208:	0e9b      	lsrs	r3, r3, #26
 800620a:	3301      	adds	r3, #1
 800620c:	f003 031f 	and.w	r3, r3, #31
 8006210:	2b09      	cmp	r3, #9
 8006212:	bf94      	ite	ls
 8006214:	2301      	movls	r3, #1
 8006216:	2300      	movhi	r3, #0
 8006218:	b2db      	uxtb	r3, r3
 800621a:	e019      	b.n	8006250 <HAL_ADC_ConfigChannel+0x66c>
 800621c:	683b      	ldr	r3, [r7, #0]
 800621e:	681b      	ldr	r3, [r3, #0]
 8006220:	65bb      	str	r3, [r7, #88]	@ 0x58
 8006222:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8006224:	fa93 f3a3 	rbit	r3, r3
 8006228:	657b      	str	r3, [r7, #84]	@ 0x54
 800622a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800622c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800622e:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8006230:	2b00      	cmp	r3, #0
 8006232:	d101      	bne.n	8006238 <HAL_ADC_ConfigChannel+0x654>
 8006234:	2320      	movs	r3, #32
 8006236:	e003      	b.n	8006240 <HAL_ADC_ConfigChannel+0x65c>
 8006238:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800623a:	fab3 f383 	clz	r3, r3
 800623e:	b2db      	uxtb	r3, r3
 8006240:	3301      	adds	r3, #1
 8006242:	f003 031f 	and.w	r3, r3, #31
 8006246:	2b09      	cmp	r3, #9
 8006248:	bf94      	ite	ls
 800624a:	2301      	movls	r3, #1
 800624c:	2300      	movhi	r3, #0
 800624e:	b2db      	uxtb	r3, r3
 8006250:	2b00      	cmp	r3, #0
 8006252:	d079      	beq.n	8006348 <HAL_ADC_ConfigChannel+0x764>
 8006254:	683b      	ldr	r3, [r7, #0]
 8006256:	681b      	ldr	r3, [r3, #0]
 8006258:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800625c:	2b00      	cmp	r3, #0
 800625e:	d107      	bne.n	8006270 <HAL_ADC_ConfigChannel+0x68c>
 8006260:	683b      	ldr	r3, [r7, #0]
 8006262:	681b      	ldr	r3, [r3, #0]
 8006264:	0e9b      	lsrs	r3, r3, #26
 8006266:	3301      	adds	r3, #1
 8006268:	069b      	lsls	r3, r3, #26
 800626a:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800626e:	e015      	b.n	800629c <HAL_ADC_ConfigChannel+0x6b8>
 8006270:	683b      	ldr	r3, [r7, #0]
 8006272:	681b      	ldr	r3, [r3, #0]
 8006274:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006276:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8006278:	fa93 f3a3 	rbit	r3, r3
 800627c:	64bb      	str	r3, [r7, #72]	@ 0x48
 800627e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8006280:	653b      	str	r3, [r7, #80]	@ 0x50
 8006282:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8006284:	2b00      	cmp	r3, #0
 8006286:	d101      	bne.n	800628c <HAL_ADC_ConfigChannel+0x6a8>
 8006288:	2320      	movs	r3, #32
 800628a:	e003      	b.n	8006294 <HAL_ADC_ConfigChannel+0x6b0>
 800628c:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800628e:	fab3 f383 	clz	r3, r3
 8006292:	b2db      	uxtb	r3, r3
 8006294:	3301      	adds	r3, #1
 8006296:	069b      	lsls	r3, r3, #26
 8006298:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800629c:	683b      	ldr	r3, [r7, #0]
 800629e:	681b      	ldr	r3, [r3, #0]
 80062a0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80062a4:	2b00      	cmp	r3, #0
 80062a6:	d109      	bne.n	80062bc <HAL_ADC_ConfigChannel+0x6d8>
 80062a8:	683b      	ldr	r3, [r7, #0]
 80062aa:	681b      	ldr	r3, [r3, #0]
 80062ac:	0e9b      	lsrs	r3, r3, #26
 80062ae:	3301      	adds	r3, #1
 80062b0:	f003 031f 	and.w	r3, r3, #31
 80062b4:	2101      	movs	r1, #1
 80062b6:	fa01 f303 	lsl.w	r3, r1, r3
 80062ba:	e017      	b.n	80062ec <HAL_ADC_ConfigChannel+0x708>
 80062bc:	683b      	ldr	r3, [r7, #0]
 80062be:	681b      	ldr	r3, [r3, #0]
 80062c0:	643b      	str	r3, [r7, #64]	@ 0x40
 80062c2:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80062c4:	fa93 f3a3 	rbit	r3, r3
 80062c8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80062ca:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80062cc:	647b      	str	r3, [r7, #68]	@ 0x44
 80062ce:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80062d0:	2b00      	cmp	r3, #0
 80062d2:	d101      	bne.n	80062d8 <HAL_ADC_ConfigChannel+0x6f4>
 80062d4:	2320      	movs	r3, #32
 80062d6:	e003      	b.n	80062e0 <HAL_ADC_ConfigChannel+0x6fc>
 80062d8:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80062da:	fab3 f383 	clz	r3, r3
 80062de:	b2db      	uxtb	r3, r3
 80062e0:	3301      	adds	r3, #1
 80062e2:	f003 031f 	and.w	r3, r3, #31
 80062e6:	2101      	movs	r1, #1
 80062e8:	fa01 f303 	lsl.w	r3, r1, r3
 80062ec:	ea42 0103 	orr.w	r1, r2, r3
 80062f0:	683b      	ldr	r3, [r7, #0]
 80062f2:	681b      	ldr	r3, [r3, #0]
 80062f4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80062f8:	2b00      	cmp	r3, #0
 80062fa:	d10a      	bne.n	8006312 <HAL_ADC_ConfigChannel+0x72e>
 80062fc:	683b      	ldr	r3, [r7, #0]
 80062fe:	681b      	ldr	r3, [r3, #0]
 8006300:	0e9b      	lsrs	r3, r3, #26
 8006302:	3301      	adds	r3, #1
 8006304:	f003 021f 	and.w	r2, r3, #31
 8006308:	4613      	mov	r3, r2
 800630a:	005b      	lsls	r3, r3, #1
 800630c:	4413      	add	r3, r2
 800630e:	051b      	lsls	r3, r3, #20
 8006310:	e018      	b.n	8006344 <HAL_ADC_ConfigChannel+0x760>
 8006312:	683b      	ldr	r3, [r7, #0]
 8006314:	681b      	ldr	r3, [r3, #0]
 8006316:	637b      	str	r3, [r7, #52]	@ 0x34
 8006318:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800631a:	fa93 f3a3 	rbit	r3, r3
 800631e:	633b      	str	r3, [r7, #48]	@ 0x30
 8006320:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006322:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006324:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006326:	2b00      	cmp	r3, #0
 8006328:	d101      	bne.n	800632e <HAL_ADC_ConfigChannel+0x74a>
 800632a:	2320      	movs	r3, #32
 800632c:	e003      	b.n	8006336 <HAL_ADC_ConfigChannel+0x752>
 800632e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006330:	fab3 f383 	clz	r3, r3
 8006334:	b2db      	uxtb	r3, r3
 8006336:	3301      	adds	r3, #1
 8006338:	f003 021f 	and.w	r2, r3, #31
 800633c:	4613      	mov	r3, r2
 800633e:	005b      	lsls	r3, r3, #1
 8006340:	4413      	add	r3, r2
 8006342:	051b      	lsls	r3, r3, #20
 8006344:	430b      	orrs	r3, r1
 8006346:	e07e      	b.n	8006446 <HAL_ADC_ConfigChannel+0x862>
 8006348:	683b      	ldr	r3, [r7, #0]
 800634a:	681b      	ldr	r3, [r3, #0]
 800634c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006350:	2b00      	cmp	r3, #0
 8006352:	d107      	bne.n	8006364 <HAL_ADC_ConfigChannel+0x780>
 8006354:	683b      	ldr	r3, [r7, #0]
 8006356:	681b      	ldr	r3, [r3, #0]
 8006358:	0e9b      	lsrs	r3, r3, #26
 800635a:	3301      	adds	r3, #1
 800635c:	069b      	lsls	r3, r3, #26
 800635e:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8006362:	e015      	b.n	8006390 <HAL_ADC_ConfigChannel+0x7ac>
 8006364:	683b      	ldr	r3, [r7, #0]
 8006366:	681b      	ldr	r3, [r3, #0]
 8006368:	62bb      	str	r3, [r7, #40]	@ 0x28
 800636a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800636c:	fa93 f3a3 	rbit	r3, r3
 8006370:	627b      	str	r3, [r7, #36]	@ 0x24
 8006372:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006374:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006376:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006378:	2b00      	cmp	r3, #0
 800637a:	d101      	bne.n	8006380 <HAL_ADC_ConfigChannel+0x79c>
 800637c:	2320      	movs	r3, #32
 800637e:	e003      	b.n	8006388 <HAL_ADC_ConfigChannel+0x7a4>
 8006380:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006382:	fab3 f383 	clz	r3, r3
 8006386:	b2db      	uxtb	r3, r3
 8006388:	3301      	adds	r3, #1
 800638a:	069b      	lsls	r3, r3, #26
 800638c:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8006390:	683b      	ldr	r3, [r7, #0]
 8006392:	681b      	ldr	r3, [r3, #0]
 8006394:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006398:	2b00      	cmp	r3, #0
 800639a:	d109      	bne.n	80063b0 <HAL_ADC_ConfigChannel+0x7cc>
 800639c:	683b      	ldr	r3, [r7, #0]
 800639e:	681b      	ldr	r3, [r3, #0]
 80063a0:	0e9b      	lsrs	r3, r3, #26
 80063a2:	3301      	adds	r3, #1
 80063a4:	f003 031f 	and.w	r3, r3, #31
 80063a8:	2101      	movs	r1, #1
 80063aa:	fa01 f303 	lsl.w	r3, r1, r3
 80063ae:	e017      	b.n	80063e0 <HAL_ADC_ConfigChannel+0x7fc>
 80063b0:	683b      	ldr	r3, [r7, #0]
 80063b2:	681b      	ldr	r3, [r3, #0]
 80063b4:	61fb      	str	r3, [r7, #28]
 80063b6:	69fb      	ldr	r3, [r7, #28]
 80063b8:	fa93 f3a3 	rbit	r3, r3
 80063bc:	61bb      	str	r3, [r7, #24]
 80063be:	69bb      	ldr	r3, [r7, #24]
 80063c0:	623b      	str	r3, [r7, #32]
 80063c2:	6a3b      	ldr	r3, [r7, #32]
 80063c4:	2b00      	cmp	r3, #0
 80063c6:	d101      	bne.n	80063cc <HAL_ADC_ConfigChannel+0x7e8>
 80063c8:	2320      	movs	r3, #32
 80063ca:	e003      	b.n	80063d4 <HAL_ADC_ConfigChannel+0x7f0>
 80063cc:	6a3b      	ldr	r3, [r7, #32]
 80063ce:	fab3 f383 	clz	r3, r3
 80063d2:	b2db      	uxtb	r3, r3
 80063d4:	3301      	adds	r3, #1
 80063d6:	f003 031f 	and.w	r3, r3, #31
 80063da:	2101      	movs	r1, #1
 80063dc:	fa01 f303 	lsl.w	r3, r1, r3
 80063e0:	ea42 0103 	orr.w	r1, r2, r3
 80063e4:	683b      	ldr	r3, [r7, #0]
 80063e6:	681b      	ldr	r3, [r3, #0]
 80063e8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80063ec:	2b00      	cmp	r3, #0
 80063ee:	d10d      	bne.n	800640c <HAL_ADC_ConfigChannel+0x828>
 80063f0:	683b      	ldr	r3, [r7, #0]
 80063f2:	681b      	ldr	r3, [r3, #0]
 80063f4:	0e9b      	lsrs	r3, r3, #26
 80063f6:	3301      	adds	r3, #1
 80063f8:	f003 021f 	and.w	r2, r3, #31
 80063fc:	4613      	mov	r3, r2
 80063fe:	005b      	lsls	r3, r3, #1
 8006400:	4413      	add	r3, r2
 8006402:	3b1e      	subs	r3, #30
 8006404:	051b      	lsls	r3, r3, #20
 8006406:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800640a:	e01b      	b.n	8006444 <HAL_ADC_ConfigChannel+0x860>
 800640c:	683b      	ldr	r3, [r7, #0]
 800640e:	681b      	ldr	r3, [r3, #0]
 8006410:	613b      	str	r3, [r7, #16]
 8006412:	693b      	ldr	r3, [r7, #16]
 8006414:	fa93 f3a3 	rbit	r3, r3
 8006418:	60fb      	str	r3, [r7, #12]
 800641a:	68fb      	ldr	r3, [r7, #12]
 800641c:	617b      	str	r3, [r7, #20]
 800641e:	697b      	ldr	r3, [r7, #20]
 8006420:	2b00      	cmp	r3, #0
 8006422:	d101      	bne.n	8006428 <HAL_ADC_ConfigChannel+0x844>
 8006424:	2320      	movs	r3, #32
 8006426:	e003      	b.n	8006430 <HAL_ADC_ConfigChannel+0x84c>
 8006428:	697b      	ldr	r3, [r7, #20]
 800642a:	fab3 f383 	clz	r3, r3
 800642e:	b2db      	uxtb	r3, r3
 8006430:	3301      	adds	r3, #1
 8006432:	f003 021f 	and.w	r2, r3, #31
 8006436:	4613      	mov	r3, r2
 8006438:	005b      	lsls	r3, r3, #1
 800643a:	4413      	add	r3, r2
 800643c:	3b1e      	subs	r3, #30
 800643e:	051b      	lsls	r3, r3, #20
 8006440:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8006444:	430b      	orrs	r3, r1
 8006446:	683a      	ldr	r2, [r7, #0]
 8006448:	6892      	ldr	r2, [r2, #8]
 800644a:	4619      	mov	r1, r3
 800644c:	f7ff f8ce 	bl	80055ec <LL_ADC_SetChannelSamplingTime>
 8006450:	683b      	ldr	r3, [r7, #0]
 8006452:	681b      	ldr	r3, [r3, #0]
 8006454:	2b00      	cmp	r3, #0
 8006456:	f280 80d7 	bge.w	8006608 <HAL_ADC_ConfigChannel+0xa24>
 800645a:	687b      	ldr	r3, [r7, #4]
 800645c:	681b      	ldr	r3, [r3, #0]
 800645e:	4a06      	ldr	r2, [pc, #24]	@ (8006478 <HAL_ADC_ConfigChannel+0x894>)
 8006460:	4293      	cmp	r3, r2
 8006462:	d004      	beq.n	800646e <HAL_ADC_ConfigChannel+0x88a>
 8006464:	687b      	ldr	r3, [r7, #4]
 8006466:	681b      	ldr	r3, [r3, #0]
 8006468:	4a04      	ldr	r2, [pc, #16]	@ (800647c <HAL_ADC_ConfigChannel+0x898>)
 800646a:	4293      	cmp	r3, r2
 800646c:	d10a      	bne.n	8006484 <HAL_ADC_ConfigChannel+0x8a0>
 800646e:	4b04      	ldr	r3, [pc, #16]	@ (8006480 <HAL_ADC_ConfigChannel+0x89c>)
 8006470:	e009      	b.n	8006486 <HAL_ADC_ConfigChannel+0x8a2>
 8006472:	bf00      	nop
 8006474:	47ff0000 	.word	0x47ff0000
 8006478:	40022000 	.word	0x40022000
 800647c:	40022100 	.word	0x40022100
 8006480:	40022300 	.word	0x40022300
 8006484:	4b65      	ldr	r3, [pc, #404]	@ (800661c <HAL_ADC_ConfigChannel+0xa38>)
 8006486:	4618      	mov	r0, r3
 8006488:	f7fe ff84 	bl	8005394 <LL_ADC_GetCommonPathInternalCh>
 800648c:	f8c7 00cc 	str.w	r0, [r7, #204]	@ 0xcc
 8006490:	687b      	ldr	r3, [r7, #4]
 8006492:	681b      	ldr	r3, [r3, #0]
 8006494:	4a62      	ldr	r2, [pc, #392]	@ (8006620 <HAL_ADC_ConfigChannel+0xa3c>)
 8006496:	4293      	cmp	r3, r2
 8006498:	d004      	beq.n	80064a4 <HAL_ADC_ConfigChannel+0x8c0>
 800649a:	687b      	ldr	r3, [r7, #4]
 800649c:	681b      	ldr	r3, [r3, #0]
 800649e:	4a61      	ldr	r2, [pc, #388]	@ (8006624 <HAL_ADC_ConfigChannel+0xa40>)
 80064a0:	4293      	cmp	r3, r2
 80064a2:	d10e      	bne.n	80064c2 <HAL_ADC_ConfigChannel+0x8de>
 80064a4:	485e      	ldr	r0, [pc, #376]	@ (8006620 <HAL_ADC_ConfigChannel+0xa3c>)
 80064a6:	f7ff f95b 	bl	8005760 <LL_ADC_IsEnabled>
 80064aa:	4604      	mov	r4, r0
 80064ac:	485d      	ldr	r0, [pc, #372]	@ (8006624 <HAL_ADC_ConfigChannel+0xa40>)
 80064ae:	f7ff f957 	bl	8005760 <LL_ADC_IsEnabled>
 80064b2:	4603      	mov	r3, r0
 80064b4:	4323      	orrs	r3, r4
 80064b6:	2b00      	cmp	r3, #0
 80064b8:	bf0c      	ite	eq
 80064ba:	2301      	moveq	r3, #1
 80064bc:	2300      	movne	r3, #0
 80064be:	b2db      	uxtb	r3, r3
 80064c0:	e008      	b.n	80064d4 <HAL_ADC_ConfigChannel+0x8f0>
 80064c2:	4859      	ldr	r0, [pc, #356]	@ (8006628 <HAL_ADC_ConfigChannel+0xa44>)
 80064c4:	f7ff f94c 	bl	8005760 <LL_ADC_IsEnabled>
 80064c8:	4603      	mov	r3, r0
 80064ca:	2b00      	cmp	r3, #0
 80064cc:	bf0c      	ite	eq
 80064ce:	2301      	moveq	r3, #1
 80064d0:	2300      	movne	r3, #0
 80064d2:	b2db      	uxtb	r3, r3
 80064d4:	2b00      	cmp	r3, #0
 80064d6:	f000 8084 	beq.w	80065e2 <HAL_ADC_ConfigChannel+0x9fe>
 80064da:	683b      	ldr	r3, [r7, #0]
 80064dc:	681b      	ldr	r3, [r3, #0]
 80064de:	4a53      	ldr	r2, [pc, #332]	@ (800662c <HAL_ADC_ConfigChannel+0xa48>)
 80064e0:	4293      	cmp	r3, r2
 80064e2:	d132      	bne.n	800654a <HAL_ADC_ConfigChannel+0x966>
 80064e4:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 80064e8:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80064ec:	2b00      	cmp	r3, #0
 80064ee:	d12c      	bne.n	800654a <HAL_ADC_ConfigChannel+0x966>
 80064f0:	687b      	ldr	r3, [r7, #4]
 80064f2:	681b      	ldr	r3, [r3, #0]
 80064f4:	4a4c      	ldr	r2, [pc, #304]	@ (8006628 <HAL_ADC_ConfigChannel+0xa44>)
 80064f6:	4293      	cmp	r3, r2
 80064f8:	f040 8086 	bne.w	8006608 <HAL_ADC_ConfigChannel+0xa24>
 80064fc:	687b      	ldr	r3, [r7, #4]
 80064fe:	681b      	ldr	r3, [r3, #0]
 8006500:	4a47      	ldr	r2, [pc, #284]	@ (8006620 <HAL_ADC_ConfigChannel+0xa3c>)
 8006502:	4293      	cmp	r3, r2
 8006504:	d004      	beq.n	8006510 <HAL_ADC_ConfigChannel+0x92c>
 8006506:	687b      	ldr	r3, [r7, #4]
 8006508:	681b      	ldr	r3, [r3, #0]
 800650a:	4a46      	ldr	r2, [pc, #280]	@ (8006624 <HAL_ADC_ConfigChannel+0xa40>)
 800650c:	4293      	cmp	r3, r2
 800650e:	d101      	bne.n	8006514 <HAL_ADC_ConfigChannel+0x930>
 8006510:	4a47      	ldr	r2, [pc, #284]	@ (8006630 <HAL_ADC_ConfigChannel+0xa4c>)
 8006512:	e000      	b.n	8006516 <HAL_ADC_ConfigChannel+0x932>
 8006514:	4a41      	ldr	r2, [pc, #260]	@ (800661c <HAL_ADC_ConfigChannel+0xa38>)
 8006516:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 800651a:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800651e:	4619      	mov	r1, r3
 8006520:	4610      	mov	r0, r2
 8006522:	f7fe ff24 	bl	800536e <LL_ADC_SetCommonPathInternalCh>
 8006526:	4b43      	ldr	r3, [pc, #268]	@ (8006634 <HAL_ADC_ConfigChannel+0xa50>)
 8006528:	681b      	ldr	r3, [r3, #0]
 800652a:	099b      	lsrs	r3, r3, #6
 800652c:	4a42      	ldr	r2, [pc, #264]	@ (8006638 <HAL_ADC_ConfigChannel+0xa54>)
 800652e:	fba2 2303 	umull	r2, r3, r2, r3
 8006532:	099b      	lsrs	r3, r3, #6
 8006534:	3301      	adds	r3, #1
 8006536:	005b      	lsls	r3, r3, #1
 8006538:	60bb      	str	r3, [r7, #8]
 800653a:	e002      	b.n	8006542 <HAL_ADC_ConfigChannel+0x95e>
 800653c:	68bb      	ldr	r3, [r7, #8]
 800653e:	3b01      	subs	r3, #1
 8006540:	60bb      	str	r3, [r7, #8]
 8006542:	68bb      	ldr	r3, [r7, #8]
 8006544:	2b00      	cmp	r3, #0
 8006546:	d1f9      	bne.n	800653c <HAL_ADC_ConfigChannel+0x958>
 8006548:	e05e      	b.n	8006608 <HAL_ADC_ConfigChannel+0xa24>
 800654a:	683b      	ldr	r3, [r7, #0]
 800654c:	681b      	ldr	r3, [r3, #0]
 800654e:	4a3b      	ldr	r2, [pc, #236]	@ (800663c <HAL_ADC_ConfigChannel+0xa58>)
 8006550:	4293      	cmp	r3, r2
 8006552:	d120      	bne.n	8006596 <HAL_ADC_ConfigChannel+0x9b2>
 8006554:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8006558:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800655c:	2b00      	cmp	r3, #0
 800655e:	d11a      	bne.n	8006596 <HAL_ADC_ConfigChannel+0x9b2>
 8006560:	687b      	ldr	r3, [r7, #4]
 8006562:	681b      	ldr	r3, [r3, #0]
 8006564:	4a30      	ldr	r2, [pc, #192]	@ (8006628 <HAL_ADC_ConfigChannel+0xa44>)
 8006566:	4293      	cmp	r3, r2
 8006568:	d14e      	bne.n	8006608 <HAL_ADC_ConfigChannel+0xa24>
 800656a:	687b      	ldr	r3, [r7, #4]
 800656c:	681b      	ldr	r3, [r3, #0]
 800656e:	4a2c      	ldr	r2, [pc, #176]	@ (8006620 <HAL_ADC_ConfigChannel+0xa3c>)
 8006570:	4293      	cmp	r3, r2
 8006572:	d004      	beq.n	800657e <HAL_ADC_ConfigChannel+0x99a>
 8006574:	687b      	ldr	r3, [r7, #4]
 8006576:	681b      	ldr	r3, [r3, #0]
 8006578:	4a2a      	ldr	r2, [pc, #168]	@ (8006624 <HAL_ADC_ConfigChannel+0xa40>)
 800657a:	4293      	cmp	r3, r2
 800657c:	d101      	bne.n	8006582 <HAL_ADC_ConfigChannel+0x99e>
 800657e:	4a2c      	ldr	r2, [pc, #176]	@ (8006630 <HAL_ADC_ConfigChannel+0xa4c>)
 8006580:	e000      	b.n	8006584 <HAL_ADC_ConfigChannel+0x9a0>
 8006582:	4a26      	ldr	r2, [pc, #152]	@ (800661c <HAL_ADC_ConfigChannel+0xa38>)
 8006584:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8006588:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800658c:	4619      	mov	r1, r3
 800658e:	4610      	mov	r0, r2
 8006590:	f7fe feed 	bl	800536e <LL_ADC_SetCommonPathInternalCh>
 8006594:	e038      	b.n	8006608 <HAL_ADC_ConfigChannel+0xa24>
 8006596:	683b      	ldr	r3, [r7, #0]
 8006598:	681b      	ldr	r3, [r3, #0]
 800659a:	4a29      	ldr	r2, [pc, #164]	@ (8006640 <HAL_ADC_ConfigChannel+0xa5c>)
 800659c:	4293      	cmp	r3, r2
 800659e:	d133      	bne.n	8006608 <HAL_ADC_ConfigChannel+0xa24>
 80065a0:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 80065a4:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80065a8:	2b00      	cmp	r3, #0
 80065aa:	d12d      	bne.n	8006608 <HAL_ADC_ConfigChannel+0xa24>
 80065ac:	687b      	ldr	r3, [r7, #4]
 80065ae:	681b      	ldr	r3, [r3, #0]
 80065b0:	4a1d      	ldr	r2, [pc, #116]	@ (8006628 <HAL_ADC_ConfigChannel+0xa44>)
 80065b2:	4293      	cmp	r3, r2
 80065b4:	d128      	bne.n	8006608 <HAL_ADC_ConfigChannel+0xa24>
 80065b6:	687b      	ldr	r3, [r7, #4]
 80065b8:	681b      	ldr	r3, [r3, #0]
 80065ba:	4a19      	ldr	r2, [pc, #100]	@ (8006620 <HAL_ADC_ConfigChannel+0xa3c>)
 80065bc:	4293      	cmp	r3, r2
 80065be:	d004      	beq.n	80065ca <HAL_ADC_ConfigChannel+0x9e6>
 80065c0:	687b      	ldr	r3, [r7, #4]
 80065c2:	681b      	ldr	r3, [r3, #0]
 80065c4:	4a17      	ldr	r2, [pc, #92]	@ (8006624 <HAL_ADC_ConfigChannel+0xa40>)
 80065c6:	4293      	cmp	r3, r2
 80065c8:	d101      	bne.n	80065ce <HAL_ADC_ConfigChannel+0x9ea>
 80065ca:	4a19      	ldr	r2, [pc, #100]	@ (8006630 <HAL_ADC_ConfigChannel+0xa4c>)
 80065cc:	e000      	b.n	80065d0 <HAL_ADC_ConfigChannel+0x9ec>
 80065ce:	4a13      	ldr	r2, [pc, #76]	@ (800661c <HAL_ADC_ConfigChannel+0xa38>)
 80065d0:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 80065d4:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80065d8:	4619      	mov	r1, r3
 80065da:	4610      	mov	r0, r2
 80065dc:	f7fe fec7 	bl	800536e <LL_ADC_SetCommonPathInternalCh>
 80065e0:	e012      	b.n	8006608 <HAL_ADC_ConfigChannel+0xa24>
 80065e2:	687b      	ldr	r3, [r7, #4]
 80065e4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80065e6:	f043 0220 	orr.w	r2, r3, #32
 80065ea:	687b      	ldr	r3, [r7, #4]
 80065ec:	661a      	str	r2, [r3, #96]	@ 0x60
 80065ee:	2301      	movs	r3, #1
 80065f0:	f887 30df 	strb.w	r3, [r7, #223]	@ 0xdf
 80065f4:	e008      	b.n	8006608 <HAL_ADC_ConfigChannel+0xa24>
 80065f6:	687b      	ldr	r3, [r7, #4]
 80065f8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80065fa:	f043 0220 	orr.w	r2, r3, #32
 80065fe:	687b      	ldr	r3, [r7, #4]
 8006600:	661a      	str	r2, [r3, #96]	@ 0x60
 8006602:	2301      	movs	r3, #1
 8006604:	f887 30df 	strb.w	r3, [r7, #223]	@ 0xdf
 8006608:	687b      	ldr	r3, [r7, #4]
 800660a:	2200      	movs	r2, #0
 800660c:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8006610:	f897 30df 	ldrb.w	r3, [r7, #223]	@ 0xdf
 8006614:	4618      	mov	r0, r3
 8006616:	37e4      	adds	r7, #228	@ 0xe4
 8006618:	46bd      	mov	sp, r7
 800661a:	bd90      	pop	{r4, r7, pc}
 800661c:	58026300 	.word	0x58026300
 8006620:	40022000 	.word	0x40022000
 8006624:	40022100 	.word	0x40022100
 8006628:	58026000 	.word	0x58026000
 800662c:	c7520000 	.word	0xc7520000
 8006630:	40022300 	.word	0x40022300
 8006634:	24000000 	.word	0x24000000
 8006638:	053e2d63 	.word	0x053e2d63
 800663c:	c3210000 	.word	0xc3210000
 8006640:	cb840000 	.word	0xcb840000

08006644 <ADC_ConfigureBoostMode>:
 8006644:	b580      	push	{r7, lr}
 8006646:	b084      	sub	sp, #16
 8006648:	af00      	add	r7, sp, #0
 800664a:	6078      	str	r0, [r7, #4]
 800664c:	687b      	ldr	r3, [r7, #4]
 800664e:	681b      	ldr	r3, [r3, #0]
 8006650:	4a6c      	ldr	r2, [pc, #432]	@ (8006804 <ADC_ConfigureBoostMode+0x1c0>)
 8006652:	4293      	cmp	r3, r2
 8006654:	d004      	beq.n	8006660 <ADC_ConfigureBoostMode+0x1c>
 8006656:	687b      	ldr	r3, [r7, #4]
 8006658:	681b      	ldr	r3, [r3, #0]
 800665a:	4a6b      	ldr	r2, [pc, #428]	@ (8006808 <ADC_ConfigureBoostMode+0x1c4>)
 800665c:	4293      	cmp	r3, r2
 800665e:	d109      	bne.n	8006674 <ADC_ConfigureBoostMode+0x30>
 8006660:	4b6a      	ldr	r3, [pc, #424]	@ (800680c <ADC_ConfigureBoostMode+0x1c8>)
 8006662:	689b      	ldr	r3, [r3, #8]
 8006664:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006668:	2b00      	cmp	r3, #0
 800666a:	bf14      	ite	ne
 800666c:	2301      	movne	r3, #1
 800666e:	2300      	moveq	r3, #0
 8006670:	b2db      	uxtb	r3, r3
 8006672:	e008      	b.n	8006686 <ADC_ConfigureBoostMode+0x42>
 8006674:	4b66      	ldr	r3, [pc, #408]	@ (8006810 <ADC_ConfigureBoostMode+0x1cc>)
 8006676:	689b      	ldr	r3, [r3, #8]
 8006678:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800667c:	2b00      	cmp	r3, #0
 800667e:	bf14      	ite	ne
 8006680:	2301      	movne	r3, #1
 8006682:	2300      	moveq	r3, #0
 8006684:	b2db      	uxtb	r3, r3
 8006686:	2b00      	cmp	r3, #0
 8006688:	d01c      	beq.n	80066c4 <ADC_ConfigureBoostMode+0x80>
 800668a:	f005 fbe5 	bl	800be58 <HAL_RCC_GetHCLKFreq>
 800668e:	60f8      	str	r0, [r7, #12]
 8006690:	687b      	ldr	r3, [r7, #4]
 8006692:	685b      	ldr	r3, [r3, #4]
 8006694:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8006698:	d010      	beq.n	80066bc <ADC_ConfigureBoostMode+0x78>
 800669a:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800669e:	d873      	bhi.n	8006788 <ADC_ConfigureBoostMode+0x144>
 80066a0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80066a4:	d002      	beq.n	80066ac <ADC_ConfigureBoostMode+0x68>
 80066a6:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80066aa:	d16d      	bne.n	8006788 <ADC_ConfigureBoostMode+0x144>
 80066ac:	687b      	ldr	r3, [r7, #4]
 80066ae:	685b      	ldr	r3, [r3, #4]
 80066b0:	0c1b      	lsrs	r3, r3, #16
 80066b2:	68fa      	ldr	r2, [r7, #12]
 80066b4:	fbb2 f3f3 	udiv	r3, r2, r3
 80066b8:	60fb      	str	r3, [r7, #12]
 80066ba:	e068      	b.n	800678e <ADC_ConfigureBoostMode+0x14a>
 80066bc:	68fb      	ldr	r3, [r7, #12]
 80066be:	089b      	lsrs	r3, r3, #2
 80066c0:	60fb      	str	r3, [r7, #12]
 80066c2:	e064      	b.n	800678e <ADC_ConfigureBoostMode+0x14a>
 80066c4:	f44f 2000 	mov.w	r0, #524288	@ 0x80000
 80066c8:	f04f 0100 	mov.w	r1, #0
 80066cc:	f006 fdc0 	bl	800d250 <HAL_RCCEx_GetPeriphCLKFreq>
 80066d0:	60f8      	str	r0, [r7, #12]
 80066d2:	687b      	ldr	r3, [r7, #4]
 80066d4:	685b      	ldr	r3, [r3, #4]
 80066d6:	f5b3 1f30 	cmp.w	r3, #2883584	@ 0x2c0000
 80066da:	d051      	beq.n	8006780 <ADC_ConfigureBoostMode+0x13c>
 80066dc:	f5b3 1f30 	cmp.w	r3, #2883584	@ 0x2c0000
 80066e0:	d854      	bhi.n	800678c <ADC_ConfigureBoostMode+0x148>
 80066e2:	f5b3 1f20 	cmp.w	r3, #2621440	@ 0x280000
 80066e6:	d047      	beq.n	8006778 <ADC_ConfigureBoostMode+0x134>
 80066e8:	f5b3 1f20 	cmp.w	r3, #2621440	@ 0x280000
 80066ec:	d84e      	bhi.n	800678c <ADC_ConfigureBoostMode+0x148>
 80066ee:	f5b3 1f10 	cmp.w	r3, #2359296	@ 0x240000
 80066f2:	d03d      	beq.n	8006770 <ADC_ConfigureBoostMode+0x12c>
 80066f4:	f5b3 1f10 	cmp.w	r3, #2359296	@ 0x240000
 80066f8:	d848      	bhi.n	800678c <ADC_ConfigureBoostMode+0x148>
 80066fa:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 80066fe:	d033      	beq.n	8006768 <ADC_ConfigureBoostMode+0x124>
 8006700:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8006704:	d842      	bhi.n	800678c <ADC_ConfigureBoostMode+0x148>
 8006706:	f5b3 1fe0 	cmp.w	r3, #1835008	@ 0x1c0000
 800670a:	d029      	beq.n	8006760 <ADC_ConfigureBoostMode+0x11c>
 800670c:	f5b3 1fe0 	cmp.w	r3, #1835008	@ 0x1c0000
 8006710:	d83c      	bhi.n	800678c <ADC_ConfigureBoostMode+0x148>
 8006712:	f5b3 1fc0 	cmp.w	r3, #1572864	@ 0x180000
 8006716:	d01a      	beq.n	800674e <ADC_ConfigureBoostMode+0x10a>
 8006718:	f5b3 1fc0 	cmp.w	r3, #1572864	@ 0x180000
 800671c:	d836      	bhi.n	800678c <ADC_ConfigureBoostMode+0x148>
 800671e:	f5b3 1fa0 	cmp.w	r3, #1310720	@ 0x140000
 8006722:	d014      	beq.n	800674e <ADC_ConfigureBoostMode+0x10a>
 8006724:	f5b3 1fa0 	cmp.w	r3, #1310720	@ 0x140000
 8006728:	d830      	bhi.n	800678c <ADC_ConfigureBoostMode+0x148>
 800672a:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800672e:	d00e      	beq.n	800674e <ADC_ConfigureBoostMode+0x10a>
 8006730:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8006734:	d82a      	bhi.n	800678c <ADC_ConfigureBoostMode+0x148>
 8006736:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 800673a:	d008      	beq.n	800674e <ADC_ConfigureBoostMode+0x10a>
 800673c:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8006740:	d824      	bhi.n	800678c <ADC_ConfigureBoostMode+0x148>
 8006742:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8006746:	d002      	beq.n	800674e <ADC_ConfigureBoostMode+0x10a>
 8006748:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 800674c:	d11e      	bne.n	800678c <ADC_ConfigureBoostMode+0x148>
 800674e:	687b      	ldr	r3, [r7, #4]
 8006750:	685b      	ldr	r3, [r3, #4]
 8006752:	0c9b      	lsrs	r3, r3, #18
 8006754:	005b      	lsls	r3, r3, #1
 8006756:	68fa      	ldr	r2, [r7, #12]
 8006758:	fbb2 f3f3 	udiv	r3, r2, r3
 800675c:	60fb      	str	r3, [r7, #12]
 800675e:	e016      	b.n	800678e <ADC_ConfigureBoostMode+0x14a>
 8006760:	68fb      	ldr	r3, [r7, #12]
 8006762:	091b      	lsrs	r3, r3, #4
 8006764:	60fb      	str	r3, [r7, #12]
 8006766:	e012      	b.n	800678e <ADC_ConfigureBoostMode+0x14a>
 8006768:	68fb      	ldr	r3, [r7, #12]
 800676a:	095b      	lsrs	r3, r3, #5
 800676c:	60fb      	str	r3, [r7, #12]
 800676e:	e00e      	b.n	800678e <ADC_ConfigureBoostMode+0x14a>
 8006770:	68fb      	ldr	r3, [r7, #12]
 8006772:	099b      	lsrs	r3, r3, #6
 8006774:	60fb      	str	r3, [r7, #12]
 8006776:	e00a      	b.n	800678e <ADC_ConfigureBoostMode+0x14a>
 8006778:	68fb      	ldr	r3, [r7, #12]
 800677a:	09db      	lsrs	r3, r3, #7
 800677c:	60fb      	str	r3, [r7, #12]
 800677e:	e006      	b.n	800678e <ADC_ConfigureBoostMode+0x14a>
 8006780:	68fb      	ldr	r3, [r7, #12]
 8006782:	0a1b      	lsrs	r3, r3, #8
 8006784:	60fb      	str	r3, [r7, #12]
 8006786:	e002      	b.n	800678e <ADC_ConfigureBoostMode+0x14a>
 8006788:	bf00      	nop
 800678a:	e000      	b.n	800678e <ADC_ConfigureBoostMode+0x14a>
 800678c:	bf00      	nop
 800678e:	68fb      	ldr	r3, [r7, #12]
 8006790:	085b      	lsrs	r3, r3, #1
 8006792:	60fb      	str	r3, [r7, #12]
 8006794:	68fb      	ldr	r3, [r7, #12]
 8006796:	4a1f      	ldr	r2, [pc, #124]	@ (8006814 <ADC_ConfigureBoostMode+0x1d0>)
 8006798:	4293      	cmp	r3, r2
 800679a:	d808      	bhi.n	80067ae <ADC_ConfigureBoostMode+0x16a>
 800679c:	687b      	ldr	r3, [r7, #4]
 800679e:	681b      	ldr	r3, [r3, #0]
 80067a0:	689a      	ldr	r2, [r3, #8]
 80067a2:	687b      	ldr	r3, [r7, #4]
 80067a4:	681b      	ldr	r3, [r3, #0]
 80067a6:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80067aa:	609a      	str	r2, [r3, #8]
 80067ac:	e025      	b.n	80067fa <ADC_ConfigureBoostMode+0x1b6>
 80067ae:	68fb      	ldr	r3, [r7, #12]
 80067b0:	4a19      	ldr	r2, [pc, #100]	@ (8006818 <ADC_ConfigureBoostMode+0x1d4>)
 80067b2:	4293      	cmp	r3, r2
 80067b4:	d80a      	bhi.n	80067cc <ADC_ConfigureBoostMode+0x188>
 80067b6:	687b      	ldr	r3, [r7, #4]
 80067b8:	681b      	ldr	r3, [r3, #0]
 80067ba:	689b      	ldr	r3, [r3, #8]
 80067bc:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80067c0:	687b      	ldr	r3, [r7, #4]
 80067c2:	681b      	ldr	r3, [r3, #0]
 80067c4:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80067c8:	609a      	str	r2, [r3, #8]
 80067ca:	e016      	b.n	80067fa <ADC_ConfigureBoostMode+0x1b6>
 80067cc:	68fb      	ldr	r3, [r7, #12]
 80067ce:	4a13      	ldr	r2, [pc, #76]	@ (800681c <ADC_ConfigureBoostMode+0x1d8>)
 80067d0:	4293      	cmp	r3, r2
 80067d2:	d80a      	bhi.n	80067ea <ADC_ConfigureBoostMode+0x1a6>
 80067d4:	687b      	ldr	r3, [r7, #4]
 80067d6:	681b      	ldr	r3, [r3, #0]
 80067d8:	689b      	ldr	r3, [r3, #8]
 80067da:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80067de:	687b      	ldr	r3, [r7, #4]
 80067e0:	681b      	ldr	r3, [r3, #0]
 80067e2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80067e6:	609a      	str	r2, [r3, #8]
 80067e8:	e007      	b.n	80067fa <ADC_ConfigureBoostMode+0x1b6>
 80067ea:	687b      	ldr	r3, [r7, #4]
 80067ec:	681b      	ldr	r3, [r3, #0]
 80067ee:	689a      	ldr	r2, [r3, #8]
 80067f0:	687b      	ldr	r3, [r7, #4]
 80067f2:	681b      	ldr	r3, [r3, #0]
 80067f4:	f442 7240 	orr.w	r2, r2, #768	@ 0x300
 80067f8:	609a      	str	r2, [r3, #8]
 80067fa:	bf00      	nop
 80067fc:	3710      	adds	r7, #16
 80067fe:	46bd      	mov	sp, r7
 8006800:	bd80      	pop	{r7, pc}
 8006802:	bf00      	nop
 8006804:	40022000 	.word	0x40022000
 8006808:	40022100 	.word	0x40022100
 800680c:	40022300 	.word	0x40022300
 8006810:	58026300 	.word	0x58026300
 8006814:	005f5e10 	.word	0x005f5e10
 8006818:	00bebc20 	.word	0x00bebc20
 800681c:	017d7840 	.word	0x017d7840

08006820 <LL_ADC_IsEnabled>:
 8006820:	b480      	push	{r7}
 8006822:	b083      	sub	sp, #12
 8006824:	af00      	add	r7, sp, #0
 8006826:	6078      	str	r0, [r7, #4]
 8006828:	687b      	ldr	r3, [r7, #4]
 800682a:	689b      	ldr	r3, [r3, #8]
 800682c:	f003 0301 	and.w	r3, r3, #1
 8006830:	2b01      	cmp	r3, #1
 8006832:	d101      	bne.n	8006838 <LL_ADC_IsEnabled+0x18>
 8006834:	2301      	movs	r3, #1
 8006836:	e000      	b.n	800683a <LL_ADC_IsEnabled+0x1a>
 8006838:	2300      	movs	r3, #0
 800683a:	4618      	mov	r0, r3
 800683c:	370c      	adds	r7, #12
 800683e:	46bd      	mov	sp, r7
 8006840:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006844:	4770      	bx	lr

08006846 <LL_ADC_REG_IsConversionOngoing>:
 8006846:	b480      	push	{r7}
 8006848:	b083      	sub	sp, #12
 800684a:	af00      	add	r7, sp, #0
 800684c:	6078      	str	r0, [r7, #4]
 800684e:	687b      	ldr	r3, [r7, #4]
 8006850:	689b      	ldr	r3, [r3, #8]
 8006852:	f003 0304 	and.w	r3, r3, #4
 8006856:	2b04      	cmp	r3, #4
 8006858:	d101      	bne.n	800685e <LL_ADC_REG_IsConversionOngoing+0x18>
 800685a:	2301      	movs	r3, #1
 800685c:	e000      	b.n	8006860 <LL_ADC_REG_IsConversionOngoing+0x1a>
 800685e:	2300      	movs	r3, #0
 8006860:	4618      	mov	r0, r3
 8006862:	370c      	adds	r7, #12
 8006864:	46bd      	mov	sp, r7
 8006866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800686a:	4770      	bx	lr

0800686c <HAL_ADCEx_MultiModeConfigChannel>:
 800686c:	b590      	push	{r4, r7, lr}
 800686e:	b0a3      	sub	sp, #140	@ 0x8c
 8006870:	af00      	add	r7, sp, #0
 8006872:	6078      	str	r0, [r7, #4]
 8006874:	6039      	str	r1, [r7, #0]
 8006876:	2300      	movs	r3, #0
 8006878:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 800687c:	687b      	ldr	r3, [r7, #4]
 800687e:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8006882:	2b01      	cmp	r3, #1
 8006884:	d101      	bne.n	800688a <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 8006886:	2302      	movs	r3, #2
 8006888:	e0c1      	b.n	8006a0e <HAL_ADCEx_MultiModeConfigChannel+0x1a2>
 800688a:	687b      	ldr	r3, [r7, #4]
 800688c:	2201      	movs	r2, #1
 800688e:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8006892:	2300      	movs	r3, #0
 8006894:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8006896:	2300      	movs	r3, #0
 8006898:	673b      	str	r3, [r7, #112]	@ 0x70
 800689a:	687b      	ldr	r3, [r7, #4]
 800689c:	681b      	ldr	r3, [r3, #0]
 800689e:	4a5e      	ldr	r2, [pc, #376]	@ (8006a18 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 80068a0:	4293      	cmp	r3, r2
 80068a2:	d102      	bne.n	80068aa <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 80068a4:	4b5d      	ldr	r3, [pc, #372]	@ (8006a1c <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 80068a6:	60fb      	str	r3, [r7, #12]
 80068a8:	e001      	b.n	80068ae <HAL_ADCEx_MultiModeConfigChannel+0x42>
 80068aa:	2300      	movs	r3, #0
 80068ac:	60fb      	str	r3, [r7, #12]
 80068ae:	68fb      	ldr	r3, [r7, #12]
 80068b0:	2b00      	cmp	r3, #0
 80068b2:	d10b      	bne.n	80068cc <HAL_ADCEx_MultiModeConfigChannel+0x60>
 80068b4:	687b      	ldr	r3, [r7, #4]
 80068b6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80068b8:	f043 0220 	orr.w	r2, r3, #32
 80068bc:	687b      	ldr	r3, [r7, #4]
 80068be:	661a      	str	r2, [r3, #96]	@ 0x60
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	2200      	movs	r2, #0
 80068c4:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 80068c8:	2301      	movs	r3, #1
 80068ca:	e0a0      	b.n	8006a0e <HAL_ADCEx_MultiModeConfigChannel+0x1a2>
 80068cc:	68fb      	ldr	r3, [r7, #12]
 80068ce:	4618      	mov	r0, r3
 80068d0:	f7ff ffb9 	bl	8006846 <LL_ADC_REG_IsConversionOngoing>
 80068d4:	f8c7 0080 	str.w	r0, [r7, #128]	@ 0x80
 80068d8:	687b      	ldr	r3, [r7, #4]
 80068da:	681b      	ldr	r3, [r3, #0]
 80068dc:	4618      	mov	r0, r3
 80068de:	f7ff ffb2 	bl	8006846 <LL_ADC_REG_IsConversionOngoing>
 80068e2:	4603      	mov	r3, r0
 80068e4:	2b00      	cmp	r3, #0
 80068e6:	f040 8081 	bne.w	80069ec <HAL_ADCEx_MultiModeConfigChannel+0x180>
 80068ea:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 80068ee:	2b00      	cmp	r3, #0
 80068f0:	d17c      	bne.n	80069ec <HAL_ADCEx_MultiModeConfigChannel+0x180>
 80068f2:	687b      	ldr	r3, [r7, #4]
 80068f4:	681b      	ldr	r3, [r3, #0]
 80068f6:	4a48      	ldr	r2, [pc, #288]	@ (8006a18 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 80068f8:	4293      	cmp	r3, r2
 80068fa:	d004      	beq.n	8006906 <HAL_ADCEx_MultiModeConfigChannel+0x9a>
 80068fc:	687b      	ldr	r3, [r7, #4]
 80068fe:	681b      	ldr	r3, [r3, #0]
 8006900:	4a46      	ldr	r2, [pc, #280]	@ (8006a1c <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 8006902:	4293      	cmp	r3, r2
 8006904:	d101      	bne.n	800690a <HAL_ADCEx_MultiModeConfigChannel+0x9e>
 8006906:	4b46      	ldr	r3, [pc, #280]	@ (8006a20 <HAL_ADCEx_MultiModeConfigChannel+0x1b4>)
 8006908:	e000      	b.n	800690c <HAL_ADCEx_MultiModeConfigChannel+0xa0>
 800690a:	4b46      	ldr	r3, [pc, #280]	@ (8006a24 <HAL_ADCEx_MultiModeConfigChannel+0x1b8>)
 800690c:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800690e:	683b      	ldr	r3, [r7, #0]
 8006910:	681b      	ldr	r3, [r3, #0]
 8006912:	2b00      	cmp	r3, #0
 8006914:	d039      	beq.n	800698a <HAL_ADCEx_MultiModeConfigChannel+0x11e>
 8006916:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8006918:	689b      	ldr	r3, [r3, #8]
 800691a:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 800691e:	683b      	ldr	r3, [r7, #0]
 8006920:	685b      	ldr	r3, [r3, #4]
 8006922:	431a      	orrs	r2, r3
 8006924:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8006926:	609a      	str	r2, [r3, #8]
 8006928:	687b      	ldr	r3, [r7, #4]
 800692a:	681b      	ldr	r3, [r3, #0]
 800692c:	4a3a      	ldr	r2, [pc, #232]	@ (8006a18 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 800692e:	4293      	cmp	r3, r2
 8006930:	d004      	beq.n	800693c <HAL_ADCEx_MultiModeConfigChannel+0xd0>
 8006932:	687b      	ldr	r3, [r7, #4]
 8006934:	681b      	ldr	r3, [r3, #0]
 8006936:	4a39      	ldr	r2, [pc, #228]	@ (8006a1c <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 8006938:	4293      	cmp	r3, r2
 800693a:	d10e      	bne.n	800695a <HAL_ADCEx_MultiModeConfigChannel+0xee>
 800693c:	4836      	ldr	r0, [pc, #216]	@ (8006a18 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 800693e:	f7ff ff6f 	bl	8006820 <LL_ADC_IsEnabled>
 8006942:	4604      	mov	r4, r0
 8006944:	4835      	ldr	r0, [pc, #212]	@ (8006a1c <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 8006946:	f7ff ff6b 	bl	8006820 <LL_ADC_IsEnabled>
 800694a:	4603      	mov	r3, r0
 800694c:	4323      	orrs	r3, r4
 800694e:	2b00      	cmp	r3, #0
 8006950:	bf0c      	ite	eq
 8006952:	2301      	moveq	r3, #1
 8006954:	2300      	movne	r3, #0
 8006956:	b2db      	uxtb	r3, r3
 8006958:	e008      	b.n	800696c <HAL_ADCEx_MultiModeConfigChannel+0x100>
 800695a:	4833      	ldr	r0, [pc, #204]	@ (8006a28 <HAL_ADCEx_MultiModeConfigChannel+0x1bc>)
 800695c:	f7ff ff60 	bl	8006820 <LL_ADC_IsEnabled>
 8006960:	4603      	mov	r3, r0
 8006962:	2b00      	cmp	r3, #0
 8006964:	bf0c      	ite	eq
 8006966:	2301      	moveq	r3, #1
 8006968:	2300      	movne	r3, #0
 800696a:	b2db      	uxtb	r3, r3
 800696c:	2b00      	cmp	r3, #0
 800696e:	d047      	beq.n	8006a00 <HAL_ADCEx_MultiModeConfigChannel+0x194>
 8006970:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8006972:	689a      	ldr	r2, [r3, #8]
 8006974:	4b2d      	ldr	r3, [pc, #180]	@ (8006a2c <HAL_ADCEx_MultiModeConfigChannel+0x1c0>)
 8006976:	4013      	ands	r3, r2
 8006978:	683a      	ldr	r2, [r7, #0]
 800697a:	6811      	ldr	r1, [r2, #0]
 800697c:	683a      	ldr	r2, [r7, #0]
 800697e:	6892      	ldr	r2, [r2, #8]
 8006980:	430a      	orrs	r2, r1
 8006982:	431a      	orrs	r2, r3
 8006984:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8006986:	609a      	str	r2, [r3, #8]
 8006988:	e03a      	b.n	8006a00 <HAL_ADCEx_MultiModeConfigChannel+0x194>
 800698a:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800698c:	689b      	ldr	r3, [r3, #8]
 800698e:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8006992:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8006994:	609a      	str	r2, [r3, #8]
 8006996:	687b      	ldr	r3, [r7, #4]
 8006998:	681b      	ldr	r3, [r3, #0]
 800699a:	4a1f      	ldr	r2, [pc, #124]	@ (8006a18 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 800699c:	4293      	cmp	r3, r2
 800699e:	d004      	beq.n	80069aa <HAL_ADCEx_MultiModeConfigChannel+0x13e>
 80069a0:	687b      	ldr	r3, [r7, #4]
 80069a2:	681b      	ldr	r3, [r3, #0]
 80069a4:	4a1d      	ldr	r2, [pc, #116]	@ (8006a1c <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 80069a6:	4293      	cmp	r3, r2
 80069a8:	d10e      	bne.n	80069c8 <HAL_ADCEx_MultiModeConfigChannel+0x15c>
 80069aa:	481b      	ldr	r0, [pc, #108]	@ (8006a18 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 80069ac:	f7ff ff38 	bl	8006820 <LL_ADC_IsEnabled>
 80069b0:	4604      	mov	r4, r0
 80069b2:	481a      	ldr	r0, [pc, #104]	@ (8006a1c <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 80069b4:	f7ff ff34 	bl	8006820 <LL_ADC_IsEnabled>
 80069b8:	4603      	mov	r3, r0
 80069ba:	4323      	orrs	r3, r4
 80069bc:	2b00      	cmp	r3, #0
 80069be:	bf0c      	ite	eq
 80069c0:	2301      	moveq	r3, #1
 80069c2:	2300      	movne	r3, #0
 80069c4:	b2db      	uxtb	r3, r3
 80069c6:	e008      	b.n	80069da <HAL_ADCEx_MultiModeConfigChannel+0x16e>
 80069c8:	4817      	ldr	r0, [pc, #92]	@ (8006a28 <HAL_ADCEx_MultiModeConfigChannel+0x1bc>)
 80069ca:	f7ff ff29 	bl	8006820 <LL_ADC_IsEnabled>
 80069ce:	4603      	mov	r3, r0
 80069d0:	2b00      	cmp	r3, #0
 80069d2:	bf0c      	ite	eq
 80069d4:	2301      	moveq	r3, #1
 80069d6:	2300      	movne	r3, #0
 80069d8:	b2db      	uxtb	r3, r3
 80069da:	2b00      	cmp	r3, #0
 80069dc:	d010      	beq.n	8006a00 <HAL_ADCEx_MultiModeConfigChannel+0x194>
 80069de:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 80069e0:	689a      	ldr	r2, [r3, #8]
 80069e2:	4b12      	ldr	r3, [pc, #72]	@ (8006a2c <HAL_ADCEx_MultiModeConfigChannel+0x1c0>)
 80069e4:	4013      	ands	r3, r2
 80069e6:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 80069e8:	6093      	str	r3, [r2, #8]
 80069ea:	e009      	b.n	8006a00 <HAL_ADCEx_MultiModeConfigChannel+0x194>
 80069ec:	687b      	ldr	r3, [r7, #4]
 80069ee:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80069f0:	f043 0220 	orr.w	r2, r3, #32
 80069f4:	687b      	ldr	r3, [r7, #4]
 80069f6:	661a      	str	r2, [r3, #96]	@ 0x60
 80069f8:	2301      	movs	r3, #1
 80069fa:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 80069fe:	e000      	b.n	8006a02 <HAL_ADCEx_MultiModeConfigChannel+0x196>
 8006a00:	bf00      	nop
 8006a02:	687b      	ldr	r3, [r7, #4]
 8006a04:	2200      	movs	r2, #0
 8006a06:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8006a0a:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 8006a0e:	4618      	mov	r0, r3
 8006a10:	378c      	adds	r7, #140	@ 0x8c
 8006a12:	46bd      	mov	sp, r7
 8006a14:	bd90      	pop	{r4, r7, pc}
 8006a16:	bf00      	nop
 8006a18:	40022000 	.word	0x40022000
 8006a1c:	40022100 	.word	0x40022100
 8006a20:	40022300 	.word	0x40022300
 8006a24:	58026300 	.word	0x58026300
 8006a28:	58026000 	.word	0x58026000
 8006a2c:	fffff0e0 	.word	0xfffff0e0

08006a30 <__NVIC_SetPriorityGrouping>:
 8006a30:	b480      	push	{r7}
 8006a32:	b085      	sub	sp, #20
 8006a34:	af00      	add	r7, sp, #0
 8006a36:	6078      	str	r0, [r7, #4]
 8006a38:	687b      	ldr	r3, [r7, #4]
 8006a3a:	f003 0307 	and.w	r3, r3, #7
 8006a3e:	60fb      	str	r3, [r7, #12]
 8006a40:	4b0b      	ldr	r3, [pc, #44]	@ (8006a70 <__NVIC_SetPriorityGrouping+0x40>)
 8006a42:	68db      	ldr	r3, [r3, #12]
 8006a44:	60bb      	str	r3, [r7, #8]
 8006a46:	68ba      	ldr	r2, [r7, #8]
 8006a48:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8006a4c:	4013      	ands	r3, r2
 8006a4e:	60bb      	str	r3, [r7, #8]
 8006a50:	68fb      	ldr	r3, [r7, #12]
 8006a52:	021a      	lsls	r2, r3, #8
 8006a54:	68bb      	ldr	r3, [r7, #8]
 8006a56:	431a      	orrs	r2, r3
 8006a58:	4b06      	ldr	r3, [pc, #24]	@ (8006a74 <__NVIC_SetPriorityGrouping+0x44>)
 8006a5a:	4313      	orrs	r3, r2
 8006a5c:	60bb      	str	r3, [r7, #8]
 8006a5e:	4a04      	ldr	r2, [pc, #16]	@ (8006a70 <__NVIC_SetPriorityGrouping+0x40>)
 8006a60:	68bb      	ldr	r3, [r7, #8]
 8006a62:	60d3      	str	r3, [r2, #12]
 8006a64:	bf00      	nop
 8006a66:	3714      	adds	r7, #20
 8006a68:	46bd      	mov	sp, r7
 8006a6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a6e:	4770      	bx	lr
 8006a70:	e000ed00 	.word	0xe000ed00
 8006a74:	05fa0000 	.word	0x05fa0000

08006a78 <__NVIC_GetPriorityGrouping>:
 8006a78:	b480      	push	{r7}
 8006a7a:	af00      	add	r7, sp, #0
 8006a7c:	4b04      	ldr	r3, [pc, #16]	@ (8006a90 <__NVIC_GetPriorityGrouping+0x18>)
 8006a7e:	68db      	ldr	r3, [r3, #12]
 8006a80:	0a1b      	lsrs	r3, r3, #8
 8006a82:	f003 0307 	and.w	r3, r3, #7
 8006a86:	4618      	mov	r0, r3
 8006a88:	46bd      	mov	sp, r7
 8006a8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a8e:	4770      	bx	lr
 8006a90:	e000ed00 	.word	0xe000ed00

08006a94 <__NVIC_EnableIRQ>:
 8006a94:	b480      	push	{r7}
 8006a96:	b083      	sub	sp, #12
 8006a98:	af00      	add	r7, sp, #0
 8006a9a:	4603      	mov	r3, r0
 8006a9c:	80fb      	strh	r3, [r7, #6]
 8006a9e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8006aa2:	2b00      	cmp	r3, #0
 8006aa4:	db0b      	blt.n	8006abe <__NVIC_EnableIRQ+0x2a>
 8006aa6:	88fb      	ldrh	r3, [r7, #6]
 8006aa8:	f003 021f 	and.w	r2, r3, #31
 8006aac:	4907      	ldr	r1, [pc, #28]	@ (8006acc <__NVIC_EnableIRQ+0x38>)
 8006aae:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8006ab2:	095b      	lsrs	r3, r3, #5
 8006ab4:	2001      	movs	r0, #1
 8006ab6:	fa00 f202 	lsl.w	r2, r0, r2
 8006aba:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8006abe:	bf00      	nop
 8006ac0:	370c      	adds	r7, #12
 8006ac2:	46bd      	mov	sp, r7
 8006ac4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ac8:	4770      	bx	lr
 8006aca:	bf00      	nop
 8006acc:	e000e100 	.word	0xe000e100

08006ad0 <__NVIC_SetPriority>:
 8006ad0:	b480      	push	{r7}
 8006ad2:	b083      	sub	sp, #12
 8006ad4:	af00      	add	r7, sp, #0
 8006ad6:	4603      	mov	r3, r0
 8006ad8:	6039      	str	r1, [r7, #0]
 8006ada:	80fb      	strh	r3, [r7, #6]
 8006adc:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8006ae0:	2b00      	cmp	r3, #0
 8006ae2:	db0a      	blt.n	8006afa <__NVIC_SetPriority+0x2a>
 8006ae4:	683b      	ldr	r3, [r7, #0]
 8006ae6:	b2da      	uxtb	r2, r3
 8006ae8:	490c      	ldr	r1, [pc, #48]	@ (8006b1c <__NVIC_SetPriority+0x4c>)
 8006aea:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8006aee:	0112      	lsls	r2, r2, #4
 8006af0:	b2d2      	uxtb	r2, r2
 8006af2:	440b      	add	r3, r1
 8006af4:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8006af8:	e00a      	b.n	8006b10 <__NVIC_SetPriority+0x40>
 8006afa:	683b      	ldr	r3, [r7, #0]
 8006afc:	b2da      	uxtb	r2, r3
 8006afe:	4908      	ldr	r1, [pc, #32]	@ (8006b20 <__NVIC_SetPriority+0x50>)
 8006b00:	88fb      	ldrh	r3, [r7, #6]
 8006b02:	f003 030f 	and.w	r3, r3, #15
 8006b06:	3b04      	subs	r3, #4
 8006b08:	0112      	lsls	r2, r2, #4
 8006b0a:	b2d2      	uxtb	r2, r2
 8006b0c:	440b      	add	r3, r1
 8006b0e:	761a      	strb	r2, [r3, #24]
 8006b10:	bf00      	nop
 8006b12:	370c      	adds	r7, #12
 8006b14:	46bd      	mov	sp, r7
 8006b16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b1a:	4770      	bx	lr
 8006b1c:	e000e100 	.word	0xe000e100
 8006b20:	e000ed00 	.word	0xe000ed00

08006b24 <NVIC_EncodePriority>:
 8006b24:	b480      	push	{r7}
 8006b26:	b089      	sub	sp, #36	@ 0x24
 8006b28:	af00      	add	r7, sp, #0
 8006b2a:	60f8      	str	r0, [r7, #12]
 8006b2c:	60b9      	str	r1, [r7, #8]
 8006b2e:	607a      	str	r2, [r7, #4]
 8006b30:	68fb      	ldr	r3, [r7, #12]
 8006b32:	f003 0307 	and.w	r3, r3, #7
 8006b36:	61fb      	str	r3, [r7, #28]
 8006b38:	69fb      	ldr	r3, [r7, #28]
 8006b3a:	f1c3 0307 	rsb	r3, r3, #7
 8006b3e:	2b04      	cmp	r3, #4
 8006b40:	bf28      	it	cs
 8006b42:	2304      	movcs	r3, #4
 8006b44:	61bb      	str	r3, [r7, #24]
 8006b46:	69fb      	ldr	r3, [r7, #28]
 8006b48:	3304      	adds	r3, #4
 8006b4a:	2b06      	cmp	r3, #6
 8006b4c:	d902      	bls.n	8006b54 <NVIC_EncodePriority+0x30>
 8006b4e:	69fb      	ldr	r3, [r7, #28]
 8006b50:	3b03      	subs	r3, #3
 8006b52:	e000      	b.n	8006b56 <NVIC_EncodePriority+0x32>
 8006b54:	2300      	movs	r3, #0
 8006b56:	617b      	str	r3, [r7, #20]
 8006b58:	f04f 32ff 	mov.w	r2, #4294967295
 8006b5c:	69bb      	ldr	r3, [r7, #24]
 8006b5e:	fa02 f303 	lsl.w	r3, r2, r3
 8006b62:	43da      	mvns	r2, r3
 8006b64:	68bb      	ldr	r3, [r7, #8]
 8006b66:	401a      	ands	r2, r3
 8006b68:	697b      	ldr	r3, [r7, #20]
 8006b6a:	409a      	lsls	r2, r3
 8006b6c:	f04f 31ff 	mov.w	r1, #4294967295
 8006b70:	697b      	ldr	r3, [r7, #20]
 8006b72:	fa01 f303 	lsl.w	r3, r1, r3
 8006b76:	43d9      	mvns	r1, r3
 8006b78:	687b      	ldr	r3, [r7, #4]
 8006b7a:	400b      	ands	r3, r1
 8006b7c:	4313      	orrs	r3, r2
 8006b7e:	4618      	mov	r0, r3
 8006b80:	3724      	adds	r7, #36	@ 0x24
 8006b82:	46bd      	mov	sp, r7
 8006b84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b88:	4770      	bx	lr
	...

08006b8c <SysTick_Config>:
 8006b8c:	b580      	push	{r7, lr}
 8006b8e:	b082      	sub	sp, #8
 8006b90:	af00      	add	r7, sp, #0
 8006b92:	6078      	str	r0, [r7, #4]
 8006b94:	687b      	ldr	r3, [r7, #4]
 8006b96:	3b01      	subs	r3, #1
 8006b98:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8006b9c:	d301      	bcc.n	8006ba2 <SysTick_Config+0x16>
 8006b9e:	2301      	movs	r3, #1
 8006ba0:	e00f      	b.n	8006bc2 <SysTick_Config+0x36>
 8006ba2:	4a0a      	ldr	r2, [pc, #40]	@ (8006bcc <SysTick_Config+0x40>)
 8006ba4:	687b      	ldr	r3, [r7, #4]
 8006ba6:	3b01      	subs	r3, #1
 8006ba8:	6053      	str	r3, [r2, #4]
 8006baa:	210f      	movs	r1, #15
 8006bac:	f04f 30ff 	mov.w	r0, #4294967295
 8006bb0:	f7ff ff8e 	bl	8006ad0 <__NVIC_SetPriority>
 8006bb4:	4b05      	ldr	r3, [pc, #20]	@ (8006bcc <SysTick_Config+0x40>)
 8006bb6:	2200      	movs	r2, #0
 8006bb8:	609a      	str	r2, [r3, #8]
 8006bba:	4b04      	ldr	r3, [pc, #16]	@ (8006bcc <SysTick_Config+0x40>)
 8006bbc:	2207      	movs	r2, #7
 8006bbe:	601a      	str	r2, [r3, #0]
 8006bc0:	2300      	movs	r3, #0
 8006bc2:	4618      	mov	r0, r3
 8006bc4:	3708      	adds	r7, #8
 8006bc6:	46bd      	mov	sp, r7
 8006bc8:	bd80      	pop	{r7, pc}
 8006bca:	bf00      	nop
 8006bcc:	e000e010 	.word	0xe000e010

08006bd0 <HAL_NVIC_SetPriorityGrouping>:
 8006bd0:	b580      	push	{r7, lr}
 8006bd2:	b082      	sub	sp, #8
 8006bd4:	af00      	add	r7, sp, #0
 8006bd6:	6078      	str	r0, [r7, #4]
 8006bd8:	6878      	ldr	r0, [r7, #4]
 8006bda:	f7ff ff29 	bl	8006a30 <__NVIC_SetPriorityGrouping>
 8006bde:	bf00      	nop
 8006be0:	3708      	adds	r7, #8
 8006be2:	46bd      	mov	sp, r7
 8006be4:	bd80      	pop	{r7, pc}

08006be6 <HAL_NVIC_SetPriority>:
 8006be6:	b580      	push	{r7, lr}
 8006be8:	b086      	sub	sp, #24
 8006bea:	af00      	add	r7, sp, #0
 8006bec:	4603      	mov	r3, r0
 8006bee:	60b9      	str	r1, [r7, #8]
 8006bf0:	607a      	str	r2, [r7, #4]
 8006bf2:	81fb      	strh	r3, [r7, #14]
 8006bf4:	f7ff ff40 	bl	8006a78 <__NVIC_GetPriorityGrouping>
 8006bf8:	6178      	str	r0, [r7, #20]
 8006bfa:	687a      	ldr	r2, [r7, #4]
 8006bfc:	68b9      	ldr	r1, [r7, #8]
 8006bfe:	6978      	ldr	r0, [r7, #20]
 8006c00:	f7ff ff90 	bl	8006b24 <NVIC_EncodePriority>
 8006c04:	4602      	mov	r2, r0
 8006c06:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8006c0a:	4611      	mov	r1, r2
 8006c0c:	4618      	mov	r0, r3
 8006c0e:	f7ff ff5f 	bl	8006ad0 <__NVIC_SetPriority>
 8006c12:	bf00      	nop
 8006c14:	3718      	adds	r7, #24
 8006c16:	46bd      	mov	sp, r7
 8006c18:	bd80      	pop	{r7, pc}

08006c1a <HAL_NVIC_EnableIRQ>:
 8006c1a:	b580      	push	{r7, lr}
 8006c1c:	b082      	sub	sp, #8
 8006c1e:	af00      	add	r7, sp, #0
 8006c20:	4603      	mov	r3, r0
 8006c22:	80fb      	strh	r3, [r7, #6]
 8006c24:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8006c28:	4618      	mov	r0, r3
 8006c2a:	f7ff ff33 	bl	8006a94 <__NVIC_EnableIRQ>
 8006c2e:	bf00      	nop
 8006c30:	3708      	adds	r7, #8
 8006c32:	46bd      	mov	sp, r7
 8006c34:	bd80      	pop	{r7, pc}

08006c36 <HAL_SYSTICK_Config>:
 8006c36:	b580      	push	{r7, lr}
 8006c38:	b082      	sub	sp, #8
 8006c3a:	af00      	add	r7, sp, #0
 8006c3c:	6078      	str	r0, [r7, #4]
 8006c3e:	6878      	ldr	r0, [r7, #4]
 8006c40:	f7ff ffa4 	bl	8006b8c <SysTick_Config>
 8006c44:	4603      	mov	r3, r0
 8006c46:	4618      	mov	r0, r3
 8006c48:	3708      	adds	r7, #8
 8006c4a:	46bd      	mov	sp, r7
 8006c4c:	bd80      	pop	{r7, pc}
	...

08006c50 <HAL_MPU_Disable>:
 8006c50:	b480      	push	{r7}
 8006c52:	af00      	add	r7, sp, #0
 8006c54:	f3bf 8f5f 	dmb	sy
 8006c58:	bf00      	nop
 8006c5a:	4b07      	ldr	r3, [pc, #28]	@ (8006c78 <HAL_MPU_Disable+0x28>)
 8006c5c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006c5e:	4a06      	ldr	r2, [pc, #24]	@ (8006c78 <HAL_MPU_Disable+0x28>)
 8006c60:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006c64:	6253      	str	r3, [r2, #36]	@ 0x24
 8006c66:	4b05      	ldr	r3, [pc, #20]	@ (8006c7c <HAL_MPU_Disable+0x2c>)
 8006c68:	2200      	movs	r2, #0
 8006c6a:	605a      	str	r2, [r3, #4]
 8006c6c:	bf00      	nop
 8006c6e:	46bd      	mov	sp, r7
 8006c70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c74:	4770      	bx	lr
 8006c76:	bf00      	nop
 8006c78:	e000ed00 	.word	0xe000ed00
 8006c7c:	e000ed90 	.word	0xe000ed90

08006c80 <HAL_MPU_Enable>:
 8006c80:	b480      	push	{r7}
 8006c82:	b083      	sub	sp, #12
 8006c84:	af00      	add	r7, sp, #0
 8006c86:	6078      	str	r0, [r7, #4]
 8006c88:	4a0b      	ldr	r2, [pc, #44]	@ (8006cb8 <HAL_MPU_Enable+0x38>)
 8006c8a:	687b      	ldr	r3, [r7, #4]
 8006c8c:	f043 0301 	orr.w	r3, r3, #1
 8006c90:	6053      	str	r3, [r2, #4]
 8006c92:	4b0a      	ldr	r3, [pc, #40]	@ (8006cbc <HAL_MPU_Enable+0x3c>)
 8006c94:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006c96:	4a09      	ldr	r2, [pc, #36]	@ (8006cbc <HAL_MPU_Enable+0x3c>)
 8006c98:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006c9c:	6253      	str	r3, [r2, #36]	@ 0x24
 8006c9e:	f3bf 8f4f 	dsb	sy
 8006ca2:	bf00      	nop
 8006ca4:	f3bf 8f6f 	isb	sy
 8006ca8:	bf00      	nop
 8006caa:	bf00      	nop
 8006cac:	370c      	adds	r7, #12
 8006cae:	46bd      	mov	sp, r7
 8006cb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cb4:	4770      	bx	lr
 8006cb6:	bf00      	nop
 8006cb8:	e000ed90 	.word	0xe000ed90
 8006cbc:	e000ed00 	.word	0xe000ed00

08006cc0 <HAL_MPU_ConfigRegion>:
 8006cc0:	b480      	push	{r7}
 8006cc2:	b083      	sub	sp, #12
 8006cc4:	af00      	add	r7, sp, #0
 8006cc6:	6078      	str	r0, [r7, #4]
 8006cc8:	687b      	ldr	r3, [r7, #4]
 8006cca:	785a      	ldrb	r2, [r3, #1]
 8006ccc:	4b1b      	ldr	r3, [pc, #108]	@ (8006d3c <HAL_MPU_ConfigRegion+0x7c>)
 8006cce:	609a      	str	r2, [r3, #8]
 8006cd0:	4b1a      	ldr	r3, [pc, #104]	@ (8006d3c <HAL_MPU_ConfigRegion+0x7c>)
 8006cd2:	691b      	ldr	r3, [r3, #16]
 8006cd4:	4a19      	ldr	r2, [pc, #100]	@ (8006d3c <HAL_MPU_ConfigRegion+0x7c>)
 8006cd6:	f023 0301 	bic.w	r3, r3, #1
 8006cda:	6113      	str	r3, [r2, #16]
 8006cdc:	4a17      	ldr	r2, [pc, #92]	@ (8006d3c <HAL_MPU_ConfigRegion+0x7c>)
 8006cde:	687b      	ldr	r3, [r7, #4]
 8006ce0:	685b      	ldr	r3, [r3, #4]
 8006ce2:	60d3      	str	r3, [r2, #12]
 8006ce4:	687b      	ldr	r3, [r7, #4]
 8006ce6:	7b1b      	ldrb	r3, [r3, #12]
 8006ce8:	071a      	lsls	r2, r3, #28
 8006cea:	687b      	ldr	r3, [r7, #4]
 8006cec:	7adb      	ldrb	r3, [r3, #11]
 8006cee:	061b      	lsls	r3, r3, #24
 8006cf0:	431a      	orrs	r2, r3
 8006cf2:	687b      	ldr	r3, [r7, #4]
 8006cf4:	7a9b      	ldrb	r3, [r3, #10]
 8006cf6:	04db      	lsls	r3, r3, #19
 8006cf8:	431a      	orrs	r2, r3
 8006cfa:	687b      	ldr	r3, [r7, #4]
 8006cfc:	7b5b      	ldrb	r3, [r3, #13]
 8006cfe:	049b      	lsls	r3, r3, #18
 8006d00:	431a      	orrs	r2, r3
 8006d02:	687b      	ldr	r3, [r7, #4]
 8006d04:	7b9b      	ldrb	r3, [r3, #14]
 8006d06:	045b      	lsls	r3, r3, #17
 8006d08:	431a      	orrs	r2, r3
 8006d0a:	687b      	ldr	r3, [r7, #4]
 8006d0c:	7bdb      	ldrb	r3, [r3, #15]
 8006d0e:	041b      	lsls	r3, r3, #16
 8006d10:	431a      	orrs	r2, r3
 8006d12:	687b      	ldr	r3, [r7, #4]
 8006d14:	7a5b      	ldrb	r3, [r3, #9]
 8006d16:	021b      	lsls	r3, r3, #8
 8006d18:	431a      	orrs	r2, r3
 8006d1a:	687b      	ldr	r3, [r7, #4]
 8006d1c:	7a1b      	ldrb	r3, [r3, #8]
 8006d1e:	005b      	lsls	r3, r3, #1
 8006d20:	4313      	orrs	r3, r2
 8006d22:	687a      	ldr	r2, [r7, #4]
 8006d24:	7812      	ldrb	r2, [r2, #0]
 8006d26:	4611      	mov	r1, r2
 8006d28:	4a04      	ldr	r2, [pc, #16]	@ (8006d3c <HAL_MPU_ConfigRegion+0x7c>)
 8006d2a:	430b      	orrs	r3, r1
 8006d2c:	6113      	str	r3, [r2, #16]
 8006d2e:	bf00      	nop
 8006d30:	370c      	adds	r7, #12
 8006d32:	46bd      	mov	sp, r7
 8006d34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d38:	4770      	bx	lr
 8006d3a:	bf00      	nop
 8006d3c:	e000ed90 	.word	0xe000ed90

08006d40 <HAL_DAC_Init>:
 8006d40:	b580      	push	{r7, lr}
 8006d42:	b082      	sub	sp, #8
 8006d44:	af00      	add	r7, sp, #0
 8006d46:	6078      	str	r0, [r7, #4]
 8006d48:	687b      	ldr	r3, [r7, #4]
 8006d4a:	2b00      	cmp	r3, #0
 8006d4c:	d101      	bne.n	8006d52 <HAL_DAC_Init+0x12>
 8006d4e:	2301      	movs	r3, #1
 8006d50:	e014      	b.n	8006d7c <HAL_DAC_Init+0x3c>
 8006d52:	687b      	ldr	r3, [r7, #4]
 8006d54:	791b      	ldrb	r3, [r3, #4]
 8006d56:	b2db      	uxtb	r3, r3
 8006d58:	2b00      	cmp	r3, #0
 8006d5a:	d105      	bne.n	8006d68 <HAL_DAC_Init+0x28>
 8006d5c:	687b      	ldr	r3, [r7, #4]
 8006d5e:	2200      	movs	r2, #0
 8006d60:	715a      	strb	r2, [r3, #5]
 8006d62:	6878      	ldr	r0, [r7, #4]
 8006d64:	f7fa ff14 	bl	8001b90 <HAL_DAC_MspInit>
 8006d68:	687b      	ldr	r3, [r7, #4]
 8006d6a:	2202      	movs	r2, #2
 8006d6c:	711a      	strb	r2, [r3, #4]
 8006d6e:	687b      	ldr	r3, [r7, #4]
 8006d70:	2200      	movs	r2, #0
 8006d72:	611a      	str	r2, [r3, #16]
 8006d74:	687b      	ldr	r3, [r7, #4]
 8006d76:	2201      	movs	r2, #1
 8006d78:	711a      	strb	r2, [r3, #4]
 8006d7a:	2300      	movs	r3, #0
 8006d7c:	4618      	mov	r0, r3
 8006d7e:	3708      	adds	r7, #8
 8006d80:	46bd      	mov	sp, r7
 8006d82:	bd80      	pop	{r7, pc}

08006d84 <HAL_DAC_Start_DMA>:
 8006d84:	b580      	push	{r7, lr}
 8006d86:	b086      	sub	sp, #24
 8006d88:	af00      	add	r7, sp, #0
 8006d8a:	60f8      	str	r0, [r7, #12]
 8006d8c:	60b9      	str	r1, [r7, #8]
 8006d8e:	607a      	str	r2, [r7, #4]
 8006d90:	603b      	str	r3, [r7, #0]
 8006d92:	68fb      	ldr	r3, [r7, #12]
 8006d94:	2b00      	cmp	r3, #0
 8006d96:	d101      	bne.n	8006d9c <HAL_DAC_Start_DMA+0x18>
 8006d98:	2301      	movs	r3, #1
 8006d9a:	e0a2      	b.n	8006ee2 <HAL_DAC_Start_DMA+0x15e>
 8006d9c:	68fb      	ldr	r3, [r7, #12]
 8006d9e:	795b      	ldrb	r3, [r3, #5]
 8006da0:	2b01      	cmp	r3, #1
 8006da2:	d101      	bne.n	8006da8 <HAL_DAC_Start_DMA+0x24>
 8006da4:	2302      	movs	r3, #2
 8006da6:	e09c      	b.n	8006ee2 <HAL_DAC_Start_DMA+0x15e>
 8006da8:	68fb      	ldr	r3, [r7, #12]
 8006daa:	2201      	movs	r2, #1
 8006dac:	715a      	strb	r2, [r3, #5]
 8006dae:	68fb      	ldr	r3, [r7, #12]
 8006db0:	2202      	movs	r2, #2
 8006db2:	711a      	strb	r2, [r3, #4]
 8006db4:	68bb      	ldr	r3, [r7, #8]
 8006db6:	2b00      	cmp	r3, #0
 8006db8:	d129      	bne.n	8006e0e <HAL_DAC_Start_DMA+0x8a>
 8006dba:	68fb      	ldr	r3, [r7, #12]
 8006dbc:	689b      	ldr	r3, [r3, #8]
 8006dbe:	4a4b      	ldr	r2, [pc, #300]	@ (8006eec <HAL_DAC_Start_DMA+0x168>)
 8006dc0:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006dc2:	68fb      	ldr	r3, [r7, #12]
 8006dc4:	689b      	ldr	r3, [r3, #8]
 8006dc6:	4a4a      	ldr	r2, [pc, #296]	@ (8006ef0 <HAL_DAC_Start_DMA+0x16c>)
 8006dc8:	641a      	str	r2, [r3, #64]	@ 0x40
 8006dca:	68fb      	ldr	r3, [r7, #12]
 8006dcc:	689b      	ldr	r3, [r3, #8]
 8006dce:	4a49      	ldr	r2, [pc, #292]	@ (8006ef4 <HAL_DAC_Start_DMA+0x170>)
 8006dd0:	64da      	str	r2, [r3, #76]	@ 0x4c
 8006dd2:	68fb      	ldr	r3, [r7, #12]
 8006dd4:	681b      	ldr	r3, [r3, #0]
 8006dd6:	681a      	ldr	r2, [r3, #0]
 8006dd8:	68fb      	ldr	r3, [r7, #12]
 8006dda:	681b      	ldr	r3, [r3, #0]
 8006ddc:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8006de0:	601a      	str	r2, [r3, #0]
 8006de2:	6a3b      	ldr	r3, [r7, #32]
 8006de4:	2b00      	cmp	r3, #0
 8006de6:	d003      	beq.n	8006df0 <HAL_DAC_Start_DMA+0x6c>
 8006de8:	6a3b      	ldr	r3, [r7, #32]
 8006dea:	2b04      	cmp	r3, #4
 8006dec:	d005      	beq.n	8006dfa <HAL_DAC_Start_DMA+0x76>
 8006dee:	e009      	b.n	8006e04 <HAL_DAC_Start_DMA+0x80>
 8006df0:	68fb      	ldr	r3, [r7, #12]
 8006df2:	681b      	ldr	r3, [r3, #0]
 8006df4:	3308      	adds	r3, #8
 8006df6:	613b      	str	r3, [r7, #16]
 8006df8:	e033      	b.n	8006e62 <HAL_DAC_Start_DMA+0xde>
 8006dfa:	68fb      	ldr	r3, [r7, #12]
 8006dfc:	681b      	ldr	r3, [r3, #0]
 8006dfe:	330c      	adds	r3, #12
 8006e00:	613b      	str	r3, [r7, #16]
 8006e02:	e02e      	b.n	8006e62 <HAL_DAC_Start_DMA+0xde>
 8006e04:	68fb      	ldr	r3, [r7, #12]
 8006e06:	681b      	ldr	r3, [r3, #0]
 8006e08:	3310      	adds	r3, #16
 8006e0a:	613b      	str	r3, [r7, #16]
 8006e0c:	e029      	b.n	8006e62 <HAL_DAC_Start_DMA+0xde>
 8006e0e:	68fb      	ldr	r3, [r7, #12]
 8006e10:	68db      	ldr	r3, [r3, #12]
 8006e12:	4a39      	ldr	r2, [pc, #228]	@ (8006ef8 <HAL_DAC_Start_DMA+0x174>)
 8006e14:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006e16:	68fb      	ldr	r3, [r7, #12]
 8006e18:	68db      	ldr	r3, [r3, #12]
 8006e1a:	4a38      	ldr	r2, [pc, #224]	@ (8006efc <HAL_DAC_Start_DMA+0x178>)
 8006e1c:	641a      	str	r2, [r3, #64]	@ 0x40
 8006e1e:	68fb      	ldr	r3, [r7, #12]
 8006e20:	68db      	ldr	r3, [r3, #12]
 8006e22:	4a37      	ldr	r2, [pc, #220]	@ (8006f00 <HAL_DAC_Start_DMA+0x17c>)
 8006e24:	64da      	str	r2, [r3, #76]	@ 0x4c
 8006e26:	68fb      	ldr	r3, [r7, #12]
 8006e28:	681b      	ldr	r3, [r3, #0]
 8006e2a:	681a      	ldr	r2, [r3, #0]
 8006e2c:	68fb      	ldr	r3, [r7, #12]
 8006e2e:	681b      	ldr	r3, [r3, #0]
 8006e30:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8006e34:	601a      	str	r2, [r3, #0]
 8006e36:	6a3b      	ldr	r3, [r7, #32]
 8006e38:	2b00      	cmp	r3, #0
 8006e3a:	d003      	beq.n	8006e44 <HAL_DAC_Start_DMA+0xc0>
 8006e3c:	6a3b      	ldr	r3, [r7, #32]
 8006e3e:	2b04      	cmp	r3, #4
 8006e40:	d005      	beq.n	8006e4e <HAL_DAC_Start_DMA+0xca>
 8006e42:	e009      	b.n	8006e58 <HAL_DAC_Start_DMA+0xd4>
 8006e44:	68fb      	ldr	r3, [r7, #12]
 8006e46:	681b      	ldr	r3, [r3, #0]
 8006e48:	3314      	adds	r3, #20
 8006e4a:	613b      	str	r3, [r7, #16]
 8006e4c:	e009      	b.n	8006e62 <HAL_DAC_Start_DMA+0xde>
 8006e4e:	68fb      	ldr	r3, [r7, #12]
 8006e50:	681b      	ldr	r3, [r3, #0]
 8006e52:	3318      	adds	r3, #24
 8006e54:	613b      	str	r3, [r7, #16]
 8006e56:	e004      	b.n	8006e62 <HAL_DAC_Start_DMA+0xde>
 8006e58:	68fb      	ldr	r3, [r7, #12]
 8006e5a:	681b      	ldr	r3, [r3, #0]
 8006e5c:	331c      	adds	r3, #28
 8006e5e:	613b      	str	r3, [r7, #16]
 8006e60:	bf00      	nop
 8006e62:	68bb      	ldr	r3, [r7, #8]
 8006e64:	2b00      	cmp	r3, #0
 8006e66:	d111      	bne.n	8006e8c <HAL_DAC_Start_DMA+0x108>
 8006e68:	68fb      	ldr	r3, [r7, #12]
 8006e6a:	681b      	ldr	r3, [r3, #0]
 8006e6c:	681a      	ldr	r2, [r3, #0]
 8006e6e:	68fb      	ldr	r3, [r7, #12]
 8006e70:	681b      	ldr	r3, [r3, #0]
 8006e72:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006e76:	601a      	str	r2, [r3, #0]
 8006e78:	68fb      	ldr	r3, [r7, #12]
 8006e7a:	6898      	ldr	r0, [r3, #8]
 8006e7c:	6879      	ldr	r1, [r7, #4]
 8006e7e:	683b      	ldr	r3, [r7, #0]
 8006e80:	693a      	ldr	r2, [r7, #16]
 8006e82:	f000 fd6d 	bl	8007960 <HAL_DMA_Start_IT>
 8006e86:	4603      	mov	r3, r0
 8006e88:	75fb      	strb	r3, [r7, #23]
 8006e8a:	e010      	b.n	8006eae <HAL_DAC_Start_DMA+0x12a>
 8006e8c:	68fb      	ldr	r3, [r7, #12]
 8006e8e:	681b      	ldr	r3, [r3, #0]
 8006e90:	681a      	ldr	r2, [r3, #0]
 8006e92:	68fb      	ldr	r3, [r7, #12]
 8006e94:	681b      	ldr	r3, [r3, #0]
 8006e96:	f042 5200 	orr.w	r2, r2, #536870912	@ 0x20000000
 8006e9a:	601a      	str	r2, [r3, #0]
 8006e9c:	68fb      	ldr	r3, [r7, #12]
 8006e9e:	68d8      	ldr	r0, [r3, #12]
 8006ea0:	6879      	ldr	r1, [r7, #4]
 8006ea2:	683b      	ldr	r3, [r7, #0]
 8006ea4:	693a      	ldr	r2, [r7, #16]
 8006ea6:	f000 fd5b 	bl	8007960 <HAL_DMA_Start_IT>
 8006eaa:	4603      	mov	r3, r0
 8006eac:	75fb      	strb	r3, [r7, #23]
 8006eae:	68fb      	ldr	r3, [r7, #12]
 8006eb0:	2200      	movs	r2, #0
 8006eb2:	715a      	strb	r2, [r3, #5]
 8006eb4:	7dfb      	ldrb	r3, [r7, #23]
 8006eb6:	2b00      	cmp	r3, #0
 8006eb8:	d10c      	bne.n	8006ed4 <HAL_DAC_Start_DMA+0x150>
 8006eba:	68fb      	ldr	r3, [r7, #12]
 8006ebc:	681b      	ldr	r3, [r3, #0]
 8006ebe:	6819      	ldr	r1, [r3, #0]
 8006ec0:	68bb      	ldr	r3, [r7, #8]
 8006ec2:	f003 0310 	and.w	r3, r3, #16
 8006ec6:	2201      	movs	r2, #1
 8006ec8:	409a      	lsls	r2, r3
 8006eca:	68fb      	ldr	r3, [r7, #12]
 8006ecc:	681b      	ldr	r3, [r3, #0]
 8006ece:	430a      	orrs	r2, r1
 8006ed0:	601a      	str	r2, [r3, #0]
 8006ed2:	e005      	b.n	8006ee0 <HAL_DAC_Start_DMA+0x15c>
 8006ed4:	68fb      	ldr	r3, [r7, #12]
 8006ed6:	691b      	ldr	r3, [r3, #16]
 8006ed8:	f043 0204 	orr.w	r2, r3, #4
 8006edc:	68fb      	ldr	r3, [r7, #12]
 8006ede:	611a      	str	r2, [r3, #16]
 8006ee0:	7dfb      	ldrb	r3, [r7, #23]
 8006ee2:	4618      	mov	r0, r3
 8006ee4:	3718      	adds	r7, #24
 8006ee6:	46bd      	mov	sp, r7
 8006ee8:	bd80      	pop	{r7, pc}
 8006eea:	bf00      	nop
 8006eec:	0800719d 	.word	0x0800719d
 8006ef0:	080071bf 	.word	0x080071bf
 8006ef4:	080071db 	.word	0x080071db
 8006ef8:	08007245 	.word	0x08007245
 8006efc:	08007267 	.word	0x08007267
 8006f00:	08007283 	.word	0x08007283

08006f04 <HAL_DAC_ErrorCallbackCh1>:
 8006f04:	b480      	push	{r7}
 8006f06:	b083      	sub	sp, #12
 8006f08:	af00      	add	r7, sp, #0
 8006f0a:	6078      	str	r0, [r7, #4]
 8006f0c:	bf00      	nop
 8006f0e:	370c      	adds	r7, #12
 8006f10:	46bd      	mov	sp, r7
 8006f12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f16:	4770      	bx	lr

08006f18 <HAL_DAC_ConfigChannel>:
 8006f18:	b580      	push	{r7, lr}
 8006f1a:	b08a      	sub	sp, #40	@ 0x28
 8006f1c:	af00      	add	r7, sp, #0
 8006f1e:	60f8      	str	r0, [r7, #12]
 8006f20:	60b9      	str	r1, [r7, #8]
 8006f22:	607a      	str	r2, [r7, #4]
 8006f24:	2300      	movs	r3, #0
 8006f26:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8006f2a:	68fb      	ldr	r3, [r7, #12]
 8006f2c:	2b00      	cmp	r3, #0
 8006f2e:	d002      	beq.n	8006f36 <HAL_DAC_ConfigChannel+0x1e>
 8006f30:	68bb      	ldr	r3, [r7, #8]
 8006f32:	2b00      	cmp	r3, #0
 8006f34:	d101      	bne.n	8006f3a <HAL_DAC_ConfigChannel+0x22>
 8006f36:	2301      	movs	r3, #1
 8006f38:	e12a      	b.n	8007190 <HAL_DAC_ConfigChannel+0x278>
 8006f3a:	68fb      	ldr	r3, [r7, #12]
 8006f3c:	795b      	ldrb	r3, [r3, #5]
 8006f3e:	2b01      	cmp	r3, #1
 8006f40:	d101      	bne.n	8006f46 <HAL_DAC_ConfigChannel+0x2e>
 8006f42:	2302      	movs	r3, #2
 8006f44:	e124      	b.n	8007190 <HAL_DAC_ConfigChannel+0x278>
 8006f46:	68fb      	ldr	r3, [r7, #12]
 8006f48:	2201      	movs	r2, #1
 8006f4a:	715a      	strb	r2, [r3, #5]
 8006f4c:	68fb      	ldr	r3, [r7, #12]
 8006f4e:	2202      	movs	r2, #2
 8006f50:	711a      	strb	r2, [r3, #4]
 8006f52:	68bb      	ldr	r3, [r7, #8]
 8006f54:	681b      	ldr	r3, [r3, #0]
 8006f56:	2b04      	cmp	r3, #4
 8006f58:	d17a      	bne.n	8007050 <HAL_DAC_ConfigChannel+0x138>
 8006f5a:	f7fe f9c5 	bl	80052e8 <HAL_GetTick>
 8006f5e:	61f8      	str	r0, [r7, #28]
 8006f60:	687b      	ldr	r3, [r7, #4]
 8006f62:	2b00      	cmp	r3, #0
 8006f64:	d13d      	bne.n	8006fe2 <HAL_DAC_ConfigChannel+0xca>
 8006f66:	e018      	b.n	8006f9a <HAL_DAC_ConfigChannel+0x82>
 8006f68:	f7fe f9be 	bl	80052e8 <HAL_GetTick>
 8006f6c:	4602      	mov	r2, r0
 8006f6e:	69fb      	ldr	r3, [r7, #28]
 8006f70:	1ad3      	subs	r3, r2, r3
 8006f72:	2b01      	cmp	r3, #1
 8006f74:	d911      	bls.n	8006f9a <HAL_DAC_ConfigChannel+0x82>
 8006f76:	68fb      	ldr	r3, [r7, #12]
 8006f78:	681b      	ldr	r3, [r3, #0]
 8006f7a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006f7c:	4b86      	ldr	r3, [pc, #536]	@ (8007198 <HAL_DAC_ConfigChannel+0x280>)
 8006f7e:	4013      	ands	r3, r2
 8006f80:	2b00      	cmp	r3, #0
 8006f82:	d00a      	beq.n	8006f9a <HAL_DAC_ConfigChannel+0x82>
 8006f84:	68fb      	ldr	r3, [r7, #12]
 8006f86:	691b      	ldr	r3, [r3, #16]
 8006f88:	f043 0208 	orr.w	r2, r3, #8
 8006f8c:	68fb      	ldr	r3, [r7, #12]
 8006f8e:	611a      	str	r2, [r3, #16]
 8006f90:	68fb      	ldr	r3, [r7, #12]
 8006f92:	2203      	movs	r2, #3
 8006f94:	711a      	strb	r2, [r3, #4]
 8006f96:	2303      	movs	r3, #3
 8006f98:	e0fa      	b.n	8007190 <HAL_DAC_ConfigChannel+0x278>
 8006f9a:	68fb      	ldr	r3, [r7, #12]
 8006f9c:	681b      	ldr	r3, [r3, #0]
 8006f9e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006fa0:	4b7d      	ldr	r3, [pc, #500]	@ (8007198 <HAL_DAC_ConfigChannel+0x280>)
 8006fa2:	4013      	ands	r3, r2
 8006fa4:	2b00      	cmp	r3, #0
 8006fa6:	d1df      	bne.n	8006f68 <HAL_DAC_ConfigChannel+0x50>
 8006fa8:	68fb      	ldr	r3, [r7, #12]
 8006faa:	681b      	ldr	r3, [r3, #0]
 8006fac:	68ba      	ldr	r2, [r7, #8]
 8006fae:	6992      	ldr	r2, [r2, #24]
 8006fb0:	641a      	str	r2, [r3, #64]	@ 0x40
 8006fb2:	e020      	b.n	8006ff6 <HAL_DAC_ConfigChannel+0xde>
 8006fb4:	f7fe f998 	bl	80052e8 <HAL_GetTick>
 8006fb8:	4602      	mov	r2, r0
 8006fba:	69fb      	ldr	r3, [r7, #28]
 8006fbc:	1ad3      	subs	r3, r2, r3
 8006fbe:	2b01      	cmp	r3, #1
 8006fc0:	d90f      	bls.n	8006fe2 <HAL_DAC_ConfigChannel+0xca>
 8006fc2:	68fb      	ldr	r3, [r7, #12]
 8006fc4:	681b      	ldr	r3, [r3, #0]
 8006fc6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006fc8:	2b00      	cmp	r3, #0
 8006fca:	da0a      	bge.n	8006fe2 <HAL_DAC_ConfigChannel+0xca>
 8006fcc:	68fb      	ldr	r3, [r7, #12]
 8006fce:	691b      	ldr	r3, [r3, #16]
 8006fd0:	f043 0208 	orr.w	r2, r3, #8
 8006fd4:	68fb      	ldr	r3, [r7, #12]
 8006fd6:	611a      	str	r2, [r3, #16]
 8006fd8:	68fb      	ldr	r3, [r7, #12]
 8006fda:	2203      	movs	r2, #3
 8006fdc:	711a      	strb	r2, [r3, #4]
 8006fde:	2303      	movs	r3, #3
 8006fe0:	e0d6      	b.n	8007190 <HAL_DAC_ConfigChannel+0x278>
 8006fe2:	68fb      	ldr	r3, [r7, #12]
 8006fe4:	681b      	ldr	r3, [r3, #0]
 8006fe6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006fe8:	2b00      	cmp	r3, #0
 8006fea:	dbe3      	blt.n	8006fb4 <HAL_DAC_ConfigChannel+0x9c>
 8006fec:	68fb      	ldr	r3, [r7, #12]
 8006fee:	681b      	ldr	r3, [r3, #0]
 8006ff0:	68ba      	ldr	r2, [r7, #8]
 8006ff2:	6992      	ldr	r2, [r2, #24]
 8006ff4:	645a      	str	r2, [r3, #68]	@ 0x44
 8006ff6:	68fb      	ldr	r3, [r7, #12]
 8006ff8:	681b      	ldr	r3, [r3, #0]
 8006ffa:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8006ffc:	687b      	ldr	r3, [r7, #4]
 8006ffe:	f003 0310 	and.w	r3, r3, #16
 8007002:	f240 31ff 	movw	r1, #1023	@ 0x3ff
 8007006:	fa01 f303 	lsl.w	r3, r1, r3
 800700a:	43db      	mvns	r3, r3
 800700c:	ea02 0103 	and.w	r1, r2, r3
 8007010:	68bb      	ldr	r3, [r7, #8]
 8007012:	69da      	ldr	r2, [r3, #28]
 8007014:	687b      	ldr	r3, [r7, #4]
 8007016:	f003 0310 	and.w	r3, r3, #16
 800701a:	409a      	lsls	r2, r3
 800701c:	68fb      	ldr	r3, [r7, #12]
 800701e:	681b      	ldr	r3, [r3, #0]
 8007020:	430a      	orrs	r2, r1
 8007022:	649a      	str	r2, [r3, #72]	@ 0x48
 8007024:	68fb      	ldr	r3, [r7, #12]
 8007026:	681b      	ldr	r3, [r3, #0]
 8007028:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800702a:	687b      	ldr	r3, [r7, #4]
 800702c:	f003 0310 	and.w	r3, r3, #16
 8007030:	21ff      	movs	r1, #255	@ 0xff
 8007032:	fa01 f303 	lsl.w	r3, r1, r3
 8007036:	43db      	mvns	r3, r3
 8007038:	ea02 0103 	and.w	r1, r2, r3
 800703c:	68bb      	ldr	r3, [r7, #8]
 800703e:	6a1a      	ldr	r2, [r3, #32]
 8007040:	687b      	ldr	r3, [r7, #4]
 8007042:	f003 0310 	and.w	r3, r3, #16
 8007046:	409a      	lsls	r2, r3
 8007048:	68fb      	ldr	r3, [r7, #12]
 800704a:	681b      	ldr	r3, [r3, #0]
 800704c:	430a      	orrs	r2, r1
 800704e:	64da      	str	r2, [r3, #76]	@ 0x4c
 8007050:	68bb      	ldr	r3, [r7, #8]
 8007052:	691b      	ldr	r3, [r3, #16]
 8007054:	2b01      	cmp	r3, #1
 8007056:	d11d      	bne.n	8007094 <HAL_DAC_ConfigChannel+0x17c>
 8007058:	68fb      	ldr	r3, [r7, #12]
 800705a:	681b      	ldr	r3, [r3, #0]
 800705c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800705e:	61bb      	str	r3, [r7, #24]
 8007060:	687b      	ldr	r3, [r7, #4]
 8007062:	f003 0310 	and.w	r3, r3, #16
 8007066:	221f      	movs	r2, #31
 8007068:	fa02 f303 	lsl.w	r3, r2, r3
 800706c:	43db      	mvns	r3, r3
 800706e:	69ba      	ldr	r2, [r7, #24]
 8007070:	4013      	ands	r3, r2
 8007072:	61bb      	str	r3, [r7, #24]
 8007074:	68bb      	ldr	r3, [r7, #8]
 8007076:	695b      	ldr	r3, [r3, #20]
 8007078:	617b      	str	r3, [r7, #20]
 800707a:	687b      	ldr	r3, [r7, #4]
 800707c:	f003 0310 	and.w	r3, r3, #16
 8007080:	697a      	ldr	r2, [r7, #20]
 8007082:	fa02 f303 	lsl.w	r3, r2, r3
 8007086:	69ba      	ldr	r2, [r7, #24]
 8007088:	4313      	orrs	r3, r2
 800708a:	61bb      	str	r3, [r7, #24]
 800708c:	68fb      	ldr	r3, [r7, #12]
 800708e:	681b      	ldr	r3, [r3, #0]
 8007090:	69ba      	ldr	r2, [r7, #24]
 8007092:	639a      	str	r2, [r3, #56]	@ 0x38
 8007094:	68fb      	ldr	r3, [r7, #12]
 8007096:	681b      	ldr	r3, [r3, #0]
 8007098:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800709a:	61bb      	str	r3, [r7, #24]
 800709c:	687b      	ldr	r3, [r7, #4]
 800709e:	f003 0310 	and.w	r3, r3, #16
 80070a2:	2207      	movs	r2, #7
 80070a4:	fa02 f303 	lsl.w	r3, r2, r3
 80070a8:	43db      	mvns	r3, r3
 80070aa:	69ba      	ldr	r2, [r7, #24]
 80070ac:	4013      	ands	r3, r2
 80070ae:	61bb      	str	r3, [r7, #24]
 80070b0:	68bb      	ldr	r3, [r7, #8]
 80070b2:	68db      	ldr	r3, [r3, #12]
 80070b4:	2b01      	cmp	r3, #1
 80070b6:	d102      	bne.n	80070be <HAL_DAC_ConfigChannel+0x1a6>
 80070b8:	2300      	movs	r3, #0
 80070ba:	627b      	str	r3, [r7, #36]	@ 0x24
 80070bc:	e00f      	b.n	80070de <HAL_DAC_ConfigChannel+0x1c6>
 80070be:	68bb      	ldr	r3, [r7, #8]
 80070c0:	68db      	ldr	r3, [r3, #12]
 80070c2:	2b02      	cmp	r3, #2
 80070c4:	d102      	bne.n	80070cc <HAL_DAC_ConfigChannel+0x1b4>
 80070c6:	2301      	movs	r3, #1
 80070c8:	627b      	str	r3, [r7, #36]	@ 0x24
 80070ca:	e008      	b.n	80070de <HAL_DAC_ConfigChannel+0x1c6>
 80070cc:	68bb      	ldr	r3, [r7, #8]
 80070ce:	689b      	ldr	r3, [r3, #8]
 80070d0:	2b00      	cmp	r3, #0
 80070d2:	d102      	bne.n	80070da <HAL_DAC_ConfigChannel+0x1c2>
 80070d4:	2301      	movs	r3, #1
 80070d6:	627b      	str	r3, [r7, #36]	@ 0x24
 80070d8:	e001      	b.n	80070de <HAL_DAC_ConfigChannel+0x1c6>
 80070da:	2300      	movs	r3, #0
 80070dc:	627b      	str	r3, [r7, #36]	@ 0x24
 80070de:	68bb      	ldr	r3, [r7, #8]
 80070e0:	681a      	ldr	r2, [r3, #0]
 80070e2:	68bb      	ldr	r3, [r7, #8]
 80070e4:	689b      	ldr	r3, [r3, #8]
 80070e6:	4313      	orrs	r3, r2
 80070e8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80070ea:	4313      	orrs	r3, r2
 80070ec:	617b      	str	r3, [r7, #20]
 80070ee:	687b      	ldr	r3, [r7, #4]
 80070f0:	f003 0310 	and.w	r3, r3, #16
 80070f4:	697a      	ldr	r2, [r7, #20]
 80070f6:	fa02 f303 	lsl.w	r3, r2, r3
 80070fa:	69ba      	ldr	r2, [r7, #24]
 80070fc:	4313      	orrs	r3, r2
 80070fe:	61bb      	str	r3, [r7, #24]
 8007100:	68fb      	ldr	r3, [r7, #12]
 8007102:	681b      	ldr	r3, [r3, #0]
 8007104:	69ba      	ldr	r2, [r7, #24]
 8007106:	63da      	str	r2, [r3, #60]	@ 0x3c
 8007108:	68fb      	ldr	r3, [r7, #12]
 800710a:	681b      	ldr	r3, [r3, #0]
 800710c:	6819      	ldr	r1, [r3, #0]
 800710e:	687b      	ldr	r3, [r7, #4]
 8007110:	f003 0310 	and.w	r3, r3, #16
 8007114:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8007118:	fa02 f303 	lsl.w	r3, r2, r3
 800711c:	43da      	mvns	r2, r3
 800711e:	68fb      	ldr	r3, [r7, #12]
 8007120:	681b      	ldr	r3, [r3, #0]
 8007122:	400a      	ands	r2, r1
 8007124:	601a      	str	r2, [r3, #0]
 8007126:	68fb      	ldr	r3, [r7, #12]
 8007128:	681b      	ldr	r3, [r3, #0]
 800712a:	681b      	ldr	r3, [r3, #0]
 800712c:	61bb      	str	r3, [r7, #24]
 800712e:	687b      	ldr	r3, [r7, #4]
 8007130:	f003 0310 	and.w	r3, r3, #16
 8007134:	f640 72fe 	movw	r2, #4094	@ 0xffe
 8007138:	fa02 f303 	lsl.w	r3, r2, r3
 800713c:	43db      	mvns	r3, r3
 800713e:	69ba      	ldr	r2, [r7, #24]
 8007140:	4013      	ands	r3, r2
 8007142:	61bb      	str	r3, [r7, #24]
 8007144:	68bb      	ldr	r3, [r7, #8]
 8007146:	685b      	ldr	r3, [r3, #4]
 8007148:	617b      	str	r3, [r7, #20]
 800714a:	687b      	ldr	r3, [r7, #4]
 800714c:	f003 0310 	and.w	r3, r3, #16
 8007150:	697a      	ldr	r2, [r7, #20]
 8007152:	fa02 f303 	lsl.w	r3, r2, r3
 8007156:	69ba      	ldr	r2, [r7, #24]
 8007158:	4313      	orrs	r3, r2
 800715a:	61bb      	str	r3, [r7, #24]
 800715c:	68fb      	ldr	r3, [r7, #12]
 800715e:	681b      	ldr	r3, [r3, #0]
 8007160:	69ba      	ldr	r2, [r7, #24]
 8007162:	601a      	str	r2, [r3, #0]
 8007164:	68fb      	ldr	r3, [r7, #12]
 8007166:	681b      	ldr	r3, [r3, #0]
 8007168:	6819      	ldr	r1, [r3, #0]
 800716a:	687b      	ldr	r3, [r7, #4]
 800716c:	f003 0310 	and.w	r3, r3, #16
 8007170:	22c0      	movs	r2, #192	@ 0xc0
 8007172:	fa02 f303 	lsl.w	r3, r2, r3
 8007176:	43da      	mvns	r2, r3
 8007178:	68fb      	ldr	r3, [r7, #12]
 800717a:	681b      	ldr	r3, [r3, #0]
 800717c:	400a      	ands	r2, r1
 800717e:	601a      	str	r2, [r3, #0]
 8007180:	68fb      	ldr	r3, [r7, #12]
 8007182:	2201      	movs	r2, #1
 8007184:	711a      	strb	r2, [r3, #4]
 8007186:	68fb      	ldr	r3, [r7, #12]
 8007188:	2200      	movs	r2, #0
 800718a:	715a      	strb	r2, [r3, #5]
 800718c:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8007190:	4618      	mov	r0, r3
 8007192:	3728      	adds	r7, #40	@ 0x28
 8007194:	46bd      	mov	sp, r7
 8007196:	bd80      	pop	{r7, pc}
 8007198:	20008000 	.word	0x20008000

0800719c <DAC_DMAConvCpltCh1>:
 800719c:	b580      	push	{r7, lr}
 800719e:	b084      	sub	sp, #16
 80071a0:	af00      	add	r7, sp, #0
 80071a2:	6078      	str	r0, [r7, #4]
 80071a4:	687b      	ldr	r3, [r7, #4]
 80071a6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80071a8:	60fb      	str	r3, [r7, #12]
 80071aa:	68f8      	ldr	r0, [r7, #12]
 80071ac:	f7f9 fca0 	bl	8000af0 <HAL_DAC_ConvCpltCallbackCh1>
 80071b0:	68fb      	ldr	r3, [r7, #12]
 80071b2:	2201      	movs	r2, #1
 80071b4:	711a      	strb	r2, [r3, #4]
 80071b6:	bf00      	nop
 80071b8:	3710      	adds	r7, #16
 80071ba:	46bd      	mov	sp, r7
 80071bc:	bd80      	pop	{r7, pc}

080071be <DAC_DMAHalfConvCpltCh1>:
 80071be:	b580      	push	{r7, lr}
 80071c0:	b084      	sub	sp, #16
 80071c2:	af00      	add	r7, sp, #0
 80071c4:	6078      	str	r0, [r7, #4]
 80071c6:	687b      	ldr	r3, [r7, #4]
 80071c8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80071ca:	60fb      	str	r3, [r7, #12]
 80071cc:	68f8      	ldr	r0, [r7, #12]
 80071ce:	f7f9 fc81 	bl	8000ad4 <HAL_DAC_ConvHalfCpltCallbackCh1>
 80071d2:	bf00      	nop
 80071d4:	3710      	adds	r7, #16
 80071d6:	46bd      	mov	sp, r7
 80071d8:	bd80      	pop	{r7, pc}

080071da <DAC_DMAErrorCh1>:
 80071da:	b580      	push	{r7, lr}
 80071dc:	b084      	sub	sp, #16
 80071de:	af00      	add	r7, sp, #0
 80071e0:	6078      	str	r0, [r7, #4]
 80071e2:	687b      	ldr	r3, [r7, #4]
 80071e4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80071e6:	60fb      	str	r3, [r7, #12]
 80071e8:	68fb      	ldr	r3, [r7, #12]
 80071ea:	691b      	ldr	r3, [r3, #16]
 80071ec:	f043 0204 	orr.w	r2, r3, #4
 80071f0:	68fb      	ldr	r3, [r7, #12]
 80071f2:	611a      	str	r2, [r3, #16]
 80071f4:	68f8      	ldr	r0, [r7, #12]
 80071f6:	f7ff fe85 	bl	8006f04 <HAL_DAC_ErrorCallbackCh1>
 80071fa:	68fb      	ldr	r3, [r7, #12]
 80071fc:	2201      	movs	r2, #1
 80071fe:	711a      	strb	r2, [r3, #4]
 8007200:	bf00      	nop
 8007202:	3710      	adds	r7, #16
 8007204:	46bd      	mov	sp, r7
 8007206:	bd80      	pop	{r7, pc}

08007208 <HAL_DACEx_ConvCpltCallbackCh2>:
 8007208:	b480      	push	{r7}
 800720a:	b083      	sub	sp, #12
 800720c:	af00      	add	r7, sp, #0
 800720e:	6078      	str	r0, [r7, #4]
 8007210:	bf00      	nop
 8007212:	370c      	adds	r7, #12
 8007214:	46bd      	mov	sp, r7
 8007216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800721a:	4770      	bx	lr

0800721c <HAL_DACEx_ConvHalfCpltCallbackCh2>:
 800721c:	b480      	push	{r7}
 800721e:	b083      	sub	sp, #12
 8007220:	af00      	add	r7, sp, #0
 8007222:	6078      	str	r0, [r7, #4]
 8007224:	bf00      	nop
 8007226:	370c      	adds	r7, #12
 8007228:	46bd      	mov	sp, r7
 800722a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800722e:	4770      	bx	lr

08007230 <HAL_DACEx_ErrorCallbackCh2>:
 8007230:	b480      	push	{r7}
 8007232:	b083      	sub	sp, #12
 8007234:	af00      	add	r7, sp, #0
 8007236:	6078      	str	r0, [r7, #4]
 8007238:	bf00      	nop
 800723a:	370c      	adds	r7, #12
 800723c:	46bd      	mov	sp, r7
 800723e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007242:	4770      	bx	lr

08007244 <DAC_DMAConvCpltCh2>:
 8007244:	b580      	push	{r7, lr}
 8007246:	b084      	sub	sp, #16
 8007248:	af00      	add	r7, sp, #0
 800724a:	6078      	str	r0, [r7, #4]
 800724c:	687b      	ldr	r3, [r7, #4]
 800724e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007250:	60fb      	str	r3, [r7, #12]
 8007252:	68f8      	ldr	r0, [r7, #12]
 8007254:	f7ff ffd8 	bl	8007208 <HAL_DACEx_ConvCpltCallbackCh2>
 8007258:	68fb      	ldr	r3, [r7, #12]
 800725a:	2201      	movs	r2, #1
 800725c:	711a      	strb	r2, [r3, #4]
 800725e:	bf00      	nop
 8007260:	3710      	adds	r7, #16
 8007262:	46bd      	mov	sp, r7
 8007264:	bd80      	pop	{r7, pc}

08007266 <DAC_DMAHalfConvCpltCh2>:
 8007266:	b580      	push	{r7, lr}
 8007268:	b084      	sub	sp, #16
 800726a:	af00      	add	r7, sp, #0
 800726c:	6078      	str	r0, [r7, #4]
 800726e:	687b      	ldr	r3, [r7, #4]
 8007270:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007272:	60fb      	str	r3, [r7, #12]
 8007274:	68f8      	ldr	r0, [r7, #12]
 8007276:	f7ff ffd1 	bl	800721c <HAL_DACEx_ConvHalfCpltCallbackCh2>
 800727a:	bf00      	nop
 800727c:	3710      	adds	r7, #16
 800727e:	46bd      	mov	sp, r7
 8007280:	bd80      	pop	{r7, pc}

08007282 <DAC_DMAErrorCh2>:
 8007282:	b580      	push	{r7, lr}
 8007284:	b084      	sub	sp, #16
 8007286:	af00      	add	r7, sp, #0
 8007288:	6078      	str	r0, [r7, #4]
 800728a:	687b      	ldr	r3, [r7, #4]
 800728c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800728e:	60fb      	str	r3, [r7, #12]
 8007290:	68fb      	ldr	r3, [r7, #12]
 8007292:	691b      	ldr	r3, [r3, #16]
 8007294:	f043 0204 	orr.w	r2, r3, #4
 8007298:	68fb      	ldr	r3, [r7, #12]
 800729a:	611a      	str	r2, [r3, #16]
 800729c:	68f8      	ldr	r0, [r7, #12]
 800729e:	f7ff ffc7 	bl	8007230 <HAL_DACEx_ErrorCallbackCh2>
 80072a2:	68fb      	ldr	r3, [r7, #12]
 80072a4:	2201      	movs	r2, #1
 80072a6:	711a      	strb	r2, [r3, #4]
 80072a8:	bf00      	nop
 80072aa:	3710      	adds	r7, #16
 80072ac:	46bd      	mov	sp, r7
 80072ae:	bd80      	pop	{r7, pc}

080072b0 <HAL_DMA_Init>:
 80072b0:	b580      	push	{r7, lr}
 80072b2:	b086      	sub	sp, #24
 80072b4:	af00      	add	r7, sp, #0
 80072b6:	6078      	str	r0, [r7, #4]
 80072b8:	f7fe f816 	bl	80052e8 <HAL_GetTick>
 80072bc:	6138      	str	r0, [r7, #16]
 80072be:	687b      	ldr	r3, [r7, #4]
 80072c0:	2b00      	cmp	r3, #0
 80072c2:	d101      	bne.n	80072c8 <HAL_DMA_Init+0x18>
 80072c4:	2301      	movs	r3, #1
 80072c6:	e312      	b.n	80078ee <HAL_DMA_Init+0x63e>
 80072c8:	687b      	ldr	r3, [r7, #4]
 80072ca:	681b      	ldr	r3, [r3, #0]
 80072cc:	4a66      	ldr	r2, [pc, #408]	@ (8007468 <HAL_DMA_Init+0x1b8>)
 80072ce:	4293      	cmp	r3, r2
 80072d0:	d04a      	beq.n	8007368 <HAL_DMA_Init+0xb8>
 80072d2:	687b      	ldr	r3, [r7, #4]
 80072d4:	681b      	ldr	r3, [r3, #0]
 80072d6:	4a65      	ldr	r2, [pc, #404]	@ (800746c <HAL_DMA_Init+0x1bc>)
 80072d8:	4293      	cmp	r3, r2
 80072da:	d045      	beq.n	8007368 <HAL_DMA_Init+0xb8>
 80072dc:	687b      	ldr	r3, [r7, #4]
 80072de:	681b      	ldr	r3, [r3, #0]
 80072e0:	4a63      	ldr	r2, [pc, #396]	@ (8007470 <HAL_DMA_Init+0x1c0>)
 80072e2:	4293      	cmp	r3, r2
 80072e4:	d040      	beq.n	8007368 <HAL_DMA_Init+0xb8>
 80072e6:	687b      	ldr	r3, [r7, #4]
 80072e8:	681b      	ldr	r3, [r3, #0]
 80072ea:	4a62      	ldr	r2, [pc, #392]	@ (8007474 <HAL_DMA_Init+0x1c4>)
 80072ec:	4293      	cmp	r3, r2
 80072ee:	d03b      	beq.n	8007368 <HAL_DMA_Init+0xb8>
 80072f0:	687b      	ldr	r3, [r7, #4]
 80072f2:	681b      	ldr	r3, [r3, #0]
 80072f4:	4a60      	ldr	r2, [pc, #384]	@ (8007478 <HAL_DMA_Init+0x1c8>)
 80072f6:	4293      	cmp	r3, r2
 80072f8:	d036      	beq.n	8007368 <HAL_DMA_Init+0xb8>
 80072fa:	687b      	ldr	r3, [r7, #4]
 80072fc:	681b      	ldr	r3, [r3, #0]
 80072fe:	4a5f      	ldr	r2, [pc, #380]	@ (800747c <HAL_DMA_Init+0x1cc>)
 8007300:	4293      	cmp	r3, r2
 8007302:	d031      	beq.n	8007368 <HAL_DMA_Init+0xb8>
 8007304:	687b      	ldr	r3, [r7, #4]
 8007306:	681b      	ldr	r3, [r3, #0]
 8007308:	4a5d      	ldr	r2, [pc, #372]	@ (8007480 <HAL_DMA_Init+0x1d0>)
 800730a:	4293      	cmp	r3, r2
 800730c:	d02c      	beq.n	8007368 <HAL_DMA_Init+0xb8>
 800730e:	687b      	ldr	r3, [r7, #4]
 8007310:	681b      	ldr	r3, [r3, #0]
 8007312:	4a5c      	ldr	r2, [pc, #368]	@ (8007484 <HAL_DMA_Init+0x1d4>)
 8007314:	4293      	cmp	r3, r2
 8007316:	d027      	beq.n	8007368 <HAL_DMA_Init+0xb8>
 8007318:	687b      	ldr	r3, [r7, #4]
 800731a:	681b      	ldr	r3, [r3, #0]
 800731c:	4a5a      	ldr	r2, [pc, #360]	@ (8007488 <HAL_DMA_Init+0x1d8>)
 800731e:	4293      	cmp	r3, r2
 8007320:	d022      	beq.n	8007368 <HAL_DMA_Init+0xb8>
 8007322:	687b      	ldr	r3, [r7, #4]
 8007324:	681b      	ldr	r3, [r3, #0]
 8007326:	4a59      	ldr	r2, [pc, #356]	@ (800748c <HAL_DMA_Init+0x1dc>)
 8007328:	4293      	cmp	r3, r2
 800732a:	d01d      	beq.n	8007368 <HAL_DMA_Init+0xb8>
 800732c:	687b      	ldr	r3, [r7, #4]
 800732e:	681b      	ldr	r3, [r3, #0]
 8007330:	4a57      	ldr	r2, [pc, #348]	@ (8007490 <HAL_DMA_Init+0x1e0>)
 8007332:	4293      	cmp	r3, r2
 8007334:	d018      	beq.n	8007368 <HAL_DMA_Init+0xb8>
 8007336:	687b      	ldr	r3, [r7, #4]
 8007338:	681b      	ldr	r3, [r3, #0]
 800733a:	4a56      	ldr	r2, [pc, #344]	@ (8007494 <HAL_DMA_Init+0x1e4>)
 800733c:	4293      	cmp	r3, r2
 800733e:	d013      	beq.n	8007368 <HAL_DMA_Init+0xb8>
 8007340:	687b      	ldr	r3, [r7, #4]
 8007342:	681b      	ldr	r3, [r3, #0]
 8007344:	4a54      	ldr	r2, [pc, #336]	@ (8007498 <HAL_DMA_Init+0x1e8>)
 8007346:	4293      	cmp	r3, r2
 8007348:	d00e      	beq.n	8007368 <HAL_DMA_Init+0xb8>
 800734a:	687b      	ldr	r3, [r7, #4]
 800734c:	681b      	ldr	r3, [r3, #0]
 800734e:	4a53      	ldr	r2, [pc, #332]	@ (800749c <HAL_DMA_Init+0x1ec>)
 8007350:	4293      	cmp	r3, r2
 8007352:	d009      	beq.n	8007368 <HAL_DMA_Init+0xb8>
 8007354:	687b      	ldr	r3, [r7, #4]
 8007356:	681b      	ldr	r3, [r3, #0]
 8007358:	4a51      	ldr	r2, [pc, #324]	@ (80074a0 <HAL_DMA_Init+0x1f0>)
 800735a:	4293      	cmp	r3, r2
 800735c:	d004      	beq.n	8007368 <HAL_DMA_Init+0xb8>
 800735e:	687b      	ldr	r3, [r7, #4]
 8007360:	681b      	ldr	r3, [r3, #0]
 8007362:	4a50      	ldr	r2, [pc, #320]	@ (80074a4 <HAL_DMA_Init+0x1f4>)
 8007364:	4293      	cmp	r3, r2
 8007366:	d101      	bne.n	800736c <HAL_DMA_Init+0xbc>
 8007368:	2301      	movs	r3, #1
 800736a:	e000      	b.n	800736e <HAL_DMA_Init+0xbe>
 800736c:	2300      	movs	r3, #0
 800736e:	2b00      	cmp	r3, #0
 8007370:	f000 813c 	beq.w	80075ec <HAL_DMA_Init+0x33c>
 8007374:	687b      	ldr	r3, [r7, #4]
 8007376:	2202      	movs	r2, #2
 8007378:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800737c:	687b      	ldr	r3, [r7, #4]
 800737e:	2200      	movs	r2, #0
 8007380:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8007384:	687b      	ldr	r3, [r7, #4]
 8007386:	681b      	ldr	r3, [r3, #0]
 8007388:	4a37      	ldr	r2, [pc, #220]	@ (8007468 <HAL_DMA_Init+0x1b8>)
 800738a:	4293      	cmp	r3, r2
 800738c:	d04a      	beq.n	8007424 <HAL_DMA_Init+0x174>
 800738e:	687b      	ldr	r3, [r7, #4]
 8007390:	681b      	ldr	r3, [r3, #0]
 8007392:	4a36      	ldr	r2, [pc, #216]	@ (800746c <HAL_DMA_Init+0x1bc>)
 8007394:	4293      	cmp	r3, r2
 8007396:	d045      	beq.n	8007424 <HAL_DMA_Init+0x174>
 8007398:	687b      	ldr	r3, [r7, #4]
 800739a:	681b      	ldr	r3, [r3, #0]
 800739c:	4a34      	ldr	r2, [pc, #208]	@ (8007470 <HAL_DMA_Init+0x1c0>)
 800739e:	4293      	cmp	r3, r2
 80073a0:	d040      	beq.n	8007424 <HAL_DMA_Init+0x174>
 80073a2:	687b      	ldr	r3, [r7, #4]
 80073a4:	681b      	ldr	r3, [r3, #0]
 80073a6:	4a33      	ldr	r2, [pc, #204]	@ (8007474 <HAL_DMA_Init+0x1c4>)
 80073a8:	4293      	cmp	r3, r2
 80073aa:	d03b      	beq.n	8007424 <HAL_DMA_Init+0x174>
 80073ac:	687b      	ldr	r3, [r7, #4]
 80073ae:	681b      	ldr	r3, [r3, #0]
 80073b0:	4a31      	ldr	r2, [pc, #196]	@ (8007478 <HAL_DMA_Init+0x1c8>)
 80073b2:	4293      	cmp	r3, r2
 80073b4:	d036      	beq.n	8007424 <HAL_DMA_Init+0x174>
 80073b6:	687b      	ldr	r3, [r7, #4]
 80073b8:	681b      	ldr	r3, [r3, #0]
 80073ba:	4a30      	ldr	r2, [pc, #192]	@ (800747c <HAL_DMA_Init+0x1cc>)
 80073bc:	4293      	cmp	r3, r2
 80073be:	d031      	beq.n	8007424 <HAL_DMA_Init+0x174>
 80073c0:	687b      	ldr	r3, [r7, #4]
 80073c2:	681b      	ldr	r3, [r3, #0]
 80073c4:	4a2e      	ldr	r2, [pc, #184]	@ (8007480 <HAL_DMA_Init+0x1d0>)
 80073c6:	4293      	cmp	r3, r2
 80073c8:	d02c      	beq.n	8007424 <HAL_DMA_Init+0x174>
 80073ca:	687b      	ldr	r3, [r7, #4]
 80073cc:	681b      	ldr	r3, [r3, #0]
 80073ce:	4a2d      	ldr	r2, [pc, #180]	@ (8007484 <HAL_DMA_Init+0x1d4>)
 80073d0:	4293      	cmp	r3, r2
 80073d2:	d027      	beq.n	8007424 <HAL_DMA_Init+0x174>
 80073d4:	687b      	ldr	r3, [r7, #4]
 80073d6:	681b      	ldr	r3, [r3, #0]
 80073d8:	4a2b      	ldr	r2, [pc, #172]	@ (8007488 <HAL_DMA_Init+0x1d8>)
 80073da:	4293      	cmp	r3, r2
 80073dc:	d022      	beq.n	8007424 <HAL_DMA_Init+0x174>
 80073de:	687b      	ldr	r3, [r7, #4]
 80073e0:	681b      	ldr	r3, [r3, #0]
 80073e2:	4a2a      	ldr	r2, [pc, #168]	@ (800748c <HAL_DMA_Init+0x1dc>)
 80073e4:	4293      	cmp	r3, r2
 80073e6:	d01d      	beq.n	8007424 <HAL_DMA_Init+0x174>
 80073e8:	687b      	ldr	r3, [r7, #4]
 80073ea:	681b      	ldr	r3, [r3, #0]
 80073ec:	4a28      	ldr	r2, [pc, #160]	@ (8007490 <HAL_DMA_Init+0x1e0>)
 80073ee:	4293      	cmp	r3, r2
 80073f0:	d018      	beq.n	8007424 <HAL_DMA_Init+0x174>
 80073f2:	687b      	ldr	r3, [r7, #4]
 80073f4:	681b      	ldr	r3, [r3, #0]
 80073f6:	4a27      	ldr	r2, [pc, #156]	@ (8007494 <HAL_DMA_Init+0x1e4>)
 80073f8:	4293      	cmp	r3, r2
 80073fa:	d013      	beq.n	8007424 <HAL_DMA_Init+0x174>
 80073fc:	687b      	ldr	r3, [r7, #4]
 80073fe:	681b      	ldr	r3, [r3, #0]
 8007400:	4a25      	ldr	r2, [pc, #148]	@ (8007498 <HAL_DMA_Init+0x1e8>)
 8007402:	4293      	cmp	r3, r2
 8007404:	d00e      	beq.n	8007424 <HAL_DMA_Init+0x174>
 8007406:	687b      	ldr	r3, [r7, #4]
 8007408:	681b      	ldr	r3, [r3, #0]
 800740a:	4a24      	ldr	r2, [pc, #144]	@ (800749c <HAL_DMA_Init+0x1ec>)
 800740c:	4293      	cmp	r3, r2
 800740e:	d009      	beq.n	8007424 <HAL_DMA_Init+0x174>
 8007410:	687b      	ldr	r3, [r7, #4]
 8007412:	681b      	ldr	r3, [r3, #0]
 8007414:	4a22      	ldr	r2, [pc, #136]	@ (80074a0 <HAL_DMA_Init+0x1f0>)
 8007416:	4293      	cmp	r3, r2
 8007418:	d004      	beq.n	8007424 <HAL_DMA_Init+0x174>
 800741a:	687b      	ldr	r3, [r7, #4]
 800741c:	681b      	ldr	r3, [r3, #0]
 800741e:	4a21      	ldr	r2, [pc, #132]	@ (80074a4 <HAL_DMA_Init+0x1f4>)
 8007420:	4293      	cmp	r3, r2
 8007422:	d108      	bne.n	8007436 <HAL_DMA_Init+0x186>
 8007424:	687b      	ldr	r3, [r7, #4]
 8007426:	681b      	ldr	r3, [r3, #0]
 8007428:	681a      	ldr	r2, [r3, #0]
 800742a:	687b      	ldr	r3, [r7, #4]
 800742c:	681b      	ldr	r3, [r3, #0]
 800742e:	f022 0201 	bic.w	r2, r2, #1
 8007432:	601a      	str	r2, [r3, #0]
 8007434:	e007      	b.n	8007446 <HAL_DMA_Init+0x196>
 8007436:	687b      	ldr	r3, [r7, #4]
 8007438:	681b      	ldr	r3, [r3, #0]
 800743a:	681a      	ldr	r2, [r3, #0]
 800743c:	687b      	ldr	r3, [r7, #4]
 800743e:	681b      	ldr	r3, [r3, #0]
 8007440:	f022 0201 	bic.w	r2, r2, #1
 8007444:	601a      	str	r2, [r3, #0]
 8007446:	e02f      	b.n	80074a8 <HAL_DMA_Init+0x1f8>
 8007448:	f7fd ff4e 	bl	80052e8 <HAL_GetTick>
 800744c:	4602      	mov	r2, r0
 800744e:	693b      	ldr	r3, [r7, #16]
 8007450:	1ad3      	subs	r3, r2, r3
 8007452:	2b05      	cmp	r3, #5
 8007454:	d928      	bls.n	80074a8 <HAL_DMA_Init+0x1f8>
 8007456:	687b      	ldr	r3, [r7, #4]
 8007458:	2220      	movs	r2, #32
 800745a:	655a      	str	r2, [r3, #84]	@ 0x54
 800745c:	687b      	ldr	r3, [r7, #4]
 800745e:	2203      	movs	r2, #3
 8007460:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8007464:	2301      	movs	r3, #1
 8007466:	e242      	b.n	80078ee <HAL_DMA_Init+0x63e>
 8007468:	40020010 	.word	0x40020010
 800746c:	40020028 	.word	0x40020028
 8007470:	40020040 	.word	0x40020040
 8007474:	40020058 	.word	0x40020058
 8007478:	40020070 	.word	0x40020070
 800747c:	40020088 	.word	0x40020088
 8007480:	400200a0 	.word	0x400200a0
 8007484:	400200b8 	.word	0x400200b8
 8007488:	40020410 	.word	0x40020410
 800748c:	40020428 	.word	0x40020428
 8007490:	40020440 	.word	0x40020440
 8007494:	40020458 	.word	0x40020458
 8007498:	40020470 	.word	0x40020470
 800749c:	40020488 	.word	0x40020488
 80074a0:	400204a0 	.word	0x400204a0
 80074a4:	400204b8 	.word	0x400204b8
 80074a8:	687b      	ldr	r3, [r7, #4]
 80074aa:	681b      	ldr	r3, [r3, #0]
 80074ac:	681b      	ldr	r3, [r3, #0]
 80074ae:	f003 0301 	and.w	r3, r3, #1
 80074b2:	2b00      	cmp	r3, #0
 80074b4:	d1c8      	bne.n	8007448 <HAL_DMA_Init+0x198>
 80074b6:	687b      	ldr	r3, [r7, #4]
 80074b8:	681b      	ldr	r3, [r3, #0]
 80074ba:	681b      	ldr	r3, [r3, #0]
 80074bc:	617b      	str	r3, [r7, #20]
 80074be:	697a      	ldr	r2, [r7, #20]
 80074c0:	4b83      	ldr	r3, [pc, #524]	@ (80076d0 <HAL_DMA_Init+0x420>)
 80074c2:	4013      	ands	r3, r2
 80074c4:	617b      	str	r3, [r7, #20]
 80074c6:	687b      	ldr	r3, [r7, #4]
 80074c8:	689a      	ldr	r2, [r3, #8]
 80074ca:	687b      	ldr	r3, [r7, #4]
 80074cc:	68db      	ldr	r3, [r3, #12]
 80074ce:	431a      	orrs	r2, r3
 80074d0:	687b      	ldr	r3, [r7, #4]
 80074d2:	691b      	ldr	r3, [r3, #16]
 80074d4:	431a      	orrs	r2, r3
 80074d6:	687b      	ldr	r3, [r7, #4]
 80074d8:	695b      	ldr	r3, [r3, #20]
 80074da:	431a      	orrs	r2, r3
 80074dc:	687b      	ldr	r3, [r7, #4]
 80074de:	699b      	ldr	r3, [r3, #24]
 80074e0:	431a      	orrs	r2, r3
 80074e2:	687b      	ldr	r3, [r7, #4]
 80074e4:	69db      	ldr	r3, [r3, #28]
 80074e6:	431a      	orrs	r2, r3
 80074e8:	687b      	ldr	r3, [r7, #4]
 80074ea:	6a1b      	ldr	r3, [r3, #32]
 80074ec:	4313      	orrs	r3, r2
 80074ee:	697a      	ldr	r2, [r7, #20]
 80074f0:	4313      	orrs	r3, r2
 80074f2:	617b      	str	r3, [r7, #20]
 80074f4:	687b      	ldr	r3, [r7, #4]
 80074f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80074f8:	2b04      	cmp	r3, #4
 80074fa:	d107      	bne.n	800750c <HAL_DMA_Init+0x25c>
 80074fc:	687b      	ldr	r3, [r7, #4]
 80074fe:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8007500:	687b      	ldr	r3, [r7, #4]
 8007502:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007504:	4313      	orrs	r3, r2
 8007506:	697a      	ldr	r2, [r7, #20]
 8007508:	4313      	orrs	r3, r2
 800750a:	617b      	str	r3, [r7, #20]
 800750c:	687b      	ldr	r3, [r7, #4]
 800750e:	685b      	ldr	r3, [r3, #4]
 8007510:	2b28      	cmp	r3, #40	@ 0x28
 8007512:	d903      	bls.n	800751c <HAL_DMA_Init+0x26c>
 8007514:	687b      	ldr	r3, [r7, #4]
 8007516:	685b      	ldr	r3, [r3, #4]
 8007518:	2b2e      	cmp	r3, #46	@ 0x2e
 800751a:	d91f      	bls.n	800755c <HAL_DMA_Init+0x2ac>
 800751c:	687b      	ldr	r3, [r7, #4]
 800751e:	685b      	ldr	r3, [r3, #4]
 8007520:	2b3e      	cmp	r3, #62	@ 0x3e
 8007522:	d903      	bls.n	800752c <HAL_DMA_Init+0x27c>
 8007524:	687b      	ldr	r3, [r7, #4]
 8007526:	685b      	ldr	r3, [r3, #4]
 8007528:	2b42      	cmp	r3, #66	@ 0x42
 800752a:	d917      	bls.n	800755c <HAL_DMA_Init+0x2ac>
 800752c:	687b      	ldr	r3, [r7, #4]
 800752e:	685b      	ldr	r3, [r3, #4]
 8007530:	2b46      	cmp	r3, #70	@ 0x46
 8007532:	d903      	bls.n	800753c <HAL_DMA_Init+0x28c>
 8007534:	687b      	ldr	r3, [r7, #4]
 8007536:	685b      	ldr	r3, [r3, #4]
 8007538:	2b48      	cmp	r3, #72	@ 0x48
 800753a:	d90f      	bls.n	800755c <HAL_DMA_Init+0x2ac>
 800753c:	687b      	ldr	r3, [r7, #4]
 800753e:	685b      	ldr	r3, [r3, #4]
 8007540:	2b4e      	cmp	r3, #78	@ 0x4e
 8007542:	d903      	bls.n	800754c <HAL_DMA_Init+0x29c>
 8007544:	687b      	ldr	r3, [r7, #4]
 8007546:	685b      	ldr	r3, [r3, #4]
 8007548:	2b52      	cmp	r3, #82	@ 0x52
 800754a:	d907      	bls.n	800755c <HAL_DMA_Init+0x2ac>
 800754c:	687b      	ldr	r3, [r7, #4]
 800754e:	685b      	ldr	r3, [r3, #4]
 8007550:	2b73      	cmp	r3, #115	@ 0x73
 8007552:	d905      	bls.n	8007560 <HAL_DMA_Init+0x2b0>
 8007554:	687b      	ldr	r3, [r7, #4]
 8007556:	685b      	ldr	r3, [r3, #4]
 8007558:	2b77      	cmp	r3, #119	@ 0x77
 800755a:	d801      	bhi.n	8007560 <HAL_DMA_Init+0x2b0>
 800755c:	2301      	movs	r3, #1
 800755e:	e000      	b.n	8007562 <HAL_DMA_Init+0x2b2>
 8007560:	2300      	movs	r3, #0
 8007562:	2b00      	cmp	r3, #0
 8007564:	d003      	beq.n	800756e <HAL_DMA_Init+0x2be>
 8007566:	697b      	ldr	r3, [r7, #20]
 8007568:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800756c:	617b      	str	r3, [r7, #20]
 800756e:	687b      	ldr	r3, [r7, #4]
 8007570:	681b      	ldr	r3, [r3, #0]
 8007572:	697a      	ldr	r2, [r7, #20]
 8007574:	601a      	str	r2, [r3, #0]
 8007576:	687b      	ldr	r3, [r7, #4]
 8007578:	681b      	ldr	r3, [r3, #0]
 800757a:	695b      	ldr	r3, [r3, #20]
 800757c:	617b      	str	r3, [r7, #20]
 800757e:	697b      	ldr	r3, [r7, #20]
 8007580:	f023 0307 	bic.w	r3, r3, #7
 8007584:	617b      	str	r3, [r7, #20]
 8007586:	687b      	ldr	r3, [r7, #4]
 8007588:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800758a:	697a      	ldr	r2, [r7, #20]
 800758c:	4313      	orrs	r3, r2
 800758e:	617b      	str	r3, [r7, #20]
 8007590:	687b      	ldr	r3, [r7, #4]
 8007592:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007594:	2b04      	cmp	r3, #4
 8007596:	d117      	bne.n	80075c8 <HAL_DMA_Init+0x318>
 8007598:	687b      	ldr	r3, [r7, #4]
 800759a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800759c:	697a      	ldr	r2, [r7, #20]
 800759e:	4313      	orrs	r3, r2
 80075a0:	617b      	str	r3, [r7, #20]
 80075a2:	687b      	ldr	r3, [r7, #4]
 80075a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80075a6:	2b00      	cmp	r3, #0
 80075a8:	d00e      	beq.n	80075c8 <HAL_DMA_Init+0x318>
 80075aa:	6878      	ldr	r0, [r7, #4]
 80075ac:	f001 fdca 	bl	8009144 <DMA_CheckFifoParam>
 80075b0:	4603      	mov	r3, r0
 80075b2:	2b00      	cmp	r3, #0
 80075b4:	d008      	beq.n	80075c8 <HAL_DMA_Init+0x318>
 80075b6:	687b      	ldr	r3, [r7, #4]
 80075b8:	2240      	movs	r2, #64	@ 0x40
 80075ba:	655a      	str	r2, [r3, #84]	@ 0x54
 80075bc:	687b      	ldr	r3, [r7, #4]
 80075be:	2201      	movs	r2, #1
 80075c0:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80075c4:	2301      	movs	r3, #1
 80075c6:	e192      	b.n	80078ee <HAL_DMA_Init+0x63e>
 80075c8:	687b      	ldr	r3, [r7, #4]
 80075ca:	681b      	ldr	r3, [r3, #0]
 80075cc:	697a      	ldr	r2, [r7, #20]
 80075ce:	615a      	str	r2, [r3, #20]
 80075d0:	6878      	ldr	r0, [r7, #4]
 80075d2:	f001 fd05 	bl	8008fe0 <DMA_CalcBaseAndBitshift>
 80075d6:	4603      	mov	r3, r0
 80075d8:	60bb      	str	r3, [r7, #8]
 80075da:	687b      	ldr	r3, [r7, #4]
 80075dc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80075de:	f003 031f 	and.w	r3, r3, #31
 80075e2:	223f      	movs	r2, #63	@ 0x3f
 80075e4:	409a      	lsls	r2, r3
 80075e6:	68bb      	ldr	r3, [r7, #8]
 80075e8:	609a      	str	r2, [r3, #8]
 80075ea:	e0c8      	b.n	800777e <HAL_DMA_Init+0x4ce>
 80075ec:	687b      	ldr	r3, [r7, #4]
 80075ee:	681b      	ldr	r3, [r3, #0]
 80075f0:	4a38      	ldr	r2, [pc, #224]	@ (80076d4 <HAL_DMA_Init+0x424>)
 80075f2:	4293      	cmp	r3, r2
 80075f4:	d022      	beq.n	800763c <HAL_DMA_Init+0x38c>
 80075f6:	687b      	ldr	r3, [r7, #4]
 80075f8:	681b      	ldr	r3, [r3, #0]
 80075fa:	4a37      	ldr	r2, [pc, #220]	@ (80076d8 <HAL_DMA_Init+0x428>)
 80075fc:	4293      	cmp	r3, r2
 80075fe:	d01d      	beq.n	800763c <HAL_DMA_Init+0x38c>
 8007600:	687b      	ldr	r3, [r7, #4]
 8007602:	681b      	ldr	r3, [r3, #0]
 8007604:	4a35      	ldr	r2, [pc, #212]	@ (80076dc <HAL_DMA_Init+0x42c>)
 8007606:	4293      	cmp	r3, r2
 8007608:	d018      	beq.n	800763c <HAL_DMA_Init+0x38c>
 800760a:	687b      	ldr	r3, [r7, #4]
 800760c:	681b      	ldr	r3, [r3, #0]
 800760e:	4a34      	ldr	r2, [pc, #208]	@ (80076e0 <HAL_DMA_Init+0x430>)
 8007610:	4293      	cmp	r3, r2
 8007612:	d013      	beq.n	800763c <HAL_DMA_Init+0x38c>
 8007614:	687b      	ldr	r3, [r7, #4]
 8007616:	681b      	ldr	r3, [r3, #0]
 8007618:	4a32      	ldr	r2, [pc, #200]	@ (80076e4 <HAL_DMA_Init+0x434>)
 800761a:	4293      	cmp	r3, r2
 800761c:	d00e      	beq.n	800763c <HAL_DMA_Init+0x38c>
 800761e:	687b      	ldr	r3, [r7, #4]
 8007620:	681b      	ldr	r3, [r3, #0]
 8007622:	4a31      	ldr	r2, [pc, #196]	@ (80076e8 <HAL_DMA_Init+0x438>)
 8007624:	4293      	cmp	r3, r2
 8007626:	d009      	beq.n	800763c <HAL_DMA_Init+0x38c>
 8007628:	687b      	ldr	r3, [r7, #4]
 800762a:	681b      	ldr	r3, [r3, #0]
 800762c:	4a2f      	ldr	r2, [pc, #188]	@ (80076ec <HAL_DMA_Init+0x43c>)
 800762e:	4293      	cmp	r3, r2
 8007630:	d004      	beq.n	800763c <HAL_DMA_Init+0x38c>
 8007632:	687b      	ldr	r3, [r7, #4]
 8007634:	681b      	ldr	r3, [r3, #0]
 8007636:	4a2e      	ldr	r2, [pc, #184]	@ (80076f0 <HAL_DMA_Init+0x440>)
 8007638:	4293      	cmp	r3, r2
 800763a:	d101      	bne.n	8007640 <HAL_DMA_Init+0x390>
 800763c:	2301      	movs	r3, #1
 800763e:	e000      	b.n	8007642 <HAL_DMA_Init+0x392>
 8007640:	2300      	movs	r3, #0
 8007642:	2b00      	cmp	r3, #0
 8007644:	f000 8092 	beq.w	800776c <HAL_DMA_Init+0x4bc>
 8007648:	687b      	ldr	r3, [r7, #4]
 800764a:	681b      	ldr	r3, [r3, #0]
 800764c:	4a21      	ldr	r2, [pc, #132]	@ (80076d4 <HAL_DMA_Init+0x424>)
 800764e:	4293      	cmp	r3, r2
 8007650:	d021      	beq.n	8007696 <HAL_DMA_Init+0x3e6>
 8007652:	687b      	ldr	r3, [r7, #4]
 8007654:	681b      	ldr	r3, [r3, #0]
 8007656:	4a20      	ldr	r2, [pc, #128]	@ (80076d8 <HAL_DMA_Init+0x428>)
 8007658:	4293      	cmp	r3, r2
 800765a:	d01c      	beq.n	8007696 <HAL_DMA_Init+0x3e6>
 800765c:	687b      	ldr	r3, [r7, #4]
 800765e:	681b      	ldr	r3, [r3, #0]
 8007660:	4a1e      	ldr	r2, [pc, #120]	@ (80076dc <HAL_DMA_Init+0x42c>)
 8007662:	4293      	cmp	r3, r2
 8007664:	d017      	beq.n	8007696 <HAL_DMA_Init+0x3e6>
 8007666:	687b      	ldr	r3, [r7, #4]
 8007668:	681b      	ldr	r3, [r3, #0]
 800766a:	4a1d      	ldr	r2, [pc, #116]	@ (80076e0 <HAL_DMA_Init+0x430>)
 800766c:	4293      	cmp	r3, r2
 800766e:	d012      	beq.n	8007696 <HAL_DMA_Init+0x3e6>
 8007670:	687b      	ldr	r3, [r7, #4]
 8007672:	681b      	ldr	r3, [r3, #0]
 8007674:	4a1b      	ldr	r2, [pc, #108]	@ (80076e4 <HAL_DMA_Init+0x434>)
 8007676:	4293      	cmp	r3, r2
 8007678:	d00d      	beq.n	8007696 <HAL_DMA_Init+0x3e6>
 800767a:	687b      	ldr	r3, [r7, #4]
 800767c:	681b      	ldr	r3, [r3, #0]
 800767e:	4a1a      	ldr	r2, [pc, #104]	@ (80076e8 <HAL_DMA_Init+0x438>)
 8007680:	4293      	cmp	r3, r2
 8007682:	d008      	beq.n	8007696 <HAL_DMA_Init+0x3e6>
 8007684:	687b      	ldr	r3, [r7, #4]
 8007686:	681b      	ldr	r3, [r3, #0]
 8007688:	4a18      	ldr	r2, [pc, #96]	@ (80076ec <HAL_DMA_Init+0x43c>)
 800768a:	4293      	cmp	r3, r2
 800768c:	d003      	beq.n	8007696 <HAL_DMA_Init+0x3e6>
 800768e:	687b      	ldr	r3, [r7, #4]
 8007690:	681b      	ldr	r3, [r3, #0]
 8007692:	4a17      	ldr	r2, [pc, #92]	@ (80076f0 <HAL_DMA_Init+0x440>)
 8007694:	4293      	cmp	r3, r2
 8007696:	687b      	ldr	r3, [r7, #4]
 8007698:	2202      	movs	r2, #2
 800769a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800769e:	687b      	ldr	r3, [r7, #4]
 80076a0:	2200      	movs	r2, #0
 80076a2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80076a6:	687b      	ldr	r3, [r7, #4]
 80076a8:	681b      	ldr	r3, [r3, #0]
 80076aa:	681b      	ldr	r3, [r3, #0]
 80076ac:	617b      	str	r3, [r7, #20]
 80076ae:	697a      	ldr	r2, [r7, #20]
 80076b0:	4b10      	ldr	r3, [pc, #64]	@ (80076f4 <HAL_DMA_Init+0x444>)
 80076b2:	4013      	ands	r3, r2
 80076b4:	617b      	str	r3, [r7, #20]
 80076b6:	687b      	ldr	r3, [r7, #4]
 80076b8:	689b      	ldr	r3, [r3, #8]
 80076ba:	2b40      	cmp	r3, #64	@ 0x40
 80076bc:	d01c      	beq.n	80076f8 <HAL_DMA_Init+0x448>
 80076be:	687b      	ldr	r3, [r7, #4]
 80076c0:	689b      	ldr	r3, [r3, #8]
 80076c2:	2b80      	cmp	r3, #128	@ 0x80
 80076c4:	d102      	bne.n	80076cc <HAL_DMA_Init+0x41c>
 80076c6:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 80076ca:	e016      	b.n	80076fa <HAL_DMA_Init+0x44a>
 80076cc:	2300      	movs	r3, #0
 80076ce:	e014      	b.n	80076fa <HAL_DMA_Init+0x44a>
 80076d0:	fe10803f 	.word	0xfe10803f
 80076d4:	58025408 	.word	0x58025408
 80076d8:	5802541c 	.word	0x5802541c
 80076dc:	58025430 	.word	0x58025430
 80076e0:	58025444 	.word	0x58025444
 80076e4:	58025458 	.word	0x58025458
 80076e8:	5802546c 	.word	0x5802546c
 80076ec:	58025480 	.word	0x58025480
 80076f0:	58025494 	.word	0x58025494
 80076f4:	fffe000f 	.word	0xfffe000f
 80076f8:	2310      	movs	r3, #16
 80076fa:	687a      	ldr	r2, [r7, #4]
 80076fc:	68d2      	ldr	r2, [r2, #12]
 80076fe:	08d2      	lsrs	r2, r2, #3
 8007700:	431a      	orrs	r2, r3
 8007702:	687b      	ldr	r3, [r7, #4]
 8007704:	691b      	ldr	r3, [r3, #16]
 8007706:	08db      	lsrs	r3, r3, #3
 8007708:	431a      	orrs	r2, r3
 800770a:	687b      	ldr	r3, [r7, #4]
 800770c:	695b      	ldr	r3, [r3, #20]
 800770e:	08db      	lsrs	r3, r3, #3
 8007710:	431a      	orrs	r2, r3
 8007712:	687b      	ldr	r3, [r7, #4]
 8007714:	699b      	ldr	r3, [r3, #24]
 8007716:	08db      	lsrs	r3, r3, #3
 8007718:	431a      	orrs	r2, r3
 800771a:	687b      	ldr	r3, [r7, #4]
 800771c:	69db      	ldr	r3, [r3, #28]
 800771e:	08db      	lsrs	r3, r3, #3
 8007720:	431a      	orrs	r2, r3
 8007722:	687b      	ldr	r3, [r7, #4]
 8007724:	6a1b      	ldr	r3, [r3, #32]
 8007726:	091b      	lsrs	r3, r3, #4
 8007728:	4313      	orrs	r3, r2
 800772a:	697a      	ldr	r2, [r7, #20]
 800772c:	4313      	orrs	r3, r2
 800772e:	617b      	str	r3, [r7, #20]
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	681b      	ldr	r3, [r3, #0]
 8007734:	697a      	ldr	r2, [r7, #20]
 8007736:	601a      	str	r2, [r3, #0]
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	681b      	ldr	r3, [r3, #0]
 800773c:	461a      	mov	r2, r3
 800773e:	4b6e      	ldr	r3, [pc, #440]	@ (80078f8 <HAL_DMA_Init+0x648>)
 8007740:	4413      	add	r3, r2
 8007742:	4a6e      	ldr	r2, [pc, #440]	@ (80078fc <HAL_DMA_Init+0x64c>)
 8007744:	fba2 2303 	umull	r2, r3, r2, r3
 8007748:	091b      	lsrs	r3, r3, #4
 800774a:	009a      	lsls	r2, r3, #2
 800774c:	687b      	ldr	r3, [r7, #4]
 800774e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8007750:	6878      	ldr	r0, [r7, #4]
 8007752:	f001 fc45 	bl	8008fe0 <DMA_CalcBaseAndBitshift>
 8007756:	4603      	mov	r3, r0
 8007758:	60fb      	str	r3, [r7, #12]
 800775a:	687b      	ldr	r3, [r7, #4]
 800775c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800775e:	f003 031f 	and.w	r3, r3, #31
 8007762:	2201      	movs	r2, #1
 8007764:	409a      	lsls	r2, r3
 8007766:	68fb      	ldr	r3, [r7, #12]
 8007768:	605a      	str	r2, [r3, #4]
 800776a:	e008      	b.n	800777e <HAL_DMA_Init+0x4ce>
 800776c:	687b      	ldr	r3, [r7, #4]
 800776e:	2240      	movs	r2, #64	@ 0x40
 8007770:	655a      	str	r2, [r3, #84]	@ 0x54
 8007772:	687b      	ldr	r3, [r7, #4]
 8007774:	2203      	movs	r2, #3
 8007776:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800777a:	2301      	movs	r3, #1
 800777c:	e0b7      	b.n	80078ee <HAL_DMA_Init+0x63e>
 800777e:	687b      	ldr	r3, [r7, #4]
 8007780:	681b      	ldr	r3, [r3, #0]
 8007782:	4a5f      	ldr	r2, [pc, #380]	@ (8007900 <HAL_DMA_Init+0x650>)
 8007784:	4293      	cmp	r3, r2
 8007786:	d072      	beq.n	800786e <HAL_DMA_Init+0x5be>
 8007788:	687b      	ldr	r3, [r7, #4]
 800778a:	681b      	ldr	r3, [r3, #0]
 800778c:	4a5d      	ldr	r2, [pc, #372]	@ (8007904 <HAL_DMA_Init+0x654>)
 800778e:	4293      	cmp	r3, r2
 8007790:	d06d      	beq.n	800786e <HAL_DMA_Init+0x5be>
 8007792:	687b      	ldr	r3, [r7, #4]
 8007794:	681b      	ldr	r3, [r3, #0]
 8007796:	4a5c      	ldr	r2, [pc, #368]	@ (8007908 <HAL_DMA_Init+0x658>)
 8007798:	4293      	cmp	r3, r2
 800779a:	d068      	beq.n	800786e <HAL_DMA_Init+0x5be>
 800779c:	687b      	ldr	r3, [r7, #4]
 800779e:	681b      	ldr	r3, [r3, #0]
 80077a0:	4a5a      	ldr	r2, [pc, #360]	@ (800790c <HAL_DMA_Init+0x65c>)
 80077a2:	4293      	cmp	r3, r2
 80077a4:	d063      	beq.n	800786e <HAL_DMA_Init+0x5be>
 80077a6:	687b      	ldr	r3, [r7, #4]
 80077a8:	681b      	ldr	r3, [r3, #0]
 80077aa:	4a59      	ldr	r2, [pc, #356]	@ (8007910 <HAL_DMA_Init+0x660>)
 80077ac:	4293      	cmp	r3, r2
 80077ae:	d05e      	beq.n	800786e <HAL_DMA_Init+0x5be>
 80077b0:	687b      	ldr	r3, [r7, #4]
 80077b2:	681b      	ldr	r3, [r3, #0]
 80077b4:	4a57      	ldr	r2, [pc, #348]	@ (8007914 <HAL_DMA_Init+0x664>)
 80077b6:	4293      	cmp	r3, r2
 80077b8:	d059      	beq.n	800786e <HAL_DMA_Init+0x5be>
 80077ba:	687b      	ldr	r3, [r7, #4]
 80077bc:	681b      	ldr	r3, [r3, #0]
 80077be:	4a56      	ldr	r2, [pc, #344]	@ (8007918 <HAL_DMA_Init+0x668>)
 80077c0:	4293      	cmp	r3, r2
 80077c2:	d054      	beq.n	800786e <HAL_DMA_Init+0x5be>
 80077c4:	687b      	ldr	r3, [r7, #4]
 80077c6:	681b      	ldr	r3, [r3, #0]
 80077c8:	4a54      	ldr	r2, [pc, #336]	@ (800791c <HAL_DMA_Init+0x66c>)
 80077ca:	4293      	cmp	r3, r2
 80077cc:	d04f      	beq.n	800786e <HAL_DMA_Init+0x5be>
 80077ce:	687b      	ldr	r3, [r7, #4]
 80077d0:	681b      	ldr	r3, [r3, #0]
 80077d2:	4a53      	ldr	r2, [pc, #332]	@ (8007920 <HAL_DMA_Init+0x670>)
 80077d4:	4293      	cmp	r3, r2
 80077d6:	d04a      	beq.n	800786e <HAL_DMA_Init+0x5be>
 80077d8:	687b      	ldr	r3, [r7, #4]
 80077da:	681b      	ldr	r3, [r3, #0]
 80077dc:	4a51      	ldr	r2, [pc, #324]	@ (8007924 <HAL_DMA_Init+0x674>)
 80077de:	4293      	cmp	r3, r2
 80077e0:	d045      	beq.n	800786e <HAL_DMA_Init+0x5be>
 80077e2:	687b      	ldr	r3, [r7, #4]
 80077e4:	681b      	ldr	r3, [r3, #0]
 80077e6:	4a50      	ldr	r2, [pc, #320]	@ (8007928 <HAL_DMA_Init+0x678>)
 80077e8:	4293      	cmp	r3, r2
 80077ea:	d040      	beq.n	800786e <HAL_DMA_Init+0x5be>
 80077ec:	687b      	ldr	r3, [r7, #4]
 80077ee:	681b      	ldr	r3, [r3, #0]
 80077f0:	4a4e      	ldr	r2, [pc, #312]	@ (800792c <HAL_DMA_Init+0x67c>)
 80077f2:	4293      	cmp	r3, r2
 80077f4:	d03b      	beq.n	800786e <HAL_DMA_Init+0x5be>
 80077f6:	687b      	ldr	r3, [r7, #4]
 80077f8:	681b      	ldr	r3, [r3, #0]
 80077fa:	4a4d      	ldr	r2, [pc, #308]	@ (8007930 <HAL_DMA_Init+0x680>)
 80077fc:	4293      	cmp	r3, r2
 80077fe:	d036      	beq.n	800786e <HAL_DMA_Init+0x5be>
 8007800:	687b      	ldr	r3, [r7, #4]
 8007802:	681b      	ldr	r3, [r3, #0]
 8007804:	4a4b      	ldr	r2, [pc, #300]	@ (8007934 <HAL_DMA_Init+0x684>)
 8007806:	4293      	cmp	r3, r2
 8007808:	d031      	beq.n	800786e <HAL_DMA_Init+0x5be>
 800780a:	687b      	ldr	r3, [r7, #4]
 800780c:	681b      	ldr	r3, [r3, #0]
 800780e:	4a4a      	ldr	r2, [pc, #296]	@ (8007938 <HAL_DMA_Init+0x688>)
 8007810:	4293      	cmp	r3, r2
 8007812:	d02c      	beq.n	800786e <HAL_DMA_Init+0x5be>
 8007814:	687b      	ldr	r3, [r7, #4]
 8007816:	681b      	ldr	r3, [r3, #0]
 8007818:	4a48      	ldr	r2, [pc, #288]	@ (800793c <HAL_DMA_Init+0x68c>)
 800781a:	4293      	cmp	r3, r2
 800781c:	d027      	beq.n	800786e <HAL_DMA_Init+0x5be>
 800781e:	687b      	ldr	r3, [r7, #4]
 8007820:	681b      	ldr	r3, [r3, #0]
 8007822:	4a47      	ldr	r2, [pc, #284]	@ (8007940 <HAL_DMA_Init+0x690>)
 8007824:	4293      	cmp	r3, r2
 8007826:	d022      	beq.n	800786e <HAL_DMA_Init+0x5be>
 8007828:	687b      	ldr	r3, [r7, #4]
 800782a:	681b      	ldr	r3, [r3, #0]
 800782c:	4a45      	ldr	r2, [pc, #276]	@ (8007944 <HAL_DMA_Init+0x694>)
 800782e:	4293      	cmp	r3, r2
 8007830:	d01d      	beq.n	800786e <HAL_DMA_Init+0x5be>
 8007832:	687b      	ldr	r3, [r7, #4]
 8007834:	681b      	ldr	r3, [r3, #0]
 8007836:	4a44      	ldr	r2, [pc, #272]	@ (8007948 <HAL_DMA_Init+0x698>)
 8007838:	4293      	cmp	r3, r2
 800783a:	d018      	beq.n	800786e <HAL_DMA_Init+0x5be>
 800783c:	687b      	ldr	r3, [r7, #4]
 800783e:	681b      	ldr	r3, [r3, #0]
 8007840:	4a42      	ldr	r2, [pc, #264]	@ (800794c <HAL_DMA_Init+0x69c>)
 8007842:	4293      	cmp	r3, r2
 8007844:	d013      	beq.n	800786e <HAL_DMA_Init+0x5be>
 8007846:	687b      	ldr	r3, [r7, #4]
 8007848:	681b      	ldr	r3, [r3, #0]
 800784a:	4a41      	ldr	r2, [pc, #260]	@ (8007950 <HAL_DMA_Init+0x6a0>)
 800784c:	4293      	cmp	r3, r2
 800784e:	d00e      	beq.n	800786e <HAL_DMA_Init+0x5be>
 8007850:	687b      	ldr	r3, [r7, #4]
 8007852:	681b      	ldr	r3, [r3, #0]
 8007854:	4a3f      	ldr	r2, [pc, #252]	@ (8007954 <HAL_DMA_Init+0x6a4>)
 8007856:	4293      	cmp	r3, r2
 8007858:	d009      	beq.n	800786e <HAL_DMA_Init+0x5be>
 800785a:	687b      	ldr	r3, [r7, #4]
 800785c:	681b      	ldr	r3, [r3, #0]
 800785e:	4a3e      	ldr	r2, [pc, #248]	@ (8007958 <HAL_DMA_Init+0x6a8>)
 8007860:	4293      	cmp	r3, r2
 8007862:	d004      	beq.n	800786e <HAL_DMA_Init+0x5be>
 8007864:	687b      	ldr	r3, [r7, #4]
 8007866:	681b      	ldr	r3, [r3, #0]
 8007868:	4a3c      	ldr	r2, [pc, #240]	@ (800795c <HAL_DMA_Init+0x6ac>)
 800786a:	4293      	cmp	r3, r2
 800786c:	d101      	bne.n	8007872 <HAL_DMA_Init+0x5c2>
 800786e:	2301      	movs	r3, #1
 8007870:	e000      	b.n	8007874 <HAL_DMA_Init+0x5c4>
 8007872:	2300      	movs	r3, #0
 8007874:	2b00      	cmp	r3, #0
 8007876:	d032      	beq.n	80078de <HAL_DMA_Init+0x62e>
 8007878:	6878      	ldr	r0, [r7, #4]
 800787a:	f001 fcdf 	bl	800923c <DMA_CalcDMAMUXChannelBaseAndMask>
 800787e:	687b      	ldr	r3, [r7, #4]
 8007880:	689b      	ldr	r3, [r3, #8]
 8007882:	2b80      	cmp	r3, #128	@ 0x80
 8007884:	d102      	bne.n	800788c <HAL_DMA_Init+0x5dc>
 8007886:	687b      	ldr	r3, [r7, #4]
 8007888:	2200      	movs	r2, #0
 800788a:	605a      	str	r2, [r3, #4]
 800788c:	687b      	ldr	r3, [r7, #4]
 800788e:	685a      	ldr	r2, [r3, #4]
 8007890:	687b      	ldr	r3, [r7, #4]
 8007892:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007894:	b2d2      	uxtb	r2, r2
 8007896:	601a      	str	r2, [r3, #0]
 8007898:	687b      	ldr	r3, [r7, #4]
 800789a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800789c:	687a      	ldr	r2, [r7, #4]
 800789e:	6e92      	ldr	r2, [r2, #104]	@ 0x68
 80078a0:	605a      	str	r2, [r3, #4]
 80078a2:	687b      	ldr	r3, [r7, #4]
 80078a4:	685b      	ldr	r3, [r3, #4]
 80078a6:	2b00      	cmp	r3, #0
 80078a8:	d010      	beq.n	80078cc <HAL_DMA_Init+0x61c>
 80078aa:	687b      	ldr	r3, [r7, #4]
 80078ac:	685b      	ldr	r3, [r3, #4]
 80078ae:	2b08      	cmp	r3, #8
 80078b0:	d80c      	bhi.n	80078cc <HAL_DMA_Init+0x61c>
 80078b2:	6878      	ldr	r0, [r7, #4]
 80078b4:	f001 fd5c 	bl	8009370 <DMA_CalcDMAMUXRequestGenBaseAndMask>
 80078b8:	687b      	ldr	r3, [r7, #4]
 80078ba:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80078bc:	2200      	movs	r2, #0
 80078be:	601a      	str	r2, [r3, #0]
 80078c0:	687b      	ldr	r3, [r7, #4]
 80078c2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80078c4:	687a      	ldr	r2, [r7, #4]
 80078c6:	6f52      	ldr	r2, [r2, #116]	@ 0x74
 80078c8:	605a      	str	r2, [r3, #4]
 80078ca:	e008      	b.n	80078de <HAL_DMA_Init+0x62e>
 80078cc:	687b      	ldr	r3, [r7, #4]
 80078ce:	2200      	movs	r2, #0
 80078d0:	66da      	str	r2, [r3, #108]	@ 0x6c
 80078d2:	687b      	ldr	r3, [r7, #4]
 80078d4:	2200      	movs	r2, #0
 80078d6:	671a      	str	r2, [r3, #112]	@ 0x70
 80078d8:	687b      	ldr	r3, [r7, #4]
 80078da:	2200      	movs	r2, #0
 80078dc:	675a      	str	r2, [r3, #116]	@ 0x74
 80078de:	687b      	ldr	r3, [r7, #4]
 80078e0:	2200      	movs	r2, #0
 80078e2:	655a      	str	r2, [r3, #84]	@ 0x54
 80078e4:	687b      	ldr	r3, [r7, #4]
 80078e6:	2201      	movs	r2, #1
 80078e8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80078ec:	2300      	movs	r3, #0
 80078ee:	4618      	mov	r0, r3
 80078f0:	3718      	adds	r7, #24
 80078f2:	46bd      	mov	sp, r7
 80078f4:	bd80      	pop	{r7, pc}
 80078f6:	bf00      	nop
 80078f8:	a7fdabf8 	.word	0xa7fdabf8
 80078fc:	cccccccd 	.word	0xcccccccd
 8007900:	40020010 	.word	0x40020010
 8007904:	40020028 	.word	0x40020028
 8007908:	40020040 	.word	0x40020040
 800790c:	40020058 	.word	0x40020058
 8007910:	40020070 	.word	0x40020070
 8007914:	40020088 	.word	0x40020088
 8007918:	400200a0 	.word	0x400200a0
 800791c:	400200b8 	.word	0x400200b8
 8007920:	40020410 	.word	0x40020410
 8007924:	40020428 	.word	0x40020428
 8007928:	40020440 	.word	0x40020440
 800792c:	40020458 	.word	0x40020458
 8007930:	40020470 	.word	0x40020470
 8007934:	40020488 	.word	0x40020488
 8007938:	400204a0 	.word	0x400204a0
 800793c:	400204b8 	.word	0x400204b8
 8007940:	58025408 	.word	0x58025408
 8007944:	5802541c 	.word	0x5802541c
 8007948:	58025430 	.word	0x58025430
 800794c:	58025444 	.word	0x58025444
 8007950:	58025458 	.word	0x58025458
 8007954:	5802546c 	.word	0x5802546c
 8007958:	58025480 	.word	0x58025480
 800795c:	58025494 	.word	0x58025494

08007960 <HAL_DMA_Start_IT>:
 8007960:	b580      	push	{r7, lr}
 8007962:	b086      	sub	sp, #24
 8007964:	af00      	add	r7, sp, #0
 8007966:	60f8      	str	r0, [r7, #12]
 8007968:	60b9      	str	r1, [r7, #8]
 800796a:	607a      	str	r2, [r7, #4]
 800796c:	603b      	str	r3, [r7, #0]
 800796e:	2300      	movs	r3, #0
 8007970:	75fb      	strb	r3, [r7, #23]
 8007972:	68fb      	ldr	r3, [r7, #12]
 8007974:	2b00      	cmp	r3, #0
 8007976:	d101      	bne.n	800797c <HAL_DMA_Start_IT+0x1c>
 8007978:	2301      	movs	r3, #1
 800797a:	e226      	b.n	8007dca <HAL_DMA_Start_IT+0x46a>
 800797c:	68fb      	ldr	r3, [r7, #12]
 800797e:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8007982:	2b01      	cmp	r3, #1
 8007984:	d101      	bne.n	800798a <HAL_DMA_Start_IT+0x2a>
 8007986:	2302      	movs	r3, #2
 8007988:	e21f      	b.n	8007dca <HAL_DMA_Start_IT+0x46a>
 800798a:	68fb      	ldr	r3, [r7, #12]
 800798c:	2201      	movs	r2, #1
 800798e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8007992:	68fb      	ldr	r3, [r7, #12]
 8007994:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8007998:	b2db      	uxtb	r3, r3
 800799a:	2b01      	cmp	r3, #1
 800799c:	f040 820a 	bne.w	8007db4 <HAL_DMA_Start_IT+0x454>
 80079a0:	68fb      	ldr	r3, [r7, #12]
 80079a2:	2202      	movs	r2, #2
 80079a4:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80079a8:	68fb      	ldr	r3, [r7, #12]
 80079aa:	2200      	movs	r2, #0
 80079ac:	655a      	str	r2, [r3, #84]	@ 0x54
 80079ae:	68fb      	ldr	r3, [r7, #12]
 80079b0:	681b      	ldr	r3, [r3, #0]
 80079b2:	4a68      	ldr	r2, [pc, #416]	@ (8007b54 <HAL_DMA_Start_IT+0x1f4>)
 80079b4:	4293      	cmp	r3, r2
 80079b6:	d04a      	beq.n	8007a4e <HAL_DMA_Start_IT+0xee>
 80079b8:	68fb      	ldr	r3, [r7, #12]
 80079ba:	681b      	ldr	r3, [r3, #0]
 80079bc:	4a66      	ldr	r2, [pc, #408]	@ (8007b58 <HAL_DMA_Start_IT+0x1f8>)
 80079be:	4293      	cmp	r3, r2
 80079c0:	d045      	beq.n	8007a4e <HAL_DMA_Start_IT+0xee>
 80079c2:	68fb      	ldr	r3, [r7, #12]
 80079c4:	681b      	ldr	r3, [r3, #0]
 80079c6:	4a65      	ldr	r2, [pc, #404]	@ (8007b5c <HAL_DMA_Start_IT+0x1fc>)
 80079c8:	4293      	cmp	r3, r2
 80079ca:	d040      	beq.n	8007a4e <HAL_DMA_Start_IT+0xee>
 80079cc:	68fb      	ldr	r3, [r7, #12]
 80079ce:	681b      	ldr	r3, [r3, #0]
 80079d0:	4a63      	ldr	r2, [pc, #396]	@ (8007b60 <HAL_DMA_Start_IT+0x200>)
 80079d2:	4293      	cmp	r3, r2
 80079d4:	d03b      	beq.n	8007a4e <HAL_DMA_Start_IT+0xee>
 80079d6:	68fb      	ldr	r3, [r7, #12]
 80079d8:	681b      	ldr	r3, [r3, #0]
 80079da:	4a62      	ldr	r2, [pc, #392]	@ (8007b64 <HAL_DMA_Start_IT+0x204>)
 80079dc:	4293      	cmp	r3, r2
 80079de:	d036      	beq.n	8007a4e <HAL_DMA_Start_IT+0xee>
 80079e0:	68fb      	ldr	r3, [r7, #12]
 80079e2:	681b      	ldr	r3, [r3, #0]
 80079e4:	4a60      	ldr	r2, [pc, #384]	@ (8007b68 <HAL_DMA_Start_IT+0x208>)
 80079e6:	4293      	cmp	r3, r2
 80079e8:	d031      	beq.n	8007a4e <HAL_DMA_Start_IT+0xee>
 80079ea:	68fb      	ldr	r3, [r7, #12]
 80079ec:	681b      	ldr	r3, [r3, #0]
 80079ee:	4a5f      	ldr	r2, [pc, #380]	@ (8007b6c <HAL_DMA_Start_IT+0x20c>)
 80079f0:	4293      	cmp	r3, r2
 80079f2:	d02c      	beq.n	8007a4e <HAL_DMA_Start_IT+0xee>
 80079f4:	68fb      	ldr	r3, [r7, #12]
 80079f6:	681b      	ldr	r3, [r3, #0]
 80079f8:	4a5d      	ldr	r2, [pc, #372]	@ (8007b70 <HAL_DMA_Start_IT+0x210>)
 80079fa:	4293      	cmp	r3, r2
 80079fc:	d027      	beq.n	8007a4e <HAL_DMA_Start_IT+0xee>
 80079fe:	68fb      	ldr	r3, [r7, #12]
 8007a00:	681b      	ldr	r3, [r3, #0]
 8007a02:	4a5c      	ldr	r2, [pc, #368]	@ (8007b74 <HAL_DMA_Start_IT+0x214>)
 8007a04:	4293      	cmp	r3, r2
 8007a06:	d022      	beq.n	8007a4e <HAL_DMA_Start_IT+0xee>
 8007a08:	68fb      	ldr	r3, [r7, #12]
 8007a0a:	681b      	ldr	r3, [r3, #0]
 8007a0c:	4a5a      	ldr	r2, [pc, #360]	@ (8007b78 <HAL_DMA_Start_IT+0x218>)
 8007a0e:	4293      	cmp	r3, r2
 8007a10:	d01d      	beq.n	8007a4e <HAL_DMA_Start_IT+0xee>
 8007a12:	68fb      	ldr	r3, [r7, #12]
 8007a14:	681b      	ldr	r3, [r3, #0]
 8007a16:	4a59      	ldr	r2, [pc, #356]	@ (8007b7c <HAL_DMA_Start_IT+0x21c>)
 8007a18:	4293      	cmp	r3, r2
 8007a1a:	d018      	beq.n	8007a4e <HAL_DMA_Start_IT+0xee>
 8007a1c:	68fb      	ldr	r3, [r7, #12]
 8007a1e:	681b      	ldr	r3, [r3, #0]
 8007a20:	4a57      	ldr	r2, [pc, #348]	@ (8007b80 <HAL_DMA_Start_IT+0x220>)
 8007a22:	4293      	cmp	r3, r2
 8007a24:	d013      	beq.n	8007a4e <HAL_DMA_Start_IT+0xee>
 8007a26:	68fb      	ldr	r3, [r7, #12]
 8007a28:	681b      	ldr	r3, [r3, #0]
 8007a2a:	4a56      	ldr	r2, [pc, #344]	@ (8007b84 <HAL_DMA_Start_IT+0x224>)
 8007a2c:	4293      	cmp	r3, r2
 8007a2e:	d00e      	beq.n	8007a4e <HAL_DMA_Start_IT+0xee>
 8007a30:	68fb      	ldr	r3, [r7, #12]
 8007a32:	681b      	ldr	r3, [r3, #0]
 8007a34:	4a54      	ldr	r2, [pc, #336]	@ (8007b88 <HAL_DMA_Start_IT+0x228>)
 8007a36:	4293      	cmp	r3, r2
 8007a38:	d009      	beq.n	8007a4e <HAL_DMA_Start_IT+0xee>
 8007a3a:	68fb      	ldr	r3, [r7, #12]
 8007a3c:	681b      	ldr	r3, [r3, #0]
 8007a3e:	4a53      	ldr	r2, [pc, #332]	@ (8007b8c <HAL_DMA_Start_IT+0x22c>)
 8007a40:	4293      	cmp	r3, r2
 8007a42:	d004      	beq.n	8007a4e <HAL_DMA_Start_IT+0xee>
 8007a44:	68fb      	ldr	r3, [r7, #12]
 8007a46:	681b      	ldr	r3, [r3, #0]
 8007a48:	4a51      	ldr	r2, [pc, #324]	@ (8007b90 <HAL_DMA_Start_IT+0x230>)
 8007a4a:	4293      	cmp	r3, r2
 8007a4c:	d108      	bne.n	8007a60 <HAL_DMA_Start_IT+0x100>
 8007a4e:	68fb      	ldr	r3, [r7, #12]
 8007a50:	681b      	ldr	r3, [r3, #0]
 8007a52:	681a      	ldr	r2, [r3, #0]
 8007a54:	68fb      	ldr	r3, [r7, #12]
 8007a56:	681b      	ldr	r3, [r3, #0]
 8007a58:	f022 0201 	bic.w	r2, r2, #1
 8007a5c:	601a      	str	r2, [r3, #0]
 8007a5e:	e007      	b.n	8007a70 <HAL_DMA_Start_IT+0x110>
 8007a60:	68fb      	ldr	r3, [r7, #12]
 8007a62:	681b      	ldr	r3, [r3, #0]
 8007a64:	681a      	ldr	r2, [r3, #0]
 8007a66:	68fb      	ldr	r3, [r7, #12]
 8007a68:	681b      	ldr	r3, [r3, #0]
 8007a6a:	f022 0201 	bic.w	r2, r2, #1
 8007a6e:	601a      	str	r2, [r3, #0]
 8007a70:	683b      	ldr	r3, [r7, #0]
 8007a72:	687a      	ldr	r2, [r7, #4]
 8007a74:	68b9      	ldr	r1, [r7, #8]
 8007a76:	68f8      	ldr	r0, [r7, #12]
 8007a78:	f001 f906 	bl	8008c88 <DMA_SetConfig>
 8007a7c:	68fb      	ldr	r3, [r7, #12]
 8007a7e:	681b      	ldr	r3, [r3, #0]
 8007a80:	4a34      	ldr	r2, [pc, #208]	@ (8007b54 <HAL_DMA_Start_IT+0x1f4>)
 8007a82:	4293      	cmp	r3, r2
 8007a84:	d04a      	beq.n	8007b1c <HAL_DMA_Start_IT+0x1bc>
 8007a86:	68fb      	ldr	r3, [r7, #12]
 8007a88:	681b      	ldr	r3, [r3, #0]
 8007a8a:	4a33      	ldr	r2, [pc, #204]	@ (8007b58 <HAL_DMA_Start_IT+0x1f8>)
 8007a8c:	4293      	cmp	r3, r2
 8007a8e:	d045      	beq.n	8007b1c <HAL_DMA_Start_IT+0x1bc>
 8007a90:	68fb      	ldr	r3, [r7, #12]
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	4a31      	ldr	r2, [pc, #196]	@ (8007b5c <HAL_DMA_Start_IT+0x1fc>)
 8007a96:	4293      	cmp	r3, r2
 8007a98:	d040      	beq.n	8007b1c <HAL_DMA_Start_IT+0x1bc>
 8007a9a:	68fb      	ldr	r3, [r7, #12]
 8007a9c:	681b      	ldr	r3, [r3, #0]
 8007a9e:	4a30      	ldr	r2, [pc, #192]	@ (8007b60 <HAL_DMA_Start_IT+0x200>)
 8007aa0:	4293      	cmp	r3, r2
 8007aa2:	d03b      	beq.n	8007b1c <HAL_DMA_Start_IT+0x1bc>
 8007aa4:	68fb      	ldr	r3, [r7, #12]
 8007aa6:	681b      	ldr	r3, [r3, #0]
 8007aa8:	4a2e      	ldr	r2, [pc, #184]	@ (8007b64 <HAL_DMA_Start_IT+0x204>)
 8007aaa:	4293      	cmp	r3, r2
 8007aac:	d036      	beq.n	8007b1c <HAL_DMA_Start_IT+0x1bc>
 8007aae:	68fb      	ldr	r3, [r7, #12]
 8007ab0:	681b      	ldr	r3, [r3, #0]
 8007ab2:	4a2d      	ldr	r2, [pc, #180]	@ (8007b68 <HAL_DMA_Start_IT+0x208>)
 8007ab4:	4293      	cmp	r3, r2
 8007ab6:	d031      	beq.n	8007b1c <HAL_DMA_Start_IT+0x1bc>
 8007ab8:	68fb      	ldr	r3, [r7, #12]
 8007aba:	681b      	ldr	r3, [r3, #0]
 8007abc:	4a2b      	ldr	r2, [pc, #172]	@ (8007b6c <HAL_DMA_Start_IT+0x20c>)
 8007abe:	4293      	cmp	r3, r2
 8007ac0:	d02c      	beq.n	8007b1c <HAL_DMA_Start_IT+0x1bc>
 8007ac2:	68fb      	ldr	r3, [r7, #12]
 8007ac4:	681b      	ldr	r3, [r3, #0]
 8007ac6:	4a2a      	ldr	r2, [pc, #168]	@ (8007b70 <HAL_DMA_Start_IT+0x210>)
 8007ac8:	4293      	cmp	r3, r2
 8007aca:	d027      	beq.n	8007b1c <HAL_DMA_Start_IT+0x1bc>
 8007acc:	68fb      	ldr	r3, [r7, #12]
 8007ace:	681b      	ldr	r3, [r3, #0]
 8007ad0:	4a28      	ldr	r2, [pc, #160]	@ (8007b74 <HAL_DMA_Start_IT+0x214>)
 8007ad2:	4293      	cmp	r3, r2
 8007ad4:	d022      	beq.n	8007b1c <HAL_DMA_Start_IT+0x1bc>
 8007ad6:	68fb      	ldr	r3, [r7, #12]
 8007ad8:	681b      	ldr	r3, [r3, #0]
 8007ada:	4a27      	ldr	r2, [pc, #156]	@ (8007b78 <HAL_DMA_Start_IT+0x218>)
 8007adc:	4293      	cmp	r3, r2
 8007ade:	d01d      	beq.n	8007b1c <HAL_DMA_Start_IT+0x1bc>
 8007ae0:	68fb      	ldr	r3, [r7, #12]
 8007ae2:	681b      	ldr	r3, [r3, #0]
 8007ae4:	4a25      	ldr	r2, [pc, #148]	@ (8007b7c <HAL_DMA_Start_IT+0x21c>)
 8007ae6:	4293      	cmp	r3, r2
 8007ae8:	d018      	beq.n	8007b1c <HAL_DMA_Start_IT+0x1bc>
 8007aea:	68fb      	ldr	r3, [r7, #12]
 8007aec:	681b      	ldr	r3, [r3, #0]
 8007aee:	4a24      	ldr	r2, [pc, #144]	@ (8007b80 <HAL_DMA_Start_IT+0x220>)
 8007af0:	4293      	cmp	r3, r2
 8007af2:	d013      	beq.n	8007b1c <HAL_DMA_Start_IT+0x1bc>
 8007af4:	68fb      	ldr	r3, [r7, #12]
 8007af6:	681b      	ldr	r3, [r3, #0]
 8007af8:	4a22      	ldr	r2, [pc, #136]	@ (8007b84 <HAL_DMA_Start_IT+0x224>)
 8007afa:	4293      	cmp	r3, r2
 8007afc:	d00e      	beq.n	8007b1c <HAL_DMA_Start_IT+0x1bc>
 8007afe:	68fb      	ldr	r3, [r7, #12]
 8007b00:	681b      	ldr	r3, [r3, #0]
 8007b02:	4a21      	ldr	r2, [pc, #132]	@ (8007b88 <HAL_DMA_Start_IT+0x228>)
 8007b04:	4293      	cmp	r3, r2
 8007b06:	d009      	beq.n	8007b1c <HAL_DMA_Start_IT+0x1bc>
 8007b08:	68fb      	ldr	r3, [r7, #12]
 8007b0a:	681b      	ldr	r3, [r3, #0]
 8007b0c:	4a1f      	ldr	r2, [pc, #124]	@ (8007b8c <HAL_DMA_Start_IT+0x22c>)
 8007b0e:	4293      	cmp	r3, r2
 8007b10:	d004      	beq.n	8007b1c <HAL_DMA_Start_IT+0x1bc>
 8007b12:	68fb      	ldr	r3, [r7, #12]
 8007b14:	681b      	ldr	r3, [r3, #0]
 8007b16:	4a1e      	ldr	r2, [pc, #120]	@ (8007b90 <HAL_DMA_Start_IT+0x230>)
 8007b18:	4293      	cmp	r3, r2
 8007b1a:	d101      	bne.n	8007b20 <HAL_DMA_Start_IT+0x1c0>
 8007b1c:	2301      	movs	r3, #1
 8007b1e:	e000      	b.n	8007b22 <HAL_DMA_Start_IT+0x1c2>
 8007b20:	2300      	movs	r3, #0
 8007b22:	2b00      	cmp	r3, #0
 8007b24:	d036      	beq.n	8007b94 <HAL_DMA_Start_IT+0x234>
 8007b26:	68fb      	ldr	r3, [r7, #12]
 8007b28:	681b      	ldr	r3, [r3, #0]
 8007b2a:	681b      	ldr	r3, [r3, #0]
 8007b2c:	f023 021e 	bic.w	r2, r3, #30
 8007b30:	68fb      	ldr	r3, [r7, #12]
 8007b32:	681b      	ldr	r3, [r3, #0]
 8007b34:	f042 0216 	orr.w	r2, r2, #22
 8007b38:	601a      	str	r2, [r3, #0]
 8007b3a:	68fb      	ldr	r3, [r7, #12]
 8007b3c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007b3e:	2b00      	cmp	r3, #0
 8007b40:	d03e      	beq.n	8007bc0 <HAL_DMA_Start_IT+0x260>
 8007b42:	68fb      	ldr	r3, [r7, #12]
 8007b44:	681b      	ldr	r3, [r3, #0]
 8007b46:	681a      	ldr	r2, [r3, #0]
 8007b48:	68fb      	ldr	r3, [r7, #12]
 8007b4a:	681b      	ldr	r3, [r3, #0]
 8007b4c:	f042 0208 	orr.w	r2, r2, #8
 8007b50:	601a      	str	r2, [r3, #0]
 8007b52:	e035      	b.n	8007bc0 <HAL_DMA_Start_IT+0x260>
 8007b54:	40020010 	.word	0x40020010
 8007b58:	40020028 	.word	0x40020028
 8007b5c:	40020040 	.word	0x40020040
 8007b60:	40020058 	.word	0x40020058
 8007b64:	40020070 	.word	0x40020070
 8007b68:	40020088 	.word	0x40020088
 8007b6c:	400200a0 	.word	0x400200a0
 8007b70:	400200b8 	.word	0x400200b8
 8007b74:	40020410 	.word	0x40020410
 8007b78:	40020428 	.word	0x40020428
 8007b7c:	40020440 	.word	0x40020440
 8007b80:	40020458 	.word	0x40020458
 8007b84:	40020470 	.word	0x40020470
 8007b88:	40020488 	.word	0x40020488
 8007b8c:	400204a0 	.word	0x400204a0
 8007b90:	400204b8 	.word	0x400204b8
 8007b94:	68fb      	ldr	r3, [r7, #12]
 8007b96:	681b      	ldr	r3, [r3, #0]
 8007b98:	681b      	ldr	r3, [r3, #0]
 8007b9a:	f023 020e 	bic.w	r2, r3, #14
 8007b9e:	68fb      	ldr	r3, [r7, #12]
 8007ba0:	681b      	ldr	r3, [r3, #0]
 8007ba2:	f042 020a 	orr.w	r2, r2, #10
 8007ba6:	601a      	str	r2, [r3, #0]
 8007ba8:	68fb      	ldr	r3, [r7, #12]
 8007baa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007bac:	2b00      	cmp	r3, #0
 8007bae:	d007      	beq.n	8007bc0 <HAL_DMA_Start_IT+0x260>
 8007bb0:	68fb      	ldr	r3, [r7, #12]
 8007bb2:	681b      	ldr	r3, [r3, #0]
 8007bb4:	681a      	ldr	r2, [r3, #0]
 8007bb6:	68fb      	ldr	r3, [r7, #12]
 8007bb8:	681b      	ldr	r3, [r3, #0]
 8007bba:	f042 0204 	orr.w	r2, r2, #4
 8007bbe:	601a      	str	r2, [r3, #0]
 8007bc0:	68fb      	ldr	r3, [r7, #12]
 8007bc2:	681b      	ldr	r3, [r3, #0]
 8007bc4:	4a83      	ldr	r2, [pc, #524]	@ (8007dd4 <HAL_DMA_Start_IT+0x474>)
 8007bc6:	4293      	cmp	r3, r2
 8007bc8:	d072      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007bca:	68fb      	ldr	r3, [r7, #12]
 8007bcc:	681b      	ldr	r3, [r3, #0]
 8007bce:	4a82      	ldr	r2, [pc, #520]	@ (8007dd8 <HAL_DMA_Start_IT+0x478>)
 8007bd0:	4293      	cmp	r3, r2
 8007bd2:	d06d      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007bd4:	68fb      	ldr	r3, [r7, #12]
 8007bd6:	681b      	ldr	r3, [r3, #0]
 8007bd8:	4a80      	ldr	r2, [pc, #512]	@ (8007ddc <HAL_DMA_Start_IT+0x47c>)
 8007bda:	4293      	cmp	r3, r2
 8007bdc:	d068      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007bde:	68fb      	ldr	r3, [r7, #12]
 8007be0:	681b      	ldr	r3, [r3, #0]
 8007be2:	4a7f      	ldr	r2, [pc, #508]	@ (8007de0 <HAL_DMA_Start_IT+0x480>)
 8007be4:	4293      	cmp	r3, r2
 8007be6:	d063      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007be8:	68fb      	ldr	r3, [r7, #12]
 8007bea:	681b      	ldr	r3, [r3, #0]
 8007bec:	4a7d      	ldr	r2, [pc, #500]	@ (8007de4 <HAL_DMA_Start_IT+0x484>)
 8007bee:	4293      	cmp	r3, r2
 8007bf0:	d05e      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007bf2:	68fb      	ldr	r3, [r7, #12]
 8007bf4:	681b      	ldr	r3, [r3, #0]
 8007bf6:	4a7c      	ldr	r2, [pc, #496]	@ (8007de8 <HAL_DMA_Start_IT+0x488>)
 8007bf8:	4293      	cmp	r3, r2
 8007bfa:	d059      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007bfc:	68fb      	ldr	r3, [r7, #12]
 8007bfe:	681b      	ldr	r3, [r3, #0]
 8007c00:	4a7a      	ldr	r2, [pc, #488]	@ (8007dec <HAL_DMA_Start_IT+0x48c>)
 8007c02:	4293      	cmp	r3, r2
 8007c04:	d054      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007c06:	68fb      	ldr	r3, [r7, #12]
 8007c08:	681b      	ldr	r3, [r3, #0]
 8007c0a:	4a79      	ldr	r2, [pc, #484]	@ (8007df0 <HAL_DMA_Start_IT+0x490>)
 8007c0c:	4293      	cmp	r3, r2
 8007c0e:	d04f      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007c10:	68fb      	ldr	r3, [r7, #12]
 8007c12:	681b      	ldr	r3, [r3, #0]
 8007c14:	4a77      	ldr	r2, [pc, #476]	@ (8007df4 <HAL_DMA_Start_IT+0x494>)
 8007c16:	4293      	cmp	r3, r2
 8007c18:	d04a      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007c1a:	68fb      	ldr	r3, [r7, #12]
 8007c1c:	681b      	ldr	r3, [r3, #0]
 8007c1e:	4a76      	ldr	r2, [pc, #472]	@ (8007df8 <HAL_DMA_Start_IT+0x498>)
 8007c20:	4293      	cmp	r3, r2
 8007c22:	d045      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007c24:	68fb      	ldr	r3, [r7, #12]
 8007c26:	681b      	ldr	r3, [r3, #0]
 8007c28:	4a74      	ldr	r2, [pc, #464]	@ (8007dfc <HAL_DMA_Start_IT+0x49c>)
 8007c2a:	4293      	cmp	r3, r2
 8007c2c:	d040      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007c2e:	68fb      	ldr	r3, [r7, #12]
 8007c30:	681b      	ldr	r3, [r3, #0]
 8007c32:	4a73      	ldr	r2, [pc, #460]	@ (8007e00 <HAL_DMA_Start_IT+0x4a0>)
 8007c34:	4293      	cmp	r3, r2
 8007c36:	d03b      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007c38:	68fb      	ldr	r3, [r7, #12]
 8007c3a:	681b      	ldr	r3, [r3, #0]
 8007c3c:	4a71      	ldr	r2, [pc, #452]	@ (8007e04 <HAL_DMA_Start_IT+0x4a4>)
 8007c3e:	4293      	cmp	r3, r2
 8007c40:	d036      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007c42:	68fb      	ldr	r3, [r7, #12]
 8007c44:	681b      	ldr	r3, [r3, #0]
 8007c46:	4a70      	ldr	r2, [pc, #448]	@ (8007e08 <HAL_DMA_Start_IT+0x4a8>)
 8007c48:	4293      	cmp	r3, r2
 8007c4a:	d031      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007c4c:	68fb      	ldr	r3, [r7, #12]
 8007c4e:	681b      	ldr	r3, [r3, #0]
 8007c50:	4a6e      	ldr	r2, [pc, #440]	@ (8007e0c <HAL_DMA_Start_IT+0x4ac>)
 8007c52:	4293      	cmp	r3, r2
 8007c54:	d02c      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007c56:	68fb      	ldr	r3, [r7, #12]
 8007c58:	681b      	ldr	r3, [r3, #0]
 8007c5a:	4a6d      	ldr	r2, [pc, #436]	@ (8007e10 <HAL_DMA_Start_IT+0x4b0>)
 8007c5c:	4293      	cmp	r3, r2
 8007c5e:	d027      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007c60:	68fb      	ldr	r3, [r7, #12]
 8007c62:	681b      	ldr	r3, [r3, #0]
 8007c64:	4a6b      	ldr	r2, [pc, #428]	@ (8007e14 <HAL_DMA_Start_IT+0x4b4>)
 8007c66:	4293      	cmp	r3, r2
 8007c68:	d022      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007c6a:	68fb      	ldr	r3, [r7, #12]
 8007c6c:	681b      	ldr	r3, [r3, #0]
 8007c6e:	4a6a      	ldr	r2, [pc, #424]	@ (8007e18 <HAL_DMA_Start_IT+0x4b8>)
 8007c70:	4293      	cmp	r3, r2
 8007c72:	d01d      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007c74:	68fb      	ldr	r3, [r7, #12]
 8007c76:	681b      	ldr	r3, [r3, #0]
 8007c78:	4a68      	ldr	r2, [pc, #416]	@ (8007e1c <HAL_DMA_Start_IT+0x4bc>)
 8007c7a:	4293      	cmp	r3, r2
 8007c7c:	d018      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007c7e:	68fb      	ldr	r3, [r7, #12]
 8007c80:	681b      	ldr	r3, [r3, #0]
 8007c82:	4a67      	ldr	r2, [pc, #412]	@ (8007e20 <HAL_DMA_Start_IT+0x4c0>)
 8007c84:	4293      	cmp	r3, r2
 8007c86:	d013      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007c88:	68fb      	ldr	r3, [r7, #12]
 8007c8a:	681b      	ldr	r3, [r3, #0]
 8007c8c:	4a65      	ldr	r2, [pc, #404]	@ (8007e24 <HAL_DMA_Start_IT+0x4c4>)
 8007c8e:	4293      	cmp	r3, r2
 8007c90:	d00e      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007c92:	68fb      	ldr	r3, [r7, #12]
 8007c94:	681b      	ldr	r3, [r3, #0]
 8007c96:	4a64      	ldr	r2, [pc, #400]	@ (8007e28 <HAL_DMA_Start_IT+0x4c8>)
 8007c98:	4293      	cmp	r3, r2
 8007c9a:	d009      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007c9c:	68fb      	ldr	r3, [r7, #12]
 8007c9e:	681b      	ldr	r3, [r3, #0]
 8007ca0:	4a62      	ldr	r2, [pc, #392]	@ (8007e2c <HAL_DMA_Start_IT+0x4cc>)
 8007ca2:	4293      	cmp	r3, r2
 8007ca4:	d004      	beq.n	8007cb0 <HAL_DMA_Start_IT+0x350>
 8007ca6:	68fb      	ldr	r3, [r7, #12]
 8007ca8:	681b      	ldr	r3, [r3, #0]
 8007caa:	4a61      	ldr	r2, [pc, #388]	@ (8007e30 <HAL_DMA_Start_IT+0x4d0>)
 8007cac:	4293      	cmp	r3, r2
 8007cae:	d101      	bne.n	8007cb4 <HAL_DMA_Start_IT+0x354>
 8007cb0:	2301      	movs	r3, #1
 8007cb2:	e000      	b.n	8007cb6 <HAL_DMA_Start_IT+0x356>
 8007cb4:	2300      	movs	r3, #0
 8007cb6:	2b00      	cmp	r3, #0
 8007cb8:	d01a      	beq.n	8007cf0 <HAL_DMA_Start_IT+0x390>
 8007cba:	68fb      	ldr	r3, [r7, #12]
 8007cbc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007cbe:	681b      	ldr	r3, [r3, #0]
 8007cc0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8007cc4:	2b00      	cmp	r3, #0
 8007cc6:	d007      	beq.n	8007cd8 <HAL_DMA_Start_IT+0x378>
 8007cc8:	68fb      	ldr	r3, [r7, #12]
 8007cca:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007ccc:	681a      	ldr	r2, [r3, #0]
 8007cce:	68fb      	ldr	r3, [r7, #12]
 8007cd0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007cd2:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8007cd6:	601a      	str	r2, [r3, #0]
 8007cd8:	68fb      	ldr	r3, [r7, #12]
 8007cda:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8007cdc:	2b00      	cmp	r3, #0
 8007cde:	d007      	beq.n	8007cf0 <HAL_DMA_Start_IT+0x390>
 8007ce0:	68fb      	ldr	r3, [r7, #12]
 8007ce2:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8007ce4:	681a      	ldr	r2, [r3, #0]
 8007ce6:	68fb      	ldr	r3, [r7, #12]
 8007ce8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8007cea:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8007cee:	601a      	str	r2, [r3, #0]
 8007cf0:	68fb      	ldr	r3, [r7, #12]
 8007cf2:	681b      	ldr	r3, [r3, #0]
 8007cf4:	4a37      	ldr	r2, [pc, #220]	@ (8007dd4 <HAL_DMA_Start_IT+0x474>)
 8007cf6:	4293      	cmp	r3, r2
 8007cf8:	d04a      	beq.n	8007d90 <HAL_DMA_Start_IT+0x430>
 8007cfa:	68fb      	ldr	r3, [r7, #12]
 8007cfc:	681b      	ldr	r3, [r3, #0]
 8007cfe:	4a36      	ldr	r2, [pc, #216]	@ (8007dd8 <HAL_DMA_Start_IT+0x478>)
 8007d00:	4293      	cmp	r3, r2
 8007d02:	d045      	beq.n	8007d90 <HAL_DMA_Start_IT+0x430>
 8007d04:	68fb      	ldr	r3, [r7, #12]
 8007d06:	681b      	ldr	r3, [r3, #0]
 8007d08:	4a34      	ldr	r2, [pc, #208]	@ (8007ddc <HAL_DMA_Start_IT+0x47c>)
 8007d0a:	4293      	cmp	r3, r2
 8007d0c:	d040      	beq.n	8007d90 <HAL_DMA_Start_IT+0x430>
 8007d0e:	68fb      	ldr	r3, [r7, #12]
 8007d10:	681b      	ldr	r3, [r3, #0]
 8007d12:	4a33      	ldr	r2, [pc, #204]	@ (8007de0 <HAL_DMA_Start_IT+0x480>)
 8007d14:	4293      	cmp	r3, r2
 8007d16:	d03b      	beq.n	8007d90 <HAL_DMA_Start_IT+0x430>
 8007d18:	68fb      	ldr	r3, [r7, #12]
 8007d1a:	681b      	ldr	r3, [r3, #0]
 8007d1c:	4a31      	ldr	r2, [pc, #196]	@ (8007de4 <HAL_DMA_Start_IT+0x484>)
 8007d1e:	4293      	cmp	r3, r2
 8007d20:	d036      	beq.n	8007d90 <HAL_DMA_Start_IT+0x430>
 8007d22:	68fb      	ldr	r3, [r7, #12]
 8007d24:	681b      	ldr	r3, [r3, #0]
 8007d26:	4a30      	ldr	r2, [pc, #192]	@ (8007de8 <HAL_DMA_Start_IT+0x488>)
 8007d28:	4293      	cmp	r3, r2
 8007d2a:	d031      	beq.n	8007d90 <HAL_DMA_Start_IT+0x430>
 8007d2c:	68fb      	ldr	r3, [r7, #12]
 8007d2e:	681b      	ldr	r3, [r3, #0]
 8007d30:	4a2e      	ldr	r2, [pc, #184]	@ (8007dec <HAL_DMA_Start_IT+0x48c>)
 8007d32:	4293      	cmp	r3, r2
 8007d34:	d02c      	beq.n	8007d90 <HAL_DMA_Start_IT+0x430>
 8007d36:	68fb      	ldr	r3, [r7, #12]
 8007d38:	681b      	ldr	r3, [r3, #0]
 8007d3a:	4a2d      	ldr	r2, [pc, #180]	@ (8007df0 <HAL_DMA_Start_IT+0x490>)
 8007d3c:	4293      	cmp	r3, r2
 8007d3e:	d027      	beq.n	8007d90 <HAL_DMA_Start_IT+0x430>
 8007d40:	68fb      	ldr	r3, [r7, #12]
 8007d42:	681b      	ldr	r3, [r3, #0]
 8007d44:	4a2b      	ldr	r2, [pc, #172]	@ (8007df4 <HAL_DMA_Start_IT+0x494>)
 8007d46:	4293      	cmp	r3, r2
 8007d48:	d022      	beq.n	8007d90 <HAL_DMA_Start_IT+0x430>
 8007d4a:	68fb      	ldr	r3, [r7, #12]
 8007d4c:	681b      	ldr	r3, [r3, #0]
 8007d4e:	4a2a      	ldr	r2, [pc, #168]	@ (8007df8 <HAL_DMA_Start_IT+0x498>)
 8007d50:	4293      	cmp	r3, r2
 8007d52:	d01d      	beq.n	8007d90 <HAL_DMA_Start_IT+0x430>
 8007d54:	68fb      	ldr	r3, [r7, #12]
 8007d56:	681b      	ldr	r3, [r3, #0]
 8007d58:	4a28      	ldr	r2, [pc, #160]	@ (8007dfc <HAL_DMA_Start_IT+0x49c>)
 8007d5a:	4293      	cmp	r3, r2
 8007d5c:	d018      	beq.n	8007d90 <HAL_DMA_Start_IT+0x430>
 8007d5e:	68fb      	ldr	r3, [r7, #12]
 8007d60:	681b      	ldr	r3, [r3, #0]
 8007d62:	4a27      	ldr	r2, [pc, #156]	@ (8007e00 <HAL_DMA_Start_IT+0x4a0>)
 8007d64:	4293      	cmp	r3, r2
 8007d66:	d013      	beq.n	8007d90 <HAL_DMA_Start_IT+0x430>
 8007d68:	68fb      	ldr	r3, [r7, #12]
 8007d6a:	681b      	ldr	r3, [r3, #0]
 8007d6c:	4a25      	ldr	r2, [pc, #148]	@ (8007e04 <HAL_DMA_Start_IT+0x4a4>)
 8007d6e:	4293      	cmp	r3, r2
 8007d70:	d00e      	beq.n	8007d90 <HAL_DMA_Start_IT+0x430>
 8007d72:	68fb      	ldr	r3, [r7, #12]
 8007d74:	681b      	ldr	r3, [r3, #0]
 8007d76:	4a24      	ldr	r2, [pc, #144]	@ (8007e08 <HAL_DMA_Start_IT+0x4a8>)
 8007d78:	4293      	cmp	r3, r2
 8007d7a:	d009      	beq.n	8007d90 <HAL_DMA_Start_IT+0x430>
 8007d7c:	68fb      	ldr	r3, [r7, #12]
 8007d7e:	681b      	ldr	r3, [r3, #0]
 8007d80:	4a22      	ldr	r2, [pc, #136]	@ (8007e0c <HAL_DMA_Start_IT+0x4ac>)
 8007d82:	4293      	cmp	r3, r2
 8007d84:	d004      	beq.n	8007d90 <HAL_DMA_Start_IT+0x430>
 8007d86:	68fb      	ldr	r3, [r7, #12]
 8007d88:	681b      	ldr	r3, [r3, #0]
 8007d8a:	4a21      	ldr	r2, [pc, #132]	@ (8007e10 <HAL_DMA_Start_IT+0x4b0>)
 8007d8c:	4293      	cmp	r3, r2
 8007d8e:	d108      	bne.n	8007da2 <HAL_DMA_Start_IT+0x442>
 8007d90:	68fb      	ldr	r3, [r7, #12]
 8007d92:	681b      	ldr	r3, [r3, #0]
 8007d94:	681a      	ldr	r2, [r3, #0]
 8007d96:	68fb      	ldr	r3, [r7, #12]
 8007d98:	681b      	ldr	r3, [r3, #0]
 8007d9a:	f042 0201 	orr.w	r2, r2, #1
 8007d9e:	601a      	str	r2, [r3, #0]
 8007da0:	e012      	b.n	8007dc8 <HAL_DMA_Start_IT+0x468>
 8007da2:	68fb      	ldr	r3, [r7, #12]
 8007da4:	681b      	ldr	r3, [r3, #0]
 8007da6:	681a      	ldr	r2, [r3, #0]
 8007da8:	68fb      	ldr	r3, [r7, #12]
 8007daa:	681b      	ldr	r3, [r3, #0]
 8007dac:	f042 0201 	orr.w	r2, r2, #1
 8007db0:	601a      	str	r2, [r3, #0]
 8007db2:	e009      	b.n	8007dc8 <HAL_DMA_Start_IT+0x468>
 8007db4:	68fb      	ldr	r3, [r7, #12]
 8007db6:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8007dba:	655a      	str	r2, [r3, #84]	@ 0x54
 8007dbc:	68fb      	ldr	r3, [r7, #12]
 8007dbe:	2200      	movs	r2, #0
 8007dc0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8007dc4:	2301      	movs	r3, #1
 8007dc6:	75fb      	strb	r3, [r7, #23]
 8007dc8:	7dfb      	ldrb	r3, [r7, #23]
 8007dca:	4618      	mov	r0, r3
 8007dcc:	3718      	adds	r7, #24
 8007dce:	46bd      	mov	sp, r7
 8007dd0:	bd80      	pop	{r7, pc}
 8007dd2:	bf00      	nop
 8007dd4:	40020010 	.word	0x40020010
 8007dd8:	40020028 	.word	0x40020028
 8007ddc:	40020040 	.word	0x40020040
 8007de0:	40020058 	.word	0x40020058
 8007de4:	40020070 	.word	0x40020070
 8007de8:	40020088 	.word	0x40020088
 8007dec:	400200a0 	.word	0x400200a0
 8007df0:	400200b8 	.word	0x400200b8
 8007df4:	40020410 	.word	0x40020410
 8007df8:	40020428 	.word	0x40020428
 8007dfc:	40020440 	.word	0x40020440
 8007e00:	40020458 	.word	0x40020458
 8007e04:	40020470 	.word	0x40020470
 8007e08:	40020488 	.word	0x40020488
 8007e0c:	400204a0 	.word	0x400204a0
 8007e10:	400204b8 	.word	0x400204b8
 8007e14:	58025408 	.word	0x58025408
 8007e18:	5802541c 	.word	0x5802541c
 8007e1c:	58025430 	.word	0x58025430
 8007e20:	58025444 	.word	0x58025444
 8007e24:	58025458 	.word	0x58025458
 8007e28:	5802546c 	.word	0x5802546c
 8007e2c:	58025480 	.word	0x58025480
 8007e30:	58025494 	.word	0x58025494

08007e34 <HAL_DMA_IRQHandler>:
 8007e34:	b580      	push	{r7, lr}
 8007e36:	b08a      	sub	sp, #40	@ 0x28
 8007e38:	af00      	add	r7, sp, #0
 8007e3a:	6078      	str	r0, [r7, #4]
 8007e3c:	2300      	movs	r3, #0
 8007e3e:	60fb      	str	r3, [r7, #12]
 8007e40:	4b67      	ldr	r3, [pc, #412]	@ (8007fe0 <HAL_DMA_IRQHandler+0x1ac>)
 8007e42:	681b      	ldr	r3, [r3, #0]
 8007e44:	4a67      	ldr	r2, [pc, #412]	@ (8007fe4 <HAL_DMA_IRQHandler+0x1b0>)
 8007e46:	fba2 2303 	umull	r2, r3, r2, r3
 8007e4a:	0a9b      	lsrs	r3, r3, #10
 8007e4c:	627b      	str	r3, [r7, #36]	@ 0x24
 8007e4e:	687b      	ldr	r3, [r7, #4]
 8007e50:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007e52:	623b      	str	r3, [r7, #32]
 8007e54:	687b      	ldr	r3, [r7, #4]
 8007e56:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007e58:	61fb      	str	r3, [r7, #28]
 8007e5a:	6a3b      	ldr	r3, [r7, #32]
 8007e5c:	681b      	ldr	r3, [r3, #0]
 8007e5e:	61bb      	str	r3, [r7, #24]
 8007e60:	69fb      	ldr	r3, [r7, #28]
 8007e62:	681b      	ldr	r3, [r3, #0]
 8007e64:	617b      	str	r3, [r7, #20]
 8007e66:	687b      	ldr	r3, [r7, #4]
 8007e68:	681b      	ldr	r3, [r3, #0]
 8007e6a:	4a5f      	ldr	r2, [pc, #380]	@ (8007fe8 <HAL_DMA_IRQHandler+0x1b4>)
 8007e6c:	4293      	cmp	r3, r2
 8007e6e:	d04a      	beq.n	8007f06 <HAL_DMA_IRQHandler+0xd2>
 8007e70:	687b      	ldr	r3, [r7, #4]
 8007e72:	681b      	ldr	r3, [r3, #0]
 8007e74:	4a5d      	ldr	r2, [pc, #372]	@ (8007fec <HAL_DMA_IRQHandler+0x1b8>)
 8007e76:	4293      	cmp	r3, r2
 8007e78:	d045      	beq.n	8007f06 <HAL_DMA_IRQHandler+0xd2>
 8007e7a:	687b      	ldr	r3, [r7, #4]
 8007e7c:	681b      	ldr	r3, [r3, #0]
 8007e7e:	4a5c      	ldr	r2, [pc, #368]	@ (8007ff0 <HAL_DMA_IRQHandler+0x1bc>)
 8007e80:	4293      	cmp	r3, r2
 8007e82:	d040      	beq.n	8007f06 <HAL_DMA_IRQHandler+0xd2>
 8007e84:	687b      	ldr	r3, [r7, #4]
 8007e86:	681b      	ldr	r3, [r3, #0]
 8007e88:	4a5a      	ldr	r2, [pc, #360]	@ (8007ff4 <HAL_DMA_IRQHandler+0x1c0>)
 8007e8a:	4293      	cmp	r3, r2
 8007e8c:	d03b      	beq.n	8007f06 <HAL_DMA_IRQHandler+0xd2>
 8007e8e:	687b      	ldr	r3, [r7, #4]
 8007e90:	681b      	ldr	r3, [r3, #0]
 8007e92:	4a59      	ldr	r2, [pc, #356]	@ (8007ff8 <HAL_DMA_IRQHandler+0x1c4>)
 8007e94:	4293      	cmp	r3, r2
 8007e96:	d036      	beq.n	8007f06 <HAL_DMA_IRQHandler+0xd2>
 8007e98:	687b      	ldr	r3, [r7, #4]
 8007e9a:	681b      	ldr	r3, [r3, #0]
 8007e9c:	4a57      	ldr	r2, [pc, #348]	@ (8007ffc <HAL_DMA_IRQHandler+0x1c8>)
 8007e9e:	4293      	cmp	r3, r2
 8007ea0:	d031      	beq.n	8007f06 <HAL_DMA_IRQHandler+0xd2>
 8007ea2:	687b      	ldr	r3, [r7, #4]
 8007ea4:	681b      	ldr	r3, [r3, #0]
 8007ea6:	4a56      	ldr	r2, [pc, #344]	@ (8008000 <HAL_DMA_IRQHandler+0x1cc>)
 8007ea8:	4293      	cmp	r3, r2
 8007eaa:	d02c      	beq.n	8007f06 <HAL_DMA_IRQHandler+0xd2>
 8007eac:	687b      	ldr	r3, [r7, #4]
 8007eae:	681b      	ldr	r3, [r3, #0]
 8007eb0:	4a54      	ldr	r2, [pc, #336]	@ (8008004 <HAL_DMA_IRQHandler+0x1d0>)
 8007eb2:	4293      	cmp	r3, r2
 8007eb4:	d027      	beq.n	8007f06 <HAL_DMA_IRQHandler+0xd2>
 8007eb6:	687b      	ldr	r3, [r7, #4]
 8007eb8:	681b      	ldr	r3, [r3, #0]
 8007eba:	4a53      	ldr	r2, [pc, #332]	@ (8008008 <HAL_DMA_IRQHandler+0x1d4>)
 8007ebc:	4293      	cmp	r3, r2
 8007ebe:	d022      	beq.n	8007f06 <HAL_DMA_IRQHandler+0xd2>
 8007ec0:	687b      	ldr	r3, [r7, #4]
 8007ec2:	681b      	ldr	r3, [r3, #0]
 8007ec4:	4a51      	ldr	r2, [pc, #324]	@ (800800c <HAL_DMA_IRQHandler+0x1d8>)
 8007ec6:	4293      	cmp	r3, r2
 8007ec8:	d01d      	beq.n	8007f06 <HAL_DMA_IRQHandler+0xd2>
 8007eca:	687b      	ldr	r3, [r7, #4]
 8007ecc:	681b      	ldr	r3, [r3, #0]
 8007ece:	4a50      	ldr	r2, [pc, #320]	@ (8008010 <HAL_DMA_IRQHandler+0x1dc>)
 8007ed0:	4293      	cmp	r3, r2
 8007ed2:	d018      	beq.n	8007f06 <HAL_DMA_IRQHandler+0xd2>
 8007ed4:	687b      	ldr	r3, [r7, #4]
 8007ed6:	681b      	ldr	r3, [r3, #0]
 8007ed8:	4a4e      	ldr	r2, [pc, #312]	@ (8008014 <HAL_DMA_IRQHandler+0x1e0>)
 8007eda:	4293      	cmp	r3, r2
 8007edc:	d013      	beq.n	8007f06 <HAL_DMA_IRQHandler+0xd2>
 8007ede:	687b      	ldr	r3, [r7, #4]
 8007ee0:	681b      	ldr	r3, [r3, #0]
 8007ee2:	4a4d      	ldr	r2, [pc, #308]	@ (8008018 <HAL_DMA_IRQHandler+0x1e4>)
 8007ee4:	4293      	cmp	r3, r2
 8007ee6:	d00e      	beq.n	8007f06 <HAL_DMA_IRQHandler+0xd2>
 8007ee8:	687b      	ldr	r3, [r7, #4]
 8007eea:	681b      	ldr	r3, [r3, #0]
 8007eec:	4a4b      	ldr	r2, [pc, #300]	@ (800801c <HAL_DMA_IRQHandler+0x1e8>)
 8007eee:	4293      	cmp	r3, r2
 8007ef0:	d009      	beq.n	8007f06 <HAL_DMA_IRQHandler+0xd2>
 8007ef2:	687b      	ldr	r3, [r7, #4]
 8007ef4:	681b      	ldr	r3, [r3, #0]
 8007ef6:	4a4a      	ldr	r2, [pc, #296]	@ (8008020 <HAL_DMA_IRQHandler+0x1ec>)
 8007ef8:	4293      	cmp	r3, r2
 8007efa:	d004      	beq.n	8007f06 <HAL_DMA_IRQHandler+0xd2>
 8007efc:	687b      	ldr	r3, [r7, #4]
 8007efe:	681b      	ldr	r3, [r3, #0]
 8007f00:	4a48      	ldr	r2, [pc, #288]	@ (8008024 <HAL_DMA_IRQHandler+0x1f0>)
 8007f02:	4293      	cmp	r3, r2
 8007f04:	d101      	bne.n	8007f0a <HAL_DMA_IRQHandler+0xd6>
 8007f06:	2301      	movs	r3, #1
 8007f08:	e000      	b.n	8007f0c <HAL_DMA_IRQHandler+0xd8>
 8007f0a:	2300      	movs	r3, #0
 8007f0c:	2b00      	cmp	r3, #0
 8007f0e:	f000 842b 	beq.w	8008768 <HAL_DMA_IRQHandler+0x934>
 8007f12:	687b      	ldr	r3, [r7, #4]
 8007f14:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8007f16:	f003 031f 	and.w	r3, r3, #31
 8007f1a:	2208      	movs	r2, #8
 8007f1c:	409a      	lsls	r2, r3
 8007f1e:	69bb      	ldr	r3, [r7, #24]
 8007f20:	4013      	ands	r3, r2
 8007f22:	2b00      	cmp	r3, #0
 8007f24:	f000 80a2 	beq.w	800806c <HAL_DMA_IRQHandler+0x238>
 8007f28:	687b      	ldr	r3, [r7, #4]
 8007f2a:	681b      	ldr	r3, [r3, #0]
 8007f2c:	4a2e      	ldr	r2, [pc, #184]	@ (8007fe8 <HAL_DMA_IRQHandler+0x1b4>)
 8007f2e:	4293      	cmp	r3, r2
 8007f30:	d04a      	beq.n	8007fc8 <HAL_DMA_IRQHandler+0x194>
 8007f32:	687b      	ldr	r3, [r7, #4]
 8007f34:	681b      	ldr	r3, [r3, #0]
 8007f36:	4a2d      	ldr	r2, [pc, #180]	@ (8007fec <HAL_DMA_IRQHandler+0x1b8>)
 8007f38:	4293      	cmp	r3, r2
 8007f3a:	d045      	beq.n	8007fc8 <HAL_DMA_IRQHandler+0x194>
 8007f3c:	687b      	ldr	r3, [r7, #4]
 8007f3e:	681b      	ldr	r3, [r3, #0]
 8007f40:	4a2b      	ldr	r2, [pc, #172]	@ (8007ff0 <HAL_DMA_IRQHandler+0x1bc>)
 8007f42:	4293      	cmp	r3, r2
 8007f44:	d040      	beq.n	8007fc8 <HAL_DMA_IRQHandler+0x194>
 8007f46:	687b      	ldr	r3, [r7, #4]
 8007f48:	681b      	ldr	r3, [r3, #0]
 8007f4a:	4a2a      	ldr	r2, [pc, #168]	@ (8007ff4 <HAL_DMA_IRQHandler+0x1c0>)
 8007f4c:	4293      	cmp	r3, r2
 8007f4e:	d03b      	beq.n	8007fc8 <HAL_DMA_IRQHandler+0x194>
 8007f50:	687b      	ldr	r3, [r7, #4]
 8007f52:	681b      	ldr	r3, [r3, #0]
 8007f54:	4a28      	ldr	r2, [pc, #160]	@ (8007ff8 <HAL_DMA_IRQHandler+0x1c4>)
 8007f56:	4293      	cmp	r3, r2
 8007f58:	d036      	beq.n	8007fc8 <HAL_DMA_IRQHandler+0x194>
 8007f5a:	687b      	ldr	r3, [r7, #4]
 8007f5c:	681b      	ldr	r3, [r3, #0]
 8007f5e:	4a27      	ldr	r2, [pc, #156]	@ (8007ffc <HAL_DMA_IRQHandler+0x1c8>)
 8007f60:	4293      	cmp	r3, r2
 8007f62:	d031      	beq.n	8007fc8 <HAL_DMA_IRQHandler+0x194>
 8007f64:	687b      	ldr	r3, [r7, #4]
 8007f66:	681b      	ldr	r3, [r3, #0]
 8007f68:	4a25      	ldr	r2, [pc, #148]	@ (8008000 <HAL_DMA_IRQHandler+0x1cc>)
 8007f6a:	4293      	cmp	r3, r2
 8007f6c:	d02c      	beq.n	8007fc8 <HAL_DMA_IRQHandler+0x194>
 8007f6e:	687b      	ldr	r3, [r7, #4]
 8007f70:	681b      	ldr	r3, [r3, #0]
 8007f72:	4a24      	ldr	r2, [pc, #144]	@ (8008004 <HAL_DMA_IRQHandler+0x1d0>)
 8007f74:	4293      	cmp	r3, r2
 8007f76:	d027      	beq.n	8007fc8 <HAL_DMA_IRQHandler+0x194>
 8007f78:	687b      	ldr	r3, [r7, #4]
 8007f7a:	681b      	ldr	r3, [r3, #0]
 8007f7c:	4a22      	ldr	r2, [pc, #136]	@ (8008008 <HAL_DMA_IRQHandler+0x1d4>)
 8007f7e:	4293      	cmp	r3, r2
 8007f80:	d022      	beq.n	8007fc8 <HAL_DMA_IRQHandler+0x194>
 8007f82:	687b      	ldr	r3, [r7, #4]
 8007f84:	681b      	ldr	r3, [r3, #0]
 8007f86:	4a21      	ldr	r2, [pc, #132]	@ (800800c <HAL_DMA_IRQHandler+0x1d8>)
 8007f88:	4293      	cmp	r3, r2
 8007f8a:	d01d      	beq.n	8007fc8 <HAL_DMA_IRQHandler+0x194>
 8007f8c:	687b      	ldr	r3, [r7, #4]
 8007f8e:	681b      	ldr	r3, [r3, #0]
 8007f90:	4a1f      	ldr	r2, [pc, #124]	@ (8008010 <HAL_DMA_IRQHandler+0x1dc>)
 8007f92:	4293      	cmp	r3, r2
 8007f94:	d018      	beq.n	8007fc8 <HAL_DMA_IRQHandler+0x194>
 8007f96:	687b      	ldr	r3, [r7, #4]
 8007f98:	681b      	ldr	r3, [r3, #0]
 8007f9a:	4a1e      	ldr	r2, [pc, #120]	@ (8008014 <HAL_DMA_IRQHandler+0x1e0>)
 8007f9c:	4293      	cmp	r3, r2
 8007f9e:	d013      	beq.n	8007fc8 <HAL_DMA_IRQHandler+0x194>
 8007fa0:	687b      	ldr	r3, [r7, #4]
 8007fa2:	681b      	ldr	r3, [r3, #0]
 8007fa4:	4a1c      	ldr	r2, [pc, #112]	@ (8008018 <HAL_DMA_IRQHandler+0x1e4>)
 8007fa6:	4293      	cmp	r3, r2
 8007fa8:	d00e      	beq.n	8007fc8 <HAL_DMA_IRQHandler+0x194>
 8007faa:	687b      	ldr	r3, [r7, #4]
 8007fac:	681b      	ldr	r3, [r3, #0]
 8007fae:	4a1b      	ldr	r2, [pc, #108]	@ (800801c <HAL_DMA_IRQHandler+0x1e8>)
 8007fb0:	4293      	cmp	r3, r2
 8007fb2:	d009      	beq.n	8007fc8 <HAL_DMA_IRQHandler+0x194>
 8007fb4:	687b      	ldr	r3, [r7, #4]
 8007fb6:	681b      	ldr	r3, [r3, #0]
 8007fb8:	4a19      	ldr	r2, [pc, #100]	@ (8008020 <HAL_DMA_IRQHandler+0x1ec>)
 8007fba:	4293      	cmp	r3, r2
 8007fbc:	d004      	beq.n	8007fc8 <HAL_DMA_IRQHandler+0x194>
 8007fbe:	687b      	ldr	r3, [r7, #4]
 8007fc0:	681b      	ldr	r3, [r3, #0]
 8007fc2:	4a18      	ldr	r2, [pc, #96]	@ (8008024 <HAL_DMA_IRQHandler+0x1f0>)
 8007fc4:	4293      	cmp	r3, r2
 8007fc6:	d12f      	bne.n	8008028 <HAL_DMA_IRQHandler+0x1f4>
 8007fc8:	687b      	ldr	r3, [r7, #4]
 8007fca:	681b      	ldr	r3, [r3, #0]
 8007fcc:	681b      	ldr	r3, [r3, #0]
 8007fce:	f003 0304 	and.w	r3, r3, #4
 8007fd2:	2b00      	cmp	r3, #0
 8007fd4:	bf14      	ite	ne
 8007fd6:	2301      	movne	r3, #1
 8007fd8:	2300      	moveq	r3, #0
 8007fda:	b2db      	uxtb	r3, r3
 8007fdc:	e02e      	b.n	800803c <HAL_DMA_IRQHandler+0x208>
 8007fde:	bf00      	nop
 8007fe0:	24000000 	.word	0x24000000
 8007fe4:	1b4e81b5 	.word	0x1b4e81b5
 8007fe8:	40020010 	.word	0x40020010
 8007fec:	40020028 	.word	0x40020028
 8007ff0:	40020040 	.word	0x40020040
 8007ff4:	40020058 	.word	0x40020058
 8007ff8:	40020070 	.word	0x40020070
 8007ffc:	40020088 	.word	0x40020088
 8008000:	400200a0 	.word	0x400200a0
 8008004:	400200b8 	.word	0x400200b8
 8008008:	40020410 	.word	0x40020410
 800800c:	40020428 	.word	0x40020428
 8008010:	40020440 	.word	0x40020440
 8008014:	40020458 	.word	0x40020458
 8008018:	40020470 	.word	0x40020470
 800801c:	40020488 	.word	0x40020488
 8008020:	400204a0 	.word	0x400204a0
 8008024:	400204b8 	.word	0x400204b8
 8008028:	687b      	ldr	r3, [r7, #4]
 800802a:	681b      	ldr	r3, [r3, #0]
 800802c:	681b      	ldr	r3, [r3, #0]
 800802e:	f003 0308 	and.w	r3, r3, #8
 8008032:	2b00      	cmp	r3, #0
 8008034:	bf14      	ite	ne
 8008036:	2301      	movne	r3, #1
 8008038:	2300      	moveq	r3, #0
 800803a:	b2db      	uxtb	r3, r3
 800803c:	2b00      	cmp	r3, #0
 800803e:	d015      	beq.n	800806c <HAL_DMA_IRQHandler+0x238>
 8008040:	687b      	ldr	r3, [r7, #4]
 8008042:	681b      	ldr	r3, [r3, #0]
 8008044:	681a      	ldr	r2, [r3, #0]
 8008046:	687b      	ldr	r3, [r7, #4]
 8008048:	681b      	ldr	r3, [r3, #0]
 800804a:	f022 0204 	bic.w	r2, r2, #4
 800804e:	601a      	str	r2, [r3, #0]
 8008050:	687b      	ldr	r3, [r7, #4]
 8008052:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008054:	f003 031f 	and.w	r3, r3, #31
 8008058:	2208      	movs	r2, #8
 800805a:	409a      	lsls	r2, r3
 800805c:	6a3b      	ldr	r3, [r7, #32]
 800805e:	609a      	str	r2, [r3, #8]
 8008060:	687b      	ldr	r3, [r7, #4]
 8008062:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008064:	f043 0201 	orr.w	r2, r3, #1
 8008068:	687b      	ldr	r3, [r7, #4]
 800806a:	655a      	str	r2, [r3, #84]	@ 0x54
 800806c:	687b      	ldr	r3, [r7, #4]
 800806e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008070:	f003 031f 	and.w	r3, r3, #31
 8008074:	69ba      	ldr	r2, [r7, #24]
 8008076:	fa22 f303 	lsr.w	r3, r2, r3
 800807a:	f003 0301 	and.w	r3, r3, #1
 800807e:	2b00      	cmp	r3, #0
 8008080:	d06e      	beq.n	8008160 <HAL_DMA_IRQHandler+0x32c>
 8008082:	687b      	ldr	r3, [r7, #4]
 8008084:	681b      	ldr	r3, [r3, #0]
 8008086:	4a69      	ldr	r2, [pc, #420]	@ (800822c <HAL_DMA_IRQHandler+0x3f8>)
 8008088:	4293      	cmp	r3, r2
 800808a:	d04a      	beq.n	8008122 <HAL_DMA_IRQHandler+0x2ee>
 800808c:	687b      	ldr	r3, [r7, #4]
 800808e:	681b      	ldr	r3, [r3, #0]
 8008090:	4a67      	ldr	r2, [pc, #412]	@ (8008230 <HAL_DMA_IRQHandler+0x3fc>)
 8008092:	4293      	cmp	r3, r2
 8008094:	d045      	beq.n	8008122 <HAL_DMA_IRQHandler+0x2ee>
 8008096:	687b      	ldr	r3, [r7, #4]
 8008098:	681b      	ldr	r3, [r3, #0]
 800809a:	4a66      	ldr	r2, [pc, #408]	@ (8008234 <HAL_DMA_IRQHandler+0x400>)
 800809c:	4293      	cmp	r3, r2
 800809e:	d040      	beq.n	8008122 <HAL_DMA_IRQHandler+0x2ee>
 80080a0:	687b      	ldr	r3, [r7, #4]
 80080a2:	681b      	ldr	r3, [r3, #0]
 80080a4:	4a64      	ldr	r2, [pc, #400]	@ (8008238 <HAL_DMA_IRQHandler+0x404>)
 80080a6:	4293      	cmp	r3, r2
 80080a8:	d03b      	beq.n	8008122 <HAL_DMA_IRQHandler+0x2ee>
 80080aa:	687b      	ldr	r3, [r7, #4]
 80080ac:	681b      	ldr	r3, [r3, #0]
 80080ae:	4a63      	ldr	r2, [pc, #396]	@ (800823c <HAL_DMA_IRQHandler+0x408>)
 80080b0:	4293      	cmp	r3, r2
 80080b2:	d036      	beq.n	8008122 <HAL_DMA_IRQHandler+0x2ee>
 80080b4:	687b      	ldr	r3, [r7, #4]
 80080b6:	681b      	ldr	r3, [r3, #0]
 80080b8:	4a61      	ldr	r2, [pc, #388]	@ (8008240 <HAL_DMA_IRQHandler+0x40c>)
 80080ba:	4293      	cmp	r3, r2
 80080bc:	d031      	beq.n	8008122 <HAL_DMA_IRQHandler+0x2ee>
 80080be:	687b      	ldr	r3, [r7, #4]
 80080c0:	681b      	ldr	r3, [r3, #0]
 80080c2:	4a60      	ldr	r2, [pc, #384]	@ (8008244 <HAL_DMA_IRQHandler+0x410>)
 80080c4:	4293      	cmp	r3, r2
 80080c6:	d02c      	beq.n	8008122 <HAL_DMA_IRQHandler+0x2ee>
 80080c8:	687b      	ldr	r3, [r7, #4]
 80080ca:	681b      	ldr	r3, [r3, #0]
 80080cc:	4a5e      	ldr	r2, [pc, #376]	@ (8008248 <HAL_DMA_IRQHandler+0x414>)
 80080ce:	4293      	cmp	r3, r2
 80080d0:	d027      	beq.n	8008122 <HAL_DMA_IRQHandler+0x2ee>
 80080d2:	687b      	ldr	r3, [r7, #4]
 80080d4:	681b      	ldr	r3, [r3, #0]
 80080d6:	4a5d      	ldr	r2, [pc, #372]	@ (800824c <HAL_DMA_IRQHandler+0x418>)
 80080d8:	4293      	cmp	r3, r2
 80080da:	d022      	beq.n	8008122 <HAL_DMA_IRQHandler+0x2ee>
 80080dc:	687b      	ldr	r3, [r7, #4]
 80080de:	681b      	ldr	r3, [r3, #0]
 80080e0:	4a5b      	ldr	r2, [pc, #364]	@ (8008250 <HAL_DMA_IRQHandler+0x41c>)
 80080e2:	4293      	cmp	r3, r2
 80080e4:	d01d      	beq.n	8008122 <HAL_DMA_IRQHandler+0x2ee>
 80080e6:	687b      	ldr	r3, [r7, #4]
 80080e8:	681b      	ldr	r3, [r3, #0]
 80080ea:	4a5a      	ldr	r2, [pc, #360]	@ (8008254 <HAL_DMA_IRQHandler+0x420>)
 80080ec:	4293      	cmp	r3, r2
 80080ee:	d018      	beq.n	8008122 <HAL_DMA_IRQHandler+0x2ee>
 80080f0:	687b      	ldr	r3, [r7, #4]
 80080f2:	681b      	ldr	r3, [r3, #0]
 80080f4:	4a58      	ldr	r2, [pc, #352]	@ (8008258 <HAL_DMA_IRQHandler+0x424>)
 80080f6:	4293      	cmp	r3, r2
 80080f8:	d013      	beq.n	8008122 <HAL_DMA_IRQHandler+0x2ee>
 80080fa:	687b      	ldr	r3, [r7, #4]
 80080fc:	681b      	ldr	r3, [r3, #0]
 80080fe:	4a57      	ldr	r2, [pc, #348]	@ (800825c <HAL_DMA_IRQHandler+0x428>)
 8008100:	4293      	cmp	r3, r2
 8008102:	d00e      	beq.n	8008122 <HAL_DMA_IRQHandler+0x2ee>
 8008104:	687b      	ldr	r3, [r7, #4]
 8008106:	681b      	ldr	r3, [r3, #0]
 8008108:	4a55      	ldr	r2, [pc, #340]	@ (8008260 <HAL_DMA_IRQHandler+0x42c>)
 800810a:	4293      	cmp	r3, r2
 800810c:	d009      	beq.n	8008122 <HAL_DMA_IRQHandler+0x2ee>
 800810e:	687b      	ldr	r3, [r7, #4]
 8008110:	681b      	ldr	r3, [r3, #0]
 8008112:	4a54      	ldr	r2, [pc, #336]	@ (8008264 <HAL_DMA_IRQHandler+0x430>)
 8008114:	4293      	cmp	r3, r2
 8008116:	d004      	beq.n	8008122 <HAL_DMA_IRQHandler+0x2ee>
 8008118:	687b      	ldr	r3, [r7, #4]
 800811a:	681b      	ldr	r3, [r3, #0]
 800811c:	4a52      	ldr	r2, [pc, #328]	@ (8008268 <HAL_DMA_IRQHandler+0x434>)
 800811e:	4293      	cmp	r3, r2
 8008120:	d10a      	bne.n	8008138 <HAL_DMA_IRQHandler+0x304>
 8008122:	687b      	ldr	r3, [r7, #4]
 8008124:	681b      	ldr	r3, [r3, #0]
 8008126:	695b      	ldr	r3, [r3, #20]
 8008128:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800812c:	2b00      	cmp	r3, #0
 800812e:	bf14      	ite	ne
 8008130:	2301      	movne	r3, #1
 8008132:	2300      	moveq	r3, #0
 8008134:	b2db      	uxtb	r3, r3
 8008136:	e003      	b.n	8008140 <HAL_DMA_IRQHandler+0x30c>
 8008138:	687b      	ldr	r3, [r7, #4]
 800813a:	681b      	ldr	r3, [r3, #0]
 800813c:	681b      	ldr	r3, [r3, #0]
 800813e:	2300      	movs	r3, #0
 8008140:	2b00      	cmp	r3, #0
 8008142:	d00d      	beq.n	8008160 <HAL_DMA_IRQHandler+0x32c>
 8008144:	687b      	ldr	r3, [r7, #4]
 8008146:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008148:	f003 031f 	and.w	r3, r3, #31
 800814c:	2201      	movs	r2, #1
 800814e:	409a      	lsls	r2, r3
 8008150:	6a3b      	ldr	r3, [r7, #32]
 8008152:	609a      	str	r2, [r3, #8]
 8008154:	687b      	ldr	r3, [r7, #4]
 8008156:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008158:	f043 0202 	orr.w	r2, r3, #2
 800815c:	687b      	ldr	r3, [r7, #4]
 800815e:	655a      	str	r2, [r3, #84]	@ 0x54
 8008160:	687b      	ldr	r3, [r7, #4]
 8008162:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008164:	f003 031f 	and.w	r3, r3, #31
 8008168:	2204      	movs	r2, #4
 800816a:	409a      	lsls	r2, r3
 800816c:	69bb      	ldr	r3, [r7, #24]
 800816e:	4013      	ands	r3, r2
 8008170:	2b00      	cmp	r3, #0
 8008172:	f000 808f 	beq.w	8008294 <HAL_DMA_IRQHandler+0x460>
 8008176:	687b      	ldr	r3, [r7, #4]
 8008178:	681b      	ldr	r3, [r3, #0]
 800817a:	4a2c      	ldr	r2, [pc, #176]	@ (800822c <HAL_DMA_IRQHandler+0x3f8>)
 800817c:	4293      	cmp	r3, r2
 800817e:	d04a      	beq.n	8008216 <HAL_DMA_IRQHandler+0x3e2>
 8008180:	687b      	ldr	r3, [r7, #4]
 8008182:	681b      	ldr	r3, [r3, #0]
 8008184:	4a2a      	ldr	r2, [pc, #168]	@ (8008230 <HAL_DMA_IRQHandler+0x3fc>)
 8008186:	4293      	cmp	r3, r2
 8008188:	d045      	beq.n	8008216 <HAL_DMA_IRQHandler+0x3e2>
 800818a:	687b      	ldr	r3, [r7, #4]
 800818c:	681b      	ldr	r3, [r3, #0]
 800818e:	4a29      	ldr	r2, [pc, #164]	@ (8008234 <HAL_DMA_IRQHandler+0x400>)
 8008190:	4293      	cmp	r3, r2
 8008192:	d040      	beq.n	8008216 <HAL_DMA_IRQHandler+0x3e2>
 8008194:	687b      	ldr	r3, [r7, #4]
 8008196:	681b      	ldr	r3, [r3, #0]
 8008198:	4a27      	ldr	r2, [pc, #156]	@ (8008238 <HAL_DMA_IRQHandler+0x404>)
 800819a:	4293      	cmp	r3, r2
 800819c:	d03b      	beq.n	8008216 <HAL_DMA_IRQHandler+0x3e2>
 800819e:	687b      	ldr	r3, [r7, #4]
 80081a0:	681b      	ldr	r3, [r3, #0]
 80081a2:	4a26      	ldr	r2, [pc, #152]	@ (800823c <HAL_DMA_IRQHandler+0x408>)
 80081a4:	4293      	cmp	r3, r2
 80081a6:	d036      	beq.n	8008216 <HAL_DMA_IRQHandler+0x3e2>
 80081a8:	687b      	ldr	r3, [r7, #4]
 80081aa:	681b      	ldr	r3, [r3, #0]
 80081ac:	4a24      	ldr	r2, [pc, #144]	@ (8008240 <HAL_DMA_IRQHandler+0x40c>)
 80081ae:	4293      	cmp	r3, r2
 80081b0:	d031      	beq.n	8008216 <HAL_DMA_IRQHandler+0x3e2>
 80081b2:	687b      	ldr	r3, [r7, #4]
 80081b4:	681b      	ldr	r3, [r3, #0]
 80081b6:	4a23      	ldr	r2, [pc, #140]	@ (8008244 <HAL_DMA_IRQHandler+0x410>)
 80081b8:	4293      	cmp	r3, r2
 80081ba:	d02c      	beq.n	8008216 <HAL_DMA_IRQHandler+0x3e2>
 80081bc:	687b      	ldr	r3, [r7, #4]
 80081be:	681b      	ldr	r3, [r3, #0]
 80081c0:	4a21      	ldr	r2, [pc, #132]	@ (8008248 <HAL_DMA_IRQHandler+0x414>)
 80081c2:	4293      	cmp	r3, r2
 80081c4:	d027      	beq.n	8008216 <HAL_DMA_IRQHandler+0x3e2>
 80081c6:	687b      	ldr	r3, [r7, #4]
 80081c8:	681b      	ldr	r3, [r3, #0]
 80081ca:	4a20      	ldr	r2, [pc, #128]	@ (800824c <HAL_DMA_IRQHandler+0x418>)
 80081cc:	4293      	cmp	r3, r2
 80081ce:	d022      	beq.n	8008216 <HAL_DMA_IRQHandler+0x3e2>
 80081d0:	687b      	ldr	r3, [r7, #4]
 80081d2:	681b      	ldr	r3, [r3, #0]
 80081d4:	4a1e      	ldr	r2, [pc, #120]	@ (8008250 <HAL_DMA_IRQHandler+0x41c>)
 80081d6:	4293      	cmp	r3, r2
 80081d8:	d01d      	beq.n	8008216 <HAL_DMA_IRQHandler+0x3e2>
 80081da:	687b      	ldr	r3, [r7, #4]
 80081dc:	681b      	ldr	r3, [r3, #0]
 80081de:	4a1d      	ldr	r2, [pc, #116]	@ (8008254 <HAL_DMA_IRQHandler+0x420>)
 80081e0:	4293      	cmp	r3, r2
 80081e2:	d018      	beq.n	8008216 <HAL_DMA_IRQHandler+0x3e2>
 80081e4:	687b      	ldr	r3, [r7, #4]
 80081e6:	681b      	ldr	r3, [r3, #0]
 80081e8:	4a1b      	ldr	r2, [pc, #108]	@ (8008258 <HAL_DMA_IRQHandler+0x424>)
 80081ea:	4293      	cmp	r3, r2
 80081ec:	d013      	beq.n	8008216 <HAL_DMA_IRQHandler+0x3e2>
 80081ee:	687b      	ldr	r3, [r7, #4]
 80081f0:	681b      	ldr	r3, [r3, #0]
 80081f2:	4a1a      	ldr	r2, [pc, #104]	@ (800825c <HAL_DMA_IRQHandler+0x428>)
 80081f4:	4293      	cmp	r3, r2
 80081f6:	d00e      	beq.n	8008216 <HAL_DMA_IRQHandler+0x3e2>
 80081f8:	687b      	ldr	r3, [r7, #4]
 80081fa:	681b      	ldr	r3, [r3, #0]
 80081fc:	4a18      	ldr	r2, [pc, #96]	@ (8008260 <HAL_DMA_IRQHandler+0x42c>)
 80081fe:	4293      	cmp	r3, r2
 8008200:	d009      	beq.n	8008216 <HAL_DMA_IRQHandler+0x3e2>
 8008202:	687b      	ldr	r3, [r7, #4]
 8008204:	681b      	ldr	r3, [r3, #0]
 8008206:	4a17      	ldr	r2, [pc, #92]	@ (8008264 <HAL_DMA_IRQHandler+0x430>)
 8008208:	4293      	cmp	r3, r2
 800820a:	d004      	beq.n	8008216 <HAL_DMA_IRQHandler+0x3e2>
 800820c:	687b      	ldr	r3, [r7, #4]
 800820e:	681b      	ldr	r3, [r3, #0]
 8008210:	4a15      	ldr	r2, [pc, #84]	@ (8008268 <HAL_DMA_IRQHandler+0x434>)
 8008212:	4293      	cmp	r3, r2
 8008214:	d12a      	bne.n	800826c <HAL_DMA_IRQHandler+0x438>
 8008216:	687b      	ldr	r3, [r7, #4]
 8008218:	681b      	ldr	r3, [r3, #0]
 800821a:	681b      	ldr	r3, [r3, #0]
 800821c:	f003 0302 	and.w	r3, r3, #2
 8008220:	2b00      	cmp	r3, #0
 8008222:	bf14      	ite	ne
 8008224:	2301      	movne	r3, #1
 8008226:	2300      	moveq	r3, #0
 8008228:	b2db      	uxtb	r3, r3
 800822a:	e023      	b.n	8008274 <HAL_DMA_IRQHandler+0x440>
 800822c:	40020010 	.word	0x40020010
 8008230:	40020028 	.word	0x40020028
 8008234:	40020040 	.word	0x40020040
 8008238:	40020058 	.word	0x40020058
 800823c:	40020070 	.word	0x40020070
 8008240:	40020088 	.word	0x40020088
 8008244:	400200a0 	.word	0x400200a0
 8008248:	400200b8 	.word	0x400200b8
 800824c:	40020410 	.word	0x40020410
 8008250:	40020428 	.word	0x40020428
 8008254:	40020440 	.word	0x40020440
 8008258:	40020458 	.word	0x40020458
 800825c:	40020470 	.word	0x40020470
 8008260:	40020488 	.word	0x40020488
 8008264:	400204a0 	.word	0x400204a0
 8008268:	400204b8 	.word	0x400204b8
 800826c:	687b      	ldr	r3, [r7, #4]
 800826e:	681b      	ldr	r3, [r3, #0]
 8008270:	681b      	ldr	r3, [r3, #0]
 8008272:	2300      	movs	r3, #0
 8008274:	2b00      	cmp	r3, #0
 8008276:	d00d      	beq.n	8008294 <HAL_DMA_IRQHandler+0x460>
 8008278:	687b      	ldr	r3, [r7, #4]
 800827a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800827c:	f003 031f 	and.w	r3, r3, #31
 8008280:	2204      	movs	r2, #4
 8008282:	409a      	lsls	r2, r3
 8008284:	6a3b      	ldr	r3, [r7, #32]
 8008286:	609a      	str	r2, [r3, #8]
 8008288:	687b      	ldr	r3, [r7, #4]
 800828a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800828c:	f043 0204 	orr.w	r2, r3, #4
 8008290:	687b      	ldr	r3, [r7, #4]
 8008292:	655a      	str	r2, [r3, #84]	@ 0x54
 8008294:	687b      	ldr	r3, [r7, #4]
 8008296:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008298:	f003 031f 	and.w	r3, r3, #31
 800829c:	2210      	movs	r2, #16
 800829e:	409a      	lsls	r2, r3
 80082a0:	69bb      	ldr	r3, [r7, #24]
 80082a2:	4013      	ands	r3, r2
 80082a4:	2b00      	cmp	r3, #0
 80082a6:	f000 80a6 	beq.w	80083f6 <HAL_DMA_IRQHandler+0x5c2>
 80082aa:	687b      	ldr	r3, [r7, #4]
 80082ac:	681b      	ldr	r3, [r3, #0]
 80082ae:	4a85      	ldr	r2, [pc, #532]	@ (80084c4 <HAL_DMA_IRQHandler+0x690>)
 80082b0:	4293      	cmp	r3, r2
 80082b2:	d04a      	beq.n	800834a <HAL_DMA_IRQHandler+0x516>
 80082b4:	687b      	ldr	r3, [r7, #4]
 80082b6:	681b      	ldr	r3, [r3, #0]
 80082b8:	4a83      	ldr	r2, [pc, #524]	@ (80084c8 <HAL_DMA_IRQHandler+0x694>)
 80082ba:	4293      	cmp	r3, r2
 80082bc:	d045      	beq.n	800834a <HAL_DMA_IRQHandler+0x516>
 80082be:	687b      	ldr	r3, [r7, #4]
 80082c0:	681b      	ldr	r3, [r3, #0]
 80082c2:	4a82      	ldr	r2, [pc, #520]	@ (80084cc <HAL_DMA_IRQHandler+0x698>)
 80082c4:	4293      	cmp	r3, r2
 80082c6:	d040      	beq.n	800834a <HAL_DMA_IRQHandler+0x516>
 80082c8:	687b      	ldr	r3, [r7, #4]
 80082ca:	681b      	ldr	r3, [r3, #0]
 80082cc:	4a80      	ldr	r2, [pc, #512]	@ (80084d0 <HAL_DMA_IRQHandler+0x69c>)
 80082ce:	4293      	cmp	r3, r2
 80082d0:	d03b      	beq.n	800834a <HAL_DMA_IRQHandler+0x516>
 80082d2:	687b      	ldr	r3, [r7, #4]
 80082d4:	681b      	ldr	r3, [r3, #0]
 80082d6:	4a7f      	ldr	r2, [pc, #508]	@ (80084d4 <HAL_DMA_IRQHandler+0x6a0>)
 80082d8:	4293      	cmp	r3, r2
 80082da:	d036      	beq.n	800834a <HAL_DMA_IRQHandler+0x516>
 80082dc:	687b      	ldr	r3, [r7, #4]
 80082de:	681b      	ldr	r3, [r3, #0]
 80082e0:	4a7d      	ldr	r2, [pc, #500]	@ (80084d8 <HAL_DMA_IRQHandler+0x6a4>)
 80082e2:	4293      	cmp	r3, r2
 80082e4:	d031      	beq.n	800834a <HAL_DMA_IRQHandler+0x516>
 80082e6:	687b      	ldr	r3, [r7, #4]
 80082e8:	681b      	ldr	r3, [r3, #0]
 80082ea:	4a7c      	ldr	r2, [pc, #496]	@ (80084dc <HAL_DMA_IRQHandler+0x6a8>)
 80082ec:	4293      	cmp	r3, r2
 80082ee:	d02c      	beq.n	800834a <HAL_DMA_IRQHandler+0x516>
 80082f0:	687b      	ldr	r3, [r7, #4]
 80082f2:	681b      	ldr	r3, [r3, #0]
 80082f4:	4a7a      	ldr	r2, [pc, #488]	@ (80084e0 <HAL_DMA_IRQHandler+0x6ac>)
 80082f6:	4293      	cmp	r3, r2
 80082f8:	d027      	beq.n	800834a <HAL_DMA_IRQHandler+0x516>
 80082fa:	687b      	ldr	r3, [r7, #4]
 80082fc:	681b      	ldr	r3, [r3, #0]
 80082fe:	4a79      	ldr	r2, [pc, #484]	@ (80084e4 <HAL_DMA_IRQHandler+0x6b0>)
 8008300:	4293      	cmp	r3, r2
 8008302:	d022      	beq.n	800834a <HAL_DMA_IRQHandler+0x516>
 8008304:	687b      	ldr	r3, [r7, #4]
 8008306:	681b      	ldr	r3, [r3, #0]
 8008308:	4a77      	ldr	r2, [pc, #476]	@ (80084e8 <HAL_DMA_IRQHandler+0x6b4>)
 800830a:	4293      	cmp	r3, r2
 800830c:	d01d      	beq.n	800834a <HAL_DMA_IRQHandler+0x516>
 800830e:	687b      	ldr	r3, [r7, #4]
 8008310:	681b      	ldr	r3, [r3, #0]
 8008312:	4a76      	ldr	r2, [pc, #472]	@ (80084ec <HAL_DMA_IRQHandler+0x6b8>)
 8008314:	4293      	cmp	r3, r2
 8008316:	d018      	beq.n	800834a <HAL_DMA_IRQHandler+0x516>
 8008318:	687b      	ldr	r3, [r7, #4]
 800831a:	681b      	ldr	r3, [r3, #0]
 800831c:	4a74      	ldr	r2, [pc, #464]	@ (80084f0 <HAL_DMA_IRQHandler+0x6bc>)
 800831e:	4293      	cmp	r3, r2
 8008320:	d013      	beq.n	800834a <HAL_DMA_IRQHandler+0x516>
 8008322:	687b      	ldr	r3, [r7, #4]
 8008324:	681b      	ldr	r3, [r3, #0]
 8008326:	4a73      	ldr	r2, [pc, #460]	@ (80084f4 <HAL_DMA_IRQHandler+0x6c0>)
 8008328:	4293      	cmp	r3, r2
 800832a:	d00e      	beq.n	800834a <HAL_DMA_IRQHandler+0x516>
 800832c:	687b      	ldr	r3, [r7, #4]
 800832e:	681b      	ldr	r3, [r3, #0]
 8008330:	4a71      	ldr	r2, [pc, #452]	@ (80084f8 <HAL_DMA_IRQHandler+0x6c4>)
 8008332:	4293      	cmp	r3, r2
 8008334:	d009      	beq.n	800834a <HAL_DMA_IRQHandler+0x516>
 8008336:	687b      	ldr	r3, [r7, #4]
 8008338:	681b      	ldr	r3, [r3, #0]
 800833a:	4a70      	ldr	r2, [pc, #448]	@ (80084fc <HAL_DMA_IRQHandler+0x6c8>)
 800833c:	4293      	cmp	r3, r2
 800833e:	d004      	beq.n	800834a <HAL_DMA_IRQHandler+0x516>
 8008340:	687b      	ldr	r3, [r7, #4]
 8008342:	681b      	ldr	r3, [r3, #0]
 8008344:	4a6e      	ldr	r2, [pc, #440]	@ (8008500 <HAL_DMA_IRQHandler+0x6cc>)
 8008346:	4293      	cmp	r3, r2
 8008348:	d10a      	bne.n	8008360 <HAL_DMA_IRQHandler+0x52c>
 800834a:	687b      	ldr	r3, [r7, #4]
 800834c:	681b      	ldr	r3, [r3, #0]
 800834e:	681b      	ldr	r3, [r3, #0]
 8008350:	f003 0308 	and.w	r3, r3, #8
 8008354:	2b00      	cmp	r3, #0
 8008356:	bf14      	ite	ne
 8008358:	2301      	movne	r3, #1
 800835a:	2300      	moveq	r3, #0
 800835c:	b2db      	uxtb	r3, r3
 800835e:	e009      	b.n	8008374 <HAL_DMA_IRQHandler+0x540>
 8008360:	687b      	ldr	r3, [r7, #4]
 8008362:	681b      	ldr	r3, [r3, #0]
 8008364:	681b      	ldr	r3, [r3, #0]
 8008366:	f003 0304 	and.w	r3, r3, #4
 800836a:	2b00      	cmp	r3, #0
 800836c:	bf14      	ite	ne
 800836e:	2301      	movne	r3, #1
 8008370:	2300      	moveq	r3, #0
 8008372:	b2db      	uxtb	r3, r3
 8008374:	2b00      	cmp	r3, #0
 8008376:	d03e      	beq.n	80083f6 <HAL_DMA_IRQHandler+0x5c2>
 8008378:	687b      	ldr	r3, [r7, #4]
 800837a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800837c:	f003 031f 	and.w	r3, r3, #31
 8008380:	2210      	movs	r2, #16
 8008382:	409a      	lsls	r2, r3
 8008384:	6a3b      	ldr	r3, [r7, #32]
 8008386:	609a      	str	r2, [r3, #8]
 8008388:	687b      	ldr	r3, [r7, #4]
 800838a:	681b      	ldr	r3, [r3, #0]
 800838c:	681b      	ldr	r3, [r3, #0]
 800838e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8008392:	2b00      	cmp	r3, #0
 8008394:	d018      	beq.n	80083c8 <HAL_DMA_IRQHandler+0x594>
 8008396:	687b      	ldr	r3, [r7, #4]
 8008398:	681b      	ldr	r3, [r3, #0]
 800839a:	681b      	ldr	r3, [r3, #0]
 800839c:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80083a0:	2b00      	cmp	r3, #0
 80083a2:	d108      	bne.n	80083b6 <HAL_DMA_IRQHandler+0x582>
 80083a4:	687b      	ldr	r3, [r7, #4]
 80083a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80083a8:	2b00      	cmp	r3, #0
 80083aa:	d024      	beq.n	80083f6 <HAL_DMA_IRQHandler+0x5c2>
 80083ac:	687b      	ldr	r3, [r7, #4]
 80083ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80083b0:	6878      	ldr	r0, [r7, #4]
 80083b2:	4798      	blx	r3
 80083b4:	e01f      	b.n	80083f6 <HAL_DMA_IRQHandler+0x5c2>
 80083b6:	687b      	ldr	r3, [r7, #4]
 80083b8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80083ba:	2b00      	cmp	r3, #0
 80083bc:	d01b      	beq.n	80083f6 <HAL_DMA_IRQHandler+0x5c2>
 80083be:	687b      	ldr	r3, [r7, #4]
 80083c0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80083c2:	6878      	ldr	r0, [r7, #4]
 80083c4:	4798      	blx	r3
 80083c6:	e016      	b.n	80083f6 <HAL_DMA_IRQHandler+0x5c2>
 80083c8:	687b      	ldr	r3, [r7, #4]
 80083ca:	681b      	ldr	r3, [r3, #0]
 80083cc:	681b      	ldr	r3, [r3, #0]
 80083ce:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80083d2:	2b00      	cmp	r3, #0
 80083d4:	d107      	bne.n	80083e6 <HAL_DMA_IRQHandler+0x5b2>
 80083d6:	687b      	ldr	r3, [r7, #4]
 80083d8:	681b      	ldr	r3, [r3, #0]
 80083da:	681a      	ldr	r2, [r3, #0]
 80083dc:	687b      	ldr	r3, [r7, #4]
 80083de:	681b      	ldr	r3, [r3, #0]
 80083e0:	f022 0208 	bic.w	r2, r2, #8
 80083e4:	601a      	str	r2, [r3, #0]
 80083e6:	687b      	ldr	r3, [r7, #4]
 80083e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80083ea:	2b00      	cmp	r3, #0
 80083ec:	d003      	beq.n	80083f6 <HAL_DMA_IRQHandler+0x5c2>
 80083ee:	687b      	ldr	r3, [r7, #4]
 80083f0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80083f2:	6878      	ldr	r0, [r7, #4]
 80083f4:	4798      	blx	r3
 80083f6:	687b      	ldr	r3, [r7, #4]
 80083f8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80083fa:	f003 031f 	and.w	r3, r3, #31
 80083fe:	2220      	movs	r2, #32
 8008400:	409a      	lsls	r2, r3
 8008402:	69bb      	ldr	r3, [r7, #24]
 8008404:	4013      	ands	r3, r2
 8008406:	2b00      	cmp	r3, #0
 8008408:	f000 8110 	beq.w	800862c <HAL_DMA_IRQHandler+0x7f8>
 800840c:	687b      	ldr	r3, [r7, #4]
 800840e:	681b      	ldr	r3, [r3, #0]
 8008410:	4a2c      	ldr	r2, [pc, #176]	@ (80084c4 <HAL_DMA_IRQHandler+0x690>)
 8008412:	4293      	cmp	r3, r2
 8008414:	d04a      	beq.n	80084ac <HAL_DMA_IRQHandler+0x678>
 8008416:	687b      	ldr	r3, [r7, #4]
 8008418:	681b      	ldr	r3, [r3, #0]
 800841a:	4a2b      	ldr	r2, [pc, #172]	@ (80084c8 <HAL_DMA_IRQHandler+0x694>)
 800841c:	4293      	cmp	r3, r2
 800841e:	d045      	beq.n	80084ac <HAL_DMA_IRQHandler+0x678>
 8008420:	687b      	ldr	r3, [r7, #4]
 8008422:	681b      	ldr	r3, [r3, #0]
 8008424:	4a29      	ldr	r2, [pc, #164]	@ (80084cc <HAL_DMA_IRQHandler+0x698>)
 8008426:	4293      	cmp	r3, r2
 8008428:	d040      	beq.n	80084ac <HAL_DMA_IRQHandler+0x678>
 800842a:	687b      	ldr	r3, [r7, #4]
 800842c:	681b      	ldr	r3, [r3, #0]
 800842e:	4a28      	ldr	r2, [pc, #160]	@ (80084d0 <HAL_DMA_IRQHandler+0x69c>)
 8008430:	4293      	cmp	r3, r2
 8008432:	d03b      	beq.n	80084ac <HAL_DMA_IRQHandler+0x678>
 8008434:	687b      	ldr	r3, [r7, #4]
 8008436:	681b      	ldr	r3, [r3, #0]
 8008438:	4a26      	ldr	r2, [pc, #152]	@ (80084d4 <HAL_DMA_IRQHandler+0x6a0>)
 800843a:	4293      	cmp	r3, r2
 800843c:	d036      	beq.n	80084ac <HAL_DMA_IRQHandler+0x678>
 800843e:	687b      	ldr	r3, [r7, #4]
 8008440:	681b      	ldr	r3, [r3, #0]
 8008442:	4a25      	ldr	r2, [pc, #148]	@ (80084d8 <HAL_DMA_IRQHandler+0x6a4>)
 8008444:	4293      	cmp	r3, r2
 8008446:	d031      	beq.n	80084ac <HAL_DMA_IRQHandler+0x678>
 8008448:	687b      	ldr	r3, [r7, #4]
 800844a:	681b      	ldr	r3, [r3, #0]
 800844c:	4a23      	ldr	r2, [pc, #140]	@ (80084dc <HAL_DMA_IRQHandler+0x6a8>)
 800844e:	4293      	cmp	r3, r2
 8008450:	d02c      	beq.n	80084ac <HAL_DMA_IRQHandler+0x678>
 8008452:	687b      	ldr	r3, [r7, #4]
 8008454:	681b      	ldr	r3, [r3, #0]
 8008456:	4a22      	ldr	r2, [pc, #136]	@ (80084e0 <HAL_DMA_IRQHandler+0x6ac>)
 8008458:	4293      	cmp	r3, r2
 800845a:	d027      	beq.n	80084ac <HAL_DMA_IRQHandler+0x678>
 800845c:	687b      	ldr	r3, [r7, #4]
 800845e:	681b      	ldr	r3, [r3, #0]
 8008460:	4a20      	ldr	r2, [pc, #128]	@ (80084e4 <HAL_DMA_IRQHandler+0x6b0>)
 8008462:	4293      	cmp	r3, r2
 8008464:	d022      	beq.n	80084ac <HAL_DMA_IRQHandler+0x678>
 8008466:	687b      	ldr	r3, [r7, #4]
 8008468:	681b      	ldr	r3, [r3, #0]
 800846a:	4a1f      	ldr	r2, [pc, #124]	@ (80084e8 <HAL_DMA_IRQHandler+0x6b4>)
 800846c:	4293      	cmp	r3, r2
 800846e:	d01d      	beq.n	80084ac <HAL_DMA_IRQHandler+0x678>
 8008470:	687b      	ldr	r3, [r7, #4]
 8008472:	681b      	ldr	r3, [r3, #0]
 8008474:	4a1d      	ldr	r2, [pc, #116]	@ (80084ec <HAL_DMA_IRQHandler+0x6b8>)
 8008476:	4293      	cmp	r3, r2
 8008478:	d018      	beq.n	80084ac <HAL_DMA_IRQHandler+0x678>
 800847a:	687b      	ldr	r3, [r7, #4]
 800847c:	681b      	ldr	r3, [r3, #0]
 800847e:	4a1c      	ldr	r2, [pc, #112]	@ (80084f0 <HAL_DMA_IRQHandler+0x6bc>)
 8008480:	4293      	cmp	r3, r2
 8008482:	d013      	beq.n	80084ac <HAL_DMA_IRQHandler+0x678>
 8008484:	687b      	ldr	r3, [r7, #4]
 8008486:	681b      	ldr	r3, [r3, #0]
 8008488:	4a1a      	ldr	r2, [pc, #104]	@ (80084f4 <HAL_DMA_IRQHandler+0x6c0>)
 800848a:	4293      	cmp	r3, r2
 800848c:	d00e      	beq.n	80084ac <HAL_DMA_IRQHandler+0x678>
 800848e:	687b      	ldr	r3, [r7, #4]
 8008490:	681b      	ldr	r3, [r3, #0]
 8008492:	4a19      	ldr	r2, [pc, #100]	@ (80084f8 <HAL_DMA_IRQHandler+0x6c4>)
 8008494:	4293      	cmp	r3, r2
 8008496:	d009      	beq.n	80084ac <HAL_DMA_IRQHandler+0x678>
 8008498:	687b      	ldr	r3, [r7, #4]
 800849a:	681b      	ldr	r3, [r3, #0]
 800849c:	4a17      	ldr	r2, [pc, #92]	@ (80084fc <HAL_DMA_IRQHandler+0x6c8>)
 800849e:	4293      	cmp	r3, r2
 80084a0:	d004      	beq.n	80084ac <HAL_DMA_IRQHandler+0x678>
 80084a2:	687b      	ldr	r3, [r7, #4]
 80084a4:	681b      	ldr	r3, [r3, #0]
 80084a6:	4a16      	ldr	r2, [pc, #88]	@ (8008500 <HAL_DMA_IRQHandler+0x6cc>)
 80084a8:	4293      	cmp	r3, r2
 80084aa:	d12b      	bne.n	8008504 <HAL_DMA_IRQHandler+0x6d0>
 80084ac:	687b      	ldr	r3, [r7, #4]
 80084ae:	681b      	ldr	r3, [r3, #0]
 80084b0:	681b      	ldr	r3, [r3, #0]
 80084b2:	f003 0310 	and.w	r3, r3, #16
 80084b6:	2b00      	cmp	r3, #0
 80084b8:	bf14      	ite	ne
 80084ba:	2301      	movne	r3, #1
 80084bc:	2300      	moveq	r3, #0
 80084be:	b2db      	uxtb	r3, r3
 80084c0:	e02a      	b.n	8008518 <HAL_DMA_IRQHandler+0x6e4>
 80084c2:	bf00      	nop
 80084c4:	40020010 	.word	0x40020010
 80084c8:	40020028 	.word	0x40020028
 80084cc:	40020040 	.word	0x40020040
 80084d0:	40020058 	.word	0x40020058
 80084d4:	40020070 	.word	0x40020070
 80084d8:	40020088 	.word	0x40020088
 80084dc:	400200a0 	.word	0x400200a0
 80084e0:	400200b8 	.word	0x400200b8
 80084e4:	40020410 	.word	0x40020410
 80084e8:	40020428 	.word	0x40020428
 80084ec:	40020440 	.word	0x40020440
 80084f0:	40020458 	.word	0x40020458
 80084f4:	40020470 	.word	0x40020470
 80084f8:	40020488 	.word	0x40020488
 80084fc:	400204a0 	.word	0x400204a0
 8008500:	400204b8 	.word	0x400204b8
 8008504:	687b      	ldr	r3, [r7, #4]
 8008506:	681b      	ldr	r3, [r3, #0]
 8008508:	681b      	ldr	r3, [r3, #0]
 800850a:	f003 0302 	and.w	r3, r3, #2
 800850e:	2b00      	cmp	r3, #0
 8008510:	bf14      	ite	ne
 8008512:	2301      	movne	r3, #1
 8008514:	2300      	moveq	r3, #0
 8008516:	b2db      	uxtb	r3, r3
 8008518:	2b00      	cmp	r3, #0
 800851a:	f000 8087 	beq.w	800862c <HAL_DMA_IRQHandler+0x7f8>
 800851e:	687b      	ldr	r3, [r7, #4]
 8008520:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008522:	f003 031f 	and.w	r3, r3, #31
 8008526:	2220      	movs	r2, #32
 8008528:	409a      	lsls	r2, r3
 800852a:	6a3b      	ldr	r3, [r7, #32]
 800852c:	609a      	str	r2, [r3, #8]
 800852e:	687b      	ldr	r3, [r7, #4]
 8008530:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8008534:	b2db      	uxtb	r3, r3
 8008536:	2b04      	cmp	r3, #4
 8008538:	d139      	bne.n	80085ae <HAL_DMA_IRQHandler+0x77a>
 800853a:	687b      	ldr	r3, [r7, #4]
 800853c:	681b      	ldr	r3, [r3, #0]
 800853e:	681a      	ldr	r2, [r3, #0]
 8008540:	687b      	ldr	r3, [r7, #4]
 8008542:	681b      	ldr	r3, [r3, #0]
 8008544:	f022 0216 	bic.w	r2, r2, #22
 8008548:	601a      	str	r2, [r3, #0]
 800854a:	687b      	ldr	r3, [r7, #4]
 800854c:	681b      	ldr	r3, [r3, #0]
 800854e:	695a      	ldr	r2, [r3, #20]
 8008550:	687b      	ldr	r3, [r7, #4]
 8008552:	681b      	ldr	r3, [r3, #0]
 8008554:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8008558:	615a      	str	r2, [r3, #20]
 800855a:	687b      	ldr	r3, [r7, #4]
 800855c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800855e:	2b00      	cmp	r3, #0
 8008560:	d103      	bne.n	800856a <HAL_DMA_IRQHandler+0x736>
 8008562:	687b      	ldr	r3, [r7, #4]
 8008564:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8008566:	2b00      	cmp	r3, #0
 8008568:	d007      	beq.n	800857a <HAL_DMA_IRQHandler+0x746>
 800856a:	687b      	ldr	r3, [r7, #4]
 800856c:	681b      	ldr	r3, [r3, #0]
 800856e:	681a      	ldr	r2, [r3, #0]
 8008570:	687b      	ldr	r3, [r7, #4]
 8008572:	681b      	ldr	r3, [r3, #0]
 8008574:	f022 0208 	bic.w	r2, r2, #8
 8008578:	601a      	str	r2, [r3, #0]
 800857a:	687b      	ldr	r3, [r7, #4]
 800857c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800857e:	f003 031f 	and.w	r3, r3, #31
 8008582:	223f      	movs	r2, #63	@ 0x3f
 8008584:	409a      	lsls	r2, r3
 8008586:	6a3b      	ldr	r3, [r7, #32]
 8008588:	609a      	str	r2, [r3, #8]
 800858a:	687b      	ldr	r3, [r7, #4]
 800858c:	2201      	movs	r2, #1
 800858e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8008592:	687b      	ldr	r3, [r7, #4]
 8008594:	2200      	movs	r2, #0
 8008596:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800859a:	687b      	ldr	r3, [r7, #4]
 800859c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800859e:	2b00      	cmp	r3, #0
 80085a0:	f000 834a 	beq.w	8008c38 <HAL_DMA_IRQHandler+0xe04>
 80085a4:	687b      	ldr	r3, [r7, #4]
 80085a6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80085a8:	6878      	ldr	r0, [r7, #4]
 80085aa:	4798      	blx	r3
 80085ac:	e344      	b.n	8008c38 <HAL_DMA_IRQHandler+0xe04>
 80085ae:	687b      	ldr	r3, [r7, #4]
 80085b0:	681b      	ldr	r3, [r3, #0]
 80085b2:	681b      	ldr	r3, [r3, #0]
 80085b4:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80085b8:	2b00      	cmp	r3, #0
 80085ba:	d018      	beq.n	80085ee <HAL_DMA_IRQHandler+0x7ba>
 80085bc:	687b      	ldr	r3, [r7, #4]
 80085be:	681b      	ldr	r3, [r3, #0]
 80085c0:	681b      	ldr	r3, [r3, #0]
 80085c2:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80085c6:	2b00      	cmp	r3, #0
 80085c8:	d108      	bne.n	80085dc <HAL_DMA_IRQHandler+0x7a8>
 80085ca:	687b      	ldr	r3, [r7, #4]
 80085cc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80085ce:	2b00      	cmp	r3, #0
 80085d0:	d02c      	beq.n	800862c <HAL_DMA_IRQHandler+0x7f8>
 80085d2:	687b      	ldr	r3, [r7, #4]
 80085d4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80085d6:	6878      	ldr	r0, [r7, #4]
 80085d8:	4798      	blx	r3
 80085da:	e027      	b.n	800862c <HAL_DMA_IRQHandler+0x7f8>
 80085dc:	687b      	ldr	r3, [r7, #4]
 80085de:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80085e0:	2b00      	cmp	r3, #0
 80085e2:	d023      	beq.n	800862c <HAL_DMA_IRQHandler+0x7f8>
 80085e4:	687b      	ldr	r3, [r7, #4]
 80085e6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80085e8:	6878      	ldr	r0, [r7, #4]
 80085ea:	4798      	blx	r3
 80085ec:	e01e      	b.n	800862c <HAL_DMA_IRQHandler+0x7f8>
 80085ee:	687b      	ldr	r3, [r7, #4]
 80085f0:	681b      	ldr	r3, [r3, #0]
 80085f2:	681b      	ldr	r3, [r3, #0]
 80085f4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80085f8:	2b00      	cmp	r3, #0
 80085fa:	d10f      	bne.n	800861c <HAL_DMA_IRQHandler+0x7e8>
 80085fc:	687b      	ldr	r3, [r7, #4]
 80085fe:	681b      	ldr	r3, [r3, #0]
 8008600:	681a      	ldr	r2, [r3, #0]
 8008602:	687b      	ldr	r3, [r7, #4]
 8008604:	681b      	ldr	r3, [r3, #0]
 8008606:	f022 0210 	bic.w	r2, r2, #16
 800860a:	601a      	str	r2, [r3, #0]
 800860c:	687b      	ldr	r3, [r7, #4]
 800860e:	2201      	movs	r2, #1
 8008610:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8008614:	687b      	ldr	r3, [r7, #4]
 8008616:	2200      	movs	r2, #0
 8008618:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800861c:	687b      	ldr	r3, [r7, #4]
 800861e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008620:	2b00      	cmp	r3, #0
 8008622:	d003      	beq.n	800862c <HAL_DMA_IRQHandler+0x7f8>
 8008624:	687b      	ldr	r3, [r7, #4]
 8008626:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008628:	6878      	ldr	r0, [r7, #4]
 800862a:	4798      	blx	r3
 800862c:	687b      	ldr	r3, [r7, #4]
 800862e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008630:	2b00      	cmp	r3, #0
 8008632:	f000 8306 	beq.w	8008c42 <HAL_DMA_IRQHandler+0xe0e>
 8008636:	687b      	ldr	r3, [r7, #4]
 8008638:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800863a:	f003 0301 	and.w	r3, r3, #1
 800863e:	2b00      	cmp	r3, #0
 8008640:	f000 8088 	beq.w	8008754 <HAL_DMA_IRQHandler+0x920>
 8008644:	687b      	ldr	r3, [r7, #4]
 8008646:	2204      	movs	r2, #4
 8008648:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800864c:	687b      	ldr	r3, [r7, #4]
 800864e:	681b      	ldr	r3, [r3, #0]
 8008650:	4a7a      	ldr	r2, [pc, #488]	@ (800883c <HAL_DMA_IRQHandler+0xa08>)
 8008652:	4293      	cmp	r3, r2
 8008654:	d04a      	beq.n	80086ec <HAL_DMA_IRQHandler+0x8b8>
 8008656:	687b      	ldr	r3, [r7, #4]
 8008658:	681b      	ldr	r3, [r3, #0]
 800865a:	4a79      	ldr	r2, [pc, #484]	@ (8008840 <HAL_DMA_IRQHandler+0xa0c>)
 800865c:	4293      	cmp	r3, r2
 800865e:	d045      	beq.n	80086ec <HAL_DMA_IRQHandler+0x8b8>
 8008660:	687b      	ldr	r3, [r7, #4]
 8008662:	681b      	ldr	r3, [r3, #0]
 8008664:	4a77      	ldr	r2, [pc, #476]	@ (8008844 <HAL_DMA_IRQHandler+0xa10>)
 8008666:	4293      	cmp	r3, r2
 8008668:	d040      	beq.n	80086ec <HAL_DMA_IRQHandler+0x8b8>
 800866a:	687b      	ldr	r3, [r7, #4]
 800866c:	681b      	ldr	r3, [r3, #0]
 800866e:	4a76      	ldr	r2, [pc, #472]	@ (8008848 <HAL_DMA_IRQHandler+0xa14>)
 8008670:	4293      	cmp	r3, r2
 8008672:	d03b      	beq.n	80086ec <HAL_DMA_IRQHandler+0x8b8>
 8008674:	687b      	ldr	r3, [r7, #4]
 8008676:	681b      	ldr	r3, [r3, #0]
 8008678:	4a74      	ldr	r2, [pc, #464]	@ (800884c <HAL_DMA_IRQHandler+0xa18>)
 800867a:	4293      	cmp	r3, r2
 800867c:	d036      	beq.n	80086ec <HAL_DMA_IRQHandler+0x8b8>
 800867e:	687b      	ldr	r3, [r7, #4]
 8008680:	681b      	ldr	r3, [r3, #0]
 8008682:	4a73      	ldr	r2, [pc, #460]	@ (8008850 <HAL_DMA_IRQHandler+0xa1c>)
 8008684:	4293      	cmp	r3, r2
 8008686:	d031      	beq.n	80086ec <HAL_DMA_IRQHandler+0x8b8>
 8008688:	687b      	ldr	r3, [r7, #4]
 800868a:	681b      	ldr	r3, [r3, #0]
 800868c:	4a71      	ldr	r2, [pc, #452]	@ (8008854 <HAL_DMA_IRQHandler+0xa20>)
 800868e:	4293      	cmp	r3, r2
 8008690:	d02c      	beq.n	80086ec <HAL_DMA_IRQHandler+0x8b8>
 8008692:	687b      	ldr	r3, [r7, #4]
 8008694:	681b      	ldr	r3, [r3, #0]
 8008696:	4a70      	ldr	r2, [pc, #448]	@ (8008858 <HAL_DMA_IRQHandler+0xa24>)
 8008698:	4293      	cmp	r3, r2
 800869a:	d027      	beq.n	80086ec <HAL_DMA_IRQHandler+0x8b8>
 800869c:	687b      	ldr	r3, [r7, #4]
 800869e:	681b      	ldr	r3, [r3, #0]
 80086a0:	4a6e      	ldr	r2, [pc, #440]	@ (800885c <HAL_DMA_IRQHandler+0xa28>)
 80086a2:	4293      	cmp	r3, r2
 80086a4:	d022      	beq.n	80086ec <HAL_DMA_IRQHandler+0x8b8>
 80086a6:	687b      	ldr	r3, [r7, #4]
 80086a8:	681b      	ldr	r3, [r3, #0]
 80086aa:	4a6d      	ldr	r2, [pc, #436]	@ (8008860 <HAL_DMA_IRQHandler+0xa2c>)
 80086ac:	4293      	cmp	r3, r2
 80086ae:	d01d      	beq.n	80086ec <HAL_DMA_IRQHandler+0x8b8>
 80086b0:	687b      	ldr	r3, [r7, #4]
 80086b2:	681b      	ldr	r3, [r3, #0]
 80086b4:	4a6b      	ldr	r2, [pc, #428]	@ (8008864 <HAL_DMA_IRQHandler+0xa30>)
 80086b6:	4293      	cmp	r3, r2
 80086b8:	d018      	beq.n	80086ec <HAL_DMA_IRQHandler+0x8b8>
 80086ba:	687b      	ldr	r3, [r7, #4]
 80086bc:	681b      	ldr	r3, [r3, #0]
 80086be:	4a6a      	ldr	r2, [pc, #424]	@ (8008868 <HAL_DMA_IRQHandler+0xa34>)
 80086c0:	4293      	cmp	r3, r2
 80086c2:	d013      	beq.n	80086ec <HAL_DMA_IRQHandler+0x8b8>
 80086c4:	687b      	ldr	r3, [r7, #4]
 80086c6:	681b      	ldr	r3, [r3, #0]
 80086c8:	4a68      	ldr	r2, [pc, #416]	@ (800886c <HAL_DMA_IRQHandler+0xa38>)
 80086ca:	4293      	cmp	r3, r2
 80086cc:	d00e      	beq.n	80086ec <HAL_DMA_IRQHandler+0x8b8>
 80086ce:	687b      	ldr	r3, [r7, #4]
 80086d0:	681b      	ldr	r3, [r3, #0]
 80086d2:	4a67      	ldr	r2, [pc, #412]	@ (8008870 <HAL_DMA_IRQHandler+0xa3c>)
 80086d4:	4293      	cmp	r3, r2
 80086d6:	d009      	beq.n	80086ec <HAL_DMA_IRQHandler+0x8b8>
 80086d8:	687b      	ldr	r3, [r7, #4]
 80086da:	681b      	ldr	r3, [r3, #0]
 80086dc:	4a65      	ldr	r2, [pc, #404]	@ (8008874 <HAL_DMA_IRQHandler+0xa40>)
 80086de:	4293      	cmp	r3, r2
 80086e0:	d004      	beq.n	80086ec <HAL_DMA_IRQHandler+0x8b8>
 80086e2:	687b      	ldr	r3, [r7, #4]
 80086e4:	681b      	ldr	r3, [r3, #0]
 80086e6:	4a64      	ldr	r2, [pc, #400]	@ (8008878 <HAL_DMA_IRQHandler+0xa44>)
 80086e8:	4293      	cmp	r3, r2
 80086ea:	d108      	bne.n	80086fe <HAL_DMA_IRQHandler+0x8ca>
 80086ec:	687b      	ldr	r3, [r7, #4]
 80086ee:	681b      	ldr	r3, [r3, #0]
 80086f0:	681a      	ldr	r2, [r3, #0]
 80086f2:	687b      	ldr	r3, [r7, #4]
 80086f4:	681b      	ldr	r3, [r3, #0]
 80086f6:	f022 0201 	bic.w	r2, r2, #1
 80086fa:	601a      	str	r2, [r3, #0]
 80086fc:	e007      	b.n	800870e <HAL_DMA_IRQHandler+0x8da>
 80086fe:	687b      	ldr	r3, [r7, #4]
 8008700:	681b      	ldr	r3, [r3, #0]
 8008702:	681a      	ldr	r2, [r3, #0]
 8008704:	687b      	ldr	r3, [r7, #4]
 8008706:	681b      	ldr	r3, [r3, #0]
 8008708:	f022 0201 	bic.w	r2, r2, #1
 800870c:	601a      	str	r2, [r3, #0]
 800870e:	68fb      	ldr	r3, [r7, #12]
 8008710:	3301      	adds	r3, #1
 8008712:	60fb      	str	r3, [r7, #12]
 8008714:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8008716:	429a      	cmp	r2, r3
 8008718:	d307      	bcc.n	800872a <HAL_DMA_IRQHandler+0x8f6>
 800871a:	687b      	ldr	r3, [r7, #4]
 800871c:	681b      	ldr	r3, [r3, #0]
 800871e:	681b      	ldr	r3, [r3, #0]
 8008720:	f003 0301 	and.w	r3, r3, #1
 8008724:	2b00      	cmp	r3, #0
 8008726:	d1f2      	bne.n	800870e <HAL_DMA_IRQHandler+0x8da>
 8008728:	e000      	b.n	800872c <HAL_DMA_IRQHandler+0x8f8>
 800872a:	bf00      	nop
 800872c:	687b      	ldr	r3, [r7, #4]
 800872e:	681b      	ldr	r3, [r3, #0]
 8008730:	681b      	ldr	r3, [r3, #0]
 8008732:	f003 0301 	and.w	r3, r3, #1
 8008736:	2b00      	cmp	r3, #0
 8008738:	d004      	beq.n	8008744 <HAL_DMA_IRQHandler+0x910>
 800873a:	687b      	ldr	r3, [r7, #4]
 800873c:	2203      	movs	r2, #3
 800873e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8008742:	e003      	b.n	800874c <HAL_DMA_IRQHandler+0x918>
 8008744:	687b      	ldr	r3, [r7, #4]
 8008746:	2201      	movs	r2, #1
 8008748:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800874c:	687b      	ldr	r3, [r7, #4]
 800874e:	2200      	movs	r2, #0
 8008750:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8008754:	687b      	ldr	r3, [r7, #4]
 8008756:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008758:	2b00      	cmp	r3, #0
 800875a:	f000 8272 	beq.w	8008c42 <HAL_DMA_IRQHandler+0xe0e>
 800875e:	687b      	ldr	r3, [r7, #4]
 8008760:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008762:	6878      	ldr	r0, [r7, #4]
 8008764:	4798      	blx	r3
 8008766:	e26c      	b.n	8008c42 <HAL_DMA_IRQHandler+0xe0e>
 8008768:	687b      	ldr	r3, [r7, #4]
 800876a:	681b      	ldr	r3, [r3, #0]
 800876c:	4a43      	ldr	r2, [pc, #268]	@ (800887c <HAL_DMA_IRQHandler+0xa48>)
 800876e:	4293      	cmp	r3, r2
 8008770:	d022      	beq.n	80087b8 <HAL_DMA_IRQHandler+0x984>
 8008772:	687b      	ldr	r3, [r7, #4]
 8008774:	681b      	ldr	r3, [r3, #0]
 8008776:	4a42      	ldr	r2, [pc, #264]	@ (8008880 <HAL_DMA_IRQHandler+0xa4c>)
 8008778:	4293      	cmp	r3, r2
 800877a:	d01d      	beq.n	80087b8 <HAL_DMA_IRQHandler+0x984>
 800877c:	687b      	ldr	r3, [r7, #4]
 800877e:	681b      	ldr	r3, [r3, #0]
 8008780:	4a40      	ldr	r2, [pc, #256]	@ (8008884 <HAL_DMA_IRQHandler+0xa50>)
 8008782:	4293      	cmp	r3, r2
 8008784:	d018      	beq.n	80087b8 <HAL_DMA_IRQHandler+0x984>
 8008786:	687b      	ldr	r3, [r7, #4]
 8008788:	681b      	ldr	r3, [r3, #0]
 800878a:	4a3f      	ldr	r2, [pc, #252]	@ (8008888 <HAL_DMA_IRQHandler+0xa54>)
 800878c:	4293      	cmp	r3, r2
 800878e:	d013      	beq.n	80087b8 <HAL_DMA_IRQHandler+0x984>
 8008790:	687b      	ldr	r3, [r7, #4]
 8008792:	681b      	ldr	r3, [r3, #0]
 8008794:	4a3d      	ldr	r2, [pc, #244]	@ (800888c <HAL_DMA_IRQHandler+0xa58>)
 8008796:	4293      	cmp	r3, r2
 8008798:	d00e      	beq.n	80087b8 <HAL_DMA_IRQHandler+0x984>
 800879a:	687b      	ldr	r3, [r7, #4]
 800879c:	681b      	ldr	r3, [r3, #0]
 800879e:	4a3c      	ldr	r2, [pc, #240]	@ (8008890 <HAL_DMA_IRQHandler+0xa5c>)
 80087a0:	4293      	cmp	r3, r2
 80087a2:	d009      	beq.n	80087b8 <HAL_DMA_IRQHandler+0x984>
 80087a4:	687b      	ldr	r3, [r7, #4]
 80087a6:	681b      	ldr	r3, [r3, #0]
 80087a8:	4a3a      	ldr	r2, [pc, #232]	@ (8008894 <HAL_DMA_IRQHandler+0xa60>)
 80087aa:	4293      	cmp	r3, r2
 80087ac:	d004      	beq.n	80087b8 <HAL_DMA_IRQHandler+0x984>
 80087ae:	687b      	ldr	r3, [r7, #4]
 80087b0:	681b      	ldr	r3, [r3, #0]
 80087b2:	4a39      	ldr	r2, [pc, #228]	@ (8008898 <HAL_DMA_IRQHandler+0xa64>)
 80087b4:	4293      	cmp	r3, r2
 80087b6:	d101      	bne.n	80087bc <HAL_DMA_IRQHandler+0x988>
 80087b8:	2301      	movs	r3, #1
 80087ba:	e000      	b.n	80087be <HAL_DMA_IRQHandler+0x98a>
 80087bc:	2300      	movs	r3, #0
 80087be:	2b00      	cmp	r3, #0
 80087c0:	f000 823f 	beq.w	8008c42 <HAL_DMA_IRQHandler+0xe0e>
 80087c4:	687b      	ldr	r3, [r7, #4]
 80087c6:	681b      	ldr	r3, [r3, #0]
 80087c8:	681b      	ldr	r3, [r3, #0]
 80087ca:	613b      	str	r3, [r7, #16]
 80087cc:	687b      	ldr	r3, [r7, #4]
 80087ce:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80087d0:	f003 031f 	and.w	r3, r3, #31
 80087d4:	2204      	movs	r2, #4
 80087d6:	409a      	lsls	r2, r3
 80087d8:	697b      	ldr	r3, [r7, #20]
 80087da:	4013      	ands	r3, r2
 80087dc:	2b00      	cmp	r3, #0
 80087de:	f000 80cd 	beq.w	800897c <HAL_DMA_IRQHandler+0xb48>
 80087e2:	693b      	ldr	r3, [r7, #16]
 80087e4:	f003 0304 	and.w	r3, r3, #4
 80087e8:	2b00      	cmp	r3, #0
 80087ea:	f000 80c7 	beq.w	800897c <HAL_DMA_IRQHandler+0xb48>
 80087ee:	687b      	ldr	r3, [r7, #4]
 80087f0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80087f2:	f003 031f 	and.w	r3, r3, #31
 80087f6:	2204      	movs	r2, #4
 80087f8:	409a      	lsls	r2, r3
 80087fa:	69fb      	ldr	r3, [r7, #28]
 80087fc:	605a      	str	r2, [r3, #4]
 80087fe:	693b      	ldr	r3, [r7, #16]
 8008800:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8008804:	2b00      	cmp	r3, #0
 8008806:	d049      	beq.n	800889c <HAL_DMA_IRQHandler+0xa68>
 8008808:	693b      	ldr	r3, [r7, #16]
 800880a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800880e:	2b00      	cmp	r3, #0
 8008810:	d109      	bne.n	8008826 <HAL_DMA_IRQHandler+0x9f2>
 8008812:	687b      	ldr	r3, [r7, #4]
 8008814:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8008816:	2b00      	cmp	r3, #0
 8008818:	f000 8210 	beq.w	8008c3c <HAL_DMA_IRQHandler+0xe08>
 800881c:	687b      	ldr	r3, [r7, #4]
 800881e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8008820:	6878      	ldr	r0, [r7, #4]
 8008822:	4798      	blx	r3
 8008824:	e20a      	b.n	8008c3c <HAL_DMA_IRQHandler+0xe08>
 8008826:	687b      	ldr	r3, [r7, #4]
 8008828:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800882a:	2b00      	cmp	r3, #0
 800882c:	f000 8206 	beq.w	8008c3c <HAL_DMA_IRQHandler+0xe08>
 8008830:	687b      	ldr	r3, [r7, #4]
 8008832:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008834:	6878      	ldr	r0, [r7, #4]
 8008836:	4798      	blx	r3
 8008838:	e200      	b.n	8008c3c <HAL_DMA_IRQHandler+0xe08>
 800883a:	bf00      	nop
 800883c:	40020010 	.word	0x40020010
 8008840:	40020028 	.word	0x40020028
 8008844:	40020040 	.word	0x40020040
 8008848:	40020058 	.word	0x40020058
 800884c:	40020070 	.word	0x40020070
 8008850:	40020088 	.word	0x40020088
 8008854:	400200a0 	.word	0x400200a0
 8008858:	400200b8 	.word	0x400200b8
 800885c:	40020410 	.word	0x40020410
 8008860:	40020428 	.word	0x40020428
 8008864:	40020440 	.word	0x40020440
 8008868:	40020458 	.word	0x40020458
 800886c:	40020470 	.word	0x40020470
 8008870:	40020488 	.word	0x40020488
 8008874:	400204a0 	.word	0x400204a0
 8008878:	400204b8 	.word	0x400204b8
 800887c:	58025408 	.word	0x58025408
 8008880:	5802541c 	.word	0x5802541c
 8008884:	58025430 	.word	0x58025430
 8008888:	58025444 	.word	0x58025444
 800888c:	58025458 	.word	0x58025458
 8008890:	5802546c 	.word	0x5802546c
 8008894:	58025480 	.word	0x58025480
 8008898:	58025494 	.word	0x58025494
 800889c:	693b      	ldr	r3, [r7, #16]
 800889e:	f003 0320 	and.w	r3, r3, #32
 80088a2:	2b00      	cmp	r3, #0
 80088a4:	d160      	bne.n	8008968 <HAL_DMA_IRQHandler+0xb34>
 80088a6:	687b      	ldr	r3, [r7, #4]
 80088a8:	681b      	ldr	r3, [r3, #0]
 80088aa:	4a7f      	ldr	r2, [pc, #508]	@ (8008aa8 <HAL_DMA_IRQHandler+0xc74>)
 80088ac:	4293      	cmp	r3, r2
 80088ae:	d04a      	beq.n	8008946 <HAL_DMA_IRQHandler+0xb12>
 80088b0:	687b      	ldr	r3, [r7, #4]
 80088b2:	681b      	ldr	r3, [r3, #0]
 80088b4:	4a7d      	ldr	r2, [pc, #500]	@ (8008aac <HAL_DMA_IRQHandler+0xc78>)
 80088b6:	4293      	cmp	r3, r2
 80088b8:	d045      	beq.n	8008946 <HAL_DMA_IRQHandler+0xb12>
 80088ba:	687b      	ldr	r3, [r7, #4]
 80088bc:	681b      	ldr	r3, [r3, #0]
 80088be:	4a7c      	ldr	r2, [pc, #496]	@ (8008ab0 <HAL_DMA_IRQHandler+0xc7c>)
 80088c0:	4293      	cmp	r3, r2
 80088c2:	d040      	beq.n	8008946 <HAL_DMA_IRQHandler+0xb12>
 80088c4:	687b      	ldr	r3, [r7, #4]
 80088c6:	681b      	ldr	r3, [r3, #0]
 80088c8:	4a7a      	ldr	r2, [pc, #488]	@ (8008ab4 <HAL_DMA_IRQHandler+0xc80>)
 80088ca:	4293      	cmp	r3, r2
 80088cc:	d03b      	beq.n	8008946 <HAL_DMA_IRQHandler+0xb12>
 80088ce:	687b      	ldr	r3, [r7, #4]
 80088d0:	681b      	ldr	r3, [r3, #0]
 80088d2:	4a79      	ldr	r2, [pc, #484]	@ (8008ab8 <HAL_DMA_IRQHandler+0xc84>)
 80088d4:	4293      	cmp	r3, r2
 80088d6:	d036      	beq.n	8008946 <HAL_DMA_IRQHandler+0xb12>
 80088d8:	687b      	ldr	r3, [r7, #4]
 80088da:	681b      	ldr	r3, [r3, #0]
 80088dc:	4a77      	ldr	r2, [pc, #476]	@ (8008abc <HAL_DMA_IRQHandler+0xc88>)
 80088de:	4293      	cmp	r3, r2
 80088e0:	d031      	beq.n	8008946 <HAL_DMA_IRQHandler+0xb12>
 80088e2:	687b      	ldr	r3, [r7, #4]
 80088e4:	681b      	ldr	r3, [r3, #0]
 80088e6:	4a76      	ldr	r2, [pc, #472]	@ (8008ac0 <HAL_DMA_IRQHandler+0xc8c>)
 80088e8:	4293      	cmp	r3, r2
 80088ea:	d02c      	beq.n	8008946 <HAL_DMA_IRQHandler+0xb12>
 80088ec:	687b      	ldr	r3, [r7, #4]
 80088ee:	681b      	ldr	r3, [r3, #0]
 80088f0:	4a74      	ldr	r2, [pc, #464]	@ (8008ac4 <HAL_DMA_IRQHandler+0xc90>)
 80088f2:	4293      	cmp	r3, r2
 80088f4:	d027      	beq.n	8008946 <HAL_DMA_IRQHandler+0xb12>
 80088f6:	687b      	ldr	r3, [r7, #4]
 80088f8:	681b      	ldr	r3, [r3, #0]
 80088fa:	4a73      	ldr	r2, [pc, #460]	@ (8008ac8 <HAL_DMA_IRQHandler+0xc94>)
 80088fc:	4293      	cmp	r3, r2
 80088fe:	d022      	beq.n	8008946 <HAL_DMA_IRQHandler+0xb12>
 8008900:	687b      	ldr	r3, [r7, #4]
 8008902:	681b      	ldr	r3, [r3, #0]
 8008904:	4a71      	ldr	r2, [pc, #452]	@ (8008acc <HAL_DMA_IRQHandler+0xc98>)
 8008906:	4293      	cmp	r3, r2
 8008908:	d01d      	beq.n	8008946 <HAL_DMA_IRQHandler+0xb12>
 800890a:	687b      	ldr	r3, [r7, #4]
 800890c:	681b      	ldr	r3, [r3, #0]
 800890e:	4a70      	ldr	r2, [pc, #448]	@ (8008ad0 <HAL_DMA_IRQHandler+0xc9c>)
 8008910:	4293      	cmp	r3, r2
 8008912:	d018      	beq.n	8008946 <HAL_DMA_IRQHandler+0xb12>
 8008914:	687b      	ldr	r3, [r7, #4]
 8008916:	681b      	ldr	r3, [r3, #0]
 8008918:	4a6e      	ldr	r2, [pc, #440]	@ (8008ad4 <HAL_DMA_IRQHandler+0xca0>)
 800891a:	4293      	cmp	r3, r2
 800891c:	d013      	beq.n	8008946 <HAL_DMA_IRQHandler+0xb12>
 800891e:	687b      	ldr	r3, [r7, #4]
 8008920:	681b      	ldr	r3, [r3, #0]
 8008922:	4a6d      	ldr	r2, [pc, #436]	@ (8008ad8 <HAL_DMA_IRQHandler+0xca4>)
 8008924:	4293      	cmp	r3, r2
 8008926:	d00e      	beq.n	8008946 <HAL_DMA_IRQHandler+0xb12>
 8008928:	687b      	ldr	r3, [r7, #4]
 800892a:	681b      	ldr	r3, [r3, #0]
 800892c:	4a6b      	ldr	r2, [pc, #428]	@ (8008adc <HAL_DMA_IRQHandler+0xca8>)
 800892e:	4293      	cmp	r3, r2
 8008930:	d009      	beq.n	8008946 <HAL_DMA_IRQHandler+0xb12>
 8008932:	687b      	ldr	r3, [r7, #4]
 8008934:	681b      	ldr	r3, [r3, #0]
 8008936:	4a6a      	ldr	r2, [pc, #424]	@ (8008ae0 <HAL_DMA_IRQHandler+0xcac>)
 8008938:	4293      	cmp	r3, r2
 800893a:	d004      	beq.n	8008946 <HAL_DMA_IRQHandler+0xb12>
 800893c:	687b      	ldr	r3, [r7, #4]
 800893e:	681b      	ldr	r3, [r3, #0]
 8008940:	4a68      	ldr	r2, [pc, #416]	@ (8008ae4 <HAL_DMA_IRQHandler+0xcb0>)
 8008942:	4293      	cmp	r3, r2
 8008944:	d108      	bne.n	8008958 <HAL_DMA_IRQHandler+0xb24>
 8008946:	687b      	ldr	r3, [r7, #4]
 8008948:	681b      	ldr	r3, [r3, #0]
 800894a:	681a      	ldr	r2, [r3, #0]
 800894c:	687b      	ldr	r3, [r7, #4]
 800894e:	681b      	ldr	r3, [r3, #0]
 8008950:	f022 0208 	bic.w	r2, r2, #8
 8008954:	601a      	str	r2, [r3, #0]
 8008956:	e007      	b.n	8008968 <HAL_DMA_IRQHandler+0xb34>
 8008958:	687b      	ldr	r3, [r7, #4]
 800895a:	681b      	ldr	r3, [r3, #0]
 800895c:	681a      	ldr	r2, [r3, #0]
 800895e:	687b      	ldr	r3, [r7, #4]
 8008960:	681b      	ldr	r3, [r3, #0]
 8008962:	f022 0204 	bic.w	r2, r2, #4
 8008966:	601a      	str	r2, [r3, #0]
 8008968:	687b      	ldr	r3, [r7, #4]
 800896a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800896c:	2b00      	cmp	r3, #0
 800896e:	f000 8165 	beq.w	8008c3c <HAL_DMA_IRQHandler+0xe08>
 8008972:	687b      	ldr	r3, [r7, #4]
 8008974:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008976:	6878      	ldr	r0, [r7, #4]
 8008978:	4798      	blx	r3
 800897a:	e15f      	b.n	8008c3c <HAL_DMA_IRQHandler+0xe08>
 800897c:	687b      	ldr	r3, [r7, #4]
 800897e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008980:	f003 031f 	and.w	r3, r3, #31
 8008984:	2202      	movs	r2, #2
 8008986:	409a      	lsls	r2, r3
 8008988:	697b      	ldr	r3, [r7, #20]
 800898a:	4013      	ands	r3, r2
 800898c:	2b00      	cmp	r3, #0
 800898e:	f000 80c5 	beq.w	8008b1c <HAL_DMA_IRQHandler+0xce8>
 8008992:	693b      	ldr	r3, [r7, #16]
 8008994:	f003 0302 	and.w	r3, r3, #2
 8008998:	2b00      	cmp	r3, #0
 800899a:	f000 80bf 	beq.w	8008b1c <HAL_DMA_IRQHandler+0xce8>
 800899e:	687b      	ldr	r3, [r7, #4]
 80089a0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80089a2:	f003 031f 	and.w	r3, r3, #31
 80089a6:	2202      	movs	r2, #2
 80089a8:	409a      	lsls	r2, r3
 80089aa:	69fb      	ldr	r3, [r7, #28]
 80089ac:	605a      	str	r2, [r3, #4]
 80089ae:	693b      	ldr	r3, [r7, #16]
 80089b0:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80089b4:	2b00      	cmp	r3, #0
 80089b6:	d018      	beq.n	80089ea <HAL_DMA_IRQHandler+0xbb6>
 80089b8:	693b      	ldr	r3, [r7, #16]
 80089ba:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80089be:	2b00      	cmp	r3, #0
 80089c0:	d109      	bne.n	80089d6 <HAL_DMA_IRQHandler+0xba2>
 80089c2:	687b      	ldr	r3, [r7, #4]
 80089c4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80089c6:	2b00      	cmp	r3, #0
 80089c8:	f000 813a 	beq.w	8008c40 <HAL_DMA_IRQHandler+0xe0c>
 80089cc:	687b      	ldr	r3, [r7, #4]
 80089ce:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80089d0:	6878      	ldr	r0, [r7, #4]
 80089d2:	4798      	blx	r3
 80089d4:	e134      	b.n	8008c40 <HAL_DMA_IRQHandler+0xe0c>
 80089d6:	687b      	ldr	r3, [r7, #4]
 80089d8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80089da:	2b00      	cmp	r3, #0
 80089dc:	f000 8130 	beq.w	8008c40 <HAL_DMA_IRQHandler+0xe0c>
 80089e0:	687b      	ldr	r3, [r7, #4]
 80089e2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80089e4:	6878      	ldr	r0, [r7, #4]
 80089e6:	4798      	blx	r3
 80089e8:	e12a      	b.n	8008c40 <HAL_DMA_IRQHandler+0xe0c>
 80089ea:	693b      	ldr	r3, [r7, #16]
 80089ec:	f003 0320 	and.w	r3, r3, #32
 80089f0:	2b00      	cmp	r3, #0
 80089f2:	f040 8089 	bne.w	8008b08 <HAL_DMA_IRQHandler+0xcd4>
 80089f6:	687b      	ldr	r3, [r7, #4]
 80089f8:	681b      	ldr	r3, [r3, #0]
 80089fa:	4a2b      	ldr	r2, [pc, #172]	@ (8008aa8 <HAL_DMA_IRQHandler+0xc74>)
 80089fc:	4293      	cmp	r3, r2
 80089fe:	d04a      	beq.n	8008a96 <HAL_DMA_IRQHandler+0xc62>
 8008a00:	687b      	ldr	r3, [r7, #4]
 8008a02:	681b      	ldr	r3, [r3, #0]
 8008a04:	4a29      	ldr	r2, [pc, #164]	@ (8008aac <HAL_DMA_IRQHandler+0xc78>)
 8008a06:	4293      	cmp	r3, r2
 8008a08:	d045      	beq.n	8008a96 <HAL_DMA_IRQHandler+0xc62>
 8008a0a:	687b      	ldr	r3, [r7, #4]
 8008a0c:	681b      	ldr	r3, [r3, #0]
 8008a0e:	4a28      	ldr	r2, [pc, #160]	@ (8008ab0 <HAL_DMA_IRQHandler+0xc7c>)
 8008a10:	4293      	cmp	r3, r2
 8008a12:	d040      	beq.n	8008a96 <HAL_DMA_IRQHandler+0xc62>
 8008a14:	687b      	ldr	r3, [r7, #4]
 8008a16:	681b      	ldr	r3, [r3, #0]
 8008a18:	4a26      	ldr	r2, [pc, #152]	@ (8008ab4 <HAL_DMA_IRQHandler+0xc80>)
 8008a1a:	4293      	cmp	r3, r2
 8008a1c:	d03b      	beq.n	8008a96 <HAL_DMA_IRQHandler+0xc62>
 8008a1e:	687b      	ldr	r3, [r7, #4]
 8008a20:	681b      	ldr	r3, [r3, #0]
 8008a22:	4a25      	ldr	r2, [pc, #148]	@ (8008ab8 <HAL_DMA_IRQHandler+0xc84>)
 8008a24:	4293      	cmp	r3, r2
 8008a26:	d036      	beq.n	8008a96 <HAL_DMA_IRQHandler+0xc62>
 8008a28:	687b      	ldr	r3, [r7, #4]
 8008a2a:	681b      	ldr	r3, [r3, #0]
 8008a2c:	4a23      	ldr	r2, [pc, #140]	@ (8008abc <HAL_DMA_IRQHandler+0xc88>)
 8008a2e:	4293      	cmp	r3, r2
 8008a30:	d031      	beq.n	8008a96 <HAL_DMA_IRQHandler+0xc62>
 8008a32:	687b      	ldr	r3, [r7, #4]
 8008a34:	681b      	ldr	r3, [r3, #0]
 8008a36:	4a22      	ldr	r2, [pc, #136]	@ (8008ac0 <HAL_DMA_IRQHandler+0xc8c>)
 8008a38:	4293      	cmp	r3, r2
 8008a3a:	d02c      	beq.n	8008a96 <HAL_DMA_IRQHandler+0xc62>
 8008a3c:	687b      	ldr	r3, [r7, #4]
 8008a3e:	681b      	ldr	r3, [r3, #0]
 8008a40:	4a20      	ldr	r2, [pc, #128]	@ (8008ac4 <HAL_DMA_IRQHandler+0xc90>)
 8008a42:	4293      	cmp	r3, r2
 8008a44:	d027      	beq.n	8008a96 <HAL_DMA_IRQHandler+0xc62>
 8008a46:	687b      	ldr	r3, [r7, #4]
 8008a48:	681b      	ldr	r3, [r3, #0]
 8008a4a:	4a1f      	ldr	r2, [pc, #124]	@ (8008ac8 <HAL_DMA_IRQHandler+0xc94>)
 8008a4c:	4293      	cmp	r3, r2
 8008a4e:	d022      	beq.n	8008a96 <HAL_DMA_IRQHandler+0xc62>
 8008a50:	687b      	ldr	r3, [r7, #4]
 8008a52:	681b      	ldr	r3, [r3, #0]
 8008a54:	4a1d      	ldr	r2, [pc, #116]	@ (8008acc <HAL_DMA_IRQHandler+0xc98>)
 8008a56:	4293      	cmp	r3, r2
 8008a58:	d01d      	beq.n	8008a96 <HAL_DMA_IRQHandler+0xc62>
 8008a5a:	687b      	ldr	r3, [r7, #4]
 8008a5c:	681b      	ldr	r3, [r3, #0]
 8008a5e:	4a1c      	ldr	r2, [pc, #112]	@ (8008ad0 <HAL_DMA_IRQHandler+0xc9c>)
 8008a60:	4293      	cmp	r3, r2
 8008a62:	d018      	beq.n	8008a96 <HAL_DMA_IRQHandler+0xc62>
 8008a64:	687b      	ldr	r3, [r7, #4]
 8008a66:	681b      	ldr	r3, [r3, #0]
 8008a68:	4a1a      	ldr	r2, [pc, #104]	@ (8008ad4 <HAL_DMA_IRQHandler+0xca0>)
 8008a6a:	4293      	cmp	r3, r2
 8008a6c:	d013      	beq.n	8008a96 <HAL_DMA_IRQHandler+0xc62>
 8008a6e:	687b      	ldr	r3, [r7, #4]
 8008a70:	681b      	ldr	r3, [r3, #0]
 8008a72:	4a19      	ldr	r2, [pc, #100]	@ (8008ad8 <HAL_DMA_IRQHandler+0xca4>)
 8008a74:	4293      	cmp	r3, r2
 8008a76:	d00e      	beq.n	8008a96 <HAL_DMA_IRQHandler+0xc62>
 8008a78:	687b      	ldr	r3, [r7, #4]
 8008a7a:	681b      	ldr	r3, [r3, #0]
 8008a7c:	4a17      	ldr	r2, [pc, #92]	@ (8008adc <HAL_DMA_IRQHandler+0xca8>)
 8008a7e:	4293      	cmp	r3, r2
 8008a80:	d009      	beq.n	8008a96 <HAL_DMA_IRQHandler+0xc62>
 8008a82:	687b      	ldr	r3, [r7, #4]
 8008a84:	681b      	ldr	r3, [r3, #0]
 8008a86:	4a16      	ldr	r2, [pc, #88]	@ (8008ae0 <HAL_DMA_IRQHandler+0xcac>)
 8008a88:	4293      	cmp	r3, r2
 8008a8a:	d004      	beq.n	8008a96 <HAL_DMA_IRQHandler+0xc62>
 8008a8c:	687b      	ldr	r3, [r7, #4]
 8008a8e:	681b      	ldr	r3, [r3, #0]
 8008a90:	4a14      	ldr	r2, [pc, #80]	@ (8008ae4 <HAL_DMA_IRQHandler+0xcb0>)
 8008a92:	4293      	cmp	r3, r2
 8008a94:	d128      	bne.n	8008ae8 <HAL_DMA_IRQHandler+0xcb4>
 8008a96:	687b      	ldr	r3, [r7, #4]
 8008a98:	681b      	ldr	r3, [r3, #0]
 8008a9a:	681a      	ldr	r2, [r3, #0]
 8008a9c:	687b      	ldr	r3, [r7, #4]
 8008a9e:	681b      	ldr	r3, [r3, #0]
 8008aa0:	f022 0214 	bic.w	r2, r2, #20
 8008aa4:	601a      	str	r2, [r3, #0]
 8008aa6:	e027      	b.n	8008af8 <HAL_DMA_IRQHandler+0xcc4>
 8008aa8:	40020010 	.word	0x40020010
 8008aac:	40020028 	.word	0x40020028
 8008ab0:	40020040 	.word	0x40020040
 8008ab4:	40020058 	.word	0x40020058
 8008ab8:	40020070 	.word	0x40020070
 8008abc:	40020088 	.word	0x40020088
 8008ac0:	400200a0 	.word	0x400200a0
 8008ac4:	400200b8 	.word	0x400200b8
 8008ac8:	40020410 	.word	0x40020410
 8008acc:	40020428 	.word	0x40020428
 8008ad0:	40020440 	.word	0x40020440
 8008ad4:	40020458 	.word	0x40020458
 8008ad8:	40020470 	.word	0x40020470
 8008adc:	40020488 	.word	0x40020488
 8008ae0:	400204a0 	.word	0x400204a0
 8008ae4:	400204b8 	.word	0x400204b8
 8008ae8:	687b      	ldr	r3, [r7, #4]
 8008aea:	681b      	ldr	r3, [r3, #0]
 8008aec:	681a      	ldr	r2, [r3, #0]
 8008aee:	687b      	ldr	r3, [r7, #4]
 8008af0:	681b      	ldr	r3, [r3, #0]
 8008af2:	f022 020a 	bic.w	r2, r2, #10
 8008af6:	601a      	str	r2, [r3, #0]
 8008af8:	687b      	ldr	r3, [r7, #4]
 8008afa:	2201      	movs	r2, #1
 8008afc:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8008b00:	687b      	ldr	r3, [r7, #4]
 8008b02:	2200      	movs	r2, #0
 8008b04:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8008b08:	687b      	ldr	r3, [r7, #4]
 8008b0a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008b0c:	2b00      	cmp	r3, #0
 8008b0e:	f000 8097 	beq.w	8008c40 <HAL_DMA_IRQHandler+0xe0c>
 8008b12:	687b      	ldr	r3, [r7, #4]
 8008b14:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008b16:	6878      	ldr	r0, [r7, #4]
 8008b18:	4798      	blx	r3
 8008b1a:	e091      	b.n	8008c40 <HAL_DMA_IRQHandler+0xe0c>
 8008b1c:	687b      	ldr	r3, [r7, #4]
 8008b1e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008b20:	f003 031f 	and.w	r3, r3, #31
 8008b24:	2208      	movs	r2, #8
 8008b26:	409a      	lsls	r2, r3
 8008b28:	697b      	ldr	r3, [r7, #20]
 8008b2a:	4013      	ands	r3, r2
 8008b2c:	2b00      	cmp	r3, #0
 8008b2e:	f000 8088 	beq.w	8008c42 <HAL_DMA_IRQHandler+0xe0e>
 8008b32:	693b      	ldr	r3, [r7, #16]
 8008b34:	f003 0308 	and.w	r3, r3, #8
 8008b38:	2b00      	cmp	r3, #0
 8008b3a:	f000 8082 	beq.w	8008c42 <HAL_DMA_IRQHandler+0xe0e>
 8008b3e:	687b      	ldr	r3, [r7, #4]
 8008b40:	681b      	ldr	r3, [r3, #0]
 8008b42:	4a41      	ldr	r2, [pc, #260]	@ (8008c48 <HAL_DMA_IRQHandler+0xe14>)
 8008b44:	4293      	cmp	r3, r2
 8008b46:	d04a      	beq.n	8008bde <HAL_DMA_IRQHandler+0xdaa>
 8008b48:	687b      	ldr	r3, [r7, #4]
 8008b4a:	681b      	ldr	r3, [r3, #0]
 8008b4c:	4a3f      	ldr	r2, [pc, #252]	@ (8008c4c <HAL_DMA_IRQHandler+0xe18>)
 8008b4e:	4293      	cmp	r3, r2
 8008b50:	d045      	beq.n	8008bde <HAL_DMA_IRQHandler+0xdaa>
 8008b52:	687b      	ldr	r3, [r7, #4]
 8008b54:	681b      	ldr	r3, [r3, #0]
 8008b56:	4a3e      	ldr	r2, [pc, #248]	@ (8008c50 <HAL_DMA_IRQHandler+0xe1c>)
 8008b58:	4293      	cmp	r3, r2
 8008b5a:	d040      	beq.n	8008bde <HAL_DMA_IRQHandler+0xdaa>
 8008b5c:	687b      	ldr	r3, [r7, #4]
 8008b5e:	681b      	ldr	r3, [r3, #0]
 8008b60:	4a3c      	ldr	r2, [pc, #240]	@ (8008c54 <HAL_DMA_IRQHandler+0xe20>)
 8008b62:	4293      	cmp	r3, r2
 8008b64:	d03b      	beq.n	8008bde <HAL_DMA_IRQHandler+0xdaa>
 8008b66:	687b      	ldr	r3, [r7, #4]
 8008b68:	681b      	ldr	r3, [r3, #0]
 8008b6a:	4a3b      	ldr	r2, [pc, #236]	@ (8008c58 <HAL_DMA_IRQHandler+0xe24>)
 8008b6c:	4293      	cmp	r3, r2
 8008b6e:	d036      	beq.n	8008bde <HAL_DMA_IRQHandler+0xdaa>
 8008b70:	687b      	ldr	r3, [r7, #4]
 8008b72:	681b      	ldr	r3, [r3, #0]
 8008b74:	4a39      	ldr	r2, [pc, #228]	@ (8008c5c <HAL_DMA_IRQHandler+0xe28>)
 8008b76:	4293      	cmp	r3, r2
 8008b78:	d031      	beq.n	8008bde <HAL_DMA_IRQHandler+0xdaa>
 8008b7a:	687b      	ldr	r3, [r7, #4]
 8008b7c:	681b      	ldr	r3, [r3, #0]
 8008b7e:	4a38      	ldr	r2, [pc, #224]	@ (8008c60 <HAL_DMA_IRQHandler+0xe2c>)
 8008b80:	4293      	cmp	r3, r2
 8008b82:	d02c      	beq.n	8008bde <HAL_DMA_IRQHandler+0xdaa>
 8008b84:	687b      	ldr	r3, [r7, #4]
 8008b86:	681b      	ldr	r3, [r3, #0]
 8008b88:	4a36      	ldr	r2, [pc, #216]	@ (8008c64 <HAL_DMA_IRQHandler+0xe30>)
 8008b8a:	4293      	cmp	r3, r2
 8008b8c:	d027      	beq.n	8008bde <HAL_DMA_IRQHandler+0xdaa>
 8008b8e:	687b      	ldr	r3, [r7, #4]
 8008b90:	681b      	ldr	r3, [r3, #0]
 8008b92:	4a35      	ldr	r2, [pc, #212]	@ (8008c68 <HAL_DMA_IRQHandler+0xe34>)
 8008b94:	4293      	cmp	r3, r2
 8008b96:	d022      	beq.n	8008bde <HAL_DMA_IRQHandler+0xdaa>
 8008b98:	687b      	ldr	r3, [r7, #4]
 8008b9a:	681b      	ldr	r3, [r3, #0]
 8008b9c:	4a33      	ldr	r2, [pc, #204]	@ (8008c6c <HAL_DMA_IRQHandler+0xe38>)
 8008b9e:	4293      	cmp	r3, r2
 8008ba0:	d01d      	beq.n	8008bde <HAL_DMA_IRQHandler+0xdaa>
 8008ba2:	687b      	ldr	r3, [r7, #4]
 8008ba4:	681b      	ldr	r3, [r3, #0]
 8008ba6:	4a32      	ldr	r2, [pc, #200]	@ (8008c70 <HAL_DMA_IRQHandler+0xe3c>)
 8008ba8:	4293      	cmp	r3, r2
 8008baa:	d018      	beq.n	8008bde <HAL_DMA_IRQHandler+0xdaa>
 8008bac:	687b      	ldr	r3, [r7, #4]
 8008bae:	681b      	ldr	r3, [r3, #0]
 8008bb0:	4a30      	ldr	r2, [pc, #192]	@ (8008c74 <HAL_DMA_IRQHandler+0xe40>)
 8008bb2:	4293      	cmp	r3, r2
 8008bb4:	d013      	beq.n	8008bde <HAL_DMA_IRQHandler+0xdaa>
 8008bb6:	687b      	ldr	r3, [r7, #4]
 8008bb8:	681b      	ldr	r3, [r3, #0]
 8008bba:	4a2f      	ldr	r2, [pc, #188]	@ (8008c78 <HAL_DMA_IRQHandler+0xe44>)
 8008bbc:	4293      	cmp	r3, r2
 8008bbe:	d00e      	beq.n	8008bde <HAL_DMA_IRQHandler+0xdaa>
 8008bc0:	687b      	ldr	r3, [r7, #4]
 8008bc2:	681b      	ldr	r3, [r3, #0]
 8008bc4:	4a2d      	ldr	r2, [pc, #180]	@ (8008c7c <HAL_DMA_IRQHandler+0xe48>)
 8008bc6:	4293      	cmp	r3, r2
 8008bc8:	d009      	beq.n	8008bde <HAL_DMA_IRQHandler+0xdaa>
 8008bca:	687b      	ldr	r3, [r7, #4]
 8008bcc:	681b      	ldr	r3, [r3, #0]
 8008bce:	4a2c      	ldr	r2, [pc, #176]	@ (8008c80 <HAL_DMA_IRQHandler+0xe4c>)
 8008bd0:	4293      	cmp	r3, r2
 8008bd2:	d004      	beq.n	8008bde <HAL_DMA_IRQHandler+0xdaa>
 8008bd4:	687b      	ldr	r3, [r7, #4]
 8008bd6:	681b      	ldr	r3, [r3, #0]
 8008bd8:	4a2a      	ldr	r2, [pc, #168]	@ (8008c84 <HAL_DMA_IRQHandler+0xe50>)
 8008bda:	4293      	cmp	r3, r2
 8008bdc:	d108      	bne.n	8008bf0 <HAL_DMA_IRQHandler+0xdbc>
 8008bde:	687b      	ldr	r3, [r7, #4]
 8008be0:	681b      	ldr	r3, [r3, #0]
 8008be2:	681a      	ldr	r2, [r3, #0]
 8008be4:	687b      	ldr	r3, [r7, #4]
 8008be6:	681b      	ldr	r3, [r3, #0]
 8008be8:	f022 021c 	bic.w	r2, r2, #28
 8008bec:	601a      	str	r2, [r3, #0]
 8008bee:	e007      	b.n	8008c00 <HAL_DMA_IRQHandler+0xdcc>
 8008bf0:	687b      	ldr	r3, [r7, #4]
 8008bf2:	681b      	ldr	r3, [r3, #0]
 8008bf4:	681a      	ldr	r2, [r3, #0]
 8008bf6:	687b      	ldr	r3, [r7, #4]
 8008bf8:	681b      	ldr	r3, [r3, #0]
 8008bfa:	f022 020e 	bic.w	r2, r2, #14
 8008bfe:	601a      	str	r2, [r3, #0]
 8008c00:	687b      	ldr	r3, [r7, #4]
 8008c02:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008c04:	f003 031f 	and.w	r3, r3, #31
 8008c08:	2201      	movs	r2, #1
 8008c0a:	409a      	lsls	r2, r3
 8008c0c:	69fb      	ldr	r3, [r7, #28]
 8008c0e:	605a      	str	r2, [r3, #4]
 8008c10:	687b      	ldr	r3, [r7, #4]
 8008c12:	2201      	movs	r2, #1
 8008c14:	655a      	str	r2, [r3, #84]	@ 0x54
 8008c16:	687b      	ldr	r3, [r7, #4]
 8008c18:	2201      	movs	r2, #1
 8008c1a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8008c1e:	687b      	ldr	r3, [r7, #4]
 8008c20:	2200      	movs	r2, #0
 8008c22:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8008c26:	687b      	ldr	r3, [r7, #4]
 8008c28:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008c2a:	2b00      	cmp	r3, #0
 8008c2c:	d009      	beq.n	8008c42 <HAL_DMA_IRQHandler+0xe0e>
 8008c2e:	687b      	ldr	r3, [r7, #4]
 8008c30:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008c32:	6878      	ldr	r0, [r7, #4]
 8008c34:	4798      	blx	r3
 8008c36:	e004      	b.n	8008c42 <HAL_DMA_IRQHandler+0xe0e>
 8008c38:	bf00      	nop
 8008c3a:	e002      	b.n	8008c42 <HAL_DMA_IRQHandler+0xe0e>
 8008c3c:	bf00      	nop
 8008c3e:	e000      	b.n	8008c42 <HAL_DMA_IRQHandler+0xe0e>
 8008c40:	bf00      	nop
 8008c42:	3728      	adds	r7, #40	@ 0x28
 8008c44:	46bd      	mov	sp, r7
 8008c46:	bd80      	pop	{r7, pc}
 8008c48:	40020010 	.word	0x40020010
 8008c4c:	40020028 	.word	0x40020028
 8008c50:	40020040 	.word	0x40020040
 8008c54:	40020058 	.word	0x40020058
 8008c58:	40020070 	.word	0x40020070
 8008c5c:	40020088 	.word	0x40020088
 8008c60:	400200a0 	.word	0x400200a0
 8008c64:	400200b8 	.word	0x400200b8
 8008c68:	40020410 	.word	0x40020410
 8008c6c:	40020428 	.word	0x40020428
 8008c70:	40020440 	.word	0x40020440
 8008c74:	40020458 	.word	0x40020458
 8008c78:	40020470 	.word	0x40020470
 8008c7c:	40020488 	.word	0x40020488
 8008c80:	400204a0 	.word	0x400204a0
 8008c84:	400204b8 	.word	0x400204b8

08008c88 <DMA_SetConfig>:
 8008c88:	b480      	push	{r7}
 8008c8a:	b087      	sub	sp, #28
 8008c8c:	af00      	add	r7, sp, #0
 8008c8e:	60f8      	str	r0, [r7, #12]
 8008c90:	60b9      	str	r1, [r7, #8]
 8008c92:	607a      	str	r2, [r7, #4]
 8008c94:	603b      	str	r3, [r7, #0]
 8008c96:	68fb      	ldr	r3, [r7, #12]
 8008c98:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008c9a:	617b      	str	r3, [r7, #20]
 8008c9c:	68fb      	ldr	r3, [r7, #12]
 8008c9e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008ca0:	613b      	str	r3, [r7, #16]
 8008ca2:	68fb      	ldr	r3, [r7, #12]
 8008ca4:	681b      	ldr	r3, [r3, #0]
 8008ca6:	4a7f      	ldr	r2, [pc, #508]	@ (8008ea4 <DMA_SetConfig+0x21c>)
 8008ca8:	4293      	cmp	r3, r2
 8008caa:	d072      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008cac:	68fb      	ldr	r3, [r7, #12]
 8008cae:	681b      	ldr	r3, [r3, #0]
 8008cb0:	4a7d      	ldr	r2, [pc, #500]	@ (8008ea8 <DMA_SetConfig+0x220>)
 8008cb2:	4293      	cmp	r3, r2
 8008cb4:	d06d      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008cb6:	68fb      	ldr	r3, [r7, #12]
 8008cb8:	681b      	ldr	r3, [r3, #0]
 8008cba:	4a7c      	ldr	r2, [pc, #496]	@ (8008eac <DMA_SetConfig+0x224>)
 8008cbc:	4293      	cmp	r3, r2
 8008cbe:	d068      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008cc0:	68fb      	ldr	r3, [r7, #12]
 8008cc2:	681b      	ldr	r3, [r3, #0]
 8008cc4:	4a7a      	ldr	r2, [pc, #488]	@ (8008eb0 <DMA_SetConfig+0x228>)
 8008cc6:	4293      	cmp	r3, r2
 8008cc8:	d063      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008cca:	68fb      	ldr	r3, [r7, #12]
 8008ccc:	681b      	ldr	r3, [r3, #0]
 8008cce:	4a79      	ldr	r2, [pc, #484]	@ (8008eb4 <DMA_SetConfig+0x22c>)
 8008cd0:	4293      	cmp	r3, r2
 8008cd2:	d05e      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008cd4:	68fb      	ldr	r3, [r7, #12]
 8008cd6:	681b      	ldr	r3, [r3, #0]
 8008cd8:	4a77      	ldr	r2, [pc, #476]	@ (8008eb8 <DMA_SetConfig+0x230>)
 8008cda:	4293      	cmp	r3, r2
 8008cdc:	d059      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008cde:	68fb      	ldr	r3, [r7, #12]
 8008ce0:	681b      	ldr	r3, [r3, #0]
 8008ce2:	4a76      	ldr	r2, [pc, #472]	@ (8008ebc <DMA_SetConfig+0x234>)
 8008ce4:	4293      	cmp	r3, r2
 8008ce6:	d054      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008ce8:	68fb      	ldr	r3, [r7, #12]
 8008cea:	681b      	ldr	r3, [r3, #0]
 8008cec:	4a74      	ldr	r2, [pc, #464]	@ (8008ec0 <DMA_SetConfig+0x238>)
 8008cee:	4293      	cmp	r3, r2
 8008cf0:	d04f      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008cf2:	68fb      	ldr	r3, [r7, #12]
 8008cf4:	681b      	ldr	r3, [r3, #0]
 8008cf6:	4a73      	ldr	r2, [pc, #460]	@ (8008ec4 <DMA_SetConfig+0x23c>)
 8008cf8:	4293      	cmp	r3, r2
 8008cfa:	d04a      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008cfc:	68fb      	ldr	r3, [r7, #12]
 8008cfe:	681b      	ldr	r3, [r3, #0]
 8008d00:	4a71      	ldr	r2, [pc, #452]	@ (8008ec8 <DMA_SetConfig+0x240>)
 8008d02:	4293      	cmp	r3, r2
 8008d04:	d045      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008d06:	68fb      	ldr	r3, [r7, #12]
 8008d08:	681b      	ldr	r3, [r3, #0]
 8008d0a:	4a70      	ldr	r2, [pc, #448]	@ (8008ecc <DMA_SetConfig+0x244>)
 8008d0c:	4293      	cmp	r3, r2
 8008d0e:	d040      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008d10:	68fb      	ldr	r3, [r7, #12]
 8008d12:	681b      	ldr	r3, [r3, #0]
 8008d14:	4a6e      	ldr	r2, [pc, #440]	@ (8008ed0 <DMA_SetConfig+0x248>)
 8008d16:	4293      	cmp	r3, r2
 8008d18:	d03b      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008d1a:	68fb      	ldr	r3, [r7, #12]
 8008d1c:	681b      	ldr	r3, [r3, #0]
 8008d1e:	4a6d      	ldr	r2, [pc, #436]	@ (8008ed4 <DMA_SetConfig+0x24c>)
 8008d20:	4293      	cmp	r3, r2
 8008d22:	d036      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008d24:	68fb      	ldr	r3, [r7, #12]
 8008d26:	681b      	ldr	r3, [r3, #0]
 8008d28:	4a6b      	ldr	r2, [pc, #428]	@ (8008ed8 <DMA_SetConfig+0x250>)
 8008d2a:	4293      	cmp	r3, r2
 8008d2c:	d031      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008d2e:	68fb      	ldr	r3, [r7, #12]
 8008d30:	681b      	ldr	r3, [r3, #0]
 8008d32:	4a6a      	ldr	r2, [pc, #424]	@ (8008edc <DMA_SetConfig+0x254>)
 8008d34:	4293      	cmp	r3, r2
 8008d36:	d02c      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008d38:	68fb      	ldr	r3, [r7, #12]
 8008d3a:	681b      	ldr	r3, [r3, #0]
 8008d3c:	4a68      	ldr	r2, [pc, #416]	@ (8008ee0 <DMA_SetConfig+0x258>)
 8008d3e:	4293      	cmp	r3, r2
 8008d40:	d027      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008d42:	68fb      	ldr	r3, [r7, #12]
 8008d44:	681b      	ldr	r3, [r3, #0]
 8008d46:	4a67      	ldr	r2, [pc, #412]	@ (8008ee4 <DMA_SetConfig+0x25c>)
 8008d48:	4293      	cmp	r3, r2
 8008d4a:	d022      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008d4c:	68fb      	ldr	r3, [r7, #12]
 8008d4e:	681b      	ldr	r3, [r3, #0]
 8008d50:	4a65      	ldr	r2, [pc, #404]	@ (8008ee8 <DMA_SetConfig+0x260>)
 8008d52:	4293      	cmp	r3, r2
 8008d54:	d01d      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008d56:	68fb      	ldr	r3, [r7, #12]
 8008d58:	681b      	ldr	r3, [r3, #0]
 8008d5a:	4a64      	ldr	r2, [pc, #400]	@ (8008eec <DMA_SetConfig+0x264>)
 8008d5c:	4293      	cmp	r3, r2
 8008d5e:	d018      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008d60:	68fb      	ldr	r3, [r7, #12]
 8008d62:	681b      	ldr	r3, [r3, #0]
 8008d64:	4a62      	ldr	r2, [pc, #392]	@ (8008ef0 <DMA_SetConfig+0x268>)
 8008d66:	4293      	cmp	r3, r2
 8008d68:	d013      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008d6a:	68fb      	ldr	r3, [r7, #12]
 8008d6c:	681b      	ldr	r3, [r3, #0]
 8008d6e:	4a61      	ldr	r2, [pc, #388]	@ (8008ef4 <DMA_SetConfig+0x26c>)
 8008d70:	4293      	cmp	r3, r2
 8008d72:	d00e      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008d74:	68fb      	ldr	r3, [r7, #12]
 8008d76:	681b      	ldr	r3, [r3, #0]
 8008d78:	4a5f      	ldr	r2, [pc, #380]	@ (8008ef8 <DMA_SetConfig+0x270>)
 8008d7a:	4293      	cmp	r3, r2
 8008d7c:	d009      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008d7e:	68fb      	ldr	r3, [r7, #12]
 8008d80:	681b      	ldr	r3, [r3, #0]
 8008d82:	4a5e      	ldr	r2, [pc, #376]	@ (8008efc <DMA_SetConfig+0x274>)
 8008d84:	4293      	cmp	r3, r2
 8008d86:	d004      	beq.n	8008d92 <DMA_SetConfig+0x10a>
 8008d88:	68fb      	ldr	r3, [r7, #12]
 8008d8a:	681b      	ldr	r3, [r3, #0]
 8008d8c:	4a5c      	ldr	r2, [pc, #368]	@ (8008f00 <DMA_SetConfig+0x278>)
 8008d8e:	4293      	cmp	r3, r2
 8008d90:	d101      	bne.n	8008d96 <DMA_SetConfig+0x10e>
 8008d92:	2301      	movs	r3, #1
 8008d94:	e000      	b.n	8008d98 <DMA_SetConfig+0x110>
 8008d96:	2300      	movs	r3, #0
 8008d98:	2b00      	cmp	r3, #0
 8008d9a:	d00d      	beq.n	8008db8 <DMA_SetConfig+0x130>
 8008d9c:	68fb      	ldr	r3, [r7, #12]
 8008d9e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8008da0:	68fa      	ldr	r2, [r7, #12]
 8008da2:	6e92      	ldr	r2, [r2, #104]	@ 0x68
 8008da4:	605a      	str	r2, [r3, #4]
 8008da6:	68fb      	ldr	r3, [r7, #12]
 8008da8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008daa:	2b00      	cmp	r3, #0
 8008dac:	d004      	beq.n	8008db8 <DMA_SetConfig+0x130>
 8008dae:	68fb      	ldr	r3, [r7, #12]
 8008db0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008db2:	68fa      	ldr	r2, [r7, #12]
 8008db4:	6f52      	ldr	r2, [r2, #116]	@ 0x74
 8008db6:	605a      	str	r2, [r3, #4]
 8008db8:	68fb      	ldr	r3, [r7, #12]
 8008dba:	681b      	ldr	r3, [r3, #0]
 8008dbc:	4a39      	ldr	r2, [pc, #228]	@ (8008ea4 <DMA_SetConfig+0x21c>)
 8008dbe:	4293      	cmp	r3, r2
 8008dc0:	d04a      	beq.n	8008e58 <DMA_SetConfig+0x1d0>
 8008dc2:	68fb      	ldr	r3, [r7, #12]
 8008dc4:	681b      	ldr	r3, [r3, #0]
 8008dc6:	4a38      	ldr	r2, [pc, #224]	@ (8008ea8 <DMA_SetConfig+0x220>)
 8008dc8:	4293      	cmp	r3, r2
 8008dca:	d045      	beq.n	8008e58 <DMA_SetConfig+0x1d0>
 8008dcc:	68fb      	ldr	r3, [r7, #12]
 8008dce:	681b      	ldr	r3, [r3, #0]
 8008dd0:	4a36      	ldr	r2, [pc, #216]	@ (8008eac <DMA_SetConfig+0x224>)
 8008dd2:	4293      	cmp	r3, r2
 8008dd4:	d040      	beq.n	8008e58 <DMA_SetConfig+0x1d0>
 8008dd6:	68fb      	ldr	r3, [r7, #12]
 8008dd8:	681b      	ldr	r3, [r3, #0]
 8008dda:	4a35      	ldr	r2, [pc, #212]	@ (8008eb0 <DMA_SetConfig+0x228>)
 8008ddc:	4293      	cmp	r3, r2
 8008dde:	d03b      	beq.n	8008e58 <DMA_SetConfig+0x1d0>
 8008de0:	68fb      	ldr	r3, [r7, #12]
 8008de2:	681b      	ldr	r3, [r3, #0]
 8008de4:	4a33      	ldr	r2, [pc, #204]	@ (8008eb4 <DMA_SetConfig+0x22c>)
 8008de6:	4293      	cmp	r3, r2
 8008de8:	d036      	beq.n	8008e58 <DMA_SetConfig+0x1d0>
 8008dea:	68fb      	ldr	r3, [r7, #12]
 8008dec:	681b      	ldr	r3, [r3, #0]
 8008dee:	4a32      	ldr	r2, [pc, #200]	@ (8008eb8 <DMA_SetConfig+0x230>)
 8008df0:	4293      	cmp	r3, r2
 8008df2:	d031      	beq.n	8008e58 <DMA_SetConfig+0x1d0>
 8008df4:	68fb      	ldr	r3, [r7, #12]
 8008df6:	681b      	ldr	r3, [r3, #0]
 8008df8:	4a30      	ldr	r2, [pc, #192]	@ (8008ebc <DMA_SetConfig+0x234>)
 8008dfa:	4293      	cmp	r3, r2
 8008dfc:	d02c      	beq.n	8008e58 <DMA_SetConfig+0x1d0>
 8008dfe:	68fb      	ldr	r3, [r7, #12]
 8008e00:	681b      	ldr	r3, [r3, #0]
 8008e02:	4a2f      	ldr	r2, [pc, #188]	@ (8008ec0 <DMA_SetConfig+0x238>)
 8008e04:	4293      	cmp	r3, r2
 8008e06:	d027      	beq.n	8008e58 <DMA_SetConfig+0x1d0>
 8008e08:	68fb      	ldr	r3, [r7, #12]
 8008e0a:	681b      	ldr	r3, [r3, #0]
 8008e0c:	4a2d      	ldr	r2, [pc, #180]	@ (8008ec4 <DMA_SetConfig+0x23c>)
 8008e0e:	4293      	cmp	r3, r2
 8008e10:	d022      	beq.n	8008e58 <DMA_SetConfig+0x1d0>
 8008e12:	68fb      	ldr	r3, [r7, #12]
 8008e14:	681b      	ldr	r3, [r3, #0]
 8008e16:	4a2c      	ldr	r2, [pc, #176]	@ (8008ec8 <DMA_SetConfig+0x240>)
 8008e18:	4293      	cmp	r3, r2
 8008e1a:	d01d      	beq.n	8008e58 <DMA_SetConfig+0x1d0>
 8008e1c:	68fb      	ldr	r3, [r7, #12]
 8008e1e:	681b      	ldr	r3, [r3, #0]
 8008e20:	4a2a      	ldr	r2, [pc, #168]	@ (8008ecc <DMA_SetConfig+0x244>)
 8008e22:	4293      	cmp	r3, r2
 8008e24:	d018      	beq.n	8008e58 <DMA_SetConfig+0x1d0>
 8008e26:	68fb      	ldr	r3, [r7, #12]
 8008e28:	681b      	ldr	r3, [r3, #0]
 8008e2a:	4a29      	ldr	r2, [pc, #164]	@ (8008ed0 <DMA_SetConfig+0x248>)
 8008e2c:	4293      	cmp	r3, r2
 8008e2e:	d013      	beq.n	8008e58 <DMA_SetConfig+0x1d0>
 8008e30:	68fb      	ldr	r3, [r7, #12]
 8008e32:	681b      	ldr	r3, [r3, #0]
 8008e34:	4a27      	ldr	r2, [pc, #156]	@ (8008ed4 <DMA_SetConfig+0x24c>)
 8008e36:	4293      	cmp	r3, r2
 8008e38:	d00e      	beq.n	8008e58 <DMA_SetConfig+0x1d0>
 8008e3a:	68fb      	ldr	r3, [r7, #12]
 8008e3c:	681b      	ldr	r3, [r3, #0]
 8008e3e:	4a26      	ldr	r2, [pc, #152]	@ (8008ed8 <DMA_SetConfig+0x250>)
 8008e40:	4293      	cmp	r3, r2
 8008e42:	d009      	beq.n	8008e58 <DMA_SetConfig+0x1d0>
 8008e44:	68fb      	ldr	r3, [r7, #12]
 8008e46:	681b      	ldr	r3, [r3, #0]
 8008e48:	4a24      	ldr	r2, [pc, #144]	@ (8008edc <DMA_SetConfig+0x254>)
 8008e4a:	4293      	cmp	r3, r2
 8008e4c:	d004      	beq.n	8008e58 <DMA_SetConfig+0x1d0>
 8008e4e:	68fb      	ldr	r3, [r7, #12]
 8008e50:	681b      	ldr	r3, [r3, #0]
 8008e52:	4a23      	ldr	r2, [pc, #140]	@ (8008ee0 <DMA_SetConfig+0x258>)
 8008e54:	4293      	cmp	r3, r2
 8008e56:	d101      	bne.n	8008e5c <DMA_SetConfig+0x1d4>
 8008e58:	2301      	movs	r3, #1
 8008e5a:	e000      	b.n	8008e5e <DMA_SetConfig+0x1d6>
 8008e5c:	2300      	movs	r3, #0
 8008e5e:	2b00      	cmp	r3, #0
 8008e60:	d059      	beq.n	8008f16 <DMA_SetConfig+0x28e>
 8008e62:	68fb      	ldr	r3, [r7, #12]
 8008e64:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008e66:	f003 031f 	and.w	r3, r3, #31
 8008e6a:	223f      	movs	r2, #63	@ 0x3f
 8008e6c:	409a      	lsls	r2, r3
 8008e6e:	697b      	ldr	r3, [r7, #20]
 8008e70:	609a      	str	r2, [r3, #8]
 8008e72:	68fb      	ldr	r3, [r7, #12]
 8008e74:	681b      	ldr	r3, [r3, #0]
 8008e76:	681a      	ldr	r2, [r3, #0]
 8008e78:	68fb      	ldr	r3, [r7, #12]
 8008e7a:	681b      	ldr	r3, [r3, #0]
 8008e7c:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8008e80:	601a      	str	r2, [r3, #0]
 8008e82:	68fb      	ldr	r3, [r7, #12]
 8008e84:	681b      	ldr	r3, [r3, #0]
 8008e86:	683a      	ldr	r2, [r7, #0]
 8008e88:	605a      	str	r2, [r3, #4]
 8008e8a:	68fb      	ldr	r3, [r7, #12]
 8008e8c:	689b      	ldr	r3, [r3, #8]
 8008e8e:	2b40      	cmp	r3, #64	@ 0x40
 8008e90:	d138      	bne.n	8008f04 <DMA_SetConfig+0x27c>
 8008e92:	68fb      	ldr	r3, [r7, #12]
 8008e94:	681b      	ldr	r3, [r3, #0]
 8008e96:	687a      	ldr	r2, [r7, #4]
 8008e98:	609a      	str	r2, [r3, #8]
 8008e9a:	68fb      	ldr	r3, [r7, #12]
 8008e9c:	681b      	ldr	r3, [r3, #0]
 8008e9e:	68ba      	ldr	r2, [r7, #8]
 8008ea0:	60da      	str	r2, [r3, #12]
 8008ea2:	e086      	b.n	8008fb2 <DMA_SetConfig+0x32a>
 8008ea4:	40020010 	.word	0x40020010
 8008ea8:	40020028 	.word	0x40020028
 8008eac:	40020040 	.word	0x40020040
 8008eb0:	40020058 	.word	0x40020058
 8008eb4:	40020070 	.word	0x40020070
 8008eb8:	40020088 	.word	0x40020088
 8008ebc:	400200a0 	.word	0x400200a0
 8008ec0:	400200b8 	.word	0x400200b8
 8008ec4:	40020410 	.word	0x40020410
 8008ec8:	40020428 	.word	0x40020428
 8008ecc:	40020440 	.word	0x40020440
 8008ed0:	40020458 	.word	0x40020458
 8008ed4:	40020470 	.word	0x40020470
 8008ed8:	40020488 	.word	0x40020488
 8008edc:	400204a0 	.word	0x400204a0
 8008ee0:	400204b8 	.word	0x400204b8
 8008ee4:	58025408 	.word	0x58025408
 8008ee8:	5802541c 	.word	0x5802541c
 8008eec:	58025430 	.word	0x58025430
 8008ef0:	58025444 	.word	0x58025444
 8008ef4:	58025458 	.word	0x58025458
 8008ef8:	5802546c 	.word	0x5802546c
 8008efc:	58025480 	.word	0x58025480
 8008f00:	58025494 	.word	0x58025494
 8008f04:	68fb      	ldr	r3, [r7, #12]
 8008f06:	681b      	ldr	r3, [r3, #0]
 8008f08:	68ba      	ldr	r2, [r7, #8]
 8008f0a:	609a      	str	r2, [r3, #8]
 8008f0c:	68fb      	ldr	r3, [r7, #12]
 8008f0e:	681b      	ldr	r3, [r3, #0]
 8008f10:	687a      	ldr	r2, [r7, #4]
 8008f12:	60da      	str	r2, [r3, #12]
 8008f14:	e04d      	b.n	8008fb2 <DMA_SetConfig+0x32a>
 8008f16:	68fb      	ldr	r3, [r7, #12]
 8008f18:	681b      	ldr	r3, [r3, #0]
 8008f1a:	4a29      	ldr	r2, [pc, #164]	@ (8008fc0 <DMA_SetConfig+0x338>)
 8008f1c:	4293      	cmp	r3, r2
 8008f1e:	d022      	beq.n	8008f66 <DMA_SetConfig+0x2de>
 8008f20:	68fb      	ldr	r3, [r7, #12]
 8008f22:	681b      	ldr	r3, [r3, #0]
 8008f24:	4a27      	ldr	r2, [pc, #156]	@ (8008fc4 <DMA_SetConfig+0x33c>)
 8008f26:	4293      	cmp	r3, r2
 8008f28:	d01d      	beq.n	8008f66 <DMA_SetConfig+0x2de>
 8008f2a:	68fb      	ldr	r3, [r7, #12]
 8008f2c:	681b      	ldr	r3, [r3, #0]
 8008f2e:	4a26      	ldr	r2, [pc, #152]	@ (8008fc8 <DMA_SetConfig+0x340>)
 8008f30:	4293      	cmp	r3, r2
 8008f32:	d018      	beq.n	8008f66 <DMA_SetConfig+0x2de>
 8008f34:	68fb      	ldr	r3, [r7, #12]
 8008f36:	681b      	ldr	r3, [r3, #0]
 8008f38:	4a24      	ldr	r2, [pc, #144]	@ (8008fcc <DMA_SetConfig+0x344>)
 8008f3a:	4293      	cmp	r3, r2
 8008f3c:	d013      	beq.n	8008f66 <DMA_SetConfig+0x2de>
 8008f3e:	68fb      	ldr	r3, [r7, #12]
 8008f40:	681b      	ldr	r3, [r3, #0]
 8008f42:	4a23      	ldr	r2, [pc, #140]	@ (8008fd0 <DMA_SetConfig+0x348>)
 8008f44:	4293      	cmp	r3, r2
 8008f46:	d00e      	beq.n	8008f66 <DMA_SetConfig+0x2de>
 8008f48:	68fb      	ldr	r3, [r7, #12]
 8008f4a:	681b      	ldr	r3, [r3, #0]
 8008f4c:	4a21      	ldr	r2, [pc, #132]	@ (8008fd4 <DMA_SetConfig+0x34c>)
 8008f4e:	4293      	cmp	r3, r2
 8008f50:	d009      	beq.n	8008f66 <DMA_SetConfig+0x2de>
 8008f52:	68fb      	ldr	r3, [r7, #12]
 8008f54:	681b      	ldr	r3, [r3, #0]
 8008f56:	4a20      	ldr	r2, [pc, #128]	@ (8008fd8 <DMA_SetConfig+0x350>)
 8008f58:	4293      	cmp	r3, r2
 8008f5a:	d004      	beq.n	8008f66 <DMA_SetConfig+0x2de>
 8008f5c:	68fb      	ldr	r3, [r7, #12]
 8008f5e:	681b      	ldr	r3, [r3, #0]
 8008f60:	4a1e      	ldr	r2, [pc, #120]	@ (8008fdc <DMA_SetConfig+0x354>)
 8008f62:	4293      	cmp	r3, r2
 8008f64:	d101      	bne.n	8008f6a <DMA_SetConfig+0x2e2>
 8008f66:	2301      	movs	r3, #1
 8008f68:	e000      	b.n	8008f6c <DMA_SetConfig+0x2e4>
 8008f6a:	2300      	movs	r3, #0
 8008f6c:	2b00      	cmp	r3, #0
 8008f6e:	d020      	beq.n	8008fb2 <DMA_SetConfig+0x32a>
 8008f70:	68fb      	ldr	r3, [r7, #12]
 8008f72:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008f74:	f003 031f 	and.w	r3, r3, #31
 8008f78:	2201      	movs	r2, #1
 8008f7a:	409a      	lsls	r2, r3
 8008f7c:	693b      	ldr	r3, [r7, #16]
 8008f7e:	605a      	str	r2, [r3, #4]
 8008f80:	68fb      	ldr	r3, [r7, #12]
 8008f82:	681b      	ldr	r3, [r3, #0]
 8008f84:	683a      	ldr	r2, [r7, #0]
 8008f86:	605a      	str	r2, [r3, #4]
 8008f88:	68fb      	ldr	r3, [r7, #12]
 8008f8a:	689b      	ldr	r3, [r3, #8]
 8008f8c:	2b40      	cmp	r3, #64	@ 0x40
 8008f8e:	d108      	bne.n	8008fa2 <DMA_SetConfig+0x31a>
 8008f90:	68fb      	ldr	r3, [r7, #12]
 8008f92:	681b      	ldr	r3, [r3, #0]
 8008f94:	687a      	ldr	r2, [r7, #4]
 8008f96:	609a      	str	r2, [r3, #8]
 8008f98:	68fb      	ldr	r3, [r7, #12]
 8008f9a:	681b      	ldr	r3, [r3, #0]
 8008f9c:	68ba      	ldr	r2, [r7, #8]
 8008f9e:	60da      	str	r2, [r3, #12]
 8008fa0:	e007      	b.n	8008fb2 <DMA_SetConfig+0x32a>
 8008fa2:	68fb      	ldr	r3, [r7, #12]
 8008fa4:	681b      	ldr	r3, [r3, #0]
 8008fa6:	68ba      	ldr	r2, [r7, #8]
 8008fa8:	609a      	str	r2, [r3, #8]
 8008faa:	68fb      	ldr	r3, [r7, #12]
 8008fac:	681b      	ldr	r3, [r3, #0]
 8008fae:	687a      	ldr	r2, [r7, #4]
 8008fb0:	60da      	str	r2, [r3, #12]
 8008fb2:	bf00      	nop
 8008fb4:	371c      	adds	r7, #28
 8008fb6:	46bd      	mov	sp, r7
 8008fb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fbc:	4770      	bx	lr
 8008fbe:	bf00      	nop
 8008fc0:	58025408 	.word	0x58025408
 8008fc4:	5802541c 	.word	0x5802541c
 8008fc8:	58025430 	.word	0x58025430
 8008fcc:	58025444 	.word	0x58025444
 8008fd0:	58025458 	.word	0x58025458
 8008fd4:	5802546c 	.word	0x5802546c
 8008fd8:	58025480 	.word	0x58025480
 8008fdc:	58025494 	.word	0x58025494

08008fe0 <DMA_CalcBaseAndBitshift>:
 8008fe0:	b480      	push	{r7}
 8008fe2:	b085      	sub	sp, #20
 8008fe4:	af00      	add	r7, sp, #0
 8008fe6:	6078      	str	r0, [r7, #4]
 8008fe8:	687b      	ldr	r3, [r7, #4]
 8008fea:	681b      	ldr	r3, [r3, #0]
 8008fec:	4a42      	ldr	r2, [pc, #264]	@ (80090f8 <DMA_CalcBaseAndBitshift+0x118>)
 8008fee:	4293      	cmp	r3, r2
 8008ff0:	d04a      	beq.n	8009088 <DMA_CalcBaseAndBitshift+0xa8>
 8008ff2:	687b      	ldr	r3, [r7, #4]
 8008ff4:	681b      	ldr	r3, [r3, #0]
 8008ff6:	4a41      	ldr	r2, [pc, #260]	@ (80090fc <DMA_CalcBaseAndBitshift+0x11c>)
 8008ff8:	4293      	cmp	r3, r2
 8008ffa:	d045      	beq.n	8009088 <DMA_CalcBaseAndBitshift+0xa8>
 8008ffc:	687b      	ldr	r3, [r7, #4]
 8008ffe:	681b      	ldr	r3, [r3, #0]
 8009000:	4a3f      	ldr	r2, [pc, #252]	@ (8009100 <DMA_CalcBaseAndBitshift+0x120>)
 8009002:	4293      	cmp	r3, r2
 8009004:	d040      	beq.n	8009088 <DMA_CalcBaseAndBitshift+0xa8>
 8009006:	687b      	ldr	r3, [r7, #4]
 8009008:	681b      	ldr	r3, [r3, #0]
 800900a:	4a3e      	ldr	r2, [pc, #248]	@ (8009104 <DMA_CalcBaseAndBitshift+0x124>)
 800900c:	4293      	cmp	r3, r2
 800900e:	d03b      	beq.n	8009088 <DMA_CalcBaseAndBitshift+0xa8>
 8009010:	687b      	ldr	r3, [r7, #4]
 8009012:	681b      	ldr	r3, [r3, #0]
 8009014:	4a3c      	ldr	r2, [pc, #240]	@ (8009108 <DMA_CalcBaseAndBitshift+0x128>)
 8009016:	4293      	cmp	r3, r2
 8009018:	d036      	beq.n	8009088 <DMA_CalcBaseAndBitshift+0xa8>
 800901a:	687b      	ldr	r3, [r7, #4]
 800901c:	681b      	ldr	r3, [r3, #0]
 800901e:	4a3b      	ldr	r2, [pc, #236]	@ (800910c <DMA_CalcBaseAndBitshift+0x12c>)
 8009020:	4293      	cmp	r3, r2
 8009022:	d031      	beq.n	8009088 <DMA_CalcBaseAndBitshift+0xa8>
 8009024:	687b      	ldr	r3, [r7, #4]
 8009026:	681b      	ldr	r3, [r3, #0]
 8009028:	4a39      	ldr	r2, [pc, #228]	@ (8009110 <DMA_CalcBaseAndBitshift+0x130>)
 800902a:	4293      	cmp	r3, r2
 800902c:	d02c      	beq.n	8009088 <DMA_CalcBaseAndBitshift+0xa8>
 800902e:	687b      	ldr	r3, [r7, #4]
 8009030:	681b      	ldr	r3, [r3, #0]
 8009032:	4a38      	ldr	r2, [pc, #224]	@ (8009114 <DMA_CalcBaseAndBitshift+0x134>)
 8009034:	4293      	cmp	r3, r2
 8009036:	d027      	beq.n	8009088 <DMA_CalcBaseAndBitshift+0xa8>
 8009038:	687b      	ldr	r3, [r7, #4]
 800903a:	681b      	ldr	r3, [r3, #0]
 800903c:	4a36      	ldr	r2, [pc, #216]	@ (8009118 <DMA_CalcBaseAndBitshift+0x138>)
 800903e:	4293      	cmp	r3, r2
 8009040:	d022      	beq.n	8009088 <DMA_CalcBaseAndBitshift+0xa8>
 8009042:	687b      	ldr	r3, [r7, #4]
 8009044:	681b      	ldr	r3, [r3, #0]
 8009046:	4a35      	ldr	r2, [pc, #212]	@ (800911c <DMA_CalcBaseAndBitshift+0x13c>)
 8009048:	4293      	cmp	r3, r2
 800904a:	d01d      	beq.n	8009088 <DMA_CalcBaseAndBitshift+0xa8>
 800904c:	687b      	ldr	r3, [r7, #4]
 800904e:	681b      	ldr	r3, [r3, #0]
 8009050:	4a33      	ldr	r2, [pc, #204]	@ (8009120 <DMA_CalcBaseAndBitshift+0x140>)
 8009052:	4293      	cmp	r3, r2
 8009054:	d018      	beq.n	8009088 <DMA_CalcBaseAndBitshift+0xa8>
 8009056:	687b      	ldr	r3, [r7, #4]
 8009058:	681b      	ldr	r3, [r3, #0]
 800905a:	4a32      	ldr	r2, [pc, #200]	@ (8009124 <DMA_CalcBaseAndBitshift+0x144>)
 800905c:	4293      	cmp	r3, r2
 800905e:	d013      	beq.n	8009088 <DMA_CalcBaseAndBitshift+0xa8>
 8009060:	687b      	ldr	r3, [r7, #4]
 8009062:	681b      	ldr	r3, [r3, #0]
 8009064:	4a30      	ldr	r2, [pc, #192]	@ (8009128 <DMA_CalcBaseAndBitshift+0x148>)
 8009066:	4293      	cmp	r3, r2
 8009068:	d00e      	beq.n	8009088 <DMA_CalcBaseAndBitshift+0xa8>
 800906a:	687b      	ldr	r3, [r7, #4]
 800906c:	681b      	ldr	r3, [r3, #0]
 800906e:	4a2f      	ldr	r2, [pc, #188]	@ (800912c <DMA_CalcBaseAndBitshift+0x14c>)
 8009070:	4293      	cmp	r3, r2
 8009072:	d009      	beq.n	8009088 <DMA_CalcBaseAndBitshift+0xa8>
 8009074:	687b      	ldr	r3, [r7, #4]
 8009076:	681b      	ldr	r3, [r3, #0]
 8009078:	4a2d      	ldr	r2, [pc, #180]	@ (8009130 <DMA_CalcBaseAndBitshift+0x150>)
 800907a:	4293      	cmp	r3, r2
 800907c:	d004      	beq.n	8009088 <DMA_CalcBaseAndBitshift+0xa8>
 800907e:	687b      	ldr	r3, [r7, #4]
 8009080:	681b      	ldr	r3, [r3, #0]
 8009082:	4a2c      	ldr	r2, [pc, #176]	@ (8009134 <DMA_CalcBaseAndBitshift+0x154>)
 8009084:	4293      	cmp	r3, r2
 8009086:	d101      	bne.n	800908c <DMA_CalcBaseAndBitshift+0xac>
 8009088:	2301      	movs	r3, #1
 800908a:	e000      	b.n	800908e <DMA_CalcBaseAndBitshift+0xae>
 800908c:	2300      	movs	r3, #0
 800908e:	2b00      	cmp	r3, #0
 8009090:	d024      	beq.n	80090dc <DMA_CalcBaseAndBitshift+0xfc>
 8009092:	687b      	ldr	r3, [r7, #4]
 8009094:	681b      	ldr	r3, [r3, #0]
 8009096:	b2db      	uxtb	r3, r3
 8009098:	3b10      	subs	r3, #16
 800909a:	4a27      	ldr	r2, [pc, #156]	@ (8009138 <DMA_CalcBaseAndBitshift+0x158>)
 800909c:	fba2 2303 	umull	r2, r3, r2, r3
 80090a0:	091b      	lsrs	r3, r3, #4
 80090a2:	60fb      	str	r3, [r7, #12]
 80090a4:	68fb      	ldr	r3, [r7, #12]
 80090a6:	f003 0307 	and.w	r3, r3, #7
 80090aa:	4a24      	ldr	r2, [pc, #144]	@ (800913c <DMA_CalcBaseAndBitshift+0x15c>)
 80090ac:	5cd3      	ldrb	r3, [r2, r3]
 80090ae:	461a      	mov	r2, r3
 80090b0:	687b      	ldr	r3, [r7, #4]
 80090b2:	65da      	str	r2, [r3, #92]	@ 0x5c
 80090b4:	68fb      	ldr	r3, [r7, #12]
 80090b6:	2b03      	cmp	r3, #3
 80090b8:	d908      	bls.n	80090cc <DMA_CalcBaseAndBitshift+0xec>
 80090ba:	687b      	ldr	r3, [r7, #4]
 80090bc:	681b      	ldr	r3, [r3, #0]
 80090be:	461a      	mov	r2, r3
 80090c0:	4b1f      	ldr	r3, [pc, #124]	@ (8009140 <DMA_CalcBaseAndBitshift+0x160>)
 80090c2:	4013      	ands	r3, r2
 80090c4:	1d1a      	adds	r2, r3, #4
 80090c6:	687b      	ldr	r3, [r7, #4]
 80090c8:	659a      	str	r2, [r3, #88]	@ 0x58
 80090ca:	e00d      	b.n	80090e8 <DMA_CalcBaseAndBitshift+0x108>
 80090cc:	687b      	ldr	r3, [r7, #4]
 80090ce:	681b      	ldr	r3, [r3, #0]
 80090d0:	461a      	mov	r2, r3
 80090d2:	4b1b      	ldr	r3, [pc, #108]	@ (8009140 <DMA_CalcBaseAndBitshift+0x160>)
 80090d4:	4013      	ands	r3, r2
 80090d6:	687a      	ldr	r2, [r7, #4]
 80090d8:	6593      	str	r3, [r2, #88]	@ 0x58
 80090da:	e005      	b.n	80090e8 <DMA_CalcBaseAndBitshift+0x108>
 80090dc:	687b      	ldr	r3, [r7, #4]
 80090de:	681b      	ldr	r3, [r3, #0]
 80090e0:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 80090e4:	687b      	ldr	r3, [r7, #4]
 80090e6:	659a      	str	r2, [r3, #88]	@ 0x58
 80090e8:	687b      	ldr	r3, [r7, #4]
 80090ea:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80090ec:	4618      	mov	r0, r3
 80090ee:	3714      	adds	r7, #20
 80090f0:	46bd      	mov	sp, r7
 80090f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090f6:	4770      	bx	lr
 80090f8:	40020010 	.word	0x40020010
 80090fc:	40020028 	.word	0x40020028
 8009100:	40020040 	.word	0x40020040
 8009104:	40020058 	.word	0x40020058
 8009108:	40020070 	.word	0x40020070
 800910c:	40020088 	.word	0x40020088
 8009110:	400200a0 	.word	0x400200a0
 8009114:	400200b8 	.word	0x400200b8
 8009118:	40020410 	.word	0x40020410
 800911c:	40020428 	.word	0x40020428
 8009120:	40020440 	.word	0x40020440
 8009124:	40020458 	.word	0x40020458
 8009128:	40020470 	.word	0x40020470
 800912c:	40020488 	.word	0x40020488
 8009130:	400204a0 	.word	0x400204a0
 8009134:	400204b8 	.word	0x400204b8
 8009138:	aaaaaaab 	.word	0xaaaaaaab
 800913c:	0801b054 	.word	0x0801b054
 8009140:	fffffc00 	.word	0xfffffc00

08009144 <DMA_CheckFifoParam>:
 8009144:	b480      	push	{r7}
 8009146:	b085      	sub	sp, #20
 8009148:	af00      	add	r7, sp, #0
 800914a:	6078      	str	r0, [r7, #4]
 800914c:	2300      	movs	r3, #0
 800914e:	73fb      	strb	r3, [r7, #15]
 8009150:	687b      	ldr	r3, [r7, #4]
 8009152:	699b      	ldr	r3, [r3, #24]
 8009154:	2b00      	cmp	r3, #0
 8009156:	d120      	bne.n	800919a <DMA_CheckFifoParam+0x56>
 8009158:	687b      	ldr	r3, [r7, #4]
 800915a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800915c:	2b03      	cmp	r3, #3
 800915e:	d858      	bhi.n	8009212 <DMA_CheckFifoParam+0xce>
 8009160:	a201      	add	r2, pc, #4	@ (adr r2, 8009168 <DMA_CheckFifoParam+0x24>)
 8009162:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009166:	bf00      	nop
 8009168:	08009179 	.word	0x08009179
 800916c:	0800918b 	.word	0x0800918b
 8009170:	08009179 	.word	0x08009179
 8009174:	08009213 	.word	0x08009213
 8009178:	687b      	ldr	r3, [r7, #4]
 800917a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800917c:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8009180:	2b00      	cmp	r3, #0
 8009182:	d048      	beq.n	8009216 <DMA_CheckFifoParam+0xd2>
 8009184:	2301      	movs	r3, #1
 8009186:	73fb      	strb	r3, [r7, #15]
 8009188:	e045      	b.n	8009216 <DMA_CheckFifoParam+0xd2>
 800918a:	687b      	ldr	r3, [r7, #4]
 800918c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800918e:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8009192:	d142      	bne.n	800921a <DMA_CheckFifoParam+0xd6>
 8009194:	2301      	movs	r3, #1
 8009196:	73fb      	strb	r3, [r7, #15]
 8009198:	e03f      	b.n	800921a <DMA_CheckFifoParam+0xd6>
 800919a:	687b      	ldr	r3, [r7, #4]
 800919c:	699b      	ldr	r3, [r3, #24]
 800919e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80091a2:	d123      	bne.n	80091ec <DMA_CheckFifoParam+0xa8>
 80091a4:	687b      	ldr	r3, [r7, #4]
 80091a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80091a8:	2b03      	cmp	r3, #3
 80091aa:	d838      	bhi.n	800921e <DMA_CheckFifoParam+0xda>
 80091ac:	a201      	add	r2, pc, #4	@ (adr r2, 80091b4 <DMA_CheckFifoParam+0x70>)
 80091ae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80091b2:	bf00      	nop
 80091b4:	080091c5 	.word	0x080091c5
 80091b8:	080091cb 	.word	0x080091cb
 80091bc:	080091c5 	.word	0x080091c5
 80091c0:	080091dd 	.word	0x080091dd
 80091c4:	2301      	movs	r3, #1
 80091c6:	73fb      	strb	r3, [r7, #15]
 80091c8:	e030      	b.n	800922c <DMA_CheckFifoParam+0xe8>
 80091ca:	687b      	ldr	r3, [r7, #4]
 80091cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80091ce:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80091d2:	2b00      	cmp	r3, #0
 80091d4:	d025      	beq.n	8009222 <DMA_CheckFifoParam+0xde>
 80091d6:	2301      	movs	r3, #1
 80091d8:	73fb      	strb	r3, [r7, #15]
 80091da:	e022      	b.n	8009222 <DMA_CheckFifoParam+0xde>
 80091dc:	687b      	ldr	r3, [r7, #4]
 80091de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80091e0:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 80091e4:	d11f      	bne.n	8009226 <DMA_CheckFifoParam+0xe2>
 80091e6:	2301      	movs	r3, #1
 80091e8:	73fb      	strb	r3, [r7, #15]
 80091ea:	e01c      	b.n	8009226 <DMA_CheckFifoParam+0xe2>
 80091ec:	687b      	ldr	r3, [r7, #4]
 80091ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80091f0:	2b02      	cmp	r3, #2
 80091f2:	d902      	bls.n	80091fa <DMA_CheckFifoParam+0xb6>
 80091f4:	2b03      	cmp	r3, #3
 80091f6:	d003      	beq.n	8009200 <DMA_CheckFifoParam+0xbc>
 80091f8:	e018      	b.n	800922c <DMA_CheckFifoParam+0xe8>
 80091fa:	2301      	movs	r3, #1
 80091fc:	73fb      	strb	r3, [r7, #15]
 80091fe:	e015      	b.n	800922c <DMA_CheckFifoParam+0xe8>
 8009200:	687b      	ldr	r3, [r7, #4]
 8009202:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009204:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8009208:	2b00      	cmp	r3, #0
 800920a:	d00e      	beq.n	800922a <DMA_CheckFifoParam+0xe6>
 800920c:	2301      	movs	r3, #1
 800920e:	73fb      	strb	r3, [r7, #15]
 8009210:	e00b      	b.n	800922a <DMA_CheckFifoParam+0xe6>
 8009212:	bf00      	nop
 8009214:	e00a      	b.n	800922c <DMA_CheckFifoParam+0xe8>
 8009216:	bf00      	nop
 8009218:	e008      	b.n	800922c <DMA_CheckFifoParam+0xe8>
 800921a:	bf00      	nop
 800921c:	e006      	b.n	800922c <DMA_CheckFifoParam+0xe8>
 800921e:	bf00      	nop
 8009220:	e004      	b.n	800922c <DMA_CheckFifoParam+0xe8>
 8009222:	bf00      	nop
 8009224:	e002      	b.n	800922c <DMA_CheckFifoParam+0xe8>
 8009226:	bf00      	nop
 8009228:	e000      	b.n	800922c <DMA_CheckFifoParam+0xe8>
 800922a:	bf00      	nop
 800922c:	7bfb      	ldrb	r3, [r7, #15]
 800922e:	4618      	mov	r0, r3
 8009230:	3714      	adds	r7, #20
 8009232:	46bd      	mov	sp, r7
 8009234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009238:	4770      	bx	lr
 800923a:	bf00      	nop

0800923c <DMA_CalcDMAMUXChannelBaseAndMask>:
 800923c:	b480      	push	{r7}
 800923e:	b085      	sub	sp, #20
 8009240:	af00      	add	r7, sp, #0
 8009242:	6078      	str	r0, [r7, #4]
 8009244:	687b      	ldr	r3, [r7, #4]
 8009246:	681b      	ldr	r3, [r3, #0]
 8009248:	60bb      	str	r3, [r7, #8]
 800924a:	687b      	ldr	r3, [r7, #4]
 800924c:	681b      	ldr	r3, [r3, #0]
 800924e:	4a38      	ldr	r2, [pc, #224]	@ (8009330 <DMA_CalcDMAMUXChannelBaseAndMask+0xf4>)
 8009250:	4293      	cmp	r3, r2
 8009252:	d022      	beq.n	800929a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8009254:	687b      	ldr	r3, [r7, #4]
 8009256:	681b      	ldr	r3, [r3, #0]
 8009258:	4a36      	ldr	r2, [pc, #216]	@ (8009334 <DMA_CalcDMAMUXChannelBaseAndMask+0xf8>)
 800925a:	4293      	cmp	r3, r2
 800925c:	d01d      	beq.n	800929a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800925e:	687b      	ldr	r3, [r7, #4]
 8009260:	681b      	ldr	r3, [r3, #0]
 8009262:	4a35      	ldr	r2, [pc, #212]	@ (8009338 <DMA_CalcDMAMUXChannelBaseAndMask+0xfc>)
 8009264:	4293      	cmp	r3, r2
 8009266:	d018      	beq.n	800929a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8009268:	687b      	ldr	r3, [r7, #4]
 800926a:	681b      	ldr	r3, [r3, #0]
 800926c:	4a33      	ldr	r2, [pc, #204]	@ (800933c <DMA_CalcDMAMUXChannelBaseAndMask+0x100>)
 800926e:	4293      	cmp	r3, r2
 8009270:	d013      	beq.n	800929a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8009272:	687b      	ldr	r3, [r7, #4]
 8009274:	681b      	ldr	r3, [r3, #0]
 8009276:	4a32      	ldr	r2, [pc, #200]	@ (8009340 <DMA_CalcDMAMUXChannelBaseAndMask+0x104>)
 8009278:	4293      	cmp	r3, r2
 800927a:	d00e      	beq.n	800929a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800927c:	687b      	ldr	r3, [r7, #4]
 800927e:	681b      	ldr	r3, [r3, #0]
 8009280:	4a30      	ldr	r2, [pc, #192]	@ (8009344 <DMA_CalcDMAMUXChannelBaseAndMask+0x108>)
 8009282:	4293      	cmp	r3, r2
 8009284:	d009      	beq.n	800929a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8009286:	687b      	ldr	r3, [r7, #4]
 8009288:	681b      	ldr	r3, [r3, #0]
 800928a:	4a2f      	ldr	r2, [pc, #188]	@ (8009348 <DMA_CalcDMAMUXChannelBaseAndMask+0x10c>)
 800928c:	4293      	cmp	r3, r2
 800928e:	d004      	beq.n	800929a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8009290:	687b      	ldr	r3, [r7, #4]
 8009292:	681b      	ldr	r3, [r3, #0]
 8009294:	4a2d      	ldr	r2, [pc, #180]	@ (800934c <DMA_CalcDMAMUXChannelBaseAndMask+0x110>)
 8009296:	4293      	cmp	r3, r2
 8009298:	d101      	bne.n	800929e <DMA_CalcDMAMUXChannelBaseAndMask+0x62>
 800929a:	2301      	movs	r3, #1
 800929c:	e000      	b.n	80092a0 <DMA_CalcDMAMUXChannelBaseAndMask+0x64>
 800929e:	2300      	movs	r3, #0
 80092a0:	2b00      	cmp	r3, #0
 80092a2:	d01a      	beq.n	80092da <DMA_CalcDMAMUXChannelBaseAndMask+0x9e>
 80092a4:	687b      	ldr	r3, [r7, #4]
 80092a6:	681b      	ldr	r3, [r3, #0]
 80092a8:	b2db      	uxtb	r3, r3
 80092aa:	3b08      	subs	r3, #8
 80092ac:	4a28      	ldr	r2, [pc, #160]	@ (8009350 <DMA_CalcDMAMUXChannelBaseAndMask+0x114>)
 80092ae:	fba2 2303 	umull	r2, r3, r2, r3
 80092b2:	091b      	lsrs	r3, r3, #4
 80092b4:	60fb      	str	r3, [r7, #12]
 80092b6:	68fa      	ldr	r2, [r7, #12]
 80092b8:	4b26      	ldr	r3, [pc, #152]	@ (8009354 <DMA_CalcDMAMUXChannelBaseAndMask+0x118>)
 80092ba:	4413      	add	r3, r2
 80092bc:	009b      	lsls	r3, r3, #2
 80092be:	461a      	mov	r2, r3
 80092c0:	687b      	ldr	r3, [r7, #4]
 80092c2:	661a      	str	r2, [r3, #96]	@ 0x60
 80092c4:	687b      	ldr	r3, [r7, #4]
 80092c6:	4a24      	ldr	r2, [pc, #144]	@ (8009358 <DMA_CalcDMAMUXChannelBaseAndMask+0x11c>)
 80092c8:	665a      	str	r2, [r3, #100]	@ 0x64
 80092ca:	68fb      	ldr	r3, [r7, #12]
 80092cc:	f003 031f 	and.w	r3, r3, #31
 80092d0:	2201      	movs	r2, #1
 80092d2:	409a      	lsls	r2, r3
 80092d4:	687b      	ldr	r3, [r7, #4]
 80092d6:	669a      	str	r2, [r3, #104]	@ 0x68
 80092d8:	e024      	b.n	8009324 <DMA_CalcDMAMUXChannelBaseAndMask+0xe8>
 80092da:	687b      	ldr	r3, [r7, #4]
 80092dc:	681b      	ldr	r3, [r3, #0]
 80092de:	b2db      	uxtb	r3, r3
 80092e0:	3b10      	subs	r3, #16
 80092e2:	4a1e      	ldr	r2, [pc, #120]	@ (800935c <DMA_CalcDMAMUXChannelBaseAndMask+0x120>)
 80092e4:	fba2 2303 	umull	r2, r3, r2, r3
 80092e8:	091b      	lsrs	r3, r3, #4
 80092ea:	60fb      	str	r3, [r7, #12]
 80092ec:	68bb      	ldr	r3, [r7, #8]
 80092ee:	4a1c      	ldr	r2, [pc, #112]	@ (8009360 <DMA_CalcDMAMUXChannelBaseAndMask+0x124>)
 80092f0:	4293      	cmp	r3, r2
 80092f2:	d806      	bhi.n	8009302 <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
 80092f4:	68bb      	ldr	r3, [r7, #8]
 80092f6:	4a1b      	ldr	r2, [pc, #108]	@ (8009364 <DMA_CalcDMAMUXChannelBaseAndMask+0x128>)
 80092f8:	4293      	cmp	r3, r2
 80092fa:	d902      	bls.n	8009302 <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
 80092fc:	68fb      	ldr	r3, [r7, #12]
 80092fe:	3308      	adds	r3, #8
 8009300:	60fb      	str	r3, [r7, #12]
 8009302:	68fa      	ldr	r2, [r7, #12]
 8009304:	4b18      	ldr	r3, [pc, #96]	@ (8009368 <DMA_CalcDMAMUXChannelBaseAndMask+0x12c>)
 8009306:	4413      	add	r3, r2
 8009308:	009b      	lsls	r3, r3, #2
 800930a:	461a      	mov	r2, r3
 800930c:	687b      	ldr	r3, [r7, #4]
 800930e:	661a      	str	r2, [r3, #96]	@ 0x60
 8009310:	687b      	ldr	r3, [r7, #4]
 8009312:	4a16      	ldr	r2, [pc, #88]	@ (800936c <DMA_CalcDMAMUXChannelBaseAndMask+0x130>)
 8009314:	665a      	str	r2, [r3, #100]	@ 0x64
 8009316:	68fb      	ldr	r3, [r7, #12]
 8009318:	f003 031f 	and.w	r3, r3, #31
 800931c:	2201      	movs	r2, #1
 800931e:	409a      	lsls	r2, r3
 8009320:	687b      	ldr	r3, [r7, #4]
 8009322:	669a      	str	r2, [r3, #104]	@ 0x68
 8009324:	bf00      	nop
 8009326:	3714      	adds	r7, #20
 8009328:	46bd      	mov	sp, r7
 800932a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800932e:	4770      	bx	lr
 8009330:	58025408 	.word	0x58025408
 8009334:	5802541c 	.word	0x5802541c
 8009338:	58025430 	.word	0x58025430
 800933c:	58025444 	.word	0x58025444
 8009340:	58025458 	.word	0x58025458
 8009344:	5802546c 	.word	0x5802546c
 8009348:	58025480 	.word	0x58025480
 800934c:	58025494 	.word	0x58025494
 8009350:	cccccccd 	.word	0xcccccccd
 8009354:	16009600 	.word	0x16009600
 8009358:	58025880 	.word	0x58025880
 800935c:	aaaaaaab 	.word	0xaaaaaaab
 8009360:	400204b8 	.word	0x400204b8
 8009364:	4002040f 	.word	0x4002040f
 8009368:	10008200 	.word	0x10008200
 800936c:	40020880 	.word	0x40020880

08009370 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
 8009370:	b480      	push	{r7}
 8009372:	b085      	sub	sp, #20
 8009374:	af00      	add	r7, sp, #0
 8009376:	6078      	str	r0, [r7, #4]
 8009378:	687b      	ldr	r3, [r7, #4]
 800937a:	685b      	ldr	r3, [r3, #4]
 800937c:	b2db      	uxtb	r3, r3
 800937e:	60fb      	str	r3, [r7, #12]
 8009380:	68fb      	ldr	r3, [r7, #12]
 8009382:	2b00      	cmp	r3, #0
 8009384:	d04a      	beq.n	800941c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
 8009386:	68fb      	ldr	r3, [r7, #12]
 8009388:	2b08      	cmp	r3, #8
 800938a:	d847      	bhi.n	800941c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
 800938c:	687b      	ldr	r3, [r7, #4]
 800938e:	681b      	ldr	r3, [r3, #0]
 8009390:	4a25      	ldr	r2, [pc, #148]	@ (8009428 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xb8>)
 8009392:	4293      	cmp	r3, r2
 8009394:	d022      	beq.n	80093dc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8009396:	687b      	ldr	r3, [r7, #4]
 8009398:	681b      	ldr	r3, [r3, #0]
 800939a:	4a24      	ldr	r2, [pc, #144]	@ (800942c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xbc>)
 800939c:	4293      	cmp	r3, r2
 800939e:	d01d      	beq.n	80093dc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80093a0:	687b      	ldr	r3, [r7, #4]
 80093a2:	681b      	ldr	r3, [r3, #0]
 80093a4:	4a22      	ldr	r2, [pc, #136]	@ (8009430 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc0>)
 80093a6:	4293      	cmp	r3, r2
 80093a8:	d018      	beq.n	80093dc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80093aa:	687b      	ldr	r3, [r7, #4]
 80093ac:	681b      	ldr	r3, [r3, #0]
 80093ae:	4a21      	ldr	r2, [pc, #132]	@ (8009434 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc4>)
 80093b0:	4293      	cmp	r3, r2
 80093b2:	d013      	beq.n	80093dc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80093b4:	687b      	ldr	r3, [r7, #4]
 80093b6:	681b      	ldr	r3, [r3, #0]
 80093b8:	4a1f      	ldr	r2, [pc, #124]	@ (8009438 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc8>)
 80093ba:	4293      	cmp	r3, r2
 80093bc:	d00e      	beq.n	80093dc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80093be:	687b      	ldr	r3, [r7, #4]
 80093c0:	681b      	ldr	r3, [r3, #0]
 80093c2:	4a1e      	ldr	r2, [pc, #120]	@ (800943c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xcc>)
 80093c4:	4293      	cmp	r3, r2
 80093c6:	d009      	beq.n	80093dc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80093c8:	687b      	ldr	r3, [r7, #4]
 80093ca:	681b      	ldr	r3, [r3, #0]
 80093cc:	4a1c      	ldr	r2, [pc, #112]	@ (8009440 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd0>)
 80093ce:	4293      	cmp	r3, r2
 80093d0:	d004      	beq.n	80093dc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80093d2:	687b      	ldr	r3, [r7, #4]
 80093d4:	681b      	ldr	r3, [r3, #0]
 80093d6:	4a1b      	ldr	r2, [pc, #108]	@ (8009444 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd4>)
 80093d8:	4293      	cmp	r3, r2
 80093da:	d101      	bne.n	80093e0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x70>
 80093dc:	2301      	movs	r3, #1
 80093de:	e000      	b.n	80093e2 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x72>
 80093e0:	2300      	movs	r3, #0
 80093e2:	2b00      	cmp	r3, #0
 80093e4:	d00a      	beq.n	80093fc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x8c>
 80093e6:	68fa      	ldr	r2, [r7, #12]
 80093e8:	4b17      	ldr	r3, [pc, #92]	@ (8009448 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd8>)
 80093ea:	4413      	add	r3, r2
 80093ec:	009b      	lsls	r3, r3, #2
 80093ee:	461a      	mov	r2, r3
 80093f0:	687b      	ldr	r3, [r7, #4]
 80093f2:	66da      	str	r2, [r3, #108]	@ 0x6c
 80093f4:	687b      	ldr	r3, [r7, #4]
 80093f6:	4a15      	ldr	r2, [pc, #84]	@ (800944c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xdc>)
 80093f8:	671a      	str	r2, [r3, #112]	@ 0x70
 80093fa:	e009      	b.n	8009410 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xa0>
 80093fc:	68fa      	ldr	r2, [r7, #12]
 80093fe:	4b14      	ldr	r3, [pc, #80]	@ (8009450 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe0>)
 8009400:	4413      	add	r3, r2
 8009402:	009b      	lsls	r3, r3, #2
 8009404:	461a      	mov	r2, r3
 8009406:	687b      	ldr	r3, [r7, #4]
 8009408:	66da      	str	r2, [r3, #108]	@ 0x6c
 800940a:	687b      	ldr	r3, [r7, #4]
 800940c:	4a11      	ldr	r2, [pc, #68]	@ (8009454 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe4>)
 800940e:	671a      	str	r2, [r3, #112]	@ 0x70
 8009410:	68fb      	ldr	r3, [r7, #12]
 8009412:	3b01      	subs	r3, #1
 8009414:	2201      	movs	r2, #1
 8009416:	409a      	lsls	r2, r3
 8009418:	687b      	ldr	r3, [r7, #4]
 800941a:	675a      	str	r2, [r3, #116]	@ 0x74
 800941c:	bf00      	nop
 800941e:	3714      	adds	r7, #20
 8009420:	46bd      	mov	sp, r7
 8009422:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009426:	4770      	bx	lr
 8009428:	58025408 	.word	0x58025408
 800942c:	5802541c 	.word	0x5802541c
 8009430:	58025430 	.word	0x58025430
 8009434:	58025444 	.word	0x58025444
 8009438:	58025458 	.word	0x58025458
 800943c:	5802546c 	.word	0x5802546c
 8009440:	58025480 	.word	0x58025480
 8009444:	58025494 	.word	0x58025494
 8009448:	1600963f 	.word	0x1600963f
 800944c:	58025940 	.word	0x58025940
 8009450:	1000823f 	.word	0x1000823f
 8009454:	40020940 	.word	0x40020940

08009458 <HAL_GPIO_Init>:
 8009458:	b480      	push	{r7}
 800945a:	b089      	sub	sp, #36	@ 0x24
 800945c:	af00      	add	r7, sp, #0
 800945e:	6078      	str	r0, [r7, #4]
 8009460:	6039      	str	r1, [r7, #0]
 8009462:	2300      	movs	r3, #0
 8009464:	61fb      	str	r3, [r7, #28]
 8009466:	4b86      	ldr	r3, [pc, #536]	@ (8009680 <HAL_GPIO_Init+0x228>)
 8009468:	617b      	str	r3, [r7, #20]
 800946a:	e18c      	b.n	8009786 <HAL_GPIO_Init+0x32e>
 800946c:	683b      	ldr	r3, [r7, #0]
 800946e:	681a      	ldr	r2, [r3, #0]
 8009470:	2101      	movs	r1, #1
 8009472:	69fb      	ldr	r3, [r7, #28]
 8009474:	fa01 f303 	lsl.w	r3, r1, r3
 8009478:	4013      	ands	r3, r2
 800947a:	613b      	str	r3, [r7, #16]
 800947c:	693b      	ldr	r3, [r7, #16]
 800947e:	2b00      	cmp	r3, #0
 8009480:	f000 817e 	beq.w	8009780 <HAL_GPIO_Init+0x328>
 8009484:	683b      	ldr	r3, [r7, #0]
 8009486:	685b      	ldr	r3, [r3, #4]
 8009488:	f003 0303 	and.w	r3, r3, #3
 800948c:	2b01      	cmp	r3, #1
 800948e:	d005      	beq.n	800949c <HAL_GPIO_Init+0x44>
 8009490:	683b      	ldr	r3, [r7, #0]
 8009492:	685b      	ldr	r3, [r3, #4]
 8009494:	f003 0303 	and.w	r3, r3, #3
 8009498:	2b02      	cmp	r3, #2
 800949a:	d130      	bne.n	80094fe <HAL_GPIO_Init+0xa6>
 800949c:	687b      	ldr	r3, [r7, #4]
 800949e:	689b      	ldr	r3, [r3, #8]
 80094a0:	61bb      	str	r3, [r7, #24]
 80094a2:	69fb      	ldr	r3, [r7, #28]
 80094a4:	005b      	lsls	r3, r3, #1
 80094a6:	2203      	movs	r2, #3
 80094a8:	fa02 f303 	lsl.w	r3, r2, r3
 80094ac:	43db      	mvns	r3, r3
 80094ae:	69ba      	ldr	r2, [r7, #24]
 80094b0:	4013      	ands	r3, r2
 80094b2:	61bb      	str	r3, [r7, #24]
 80094b4:	683b      	ldr	r3, [r7, #0]
 80094b6:	68da      	ldr	r2, [r3, #12]
 80094b8:	69fb      	ldr	r3, [r7, #28]
 80094ba:	005b      	lsls	r3, r3, #1
 80094bc:	fa02 f303 	lsl.w	r3, r2, r3
 80094c0:	69ba      	ldr	r2, [r7, #24]
 80094c2:	4313      	orrs	r3, r2
 80094c4:	61bb      	str	r3, [r7, #24]
 80094c6:	687b      	ldr	r3, [r7, #4]
 80094c8:	69ba      	ldr	r2, [r7, #24]
 80094ca:	609a      	str	r2, [r3, #8]
 80094cc:	687b      	ldr	r3, [r7, #4]
 80094ce:	685b      	ldr	r3, [r3, #4]
 80094d0:	61bb      	str	r3, [r7, #24]
 80094d2:	2201      	movs	r2, #1
 80094d4:	69fb      	ldr	r3, [r7, #28]
 80094d6:	fa02 f303 	lsl.w	r3, r2, r3
 80094da:	43db      	mvns	r3, r3
 80094dc:	69ba      	ldr	r2, [r7, #24]
 80094de:	4013      	ands	r3, r2
 80094e0:	61bb      	str	r3, [r7, #24]
 80094e2:	683b      	ldr	r3, [r7, #0]
 80094e4:	685b      	ldr	r3, [r3, #4]
 80094e6:	091b      	lsrs	r3, r3, #4
 80094e8:	f003 0201 	and.w	r2, r3, #1
 80094ec:	69fb      	ldr	r3, [r7, #28]
 80094ee:	fa02 f303 	lsl.w	r3, r2, r3
 80094f2:	69ba      	ldr	r2, [r7, #24]
 80094f4:	4313      	orrs	r3, r2
 80094f6:	61bb      	str	r3, [r7, #24]
 80094f8:	687b      	ldr	r3, [r7, #4]
 80094fa:	69ba      	ldr	r2, [r7, #24]
 80094fc:	605a      	str	r2, [r3, #4]
 80094fe:	683b      	ldr	r3, [r7, #0]
 8009500:	685b      	ldr	r3, [r3, #4]
 8009502:	f003 0303 	and.w	r3, r3, #3
 8009506:	2b03      	cmp	r3, #3
 8009508:	d017      	beq.n	800953a <HAL_GPIO_Init+0xe2>
 800950a:	687b      	ldr	r3, [r7, #4]
 800950c:	68db      	ldr	r3, [r3, #12]
 800950e:	61bb      	str	r3, [r7, #24]
 8009510:	69fb      	ldr	r3, [r7, #28]
 8009512:	005b      	lsls	r3, r3, #1
 8009514:	2203      	movs	r2, #3
 8009516:	fa02 f303 	lsl.w	r3, r2, r3
 800951a:	43db      	mvns	r3, r3
 800951c:	69ba      	ldr	r2, [r7, #24]
 800951e:	4013      	ands	r3, r2
 8009520:	61bb      	str	r3, [r7, #24]
 8009522:	683b      	ldr	r3, [r7, #0]
 8009524:	689a      	ldr	r2, [r3, #8]
 8009526:	69fb      	ldr	r3, [r7, #28]
 8009528:	005b      	lsls	r3, r3, #1
 800952a:	fa02 f303 	lsl.w	r3, r2, r3
 800952e:	69ba      	ldr	r2, [r7, #24]
 8009530:	4313      	orrs	r3, r2
 8009532:	61bb      	str	r3, [r7, #24]
 8009534:	687b      	ldr	r3, [r7, #4]
 8009536:	69ba      	ldr	r2, [r7, #24]
 8009538:	60da      	str	r2, [r3, #12]
 800953a:	683b      	ldr	r3, [r7, #0]
 800953c:	685b      	ldr	r3, [r3, #4]
 800953e:	f003 0303 	and.w	r3, r3, #3
 8009542:	2b02      	cmp	r3, #2
 8009544:	d123      	bne.n	800958e <HAL_GPIO_Init+0x136>
 8009546:	69fb      	ldr	r3, [r7, #28]
 8009548:	08da      	lsrs	r2, r3, #3
 800954a:	687b      	ldr	r3, [r7, #4]
 800954c:	3208      	adds	r2, #8
 800954e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009552:	61bb      	str	r3, [r7, #24]
 8009554:	69fb      	ldr	r3, [r7, #28]
 8009556:	f003 0307 	and.w	r3, r3, #7
 800955a:	009b      	lsls	r3, r3, #2
 800955c:	220f      	movs	r2, #15
 800955e:	fa02 f303 	lsl.w	r3, r2, r3
 8009562:	43db      	mvns	r3, r3
 8009564:	69ba      	ldr	r2, [r7, #24]
 8009566:	4013      	ands	r3, r2
 8009568:	61bb      	str	r3, [r7, #24]
 800956a:	683b      	ldr	r3, [r7, #0]
 800956c:	691a      	ldr	r2, [r3, #16]
 800956e:	69fb      	ldr	r3, [r7, #28]
 8009570:	f003 0307 	and.w	r3, r3, #7
 8009574:	009b      	lsls	r3, r3, #2
 8009576:	fa02 f303 	lsl.w	r3, r2, r3
 800957a:	69ba      	ldr	r2, [r7, #24]
 800957c:	4313      	orrs	r3, r2
 800957e:	61bb      	str	r3, [r7, #24]
 8009580:	69fb      	ldr	r3, [r7, #28]
 8009582:	08da      	lsrs	r2, r3, #3
 8009584:	687b      	ldr	r3, [r7, #4]
 8009586:	3208      	adds	r2, #8
 8009588:	69b9      	ldr	r1, [r7, #24]
 800958a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800958e:	687b      	ldr	r3, [r7, #4]
 8009590:	681b      	ldr	r3, [r3, #0]
 8009592:	61bb      	str	r3, [r7, #24]
 8009594:	69fb      	ldr	r3, [r7, #28]
 8009596:	005b      	lsls	r3, r3, #1
 8009598:	2203      	movs	r2, #3
 800959a:	fa02 f303 	lsl.w	r3, r2, r3
 800959e:	43db      	mvns	r3, r3
 80095a0:	69ba      	ldr	r2, [r7, #24]
 80095a2:	4013      	ands	r3, r2
 80095a4:	61bb      	str	r3, [r7, #24]
 80095a6:	683b      	ldr	r3, [r7, #0]
 80095a8:	685b      	ldr	r3, [r3, #4]
 80095aa:	f003 0203 	and.w	r2, r3, #3
 80095ae:	69fb      	ldr	r3, [r7, #28]
 80095b0:	005b      	lsls	r3, r3, #1
 80095b2:	fa02 f303 	lsl.w	r3, r2, r3
 80095b6:	69ba      	ldr	r2, [r7, #24]
 80095b8:	4313      	orrs	r3, r2
 80095ba:	61bb      	str	r3, [r7, #24]
 80095bc:	687b      	ldr	r3, [r7, #4]
 80095be:	69ba      	ldr	r2, [r7, #24]
 80095c0:	601a      	str	r2, [r3, #0]
 80095c2:	683b      	ldr	r3, [r7, #0]
 80095c4:	685b      	ldr	r3, [r3, #4]
 80095c6:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80095ca:	2b00      	cmp	r3, #0
 80095cc:	f000 80d8 	beq.w	8009780 <HAL_GPIO_Init+0x328>
 80095d0:	4b2c      	ldr	r3, [pc, #176]	@ (8009684 <HAL_GPIO_Init+0x22c>)
 80095d2:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 80095d6:	4a2b      	ldr	r2, [pc, #172]	@ (8009684 <HAL_GPIO_Init+0x22c>)
 80095d8:	f043 0302 	orr.w	r3, r3, #2
 80095dc:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 80095e0:	4b28      	ldr	r3, [pc, #160]	@ (8009684 <HAL_GPIO_Init+0x22c>)
 80095e2:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 80095e6:	f003 0302 	and.w	r3, r3, #2
 80095ea:	60fb      	str	r3, [r7, #12]
 80095ec:	68fb      	ldr	r3, [r7, #12]
 80095ee:	4a26      	ldr	r2, [pc, #152]	@ (8009688 <HAL_GPIO_Init+0x230>)
 80095f0:	69fb      	ldr	r3, [r7, #28]
 80095f2:	089b      	lsrs	r3, r3, #2
 80095f4:	3302      	adds	r3, #2
 80095f6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80095fa:	61bb      	str	r3, [r7, #24]
 80095fc:	69fb      	ldr	r3, [r7, #28]
 80095fe:	f003 0303 	and.w	r3, r3, #3
 8009602:	009b      	lsls	r3, r3, #2
 8009604:	220f      	movs	r2, #15
 8009606:	fa02 f303 	lsl.w	r3, r2, r3
 800960a:	43db      	mvns	r3, r3
 800960c:	69ba      	ldr	r2, [r7, #24]
 800960e:	4013      	ands	r3, r2
 8009610:	61bb      	str	r3, [r7, #24]
 8009612:	687b      	ldr	r3, [r7, #4]
 8009614:	4a1d      	ldr	r2, [pc, #116]	@ (800968c <HAL_GPIO_Init+0x234>)
 8009616:	4293      	cmp	r3, r2
 8009618:	d04a      	beq.n	80096b0 <HAL_GPIO_Init+0x258>
 800961a:	687b      	ldr	r3, [r7, #4]
 800961c:	4a1c      	ldr	r2, [pc, #112]	@ (8009690 <HAL_GPIO_Init+0x238>)
 800961e:	4293      	cmp	r3, r2
 8009620:	d02b      	beq.n	800967a <HAL_GPIO_Init+0x222>
 8009622:	687b      	ldr	r3, [r7, #4]
 8009624:	4a1b      	ldr	r2, [pc, #108]	@ (8009694 <HAL_GPIO_Init+0x23c>)
 8009626:	4293      	cmp	r3, r2
 8009628:	d025      	beq.n	8009676 <HAL_GPIO_Init+0x21e>
 800962a:	687b      	ldr	r3, [r7, #4]
 800962c:	4a1a      	ldr	r2, [pc, #104]	@ (8009698 <HAL_GPIO_Init+0x240>)
 800962e:	4293      	cmp	r3, r2
 8009630:	d01f      	beq.n	8009672 <HAL_GPIO_Init+0x21a>
 8009632:	687b      	ldr	r3, [r7, #4]
 8009634:	4a19      	ldr	r2, [pc, #100]	@ (800969c <HAL_GPIO_Init+0x244>)
 8009636:	4293      	cmp	r3, r2
 8009638:	d019      	beq.n	800966e <HAL_GPIO_Init+0x216>
 800963a:	687b      	ldr	r3, [r7, #4]
 800963c:	4a18      	ldr	r2, [pc, #96]	@ (80096a0 <HAL_GPIO_Init+0x248>)
 800963e:	4293      	cmp	r3, r2
 8009640:	d013      	beq.n	800966a <HAL_GPIO_Init+0x212>
 8009642:	687b      	ldr	r3, [r7, #4]
 8009644:	4a17      	ldr	r2, [pc, #92]	@ (80096a4 <HAL_GPIO_Init+0x24c>)
 8009646:	4293      	cmp	r3, r2
 8009648:	d00d      	beq.n	8009666 <HAL_GPIO_Init+0x20e>
 800964a:	687b      	ldr	r3, [r7, #4]
 800964c:	4a16      	ldr	r2, [pc, #88]	@ (80096a8 <HAL_GPIO_Init+0x250>)
 800964e:	4293      	cmp	r3, r2
 8009650:	d007      	beq.n	8009662 <HAL_GPIO_Init+0x20a>
 8009652:	687b      	ldr	r3, [r7, #4]
 8009654:	4a15      	ldr	r2, [pc, #84]	@ (80096ac <HAL_GPIO_Init+0x254>)
 8009656:	4293      	cmp	r3, r2
 8009658:	d101      	bne.n	800965e <HAL_GPIO_Init+0x206>
 800965a:	2309      	movs	r3, #9
 800965c:	e029      	b.n	80096b2 <HAL_GPIO_Init+0x25a>
 800965e:	230a      	movs	r3, #10
 8009660:	e027      	b.n	80096b2 <HAL_GPIO_Init+0x25a>
 8009662:	2307      	movs	r3, #7
 8009664:	e025      	b.n	80096b2 <HAL_GPIO_Init+0x25a>
 8009666:	2306      	movs	r3, #6
 8009668:	e023      	b.n	80096b2 <HAL_GPIO_Init+0x25a>
 800966a:	2305      	movs	r3, #5
 800966c:	e021      	b.n	80096b2 <HAL_GPIO_Init+0x25a>
 800966e:	2304      	movs	r3, #4
 8009670:	e01f      	b.n	80096b2 <HAL_GPIO_Init+0x25a>
 8009672:	2303      	movs	r3, #3
 8009674:	e01d      	b.n	80096b2 <HAL_GPIO_Init+0x25a>
 8009676:	2302      	movs	r3, #2
 8009678:	e01b      	b.n	80096b2 <HAL_GPIO_Init+0x25a>
 800967a:	2301      	movs	r3, #1
 800967c:	e019      	b.n	80096b2 <HAL_GPIO_Init+0x25a>
 800967e:	bf00      	nop
 8009680:	58000080 	.word	0x58000080
 8009684:	58024400 	.word	0x58024400
 8009688:	58000400 	.word	0x58000400
 800968c:	58020000 	.word	0x58020000
 8009690:	58020400 	.word	0x58020400
 8009694:	58020800 	.word	0x58020800
 8009698:	58020c00 	.word	0x58020c00
 800969c:	58021000 	.word	0x58021000
 80096a0:	58021400 	.word	0x58021400
 80096a4:	58021800 	.word	0x58021800
 80096a8:	58021c00 	.word	0x58021c00
 80096ac:	58022400 	.word	0x58022400
 80096b0:	2300      	movs	r3, #0
 80096b2:	69fa      	ldr	r2, [r7, #28]
 80096b4:	f002 0203 	and.w	r2, r2, #3
 80096b8:	0092      	lsls	r2, r2, #2
 80096ba:	4093      	lsls	r3, r2
 80096bc:	69ba      	ldr	r2, [r7, #24]
 80096be:	4313      	orrs	r3, r2
 80096c0:	61bb      	str	r3, [r7, #24]
 80096c2:	4938      	ldr	r1, [pc, #224]	@ (80097a4 <HAL_GPIO_Init+0x34c>)
 80096c4:	69fb      	ldr	r3, [r7, #28]
 80096c6:	089b      	lsrs	r3, r3, #2
 80096c8:	3302      	adds	r3, #2
 80096ca:	69ba      	ldr	r2, [r7, #24]
 80096cc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80096d0:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 80096d4:	681b      	ldr	r3, [r3, #0]
 80096d6:	61bb      	str	r3, [r7, #24]
 80096d8:	693b      	ldr	r3, [r7, #16]
 80096da:	43db      	mvns	r3, r3
 80096dc:	69ba      	ldr	r2, [r7, #24]
 80096de:	4013      	ands	r3, r2
 80096e0:	61bb      	str	r3, [r7, #24]
 80096e2:	683b      	ldr	r3, [r7, #0]
 80096e4:	685b      	ldr	r3, [r3, #4]
 80096e6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80096ea:	2b00      	cmp	r3, #0
 80096ec:	d003      	beq.n	80096f6 <HAL_GPIO_Init+0x29e>
 80096ee:	69ba      	ldr	r2, [r7, #24]
 80096f0:	693b      	ldr	r3, [r7, #16]
 80096f2:	4313      	orrs	r3, r2
 80096f4:	61bb      	str	r3, [r7, #24]
 80096f6:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 80096fa:	69bb      	ldr	r3, [r7, #24]
 80096fc:	6013      	str	r3, [r2, #0]
 80096fe:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8009702:	685b      	ldr	r3, [r3, #4]
 8009704:	61bb      	str	r3, [r7, #24]
 8009706:	693b      	ldr	r3, [r7, #16]
 8009708:	43db      	mvns	r3, r3
 800970a:	69ba      	ldr	r2, [r7, #24]
 800970c:	4013      	ands	r3, r2
 800970e:	61bb      	str	r3, [r7, #24]
 8009710:	683b      	ldr	r3, [r7, #0]
 8009712:	685b      	ldr	r3, [r3, #4]
 8009714:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8009718:	2b00      	cmp	r3, #0
 800971a:	d003      	beq.n	8009724 <HAL_GPIO_Init+0x2cc>
 800971c:	69ba      	ldr	r2, [r7, #24]
 800971e:	693b      	ldr	r3, [r7, #16]
 8009720:	4313      	orrs	r3, r2
 8009722:	61bb      	str	r3, [r7, #24]
 8009724:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8009728:	69bb      	ldr	r3, [r7, #24]
 800972a:	6053      	str	r3, [r2, #4]
 800972c:	697b      	ldr	r3, [r7, #20]
 800972e:	685b      	ldr	r3, [r3, #4]
 8009730:	61bb      	str	r3, [r7, #24]
 8009732:	693b      	ldr	r3, [r7, #16]
 8009734:	43db      	mvns	r3, r3
 8009736:	69ba      	ldr	r2, [r7, #24]
 8009738:	4013      	ands	r3, r2
 800973a:	61bb      	str	r3, [r7, #24]
 800973c:	683b      	ldr	r3, [r7, #0]
 800973e:	685b      	ldr	r3, [r3, #4]
 8009740:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8009744:	2b00      	cmp	r3, #0
 8009746:	d003      	beq.n	8009750 <HAL_GPIO_Init+0x2f8>
 8009748:	69ba      	ldr	r2, [r7, #24]
 800974a:	693b      	ldr	r3, [r7, #16]
 800974c:	4313      	orrs	r3, r2
 800974e:	61bb      	str	r3, [r7, #24]
 8009750:	697b      	ldr	r3, [r7, #20]
 8009752:	69ba      	ldr	r2, [r7, #24]
 8009754:	605a      	str	r2, [r3, #4]
 8009756:	697b      	ldr	r3, [r7, #20]
 8009758:	681b      	ldr	r3, [r3, #0]
 800975a:	61bb      	str	r3, [r7, #24]
 800975c:	693b      	ldr	r3, [r7, #16]
 800975e:	43db      	mvns	r3, r3
 8009760:	69ba      	ldr	r2, [r7, #24]
 8009762:	4013      	ands	r3, r2
 8009764:	61bb      	str	r3, [r7, #24]
 8009766:	683b      	ldr	r3, [r7, #0]
 8009768:	685b      	ldr	r3, [r3, #4]
 800976a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800976e:	2b00      	cmp	r3, #0
 8009770:	d003      	beq.n	800977a <HAL_GPIO_Init+0x322>
 8009772:	69ba      	ldr	r2, [r7, #24]
 8009774:	693b      	ldr	r3, [r7, #16]
 8009776:	4313      	orrs	r3, r2
 8009778:	61bb      	str	r3, [r7, #24]
 800977a:	697b      	ldr	r3, [r7, #20]
 800977c:	69ba      	ldr	r2, [r7, #24]
 800977e:	601a      	str	r2, [r3, #0]
 8009780:	69fb      	ldr	r3, [r7, #28]
 8009782:	3301      	adds	r3, #1
 8009784:	61fb      	str	r3, [r7, #28]
 8009786:	683b      	ldr	r3, [r7, #0]
 8009788:	681a      	ldr	r2, [r3, #0]
 800978a:	69fb      	ldr	r3, [r7, #28]
 800978c:	fa22 f303 	lsr.w	r3, r2, r3
 8009790:	2b00      	cmp	r3, #0
 8009792:	f47f ae6b 	bne.w	800946c <HAL_GPIO_Init+0x14>
 8009796:	bf00      	nop
 8009798:	bf00      	nop
 800979a:	3724      	adds	r7, #36	@ 0x24
 800979c:	46bd      	mov	sp, r7
 800979e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097a2:	4770      	bx	lr
 80097a4:	58000400 	.word	0x58000400

080097a8 <HAL_GPIO_ReadPin>:
 80097a8:	b480      	push	{r7}
 80097aa:	b085      	sub	sp, #20
 80097ac:	af00      	add	r7, sp, #0
 80097ae:	6078      	str	r0, [r7, #4]
 80097b0:	460b      	mov	r3, r1
 80097b2:	807b      	strh	r3, [r7, #2]
 80097b4:	687b      	ldr	r3, [r7, #4]
 80097b6:	691a      	ldr	r2, [r3, #16]
 80097b8:	887b      	ldrh	r3, [r7, #2]
 80097ba:	4013      	ands	r3, r2
 80097bc:	2b00      	cmp	r3, #0
 80097be:	d002      	beq.n	80097c6 <HAL_GPIO_ReadPin+0x1e>
 80097c0:	2301      	movs	r3, #1
 80097c2:	73fb      	strb	r3, [r7, #15]
 80097c4:	e001      	b.n	80097ca <HAL_GPIO_ReadPin+0x22>
 80097c6:	2300      	movs	r3, #0
 80097c8:	73fb      	strb	r3, [r7, #15]
 80097ca:	7bfb      	ldrb	r3, [r7, #15]
 80097cc:	4618      	mov	r0, r3
 80097ce:	3714      	adds	r7, #20
 80097d0:	46bd      	mov	sp, r7
 80097d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097d6:	4770      	bx	lr

080097d8 <HAL_GPIO_WritePin>:
 80097d8:	b480      	push	{r7}
 80097da:	b083      	sub	sp, #12
 80097dc:	af00      	add	r7, sp, #0
 80097de:	6078      	str	r0, [r7, #4]
 80097e0:	460b      	mov	r3, r1
 80097e2:	807b      	strh	r3, [r7, #2]
 80097e4:	4613      	mov	r3, r2
 80097e6:	707b      	strb	r3, [r7, #1]
 80097e8:	787b      	ldrb	r3, [r7, #1]
 80097ea:	2b00      	cmp	r3, #0
 80097ec:	d003      	beq.n	80097f6 <HAL_GPIO_WritePin+0x1e>
 80097ee:	887a      	ldrh	r2, [r7, #2]
 80097f0:	687b      	ldr	r3, [r7, #4]
 80097f2:	619a      	str	r2, [r3, #24]
 80097f4:	e003      	b.n	80097fe <HAL_GPIO_WritePin+0x26>
 80097f6:	887b      	ldrh	r3, [r7, #2]
 80097f8:	041a      	lsls	r2, r3, #16
 80097fa:	687b      	ldr	r3, [r7, #4]
 80097fc:	619a      	str	r2, [r3, #24]
 80097fe:	bf00      	nop
 8009800:	370c      	adds	r7, #12
 8009802:	46bd      	mov	sp, r7
 8009804:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009808:	4770      	bx	lr
	...

0800980c <HAL_I2C_Init>:
 800980c:	b580      	push	{r7, lr}
 800980e:	b082      	sub	sp, #8
 8009810:	af00      	add	r7, sp, #0
 8009812:	6078      	str	r0, [r7, #4]
 8009814:	687b      	ldr	r3, [r7, #4]
 8009816:	2b00      	cmp	r3, #0
 8009818:	d101      	bne.n	800981e <HAL_I2C_Init+0x12>
 800981a:	2301      	movs	r3, #1
 800981c:	e08b      	b.n	8009936 <HAL_I2C_Init+0x12a>
 800981e:	687b      	ldr	r3, [r7, #4]
 8009820:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8009824:	b2db      	uxtb	r3, r3
 8009826:	2b00      	cmp	r3, #0
 8009828:	d106      	bne.n	8009838 <HAL_I2C_Init+0x2c>
 800982a:	687b      	ldr	r3, [r7, #4]
 800982c:	2200      	movs	r2, #0
 800982e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8009832:	6878      	ldr	r0, [r7, #4]
 8009834:	f7f8 fa5a 	bl	8001cec <HAL_I2C_MspInit>
 8009838:	687b      	ldr	r3, [r7, #4]
 800983a:	2224      	movs	r2, #36	@ 0x24
 800983c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8009840:	687b      	ldr	r3, [r7, #4]
 8009842:	681b      	ldr	r3, [r3, #0]
 8009844:	681a      	ldr	r2, [r3, #0]
 8009846:	687b      	ldr	r3, [r7, #4]
 8009848:	681b      	ldr	r3, [r3, #0]
 800984a:	f022 0201 	bic.w	r2, r2, #1
 800984e:	601a      	str	r2, [r3, #0]
 8009850:	687b      	ldr	r3, [r7, #4]
 8009852:	685a      	ldr	r2, [r3, #4]
 8009854:	687b      	ldr	r3, [r7, #4]
 8009856:	681b      	ldr	r3, [r3, #0]
 8009858:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800985c:	611a      	str	r2, [r3, #16]
 800985e:	687b      	ldr	r3, [r7, #4]
 8009860:	681b      	ldr	r3, [r3, #0]
 8009862:	689a      	ldr	r2, [r3, #8]
 8009864:	687b      	ldr	r3, [r7, #4]
 8009866:	681b      	ldr	r3, [r3, #0]
 8009868:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800986c:	609a      	str	r2, [r3, #8]
 800986e:	687b      	ldr	r3, [r7, #4]
 8009870:	68db      	ldr	r3, [r3, #12]
 8009872:	2b01      	cmp	r3, #1
 8009874:	d107      	bne.n	8009886 <HAL_I2C_Init+0x7a>
 8009876:	687b      	ldr	r3, [r7, #4]
 8009878:	689a      	ldr	r2, [r3, #8]
 800987a:	687b      	ldr	r3, [r7, #4]
 800987c:	681b      	ldr	r3, [r3, #0]
 800987e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8009882:	609a      	str	r2, [r3, #8]
 8009884:	e006      	b.n	8009894 <HAL_I2C_Init+0x88>
 8009886:	687b      	ldr	r3, [r7, #4]
 8009888:	689a      	ldr	r2, [r3, #8]
 800988a:	687b      	ldr	r3, [r7, #4]
 800988c:	681b      	ldr	r3, [r3, #0]
 800988e:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 8009892:	609a      	str	r2, [r3, #8]
 8009894:	687b      	ldr	r3, [r7, #4]
 8009896:	68db      	ldr	r3, [r3, #12]
 8009898:	2b02      	cmp	r3, #2
 800989a:	d108      	bne.n	80098ae <HAL_I2C_Init+0xa2>
 800989c:	687b      	ldr	r3, [r7, #4]
 800989e:	681b      	ldr	r3, [r3, #0]
 80098a0:	685a      	ldr	r2, [r3, #4]
 80098a2:	687b      	ldr	r3, [r7, #4]
 80098a4:	681b      	ldr	r3, [r3, #0]
 80098a6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80098aa:	605a      	str	r2, [r3, #4]
 80098ac:	e007      	b.n	80098be <HAL_I2C_Init+0xb2>
 80098ae:	687b      	ldr	r3, [r7, #4]
 80098b0:	681b      	ldr	r3, [r3, #0]
 80098b2:	685a      	ldr	r2, [r3, #4]
 80098b4:	687b      	ldr	r3, [r7, #4]
 80098b6:	681b      	ldr	r3, [r3, #0]
 80098b8:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80098bc:	605a      	str	r2, [r3, #4]
 80098be:	687b      	ldr	r3, [r7, #4]
 80098c0:	681b      	ldr	r3, [r3, #0]
 80098c2:	6859      	ldr	r1, [r3, #4]
 80098c4:	687b      	ldr	r3, [r7, #4]
 80098c6:	681a      	ldr	r2, [r3, #0]
 80098c8:	4b1d      	ldr	r3, [pc, #116]	@ (8009940 <HAL_I2C_Init+0x134>)
 80098ca:	430b      	orrs	r3, r1
 80098cc:	6053      	str	r3, [r2, #4]
 80098ce:	687b      	ldr	r3, [r7, #4]
 80098d0:	681b      	ldr	r3, [r3, #0]
 80098d2:	68da      	ldr	r2, [r3, #12]
 80098d4:	687b      	ldr	r3, [r7, #4]
 80098d6:	681b      	ldr	r3, [r3, #0]
 80098d8:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80098dc:	60da      	str	r2, [r3, #12]
 80098de:	687b      	ldr	r3, [r7, #4]
 80098e0:	691a      	ldr	r2, [r3, #16]
 80098e2:	687b      	ldr	r3, [r7, #4]
 80098e4:	695b      	ldr	r3, [r3, #20]
 80098e6:	ea42 0103 	orr.w	r1, r2, r3
 80098ea:	687b      	ldr	r3, [r7, #4]
 80098ec:	699b      	ldr	r3, [r3, #24]
 80098ee:	021a      	lsls	r2, r3, #8
 80098f0:	687b      	ldr	r3, [r7, #4]
 80098f2:	681b      	ldr	r3, [r3, #0]
 80098f4:	430a      	orrs	r2, r1
 80098f6:	60da      	str	r2, [r3, #12]
 80098f8:	687b      	ldr	r3, [r7, #4]
 80098fa:	69d9      	ldr	r1, [r3, #28]
 80098fc:	687b      	ldr	r3, [r7, #4]
 80098fe:	6a1a      	ldr	r2, [r3, #32]
 8009900:	687b      	ldr	r3, [r7, #4]
 8009902:	681b      	ldr	r3, [r3, #0]
 8009904:	430a      	orrs	r2, r1
 8009906:	601a      	str	r2, [r3, #0]
 8009908:	687b      	ldr	r3, [r7, #4]
 800990a:	681b      	ldr	r3, [r3, #0]
 800990c:	681a      	ldr	r2, [r3, #0]
 800990e:	687b      	ldr	r3, [r7, #4]
 8009910:	681b      	ldr	r3, [r3, #0]
 8009912:	f042 0201 	orr.w	r2, r2, #1
 8009916:	601a      	str	r2, [r3, #0]
 8009918:	687b      	ldr	r3, [r7, #4]
 800991a:	2200      	movs	r2, #0
 800991c:	645a      	str	r2, [r3, #68]	@ 0x44
 800991e:	687b      	ldr	r3, [r7, #4]
 8009920:	2220      	movs	r2, #32
 8009922:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8009926:	687b      	ldr	r3, [r7, #4]
 8009928:	2200      	movs	r2, #0
 800992a:	631a      	str	r2, [r3, #48]	@ 0x30
 800992c:	687b      	ldr	r3, [r7, #4]
 800992e:	2200      	movs	r2, #0
 8009930:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8009934:	2300      	movs	r3, #0
 8009936:	4618      	mov	r0, r3
 8009938:	3708      	adds	r7, #8
 800993a:	46bd      	mov	sp, r7
 800993c:	bd80      	pop	{r7, pc}
 800993e:	bf00      	nop
 8009940:	02008000 	.word	0x02008000

08009944 <HAL_I2CEx_ConfigAnalogFilter>:
 8009944:	b480      	push	{r7}
 8009946:	b083      	sub	sp, #12
 8009948:	af00      	add	r7, sp, #0
 800994a:	6078      	str	r0, [r7, #4]
 800994c:	6039      	str	r1, [r7, #0]
 800994e:	687b      	ldr	r3, [r7, #4]
 8009950:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8009954:	b2db      	uxtb	r3, r3
 8009956:	2b20      	cmp	r3, #32
 8009958:	d138      	bne.n	80099cc <HAL_I2CEx_ConfigAnalogFilter+0x88>
 800995a:	687b      	ldr	r3, [r7, #4]
 800995c:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8009960:	2b01      	cmp	r3, #1
 8009962:	d101      	bne.n	8009968 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8009964:	2302      	movs	r3, #2
 8009966:	e032      	b.n	80099ce <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8009968:	687b      	ldr	r3, [r7, #4]
 800996a:	2201      	movs	r2, #1
 800996c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8009970:	687b      	ldr	r3, [r7, #4]
 8009972:	2224      	movs	r2, #36	@ 0x24
 8009974:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8009978:	687b      	ldr	r3, [r7, #4]
 800997a:	681b      	ldr	r3, [r3, #0]
 800997c:	681a      	ldr	r2, [r3, #0]
 800997e:	687b      	ldr	r3, [r7, #4]
 8009980:	681b      	ldr	r3, [r3, #0]
 8009982:	f022 0201 	bic.w	r2, r2, #1
 8009986:	601a      	str	r2, [r3, #0]
 8009988:	687b      	ldr	r3, [r7, #4]
 800998a:	681b      	ldr	r3, [r3, #0]
 800998c:	681a      	ldr	r2, [r3, #0]
 800998e:	687b      	ldr	r3, [r7, #4]
 8009990:	681b      	ldr	r3, [r3, #0]
 8009992:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8009996:	601a      	str	r2, [r3, #0]
 8009998:	687b      	ldr	r3, [r7, #4]
 800999a:	681b      	ldr	r3, [r3, #0]
 800999c:	6819      	ldr	r1, [r3, #0]
 800999e:	687b      	ldr	r3, [r7, #4]
 80099a0:	681b      	ldr	r3, [r3, #0]
 80099a2:	683a      	ldr	r2, [r7, #0]
 80099a4:	430a      	orrs	r2, r1
 80099a6:	601a      	str	r2, [r3, #0]
 80099a8:	687b      	ldr	r3, [r7, #4]
 80099aa:	681b      	ldr	r3, [r3, #0]
 80099ac:	681a      	ldr	r2, [r3, #0]
 80099ae:	687b      	ldr	r3, [r7, #4]
 80099b0:	681b      	ldr	r3, [r3, #0]
 80099b2:	f042 0201 	orr.w	r2, r2, #1
 80099b6:	601a      	str	r2, [r3, #0]
 80099b8:	687b      	ldr	r3, [r7, #4]
 80099ba:	2220      	movs	r2, #32
 80099bc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80099c0:	687b      	ldr	r3, [r7, #4]
 80099c2:	2200      	movs	r2, #0
 80099c4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80099c8:	2300      	movs	r3, #0
 80099ca:	e000      	b.n	80099ce <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80099cc:	2302      	movs	r3, #2
 80099ce:	4618      	mov	r0, r3
 80099d0:	370c      	adds	r7, #12
 80099d2:	46bd      	mov	sp, r7
 80099d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099d8:	4770      	bx	lr

080099da <HAL_I2CEx_ConfigDigitalFilter>:
 80099da:	b480      	push	{r7}
 80099dc:	b085      	sub	sp, #20
 80099de:	af00      	add	r7, sp, #0
 80099e0:	6078      	str	r0, [r7, #4]
 80099e2:	6039      	str	r1, [r7, #0]
 80099e4:	687b      	ldr	r3, [r7, #4]
 80099e6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80099ea:	b2db      	uxtb	r3, r3
 80099ec:	2b20      	cmp	r3, #32
 80099ee:	d139      	bne.n	8009a64 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 80099f0:	687b      	ldr	r3, [r7, #4]
 80099f2:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80099f6:	2b01      	cmp	r3, #1
 80099f8:	d101      	bne.n	80099fe <HAL_I2CEx_ConfigDigitalFilter+0x24>
 80099fa:	2302      	movs	r3, #2
 80099fc:	e033      	b.n	8009a66 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 80099fe:	687b      	ldr	r3, [r7, #4]
 8009a00:	2201      	movs	r2, #1
 8009a02:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8009a06:	687b      	ldr	r3, [r7, #4]
 8009a08:	2224      	movs	r2, #36	@ 0x24
 8009a0a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8009a0e:	687b      	ldr	r3, [r7, #4]
 8009a10:	681b      	ldr	r3, [r3, #0]
 8009a12:	681a      	ldr	r2, [r3, #0]
 8009a14:	687b      	ldr	r3, [r7, #4]
 8009a16:	681b      	ldr	r3, [r3, #0]
 8009a18:	f022 0201 	bic.w	r2, r2, #1
 8009a1c:	601a      	str	r2, [r3, #0]
 8009a1e:	687b      	ldr	r3, [r7, #4]
 8009a20:	681b      	ldr	r3, [r3, #0]
 8009a22:	681b      	ldr	r3, [r3, #0]
 8009a24:	60fb      	str	r3, [r7, #12]
 8009a26:	68fb      	ldr	r3, [r7, #12]
 8009a28:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8009a2c:	60fb      	str	r3, [r7, #12]
 8009a2e:	683b      	ldr	r3, [r7, #0]
 8009a30:	021b      	lsls	r3, r3, #8
 8009a32:	68fa      	ldr	r2, [r7, #12]
 8009a34:	4313      	orrs	r3, r2
 8009a36:	60fb      	str	r3, [r7, #12]
 8009a38:	687b      	ldr	r3, [r7, #4]
 8009a3a:	681b      	ldr	r3, [r3, #0]
 8009a3c:	68fa      	ldr	r2, [r7, #12]
 8009a3e:	601a      	str	r2, [r3, #0]
 8009a40:	687b      	ldr	r3, [r7, #4]
 8009a42:	681b      	ldr	r3, [r3, #0]
 8009a44:	681a      	ldr	r2, [r3, #0]
 8009a46:	687b      	ldr	r3, [r7, #4]
 8009a48:	681b      	ldr	r3, [r3, #0]
 8009a4a:	f042 0201 	orr.w	r2, r2, #1
 8009a4e:	601a      	str	r2, [r3, #0]
 8009a50:	687b      	ldr	r3, [r7, #4]
 8009a52:	2220      	movs	r2, #32
 8009a54:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8009a58:	687b      	ldr	r3, [r7, #4]
 8009a5a:	2200      	movs	r2, #0
 8009a5c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8009a60:	2300      	movs	r3, #0
 8009a62:	e000      	b.n	8009a66 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8009a64:	2302      	movs	r3, #2
 8009a66:	4618      	mov	r0, r3
 8009a68:	3714      	adds	r7, #20
 8009a6a:	46bd      	mov	sp, r7
 8009a6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a70:	4770      	bx	lr

08009a72 <HAL_PCD_Init>:
 8009a72:	b580      	push	{r7, lr}
 8009a74:	b086      	sub	sp, #24
 8009a76:	af02      	add	r7, sp, #8
 8009a78:	6078      	str	r0, [r7, #4]
 8009a7a:	687b      	ldr	r3, [r7, #4]
 8009a7c:	2b00      	cmp	r3, #0
 8009a7e:	d101      	bne.n	8009a84 <HAL_PCD_Init+0x12>
 8009a80:	2301      	movs	r3, #1
 8009a82:	e0fe      	b.n	8009c82 <HAL_PCD_Init+0x210>
 8009a84:	687b      	ldr	r3, [r7, #4]
 8009a86:	f893 3495 	ldrb.w	r3, [r3, #1173]	@ 0x495
 8009a8a:	b2db      	uxtb	r3, r3
 8009a8c:	2b00      	cmp	r3, #0
 8009a8e:	d106      	bne.n	8009a9e <HAL_PCD_Init+0x2c>
 8009a90:	687b      	ldr	r3, [r7, #4]
 8009a92:	2200      	movs	r2, #0
 8009a94:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8009a98:	6878      	ldr	r0, [r7, #4]
 8009a9a:	f00b fd69 	bl	8015570 <HAL_PCD_MspInit>
 8009a9e:	687b      	ldr	r3, [r7, #4]
 8009aa0:	2203      	movs	r2, #3
 8009aa2:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8009aa6:	687b      	ldr	r3, [r7, #4]
 8009aa8:	681b      	ldr	r3, [r3, #0]
 8009aaa:	4618      	mov	r0, r3
 8009aac:	f008 f925 	bl	8011cfa <USB_DisableGlobalInt>
 8009ab0:	687b      	ldr	r3, [r7, #4]
 8009ab2:	6818      	ldr	r0, [r3, #0]
 8009ab4:	687b      	ldr	r3, [r7, #4]
 8009ab6:	7c1a      	ldrb	r2, [r3, #16]
 8009ab8:	f88d 2000 	strb.w	r2, [sp]
 8009abc:	3304      	adds	r3, #4
 8009abe:	cb0e      	ldmia	r3, {r1, r2, r3}
 8009ac0:	f007 fff6 	bl	8011ab0 <USB_CoreInit>
 8009ac4:	4603      	mov	r3, r0
 8009ac6:	2b00      	cmp	r3, #0
 8009ac8:	d005      	beq.n	8009ad6 <HAL_PCD_Init+0x64>
 8009aca:	687b      	ldr	r3, [r7, #4]
 8009acc:	2202      	movs	r2, #2
 8009ace:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8009ad2:	2301      	movs	r3, #1
 8009ad4:	e0d5      	b.n	8009c82 <HAL_PCD_Init+0x210>
 8009ad6:	687b      	ldr	r3, [r7, #4]
 8009ad8:	681b      	ldr	r3, [r3, #0]
 8009ada:	2100      	movs	r1, #0
 8009adc:	4618      	mov	r0, r3
 8009ade:	f008 f91d 	bl	8011d1c <USB_SetCurrentMode>
 8009ae2:	4603      	mov	r3, r0
 8009ae4:	2b00      	cmp	r3, #0
 8009ae6:	d005      	beq.n	8009af4 <HAL_PCD_Init+0x82>
 8009ae8:	687b      	ldr	r3, [r7, #4]
 8009aea:	2202      	movs	r2, #2
 8009aec:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8009af0:	2301      	movs	r3, #1
 8009af2:	e0c6      	b.n	8009c82 <HAL_PCD_Init+0x210>
 8009af4:	2300      	movs	r3, #0
 8009af6:	73fb      	strb	r3, [r7, #15]
 8009af8:	e04a      	b.n	8009b90 <HAL_PCD_Init+0x11e>
 8009afa:	7bfa      	ldrb	r2, [r7, #15]
 8009afc:	6879      	ldr	r1, [r7, #4]
 8009afe:	4613      	mov	r3, r2
 8009b00:	00db      	lsls	r3, r3, #3
 8009b02:	4413      	add	r3, r2
 8009b04:	009b      	lsls	r3, r3, #2
 8009b06:	440b      	add	r3, r1
 8009b08:	3315      	adds	r3, #21
 8009b0a:	2201      	movs	r2, #1
 8009b0c:	701a      	strb	r2, [r3, #0]
 8009b0e:	7bfa      	ldrb	r2, [r7, #15]
 8009b10:	6879      	ldr	r1, [r7, #4]
 8009b12:	4613      	mov	r3, r2
 8009b14:	00db      	lsls	r3, r3, #3
 8009b16:	4413      	add	r3, r2
 8009b18:	009b      	lsls	r3, r3, #2
 8009b1a:	440b      	add	r3, r1
 8009b1c:	3314      	adds	r3, #20
 8009b1e:	7bfa      	ldrb	r2, [r7, #15]
 8009b20:	701a      	strb	r2, [r3, #0]
 8009b22:	7bfa      	ldrb	r2, [r7, #15]
 8009b24:	7bfb      	ldrb	r3, [r7, #15]
 8009b26:	b298      	uxth	r0, r3
 8009b28:	6879      	ldr	r1, [r7, #4]
 8009b2a:	4613      	mov	r3, r2
 8009b2c:	00db      	lsls	r3, r3, #3
 8009b2e:	4413      	add	r3, r2
 8009b30:	009b      	lsls	r3, r3, #2
 8009b32:	440b      	add	r3, r1
 8009b34:	332e      	adds	r3, #46	@ 0x2e
 8009b36:	4602      	mov	r2, r0
 8009b38:	801a      	strh	r2, [r3, #0]
 8009b3a:	7bfa      	ldrb	r2, [r7, #15]
 8009b3c:	6879      	ldr	r1, [r7, #4]
 8009b3e:	4613      	mov	r3, r2
 8009b40:	00db      	lsls	r3, r3, #3
 8009b42:	4413      	add	r3, r2
 8009b44:	009b      	lsls	r3, r3, #2
 8009b46:	440b      	add	r3, r1
 8009b48:	3318      	adds	r3, #24
 8009b4a:	2200      	movs	r2, #0
 8009b4c:	701a      	strb	r2, [r3, #0]
 8009b4e:	7bfa      	ldrb	r2, [r7, #15]
 8009b50:	6879      	ldr	r1, [r7, #4]
 8009b52:	4613      	mov	r3, r2
 8009b54:	00db      	lsls	r3, r3, #3
 8009b56:	4413      	add	r3, r2
 8009b58:	009b      	lsls	r3, r3, #2
 8009b5a:	440b      	add	r3, r1
 8009b5c:	331c      	adds	r3, #28
 8009b5e:	2200      	movs	r2, #0
 8009b60:	601a      	str	r2, [r3, #0]
 8009b62:	7bfa      	ldrb	r2, [r7, #15]
 8009b64:	6879      	ldr	r1, [r7, #4]
 8009b66:	4613      	mov	r3, r2
 8009b68:	00db      	lsls	r3, r3, #3
 8009b6a:	4413      	add	r3, r2
 8009b6c:	009b      	lsls	r3, r3, #2
 8009b6e:	440b      	add	r3, r1
 8009b70:	3320      	adds	r3, #32
 8009b72:	2200      	movs	r2, #0
 8009b74:	601a      	str	r2, [r3, #0]
 8009b76:	7bfa      	ldrb	r2, [r7, #15]
 8009b78:	6879      	ldr	r1, [r7, #4]
 8009b7a:	4613      	mov	r3, r2
 8009b7c:	00db      	lsls	r3, r3, #3
 8009b7e:	4413      	add	r3, r2
 8009b80:	009b      	lsls	r3, r3, #2
 8009b82:	440b      	add	r3, r1
 8009b84:	3324      	adds	r3, #36	@ 0x24
 8009b86:	2200      	movs	r2, #0
 8009b88:	601a      	str	r2, [r3, #0]
 8009b8a:	7bfb      	ldrb	r3, [r7, #15]
 8009b8c:	3301      	adds	r3, #1
 8009b8e:	73fb      	strb	r3, [r7, #15]
 8009b90:	687b      	ldr	r3, [r7, #4]
 8009b92:	791b      	ldrb	r3, [r3, #4]
 8009b94:	7bfa      	ldrb	r2, [r7, #15]
 8009b96:	429a      	cmp	r2, r3
 8009b98:	d3af      	bcc.n	8009afa <HAL_PCD_Init+0x88>
 8009b9a:	2300      	movs	r3, #0
 8009b9c:	73fb      	strb	r3, [r7, #15]
 8009b9e:	e044      	b.n	8009c2a <HAL_PCD_Init+0x1b8>
 8009ba0:	7bfa      	ldrb	r2, [r7, #15]
 8009ba2:	6879      	ldr	r1, [r7, #4]
 8009ba4:	4613      	mov	r3, r2
 8009ba6:	00db      	lsls	r3, r3, #3
 8009ba8:	4413      	add	r3, r2
 8009baa:	009b      	lsls	r3, r3, #2
 8009bac:	440b      	add	r3, r1
 8009bae:	f203 2355 	addw	r3, r3, #597	@ 0x255
 8009bb2:	2200      	movs	r2, #0
 8009bb4:	701a      	strb	r2, [r3, #0]
 8009bb6:	7bfa      	ldrb	r2, [r7, #15]
 8009bb8:	6879      	ldr	r1, [r7, #4]
 8009bba:	4613      	mov	r3, r2
 8009bbc:	00db      	lsls	r3, r3, #3
 8009bbe:	4413      	add	r3, r2
 8009bc0:	009b      	lsls	r3, r3, #2
 8009bc2:	440b      	add	r3, r1
 8009bc4:	f503 7315 	add.w	r3, r3, #596	@ 0x254
 8009bc8:	7bfa      	ldrb	r2, [r7, #15]
 8009bca:	701a      	strb	r2, [r3, #0]
 8009bcc:	7bfa      	ldrb	r2, [r7, #15]
 8009bce:	6879      	ldr	r1, [r7, #4]
 8009bd0:	4613      	mov	r3, r2
 8009bd2:	00db      	lsls	r3, r3, #3
 8009bd4:	4413      	add	r3, r2
 8009bd6:	009b      	lsls	r3, r3, #2
 8009bd8:	440b      	add	r3, r1
 8009bda:	f503 7316 	add.w	r3, r3, #600	@ 0x258
 8009bde:	2200      	movs	r2, #0
 8009be0:	701a      	strb	r2, [r3, #0]
 8009be2:	7bfa      	ldrb	r2, [r7, #15]
 8009be4:	6879      	ldr	r1, [r7, #4]
 8009be6:	4613      	mov	r3, r2
 8009be8:	00db      	lsls	r3, r3, #3
 8009bea:	4413      	add	r3, r2
 8009bec:	009b      	lsls	r3, r3, #2
 8009bee:	440b      	add	r3, r1
 8009bf0:	f503 7317 	add.w	r3, r3, #604	@ 0x25c
 8009bf4:	2200      	movs	r2, #0
 8009bf6:	601a      	str	r2, [r3, #0]
 8009bf8:	7bfa      	ldrb	r2, [r7, #15]
 8009bfa:	6879      	ldr	r1, [r7, #4]
 8009bfc:	4613      	mov	r3, r2
 8009bfe:	00db      	lsls	r3, r3, #3
 8009c00:	4413      	add	r3, r2
 8009c02:	009b      	lsls	r3, r3, #2
 8009c04:	440b      	add	r3, r1
 8009c06:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8009c0a:	2200      	movs	r2, #0
 8009c0c:	601a      	str	r2, [r3, #0]
 8009c0e:	7bfa      	ldrb	r2, [r7, #15]
 8009c10:	6879      	ldr	r1, [r7, #4]
 8009c12:	4613      	mov	r3, r2
 8009c14:	00db      	lsls	r3, r3, #3
 8009c16:	4413      	add	r3, r2
 8009c18:	009b      	lsls	r3, r3, #2
 8009c1a:	440b      	add	r3, r1
 8009c1c:	f503 7319 	add.w	r3, r3, #612	@ 0x264
 8009c20:	2200      	movs	r2, #0
 8009c22:	601a      	str	r2, [r3, #0]
 8009c24:	7bfb      	ldrb	r3, [r7, #15]
 8009c26:	3301      	adds	r3, #1
 8009c28:	73fb      	strb	r3, [r7, #15]
 8009c2a:	687b      	ldr	r3, [r7, #4]
 8009c2c:	791b      	ldrb	r3, [r3, #4]
 8009c2e:	7bfa      	ldrb	r2, [r7, #15]
 8009c30:	429a      	cmp	r2, r3
 8009c32:	d3b5      	bcc.n	8009ba0 <HAL_PCD_Init+0x12e>
 8009c34:	687b      	ldr	r3, [r7, #4]
 8009c36:	6818      	ldr	r0, [r3, #0]
 8009c38:	687b      	ldr	r3, [r7, #4]
 8009c3a:	7c1a      	ldrb	r2, [r3, #16]
 8009c3c:	f88d 2000 	strb.w	r2, [sp]
 8009c40:	3304      	adds	r3, #4
 8009c42:	cb0e      	ldmia	r3, {r1, r2, r3}
 8009c44:	f008 f8b6 	bl	8011db4 <USB_DevInit>
 8009c48:	4603      	mov	r3, r0
 8009c4a:	2b00      	cmp	r3, #0
 8009c4c:	d005      	beq.n	8009c5a <HAL_PCD_Init+0x1e8>
 8009c4e:	687b      	ldr	r3, [r7, #4]
 8009c50:	2202      	movs	r2, #2
 8009c52:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8009c56:	2301      	movs	r3, #1
 8009c58:	e013      	b.n	8009c82 <HAL_PCD_Init+0x210>
 8009c5a:	687b      	ldr	r3, [r7, #4]
 8009c5c:	2200      	movs	r2, #0
 8009c5e:	745a      	strb	r2, [r3, #17]
 8009c60:	687b      	ldr	r3, [r7, #4]
 8009c62:	2201      	movs	r2, #1
 8009c64:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8009c68:	687b      	ldr	r3, [r7, #4]
 8009c6a:	7b1b      	ldrb	r3, [r3, #12]
 8009c6c:	2b01      	cmp	r3, #1
 8009c6e:	d102      	bne.n	8009c76 <HAL_PCD_Init+0x204>
 8009c70:	6878      	ldr	r0, [r7, #4]
 8009c72:	f001 f96d 	bl	800af50 <HAL_PCDEx_ActivateLPM>
 8009c76:	687b      	ldr	r3, [r7, #4]
 8009c78:	681b      	ldr	r3, [r3, #0]
 8009c7a:	4618      	mov	r0, r3
 8009c7c:	f009 f8f5 	bl	8012e6a <USB_DevDisconnect>
 8009c80:	2300      	movs	r3, #0
 8009c82:	4618      	mov	r0, r3
 8009c84:	3710      	adds	r7, #16
 8009c86:	46bd      	mov	sp, r7
 8009c88:	bd80      	pop	{r7, pc}

08009c8a <HAL_PCD_Start>:
 8009c8a:	b580      	push	{r7, lr}
 8009c8c:	b084      	sub	sp, #16
 8009c8e:	af00      	add	r7, sp, #0
 8009c90:	6078      	str	r0, [r7, #4]
 8009c92:	687b      	ldr	r3, [r7, #4]
 8009c94:	681b      	ldr	r3, [r3, #0]
 8009c96:	60fb      	str	r3, [r7, #12]
 8009c98:	687b      	ldr	r3, [r7, #4]
 8009c9a:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 8009c9e:	2b01      	cmp	r3, #1
 8009ca0:	d101      	bne.n	8009ca6 <HAL_PCD_Start+0x1c>
 8009ca2:	2302      	movs	r3, #2
 8009ca4:	e022      	b.n	8009cec <HAL_PCD_Start+0x62>
 8009ca6:	687b      	ldr	r3, [r7, #4]
 8009ca8:	2201      	movs	r2, #1
 8009caa:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8009cae:	68fb      	ldr	r3, [r7, #12]
 8009cb0:	68db      	ldr	r3, [r3, #12]
 8009cb2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009cb6:	2b00      	cmp	r3, #0
 8009cb8:	d009      	beq.n	8009cce <HAL_PCD_Start+0x44>
 8009cba:	687b      	ldr	r3, [r7, #4]
 8009cbc:	7b5b      	ldrb	r3, [r3, #13]
 8009cbe:	2b01      	cmp	r3, #1
 8009cc0:	d105      	bne.n	8009cce <HAL_PCD_Start+0x44>
 8009cc2:	68fb      	ldr	r3, [r7, #12]
 8009cc4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009cc6:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 8009cca:	68fb      	ldr	r3, [r7, #12]
 8009ccc:	639a      	str	r2, [r3, #56]	@ 0x38
 8009cce:	687b      	ldr	r3, [r7, #4]
 8009cd0:	681b      	ldr	r3, [r3, #0]
 8009cd2:	4618      	mov	r0, r3
 8009cd4:	f008 f800 	bl	8011cd8 <USB_EnableGlobalInt>
 8009cd8:	687b      	ldr	r3, [r7, #4]
 8009cda:	681b      	ldr	r3, [r3, #0]
 8009cdc:	4618      	mov	r0, r3
 8009cde:	f009 f8a3 	bl	8012e28 <USB_DevConnect>
 8009ce2:	687b      	ldr	r3, [r7, #4]
 8009ce4:	2200      	movs	r2, #0
 8009ce6:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8009cea:	2300      	movs	r3, #0
 8009cec:	4618      	mov	r0, r3
 8009cee:	3710      	adds	r7, #16
 8009cf0:	46bd      	mov	sp, r7
 8009cf2:	bd80      	pop	{r7, pc}

08009cf4 <HAL_PCD_IRQHandler>:
 8009cf4:	b590      	push	{r4, r7, lr}
 8009cf6:	b08d      	sub	sp, #52	@ 0x34
 8009cf8:	af00      	add	r7, sp, #0
 8009cfa:	6078      	str	r0, [r7, #4]
 8009cfc:	687b      	ldr	r3, [r7, #4]
 8009cfe:	681b      	ldr	r3, [r3, #0]
 8009d00:	623b      	str	r3, [r7, #32]
 8009d02:	6a3b      	ldr	r3, [r7, #32]
 8009d04:	61fb      	str	r3, [r7, #28]
 8009d06:	687b      	ldr	r3, [r7, #4]
 8009d08:	681b      	ldr	r3, [r3, #0]
 8009d0a:	4618      	mov	r0, r3
 8009d0c:	f009 f961 	bl	8012fd2 <USB_GetMode>
 8009d10:	4603      	mov	r3, r0
 8009d12:	2b00      	cmp	r3, #0
 8009d14:	f040 84b9 	bne.w	800a68a <HAL_PCD_IRQHandler+0x996>
 8009d18:	687b      	ldr	r3, [r7, #4]
 8009d1a:	681b      	ldr	r3, [r3, #0]
 8009d1c:	4618      	mov	r0, r3
 8009d1e:	f009 f8c5 	bl	8012eac <USB_ReadInterrupts>
 8009d22:	4603      	mov	r3, r0
 8009d24:	2b00      	cmp	r3, #0
 8009d26:	f000 84af 	beq.w	800a688 <HAL_PCD_IRQHandler+0x994>
 8009d2a:	69fb      	ldr	r3, [r7, #28]
 8009d2c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8009d30:	689b      	ldr	r3, [r3, #8]
 8009d32:	0a1b      	lsrs	r3, r3, #8
 8009d34:	f3c3 020d 	ubfx	r2, r3, #0, #14
 8009d38:	687b      	ldr	r3, [r7, #4]
 8009d3a:	f8c3 24d4 	str.w	r2, [r3, #1236]	@ 0x4d4
 8009d3e:	687b      	ldr	r3, [r7, #4]
 8009d40:	681b      	ldr	r3, [r3, #0]
 8009d42:	4618      	mov	r0, r3
 8009d44:	f009 f8b2 	bl	8012eac <USB_ReadInterrupts>
 8009d48:	4603      	mov	r3, r0
 8009d4a:	f003 0302 	and.w	r3, r3, #2
 8009d4e:	2b02      	cmp	r3, #2
 8009d50:	d107      	bne.n	8009d62 <HAL_PCD_IRQHandler+0x6e>
 8009d52:	687b      	ldr	r3, [r7, #4]
 8009d54:	681b      	ldr	r3, [r3, #0]
 8009d56:	695a      	ldr	r2, [r3, #20]
 8009d58:	687b      	ldr	r3, [r7, #4]
 8009d5a:	681b      	ldr	r3, [r3, #0]
 8009d5c:	f002 0202 	and.w	r2, r2, #2
 8009d60:	615a      	str	r2, [r3, #20]
 8009d62:	687b      	ldr	r3, [r7, #4]
 8009d64:	681b      	ldr	r3, [r3, #0]
 8009d66:	4618      	mov	r0, r3
 8009d68:	f009 f8a0 	bl	8012eac <USB_ReadInterrupts>
 8009d6c:	4603      	mov	r3, r0
 8009d6e:	f003 0310 	and.w	r3, r3, #16
 8009d72:	2b10      	cmp	r3, #16
 8009d74:	d161      	bne.n	8009e3a <HAL_PCD_IRQHandler+0x146>
 8009d76:	687b      	ldr	r3, [r7, #4]
 8009d78:	681b      	ldr	r3, [r3, #0]
 8009d7a:	699a      	ldr	r2, [r3, #24]
 8009d7c:	687b      	ldr	r3, [r7, #4]
 8009d7e:	681b      	ldr	r3, [r3, #0]
 8009d80:	f022 0210 	bic.w	r2, r2, #16
 8009d84:	619a      	str	r2, [r3, #24]
 8009d86:	6a3b      	ldr	r3, [r7, #32]
 8009d88:	6a1b      	ldr	r3, [r3, #32]
 8009d8a:	61bb      	str	r3, [r7, #24]
 8009d8c:	69bb      	ldr	r3, [r7, #24]
 8009d8e:	f003 020f 	and.w	r2, r3, #15
 8009d92:	4613      	mov	r3, r2
 8009d94:	00db      	lsls	r3, r3, #3
 8009d96:	4413      	add	r3, r2
 8009d98:	009b      	lsls	r3, r3, #2
 8009d9a:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 8009d9e:	687a      	ldr	r2, [r7, #4]
 8009da0:	4413      	add	r3, r2
 8009da2:	3304      	adds	r3, #4
 8009da4:	617b      	str	r3, [r7, #20]
 8009da6:	69bb      	ldr	r3, [r7, #24]
 8009da8:	0c5b      	lsrs	r3, r3, #17
 8009daa:	f003 030f 	and.w	r3, r3, #15
 8009dae:	2b02      	cmp	r3, #2
 8009db0:	d124      	bne.n	8009dfc <HAL_PCD_IRQHandler+0x108>
 8009db2:	69ba      	ldr	r2, [r7, #24]
 8009db4:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 8009db8:	4013      	ands	r3, r2
 8009dba:	2b00      	cmp	r3, #0
 8009dbc:	d035      	beq.n	8009e2a <HAL_PCD_IRQHandler+0x136>
 8009dbe:	697b      	ldr	r3, [r7, #20]
 8009dc0:	68d9      	ldr	r1, [r3, #12]
 8009dc2:	69bb      	ldr	r3, [r7, #24]
 8009dc4:	091b      	lsrs	r3, r3, #4
 8009dc6:	b29b      	uxth	r3, r3
 8009dc8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8009dcc:	b29b      	uxth	r3, r3
 8009dce:	461a      	mov	r2, r3
 8009dd0:	6a38      	ldr	r0, [r7, #32]
 8009dd2:	f008 fed7 	bl	8012b84 <USB_ReadPacket>
 8009dd6:	697b      	ldr	r3, [r7, #20]
 8009dd8:	68da      	ldr	r2, [r3, #12]
 8009dda:	69bb      	ldr	r3, [r7, #24]
 8009ddc:	091b      	lsrs	r3, r3, #4
 8009dde:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8009de2:	441a      	add	r2, r3
 8009de4:	697b      	ldr	r3, [r7, #20]
 8009de6:	60da      	str	r2, [r3, #12]
 8009de8:	697b      	ldr	r3, [r7, #20]
 8009dea:	695a      	ldr	r2, [r3, #20]
 8009dec:	69bb      	ldr	r3, [r7, #24]
 8009dee:	091b      	lsrs	r3, r3, #4
 8009df0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8009df4:	441a      	add	r2, r3
 8009df6:	697b      	ldr	r3, [r7, #20]
 8009df8:	615a      	str	r2, [r3, #20]
 8009dfa:	e016      	b.n	8009e2a <HAL_PCD_IRQHandler+0x136>
 8009dfc:	69bb      	ldr	r3, [r7, #24]
 8009dfe:	0c5b      	lsrs	r3, r3, #17
 8009e00:	f003 030f 	and.w	r3, r3, #15
 8009e04:	2b06      	cmp	r3, #6
 8009e06:	d110      	bne.n	8009e2a <HAL_PCD_IRQHandler+0x136>
 8009e08:	687b      	ldr	r3, [r7, #4]
 8009e0a:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 8009e0e:	2208      	movs	r2, #8
 8009e10:	4619      	mov	r1, r3
 8009e12:	6a38      	ldr	r0, [r7, #32]
 8009e14:	f008 feb6 	bl	8012b84 <USB_ReadPacket>
 8009e18:	697b      	ldr	r3, [r7, #20]
 8009e1a:	695a      	ldr	r2, [r3, #20]
 8009e1c:	69bb      	ldr	r3, [r7, #24]
 8009e1e:	091b      	lsrs	r3, r3, #4
 8009e20:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8009e24:	441a      	add	r2, r3
 8009e26:	697b      	ldr	r3, [r7, #20]
 8009e28:	615a      	str	r2, [r3, #20]
 8009e2a:	687b      	ldr	r3, [r7, #4]
 8009e2c:	681b      	ldr	r3, [r3, #0]
 8009e2e:	699a      	ldr	r2, [r3, #24]
 8009e30:	687b      	ldr	r3, [r7, #4]
 8009e32:	681b      	ldr	r3, [r3, #0]
 8009e34:	f042 0210 	orr.w	r2, r2, #16
 8009e38:	619a      	str	r2, [r3, #24]
 8009e3a:	687b      	ldr	r3, [r7, #4]
 8009e3c:	681b      	ldr	r3, [r3, #0]
 8009e3e:	4618      	mov	r0, r3
 8009e40:	f009 f834 	bl	8012eac <USB_ReadInterrupts>
 8009e44:	4603      	mov	r3, r0
 8009e46:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8009e4a:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8009e4e:	f040 80a7 	bne.w	8009fa0 <HAL_PCD_IRQHandler+0x2ac>
 8009e52:	2300      	movs	r3, #0
 8009e54:	627b      	str	r3, [r7, #36]	@ 0x24
 8009e56:	687b      	ldr	r3, [r7, #4]
 8009e58:	681b      	ldr	r3, [r3, #0]
 8009e5a:	4618      	mov	r0, r3
 8009e5c:	f009 f839 	bl	8012ed2 <USB_ReadDevAllOutEpInterrupt>
 8009e60:	62b8      	str	r0, [r7, #40]	@ 0x28
 8009e62:	e099      	b.n	8009f98 <HAL_PCD_IRQHandler+0x2a4>
 8009e64:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009e66:	f003 0301 	and.w	r3, r3, #1
 8009e6a:	2b00      	cmp	r3, #0
 8009e6c:	f000 808e 	beq.w	8009f8c <HAL_PCD_IRQHandler+0x298>
 8009e70:	687b      	ldr	r3, [r7, #4]
 8009e72:	681b      	ldr	r3, [r3, #0]
 8009e74:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8009e76:	b2d2      	uxtb	r2, r2
 8009e78:	4611      	mov	r1, r2
 8009e7a:	4618      	mov	r0, r3
 8009e7c:	f009 f85d 	bl	8012f3a <USB_ReadDevOutEPInterrupt>
 8009e80:	6138      	str	r0, [r7, #16]
 8009e82:	693b      	ldr	r3, [r7, #16]
 8009e84:	f003 0301 	and.w	r3, r3, #1
 8009e88:	2b00      	cmp	r3, #0
 8009e8a:	d00c      	beq.n	8009ea6 <HAL_PCD_IRQHandler+0x1b2>
 8009e8c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009e8e:	015a      	lsls	r2, r3, #5
 8009e90:	69fb      	ldr	r3, [r7, #28]
 8009e92:	4413      	add	r3, r2
 8009e94:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8009e98:	461a      	mov	r2, r3
 8009e9a:	2301      	movs	r3, #1
 8009e9c:	6093      	str	r3, [r2, #8]
 8009e9e:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8009ea0:	6878      	ldr	r0, [r7, #4]
 8009ea2:	f000 fecf 	bl	800ac44 <PCD_EP_OutXfrComplete_int>
 8009ea6:	693b      	ldr	r3, [r7, #16]
 8009ea8:	f003 0308 	and.w	r3, r3, #8
 8009eac:	2b00      	cmp	r3, #0
 8009eae:	d00c      	beq.n	8009eca <HAL_PCD_IRQHandler+0x1d6>
 8009eb0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009eb2:	015a      	lsls	r2, r3, #5
 8009eb4:	69fb      	ldr	r3, [r7, #28]
 8009eb6:	4413      	add	r3, r2
 8009eb8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8009ebc:	461a      	mov	r2, r3
 8009ebe:	2308      	movs	r3, #8
 8009ec0:	6093      	str	r3, [r2, #8]
 8009ec2:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8009ec4:	6878      	ldr	r0, [r7, #4]
 8009ec6:	f000 ffa5 	bl	800ae14 <PCD_EP_OutSetupPacket_int>
 8009eca:	693b      	ldr	r3, [r7, #16]
 8009ecc:	f003 0310 	and.w	r3, r3, #16
 8009ed0:	2b00      	cmp	r3, #0
 8009ed2:	d008      	beq.n	8009ee6 <HAL_PCD_IRQHandler+0x1f2>
 8009ed4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009ed6:	015a      	lsls	r2, r3, #5
 8009ed8:	69fb      	ldr	r3, [r7, #28]
 8009eda:	4413      	add	r3, r2
 8009edc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8009ee0:	461a      	mov	r2, r3
 8009ee2:	2310      	movs	r3, #16
 8009ee4:	6093      	str	r3, [r2, #8]
 8009ee6:	693b      	ldr	r3, [r7, #16]
 8009ee8:	f003 0302 	and.w	r3, r3, #2
 8009eec:	2b00      	cmp	r3, #0
 8009eee:	d030      	beq.n	8009f52 <HAL_PCD_IRQHandler+0x25e>
 8009ef0:	6a3b      	ldr	r3, [r7, #32]
 8009ef2:	695b      	ldr	r3, [r3, #20]
 8009ef4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8009ef8:	2b80      	cmp	r3, #128	@ 0x80
 8009efa:	d109      	bne.n	8009f10 <HAL_PCD_IRQHandler+0x21c>
 8009efc:	69fb      	ldr	r3, [r7, #28]
 8009efe:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8009f02:	685b      	ldr	r3, [r3, #4]
 8009f04:	69fa      	ldr	r2, [r7, #28]
 8009f06:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8009f0a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8009f0e:	6053      	str	r3, [r2, #4]
 8009f10:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8009f12:	4613      	mov	r3, r2
 8009f14:	00db      	lsls	r3, r3, #3
 8009f16:	4413      	add	r3, r2
 8009f18:	009b      	lsls	r3, r3, #2
 8009f1a:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 8009f1e:	687a      	ldr	r2, [r7, #4]
 8009f20:	4413      	add	r3, r2
 8009f22:	3304      	adds	r3, #4
 8009f24:	617b      	str	r3, [r7, #20]
 8009f26:	697b      	ldr	r3, [r7, #20]
 8009f28:	78db      	ldrb	r3, [r3, #3]
 8009f2a:	2b01      	cmp	r3, #1
 8009f2c:	d108      	bne.n	8009f40 <HAL_PCD_IRQHandler+0x24c>
 8009f2e:	697b      	ldr	r3, [r7, #20]
 8009f30:	2200      	movs	r2, #0
 8009f32:	70da      	strb	r2, [r3, #3]
 8009f34:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009f36:	b2db      	uxtb	r3, r3
 8009f38:	4619      	mov	r1, r3
 8009f3a:	6878      	ldr	r0, [r7, #4]
 8009f3c:	f00b fc10 	bl	8015760 <HAL_PCD_ISOOUTIncompleteCallback>
 8009f40:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009f42:	015a      	lsls	r2, r3, #5
 8009f44:	69fb      	ldr	r3, [r7, #28]
 8009f46:	4413      	add	r3, r2
 8009f48:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8009f4c:	461a      	mov	r2, r3
 8009f4e:	2302      	movs	r3, #2
 8009f50:	6093      	str	r3, [r2, #8]
 8009f52:	693b      	ldr	r3, [r7, #16]
 8009f54:	f003 0320 	and.w	r3, r3, #32
 8009f58:	2b00      	cmp	r3, #0
 8009f5a:	d008      	beq.n	8009f6e <HAL_PCD_IRQHandler+0x27a>
 8009f5c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009f5e:	015a      	lsls	r2, r3, #5
 8009f60:	69fb      	ldr	r3, [r7, #28]
 8009f62:	4413      	add	r3, r2
 8009f64:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8009f68:	461a      	mov	r2, r3
 8009f6a:	2320      	movs	r3, #32
 8009f6c:	6093      	str	r3, [r2, #8]
 8009f6e:	693b      	ldr	r3, [r7, #16]
 8009f70:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8009f74:	2b00      	cmp	r3, #0
 8009f76:	d009      	beq.n	8009f8c <HAL_PCD_IRQHandler+0x298>
 8009f78:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009f7a:	015a      	lsls	r2, r3, #5
 8009f7c:	69fb      	ldr	r3, [r7, #28]
 8009f7e:	4413      	add	r3, r2
 8009f80:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8009f84:	461a      	mov	r2, r3
 8009f86:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8009f8a:	6093      	str	r3, [r2, #8]
 8009f8c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009f8e:	3301      	adds	r3, #1
 8009f90:	627b      	str	r3, [r7, #36]	@ 0x24
 8009f92:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009f94:	085b      	lsrs	r3, r3, #1
 8009f96:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009f98:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009f9a:	2b00      	cmp	r3, #0
 8009f9c:	f47f af62 	bne.w	8009e64 <HAL_PCD_IRQHandler+0x170>
 8009fa0:	687b      	ldr	r3, [r7, #4]
 8009fa2:	681b      	ldr	r3, [r3, #0]
 8009fa4:	4618      	mov	r0, r3
 8009fa6:	f008 ff81 	bl	8012eac <USB_ReadInterrupts>
 8009faa:	4603      	mov	r3, r0
 8009fac:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8009fb0:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8009fb4:	f040 80db 	bne.w	800a16e <HAL_PCD_IRQHandler+0x47a>
 8009fb8:	687b      	ldr	r3, [r7, #4]
 8009fba:	681b      	ldr	r3, [r3, #0]
 8009fbc:	4618      	mov	r0, r3
 8009fbe:	f008 ffa2 	bl	8012f06 <USB_ReadDevAllInEpInterrupt>
 8009fc2:	62b8      	str	r0, [r7, #40]	@ 0x28
 8009fc4:	2300      	movs	r3, #0
 8009fc6:	627b      	str	r3, [r7, #36]	@ 0x24
 8009fc8:	e0cd      	b.n	800a166 <HAL_PCD_IRQHandler+0x472>
 8009fca:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009fcc:	f003 0301 	and.w	r3, r3, #1
 8009fd0:	2b00      	cmp	r3, #0
 8009fd2:	f000 80c2 	beq.w	800a15a <HAL_PCD_IRQHandler+0x466>
 8009fd6:	687b      	ldr	r3, [r7, #4]
 8009fd8:	681b      	ldr	r3, [r3, #0]
 8009fda:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8009fdc:	b2d2      	uxtb	r2, r2
 8009fde:	4611      	mov	r1, r2
 8009fe0:	4618      	mov	r0, r3
 8009fe2:	f008 ffc8 	bl	8012f76 <USB_ReadDevInEPInterrupt>
 8009fe6:	6138      	str	r0, [r7, #16]
 8009fe8:	693b      	ldr	r3, [r7, #16]
 8009fea:	f003 0301 	and.w	r3, r3, #1
 8009fee:	2b00      	cmp	r3, #0
 8009ff0:	d057      	beq.n	800a0a2 <HAL_PCD_IRQHandler+0x3ae>
 8009ff2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009ff4:	f003 030f 	and.w	r3, r3, #15
 8009ff8:	2201      	movs	r2, #1
 8009ffa:	fa02 f303 	lsl.w	r3, r2, r3
 8009ffe:	60fb      	str	r3, [r7, #12]
 800a000:	69fb      	ldr	r3, [r7, #28]
 800a002:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a006:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800a008:	68fb      	ldr	r3, [r7, #12]
 800a00a:	43db      	mvns	r3, r3
 800a00c:	69f9      	ldr	r1, [r7, #28]
 800a00e:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800a012:	4013      	ands	r3, r2
 800a014:	634b      	str	r3, [r1, #52]	@ 0x34
 800a016:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a018:	015a      	lsls	r2, r3, #5
 800a01a:	69fb      	ldr	r3, [r7, #28]
 800a01c:	4413      	add	r3, r2
 800a01e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800a022:	461a      	mov	r2, r3
 800a024:	2301      	movs	r3, #1
 800a026:	6093      	str	r3, [r2, #8]
 800a028:	687b      	ldr	r3, [r7, #4]
 800a02a:	799b      	ldrb	r3, [r3, #6]
 800a02c:	2b01      	cmp	r3, #1
 800a02e:	d132      	bne.n	800a096 <HAL_PCD_IRQHandler+0x3a2>
 800a030:	6879      	ldr	r1, [r7, #4]
 800a032:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a034:	4613      	mov	r3, r2
 800a036:	00db      	lsls	r3, r3, #3
 800a038:	4413      	add	r3, r2
 800a03a:	009b      	lsls	r3, r3, #2
 800a03c:	440b      	add	r3, r1
 800a03e:	3320      	adds	r3, #32
 800a040:	6819      	ldr	r1, [r3, #0]
 800a042:	6878      	ldr	r0, [r7, #4]
 800a044:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a046:	4613      	mov	r3, r2
 800a048:	00db      	lsls	r3, r3, #3
 800a04a:	4413      	add	r3, r2
 800a04c:	009b      	lsls	r3, r3, #2
 800a04e:	4403      	add	r3, r0
 800a050:	331c      	adds	r3, #28
 800a052:	681b      	ldr	r3, [r3, #0]
 800a054:	4419      	add	r1, r3
 800a056:	6878      	ldr	r0, [r7, #4]
 800a058:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a05a:	4613      	mov	r3, r2
 800a05c:	00db      	lsls	r3, r3, #3
 800a05e:	4413      	add	r3, r2
 800a060:	009b      	lsls	r3, r3, #2
 800a062:	4403      	add	r3, r0
 800a064:	3320      	adds	r3, #32
 800a066:	6019      	str	r1, [r3, #0]
 800a068:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a06a:	2b00      	cmp	r3, #0
 800a06c:	d113      	bne.n	800a096 <HAL_PCD_IRQHandler+0x3a2>
 800a06e:	6879      	ldr	r1, [r7, #4]
 800a070:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a072:	4613      	mov	r3, r2
 800a074:	00db      	lsls	r3, r3, #3
 800a076:	4413      	add	r3, r2
 800a078:	009b      	lsls	r3, r3, #2
 800a07a:	440b      	add	r3, r1
 800a07c:	3324      	adds	r3, #36	@ 0x24
 800a07e:	681b      	ldr	r3, [r3, #0]
 800a080:	2b00      	cmp	r3, #0
 800a082:	d108      	bne.n	800a096 <HAL_PCD_IRQHandler+0x3a2>
 800a084:	687b      	ldr	r3, [r7, #4]
 800a086:	6818      	ldr	r0, [r3, #0]
 800a088:	687b      	ldr	r3, [r7, #4]
 800a08a:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 800a08e:	461a      	mov	r2, r3
 800a090:	2101      	movs	r1, #1
 800a092:	f008 ffd1 	bl	8013038 <USB_EP0_OutStart>
 800a096:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a098:	b2db      	uxtb	r3, r3
 800a09a:	4619      	mov	r1, r3
 800a09c:	6878      	ldr	r0, [r7, #4]
 800a09e:	f00b fada 	bl	8015656 <HAL_PCD_DataInStageCallback>
 800a0a2:	693b      	ldr	r3, [r7, #16]
 800a0a4:	f003 0308 	and.w	r3, r3, #8
 800a0a8:	2b00      	cmp	r3, #0
 800a0aa:	d008      	beq.n	800a0be <HAL_PCD_IRQHandler+0x3ca>
 800a0ac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a0ae:	015a      	lsls	r2, r3, #5
 800a0b0:	69fb      	ldr	r3, [r7, #28]
 800a0b2:	4413      	add	r3, r2
 800a0b4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800a0b8:	461a      	mov	r2, r3
 800a0ba:	2308      	movs	r3, #8
 800a0bc:	6093      	str	r3, [r2, #8]
 800a0be:	693b      	ldr	r3, [r7, #16]
 800a0c0:	f003 0310 	and.w	r3, r3, #16
 800a0c4:	2b00      	cmp	r3, #0
 800a0c6:	d008      	beq.n	800a0da <HAL_PCD_IRQHandler+0x3e6>
 800a0c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a0ca:	015a      	lsls	r2, r3, #5
 800a0cc:	69fb      	ldr	r3, [r7, #28]
 800a0ce:	4413      	add	r3, r2
 800a0d0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800a0d4:	461a      	mov	r2, r3
 800a0d6:	2310      	movs	r3, #16
 800a0d8:	6093      	str	r3, [r2, #8]
 800a0da:	693b      	ldr	r3, [r7, #16]
 800a0dc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a0e0:	2b00      	cmp	r3, #0
 800a0e2:	d008      	beq.n	800a0f6 <HAL_PCD_IRQHandler+0x402>
 800a0e4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a0e6:	015a      	lsls	r2, r3, #5
 800a0e8:	69fb      	ldr	r3, [r7, #28]
 800a0ea:	4413      	add	r3, r2
 800a0ec:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800a0f0:	461a      	mov	r2, r3
 800a0f2:	2340      	movs	r3, #64	@ 0x40
 800a0f4:	6093      	str	r3, [r2, #8]
 800a0f6:	693b      	ldr	r3, [r7, #16]
 800a0f8:	f003 0302 	and.w	r3, r3, #2
 800a0fc:	2b00      	cmp	r3, #0
 800a0fe:	d023      	beq.n	800a148 <HAL_PCD_IRQHandler+0x454>
 800a100:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800a102:	6a38      	ldr	r0, [r7, #32]
 800a104:	f007 ffb4 	bl	8012070 <USB_FlushTxFifo>
 800a108:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a10a:	4613      	mov	r3, r2
 800a10c:	00db      	lsls	r3, r3, #3
 800a10e:	4413      	add	r3, r2
 800a110:	009b      	lsls	r3, r3, #2
 800a112:	3310      	adds	r3, #16
 800a114:	687a      	ldr	r2, [r7, #4]
 800a116:	4413      	add	r3, r2
 800a118:	3304      	adds	r3, #4
 800a11a:	617b      	str	r3, [r7, #20]
 800a11c:	697b      	ldr	r3, [r7, #20]
 800a11e:	78db      	ldrb	r3, [r3, #3]
 800a120:	2b01      	cmp	r3, #1
 800a122:	d108      	bne.n	800a136 <HAL_PCD_IRQHandler+0x442>
 800a124:	697b      	ldr	r3, [r7, #20]
 800a126:	2200      	movs	r2, #0
 800a128:	70da      	strb	r2, [r3, #3]
 800a12a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a12c:	b2db      	uxtb	r3, r3
 800a12e:	4619      	mov	r1, r3
 800a130:	6878      	ldr	r0, [r7, #4]
 800a132:	f00b fb27 	bl	8015784 <HAL_PCD_ISOINIncompleteCallback>
 800a136:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a138:	015a      	lsls	r2, r3, #5
 800a13a:	69fb      	ldr	r3, [r7, #28]
 800a13c:	4413      	add	r3, r2
 800a13e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800a142:	461a      	mov	r2, r3
 800a144:	2302      	movs	r3, #2
 800a146:	6093      	str	r3, [r2, #8]
 800a148:	693b      	ldr	r3, [r7, #16]
 800a14a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a14e:	2b00      	cmp	r3, #0
 800a150:	d003      	beq.n	800a15a <HAL_PCD_IRQHandler+0x466>
 800a152:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800a154:	6878      	ldr	r0, [r7, #4]
 800a156:	f000 fce8 	bl	800ab2a <PCD_WriteEmptyTxFifo>
 800a15a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a15c:	3301      	adds	r3, #1
 800a15e:	627b      	str	r3, [r7, #36]	@ 0x24
 800a160:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a162:	085b      	lsrs	r3, r3, #1
 800a164:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a166:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a168:	2b00      	cmp	r3, #0
 800a16a:	f47f af2e 	bne.w	8009fca <HAL_PCD_IRQHandler+0x2d6>
 800a16e:	687b      	ldr	r3, [r7, #4]
 800a170:	681b      	ldr	r3, [r3, #0]
 800a172:	4618      	mov	r0, r3
 800a174:	f008 fe9a 	bl	8012eac <USB_ReadInterrupts>
 800a178:	4603      	mov	r3, r0
 800a17a:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800a17e:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800a182:	d122      	bne.n	800a1ca <HAL_PCD_IRQHandler+0x4d6>
 800a184:	69fb      	ldr	r3, [r7, #28]
 800a186:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a18a:	685b      	ldr	r3, [r3, #4]
 800a18c:	69fa      	ldr	r2, [r7, #28]
 800a18e:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800a192:	f023 0301 	bic.w	r3, r3, #1
 800a196:	6053      	str	r3, [r2, #4]
 800a198:	687b      	ldr	r3, [r7, #4]
 800a19a:	f893 34cc 	ldrb.w	r3, [r3, #1228]	@ 0x4cc
 800a19e:	2b01      	cmp	r3, #1
 800a1a0:	d108      	bne.n	800a1b4 <HAL_PCD_IRQHandler+0x4c0>
 800a1a2:	687b      	ldr	r3, [r7, #4]
 800a1a4:	2200      	movs	r2, #0
 800a1a6:	f883 24cc 	strb.w	r2, [r3, #1228]	@ 0x4cc
 800a1aa:	2100      	movs	r1, #0
 800a1ac:	6878      	ldr	r0, [r7, #4]
 800a1ae:	f000 fef3 	bl	800af98 <HAL_PCDEx_LPM_Callback>
 800a1b2:	e002      	b.n	800a1ba <HAL_PCD_IRQHandler+0x4c6>
 800a1b4:	6878      	ldr	r0, [r7, #4]
 800a1b6:	f00b fac5 	bl	8015744 <HAL_PCD_ResumeCallback>
 800a1ba:	687b      	ldr	r3, [r7, #4]
 800a1bc:	681b      	ldr	r3, [r3, #0]
 800a1be:	695a      	ldr	r2, [r3, #20]
 800a1c0:	687b      	ldr	r3, [r7, #4]
 800a1c2:	681b      	ldr	r3, [r3, #0]
 800a1c4:	f002 4200 	and.w	r2, r2, #2147483648	@ 0x80000000
 800a1c8:	615a      	str	r2, [r3, #20]
 800a1ca:	687b      	ldr	r3, [r7, #4]
 800a1cc:	681b      	ldr	r3, [r3, #0]
 800a1ce:	4618      	mov	r0, r3
 800a1d0:	f008 fe6c 	bl	8012eac <USB_ReadInterrupts>
 800a1d4:	4603      	mov	r3, r0
 800a1d6:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800a1da:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800a1de:	d112      	bne.n	800a206 <HAL_PCD_IRQHandler+0x512>
 800a1e0:	69fb      	ldr	r3, [r7, #28]
 800a1e2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a1e6:	689b      	ldr	r3, [r3, #8]
 800a1e8:	f003 0301 	and.w	r3, r3, #1
 800a1ec:	2b01      	cmp	r3, #1
 800a1ee:	d102      	bne.n	800a1f6 <HAL_PCD_IRQHandler+0x502>
 800a1f0:	6878      	ldr	r0, [r7, #4]
 800a1f2:	f00b fa81 	bl	80156f8 <HAL_PCD_SuspendCallback>
 800a1f6:	687b      	ldr	r3, [r7, #4]
 800a1f8:	681b      	ldr	r3, [r3, #0]
 800a1fa:	695a      	ldr	r2, [r3, #20]
 800a1fc:	687b      	ldr	r3, [r7, #4]
 800a1fe:	681b      	ldr	r3, [r3, #0]
 800a200:	f402 6200 	and.w	r2, r2, #2048	@ 0x800
 800a204:	615a      	str	r2, [r3, #20]
 800a206:	687b      	ldr	r3, [r7, #4]
 800a208:	681b      	ldr	r3, [r3, #0]
 800a20a:	4618      	mov	r0, r3
 800a20c:	f008 fe4e 	bl	8012eac <USB_ReadInterrupts>
 800a210:	4603      	mov	r3, r0
 800a212:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800a216:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800a21a:	d121      	bne.n	800a260 <HAL_PCD_IRQHandler+0x56c>
 800a21c:	687b      	ldr	r3, [r7, #4]
 800a21e:	681b      	ldr	r3, [r3, #0]
 800a220:	695a      	ldr	r2, [r3, #20]
 800a222:	687b      	ldr	r3, [r7, #4]
 800a224:	681b      	ldr	r3, [r3, #0]
 800a226:	f002 6200 	and.w	r2, r2, #134217728	@ 0x8000000
 800a22a:	615a      	str	r2, [r3, #20]
 800a22c:	687b      	ldr	r3, [r7, #4]
 800a22e:	f893 34cc 	ldrb.w	r3, [r3, #1228]	@ 0x4cc
 800a232:	2b00      	cmp	r3, #0
 800a234:	d111      	bne.n	800a25a <HAL_PCD_IRQHandler+0x566>
 800a236:	687b      	ldr	r3, [r7, #4]
 800a238:	2201      	movs	r2, #1
 800a23a:	f883 24cc 	strb.w	r2, [r3, #1228]	@ 0x4cc
 800a23e:	687b      	ldr	r3, [r7, #4]
 800a240:	681b      	ldr	r3, [r3, #0]
 800a242:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a244:	089b      	lsrs	r3, r3, #2
 800a246:	f003 020f 	and.w	r2, r3, #15
 800a24a:	687b      	ldr	r3, [r7, #4]
 800a24c:	f8c3 24d0 	str.w	r2, [r3, #1232]	@ 0x4d0
 800a250:	2101      	movs	r1, #1
 800a252:	6878      	ldr	r0, [r7, #4]
 800a254:	f000 fea0 	bl	800af98 <HAL_PCDEx_LPM_Callback>
 800a258:	e002      	b.n	800a260 <HAL_PCD_IRQHandler+0x56c>
 800a25a:	6878      	ldr	r0, [r7, #4]
 800a25c:	f00b fa4c 	bl	80156f8 <HAL_PCD_SuspendCallback>
 800a260:	687b      	ldr	r3, [r7, #4]
 800a262:	681b      	ldr	r3, [r3, #0]
 800a264:	4618      	mov	r0, r3
 800a266:	f008 fe21 	bl	8012eac <USB_ReadInterrupts>
 800a26a:	4603      	mov	r3, r0
 800a26c:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800a270:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800a274:	f040 80b7 	bne.w	800a3e6 <HAL_PCD_IRQHandler+0x6f2>
 800a278:	69fb      	ldr	r3, [r7, #28]
 800a27a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a27e:	685b      	ldr	r3, [r3, #4]
 800a280:	69fa      	ldr	r2, [r7, #28]
 800a282:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800a286:	f023 0301 	bic.w	r3, r3, #1
 800a28a:	6053      	str	r3, [r2, #4]
 800a28c:	687b      	ldr	r3, [r7, #4]
 800a28e:	681b      	ldr	r3, [r3, #0]
 800a290:	2110      	movs	r1, #16
 800a292:	4618      	mov	r0, r3
 800a294:	f007 feec 	bl	8012070 <USB_FlushTxFifo>
 800a298:	2300      	movs	r3, #0
 800a29a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a29c:	e046      	b.n	800a32c <HAL_PCD_IRQHandler+0x638>
 800a29e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2a0:	015a      	lsls	r2, r3, #5
 800a2a2:	69fb      	ldr	r3, [r7, #28]
 800a2a4:	4413      	add	r3, r2
 800a2a6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800a2aa:	461a      	mov	r2, r3
 800a2ac:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 800a2b0:	6093      	str	r3, [r2, #8]
 800a2b2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2b4:	015a      	lsls	r2, r3, #5
 800a2b6:	69fb      	ldr	r3, [r7, #28]
 800a2b8:	4413      	add	r3, r2
 800a2ba:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800a2be:	681b      	ldr	r3, [r3, #0]
 800a2c0:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a2c2:	0151      	lsls	r1, r2, #5
 800a2c4:	69fa      	ldr	r2, [r7, #28]
 800a2c6:	440a      	add	r2, r1
 800a2c8:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800a2cc:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800a2d0:	6013      	str	r3, [r2, #0]
 800a2d2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2d4:	015a      	lsls	r2, r3, #5
 800a2d6:	69fb      	ldr	r3, [r7, #28]
 800a2d8:	4413      	add	r3, r2
 800a2da:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800a2de:	461a      	mov	r2, r3
 800a2e0:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 800a2e4:	6093      	str	r3, [r2, #8]
 800a2e6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2e8:	015a      	lsls	r2, r3, #5
 800a2ea:	69fb      	ldr	r3, [r7, #28]
 800a2ec:	4413      	add	r3, r2
 800a2ee:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800a2f2:	681b      	ldr	r3, [r3, #0]
 800a2f4:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a2f6:	0151      	lsls	r1, r2, #5
 800a2f8:	69fa      	ldr	r2, [r7, #28]
 800a2fa:	440a      	add	r2, r1
 800a2fc:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800a300:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800a304:	6013      	str	r3, [r2, #0]
 800a306:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a308:	015a      	lsls	r2, r3, #5
 800a30a:	69fb      	ldr	r3, [r7, #28]
 800a30c:	4413      	add	r3, r2
 800a30e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800a312:	681b      	ldr	r3, [r3, #0]
 800a314:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a316:	0151      	lsls	r1, r2, #5
 800a318:	69fa      	ldr	r2, [r7, #28]
 800a31a:	440a      	add	r2, r1
 800a31c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800a320:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 800a324:	6013      	str	r3, [r2, #0]
 800a326:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a328:	3301      	adds	r3, #1
 800a32a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a32c:	687b      	ldr	r3, [r7, #4]
 800a32e:	791b      	ldrb	r3, [r3, #4]
 800a330:	461a      	mov	r2, r3
 800a332:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a334:	4293      	cmp	r3, r2
 800a336:	d3b2      	bcc.n	800a29e <HAL_PCD_IRQHandler+0x5aa>
 800a338:	69fb      	ldr	r3, [r7, #28]
 800a33a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a33e:	69db      	ldr	r3, [r3, #28]
 800a340:	69fa      	ldr	r2, [r7, #28]
 800a342:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800a346:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 800a34a:	61d3      	str	r3, [r2, #28]
 800a34c:	687b      	ldr	r3, [r7, #4]
 800a34e:	7bdb      	ldrb	r3, [r3, #15]
 800a350:	2b00      	cmp	r3, #0
 800a352:	d016      	beq.n	800a382 <HAL_PCD_IRQHandler+0x68e>
 800a354:	69fb      	ldr	r3, [r7, #28]
 800a356:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a35a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800a35e:	69fa      	ldr	r2, [r7, #28]
 800a360:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800a364:	f043 030b 	orr.w	r3, r3, #11
 800a368:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
 800a36c:	69fb      	ldr	r3, [r7, #28]
 800a36e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a372:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800a374:	69fa      	ldr	r2, [r7, #28]
 800a376:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800a37a:	f043 030b 	orr.w	r3, r3, #11
 800a37e:	6453      	str	r3, [r2, #68]	@ 0x44
 800a380:	e015      	b.n	800a3ae <HAL_PCD_IRQHandler+0x6ba>
 800a382:	69fb      	ldr	r3, [r7, #28]
 800a384:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a388:	695a      	ldr	r2, [r3, #20]
 800a38a:	69fb      	ldr	r3, [r7, #28]
 800a38c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a390:	4619      	mov	r1, r3
 800a392:	f242 032b 	movw	r3, #8235	@ 0x202b
 800a396:	4313      	orrs	r3, r2
 800a398:	614b      	str	r3, [r1, #20]
 800a39a:	69fb      	ldr	r3, [r7, #28]
 800a39c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a3a0:	691b      	ldr	r3, [r3, #16]
 800a3a2:	69fa      	ldr	r2, [r7, #28]
 800a3a4:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800a3a8:	f043 030b 	orr.w	r3, r3, #11
 800a3ac:	6113      	str	r3, [r2, #16]
 800a3ae:	69fb      	ldr	r3, [r7, #28]
 800a3b0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a3b4:	681b      	ldr	r3, [r3, #0]
 800a3b6:	69fa      	ldr	r2, [r7, #28]
 800a3b8:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800a3bc:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 800a3c0:	6013      	str	r3, [r2, #0]
 800a3c2:	687b      	ldr	r3, [r7, #4]
 800a3c4:	6818      	ldr	r0, [r3, #0]
 800a3c6:	687b      	ldr	r3, [r7, #4]
 800a3c8:	7999      	ldrb	r1, [r3, #6]
 800a3ca:	687b      	ldr	r3, [r7, #4]
 800a3cc:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 800a3d0:	461a      	mov	r2, r3
 800a3d2:	f008 fe31 	bl	8013038 <USB_EP0_OutStart>
 800a3d6:	687b      	ldr	r3, [r7, #4]
 800a3d8:	681b      	ldr	r3, [r3, #0]
 800a3da:	695a      	ldr	r2, [r3, #20]
 800a3dc:	687b      	ldr	r3, [r7, #4]
 800a3de:	681b      	ldr	r3, [r3, #0]
 800a3e0:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
 800a3e4:	615a      	str	r2, [r3, #20]
 800a3e6:	687b      	ldr	r3, [r7, #4]
 800a3e8:	681b      	ldr	r3, [r3, #0]
 800a3ea:	4618      	mov	r0, r3
 800a3ec:	f008 fd5e 	bl	8012eac <USB_ReadInterrupts>
 800a3f0:	4603      	mov	r3, r0
 800a3f2:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800a3f6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800a3fa:	d123      	bne.n	800a444 <HAL_PCD_IRQHandler+0x750>
 800a3fc:	687b      	ldr	r3, [r7, #4]
 800a3fe:	681b      	ldr	r3, [r3, #0]
 800a400:	4618      	mov	r0, r3
 800a402:	f008 fdf5 	bl	8012ff0 <USB_ActivateSetup>
 800a406:	687b      	ldr	r3, [r7, #4]
 800a408:	681b      	ldr	r3, [r3, #0]
 800a40a:	4618      	mov	r0, r3
 800a40c:	f007 fea9 	bl	8012162 <USB_GetDevSpeed>
 800a410:	4603      	mov	r3, r0
 800a412:	461a      	mov	r2, r3
 800a414:	687b      	ldr	r3, [r7, #4]
 800a416:	71da      	strb	r2, [r3, #7]
 800a418:	687b      	ldr	r3, [r7, #4]
 800a41a:	681c      	ldr	r4, [r3, #0]
 800a41c:	f001 fd1c 	bl	800be58 <HAL_RCC_GetHCLKFreq>
 800a420:	4601      	mov	r1, r0
 800a422:	687b      	ldr	r3, [r7, #4]
 800a424:	79db      	ldrb	r3, [r3, #7]
 800a426:	461a      	mov	r2, r3
 800a428:	4620      	mov	r0, r4
 800a42a:	f007 fbb3 	bl	8011b94 <USB_SetTurnaroundTime>
 800a42e:	6878      	ldr	r0, [r7, #4]
 800a430:	f00b f939 	bl	80156a6 <HAL_PCD_ResetCallback>
 800a434:	687b      	ldr	r3, [r7, #4]
 800a436:	681b      	ldr	r3, [r3, #0]
 800a438:	695a      	ldr	r2, [r3, #20]
 800a43a:	687b      	ldr	r3, [r7, #4]
 800a43c:	681b      	ldr	r3, [r3, #0]
 800a43e:	f402 5200 	and.w	r2, r2, #8192	@ 0x2000
 800a442:	615a      	str	r2, [r3, #20]
 800a444:	687b      	ldr	r3, [r7, #4]
 800a446:	681b      	ldr	r3, [r3, #0]
 800a448:	4618      	mov	r0, r3
 800a44a:	f008 fd2f 	bl	8012eac <USB_ReadInterrupts>
 800a44e:	4603      	mov	r3, r0
 800a450:	f003 0308 	and.w	r3, r3, #8
 800a454:	2b08      	cmp	r3, #8
 800a456:	d10a      	bne.n	800a46e <HAL_PCD_IRQHandler+0x77a>
 800a458:	6878      	ldr	r0, [r7, #4]
 800a45a:	f00b f916 	bl	801568a <HAL_PCD_SOFCallback>
 800a45e:	687b      	ldr	r3, [r7, #4]
 800a460:	681b      	ldr	r3, [r3, #0]
 800a462:	695a      	ldr	r2, [r3, #20]
 800a464:	687b      	ldr	r3, [r7, #4]
 800a466:	681b      	ldr	r3, [r3, #0]
 800a468:	f002 0208 	and.w	r2, r2, #8
 800a46c:	615a      	str	r2, [r3, #20]
 800a46e:	687b      	ldr	r3, [r7, #4]
 800a470:	681b      	ldr	r3, [r3, #0]
 800a472:	4618      	mov	r0, r3
 800a474:	f008 fd1a 	bl	8012eac <USB_ReadInterrupts>
 800a478:	4603      	mov	r3, r0
 800a47a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a47e:	2b80      	cmp	r3, #128	@ 0x80
 800a480:	d123      	bne.n	800a4ca <HAL_PCD_IRQHandler+0x7d6>
 800a482:	6a3b      	ldr	r3, [r7, #32]
 800a484:	699b      	ldr	r3, [r3, #24]
 800a486:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800a48a:	6a3b      	ldr	r3, [r7, #32]
 800a48c:	619a      	str	r2, [r3, #24]
 800a48e:	2301      	movs	r3, #1
 800a490:	627b      	str	r3, [r7, #36]	@ 0x24
 800a492:	e014      	b.n	800a4be <HAL_PCD_IRQHandler+0x7ca>
 800a494:	6879      	ldr	r1, [r7, #4]
 800a496:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a498:	4613      	mov	r3, r2
 800a49a:	00db      	lsls	r3, r3, #3
 800a49c:	4413      	add	r3, r2
 800a49e:	009b      	lsls	r3, r3, #2
 800a4a0:	440b      	add	r3, r1
 800a4a2:	f203 2357 	addw	r3, r3, #599	@ 0x257
 800a4a6:	781b      	ldrb	r3, [r3, #0]
 800a4a8:	2b01      	cmp	r3, #1
 800a4aa:	d105      	bne.n	800a4b8 <HAL_PCD_IRQHandler+0x7c4>
 800a4ac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a4ae:	b2db      	uxtb	r3, r3
 800a4b0:	4619      	mov	r1, r3
 800a4b2:	6878      	ldr	r0, [r7, #4]
 800a4b4:	f000 fb08 	bl	800aac8 <HAL_PCD_EP_Abort>
 800a4b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a4ba:	3301      	adds	r3, #1
 800a4bc:	627b      	str	r3, [r7, #36]	@ 0x24
 800a4be:	687b      	ldr	r3, [r7, #4]
 800a4c0:	791b      	ldrb	r3, [r3, #4]
 800a4c2:	461a      	mov	r2, r3
 800a4c4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a4c6:	4293      	cmp	r3, r2
 800a4c8:	d3e4      	bcc.n	800a494 <HAL_PCD_IRQHandler+0x7a0>
 800a4ca:	687b      	ldr	r3, [r7, #4]
 800a4cc:	681b      	ldr	r3, [r3, #0]
 800a4ce:	4618      	mov	r0, r3
 800a4d0:	f008 fcec 	bl	8012eac <USB_ReadInterrupts>
 800a4d4:	4603      	mov	r3, r0
 800a4d6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800a4da:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800a4de:	d13c      	bne.n	800a55a <HAL_PCD_IRQHandler+0x866>
 800a4e0:	2301      	movs	r3, #1
 800a4e2:	627b      	str	r3, [r7, #36]	@ 0x24
 800a4e4:	e02b      	b.n	800a53e <HAL_PCD_IRQHandler+0x84a>
 800a4e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a4e8:	015a      	lsls	r2, r3, #5
 800a4ea:	69fb      	ldr	r3, [r7, #28]
 800a4ec:	4413      	add	r3, r2
 800a4ee:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800a4f2:	681b      	ldr	r3, [r3, #0]
 800a4f4:	61bb      	str	r3, [r7, #24]
 800a4f6:	6879      	ldr	r1, [r7, #4]
 800a4f8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a4fa:	4613      	mov	r3, r2
 800a4fc:	00db      	lsls	r3, r3, #3
 800a4fe:	4413      	add	r3, r2
 800a500:	009b      	lsls	r3, r3, #2
 800a502:	440b      	add	r3, r1
 800a504:	3318      	adds	r3, #24
 800a506:	781b      	ldrb	r3, [r3, #0]
 800a508:	2b01      	cmp	r3, #1
 800a50a:	d115      	bne.n	800a538 <HAL_PCD_IRQHandler+0x844>
 800a50c:	69bb      	ldr	r3, [r7, #24]
 800a50e:	2b00      	cmp	r3, #0
 800a510:	da12      	bge.n	800a538 <HAL_PCD_IRQHandler+0x844>
 800a512:	6879      	ldr	r1, [r7, #4]
 800a514:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a516:	4613      	mov	r3, r2
 800a518:	00db      	lsls	r3, r3, #3
 800a51a:	4413      	add	r3, r2
 800a51c:	009b      	lsls	r3, r3, #2
 800a51e:	440b      	add	r3, r1
 800a520:	3317      	adds	r3, #23
 800a522:	2201      	movs	r2, #1
 800a524:	701a      	strb	r2, [r3, #0]
 800a526:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a528:	b2db      	uxtb	r3, r3
 800a52a:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800a52e:	b2db      	uxtb	r3, r3
 800a530:	4619      	mov	r1, r3
 800a532:	6878      	ldr	r0, [r7, #4]
 800a534:	f000 fac8 	bl	800aac8 <HAL_PCD_EP_Abort>
 800a538:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a53a:	3301      	adds	r3, #1
 800a53c:	627b      	str	r3, [r7, #36]	@ 0x24
 800a53e:	687b      	ldr	r3, [r7, #4]
 800a540:	791b      	ldrb	r3, [r3, #4]
 800a542:	461a      	mov	r2, r3
 800a544:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a546:	4293      	cmp	r3, r2
 800a548:	d3cd      	bcc.n	800a4e6 <HAL_PCD_IRQHandler+0x7f2>
 800a54a:	687b      	ldr	r3, [r7, #4]
 800a54c:	681b      	ldr	r3, [r3, #0]
 800a54e:	695a      	ldr	r2, [r3, #20]
 800a550:	687b      	ldr	r3, [r7, #4]
 800a552:	681b      	ldr	r3, [r3, #0]
 800a554:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 800a558:	615a      	str	r2, [r3, #20]
 800a55a:	687b      	ldr	r3, [r7, #4]
 800a55c:	681b      	ldr	r3, [r3, #0]
 800a55e:	4618      	mov	r0, r3
 800a560:	f008 fca4 	bl	8012eac <USB_ReadInterrupts>
 800a564:	4603      	mov	r3, r0
 800a566:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800a56a:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800a56e:	d156      	bne.n	800a61e <HAL_PCD_IRQHandler+0x92a>
 800a570:	2301      	movs	r3, #1
 800a572:	627b      	str	r3, [r7, #36]	@ 0x24
 800a574:	e045      	b.n	800a602 <HAL_PCD_IRQHandler+0x90e>
 800a576:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a578:	015a      	lsls	r2, r3, #5
 800a57a:	69fb      	ldr	r3, [r7, #28]
 800a57c:	4413      	add	r3, r2
 800a57e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800a582:	681b      	ldr	r3, [r3, #0]
 800a584:	61bb      	str	r3, [r7, #24]
 800a586:	6879      	ldr	r1, [r7, #4]
 800a588:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a58a:	4613      	mov	r3, r2
 800a58c:	00db      	lsls	r3, r3, #3
 800a58e:	4413      	add	r3, r2
 800a590:	009b      	lsls	r3, r3, #2
 800a592:	440b      	add	r3, r1
 800a594:	f503 7316 	add.w	r3, r3, #600	@ 0x258
 800a598:	781b      	ldrb	r3, [r3, #0]
 800a59a:	2b01      	cmp	r3, #1
 800a59c:	d12e      	bne.n	800a5fc <HAL_PCD_IRQHandler+0x908>
 800a59e:	69bb      	ldr	r3, [r7, #24]
 800a5a0:	2b00      	cmp	r3, #0
 800a5a2:	da2b      	bge.n	800a5fc <HAL_PCD_IRQHandler+0x908>
 800a5a4:	69bb      	ldr	r3, [r7, #24]
 800a5a6:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 800a5aa:	687b      	ldr	r3, [r7, #4]
 800a5ac:	f8d3 34d4 	ldr.w	r3, [r3, #1236]	@ 0x4d4
 800a5b0:	f003 0301 	and.w	r3, r3, #1
 800a5b4:	429a      	cmp	r2, r3
 800a5b6:	d121      	bne.n	800a5fc <HAL_PCD_IRQHandler+0x908>
 800a5b8:	6879      	ldr	r1, [r7, #4]
 800a5ba:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a5bc:	4613      	mov	r3, r2
 800a5be:	00db      	lsls	r3, r3, #3
 800a5c0:	4413      	add	r3, r2
 800a5c2:	009b      	lsls	r3, r3, #2
 800a5c4:	440b      	add	r3, r1
 800a5c6:	f203 2357 	addw	r3, r3, #599	@ 0x257
 800a5ca:	2201      	movs	r2, #1
 800a5cc:	701a      	strb	r2, [r3, #0]
 800a5ce:	6a3b      	ldr	r3, [r7, #32]
 800a5d0:	699b      	ldr	r3, [r3, #24]
 800a5d2:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 800a5d6:	6a3b      	ldr	r3, [r7, #32]
 800a5d8:	619a      	str	r2, [r3, #24]
 800a5da:	6a3b      	ldr	r3, [r7, #32]
 800a5dc:	695b      	ldr	r3, [r3, #20]
 800a5de:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a5e2:	2b00      	cmp	r3, #0
 800a5e4:	d10a      	bne.n	800a5fc <HAL_PCD_IRQHandler+0x908>
 800a5e6:	69fb      	ldr	r3, [r7, #28]
 800a5e8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a5ec:	685b      	ldr	r3, [r3, #4]
 800a5ee:	69fa      	ldr	r2, [r7, #28]
 800a5f0:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800a5f4:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800a5f8:	6053      	str	r3, [r2, #4]
 800a5fa:	e008      	b.n	800a60e <HAL_PCD_IRQHandler+0x91a>
 800a5fc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a5fe:	3301      	adds	r3, #1
 800a600:	627b      	str	r3, [r7, #36]	@ 0x24
 800a602:	687b      	ldr	r3, [r7, #4]
 800a604:	791b      	ldrb	r3, [r3, #4]
 800a606:	461a      	mov	r2, r3
 800a608:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a60a:	4293      	cmp	r3, r2
 800a60c:	d3b3      	bcc.n	800a576 <HAL_PCD_IRQHandler+0x882>
 800a60e:	687b      	ldr	r3, [r7, #4]
 800a610:	681b      	ldr	r3, [r3, #0]
 800a612:	695a      	ldr	r2, [r3, #20]
 800a614:	687b      	ldr	r3, [r7, #4]
 800a616:	681b      	ldr	r3, [r3, #0]
 800a618:	f402 1200 	and.w	r2, r2, #2097152	@ 0x200000
 800a61c:	615a      	str	r2, [r3, #20]
 800a61e:	687b      	ldr	r3, [r7, #4]
 800a620:	681b      	ldr	r3, [r3, #0]
 800a622:	4618      	mov	r0, r3
 800a624:	f008 fc42 	bl	8012eac <USB_ReadInterrupts>
 800a628:	4603      	mov	r3, r0
 800a62a:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 800a62e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800a632:	d10a      	bne.n	800a64a <HAL_PCD_IRQHandler+0x956>
 800a634:	6878      	ldr	r0, [r7, #4]
 800a636:	f00b f8b7 	bl	80157a8 <HAL_PCD_ConnectCallback>
 800a63a:	687b      	ldr	r3, [r7, #4]
 800a63c:	681b      	ldr	r3, [r3, #0]
 800a63e:	695a      	ldr	r2, [r3, #20]
 800a640:	687b      	ldr	r3, [r7, #4]
 800a642:	681b      	ldr	r3, [r3, #0]
 800a644:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 800a648:	615a      	str	r2, [r3, #20]
 800a64a:	687b      	ldr	r3, [r7, #4]
 800a64c:	681b      	ldr	r3, [r3, #0]
 800a64e:	4618      	mov	r0, r3
 800a650:	f008 fc2c 	bl	8012eac <USB_ReadInterrupts>
 800a654:	4603      	mov	r3, r0
 800a656:	f003 0304 	and.w	r3, r3, #4
 800a65a:	2b04      	cmp	r3, #4
 800a65c:	d115      	bne.n	800a68a <HAL_PCD_IRQHandler+0x996>
 800a65e:	687b      	ldr	r3, [r7, #4]
 800a660:	681b      	ldr	r3, [r3, #0]
 800a662:	685b      	ldr	r3, [r3, #4]
 800a664:	61bb      	str	r3, [r7, #24]
 800a666:	69bb      	ldr	r3, [r7, #24]
 800a668:	f003 0304 	and.w	r3, r3, #4
 800a66c:	2b00      	cmp	r3, #0
 800a66e:	d002      	beq.n	800a676 <HAL_PCD_IRQHandler+0x982>
 800a670:	6878      	ldr	r0, [r7, #4]
 800a672:	f00b f8a7 	bl	80157c4 <HAL_PCD_DisconnectCallback>
 800a676:	687b      	ldr	r3, [r7, #4]
 800a678:	681b      	ldr	r3, [r3, #0]
 800a67a:	6859      	ldr	r1, [r3, #4]
 800a67c:	687b      	ldr	r3, [r7, #4]
 800a67e:	681b      	ldr	r3, [r3, #0]
 800a680:	69ba      	ldr	r2, [r7, #24]
 800a682:	430a      	orrs	r2, r1
 800a684:	605a      	str	r2, [r3, #4]
 800a686:	e000      	b.n	800a68a <HAL_PCD_IRQHandler+0x996>
 800a688:	bf00      	nop
 800a68a:	3734      	adds	r7, #52	@ 0x34
 800a68c:	46bd      	mov	sp, r7
 800a68e:	bd90      	pop	{r4, r7, pc}

0800a690 <HAL_PCD_SetAddress>:
 800a690:	b580      	push	{r7, lr}
 800a692:	b082      	sub	sp, #8
 800a694:	af00      	add	r7, sp, #0
 800a696:	6078      	str	r0, [r7, #4]
 800a698:	460b      	mov	r3, r1
 800a69a:	70fb      	strb	r3, [r7, #3]
 800a69c:	687b      	ldr	r3, [r7, #4]
 800a69e:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 800a6a2:	2b01      	cmp	r3, #1
 800a6a4:	d101      	bne.n	800a6aa <HAL_PCD_SetAddress+0x1a>
 800a6a6:	2302      	movs	r3, #2
 800a6a8:	e012      	b.n	800a6d0 <HAL_PCD_SetAddress+0x40>
 800a6aa:	687b      	ldr	r3, [r7, #4]
 800a6ac:	2201      	movs	r2, #1
 800a6ae:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800a6b2:	687b      	ldr	r3, [r7, #4]
 800a6b4:	78fa      	ldrb	r2, [r7, #3]
 800a6b6:	745a      	strb	r2, [r3, #17]
 800a6b8:	687b      	ldr	r3, [r7, #4]
 800a6ba:	681b      	ldr	r3, [r3, #0]
 800a6bc:	78fa      	ldrb	r2, [r7, #3]
 800a6be:	4611      	mov	r1, r2
 800a6c0:	4618      	mov	r0, r3
 800a6c2:	f008 fb8b 	bl	8012ddc <USB_SetDevAddress>
 800a6c6:	687b      	ldr	r3, [r7, #4]
 800a6c8:	2200      	movs	r2, #0
 800a6ca:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800a6ce:	2300      	movs	r3, #0
 800a6d0:	4618      	mov	r0, r3
 800a6d2:	3708      	adds	r7, #8
 800a6d4:	46bd      	mov	sp, r7
 800a6d6:	bd80      	pop	{r7, pc}

0800a6d8 <HAL_PCD_EP_Open>:
 800a6d8:	b580      	push	{r7, lr}
 800a6da:	b084      	sub	sp, #16
 800a6dc:	af00      	add	r7, sp, #0
 800a6de:	6078      	str	r0, [r7, #4]
 800a6e0:	4608      	mov	r0, r1
 800a6e2:	4611      	mov	r1, r2
 800a6e4:	461a      	mov	r2, r3
 800a6e6:	4603      	mov	r3, r0
 800a6e8:	70fb      	strb	r3, [r7, #3]
 800a6ea:	460b      	mov	r3, r1
 800a6ec:	803b      	strh	r3, [r7, #0]
 800a6ee:	4613      	mov	r3, r2
 800a6f0:	70bb      	strb	r3, [r7, #2]
 800a6f2:	2300      	movs	r3, #0
 800a6f4:	72fb      	strb	r3, [r7, #11]
 800a6f6:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800a6fa:	2b00      	cmp	r3, #0
 800a6fc:	da0f      	bge.n	800a71e <HAL_PCD_EP_Open+0x46>
 800a6fe:	78fb      	ldrb	r3, [r7, #3]
 800a700:	f003 020f 	and.w	r2, r3, #15
 800a704:	4613      	mov	r3, r2
 800a706:	00db      	lsls	r3, r3, #3
 800a708:	4413      	add	r3, r2
 800a70a:	009b      	lsls	r3, r3, #2
 800a70c:	3310      	adds	r3, #16
 800a70e:	687a      	ldr	r2, [r7, #4]
 800a710:	4413      	add	r3, r2
 800a712:	3304      	adds	r3, #4
 800a714:	60fb      	str	r3, [r7, #12]
 800a716:	68fb      	ldr	r3, [r7, #12]
 800a718:	2201      	movs	r2, #1
 800a71a:	705a      	strb	r2, [r3, #1]
 800a71c:	e00f      	b.n	800a73e <HAL_PCD_EP_Open+0x66>
 800a71e:	78fb      	ldrb	r3, [r7, #3]
 800a720:	f003 020f 	and.w	r2, r3, #15
 800a724:	4613      	mov	r3, r2
 800a726:	00db      	lsls	r3, r3, #3
 800a728:	4413      	add	r3, r2
 800a72a:	009b      	lsls	r3, r3, #2
 800a72c:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800a730:	687a      	ldr	r2, [r7, #4]
 800a732:	4413      	add	r3, r2
 800a734:	3304      	adds	r3, #4
 800a736:	60fb      	str	r3, [r7, #12]
 800a738:	68fb      	ldr	r3, [r7, #12]
 800a73a:	2200      	movs	r2, #0
 800a73c:	705a      	strb	r2, [r3, #1]
 800a73e:	78fb      	ldrb	r3, [r7, #3]
 800a740:	f003 030f 	and.w	r3, r3, #15
 800a744:	b2da      	uxtb	r2, r3
 800a746:	68fb      	ldr	r3, [r7, #12]
 800a748:	701a      	strb	r2, [r3, #0]
 800a74a:	883a      	ldrh	r2, [r7, #0]
 800a74c:	68fb      	ldr	r3, [r7, #12]
 800a74e:	609a      	str	r2, [r3, #8]
 800a750:	68fb      	ldr	r3, [r7, #12]
 800a752:	78ba      	ldrb	r2, [r7, #2]
 800a754:	711a      	strb	r2, [r3, #4]
 800a756:	68fb      	ldr	r3, [r7, #12]
 800a758:	785b      	ldrb	r3, [r3, #1]
 800a75a:	2b00      	cmp	r3, #0
 800a75c:	d004      	beq.n	800a768 <HAL_PCD_EP_Open+0x90>
 800a75e:	68fb      	ldr	r3, [r7, #12]
 800a760:	781b      	ldrb	r3, [r3, #0]
 800a762:	461a      	mov	r2, r3
 800a764:	68fb      	ldr	r3, [r7, #12]
 800a766:	835a      	strh	r2, [r3, #26]
 800a768:	78bb      	ldrb	r3, [r7, #2]
 800a76a:	2b02      	cmp	r3, #2
 800a76c:	d102      	bne.n	800a774 <HAL_PCD_EP_Open+0x9c>
 800a76e:	68fb      	ldr	r3, [r7, #12]
 800a770:	2200      	movs	r2, #0
 800a772:	715a      	strb	r2, [r3, #5]
 800a774:	687b      	ldr	r3, [r7, #4]
 800a776:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 800a77a:	2b01      	cmp	r3, #1
 800a77c:	d101      	bne.n	800a782 <HAL_PCD_EP_Open+0xaa>
 800a77e:	2302      	movs	r3, #2
 800a780:	e00e      	b.n	800a7a0 <HAL_PCD_EP_Open+0xc8>
 800a782:	687b      	ldr	r3, [r7, #4]
 800a784:	2201      	movs	r2, #1
 800a786:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800a78a:	687b      	ldr	r3, [r7, #4]
 800a78c:	681b      	ldr	r3, [r3, #0]
 800a78e:	68f9      	ldr	r1, [r7, #12]
 800a790:	4618      	mov	r0, r3
 800a792:	f007 fd0b 	bl	80121ac <USB_ActivateEndpoint>
 800a796:	687b      	ldr	r3, [r7, #4]
 800a798:	2200      	movs	r2, #0
 800a79a:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800a79e:	7afb      	ldrb	r3, [r7, #11]
 800a7a0:	4618      	mov	r0, r3
 800a7a2:	3710      	adds	r7, #16
 800a7a4:	46bd      	mov	sp, r7
 800a7a6:	bd80      	pop	{r7, pc}

0800a7a8 <HAL_PCD_EP_Close>:
 800a7a8:	b580      	push	{r7, lr}
 800a7aa:	b084      	sub	sp, #16
 800a7ac:	af00      	add	r7, sp, #0
 800a7ae:	6078      	str	r0, [r7, #4]
 800a7b0:	460b      	mov	r3, r1
 800a7b2:	70fb      	strb	r3, [r7, #3]
 800a7b4:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800a7b8:	2b00      	cmp	r3, #0
 800a7ba:	da0f      	bge.n	800a7dc <HAL_PCD_EP_Close+0x34>
 800a7bc:	78fb      	ldrb	r3, [r7, #3]
 800a7be:	f003 020f 	and.w	r2, r3, #15
 800a7c2:	4613      	mov	r3, r2
 800a7c4:	00db      	lsls	r3, r3, #3
 800a7c6:	4413      	add	r3, r2
 800a7c8:	009b      	lsls	r3, r3, #2
 800a7ca:	3310      	adds	r3, #16
 800a7cc:	687a      	ldr	r2, [r7, #4]
 800a7ce:	4413      	add	r3, r2
 800a7d0:	3304      	adds	r3, #4
 800a7d2:	60fb      	str	r3, [r7, #12]
 800a7d4:	68fb      	ldr	r3, [r7, #12]
 800a7d6:	2201      	movs	r2, #1
 800a7d8:	705a      	strb	r2, [r3, #1]
 800a7da:	e00f      	b.n	800a7fc <HAL_PCD_EP_Close+0x54>
 800a7dc:	78fb      	ldrb	r3, [r7, #3]
 800a7de:	f003 020f 	and.w	r2, r3, #15
 800a7e2:	4613      	mov	r3, r2
 800a7e4:	00db      	lsls	r3, r3, #3
 800a7e6:	4413      	add	r3, r2
 800a7e8:	009b      	lsls	r3, r3, #2
 800a7ea:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800a7ee:	687a      	ldr	r2, [r7, #4]
 800a7f0:	4413      	add	r3, r2
 800a7f2:	3304      	adds	r3, #4
 800a7f4:	60fb      	str	r3, [r7, #12]
 800a7f6:	68fb      	ldr	r3, [r7, #12]
 800a7f8:	2200      	movs	r2, #0
 800a7fa:	705a      	strb	r2, [r3, #1]
 800a7fc:	78fb      	ldrb	r3, [r7, #3]
 800a7fe:	f003 030f 	and.w	r3, r3, #15
 800a802:	b2da      	uxtb	r2, r3
 800a804:	68fb      	ldr	r3, [r7, #12]
 800a806:	701a      	strb	r2, [r3, #0]
 800a808:	687b      	ldr	r3, [r7, #4]
 800a80a:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 800a80e:	2b01      	cmp	r3, #1
 800a810:	d101      	bne.n	800a816 <HAL_PCD_EP_Close+0x6e>
 800a812:	2302      	movs	r3, #2
 800a814:	e00e      	b.n	800a834 <HAL_PCD_EP_Close+0x8c>
 800a816:	687b      	ldr	r3, [r7, #4]
 800a818:	2201      	movs	r2, #1
 800a81a:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800a81e:	687b      	ldr	r3, [r7, #4]
 800a820:	681b      	ldr	r3, [r3, #0]
 800a822:	68f9      	ldr	r1, [r7, #12]
 800a824:	4618      	mov	r0, r3
 800a826:	f007 fd49 	bl	80122bc <USB_DeactivateEndpoint>
 800a82a:	687b      	ldr	r3, [r7, #4]
 800a82c:	2200      	movs	r2, #0
 800a82e:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800a832:	2300      	movs	r3, #0
 800a834:	4618      	mov	r0, r3
 800a836:	3710      	adds	r7, #16
 800a838:	46bd      	mov	sp, r7
 800a83a:	bd80      	pop	{r7, pc}

0800a83c <HAL_PCD_EP_Receive>:
 800a83c:	b580      	push	{r7, lr}
 800a83e:	b086      	sub	sp, #24
 800a840:	af00      	add	r7, sp, #0
 800a842:	60f8      	str	r0, [r7, #12]
 800a844:	607a      	str	r2, [r7, #4]
 800a846:	603b      	str	r3, [r7, #0]
 800a848:	460b      	mov	r3, r1
 800a84a:	72fb      	strb	r3, [r7, #11]
 800a84c:	7afb      	ldrb	r3, [r7, #11]
 800a84e:	f003 020f 	and.w	r2, r3, #15
 800a852:	4613      	mov	r3, r2
 800a854:	00db      	lsls	r3, r3, #3
 800a856:	4413      	add	r3, r2
 800a858:	009b      	lsls	r3, r3, #2
 800a85a:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800a85e:	68fa      	ldr	r2, [r7, #12]
 800a860:	4413      	add	r3, r2
 800a862:	3304      	adds	r3, #4
 800a864:	617b      	str	r3, [r7, #20]
 800a866:	697b      	ldr	r3, [r7, #20]
 800a868:	687a      	ldr	r2, [r7, #4]
 800a86a:	60da      	str	r2, [r3, #12]
 800a86c:	697b      	ldr	r3, [r7, #20]
 800a86e:	683a      	ldr	r2, [r7, #0]
 800a870:	611a      	str	r2, [r3, #16]
 800a872:	697b      	ldr	r3, [r7, #20]
 800a874:	2200      	movs	r2, #0
 800a876:	615a      	str	r2, [r3, #20]
 800a878:	697b      	ldr	r3, [r7, #20]
 800a87a:	2200      	movs	r2, #0
 800a87c:	705a      	strb	r2, [r3, #1]
 800a87e:	7afb      	ldrb	r3, [r7, #11]
 800a880:	f003 030f 	and.w	r3, r3, #15
 800a884:	b2da      	uxtb	r2, r3
 800a886:	697b      	ldr	r3, [r7, #20]
 800a888:	701a      	strb	r2, [r3, #0]
 800a88a:	68fb      	ldr	r3, [r7, #12]
 800a88c:	799b      	ldrb	r3, [r3, #6]
 800a88e:	2b01      	cmp	r3, #1
 800a890:	d102      	bne.n	800a898 <HAL_PCD_EP_Receive+0x5c>
 800a892:	687a      	ldr	r2, [r7, #4]
 800a894:	697b      	ldr	r3, [r7, #20]
 800a896:	61da      	str	r2, [r3, #28]
 800a898:	68fb      	ldr	r3, [r7, #12]
 800a89a:	6818      	ldr	r0, [r3, #0]
 800a89c:	68fb      	ldr	r3, [r7, #12]
 800a89e:	799b      	ldrb	r3, [r3, #6]
 800a8a0:	461a      	mov	r2, r3
 800a8a2:	6979      	ldr	r1, [r7, #20]
 800a8a4:	f007 fde6 	bl	8012474 <USB_EPStartXfer>
 800a8a8:	2300      	movs	r3, #0
 800a8aa:	4618      	mov	r0, r3
 800a8ac:	3718      	adds	r7, #24
 800a8ae:	46bd      	mov	sp, r7
 800a8b0:	bd80      	pop	{r7, pc}

0800a8b2 <HAL_PCD_EP_GetRxCount>:
 800a8b2:	b480      	push	{r7}
 800a8b4:	b083      	sub	sp, #12
 800a8b6:	af00      	add	r7, sp, #0
 800a8b8:	6078      	str	r0, [r7, #4]
 800a8ba:	460b      	mov	r3, r1
 800a8bc:	70fb      	strb	r3, [r7, #3]
 800a8be:	78fb      	ldrb	r3, [r7, #3]
 800a8c0:	f003 020f 	and.w	r2, r3, #15
 800a8c4:	6879      	ldr	r1, [r7, #4]
 800a8c6:	4613      	mov	r3, r2
 800a8c8:	00db      	lsls	r3, r3, #3
 800a8ca:	4413      	add	r3, r2
 800a8cc:	009b      	lsls	r3, r3, #2
 800a8ce:	440b      	add	r3, r1
 800a8d0:	f503 731a 	add.w	r3, r3, #616	@ 0x268
 800a8d4:	681b      	ldr	r3, [r3, #0]
 800a8d6:	4618      	mov	r0, r3
 800a8d8:	370c      	adds	r7, #12
 800a8da:	46bd      	mov	sp, r7
 800a8dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8e0:	4770      	bx	lr

0800a8e2 <HAL_PCD_EP_Transmit>:
 800a8e2:	b580      	push	{r7, lr}
 800a8e4:	b086      	sub	sp, #24
 800a8e6:	af00      	add	r7, sp, #0
 800a8e8:	60f8      	str	r0, [r7, #12]
 800a8ea:	607a      	str	r2, [r7, #4]
 800a8ec:	603b      	str	r3, [r7, #0]
 800a8ee:	460b      	mov	r3, r1
 800a8f0:	72fb      	strb	r3, [r7, #11]
 800a8f2:	7afb      	ldrb	r3, [r7, #11]
 800a8f4:	f003 020f 	and.w	r2, r3, #15
 800a8f8:	4613      	mov	r3, r2
 800a8fa:	00db      	lsls	r3, r3, #3
 800a8fc:	4413      	add	r3, r2
 800a8fe:	009b      	lsls	r3, r3, #2
 800a900:	3310      	adds	r3, #16
 800a902:	68fa      	ldr	r2, [r7, #12]
 800a904:	4413      	add	r3, r2
 800a906:	3304      	adds	r3, #4
 800a908:	617b      	str	r3, [r7, #20]
 800a90a:	697b      	ldr	r3, [r7, #20]
 800a90c:	687a      	ldr	r2, [r7, #4]
 800a90e:	60da      	str	r2, [r3, #12]
 800a910:	697b      	ldr	r3, [r7, #20]
 800a912:	683a      	ldr	r2, [r7, #0]
 800a914:	611a      	str	r2, [r3, #16]
 800a916:	697b      	ldr	r3, [r7, #20]
 800a918:	2200      	movs	r2, #0
 800a91a:	615a      	str	r2, [r3, #20]
 800a91c:	697b      	ldr	r3, [r7, #20]
 800a91e:	2201      	movs	r2, #1
 800a920:	705a      	strb	r2, [r3, #1]
 800a922:	7afb      	ldrb	r3, [r7, #11]
 800a924:	f003 030f 	and.w	r3, r3, #15
 800a928:	b2da      	uxtb	r2, r3
 800a92a:	697b      	ldr	r3, [r7, #20]
 800a92c:	701a      	strb	r2, [r3, #0]
 800a92e:	68fb      	ldr	r3, [r7, #12]
 800a930:	799b      	ldrb	r3, [r3, #6]
 800a932:	2b01      	cmp	r3, #1
 800a934:	d102      	bne.n	800a93c <HAL_PCD_EP_Transmit+0x5a>
 800a936:	687a      	ldr	r2, [r7, #4]
 800a938:	697b      	ldr	r3, [r7, #20]
 800a93a:	61da      	str	r2, [r3, #28]
 800a93c:	68fb      	ldr	r3, [r7, #12]
 800a93e:	6818      	ldr	r0, [r3, #0]
 800a940:	68fb      	ldr	r3, [r7, #12]
 800a942:	799b      	ldrb	r3, [r3, #6]
 800a944:	461a      	mov	r2, r3
 800a946:	6979      	ldr	r1, [r7, #20]
 800a948:	f007 fd94 	bl	8012474 <USB_EPStartXfer>
 800a94c:	2300      	movs	r3, #0
 800a94e:	4618      	mov	r0, r3
 800a950:	3718      	adds	r7, #24
 800a952:	46bd      	mov	sp, r7
 800a954:	bd80      	pop	{r7, pc}

0800a956 <HAL_PCD_EP_SetStall>:
 800a956:	b580      	push	{r7, lr}
 800a958:	b084      	sub	sp, #16
 800a95a:	af00      	add	r7, sp, #0
 800a95c:	6078      	str	r0, [r7, #4]
 800a95e:	460b      	mov	r3, r1
 800a960:	70fb      	strb	r3, [r7, #3]
 800a962:	78fb      	ldrb	r3, [r7, #3]
 800a964:	f003 030f 	and.w	r3, r3, #15
 800a968:	687a      	ldr	r2, [r7, #4]
 800a96a:	7912      	ldrb	r2, [r2, #4]
 800a96c:	4293      	cmp	r3, r2
 800a96e:	d901      	bls.n	800a974 <HAL_PCD_EP_SetStall+0x1e>
 800a970:	2301      	movs	r3, #1
 800a972:	e04f      	b.n	800aa14 <HAL_PCD_EP_SetStall+0xbe>
 800a974:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800a978:	2b00      	cmp	r3, #0
 800a97a:	da0f      	bge.n	800a99c <HAL_PCD_EP_SetStall+0x46>
 800a97c:	78fb      	ldrb	r3, [r7, #3]
 800a97e:	f003 020f 	and.w	r2, r3, #15
 800a982:	4613      	mov	r3, r2
 800a984:	00db      	lsls	r3, r3, #3
 800a986:	4413      	add	r3, r2
 800a988:	009b      	lsls	r3, r3, #2
 800a98a:	3310      	adds	r3, #16
 800a98c:	687a      	ldr	r2, [r7, #4]
 800a98e:	4413      	add	r3, r2
 800a990:	3304      	adds	r3, #4
 800a992:	60fb      	str	r3, [r7, #12]
 800a994:	68fb      	ldr	r3, [r7, #12]
 800a996:	2201      	movs	r2, #1
 800a998:	705a      	strb	r2, [r3, #1]
 800a99a:	e00d      	b.n	800a9b8 <HAL_PCD_EP_SetStall+0x62>
 800a99c:	78fa      	ldrb	r2, [r7, #3]
 800a99e:	4613      	mov	r3, r2
 800a9a0:	00db      	lsls	r3, r3, #3
 800a9a2:	4413      	add	r3, r2
 800a9a4:	009b      	lsls	r3, r3, #2
 800a9a6:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800a9aa:	687a      	ldr	r2, [r7, #4]
 800a9ac:	4413      	add	r3, r2
 800a9ae:	3304      	adds	r3, #4
 800a9b0:	60fb      	str	r3, [r7, #12]
 800a9b2:	68fb      	ldr	r3, [r7, #12]
 800a9b4:	2200      	movs	r2, #0
 800a9b6:	705a      	strb	r2, [r3, #1]
 800a9b8:	68fb      	ldr	r3, [r7, #12]
 800a9ba:	2201      	movs	r2, #1
 800a9bc:	709a      	strb	r2, [r3, #2]
 800a9be:	78fb      	ldrb	r3, [r7, #3]
 800a9c0:	f003 030f 	and.w	r3, r3, #15
 800a9c4:	b2da      	uxtb	r2, r3
 800a9c6:	68fb      	ldr	r3, [r7, #12]
 800a9c8:	701a      	strb	r2, [r3, #0]
 800a9ca:	687b      	ldr	r3, [r7, #4]
 800a9cc:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 800a9d0:	2b01      	cmp	r3, #1
 800a9d2:	d101      	bne.n	800a9d8 <HAL_PCD_EP_SetStall+0x82>
 800a9d4:	2302      	movs	r3, #2
 800a9d6:	e01d      	b.n	800aa14 <HAL_PCD_EP_SetStall+0xbe>
 800a9d8:	687b      	ldr	r3, [r7, #4]
 800a9da:	2201      	movs	r2, #1
 800a9dc:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800a9e0:	687b      	ldr	r3, [r7, #4]
 800a9e2:	681b      	ldr	r3, [r3, #0]
 800a9e4:	68f9      	ldr	r1, [r7, #12]
 800a9e6:	4618      	mov	r0, r3
 800a9e8:	f008 f924 	bl	8012c34 <USB_EPSetStall>
 800a9ec:	78fb      	ldrb	r3, [r7, #3]
 800a9ee:	f003 030f 	and.w	r3, r3, #15
 800a9f2:	2b00      	cmp	r3, #0
 800a9f4:	d109      	bne.n	800aa0a <HAL_PCD_EP_SetStall+0xb4>
 800a9f6:	687b      	ldr	r3, [r7, #4]
 800a9f8:	6818      	ldr	r0, [r3, #0]
 800a9fa:	687b      	ldr	r3, [r7, #4]
 800a9fc:	7999      	ldrb	r1, [r3, #6]
 800a9fe:	687b      	ldr	r3, [r7, #4]
 800aa00:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 800aa04:	461a      	mov	r2, r3
 800aa06:	f008 fb17 	bl	8013038 <USB_EP0_OutStart>
 800aa0a:	687b      	ldr	r3, [r7, #4]
 800aa0c:	2200      	movs	r2, #0
 800aa0e:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800aa12:	2300      	movs	r3, #0
 800aa14:	4618      	mov	r0, r3
 800aa16:	3710      	adds	r7, #16
 800aa18:	46bd      	mov	sp, r7
 800aa1a:	bd80      	pop	{r7, pc}

0800aa1c <HAL_PCD_EP_ClrStall>:
 800aa1c:	b580      	push	{r7, lr}
 800aa1e:	b084      	sub	sp, #16
 800aa20:	af00      	add	r7, sp, #0
 800aa22:	6078      	str	r0, [r7, #4]
 800aa24:	460b      	mov	r3, r1
 800aa26:	70fb      	strb	r3, [r7, #3]
 800aa28:	78fb      	ldrb	r3, [r7, #3]
 800aa2a:	f003 030f 	and.w	r3, r3, #15
 800aa2e:	687a      	ldr	r2, [r7, #4]
 800aa30:	7912      	ldrb	r2, [r2, #4]
 800aa32:	4293      	cmp	r3, r2
 800aa34:	d901      	bls.n	800aa3a <HAL_PCD_EP_ClrStall+0x1e>
 800aa36:	2301      	movs	r3, #1
 800aa38:	e042      	b.n	800aac0 <HAL_PCD_EP_ClrStall+0xa4>
 800aa3a:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800aa3e:	2b00      	cmp	r3, #0
 800aa40:	da0f      	bge.n	800aa62 <HAL_PCD_EP_ClrStall+0x46>
 800aa42:	78fb      	ldrb	r3, [r7, #3]
 800aa44:	f003 020f 	and.w	r2, r3, #15
 800aa48:	4613      	mov	r3, r2
 800aa4a:	00db      	lsls	r3, r3, #3
 800aa4c:	4413      	add	r3, r2
 800aa4e:	009b      	lsls	r3, r3, #2
 800aa50:	3310      	adds	r3, #16
 800aa52:	687a      	ldr	r2, [r7, #4]
 800aa54:	4413      	add	r3, r2
 800aa56:	3304      	adds	r3, #4
 800aa58:	60fb      	str	r3, [r7, #12]
 800aa5a:	68fb      	ldr	r3, [r7, #12]
 800aa5c:	2201      	movs	r2, #1
 800aa5e:	705a      	strb	r2, [r3, #1]
 800aa60:	e00f      	b.n	800aa82 <HAL_PCD_EP_ClrStall+0x66>
 800aa62:	78fb      	ldrb	r3, [r7, #3]
 800aa64:	f003 020f 	and.w	r2, r3, #15
 800aa68:	4613      	mov	r3, r2
 800aa6a:	00db      	lsls	r3, r3, #3
 800aa6c:	4413      	add	r3, r2
 800aa6e:	009b      	lsls	r3, r3, #2
 800aa70:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800aa74:	687a      	ldr	r2, [r7, #4]
 800aa76:	4413      	add	r3, r2
 800aa78:	3304      	adds	r3, #4
 800aa7a:	60fb      	str	r3, [r7, #12]
 800aa7c:	68fb      	ldr	r3, [r7, #12]
 800aa7e:	2200      	movs	r2, #0
 800aa80:	705a      	strb	r2, [r3, #1]
 800aa82:	68fb      	ldr	r3, [r7, #12]
 800aa84:	2200      	movs	r2, #0
 800aa86:	709a      	strb	r2, [r3, #2]
 800aa88:	78fb      	ldrb	r3, [r7, #3]
 800aa8a:	f003 030f 	and.w	r3, r3, #15
 800aa8e:	b2da      	uxtb	r2, r3
 800aa90:	68fb      	ldr	r3, [r7, #12]
 800aa92:	701a      	strb	r2, [r3, #0]
 800aa94:	687b      	ldr	r3, [r7, #4]
 800aa96:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 800aa9a:	2b01      	cmp	r3, #1
 800aa9c:	d101      	bne.n	800aaa2 <HAL_PCD_EP_ClrStall+0x86>
 800aa9e:	2302      	movs	r3, #2
 800aaa0:	e00e      	b.n	800aac0 <HAL_PCD_EP_ClrStall+0xa4>
 800aaa2:	687b      	ldr	r3, [r7, #4]
 800aaa4:	2201      	movs	r2, #1
 800aaa6:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800aaaa:	687b      	ldr	r3, [r7, #4]
 800aaac:	681b      	ldr	r3, [r3, #0]
 800aaae:	68f9      	ldr	r1, [r7, #12]
 800aab0:	4618      	mov	r0, r3
 800aab2:	f008 f92d 	bl	8012d10 <USB_EPClearStall>
 800aab6:	687b      	ldr	r3, [r7, #4]
 800aab8:	2200      	movs	r2, #0
 800aaba:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800aabe:	2300      	movs	r3, #0
 800aac0:	4618      	mov	r0, r3
 800aac2:	3710      	adds	r7, #16
 800aac4:	46bd      	mov	sp, r7
 800aac6:	bd80      	pop	{r7, pc}

0800aac8 <HAL_PCD_EP_Abort>:
 800aac8:	b580      	push	{r7, lr}
 800aaca:	b084      	sub	sp, #16
 800aacc:	af00      	add	r7, sp, #0
 800aace:	6078      	str	r0, [r7, #4]
 800aad0:	460b      	mov	r3, r1
 800aad2:	70fb      	strb	r3, [r7, #3]
 800aad4:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800aad8:	2b00      	cmp	r3, #0
 800aada:	da0c      	bge.n	800aaf6 <HAL_PCD_EP_Abort+0x2e>
 800aadc:	78fb      	ldrb	r3, [r7, #3]
 800aade:	f003 020f 	and.w	r2, r3, #15
 800aae2:	4613      	mov	r3, r2
 800aae4:	00db      	lsls	r3, r3, #3
 800aae6:	4413      	add	r3, r2
 800aae8:	009b      	lsls	r3, r3, #2
 800aaea:	3310      	adds	r3, #16
 800aaec:	687a      	ldr	r2, [r7, #4]
 800aaee:	4413      	add	r3, r2
 800aaf0:	3304      	adds	r3, #4
 800aaf2:	60fb      	str	r3, [r7, #12]
 800aaf4:	e00c      	b.n	800ab10 <HAL_PCD_EP_Abort+0x48>
 800aaf6:	78fb      	ldrb	r3, [r7, #3]
 800aaf8:	f003 020f 	and.w	r2, r3, #15
 800aafc:	4613      	mov	r3, r2
 800aafe:	00db      	lsls	r3, r3, #3
 800ab00:	4413      	add	r3, r2
 800ab02:	009b      	lsls	r3, r3, #2
 800ab04:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800ab08:	687a      	ldr	r2, [r7, #4]
 800ab0a:	4413      	add	r3, r2
 800ab0c:	3304      	adds	r3, #4
 800ab0e:	60fb      	str	r3, [r7, #12]
 800ab10:	687b      	ldr	r3, [r7, #4]
 800ab12:	681b      	ldr	r3, [r3, #0]
 800ab14:	68f9      	ldr	r1, [r7, #12]
 800ab16:	4618      	mov	r0, r3
 800ab18:	f007 ff4c 	bl	80129b4 <USB_EPStopXfer>
 800ab1c:	4603      	mov	r3, r0
 800ab1e:	72fb      	strb	r3, [r7, #11]
 800ab20:	7afb      	ldrb	r3, [r7, #11]
 800ab22:	4618      	mov	r0, r3
 800ab24:	3710      	adds	r7, #16
 800ab26:	46bd      	mov	sp, r7
 800ab28:	bd80      	pop	{r7, pc}

0800ab2a <PCD_WriteEmptyTxFifo>:
 800ab2a:	b580      	push	{r7, lr}
 800ab2c:	b08a      	sub	sp, #40	@ 0x28
 800ab2e:	af02      	add	r7, sp, #8
 800ab30:	6078      	str	r0, [r7, #4]
 800ab32:	6039      	str	r1, [r7, #0]
 800ab34:	687b      	ldr	r3, [r7, #4]
 800ab36:	681b      	ldr	r3, [r3, #0]
 800ab38:	617b      	str	r3, [r7, #20]
 800ab3a:	697b      	ldr	r3, [r7, #20]
 800ab3c:	613b      	str	r3, [r7, #16]
 800ab3e:	683a      	ldr	r2, [r7, #0]
 800ab40:	4613      	mov	r3, r2
 800ab42:	00db      	lsls	r3, r3, #3
 800ab44:	4413      	add	r3, r2
 800ab46:	009b      	lsls	r3, r3, #2
 800ab48:	3310      	adds	r3, #16
 800ab4a:	687a      	ldr	r2, [r7, #4]
 800ab4c:	4413      	add	r3, r2
 800ab4e:	3304      	adds	r3, #4
 800ab50:	60fb      	str	r3, [r7, #12]
 800ab52:	68fb      	ldr	r3, [r7, #12]
 800ab54:	695a      	ldr	r2, [r3, #20]
 800ab56:	68fb      	ldr	r3, [r7, #12]
 800ab58:	691b      	ldr	r3, [r3, #16]
 800ab5a:	429a      	cmp	r2, r3
 800ab5c:	d901      	bls.n	800ab62 <PCD_WriteEmptyTxFifo+0x38>
 800ab5e:	2301      	movs	r3, #1
 800ab60:	e06b      	b.n	800ac3a <PCD_WriteEmptyTxFifo+0x110>
 800ab62:	68fb      	ldr	r3, [r7, #12]
 800ab64:	691a      	ldr	r2, [r3, #16]
 800ab66:	68fb      	ldr	r3, [r7, #12]
 800ab68:	695b      	ldr	r3, [r3, #20]
 800ab6a:	1ad3      	subs	r3, r2, r3
 800ab6c:	61fb      	str	r3, [r7, #28]
 800ab6e:	68fb      	ldr	r3, [r7, #12]
 800ab70:	689b      	ldr	r3, [r3, #8]
 800ab72:	69fa      	ldr	r2, [r7, #28]
 800ab74:	429a      	cmp	r2, r3
 800ab76:	d902      	bls.n	800ab7e <PCD_WriteEmptyTxFifo+0x54>
 800ab78:	68fb      	ldr	r3, [r7, #12]
 800ab7a:	689b      	ldr	r3, [r3, #8]
 800ab7c:	61fb      	str	r3, [r7, #28]
 800ab7e:	69fb      	ldr	r3, [r7, #28]
 800ab80:	3303      	adds	r3, #3
 800ab82:	089b      	lsrs	r3, r3, #2
 800ab84:	61bb      	str	r3, [r7, #24]
 800ab86:	e02a      	b.n	800abde <PCD_WriteEmptyTxFifo+0xb4>
 800ab88:	68fb      	ldr	r3, [r7, #12]
 800ab8a:	691a      	ldr	r2, [r3, #16]
 800ab8c:	68fb      	ldr	r3, [r7, #12]
 800ab8e:	695b      	ldr	r3, [r3, #20]
 800ab90:	1ad3      	subs	r3, r2, r3
 800ab92:	61fb      	str	r3, [r7, #28]
 800ab94:	68fb      	ldr	r3, [r7, #12]
 800ab96:	689b      	ldr	r3, [r3, #8]
 800ab98:	69fa      	ldr	r2, [r7, #28]
 800ab9a:	429a      	cmp	r2, r3
 800ab9c:	d902      	bls.n	800aba4 <PCD_WriteEmptyTxFifo+0x7a>
 800ab9e:	68fb      	ldr	r3, [r7, #12]
 800aba0:	689b      	ldr	r3, [r3, #8]
 800aba2:	61fb      	str	r3, [r7, #28]
 800aba4:	69fb      	ldr	r3, [r7, #28]
 800aba6:	3303      	adds	r3, #3
 800aba8:	089b      	lsrs	r3, r3, #2
 800abaa:	61bb      	str	r3, [r7, #24]
 800abac:	68fb      	ldr	r3, [r7, #12]
 800abae:	68d9      	ldr	r1, [r3, #12]
 800abb0:	683b      	ldr	r3, [r7, #0]
 800abb2:	b2da      	uxtb	r2, r3
 800abb4:	69fb      	ldr	r3, [r7, #28]
 800abb6:	b298      	uxth	r0, r3
 800abb8:	687b      	ldr	r3, [r7, #4]
 800abba:	799b      	ldrb	r3, [r3, #6]
 800abbc:	9300      	str	r3, [sp, #0]
 800abbe:	4603      	mov	r3, r0
 800abc0:	6978      	ldr	r0, [r7, #20]
 800abc2:	f007 ffa1 	bl	8012b08 <USB_WritePacket>
 800abc6:	68fb      	ldr	r3, [r7, #12]
 800abc8:	68da      	ldr	r2, [r3, #12]
 800abca:	69fb      	ldr	r3, [r7, #28]
 800abcc:	441a      	add	r2, r3
 800abce:	68fb      	ldr	r3, [r7, #12]
 800abd0:	60da      	str	r2, [r3, #12]
 800abd2:	68fb      	ldr	r3, [r7, #12]
 800abd4:	695a      	ldr	r2, [r3, #20]
 800abd6:	69fb      	ldr	r3, [r7, #28]
 800abd8:	441a      	add	r2, r3
 800abda:	68fb      	ldr	r3, [r7, #12]
 800abdc:	615a      	str	r2, [r3, #20]
 800abde:	683b      	ldr	r3, [r7, #0]
 800abe0:	015a      	lsls	r2, r3, #5
 800abe2:	693b      	ldr	r3, [r7, #16]
 800abe4:	4413      	add	r3, r2
 800abe6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800abea:	699b      	ldr	r3, [r3, #24]
 800abec:	b29b      	uxth	r3, r3
 800abee:	69ba      	ldr	r2, [r7, #24]
 800abf0:	429a      	cmp	r2, r3
 800abf2:	d809      	bhi.n	800ac08 <PCD_WriteEmptyTxFifo+0xde>
 800abf4:	68fb      	ldr	r3, [r7, #12]
 800abf6:	695a      	ldr	r2, [r3, #20]
 800abf8:	68fb      	ldr	r3, [r7, #12]
 800abfa:	691b      	ldr	r3, [r3, #16]
 800abfc:	429a      	cmp	r2, r3
 800abfe:	d203      	bcs.n	800ac08 <PCD_WriteEmptyTxFifo+0xde>
 800ac00:	68fb      	ldr	r3, [r7, #12]
 800ac02:	691b      	ldr	r3, [r3, #16]
 800ac04:	2b00      	cmp	r3, #0
 800ac06:	d1bf      	bne.n	800ab88 <PCD_WriteEmptyTxFifo+0x5e>
 800ac08:	68fb      	ldr	r3, [r7, #12]
 800ac0a:	691a      	ldr	r2, [r3, #16]
 800ac0c:	68fb      	ldr	r3, [r7, #12]
 800ac0e:	695b      	ldr	r3, [r3, #20]
 800ac10:	429a      	cmp	r2, r3
 800ac12:	d811      	bhi.n	800ac38 <PCD_WriteEmptyTxFifo+0x10e>
 800ac14:	683b      	ldr	r3, [r7, #0]
 800ac16:	f003 030f 	and.w	r3, r3, #15
 800ac1a:	2201      	movs	r2, #1
 800ac1c:	fa02 f303 	lsl.w	r3, r2, r3
 800ac20:	60bb      	str	r3, [r7, #8]
 800ac22:	693b      	ldr	r3, [r7, #16]
 800ac24:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800ac28:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800ac2a:	68bb      	ldr	r3, [r7, #8]
 800ac2c:	43db      	mvns	r3, r3
 800ac2e:	6939      	ldr	r1, [r7, #16]
 800ac30:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800ac34:	4013      	ands	r3, r2
 800ac36:	634b      	str	r3, [r1, #52]	@ 0x34
 800ac38:	2300      	movs	r3, #0
 800ac3a:	4618      	mov	r0, r3
 800ac3c:	3720      	adds	r7, #32
 800ac3e:	46bd      	mov	sp, r7
 800ac40:	bd80      	pop	{r7, pc}
	...

0800ac44 <PCD_EP_OutXfrComplete_int>:
 800ac44:	b580      	push	{r7, lr}
 800ac46:	b088      	sub	sp, #32
 800ac48:	af00      	add	r7, sp, #0
 800ac4a:	6078      	str	r0, [r7, #4]
 800ac4c:	6039      	str	r1, [r7, #0]
 800ac4e:	687b      	ldr	r3, [r7, #4]
 800ac50:	681b      	ldr	r3, [r3, #0]
 800ac52:	61fb      	str	r3, [r7, #28]
 800ac54:	69fb      	ldr	r3, [r7, #28]
 800ac56:	61bb      	str	r3, [r7, #24]
 800ac58:	69fb      	ldr	r3, [r7, #28]
 800ac5a:	333c      	adds	r3, #60	@ 0x3c
 800ac5c:	3304      	adds	r3, #4
 800ac5e:	681b      	ldr	r3, [r3, #0]
 800ac60:	617b      	str	r3, [r7, #20]
 800ac62:	683b      	ldr	r3, [r7, #0]
 800ac64:	015a      	lsls	r2, r3, #5
 800ac66:	69bb      	ldr	r3, [r7, #24]
 800ac68:	4413      	add	r3, r2
 800ac6a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ac6e:	689b      	ldr	r3, [r3, #8]
 800ac70:	613b      	str	r3, [r7, #16]
 800ac72:	687b      	ldr	r3, [r7, #4]
 800ac74:	799b      	ldrb	r3, [r3, #6]
 800ac76:	2b01      	cmp	r3, #1
 800ac78:	d17b      	bne.n	800ad72 <PCD_EP_OutXfrComplete_int+0x12e>
 800ac7a:	693b      	ldr	r3, [r7, #16]
 800ac7c:	f003 0308 	and.w	r3, r3, #8
 800ac80:	2b00      	cmp	r3, #0
 800ac82:	d015      	beq.n	800acb0 <PCD_EP_OutXfrComplete_int+0x6c>
 800ac84:	697b      	ldr	r3, [r7, #20]
 800ac86:	4a61      	ldr	r2, [pc, #388]	@ (800ae0c <PCD_EP_OutXfrComplete_int+0x1c8>)
 800ac88:	4293      	cmp	r3, r2
 800ac8a:	f240 80b9 	bls.w	800ae00 <PCD_EP_OutXfrComplete_int+0x1bc>
 800ac8e:	693b      	ldr	r3, [r7, #16]
 800ac90:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800ac94:	2b00      	cmp	r3, #0
 800ac96:	f000 80b3 	beq.w	800ae00 <PCD_EP_OutXfrComplete_int+0x1bc>
 800ac9a:	683b      	ldr	r3, [r7, #0]
 800ac9c:	015a      	lsls	r2, r3, #5
 800ac9e:	69bb      	ldr	r3, [r7, #24]
 800aca0:	4413      	add	r3, r2
 800aca2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800aca6:	461a      	mov	r2, r3
 800aca8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800acac:	6093      	str	r3, [r2, #8]
 800acae:	e0a7      	b.n	800ae00 <PCD_EP_OutXfrComplete_int+0x1bc>
 800acb0:	693b      	ldr	r3, [r7, #16]
 800acb2:	f003 0320 	and.w	r3, r3, #32
 800acb6:	2b00      	cmp	r3, #0
 800acb8:	d009      	beq.n	800acce <PCD_EP_OutXfrComplete_int+0x8a>
 800acba:	683b      	ldr	r3, [r7, #0]
 800acbc:	015a      	lsls	r2, r3, #5
 800acbe:	69bb      	ldr	r3, [r7, #24]
 800acc0:	4413      	add	r3, r2
 800acc2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800acc6:	461a      	mov	r2, r3
 800acc8:	2320      	movs	r3, #32
 800acca:	6093      	str	r3, [r2, #8]
 800accc:	e098      	b.n	800ae00 <PCD_EP_OutXfrComplete_int+0x1bc>
 800acce:	693b      	ldr	r3, [r7, #16]
 800acd0:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800acd4:	2b00      	cmp	r3, #0
 800acd6:	f040 8093 	bne.w	800ae00 <PCD_EP_OutXfrComplete_int+0x1bc>
 800acda:	697b      	ldr	r3, [r7, #20]
 800acdc:	4a4b      	ldr	r2, [pc, #300]	@ (800ae0c <PCD_EP_OutXfrComplete_int+0x1c8>)
 800acde:	4293      	cmp	r3, r2
 800ace0:	d90f      	bls.n	800ad02 <PCD_EP_OutXfrComplete_int+0xbe>
 800ace2:	693b      	ldr	r3, [r7, #16]
 800ace4:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800ace8:	2b00      	cmp	r3, #0
 800acea:	d00a      	beq.n	800ad02 <PCD_EP_OutXfrComplete_int+0xbe>
 800acec:	683b      	ldr	r3, [r7, #0]
 800acee:	015a      	lsls	r2, r3, #5
 800acf0:	69bb      	ldr	r3, [r7, #24]
 800acf2:	4413      	add	r3, r2
 800acf4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800acf8:	461a      	mov	r2, r3
 800acfa:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800acfe:	6093      	str	r3, [r2, #8]
 800ad00:	e07e      	b.n	800ae00 <PCD_EP_OutXfrComplete_int+0x1bc>
 800ad02:	683a      	ldr	r2, [r7, #0]
 800ad04:	4613      	mov	r3, r2
 800ad06:	00db      	lsls	r3, r3, #3
 800ad08:	4413      	add	r3, r2
 800ad0a:	009b      	lsls	r3, r3, #2
 800ad0c:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800ad10:	687a      	ldr	r2, [r7, #4]
 800ad12:	4413      	add	r3, r2
 800ad14:	3304      	adds	r3, #4
 800ad16:	60fb      	str	r3, [r7, #12]
 800ad18:	68fb      	ldr	r3, [r7, #12]
 800ad1a:	6a1a      	ldr	r2, [r3, #32]
 800ad1c:	683b      	ldr	r3, [r7, #0]
 800ad1e:	0159      	lsls	r1, r3, #5
 800ad20:	69bb      	ldr	r3, [r7, #24]
 800ad22:	440b      	add	r3, r1
 800ad24:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ad28:	691b      	ldr	r3, [r3, #16]
 800ad2a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800ad2e:	1ad2      	subs	r2, r2, r3
 800ad30:	68fb      	ldr	r3, [r7, #12]
 800ad32:	615a      	str	r2, [r3, #20]
 800ad34:	683b      	ldr	r3, [r7, #0]
 800ad36:	2b00      	cmp	r3, #0
 800ad38:	d114      	bne.n	800ad64 <PCD_EP_OutXfrComplete_int+0x120>
 800ad3a:	68fb      	ldr	r3, [r7, #12]
 800ad3c:	691b      	ldr	r3, [r3, #16]
 800ad3e:	2b00      	cmp	r3, #0
 800ad40:	d109      	bne.n	800ad56 <PCD_EP_OutXfrComplete_int+0x112>
 800ad42:	687b      	ldr	r3, [r7, #4]
 800ad44:	6818      	ldr	r0, [r3, #0]
 800ad46:	687b      	ldr	r3, [r7, #4]
 800ad48:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 800ad4c:	461a      	mov	r2, r3
 800ad4e:	2101      	movs	r1, #1
 800ad50:	f008 f972 	bl	8013038 <USB_EP0_OutStart>
 800ad54:	e006      	b.n	800ad64 <PCD_EP_OutXfrComplete_int+0x120>
 800ad56:	68fb      	ldr	r3, [r7, #12]
 800ad58:	68da      	ldr	r2, [r3, #12]
 800ad5a:	68fb      	ldr	r3, [r7, #12]
 800ad5c:	695b      	ldr	r3, [r3, #20]
 800ad5e:	441a      	add	r2, r3
 800ad60:	68fb      	ldr	r3, [r7, #12]
 800ad62:	60da      	str	r2, [r3, #12]
 800ad64:	683b      	ldr	r3, [r7, #0]
 800ad66:	b2db      	uxtb	r3, r3
 800ad68:	4619      	mov	r1, r3
 800ad6a:	6878      	ldr	r0, [r7, #4]
 800ad6c:	f00a fc58 	bl	8015620 <HAL_PCD_DataOutStageCallback>
 800ad70:	e046      	b.n	800ae00 <PCD_EP_OutXfrComplete_int+0x1bc>
 800ad72:	697b      	ldr	r3, [r7, #20]
 800ad74:	4a26      	ldr	r2, [pc, #152]	@ (800ae10 <PCD_EP_OutXfrComplete_int+0x1cc>)
 800ad76:	4293      	cmp	r3, r2
 800ad78:	d124      	bne.n	800adc4 <PCD_EP_OutXfrComplete_int+0x180>
 800ad7a:	693b      	ldr	r3, [r7, #16]
 800ad7c:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800ad80:	2b00      	cmp	r3, #0
 800ad82:	d00a      	beq.n	800ad9a <PCD_EP_OutXfrComplete_int+0x156>
 800ad84:	683b      	ldr	r3, [r7, #0]
 800ad86:	015a      	lsls	r2, r3, #5
 800ad88:	69bb      	ldr	r3, [r7, #24]
 800ad8a:	4413      	add	r3, r2
 800ad8c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ad90:	461a      	mov	r2, r3
 800ad92:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800ad96:	6093      	str	r3, [r2, #8]
 800ad98:	e032      	b.n	800ae00 <PCD_EP_OutXfrComplete_int+0x1bc>
 800ad9a:	693b      	ldr	r3, [r7, #16]
 800ad9c:	f003 0320 	and.w	r3, r3, #32
 800ada0:	2b00      	cmp	r3, #0
 800ada2:	d008      	beq.n	800adb6 <PCD_EP_OutXfrComplete_int+0x172>
 800ada4:	683b      	ldr	r3, [r7, #0]
 800ada6:	015a      	lsls	r2, r3, #5
 800ada8:	69bb      	ldr	r3, [r7, #24]
 800adaa:	4413      	add	r3, r2
 800adac:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800adb0:	461a      	mov	r2, r3
 800adb2:	2320      	movs	r3, #32
 800adb4:	6093      	str	r3, [r2, #8]
 800adb6:	683b      	ldr	r3, [r7, #0]
 800adb8:	b2db      	uxtb	r3, r3
 800adba:	4619      	mov	r1, r3
 800adbc:	6878      	ldr	r0, [r7, #4]
 800adbe:	f00a fc2f 	bl	8015620 <HAL_PCD_DataOutStageCallback>
 800adc2:	e01d      	b.n	800ae00 <PCD_EP_OutXfrComplete_int+0x1bc>
 800adc4:	683b      	ldr	r3, [r7, #0]
 800adc6:	2b00      	cmp	r3, #0
 800adc8:	d114      	bne.n	800adf4 <PCD_EP_OutXfrComplete_int+0x1b0>
 800adca:	6879      	ldr	r1, [r7, #4]
 800adcc:	683a      	ldr	r2, [r7, #0]
 800adce:	4613      	mov	r3, r2
 800add0:	00db      	lsls	r3, r3, #3
 800add2:	4413      	add	r3, r2
 800add4:	009b      	lsls	r3, r3, #2
 800add6:	440b      	add	r3, r1
 800add8:	f503 7319 	add.w	r3, r3, #612	@ 0x264
 800addc:	681b      	ldr	r3, [r3, #0]
 800adde:	2b00      	cmp	r3, #0
 800ade0:	d108      	bne.n	800adf4 <PCD_EP_OutXfrComplete_int+0x1b0>
 800ade2:	687b      	ldr	r3, [r7, #4]
 800ade4:	6818      	ldr	r0, [r3, #0]
 800ade6:	687b      	ldr	r3, [r7, #4]
 800ade8:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 800adec:	461a      	mov	r2, r3
 800adee:	2100      	movs	r1, #0
 800adf0:	f008 f922 	bl	8013038 <USB_EP0_OutStart>
 800adf4:	683b      	ldr	r3, [r7, #0]
 800adf6:	b2db      	uxtb	r3, r3
 800adf8:	4619      	mov	r1, r3
 800adfa:	6878      	ldr	r0, [r7, #4]
 800adfc:	f00a fc10 	bl	8015620 <HAL_PCD_DataOutStageCallback>
 800ae00:	2300      	movs	r3, #0
 800ae02:	4618      	mov	r0, r3
 800ae04:	3720      	adds	r7, #32
 800ae06:	46bd      	mov	sp, r7
 800ae08:	bd80      	pop	{r7, pc}
 800ae0a:	bf00      	nop
 800ae0c:	4f54300a 	.word	0x4f54300a
 800ae10:	4f54310a 	.word	0x4f54310a

0800ae14 <PCD_EP_OutSetupPacket_int>:
 800ae14:	b580      	push	{r7, lr}
 800ae16:	b086      	sub	sp, #24
 800ae18:	af00      	add	r7, sp, #0
 800ae1a:	6078      	str	r0, [r7, #4]
 800ae1c:	6039      	str	r1, [r7, #0]
 800ae1e:	687b      	ldr	r3, [r7, #4]
 800ae20:	681b      	ldr	r3, [r3, #0]
 800ae22:	617b      	str	r3, [r7, #20]
 800ae24:	697b      	ldr	r3, [r7, #20]
 800ae26:	613b      	str	r3, [r7, #16]
 800ae28:	697b      	ldr	r3, [r7, #20]
 800ae2a:	333c      	adds	r3, #60	@ 0x3c
 800ae2c:	3304      	adds	r3, #4
 800ae2e:	681b      	ldr	r3, [r3, #0]
 800ae30:	60fb      	str	r3, [r7, #12]
 800ae32:	683b      	ldr	r3, [r7, #0]
 800ae34:	015a      	lsls	r2, r3, #5
 800ae36:	693b      	ldr	r3, [r7, #16]
 800ae38:	4413      	add	r3, r2
 800ae3a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ae3e:	689b      	ldr	r3, [r3, #8]
 800ae40:	60bb      	str	r3, [r7, #8]
 800ae42:	68fb      	ldr	r3, [r7, #12]
 800ae44:	4a15      	ldr	r2, [pc, #84]	@ (800ae9c <PCD_EP_OutSetupPacket_int+0x88>)
 800ae46:	4293      	cmp	r3, r2
 800ae48:	d90e      	bls.n	800ae68 <PCD_EP_OutSetupPacket_int+0x54>
 800ae4a:	68bb      	ldr	r3, [r7, #8]
 800ae4c:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800ae50:	2b00      	cmp	r3, #0
 800ae52:	d009      	beq.n	800ae68 <PCD_EP_OutSetupPacket_int+0x54>
 800ae54:	683b      	ldr	r3, [r7, #0]
 800ae56:	015a      	lsls	r2, r3, #5
 800ae58:	693b      	ldr	r3, [r7, #16]
 800ae5a:	4413      	add	r3, r2
 800ae5c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ae60:	461a      	mov	r2, r3
 800ae62:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800ae66:	6093      	str	r3, [r2, #8]
 800ae68:	6878      	ldr	r0, [r7, #4]
 800ae6a:	f00a fbc7 	bl	80155fc <HAL_PCD_SetupStageCallback>
 800ae6e:	68fb      	ldr	r3, [r7, #12]
 800ae70:	4a0a      	ldr	r2, [pc, #40]	@ (800ae9c <PCD_EP_OutSetupPacket_int+0x88>)
 800ae72:	4293      	cmp	r3, r2
 800ae74:	d90c      	bls.n	800ae90 <PCD_EP_OutSetupPacket_int+0x7c>
 800ae76:	687b      	ldr	r3, [r7, #4]
 800ae78:	799b      	ldrb	r3, [r3, #6]
 800ae7a:	2b01      	cmp	r3, #1
 800ae7c:	d108      	bne.n	800ae90 <PCD_EP_OutSetupPacket_int+0x7c>
 800ae7e:	687b      	ldr	r3, [r7, #4]
 800ae80:	6818      	ldr	r0, [r3, #0]
 800ae82:	687b      	ldr	r3, [r7, #4]
 800ae84:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 800ae88:	461a      	mov	r2, r3
 800ae8a:	2101      	movs	r1, #1
 800ae8c:	f008 f8d4 	bl	8013038 <USB_EP0_OutStart>
 800ae90:	2300      	movs	r3, #0
 800ae92:	4618      	mov	r0, r3
 800ae94:	3718      	adds	r7, #24
 800ae96:	46bd      	mov	sp, r7
 800ae98:	bd80      	pop	{r7, pc}
 800ae9a:	bf00      	nop
 800ae9c:	4f54300a 	.word	0x4f54300a

0800aea0 <HAL_PCDEx_SetTxFiFo>:
 800aea0:	b480      	push	{r7}
 800aea2:	b085      	sub	sp, #20
 800aea4:	af00      	add	r7, sp, #0
 800aea6:	6078      	str	r0, [r7, #4]
 800aea8:	460b      	mov	r3, r1
 800aeaa:	70fb      	strb	r3, [r7, #3]
 800aeac:	4613      	mov	r3, r2
 800aeae:	803b      	strh	r3, [r7, #0]
 800aeb0:	687b      	ldr	r3, [r7, #4]
 800aeb2:	681b      	ldr	r3, [r3, #0]
 800aeb4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800aeb6:	60bb      	str	r3, [r7, #8]
 800aeb8:	78fb      	ldrb	r3, [r7, #3]
 800aeba:	2b00      	cmp	r3, #0
 800aebc:	d107      	bne.n	800aece <HAL_PCDEx_SetTxFiFo+0x2e>
 800aebe:	883b      	ldrh	r3, [r7, #0]
 800aec0:	0419      	lsls	r1, r3, #16
 800aec2:	687b      	ldr	r3, [r7, #4]
 800aec4:	681b      	ldr	r3, [r3, #0]
 800aec6:	68ba      	ldr	r2, [r7, #8]
 800aec8:	430a      	orrs	r2, r1
 800aeca:	629a      	str	r2, [r3, #40]	@ 0x28
 800aecc:	e028      	b.n	800af20 <HAL_PCDEx_SetTxFiFo+0x80>
 800aece:	687b      	ldr	r3, [r7, #4]
 800aed0:	681b      	ldr	r3, [r3, #0]
 800aed2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800aed4:	0c1b      	lsrs	r3, r3, #16
 800aed6:	68ba      	ldr	r2, [r7, #8]
 800aed8:	4413      	add	r3, r2
 800aeda:	60bb      	str	r3, [r7, #8]
 800aedc:	2300      	movs	r3, #0
 800aede:	73fb      	strb	r3, [r7, #15]
 800aee0:	e00d      	b.n	800aefe <HAL_PCDEx_SetTxFiFo+0x5e>
 800aee2:	687b      	ldr	r3, [r7, #4]
 800aee4:	681a      	ldr	r2, [r3, #0]
 800aee6:	7bfb      	ldrb	r3, [r7, #15]
 800aee8:	3340      	adds	r3, #64	@ 0x40
 800aeea:	009b      	lsls	r3, r3, #2
 800aeec:	4413      	add	r3, r2
 800aeee:	685b      	ldr	r3, [r3, #4]
 800aef0:	0c1b      	lsrs	r3, r3, #16
 800aef2:	68ba      	ldr	r2, [r7, #8]
 800aef4:	4413      	add	r3, r2
 800aef6:	60bb      	str	r3, [r7, #8]
 800aef8:	7bfb      	ldrb	r3, [r7, #15]
 800aefa:	3301      	adds	r3, #1
 800aefc:	73fb      	strb	r3, [r7, #15]
 800aefe:	7bfa      	ldrb	r2, [r7, #15]
 800af00:	78fb      	ldrb	r3, [r7, #3]
 800af02:	3b01      	subs	r3, #1
 800af04:	429a      	cmp	r2, r3
 800af06:	d3ec      	bcc.n	800aee2 <HAL_PCDEx_SetTxFiFo+0x42>
 800af08:	883b      	ldrh	r3, [r7, #0]
 800af0a:	0418      	lsls	r0, r3, #16
 800af0c:	687b      	ldr	r3, [r7, #4]
 800af0e:	6819      	ldr	r1, [r3, #0]
 800af10:	78fb      	ldrb	r3, [r7, #3]
 800af12:	3b01      	subs	r3, #1
 800af14:	68ba      	ldr	r2, [r7, #8]
 800af16:	4302      	orrs	r2, r0
 800af18:	3340      	adds	r3, #64	@ 0x40
 800af1a:	009b      	lsls	r3, r3, #2
 800af1c:	440b      	add	r3, r1
 800af1e:	605a      	str	r2, [r3, #4]
 800af20:	2300      	movs	r3, #0
 800af22:	4618      	mov	r0, r3
 800af24:	3714      	adds	r7, #20
 800af26:	46bd      	mov	sp, r7
 800af28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af2c:	4770      	bx	lr

0800af2e <HAL_PCDEx_SetRxFiFo>:
 800af2e:	b480      	push	{r7}
 800af30:	b083      	sub	sp, #12
 800af32:	af00      	add	r7, sp, #0
 800af34:	6078      	str	r0, [r7, #4]
 800af36:	460b      	mov	r3, r1
 800af38:	807b      	strh	r3, [r7, #2]
 800af3a:	687b      	ldr	r3, [r7, #4]
 800af3c:	681b      	ldr	r3, [r3, #0]
 800af3e:	887a      	ldrh	r2, [r7, #2]
 800af40:	625a      	str	r2, [r3, #36]	@ 0x24
 800af42:	2300      	movs	r3, #0
 800af44:	4618      	mov	r0, r3
 800af46:	370c      	adds	r7, #12
 800af48:	46bd      	mov	sp, r7
 800af4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af4e:	4770      	bx	lr

0800af50 <HAL_PCDEx_ActivateLPM>:
 800af50:	b480      	push	{r7}
 800af52:	b085      	sub	sp, #20
 800af54:	af00      	add	r7, sp, #0
 800af56:	6078      	str	r0, [r7, #4]
 800af58:	687b      	ldr	r3, [r7, #4]
 800af5a:	681b      	ldr	r3, [r3, #0]
 800af5c:	60fb      	str	r3, [r7, #12]
 800af5e:	687b      	ldr	r3, [r7, #4]
 800af60:	2201      	movs	r2, #1
 800af62:	f8c3 24d8 	str.w	r2, [r3, #1240]	@ 0x4d8
 800af66:	687b      	ldr	r3, [r7, #4]
 800af68:	2200      	movs	r2, #0
 800af6a:	f883 24cc 	strb.w	r2, [r3, #1228]	@ 0x4cc
 800af6e:	68fb      	ldr	r3, [r7, #12]
 800af70:	699b      	ldr	r3, [r3, #24]
 800af72:	f043 6200 	orr.w	r2, r3, #134217728	@ 0x8000000
 800af76:	68fb      	ldr	r3, [r7, #12]
 800af78:	619a      	str	r2, [r3, #24]
 800af7a:	68fb      	ldr	r3, [r7, #12]
 800af7c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800af7e:	4b05      	ldr	r3, [pc, #20]	@ (800af94 <HAL_PCDEx_ActivateLPM+0x44>)
 800af80:	4313      	orrs	r3, r2
 800af82:	68fa      	ldr	r2, [r7, #12]
 800af84:	6553      	str	r3, [r2, #84]	@ 0x54
 800af86:	2300      	movs	r3, #0
 800af88:	4618      	mov	r0, r3
 800af8a:	3714      	adds	r7, #20
 800af8c:	46bd      	mov	sp, r7
 800af8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af92:	4770      	bx	lr
 800af94:	10000003 	.word	0x10000003

0800af98 <HAL_PCDEx_LPM_Callback>:
 800af98:	b480      	push	{r7}
 800af9a:	b083      	sub	sp, #12
 800af9c:	af00      	add	r7, sp, #0
 800af9e:	6078      	str	r0, [r7, #4]
 800afa0:	460b      	mov	r3, r1
 800afa2:	70fb      	strb	r3, [r7, #3]
 800afa4:	bf00      	nop
 800afa6:	370c      	adds	r7, #12
 800afa8:	46bd      	mov	sp, r7
 800afaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afae:	4770      	bx	lr

0800afb0 <HAL_PWREx_ConfigSupply>:
 800afb0:	b580      	push	{r7, lr}
 800afb2:	b084      	sub	sp, #16
 800afb4:	af00      	add	r7, sp, #0
 800afb6:	6078      	str	r0, [r7, #4]
 800afb8:	4b19      	ldr	r3, [pc, #100]	@ (800b020 <HAL_PWREx_ConfigSupply+0x70>)
 800afba:	68db      	ldr	r3, [r3, #12]
 800afbc:	f003 0304 	and.w	r3, r3, #4
 800afc0:	2b04      	cmp	r3, #4
 800afc2:	d00a      	beq.n	800afda <HAL_PWREx_ConfigSupply+0x2a>
 800afc4:	4b16      	ldr	r3, [pc, #88]	@ (800b020 <HAL_PWREx_ConfigSupply+0x70>)
 800afc6:	68db      	ldr	r3, [r3, #12]
 800afc8:	f003 0307 	and.w	r3, r3, #7
 800afcc:	687a      	ldr	r2, [r7, #4]
 800afce:	429a      	cmp	r2, r3
 800afd0:	d001      	beq.n	800afd6 <HAL_PWREx_ConfigSupply+0x26>
 800afd2:	2301      	movs	r3, #1
 800afd4:	e01f      	b.n	800b016 <HAL_PWREx_ConfigSupply+0x66>
 800afd6:	2300      	movs	r3, #0
 800afd8:	e01d      	b.n	800b016 <HAL_PWREx_ConfigSupply+0x66>
 800afda:	4b11      	ldr	r3, [pc, #68]	@ (800b020 <HAL_PWREx_ConfigSupply+0x70>)
 800afdc:	68db      	ldr	r3, [r3, #12]
 800afde:	f023 0207 	bic.w	r2, r3, #7
 800afe2:	490f      	ldr	r1, [pc, #60]	@ (800b020 <HAL_PWREx_ConfigSupply+0x70>)
 800afe4:	687b      	ldr	r3, [r7, #4]
 800afe6:	4313      	orrs	r3, r2
 800afe8:	60cb      	str	r3, [r1, #12]
 800afea:	f7fa f97d 	bl	80052e8 <HAL_GetTick>
 800afee:	60f8      	str	r0, [r7, #12]
 800aff0:	e009      	b.n	800b006 <HAL_PWREx_ConfigSupply+0x56>
 800aff2:	f7fa f979 	bl	80052e8 <HAL_GetTick>
 800aff6:	4602      	mov	r2, r0
 800aff8:	68fb      	ldr	r3, [r7, #12]
 800affa:	1ad3      	subs	r3, r2, r3
 800affc:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800b000:	d901      	bls.n	800b006 <HAL_PWREx_ConfigSupply+0x56>
 800b002:	2301      	movs	r3, #1
 800b004:	e007      	b.n	800b016 <HAL_PWREx_ConfigSupply+0x66>
 800b006:	4b06      	ldr	r3, [pc, #24]	@ (800b020 <HAL_PWREx_ConfigSupply+0x70>)
 800b008:	685b      	ldr	r3, [r3, #4]
 800b00a:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800b00e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800b012:	d1ee      	bne.n	800aff2 <HAL_PWREx_ConfigSupply+0x42>
 800b014:	2300      	movs	r3, #0
 800b016:	4618      	mov	r0, r3
 800b018:	3710      	adds	r7, #16
 800b01a:	46bd      	mov	sp, r7
 800b01c:	bd80      	pop	{r7, pc}
 800b01e:	bf00      	nop
 800b020:	58024800 	.word	0x58024800

0800b024 <HAL_PWREx_EnableUSBVoltageDetector>:
 800b024:	b480      	push	{r7}
 800b026:	af00      	add	r7, sp, #0
 800b028:	4b05      	ldr	r3, [pc, #20]	@ (800b040 <HAL_PWREx_EnableUSBVoltageDetector+0x1c>)
 800b02a:	68db      	ldr	r3, [r3, #12]
 800b02c:	4a04      	ldr	r2, [pc, #16]	@ (800b040 <HAL_PWREx_EnableUSBVoltageDetector+0x1c>)
 800b02e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800b032:	60d3      	str	r3, [r2, #12]
 800b034:	bf00      	nop
 800b036:	46bd      	mov	sp, r7
 800b038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b03c:	4770      	bx	lr
 800b03e:	bf00      	nop
 800b040:	58024800 	.word	0x58024800

0800b044 <HAL_RCC_OscConfig>:
 800b044:	b580      	push	{r7, lr}
 800b046:	b08c      	sub	sp, #48	@ 0x30
 800b048:	af00      	add	r7, sp, #0
 800b04a:	6078      	str	r0, [r7, #4]
 800b04c:	687b      	ldr	r3, [r7, #4]
 800b04e:	2b00      	cmp	r3, #0
 800b050:	d101      	bne.n	800b056 <HAL_RCC_OscConfig+0x12>
 800b052:	2301      	movs	r3, #1
 800b054:	e3c8      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b056:	687b      	ldr	r3, [r7, #4]
 800b058:	681b      	ldr	r3, [r3, #0]
 800b05a:	f003 0301 	and.w	r3, r3, #1
 800b05e:	2b00      	cmp	r3, #0
 800b060:	f000 8087 	beq.w	800b172 <HAL_RCC_OscConfig+0x12e>
 800b064:	4b88      	ldr	r3, [pc, #544]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b066:	691b      	ldr	r3, [r3, #16]
 800b068:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800b06c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800b06e:	4b86      	ldr	r3, [pc, #536]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b070:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b072:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b074:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800b076:	2b10      	cmp	r3, #16
 800b078:	d007      	beq.n	800b08a <HAL_RCC_OscConfig+0x46>
 800b07a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800b07c:	2b18      	cmp	r3, #24
 800b07e:	d110      	bne.n	800b0a2 <HAL_RCC_OscConfig+0x5e>
 800b080:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b082:	f003 0303 	and.w	r3, r3, #3
 800b086:	2b02      	cmp	r3, #2
 800b088:	d10b      	bne.n	800b0a2 <HAL_RCC_OscConfig+0x5e>
 800b08a:	4b7f      	ldr	r3, [pc, #508]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b08c:	681b      	ldr	r3, [r3, #0]
 800b08e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800b092:	2b00      	cmp	r3, #0
 800b094:	d06c      	beq.n	800b170 <HAL_RCC_OscConfig+0x12c>
 800b096:	687b      	ldr	r3, [r7, #4]
 800b098:	685b      	ldr	r3, [r3, #4]
 800b09a:	2b00      	cmp	r3, #0
 800b09c:	d168      	bne.n	800b170 <HAL_RCC_OscConfig+0x12c>
 800b09e:	2301      	movs	r3, #1
 800b0a0:	e3a2      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b0a2:	687b      	ldr	r3, [r7, #4]
 800b0a4:	685b      	ldr	r3, [r3, #4]
 800b0a6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800b0aa:	d106      	bne.n	800b0ba <HAL_RCC_OscConfig+0x76>
 800b0ac:	4b76      	ldr	r3, [pc, #472]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b0ae:	681b      	ldr	r3, [r3, #0]
 800b0b0:	4a75      	ldr	r2, [pc, #468]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b0b2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800b0b6:	6013      	str	r3, [r2, #0]
 800b0b8:	e02e      	b.n	800b118 <HAL_RCC_OscConfig+0xd4>
 800b0ba:	687b      	ldr	r3, [r7, #4]
 800b0bc:	685b      	ldr	r3, [r3, #4]
 800b0be:	2b00      	cmp	r3, #0
 800b0c0:	d10c      	bne.n	800b0dc <HAL_RCC_OscConfig+0x98>
 800b0c2:	4b71      	ldr	r3, [pc, #452]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b0c4:	681b      	ldr	r3, [r3, #0]
 800b0c6:	4a70      	ldr	r2, [pc, #448]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b0c8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800b0cc:	6013      	str	r3, [r2, #0]
 800b0ce:	4b6e      	ldr	r3, [pc, #440]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b0d0:	681b      	ldr	r3, [r3, #0]
 800b0d2:	4a6d      	ldr	r2, [pc, #436]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b0d4:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800b0d8:	6013      	str	r3, [r2, #0]
 800b0da:	e01d      	b.n	800b118 <HAL_RCC_OscConfig+0xd4>
 800b0dc:	687b      	ldr	r3, [r7, #4]
 800b0de:	685b      	ldr	r3, [r3, #4]
 800b0e0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800b0e4:	d10c      	bne.n	800b100 <HAL_RCC_OscConfig+0xbc>
 800b0e6:	4b68      	ldr	r3, [pc, #416]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b0e8:	681b      	ldr	r3, [r3, #0]
 800b0ea:	4a67      	ldr	r2, [pc, #412]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b0ec:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800b0f0:	6013      	str	r3, [r2, #0]
 800b0f2:	4b65      	ldr	r3, [pc, #404]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b0f4:	681b      	ldr	r3, [r3, #0]
 800b0f6:	4a64      	ldr	r2, [pc, #400]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b0f8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800b0fc:	6013      	str	r3, [r2, #0]
 800b0fe:	e00b      	b.n	800b118 <HAL_RCC_OscConfig+0xd4>
 800b100:	4b61      	ldr	r3, [pc, #388]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b102:	681b      	ldr	r3, [r3, #0]
 800b104:	4a60      	ldr	r2, [pc, #384]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b106:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800b10a:	6013      	str	r3, [r2, #0]
 800b10c:	4b5e      	ldr	r3, [pc, #376]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b10e:	681b      	ldr	r3, [r3, #0]
 800b110:	4a5d      	ldr	r2, [pc, #372]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b112:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800b116:	6013      	str	r3, [r2, #0]
 800b118:	687b      	ldr	r3, [r7, #4]
 800b11a:	685b      	ldr	r3, [r3, #4]
 800b11c:	2b00      	cmp	r3, #0
 800b11e:	d013      	beq.n	800b148 <HAL_RCC_OscConfig+0x104>
 800b120:	f7fa f8e2 	bl	80052e8 <HAL_GetTick>
 800b124:	6278      	str	r0, [r7, #36]	@ 0x24
 800b126:	e008      	b.n	800b13a <HAL_RCC_OscConfig+0xf6>
 800b128:	f7fa f8de 	bl	80052e8 <HAL_GetTick>
 800b12c:	4602      	mov	r2, r0
 800b12e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b130:	1ad3      	subs	r3, r2, r3
 800b132:	2b64      	cmp	r3, #100	@ 0x64
 800b134:	d901      	bls.n	800b13a <HAL_RCC_OscConfig+0xf6>
 800b136:	2303      	movs	r3, #3
 800b138:	e356      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b13a:	4b53      	ldr	r3, [pc, #332]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b13c:	681b      	ldr	r3, [r3, #0]
 800b13e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800b142:	2b00      	cmp	r3, #0
 800b144:	d0f0      	beq.n	800b128 <HAL_RCC_OscConfig+0xe4>
 800b146:	e014      	b.n	800b172 <HAL_RCC_OscConfig+0x12e>
 800b148:	f7fa f8ce 	bl	80052e8 <HAL_GetTick>
 800b14c:	6278      	str	r0, [r7, #36]	@ 0x24
 800b14e:	e008      	b.n	800b162 <HAL_RCC_OscConfig+0x11e>
 800b150:	f7fa f8ca 	bl	80052e8 <HAL_GetTick>
 800b154:	4602      	mov	r2, r0
 800b156:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b158:	1ad3      	subs	r3, r2, r3
 800b15a:	2b64      	cmp	r3, #100	@ 0x64
 800b15c:	d901      	bls.n	800b162 <HAL_RCC_OscConfig+0x11e>
 800b15e:	2303      	movs	r3, #3
 800b160:	e342      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b162:	4b49      	ldr	r3, [pc, #292]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b164:	681b      	ldr	r3, [r3, #0]
 800b166:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800b16a:	2b00      	cmp	r3, #0
 800b16c:	d1f0      	bne.n	800b150 <HAL_RCC_OscConfig+0x10c>
 800b16e:	e000      	b.n	800b172 <HAL_RCC_OscConfig+0x12e>
 800b170:	bf00      	nop
 800b172:	687b      	ldr	r3, [r7, #4]
 800b174:	681b      	ldr	r3, [r3, #0]
 800b176:	f003 0302 	and.w	r3, r3, #2
 800b17a:	2b00      	cmp	r3, #0
 800b17c:	f000 808c 	beq.w	800b298 <HAL_RCC_OscConfig+0x254>
 800b180:	4b41      	ldr	r3, [pc, #260]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b182:	691b      	ldr	r3, [r3, #16]
 800b184:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800b188:	623b      	str	r3, [r7, #32]
 800b18a:	4b3f      	ldr	r3, [pc, #252]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b18c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b18e:	61fb      	str	r3, [r7, #28]
 800b190:	6a3b      	ldr	r3, [r7, #32]
 800b192:	2b00      	cmp	r3, #0
 800b194:	d007      	beq.n	800b1a6 <HAL_RCC_OscConfig+0x162>
 800b196:	6a3b      	ldr	r3, [r7, #32]
 800b198:	2b18      	cmp	r3, #24
 800b19a:	d137      	bne.n	800b20c <HAL_RCC_OscConfig+0x1c8>
 800b19c:	69fb      	ldr	r3, [r7, #28]
 800b19e:	f003 0303 	and.w	r3, r3, #3
 800b1a2:	2b00      	cmp	r3, #0
 800b1a4:	d132      	bne.n	800b20c <HAL_RCC_OscConfig+0x1c8>
 800b1a6:	4b38      	ldr	r3, [pc, #224]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b1a8:	681b      	ldr	r3, [r3, #0]
 800b1aa:	f003 0304 	and.w	r3, r3, #4
 800b1ae:	2b00      	cmp	r3, #0
 800b1b0:	d005      	beq.n	800b1be <HAL_RCC_OscConfig+0x17a>
 800b1b2:	687b      	ldr	r3, [r7, #4]
 800b1b4:	68db      	ldr	r3, [r3, #12]
 800b1b6:	2b00      	cmp	r3, #0
 800b1b8:	d101      	bne.n	800b1be <HAL_RCC_OscConfig+0x17a>
 800b1ba:	2301      	movs	r3, #1
 800b1bc:	e314      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b1be:	4b32      	ldr	r3, [pc, #200]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b1c0:	681b      	ldr	r3, [r3, #0]
 800b1c2:	f023 0219 	bic.w	r2, r3, #25
 800b1c6:	687b      	ldr	r3, [r7, #4]
 800b1c8:	68db      	ldr	r3, [r3, #12]
 800b1ca:	492f      	ldr	r1, [pc, #188]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b1cc:	4313      	orrs	r3, r2
 800b1ce:	600b      	str	r3, [r1, #0]
 800b1d0:	f7fa f88a 	bl	80052e8 <HAL_GetTick>
 800b1d4:	6278      	str	r0, [r7, #36]	@ 0x24
 800b1d6:	e008      	b.n	800b1ea <HAL_RCC_OscConfig+0x1a6>
 800b1d8:	f7fa f886 	bl	80052e8 <HAL_GetTick>
 800b1dc:	4602      	mov	r2, r0
 800b1de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b1e0:	1ad3      	subs	r3, r2, r3
 800b1e2:	2b02      	cmp	r3, #2
 800b1e4:	d901      	bls.n	800b1ea <HAL_RCC_OscConfig+0x1a6>
 800b1e6:	2303      	movs	r3, #3
 800b1e8:	e2fe      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b1ea:	4b27      	ldr	r3, [pc, #156]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b1ec:	681b      	ldr	r3, [r3, #0]
 800b1ee:	f003 0304 	and.w	r3, r3, #4
 800b1f2:	2b00      	cmp	r3, #0
 800b1f4:	d0f0      	beq.n	800b1d8 <HAL_RCC_OscConfig+0x194>
 800b1f6:	4b24      	ldr	r3, [pc, #144]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b1f8:	685b      	ldr	r3, [r3, #4]
 800b1fa:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 800b1fe:	687b      	ldr	r3, [r7, #4]
 800b200:	691b      	ldr	r3, [r3, #16]
 800b202:	061b      	lsls	r3, r3, #24
 800b204:	4920      	ldr	r1, [pc, #128]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b206:	4313      	orrs	r3, r2
 800b208:	604b      	str	r3, [r1, #4]
 800b20a:	e045      	b.n	800b298 <HAL_RCC_OscConfig+0x254>
 800b20c:	687b      	ldr	r3, [r7, #4]
 800b20e:	68db      	ldr	r3, [r3, #12]
 800b210:	2b00      	cmp	r3, #0
 800b212:	d026      	beq.n	800b262 <HAL_RCC_OscConfig+0x21e>
 800b214:	4b1c      	ldr	r3, [pc, #112]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b216:	681b      	ldr	r3, [r3, #0]
 800b218:	f023 0219 	bic.w	r2, r3, #25
 800b21c:	687b      	ldr	r3, [r7, #4]
 800b21e:	68db      	ldr	r3, [r3, #12]
 800b220:	4919      	ldr	r1, [pc, #100]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b222:	4313      	orrs	r3, r2
 800b224:	600b      	str	r3, [r1, #0]
 800b226:	f7fa f85f 	bl	80052e8 <HAL_GetTick>
 800b22a:	6278      	str	r0, [r7, #36]	@ 0x24
 800b22c:	e008      	b.n	800b240 <HAL_RCC_OscConfig+0x1fc>
 800b22e:	f7fa f85b 	bl	80052e8 <HAL_GetTick>
 800b232:	4602      	mov	r2, r0
 800b234:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b236:	1ad3      	subs	r3, r2, r3
 800b238:	2b02      	cmp	r3, #2
 800b23a:	d901      	bls.n	800b240 <HAL_RCC_OscConfig+0x1fc>
 800b23c:	2303      	movs	r3, #3
 800b23e:	e2d3      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b240:	4b11      	ldr	r3, [pc, #68]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b242:	681b      	ldr	r3, [r3, #0]
 800b244:	f003 0304 	and.w	r3, r3, #4
 800b248:	2b00      	cmp	r3, #0
 800b24a:	d0f0      	beq.n	800b22e <HAL_RCC_OscConfig+0x1ea>
 800b24c:	4b0e      	ldr	r3, [pc, #56]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b24e:	685b      	ldr	r3, [r3, #4]
 800b250:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 800b254:	687b      	ldr	r3, [r7, #4]
 800b256:	691b      	ldr	r3, [r3, #16]
 800b258:	061b      	lsls	r3, r3, #24
 800b25a:	490b      	ldr	r1, [pc, #44]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b25c:	4313      	orrs	r3, r2
 800b25e:	604b      	str	r3, [r1, #4]
 800b260:	e01a      	b.n	800b298 <HAL_RCC_OscConfig+0x254>
 800b262:	4b09      	ldr	r3, [pc, #36]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b264:	681b      	ldr	r3, [r3, #0]
 800b266:	4a08      	ldr	r2, [pc, #32]	@ (800b288 <HAL_RCC_OscConfig+0x244>)
 800b268:	f023 0301 	bic.w	r3, r3, #1
 800b26c:	6013      	str	r3, [r2, #0]
 800b26e:	f7fa f83b 	bl	80052e8 <HAL_GetTick>
 800b272:	6278      	str	r0, [r7, #36]	@ 0x24
 800b274:	e00a      	b.n	800b28c <HAL_RCC_OscConfig+0x248>
 800b276:	f7fa f837 	bl	80052e8 <HAL_GetTick>
 800b27a:	4602      	mov	r2, r0
 800b27c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b27e:	1ad3      	subs	r3, r2, r3
 800b280:	2b02      	cmp	r3, #2
 800b282:	d903      	bls.n	800b28c <HAL_RCC_OscConfig+0x248>
 800b284:	2303      	movs	r3, #3
 800b286:	e2af      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b288:	58024400 	.word	0x58024400
 800b28c:	4b96      	ldr	r3, [pc, #600]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b28e:	681b      	ldr	r3, [r3, #0]
 800b290:	f003 0304 	and.w	r3, r3, #4
 800b294:	2b00      	cmp	r3, #0
 800b296:	d1ee      	bne.n	800b276 <HAL_RCC_OscConfig+0x232>
 800b298:	687b      	ldr	r3, [r7, #4]
 800b29a:	681b      	ldr	r3, [r3, #0]
 800b29c:	f003 0310 	and.w	r3, r3, #16
 800b2a0:	2b00      	cmp	r3, #0
 800b2a2:	d06a      	beq.n	800b37a <HAL_RCC_OscConfig+0x336>
 800b2a4:	4b90      	ldr	r3, [pc, #576]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b2a6:	691b      	ldr	r3, [r3, #16]
 800b2a8:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800b2ac:	61bb      	str	r3, [r7, #24]
 800b2ae:	4b8e      	ldr	r3, [pc, #568]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b2b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b2b2:	617b      	str	r3, [r7, #20]
 800b2b4:	69bb      	ldr	r3, [r7, #24]
 800b2b6:	2b08      	cmp	r3, #8
 800b2b8:	d007      	beq.n	800b2ca <HAL_RCC_OscConfig+0x286>
 800b2ba:	69bb      	ldr	r3, [r7, #24]
 800b2bc:	2b18      	cmp	r3, #24
 800b2be:	d11b      	bne.n	800b2f8 <HAL_RCC_OscConfig+0x2b4>
 800b2c0:	697b      	ldr	r3, [r7, #20]
 800b2c2:	f003 0303 	and.w	r3, r3, #3
 800b2c6:	2b01      	cmp	r3, #1
 800b2c8:	d116      	bne.n	800b2f8 <HAL_RCC_OscConfig+0x2b4>
 800b2ca:	4b87      	ldr	r3, [pc, #540]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b2cc:	681b      	ldr	r3, [r3, #0]
 800b2ce:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800b2d2:	2b00      	cmp	r3, #0
 800b2d4:	d005      	beq.n	800b2e2 <HAL_RCC_OscConfig+0x29e>
 800b2d6:	687b      	ldr	r3, [r7, #4]
 800b2d8:	69db      	ldr	r3, [r3, #28]
 800b2da:	2b80      	cmp	r3, #128	@ 0x80
 800b2dc:	d001      	beq.n	800b2e2 <HAL_RCC_OscConfig+0x29e>
 800b2de:	2301      	movs	r3, #1
 800b2e0:	e282      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b2e2:	4b81      	ldr	r3, [pc, #516]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b2e4:	68db      	ldr	r3, [r3, #12]
 800b2e6:	f023 527c 	bic.w	r2, r3, #1056964608	@ 0x3f000000
 800b2ea:	687b      	ldr	r3, [r7, #4]
 800b2ec:	6a1b      	ldr	r3, [r3, #32]
 800b2ee:	061b      	lsls	r3, r3, #24
 800b2f0:	497d      	ldr	r1, [pc, #500]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b2f2:	4313      	orrs	r3, r2
 800b2f4:	60cb      	str	r3, [r1, #12]
 800b2f6:	e040      	b.n	800b37a <HAL_RCC_OscConfig+0x336>
 800b2f8:	687b      	ldr	r3, [r7, #4]
 800b2fa:	69db      	ldr	r3, [r3, #28]
 800b2fc:	2b00      	cmp	r3, #0
 800b2fe:	d023      	beq.n	800b348 <HAL_RCC_OscConfig+0x304>
 800b300:	4b79      	ldr	r3, [pc, #484]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b302:	681b      	ldr	r3, [r3, #0]
 800b304:	4a78      	ldr	r2, [pc, #480]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b306:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800b30a:	6013      	str	r3, [r2, #0]
 800b30c:	f7f9 ffec 	bl	80052e8 <HAL_GetTick>
 800b310:	6278      	str	r0, [r7, #36]	@ 0x24
 800b312:	e008      	b.n	800b326 <HAL_RCC_OscConfig+0x2e2>
 800b314:	f7f9 ffe8 	bl	80052e8 <HAL_GetTick>
 800b318:	4602      	mov	r2, r0
 800b31a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b31c:	1ad3      	subs	r3, r2, r3
 800b31e:	2b02      	cmp	r3, #2
 800b320:	d901      	bls.n	800b326 <HAL_RCC_OscConfig+0x2e2>
 800b322:	2303      	movs	r3, #3
 800b324:	e260      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b326:	4b70      	ldr	r3, [pc, #448]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b328:	681b      	ldr	r3, [r3, #0]
 800b32a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800b32e:	2b00      	cmp	r3, #0
 800b330:	d0f0      	beq.n	800b314 <HAL_RCC_OscConfig+0x2d0>
 800b332:	4b6d      	ldr	r3, [pc, #436]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b334:	68db      	ldr	r3, [r3, #12]
 800b336:	f023 527c 	bic.w	r2, r3, #1056964608	@ 0x3f000000
 800b33a:	687b      	ldr	r3, [r7, #4]
 800b33c:	6a1b      	ldr	r3, [r3, #32]
 800b33e:	061b      	lsls	r3, r3, #24
 800b340:	4969      	ldr	r1, [pc, #420]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b342:	4313      	orrs	r3, r2
 800b344:	60cb      	str	r3, [r1, #12]
 800b346:	e018      	b.n	800b37a <HAL_RCC_OscConfig+0x336>
 800b348:	4b67      	ldr	r3, [pc, #412]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b34a:	681b      	ldr	r3, [r3, #0]
 800b34c:	4a66      	ldr	r2, [pc, #408]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b34e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800b352:	6013      	str	r3, [r2, #0]
 800b354:	f7f9 ffc8 	bl	80052e8 <HAL_GetTick>
 800b358:	6278      	str	r0, [r7, #36]	@ 0x24
 800b35a:	e008      	b.n	800b36e <HAL_RCC_OscConfig+0x32a>
 800b35c:	f7f9 ffc4 	bl	80052e8 <HAL_GetTick>
 800b360:	4602      	mov	r2, r0
 800b362:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b364:	1ad3      	subs	r3, r2, r3
 800b366:	2b02      	cmp	r3, #2
 800b368:	d901      	bls.n	800b36e <HAL_RCC_OscConfig+0x32a>
 800b36a:	2303      	movs	r3, #3
 800b36c:	e23c      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b36e:	4b5e      	ldr	r3, [pc, #376]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b370:	681b      	ldr	r3, [r3, #0]
 800b372:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800b376:	2b00      	cmp	r3, #0
 800b378:	d1f0      	bne.n	800b35c <HAL_RCC_OscConfig+0x318>
 800b37a:	687b      	ldr	r3, [r7, #4]
 800b37c:	681b      	ldr	r3, [r3, #0]
 800b37e:	f003 0308 	and.w	r3, r3, #8
 800b382:	2b00      	cmp	r3, #0
 800b384:	d036      	beq.n	800b3f4 <HAL_RCC_OscConfig+0x3b0>
 800b386:	687b      	ldr	r3, [r7, #4]
 800b388:	695b      	ldr	r3, [r3, #20]
 800b38a:	2b00      	cmp	r3, #0
 800b38c:	d019      	beq.n	800b3c2 <HAL_RCC_OscConfig+0x37e>
 800b38e:	4b56      	ldr	r3, [pc, #344]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b390:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800b392:	4a55      	ldr	r2, [pc, #340]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b394:	f043 0301 	orr.w	r3, r3, #1
 800b398:	6753      	str	r3, [r2, #116]	@ 0x74
 800b39a:	f7f9 ffa5 	bl	80052e8 <HAL_GetTick>
 800b39e:	6278      	str	r0, [r7, #36]	@ 0x24
 800b3a0:	e008      	b.n	800b3b4 <HAL_RCC_OscConfig+0x370>
 800b3a2:	f7f9 ffa1 	bl	80052e8 <HAL_GetTick>
 800b3a6:	4602      	mov	r2, r0
 800b3a8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b3aa:	1ad3      	subs	r3, r2, r3
 800b3ac:	2b02      	cmp	r3, #2
 800b3ae:	d901      	bls.n	800b3b4 <HAL_RCC_OscConfig+0x370>
 800b3b0:	2303      	movs	r3, #3
 800b3b2:	e219      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b3b4:	4b4c      	ldr	r3, [pc, #304]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b3b6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800b3b8:	f003 0302 	and.w	r3, r3, #2
 800b3bc:	2b00      	cmp	r3, #0
 800b3be:	d0f0      	beq.n	800b3a2 <HAL_RCC_OscConfig+0x35e>
 800b3c0:	e018      	b.n	800b3f4 <HAL_RCC_OscConfig+0x3b0>
 800b3c2:	4b49      	ldr	r3, [pc, #292]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b3c4:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800b3c6:	4a48      	ldr	r2, [pc, #288]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b3c8:	f023 0301 	bic.w	r3, r3, #1
 800b3cc:	6753      	str	r3, [r2, #116]	@ 0x74
 800b3ce:	f7f9 ff8b 	bl	80052e8 <HAL_GetTick>
 800b3d2:	6278      	str	r0, [r7, #36]	@ 0x24
 800b3d4:	e008      	b.n	800b3e8 <HAL_RCC_OscConfig+0x3a4>
 800b3d6:	f7f9 ff87 	bl	80052e8 <HAL_GetTick>
 800b3da:	4602      	mov	r2, r0
 800b3dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b3de:	1ad3      	subs	r3, r2, r3
 800b3e0:	2b02      	cmp	r3, #2
 800b3e2:	d901      	bls.n	800b3e8 <HAL_RCC_OscConfig+0x3a4>
 800b3e4:	2303      	movs	r3, #3
 800b3e6:	e1ff      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b3e8:	4b3f      	ldr	r3, [pc, #252]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b3ea:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800b3ec:	f003 0302 	and.w	r3, r3, #2
 800b3f0:	2b00      	cmp	r3, #0
 800b3f2:	d1f0      	bne.n	800b3d6 <HAL_RCC_OscConfig+0x392>
 800b3f4:	687b      	ldr	r3, [r7, #4]
 800b3f6:	681b      	ldr	r3, [r3, #0]
 800b3f8:	f003 0320 	and.w	r3, r3, #32
 800b3fc:	2b00      	cmp	r3, #0
 800b3fe:	d036      	beq.n	800b46e <HAL_RCC_OscConfig+0x42a>
 800b400:	687b      	ldr	r3, [r7, #4]
 800b402:	699b      	ldr	r3, [r3, #24]
 800b404:	2b00      	cmp	r3, #0
 800b406:	d019      	beq.n	800b43c <HAL_RCC_OscConfig+0x3f8>
 800b408:	4b37      	ldr	r3, [pc, #220]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b40a:	681b      	ldr	r3, [r3, #0]
 800b40c:	4a36      	ldr	r2, [pc, #216]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b40e:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800b412:	6013      	str	r3, [r2, #0]
 800b414:	f7f9 ff68 	bl	80052e8 <HAL_GetTick>
 800b418:	6278      	str	r0, [r7, #36]	@ 0x24
 800b41a:	e008      	b.n	800b42e <HAL_RCC_OscConfig+0x3ea>
 800b41c:	f7f9 ff64 	bl	80052e8 <HAL_GetTick>
 800b420:	4602      	mov	r2, r0
 800b422:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b424:	1ad3      	subs	r3, r2, r3
 800b426:	2b02      	cmp	r3, #2
 800b428:	d901      	bls.n	800b42e <HAL_RCC_OscConfig+0x3ea>
 800b42a:	2303      	movs	r3, #3
 800b42c:	e1dc      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b42e:	4b2e      	ldr	r3, [pc, #184]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b430:	681b      	ldr	r3, [r3, #0]
 800b432:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800b436:	2b00      	cmp	r3, #0
 800b438:	d0f0      	beq.n	800b41c <HAL_RCC_OscConfig+0x3d8>
 800b43a:	e018      	b.n	800b46e <HAL_RCC_OscConfig+0x42a>
 800b43c:	4b2a      	ldr	r3, [pc, #168]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b43e:	681b      	ldr	r3, [r3, #0]
 800b440:	4a29      	ldr	r2, [pc, #164]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b442:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800b446:	6013      	str	r3, [r2, #0]
 800b448:	f7f9 ff4e 	bl	80052e8 <HAL_GetTick>
 800b44c:	6278      	str	r0, [r7, #36]	@ 0x24
 800b44e:	e008      	b.n	800b462 <HAL_RCC_OscConfig+0x41e>
 800b450:	f7f9 ff4a 	bl	80052e8 <HAL_GetTick>
 800b454:	4602      	mov	r2, r0
 800b456:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b458:	1ad3      	subs	r3, r2, r3
 800b45a:	2b02      	cmp	r3, #2
 800b45c:	d901      	bls.n	800b462 <HAL_RCC_OscConfig+0x41e>
 800b45e:	2303      	movs	r3, #3
 800b460:	e1c2      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b462:	4b21      	ldr	r3, [pc, #132]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b464:	681b      	ldr	r3, [r3, #0]
 800b466:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800b46a:	2b00      	cmp	r3, #0
 800b46c:	d1f0      	bne.n	800b450 <HAL_RCC_OscConfig+0x40c>
 800b46e:	687b      	ldr	r3, [r7, #4]
 800b470:	681b      	ldr	r3, [r3, #0]
 800b472:	f003 0304 	and.w	r3, r3, #4
 800b476:	2b00      	cmp	r3, #0
 800b478:	f000 8086 	beq.w	800b588 <HAL_RCC_OscConfig+0x544>
 800b47c:	4b1b      	ldr	r3, [pc, #108]	@ (800b4ec <HAL_RCC_OscConfig+0x4a8>)
 800b47e:	681b      	ldr	r3, [r3, #0]
 800b480:	4a1a      	ldr	r2, [pc, #104]	@ (800b4ec <HAL_RCC_OscConfig+0x4a8>)
 800b482:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800b486:	6013      	str	r3, [r2, #0]
 800b488:	f7f9 ff2e 	bl	80052e8 <HAL_GetTick>
 800b48c:	6278      	str	r0, [r7, #36]	@ 0x24
 800b48e:	e008      	b.n	800b4a2 <HAL_RCC_OscConfig+0x45e>
 800b490:	f7f9 ff2a 	bl	80052e8 <HAL_GetTick>
 800b494:	4602      	mov	r2, r0
 800b496:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b498:	1ad3      	subs	r3, r2, r3
 800b49a:	2b64      	cmp	r3, #100	@ 0x64
 800b49c:	d901      	bls.n	800b4a2 <HAL_RCC_OscConfig+0x45e>
 800b49e:	2303      	movs	r3, #3
 800b4a0:	e1a2      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b4a2:	4b12      	ldr	r3, [pc, #72]	@ (800b4ec <HAL_RCC_OscConfig+0x4a8>)
 800b4a4:	681b      	ldr	r3, [r3, #0]
 800b4a6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800b4aa:	2b00      	cmp	r3, #0
 800b4ac:	d0f0      	beq.n	800b490 <HAL_RCC_OscConfig+0x44c>
 800b4ae:	687b      	ldr	r3, [r7, #4]
 800b4b0:	689b      	ldr	r3, [r3, #8]
 800b4b2:	2b01      	cmp	r3, #1
 800b4b4:	d106      	bne.n	800b4c4 <HAL_RCC_OscConfig+0x480>
 800b4b6:	4b0c      	ldr	r3, [pc, #48]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b4b8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b4ba:	4a0b      	ldr	r2, [pc, #44]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b4bc:	f043 0301 	orr.w	r3, r3, #1
 800b4c0:	6713      	str	r3, [r2, #112]	@ 0x70
 800b4c2:	e032      	b.n	800b52a <HAL_RCC_OscConfig+0x4e6>
 800b4c4:	687b      	ldr	r3, [r7, #4]
 800b4c6:	689b      	ldr	r3, [r3, #8]
 800b4c8:	2b00      	cmp	r3, #0
 800b4ca:	d111      	bne.n	800b4f0 <HAL_RCC_OscConfig+0x4ac>
 800b4cc:	4b06      	ldr	r3, [pc, #24]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b4ce:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b4d0:	4a05      	ldr	r2, [pc, #20]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b4d2:	f023 0301 	bic.w	r3, r3, #1
 800b4d6:	6713      	str	r3, [r2, #112]	@ 0x70
 800b4d8:	4b03      	ldr	r3, [pc, #12]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b4da:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b4dc:	4a02      	ldr	r2, [pc, #8]	@ (800b4e8 <HAL_RCC_OscConfig+0x4a4>)
 800b4de:	f023 0304 	bic.w	r3, r3, #4
 800b4e2:	6713      	str	r3, [r2, #112]	@ 0x70
 800b4e4:	e021      	b.n	800b52a <HAL_RCC_OscConfig+0x4e6>
 800b4e6:	bf00      	nop
 800b4e8:	58024400 	.word	0x58024400
 800b4ec:	58024800 	.word	0x58024800
 800b4f0:	687b      	ldr	r3, [r7, #4]
 800b4f2:	689b      	ldr	r3, [r3, #8]
 800b4f4:	2b05      	cmp	r3, #5
 800b4f6:	d10c      	bne.n	800b512 <HAL_RCC_OscConfig+0x4ce>
 800b4f8:	4b83      	ldr	r3, [pc, #524]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b4fa:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b4fc:	4a82      	ldr	r2, [pc, #520]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b4fe:	f043 0304 	orr.w	r3, r3, #4
 800b502:	6713      	str	r3, [r2, #112]	@ 0x70
 800b504:	4b80      	ldr	r3, [pc, #512]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b506:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b508:	4a7f      	ldr	r2, [pc, #508]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b50a:	f043 0301 	orr.w	r3, r3, #1
 800b50e:	6713      	str	r3, [r2, #112]	@ 0x70
 800b510:	e00b      	b.n	800b52a <HAL_RCC_OscConfig+0x4e6>
 800b512:	4b7d      	ldr	r3, [pc, #500]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b514:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b516:	4a7c      	ldr	r2, [pc, #496]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b518:	f023 0301 	bic.w	r3, r3, #1
 800b51c:	6713      	str	r3, [r2, #112]	@ 0x70
 800b51e:	4b7a      	ldr	r3, [pc, #488]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b520:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b522:	4a79      	ldr	r2, [pc, #484]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b524:	f023 0304 	bic.w	r3, r3, #4
 800b528:	6713      	str	r3, [r2, #112]	@ 0x70
 800b52a:	687b      	ldr	r3, [r7, #4]
 800b52c:	689b      	ldr	r3, [r3, #8]
 800b52e:	2b00      	cmp	r3, #0
 800b530:	d015      	beq.n	800b55e <HAL_RCC_OscConfig+0x51a>
 800b532:	f7f9 fed9 	bl	80052e8 <HAL_GetTick>
 800b536:	6278      	str	r0, [r7, #36]	@ 0x24
 800b538:	e00a      	b.n	800b550 <HAL_RCC_OscConfig+0x50c>
 800b53a:	f7f9 fed5 	bl	80052e8 <HAL_GetTick>
 800b53e:	4602      	mov	r2, r0
 800b540:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b542:	1ad3      	subs	r3, r2, r3
 800b544:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b548:	4293      	cmp	r3, r2
 800b54a:	d901      	bls.n	800b550 <HAL_RCC_OscConfig+0x50c>
 800b54c:	2303      	movs	r3, #3
 800b54e:	e14b      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b550:	4b6d      	ldr	r3, [pc, #436]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b552:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b554:	f003 0302 	and.w	r3, r3, #2
 800b558:	2b00      	cmp	r3, #0
 800b55a:	d0ee      	beq.n	800b53a <HAL_RCC_OscConfig+0x4f6>
 800b55c:	e014      	b.n	800b588 <HAL_RCC_OscConfig+0x544>
 800b55e:	f7f9 fec3 	bl	80052e8 <HAL_GetTick>
 800b562:	6278      	str	r0, [r7, #36]	@ 0x24
 800b564:	e00a      	b.n	800b57c <HAL_RCC_OscConfig+0x538>
 800b566:	f7f9 febf 	bl	80052e8 <HAL_GetTick>
 800b56a:	4602      	mov	r2, r0
 800b56c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b56e:	1ad3      	subs	r3, r2, r3
 800b570:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b574:	4293      	cmp	r3, r2
 800b576:	d901      	bls.n	800b57c <HAL_RCC_OscConfig+0x538>
 800b578:	2303      	movs	r3, #3
 800b57a:	e135      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b57c:	4b62      	ldr	r3, [pc, #392]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b57e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b580:	f003 0302 	and.w	r3, r3, #2
 800b584:	2b00      	cmp	r3, #0
 800b586:	d1ee      	bne.n	800b566 <HAL_RCC_OscConfig+0x522>
 800b588:	687b      	ldr	r3, [r7, #4]
 800b58a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b58c:	2b00      	cmp	r3, #0
 800b58e:	f000 812a 	beq.w	800b7e6 <HAL_RCC_OscConfig+0x7a2>
 800b592:	4b5d      	ldr	r3, [pc, #372]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b594:	691b      	ldr	r3, [r3, #16]
 800b596:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800b59a:	2b18      	cmp	r3, #24
 800b59c:	f000 80ba 	beq.w	800b714 <HAL_RCC_OscConfig+0x6d0>
 800b5a0:	687b      	ldr	r3, [r7, #4]
 800b5a2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b5a4:	2b02      	cmp	r3, #2
 800b5a6:	f040 8095 	bne.w	800b6d4 <HAL_RCC_OscConfig+0x690>
 800b5aa:	4b57      	ldr	r3, [pc, #348]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b5ac:	681b      	ldr	r3, [r3, #0]
 800b5ae:	4a56      	ldr	r2, [pc, #344]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b5b0:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800b5b4:	6013      	str	r3, [r2, #0]
 800b5b6:	f7f9 fe97 	bl	80052e8 <HAL_GetTick>
 800b5ba:	6278      	str	r0, [r7, #36]	@ 0x24
 800b5bc:	e008      	b.n	800b5d0 <HAL_RCC_OscConfig+0x58c>
 800b5be:	f7f9 fe93 	bl	80052e8 <HAL_GetTick>
 800b5c2:	4602      	mov	r2, r0
 800b5c4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b5c6:	1ad3      	subs	r3, r2, r3
 800b5c8:	2b02      	cmp	r3, #2
 800b5ca:	d901      	bls.n	800b5d0 <HAL_RCC_OscConfig+0x58c>
 800b5cc:	2303      	movs	r3, #3
 800b5ce:	e10b      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b5d0:	4b4d      	ldr	r3, [pc, #308]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b5d2:	681b      	ldr	r3, [r3, #0]
 800b5d4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800b5d8:	2b00      	cmp	r3, #0
 800b5da:	d1f0      	bne.n	800b5be <HAL_RCC_OscConfig+0x57a>
 800b5dc:	4b4a      	ldr	r3, [pc, #296]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b5de:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800b5e0:	4b4a      	ldr	r3, [pc, #296]	@ (800b70c <HAL_RCC_OscConfig+0x6c8>)
 800b5e2:	4013      	ands	r3, r2
 800b5e4:	687a      	ldr	r2, [r7, #4]
 800b5e6:	6a91      	ldr	r1, [r2, #40]	@ 0x28
 800b5e8:	687a      	ldr	r2, [r7, #4]
 800b5ea:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800b5ec:	0112      	lsls	r2, r2, #4
 800b5ee:	430a      	orrs	r2, r1
 800b5f0:	4945      	ldr	r1, [pc, #276]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b5f2:	4313      	orrs	r3, r2
 800b5f4:	628b      	str	r3, [r1, #40]	@ 0x28
 800b5f6:	687b      	ldr	r3, [r7, #4]
 800b5f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b5fa:	3b01      	subs	r3, #1
 800b5fc:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800b600:	687b      	ldr	r3, [r7, #4]
 800b602:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b604:	3b01      	subs	r3, #1
 800b606:	025b      	lsls	r3, r3, #9
 800b608:	b29b      	uxth	r3, r3
 800b60a:	431a      	orrs	r2, r3
 800b60c:	687b      	ldr	r3, [r7, #4]
 800b60e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b610:	3b01      	subs	r3, #1
 800b612:	041b      	lsls	r3, r3, #16
 800b614:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 800b618:	431a      	orrs	r2, r3
 800b61a:	687b      	ldr	r3, [r7, #4]
 800b61c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b61e:	3b01      	subs	r3, #1
 800b620:	061b      	lsls	r3, r3, #24
 800b622:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 800b626:	4938      	ldr	r1, [pc, #224]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b628:	4313      	orrs	r3, r2
 800b62a:	630b      	str	r3, [r1, #48]	@ 0x30
 800b62c:	4b36      	ldr	r3, [pc, #216]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b62e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b630:	4a35      	ldr	r2, [pc, #212]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b632:	f023 0301 	bic.w	r3, r3, #1
 800b636:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800b638:	4b33      	ldr	r3, [pc, #204]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b63a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800b63c:	4b34      	ldr	r3, [pc, #208]	@ (800b710 <HAL_RCC_OscConfig+0x6cc>)
 800b63e:	4013      	ands	r3, r2
 800b640:	687a      	ldr	r2, [r7, #4]
 800b642:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 800b644:	00d2      	lsls	r2, r2, #3
 800b646:	4930      	ldr	r1, [pc, #192]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b648:	4313      	orrs	r3, r2
 800b64a:	634b      	str	r3, [r1, #52]	@ 0x34
 800b64c:	4b2e      	ldr	r3, [pc, #184]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b64e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b650:	f023 020c 	bic.w	r2, r3, #12
 800b654:	687b      	ldr	r3, [r7, #4]
 800b656:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b658:	492b      	ldr	r1, [pc, #172]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b65a:	4313      	orrs	r3, r2
 800b65c:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800b65e:	4b2a      	ldr	r3, [pc, #168]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b660:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b662:	f023 0202 	bic.w	r2, r3, #2
 800b666:	687b      	ldr	r3, [r7, #4]
 800b668:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800b66a:	4927      	ldr	r1, [pc, #156]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b66c:	4313      	orrs	r3, r2
 800b66e:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800b670:	4b25      	ldr	r3, [pc, #148]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b672:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b674:	4a24      	ldr	r2, [pc, #144]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b676:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800b67a:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800b67c:	4b22      	ldr	r3, [pc, #136]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b67e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b680:	4a21      	ldr	r2, [pc, #132]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b682:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800b686:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800b688:	4b1f      	ldr	r3, [pc, #124]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b68a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b68c:	4a1e      	ldr	r2, [pc, #120]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b68e:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800b692:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800b694:	4b1c      	ldr	r3, [pc, #112]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b696:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b698:	4a1b      	ldr	r2, [pc, #108]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b69a:	f043 0301 	orr.w	r3, r3, #1
 800b69e:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800b6a0:	4b19      	ldr	r3, [pc, #100]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b6a2:	681b      	ldr	r3, [r3, #0]
 800b6a4:	4a18      	ldr	r2, [pc, #96]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b6a6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800b6aa:	6013      	str	r3, [r2, #0]
 800b6ac:	f7f9 fe1c 	bl	80052e8 <HAL_GetTick>
 800b6b0:	6278      	str	r0, [r7, #36]	@ 0x24
 800b6b2:	e008      	b.n	800b6c6 <HAL_RCC_OscConfig+0x682>
 800b6b4:	f7f9 fe18 	bl	80052e8 <HAL_GetTick>
 800b6b8:	4602      	mov	r2, r0
 800b6ba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b6bc:	1ad3      	subs	r3, r2, r3
 800b6be:	2b02      	cmp	r3, #2
 800b6c0:	d901      	bls.n	800b6c6 <HAL_RCC_OscConfig+0x682>
 800b6c2:	2303      	movs	r3, #3
 800b6c4:	e090      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b6c6:	4b10      	ldr	r3, [pc, #64]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b6c8:	681b      	ldr	r3, [r3, #0]
 800b6ca:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800b6ce:	2b00      	cmp	r3, #0
 800b6d0:	d0f0      	beq.n	800b6b4 <HAL_RCC_OscConfig+0x670>
 800b6d2:	e088      	b.n	800b7e6 <HAL_RCC_OscConfig+0x7a2>
 800b6d4:	4b0c      	ldr	r3, [pc, #48]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b6d6:	681b      	ldr	r3, [r3, #0]
 800b6d8:	4a0b      	ldr	r2, [pc, #44]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b6da:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800b6de:	6013      	str	r3, [r2, #0]
 800b6e0:	f7f9 fe02 	bl	80052e8 <HAL_GetTick>
 800b6e4:	6278      	str	r0, [r7, #36]	@ 0x24
 800b6e6:	e008      	b.n	800b6fa <HAL_RCC_OscConfig+0x6b6>
 800b6e8:	f7f9 fdfe 	bl	80052e8 <HAL_GetTick>
 800b6ec:	4602      	mov	r2, r0
 800b6ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b6f0:	1ad3      	subs	r3, r2, r3
 800b6f2:	2b02      	cmp	r3, #2
 800b6f4:	d901      	bls.n	800b6fa <HAL_RCC_OscConfig+0x6b6>
 800b6f6:	2303      	movs	r3, #3
 800b6f8:	e076      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b6fa:	4b03      	ldr	r3, [pc, #12]	@ (800b708 <HAL_RCC_OscConfig+0x6c4>)
 800b6fc:	681b      	ldr	r3, [r3, #0]
 800b6fe:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800b702:	2b00      	cmp	r3, #0
 800b704:	d1f0      	bne.n	800b6e8 <HAL_RCC_OscConfig+0x6a4>
 800b706:	e06e      	b.n	800b7e6 <HAL_RCC_OscConfig+0x7a2>
 800b708:	58024400 	.word	0x58024400
 800b70c:	fffffc0c 	.word	0xfffffc0c
 800b710:	ffff0007 	.word	0xffff0007
 800b714:	4b36      	ldr	r3, [pc, #216]	@ (800b7f0 <HAL_RCC_OscConfig+0x7ac>)
 800b716:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b718:	613b      	str	r3, [r7, #16]
 800b71a:	4b35      	ldr	r3, [pc, #212]	@ (800b7f0 <HAL_RCC_OscConfig+0x7ac>)
 800b71c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b71e:	60fb      	str	r3, [r7, #12]
 800b720:	687b      	ldr	r3, [r7, #4]
 800b722:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b724:	2b01      	cmp	r3, #1
 800b726:	d031      	beq.n	800b78c <HAL_RCC_OscConfig+0x748>
 800b728:	693b      	ldr	r3, [r7, #16]
 800b72a:	f003 0203 	and.w	r2, r3, #3
 800b72e:	687b      	ldr	r3, [r7, #4]
 800b730:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b732:	429a      	cmp	r2, r3
 800b734:	d12a      	bne.n	800b78c <HAL_RCC_OscConfig+0x748>
 800b736:	693b      	ldr	r3, [r7, #16]
 800b738:	091b      	lsrs	r3, r3, #4
 800b73a:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800b73e:	687b      	ldr	r3, [r7, #4]
 800b740:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b742:	429a      	cmp	r2, r3
 800b744:	d122      	bne.n	800b78c <HAL_RCC_OscConfig+0x748>
 800b746:	68fb      	ldr	r3, [r7, #12]
 800b748:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800b74c:	687b      	ldr	r3, [r7, #4]
 800b74e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b750:	3b01      	subs	r3, #1
 800b752:	429a      	cmp	r2, r3
 800b754:	d11a      	bne.n	800b78c <HAL_RCC_OscConfig+0x748>
 800b756:	68fb      	ldr	r3, [r7, #12]
 800b758:	0a5b      	lsrs	r3, r3, #9
 800b75a:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800b75e:	687b      	ldr	r3, [r7, #4]
 800b760:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b762:	3b01      	subs	r3, #1
 800b764:	429a      	cmp	r2, r3
 800b766:	d111      	bne.n	800b78c <HAL_RCC_OscConfig+0x748>
 800b768:	68fb      	ldr	r3, [r7, #12]
 800b76a:	0c1b      	lsrs	r3, r3, #16
 800b76c:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800b770:	687b      	ldr	r3, [r7, #4]
 800b772:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b774:	3b01      	subs	r3, #1
 800b776:	429a      	cmp	r2, r3
 800b778:	d108      	bne.n	800b78c <HAL_RCC_OscConfig+0x748>
 800b77a:	68fb      	ldr	r3, [r7, #12]
 800b77c:	0e1b      	lsrs	r3, r3, #24
 800b77e:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800b782:	687b      	ldr	r3, [r7, #4]
 800b784:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b786:	3b01      	subs	r3, #1
 800b788:	429a      	cmp	r2, r3
 800b78a:	d001      	beq.n	800b790 <HAL_RCC_OscConfig+0x74c>
 800b78c:	2301      	movs	r3, #1
 800b78e:	e02b      	b.n	800b7e8 <HAL_RCC_OscConfig+0x7a4>
 800b790:	4b17      	ldr	r3, [pc, #92]	@ (800b7f0 <HAL_RCC_OscConfig+0x7ac>)
 800b792:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b794:	08db      	lsrs	r3, r3, #3
 800b796:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800b79a:	613b      	str	r3, [r7, #16]
 800b79c:	687b      	ldr	r3, [r7, #4]
 800b79e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800b7a0:	693a      	ldr	r2, [r7, #16]
 800b7a2:	429a      	cmp	r2, r3
 800b7a4:	d01f      	beq.n	800b7e6 <HAL_RCC_OscConfig+0x7a2>
 800b7a6:	4b12      	ldr	r3, [pc, #72]	@ (800b7f0 <HAL_RCC_OscConfig+0x7ac>)
 800b7a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b7aa:	4a11      	ldr	r2, [pc, #68]	@ (800b7f0 <HAL_RCC_OscConfig+0x7ac>)
 800b7ac:	f023 0301 	bic.w	r3, r3, #1
 800b7b0:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800b7b2:	f7f9 fd99 	bl	80052e8 <HAL_GetTick>
 800b7b6:	6278      	str	r0, [r7, #36]	@ 0x24
 800b7b8:	bf00      	nop
 800b7ba:	f7f9 fd95 	bl	80052e8 <HAL_GetTick>
 800b7be:	4602      	mov	r2, r0
 800b7c0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b7c2:	4293      	cmp	r3, r2
 800b7c4:	d0f9      	beq.n	800b7ba <HAL_RCC_OscConfig+0x776>
 800b7c6:	4b0a      	ldr	r3, [pc, #40]	@ (800b7f0 <HAL_RCC_OscConfig+0x7ac>)
 800b7c8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800b7ca:	4b0a      	ldr	r3, [pc, #40]	@ (800b7f4 <HAL_RCC_OscConfig+0x7b0>)
 800b7cc:	4013      	ands	r3, r2
 800b7ce:	687a      	ldr	r2, [r7, #4]
 800b7d0:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 800b7d2:	00d2      	lsls	r2, r2, #3
 800b7d4:	4906      	ldr	r1, [pc, #24]	@ (800b7f0 <HAL_RCC_OscConfig+0x7ac>)
 800b7d6:	4313      	orrs	r3, r2
 800b7d8:	634b      	str	r3, [r1, #52]	@ 0x34
 800b7da:	4b05      	ldr	r3, [pc, #20]	@ (800b7f0 <HAL_RCC_OscConfig+0x7ac>)
 800b7dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b7de:	4a04      	ldr	r2, [pc, #16]	@ (800b7f0 <HAL_RCC_OscConfig+0x7ac>)
 800b7e0:	f043 0301 	orr.w	r3, r3, #1
 800b7e4:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800b7e6:	2300      	movs	r3, #0
 800b7e8:	4618      	mov	r0, r3
 800b7ea:	3730      	adds	r7, #48	@ 0x30
 800b7ec:	46bd      	mov	sp, r7
 800b7ee:	bd80      	pop	{r7, pc}
 800b7f0:	58024400 	.word	0x58024400
 800b7f4:	ffff0007 	.word	0xffff0007

0800b7f8 <HAL_RCC_ClockConfig>:
 800b7f8:	b580      	push	{r7, lr}
 800b7fa:	b086      	sub	sp, #24
 800b7fc:	af00      	add	r7, sp, #0
 800b7fe:	6078      	str	r0, [r7, #4]
 800b800:	6039      	str	r1, [r7, #0]
 800b802:	687b      	ldr	r3, [r7, #4]
 800b804:	2b00      	cmp	r3, #0
 800b806:	d101      	bne.n	800b80c <HAL_RCC_ClockConfig+0x14>
 800b808:	2301      	movs	r3, #1
 800b80a:	e19c      	b.n	800bb46 <HAL_RCC_ClockConfig+0x34e>
 800b80c:	4b8a      	ldr	r3, [pc, #552]	@ (800ba38 <HAL_RCC_ClockConfig+0x240>)
 800b80e:	681b      	ldr	r3, [r3, #0]
 800b810:	f003 030f 	and.w	r3, r3, #15
 800b814:	683a      	ldr	r2, [r7, #0]
 800b816:	429a      	cmp	r2, r3
 800b818:	d910      	bls.n	800b83c <HAL_RCC_ClockConfig+0x44>
 800b81a:	4b87      	ldr	r3, [pc, #540]	@ (800ba38 <HAL_RCC_ClockConfig+0x240>)
 800b81c:	681b      	ldr	r3, [r3, #0]
 800b81e:	f023 020f 	bic.w	r2, r3, #15
 800b822:	4985      	ldr	r1, [pc, #532]	@ (800ba38 <HAL_RCC_ClockConfig+0x240>)
 800b824:	683b      	ldr	r3, [r7, #0]
 800b826:	4313      	orrs	r3, r2
 800b828:	600b      	str	r3, [r1, #0]
 800b82a:	4b83      	ldr	r3, [pc, #524]	@ (800ba38 <HAL_RCC_ClockConfig+0x240>)
 800b82c:	681b      	ldr	r3, [r3, #0]
 800b82e:	f003 030f 	and.w	r3, r3, #15
 800b832:	683a      	ldr	r2, [r7, #0]
 800b834:	429a      	cmp	r2, r3
 800b836:	d001      	beq.n	800b83c <HAL_RCC_ClockConfig+0x44>
 800b838:	2301      	movs	r3, #1
 800b83a:	e184      	b.n	800bb46 <HAL_RCC_ClockConfig+0x34e>
 800b83c:	687b      	ldr	r3, [r7, #4]
 800b83e:	681b      	ldr	r3, [r3, #0]
 800b840:	f003 0304 	and.w	r3, r3, #4
 800b844:	2b00      	cmp	r3, #0
 800b846:	d010      	beq.n	800b86a <HAL_RCC_ClockConfig+0x72>
 800b848:	687b      	ldr	r3, [r7, #4]
 800b84a:	691a      	ldr	r2, [r3, #16]
 800b84c:	4b7b      	ldr	r3, [pc, #492]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b84e:	699b      	ldr	r3, [r3, #24]
 800b850:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800b854:	429a      	cmp	r2, r3
 800b856:	d908      	bls.n	800b86a <HAL_RCC_ClockConfig+0x72>
 800b858:	4b78      	ldr	r3, [pc, #480]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b85a:	699b      	ldr	r3, [r3, #24]
 800b85c:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800b860:	687b      	ldr	r3, [r7, #4]
 800b862:	691b      	ldr	r3, [r3, #16]
 800b864:	4975      	ldr	r1, [pc, #468]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b866:	4313      	orrs	r3, r2
 800b868:	618b      	str	r3, [r1, #24]
 800b86a:	687b      	ldr	r3, [r7, #4]
 800b86c:	681b      	ldr	r3, [r3, #0]
 800b86e:	f003 0308 	and.w	r3, r3, #8
 800b872:	2b00      	cmp	r3, #0
 800b874:	d010      	beq.n	800b898 <HAL_RCC_ClockConfig+0xa0>
 800b876:	687b      	ldr	r3, [r7, #4]
 800b878:	695a      	ldr	r2, [r3, #20]
 800b87a:	4b70      	ldr	r3, [pc, #448]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b87c:	69db      	ldr	r3, [r3, #28]
 800b87e:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800b882:	429a      	cmp	r2, r3
 800b884:	d908      	bls.n	800b898 <HAL_RCC_ClockConfig+0xa0>
 800b886:	4b6d      	ldr	r3, [pc, #436]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b888:	69db      	ldr	r3, [r3, #28]
 800b88a:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800b88e:	687b      	ldr	r3, [r7, #4]
 800b890:	695b      	ldr	r3, [r3, #20]
 800b892:	496a      	ldr	r1, [pc, #424]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b894:	4313      	orrs	r3, r2
 800b896:	61cb      	str	r3, [r1, #28]
 800b898:	687b      	ldr	r3, [r7, #4]
 800b89a:	681b      	ldr	r3, [r3, #0]
 800b89c:	f003 0310 	and.w	r3, r3, #16
 800b8a0:	2b00      	cmp	r3, #0
 800b8a2:	d010      	beq.n	800b8c6 <HAL_RCC_ClockConfig+0xce>
 800b8a4:	687b      	ldr	r3, [r7, #4]
 800b8a6:	699a      	ldr	r2, [r3, #24]
 800b8a8:	4b64      	ldr	r3, [pc, #400]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b8aa:	69db      	ldr	r3, [r3, #28]
 800b8ac:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800b8b0:	429a      	cmp	r2, r3
 800b8b2:	d908      	bls.n	800b8c6 <HAL_RCC_ClockConfig+0xce>
 800b8b4:	4b61      	ldr	r3, [pc, #388]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b8b6:	69db      	ldr	r3, [r3, #28]
 800b8b8:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 800b8bc:	687b      	ldr	r3, [r7, #4]
 800b8be:	699b      	ldr	r3, [r3, #24]
 800b8c0:	495e      	ldr	r1, [pc, #376]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b8c2:	4313      	orrs	r3, r2
 800b8c4:	61cb      	str	r3, [r1, #28]
 800b8c6:	687b      	ldr	r3, [r7, #4]
 800b8c8:	681b      	ldr	r3, [r3, #0]
 800b8ca:	f003 0320 	and.w	r3, r3, #32
 800b8ce:	2b00      	cmp	r3, #0
 800b8d0:	d010      	beq.n	800b8f4 <HAL_RCC_ClockConfig+0xfc>
 800b8d2:	687b      	ldr	r3, [r7, #4]
 800b8d4:	69da      	ldr	r2, [r3, #28]
 800b8d6:	4b59      	ldr	r3, [pc, #356]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b8d8:	6a1b      	ldr	r3, [r3, #32]
 800b8da:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800b8de:	429a      	cmp	r2, r3
 800b8e0:	d908      	bls.n	800b8f4 <HAL_RCC_ClockConfig+0xfc>
 800b8e2:	4b56      	ldr	r3, [pc, #344]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b8e4:	6a1b      	ldr	r3, [r3, #32]
 800b8e6:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800b8ea:	687b      	ldr	r3, [r7, #4]
 800b8ec:	69db      	ldr	r3, [r3, #28]
 800b8ee:	4953      	ldr	r1, [pc, #332]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b8f0:	4313      	orrs	r3, r2
 800b8f2:	620b      	str	r3, [r1, #32]
 800b8f4:	687b      	ldr	r3, [r7, #4]
 800b8f6:	681b      	ldr	r3, [r3, #0]
 800b8f8:	f003 0302 	and.w	r3, r3, #2
 800b8fc:	2b00      	cmp	r3, #0
 800b8fe:	d010      	beq.n	800b922 <HAL_RCC_ClockConfig+0x12a>
 800b900:	687b      	ldr	r3, [r7, #4]
 800b902:	68da      	ldr	r2, [r3, #12]
 800b904:	4b4d      	ldr	r3, [pc, #308]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b906:	699b      	ldr	r3, [r3, #24]
 800b908:	f003 030f 	and.w	r3, r3, #15
 800b90c:	429a      	cmp	r2, r3
 800b90e:	d908      	bls.n	800b922 <HAL_RCC_ClockConfig+0x12a>
 800b910:	4b4a      	ldr	r3, [pc, #296]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b912:	699b      	ldr	r3, [r3, #24]
 800b914:	f023 020f 	bic.w	r2, r3, #15
 800b918:	687b      	ldr	r3, [r7, #4]
 800b91a:	68db      	ldr	r3, [r3, #12]
 800b91c:	4947      	ldr	r1, [pc, #284]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b91e:	4313      	orrs	r3, r2
 800b920:	618b      	str	r3, [r1, #24]
 800b922:	687b      	ldr	r3, [r7, #4]
 800b924:	681b      	ldr	r3, [r3, #0]
 800b926:	f003 0301 	and.w	r3, r3, #1
 800b92a:	2b00      	cmp	r3, #0
 800b92c:	d055      	beq.n	800b9da <HAL_RCC_ClockConfig+0x1e2>
 800b92e:	4b43      	ldr	r3, [pc, #268]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b930:	699b      	ldr	r3, [r3, #24]
 800b932:	f423 6270 	bic.w	r2, r3, #3840	@ 0xf00
 800b936:	687b      	ldr	r3, [r7, #4]
 800b938:	689b      	ldr	r3, [r3, #8]
 800b93a:	4940      	ldr	r1, [pc, #256]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b93c:	4313      	orrs	r3, r2
 800b93e:	618b      	str	r3, [r1, #24]
 800b940:	687b      	ldr	r3, [r7, #4]
 800b942:	685b      	ldr	r3, [r3, #4]
 800b944:	2b02      	cmp	r3, #2
 800b946:	d107      	bne.n	800b958 <HAL_RCC_ClockConfig+0x160>
 800b948:	4b3c      	ldr	r3, [pc, #240]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b94a:	681b      	ldr	r3, [r3, #0]
 800b94c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800b950:	2b00      	cmp	r3, #0
 800b952:	d121      	bne.n	800b998 <HAL_RCC_ClockConfig+0x1a0>
 800b954:	2301      	movs	r3, #1
 800b956:	e0f6      	b.n	800bb46 <HAL_RCC_ClockConfig+0x34e>
 800b958:	687b      	ldr	r3, [r7, #4]
 800b95a:	685b      	ldr	r3, [r3, #4]
 800b95c:	2b03      	cmp	r3, #3
 800b95e:	d107      	bne.n	800b970 <HAL_RCC_ClockConfig+0x178>
 800b960:	4b36      	ldr	r3, [pc, #216]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b962:	681b      	ldr	r3, [r3, #0]
 800b964:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800b968:	2b00      	cmp	r3, #0
 800b96a:	d115      	bne.n	800b998 <HAL_RCC_ClockConfig+0x1a0>
 800b96c:	2301      	movs	r3, #1
 800b96e:	e0ea      	b.n	800bb46 <HAL_RCC_ClockConfig+0x34e>
 800b970:	687b      	ldr	r3, [r7, #4]
 800b972:	685b      	ldr	r3, [r3, #4]
 800b974:	2b01      	cmp	r3, #1
 800b976:	d107      	bne.n	800b988 <HAL_RCC_ClockConfig+0x190>
 800b978:	4b30      	ldr	r3, [pc, #192]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b97a:	681b      	ldr	r3, [r3, #0]
 800b97c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800b980:	2b00      	cmp	r3, #0
 800b982:	d109      	bne.n	800b998 <HAL_RCC_ClockConfig+0x1a0>
 800b984:	2301      	movs	r3, #1
 800b986:	e0de      	b.n	800bb46 <HAL_RCC_ClockConfig+0x34e>
 800b988:	4b2c      	ldr	r3, [pc, #176]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b98a:	681b      	ldr	r3, [r3, #0]
 800b98c:	f003 0304 	and.w	r3, r3, #4
 800b990:	2b00      	cmp	r3, #0
 800b992:	d101      	bne.n	800b998 <HAL_RCC_ClockConfig+0x1a0>
 800b994:	2301      	movs	r3, #1
 800b996:	e0d6      	b.n	800bb46 <HAL_RCC_ClockConfig+0x34e>
 800b998:	4b28      	ldr	r3, [pc, #160]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b99a:	691b      	ldr	r3, [r3, #16]
 800b99c:	f023 0207 	bic.w	r2, r3, #7
 800b9a0:	687b      	ldr	r3, [r7, #4]
 800b9a2:	685b      	ldr	r3, [r3, #4]
 800b9a4:	4925      	ldr	r1, [pc, #148]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b9a6:	4313      	orrs	r3, r2
 800b9a8:	610b      	str	r3, [r1, #16]
 800b9aa:	f7f9 fc9d 	bl	80052e8 <HAL_GetTick>
 800b9ae:	6178      	str	r0, [r7, #20]
 800b9b0:	e00a      	b.n	800b9c8 <HAL_RCC_ClockConfig+0x1d0>
 800b9b2:	f7f9 fc99 	bl	80052e8 <HAL_GetTick>
 800b9b6:	4602      	mov	r2, r0
 800b9b8:	697b      	ldr	r3, [r7, #20]
 800b9ba:	1ad3      	subs	r3, r2, r3
 800b9bc:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b9c0:	4293      	cmp	r3, r2
 800b9c2:	d901      	bls.n	800b9c8 <HAL_RCC_ClockConfig+0x1d0>
 800b9c4:	2303      	movs	r3, #3
 800b9c6:	e0be      	b.n	800bb46 <HAL_RCC_ClockConfig+0x34e>
 800b9c8:	4b1c      	ldr	r3, [pc, #112]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b9ca:	691b      	ldr	r3, [r3, #16]
 800b9cc:	f003 0238 	and.w	r2, r3, #56	@ 0x38
 800b9d0:	687b      	ldr	r3, [r7, #4]
 800b9d2:	685b      	ldr	r3, [r3, #4]
 800b9d4:	00db      	lsls	r3, r3, #3
 800b9d6:	429a      	cmp	r2, r3
 800b9d8:	d1eb      	bne.n	800b9b2 <HAL_RCC_ClockConfig+0x1ba>
 800b9da:	687b      	ldr	r3, [r7, #4]
 800b9dc:	681b      	ldr	r3, [r3, #0]
 800b9de:	f003 0302 	and.w	r3, r3, #2
 800b9e2:	2b00      	cmp	r3, #0
 800b9e4:	d010      	beq.n	800ba08 <HAL_RCC_ClockConfig+0x210>
 800b9e6:	687b      	ldr	r3, [r7, #4]
 800b9e8:	68da      	ldr	r2, [r3, #12]
 800b9ea:	4b14      	ldr	r3, [pc, #80]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b9ec:	699b      	ldr	r3, [r3, #24]
 800b9ee:	f003 030f 	and.w	r3, r3, #15
 800b9f2:	429a      	cmp	r2, r3
 800b9f4:	d208      	bcs.n	800ba08 <HAL_RCC_ClockConfig+0x210>
 800b9f6:	4b11      	ldr	r3, [pc, #68]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800b9f8:	699b      	ldr	r3, [r3, #24]
 800b9fa:	f023 020f 	bic.w	r2, r3, #15
 800b9fe:	687b      	ldr	r3, [r7, #4]
 800ba00:	68db      	ldr	r3, [r3, #12]
 800ba02:	490e      	ldr	r1, [pc, #56]	@ (800ba3c <HAL_RCC_ClockConfig+0x244>)
 800ba04:	4313      	orrs	r3, r2
 800ba06:	618b      	str	r3, [r1, #24]
 800ba08:	4b0b      	ldr	r3, [pc, #44]	@ (800ba38 <HAL_RCC_ClockConfig+0x240>)
 800ba0a:	681b      	ldr	r3, [r3, #0]
 800ba0c:	f003 030f 	and.w	r3, r3, #15
 800ba10:	683a      	ldr	r2, [r7, #0]
 800ba12:	429a      	cmp	r2, r3
 800ba14:	d214      	bcs.n	800ba40 <HAL_RCC_ClockConfig+0x248>
 800ba16:	4b08      	ldr	r3, [pc, #32]	@ (800ba38 <HAL_RCC_ClockConfig+0x240>)
 800ba18:	681b      	ldr	r3, [r3, #0]
 800ba1a:	f023 020f 	bic.w	r2, r3, #15
 800ba1e:	4906      	ldr	r1, [pc, #24]	@ (800ba38 <HAL_RCC_ClockConfig+0x240>)
 800ba20:	683b      	ldr	r3, [r7, #0]
 800ba22:	4313      	orrs	r3, r2
 800ba24:	600b      	str	r3, [r1, #0]
 800ba26:	4b04      	ldr	r3, [pc, #16]	@ (800ba38 <HAL_RCC_ClockConfig+0x240>)
 800ba28:	681b      	ldr	r3, [r3, #0]
 800ba2a:	f003 030f 	and.w	r3, r3, #15
 800ba2e:	683a      	ldr	r2, [r7, #0]
 800ba30:	429a      	cmp	r2, r3
 800ba32:	d005      	beq.n	800ba40 <HAL_RCC_ClockConfig+0x248>
 800ba34:	2301      	movs	r3, #1
 800ba36:	e086      	b.n	800bb46 <HAL_RCC_ClockConfig+0x34e>
 800ba38:	52002000 	.word	0x52002000
 800ba3c:	58024400 	.word	0x58024400
 800ba40:	687b      	ldr	r3, [r7, #4]
 800ba42:	681b      	ldr	r3, [r3, #0]
 800ba44:	f003 0304 	and.w	r3, r3, #4
 800ba48:	2b00      	cmp	r3, #0
 800ba4a:	d010      	beq.n	800ba6e <HAL_RCC_ClockConfig+0x276>
 800ba4c:	687b      	ldr	r3, [r7, #4]
 800ba4e:	691a      	ldr	r2, [r3, #16]
 800ba50:	4b3f      	ldr	r3, [pc, #252]	@ (800bb50 <HAL_RCC_ClockConfig+0x358>)
 800ba52:	699b      	ldr	r3, [r3, #24]
 800ba54:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800ba58:	429a      	cmp	r2, r3
 800ba5a:	d208      	bcs.n	800ba6e <HAL_RCC_ClockConfig+0x276>
 800ba5c:	4b3c      	ldr	r3, [pc, #240]	@ (800bb50 <HAL_RCC_ClockConfig+0x358>)
 800ba5e:	699b      	ldr	r3, [r3, #24]
 800ba60:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800ba64:	687b      	ldr	r3, [r7, #4]
 800ba66:	691b      	ldr	r3, [r3, #16]
 800ba68:	4939      	ldr	r1, [pc, #228]	@ (800bb50 <HAL_RCC_ClockConfig+0x358>)
 800ba6a:	4313      	orrs	r3, r2
 800ba6c:	618b      	str	r3, [r1, #24]
 800ba6e:	687b      	ldr	r3, [r7, #4]
 800ba70:	681b      	ldr	r3, [r3, #0]
 800ba72:	f003 0308 	and.w	r3, r3, #8
 800ba76:	2b00      	cmp	r3, #0
 800ba78:	d010      	beq.n	800ba9c <HAL_RCC_ClockConfig+0x2a4>
 800ba7a:	687b      	ldr	r3, [r7, #4]
 800ba7c:	695a      	ldr	r2, [r3, #20]
 800ba7e:	4b34      	ldr	r3, [pc, #208]	@ (800bb50 <HAL_RCC_ClockConfig+0x358>)
 800ba80:	69db      	ldr	r3, [r3, #28]
 800ba82:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800ba86:	429a      	cmp	r2, r3
 800ba88:	d208      	bcs.n	800ba9c <HAL_RCC_ClockConfig+0x2a4>
 800ba8a:	4b31      	ldr	r3, [pc, #196]	@ (800bb50 <HAL_RCC_ClockConfig+0x358>)
 800ba8c:	69db      	ldr	r3, [r3, #28]
 800ba8e:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800ba92:	687b      	ldr	r3, [r7, #4]
 800ba94:	695b      	ldr	r3, [r3, #20]
 800ba96:	492e      	ldr	r1, [pc, #184]	@ (800bb50 <HAL_RCC_ClockConfig+0x358>)
 800ba98:	4313      	orrs	r3, r2
 800ba9a:	61cb      	str	r3, [r1, #28]
 800ba9c:	687b      	ldr	r3, [r7, #4]
 800ba9e:	681b      	ldr	r3, [r3, #0]
 800baa0:	f003 0310 	and.w	r3, r3, #16
 800baa4:	2b00      	cmp	r3, #0
 800baa6:	d010      	beq.n	800baca <HAL_RCC_ClockConfig+0x2d2>
 800baa8:	687b      	ldr	r3, [r7, #4]
 800baaa:	699a      	ldr	r2, [r3, #24]
 800baac:	4b28      	ldr	r3, [pc, #160]	@ (800bb50 <HAL_RCC_ClockConfig+0x358>)
 800baae:	69db      	ldr	r3, [r3, #28]
 800bab0:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800bab4:	429a      	cmp	r2, r3
 800bab6:	d208      	bcs.n	800baca <HAL_RCC_ClockConfig+0x2d2>
 800bab8:	4b25      	ldr	r3, [pc, #148]	@ (800bb50 <HAL_RCC_ClockConfig+0x358>)
 800baba:	69db      	ldr	r3, [r3, #28]
 800babc:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 800bac0:	687b      	ldr	r3, [r7, #4]
 800bac2:	699b      	ldr	r3, [r3, #24]
 800bac4:	4922      	ldr	r1, [pc, #136]	@ (800bb50 <HAL_RCC_ClockConfig+0x358>)
 800bac6:	4313      	orrs	r3, r2
 800bac8:	61cb      	str	r3, [r1, #28]
 800baca:	687b      	ldr	r3, [r7, #4]
 800bacc:	681b      	ldr	r3, [r3, #0]
 800bace:	f003 0320 	and.w	r3, r3, #32
 800bad2:	2b00      	cmp	r3, #0
 800bad4:	d010      	beq.n	800baf8 <HAL_RCC_ClockConfig+0x300>
 800bad6:	687b      	ldr	r3, [r7, #4]
 800bad8:	69da      	ldr	r2, [r3, #28]
 800bada:	4b1d      	ldr	r3, [pc, #116]	@ (800bb50 <HAL_RCC_ClockConfig+0x358>)
 800badc:	6a1b      	ldr	r3, [r3, #32]
 800bade:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800bae2:	429a      	cmp	r2, r3
 800bae4:	d208      	bcs.n	800baf8 <HAL_RCC_ClockConfig+0x300>
 800bae6:	4b1a      	ldr	r3, [pc, #104]	@ (800bb50 <HAL_RCC_ClockConfig+0x358>)
 800bae8:	6a1b      	ldr	r3, [r3, #32]
 800baea:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800baee:	687b      	ldr	r3, [r7, #4]
 800baf0:	69db      	ldr	r3, [r3, #28]
 800baf2:	4917      	ldr	r1, [pc, #92]	@ (800bb50 <HAL_RCC_ClockConfig+0x358>)
 800baf4:	4313      	orrs	r3, r2
 800baf6:	620b      	str	r3, [r1, #32]
 800baf8:	f000 f834 	bl	800bb64 <HAL_RCC_GetSysClockFreq>
 800bafc:	4602      	mov	r2, r0
 800bafe:	4b14      	ldr	r3, [pc, #80]	@ (800bb50 <HAL_RCC_ClockConfig+0x358>)
 800bb00:	699b      	ldr	r3, [r3, #24]
 800bb02:	0a1b      	lsrs	r3, r3, #8
 800bb04:	f003 030f 	and.w	r3, r3, #15
 800bb08:	4912      	ldr	r1, [pc, #72]	@ (800bb54 <HAL_RCC_ClockConfig+0x35c>)
 800bb0a:	5ccb      	ldrb	r3, [r1, r3]
 800bb0c:	f003 031f 	and.w	r3, r3, #31
 800bb10:	fa22 f303 	lsr.w	r3, r2, r3
 800bb14:	613b      	str	r3, [r7, #16]
 800bb16:	4b0e      	ldr	r3, [pc, #56]	@ (800bb50 <HAL_RCC_ClockConfig+0x358>)
 800bb18:	699b      	ldr	r3, [r3, #24]
 800bb1a:	f003 030f 	and.w	r3, r3, #15
 800bb1e:	4a0d      	ldr	r2, [pc, #52]	@ (800bb54 <HAL_RCC_ClockConfig+0x35c>)
 800bb20:	5cd3      	ldrb	r3, [r2, r3]
 800bb22:	f003 031f 	and.w	r3, r3, #31
 800bb26:	693a      	ldr	r2, [r7, #16]
 800bb28:	fa22 f303 	lsr.w	r3, r2, r3
 800bb2c:	4a0a      	ldr	r2, [pc, #40]	@ (800bb58 <HAL_RCC_ClockConfig+0x360>)
 800bb2e:	6013      	str	r3, [r2, #0]
 800bb30:	4a0a      	ldr	r2, [pc, #40]	@ (800bb5c <HAL_RCC_ClockConfig+0x364>)
 800bb32:	693b      	ldr	r3, [r7, #16]
 800bb34:	6013      	str	r3, [r2, #0]
 800bb36:	4b0a      	ldr	r3, [pc, #40]	@ (800bb60 <HAL_RCC_ClockConfig+0x368>)
 800bb38:	681b      	ldr	r3, [r3, #0]
 800bb3a:	4618      	mov	r0, r3
 800bb3c:	f7f9 fb8a 	bl	8005254 <HAL_InitTick>
 800bb40:	4603      	mov	r3, r0
 800bb42:	73fb      	strb	r3, [r7, #15]
 800bb44:	7bfb      	ldrb	r3, [r7, #15]
 800bb46:	4618      	mov	r0, r3
 800bb48:	3718      	adds	r7, #24
 800bb4a:	46bd      	mov	sp, r7
 800bb4c:	bd80      	pop	{r7, pc}
 800bb4e:	bf00      	nop
 800bb50:	58024400 	.word	0x58024400
 800bb54:	0801aba0 	.word	0x0801aba0
 800bb58:	24000004 	.word	0x24000004
 800bb5c:	24000000 	.word	0x24000000
 800bb60:	24000008 	.word	0x24000008

0800bb64 <HAL_RCC_GetSysClockFreq>:
 800bb64:	b480      	push	{r7}
 800bb66:	b089      	sub	sp, #36	@ 0x24
 800bb68:	af00      	add	r7, sp, #0
 800bb6a:	4bb3      	ldr	r3, [pc, #716]	@ (800be38 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bb6c:	691b      	ldr	r3, [r3, #16]
 800bb6e:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800bb72:	2b18      	cmp	r3, #24
 800bb74:	f200 8155 	bhi.w	800be22 <HAL_RCC_GetSysClockFreq+0x2be>
 800bb78:	a201      	add	r2, pc, #4	@ (adr r2, 800bb80 <HAL_RCC_GetSysClockFreq+0x1c>)
 800bb7a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800bb7e:	bf00      	nop
 800bb80:	0800bbe5 	.word	0x0800bbe5
 800bb84:	0800be23 	.word	0x0800be23
 800bb88:	0800be23 	.word	0x0800be23
 800bb8c:	0800be23 	.word	0x0800be23
 800bb90:	0800be23 	.word	0x0800be23
 800bb94:	0800be23 	.word	0x0800be23
 800bb98:	0800be23 	.word	0x0800be23
 800bb9c:	0800be23 	.word	0x0800be23
 800bba0:	0800bc0b 	.word	0x0800bc0b
 800bba4:	0800be23 	.word	0x0800be23
 800bba8:	0800be23 	.word	0x0800be23
 800bbac:	0800be23 	.word	0x0800be23
 800bbb0:	0800be23 	.word	0x0800be23
 800bbb4:	0800be23 	.word	0x0800be23
 800bbb8:	0800be23 	.word	0x0800be23
 800bbbc:	0800be23 	.word	0x0800be23
 800bbc0:	0800bc11 	.word	0x0800bc11
 800bbc4:	0800be23 	.word	0x0800be23
 800bbc8:	0800be23 	.word	0x0800be23
 800bbcc:	0800be23 	.word	0x0800be23
 800bbd0:	0800be23 	.word	0x0800be23
 800bbd4:	0800be23 	.word	0x0800be23
 800bbd8:	0800be23 	.word	0x0800be23
 800bbdc:	0800be23 	.word	0x0800be23
 800bbe0:	0800bc17 	.word	0x0800bc17
 800bbe4:	4b94      	ldr	r3, [pc, #592]	@ (800be38 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bbe6:	681b      	ldr	r3, [r3, #0]
 800bbe8:	f003 0320 	and.w	r3, r3, #32
 800bbec:	2b00      	cmp	r3, #0
 800bbee:	d009      	beq.n	800bc04 <HAL_RCC_GetSysClockFreq+0xa0>
 800bbf0:	4b91      	ldr	r3, [pc, #580]	@ (800be38 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bbf2:	681b      	ldr	r3, [r3, #0]
 800bbf4:	08db      	lsrs	r3, r3, #3
 800bbf6:	f003 0303 	and.w	r3, r3, #3
 800bbfa:	4a90      	ldr	r2, [pc, #576]	@ (800be3c <HAL_RCC_GetSysClockFreq+0x2d8>)
 800bbfc:	fa22 f303 	lsr.w	r3, r2, r3
 800bc00:	61bb      	str	r3, [r7, #24]
 800bc02:	e111      	b.n	800be28 <HAL_RCC_GetSysClockFreq+0x2c4>
 800bc04:	4b8d      	ldr	r3, [pc, #564]	@ (800be3c <HAL_RCC_GetSysClockFreq+0x2d8>)
 800bc06:	61bb      	str	r3, [r7, #24]
 800bc08:	e10e      	b.n	800be28 <HAL_RCC_GetSysClockFreq+0x2c4>
 800bc0a:	4b8d      	ldr	r3, [pc, #564]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2dc>)
 800bc0c:	61bb      	str	r3, [r7, #24]
 800bc0e:	e10b      	b.n	800be28 <HAL_RCC_GetSysClockFreq+0x2c4>
 800bc10:	4b8c      	ldr	r3, [pc, #560]	@ (800be44 <HAL_RCC_GetSysClockFreq+0x2e0>)
 800bc12:	61bb      	str	r3, [r7, #24]
 800bc14:	e108      	b.n	800be28 <HAL_RCC_GetSysClockFreq+0x2c4>
 800bc16:	4b88      	ldr	r3, [pc, #544]	@ (800be38 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bc18:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800bc1a:	f003 0303 	and.w	r3, r3, #3
 800bc1e:	617b      	str	r3, [r7, #20]
 800bc20:	4b85      	ldr	r3, [pc, #532]	@ (800be38 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bc22:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800bc24:	091b      	lsrs	r3, r3, #4
 800bc26:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800bc2a:	613b      	str	r3, [r7, #16]
 800bc2c:	4b82      	ldr	r3, [pc, #520]	@ (800be38 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bc2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bc30:	f003 0301 	and.w	r3, r3, #1
 800bc34:	60fb      	str	r3, [r7, #12]
 800bc36:	4b80      	ldr	r3, [pc, #512]	@ (800be38 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bc38:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bc3a:	08db      	lsrs	r3, r3, #3
 800bc3c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800bc40:	68fa      	ldr	r2, [r7, #12]
 800bc42:	fb02 f303 	mul.w	r3, r2, r3
 800bc46:	ee07 3a90 	vmov	s15, r3
 800bc4a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800bc4e:	edc7 7a02 	vstr	s15, [r7, #8]
 800bc52:	693b      	ldr	r3, [r7, #16]
 800bc54:	2b00      	cmp	r3, #0
 800bc56:	f000 80e1 	beq.w	800be1c <HAL_RCC_GetSysClockFreq+0x2b8>
 800bc5a:	697b      	ldr	r3, [r7, #20]
 800bc5c:	2b02      	cmp	r3, #2
 800bc5e:	f000 8083 	beq.w	800bd68 <HAL_RCC_GetSysClockFreq+0x204>
 800bc62:	697b      	ldr	r3, [r7, #20]
 800bc64:	2b02      	cmp	r3, #2
 800bc66:	f200 80a1 	bhi.w	800bdac <HAL_RCC_GetSysClockFreq+0x248>
 800bc6a:	697b      	ldr	r3, [r7, #20]
 800bc6c:	2b00      	cmp	r3, #0
 800bc6e:	d003      	beq.n	800bc78 <HAL_RCC_GetSysClockFreq+0x114>
 800bc70:	697b      	ldr	r3, [r7, #20]
 800bc72:	2b01      	cmp	r3, #1
 800bc74:	d056      	beq.n	800bd24 <HAL_RCC_GetSysClockFreq+0x1c0>
 800bc76:	e099      	b.n	800bdac <HAL_RCC_GetSysClockFreq+0x248>
 800bc78:	4b6f      	ldr	r3, [pc, #444]	@ (800be38 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bc7a:	681b      	ldr	r3, [r3, #0]
 800bc7c:	f003 0320 	and.w	r3, r3, #32
 800bc80:	2b00      	cmp	r3, #0
 800bc82:	d02d      	beq.n	800bce0 <HAL_RCC_GetSysClockFreq+0x17c>
 800bc84:	4b6c      	ldr	r3, [pc, #432]	@ (800be38 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bc86:	681b      	ldr	r3, [r3, #0]
 800bc88:	08db      	lsrs	r3, r3, #3
 800bc8a:	f003 0303 	and.w	r3, r3, #3
 800bc8e:	4a6b      	ldr	r2, [pc, #428]	@ (800be3c <HAL_RCC_GetSysClockFreq+0x2d8>)
 800bc90:	fa22 f303 	lsr.w	r3, r2, r3
 800bc94:	607b      	str	r3, [r7, #4]
 800bc96:	687b      	ldr	r3, [r7, #4]
 800bc98:	ee07 3a90 	vmov	s15, r3
 800bc9c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800bca0:	693b      	ldr	r3, [r7, #16]
 800bca2:	ee07 3a90 	vmov	s15, r3
 800bca6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800bcaa:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800bcae:	4b62      	ldr	r3, [pc, #392]	@ (800be38 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bcb0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bcb2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800bcb6:	ee07 3a90 	vmov	s15, r3
 800bcba:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800bcbe:	ed97 6a02 	vldr	s12, [r7, #8]
 800bcc2:	eddf 5a61 	vldr	s11, [pc, #388]	@ 800be48 <HAL_RCC_GetSysClockFreq+0x2e4>
 800bcc6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800bcca:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800bcce:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800bcd2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bcd6:	ee67 7a27 	vmul.f32	s15, s14, s15
 800bcda:	edc7 7a07 	vstr	s15, [r7, #28]
 800bcde:	e087      	b.n	800bdf0 <HAL_RCC_GetSysClockFreq+0x28c>
 800bce0:	693b      	ldr	r3, [r7, #16]
 800bce2:	ee07 3a90 	vmov	s15, r3
 800bce6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800bcea:	eddf 6a58 	vldr	s13, [pc, #352]	@ 800be4c <HAL_RCC_GetSysClockFreq+0x2e8>
 800bcee:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800bcf2:	4b51      	ldr	r3, [pc, #324]	@ (800be38 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bcf4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bcf6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800bcfa:	ee07 3a90 	vmov	s15, r3
 800bcfe:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800bd02:	ed97 6a02 	vldr	s12, [r7, #8]
 800bd06:	eddf 5a50 	vldr	s11, [pc, #320]	@ 800be48 <HAL_RCC_GetSysClockFreq+0x2e4>
 800bd0a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800bd0e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800bd12:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800bd16:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bd1a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800bd1e:	edc7 7a07 	vstr	s15, [r7, #28]
 800bd22:	e065      	b.n	800bdf0 <HAL_RCC_GetSysClockFreq+0x28c>
 800bd24:	693b      	ldr	r3, [r7, #16]
 800bd26:	ee07 3a90 	vmov	s15, r3
 800bd2a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800bd2e:	eddf 6a48 	vldr	s13, [pc, #288]	@ 800be50 <HAL_RCC_GetSysClockFreq+0x2ec>
 800bd32:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800bd36:	4b40      	ldr	r3, [pc, #256]	@ (800be38 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bd38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bd3a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800bd3e:	ee07 3a90 	vmov	s15, r3
 800bd42:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800bd46:	ed97 6a02 	vldr	s12, [r7, #8]
 800bd4a:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 800be48 <HAL_RCC_GetSysClockFreq+0x2e4>
 800bd4e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800bd52:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800bd56:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800bd5a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bd5e:	ee67 7a27 	vmul.f32	s15, s14, s15
 800bd62:	edc7 7a07 	vstr	s15, [r7, #28]
 800bd66:	e043      	b.n	800bdf0 <HAL_RCC_GetSysClockFreq+0x28c>
 800bd68:	693b      	ldr	r3, [r7, #16]
 800bd6a:	ee07 3a90 	vmov	s15, r3
 800bd6e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800bd72:	eddf 6a38 	vldr	s13, [pc, #224]	@ 800be54 <HAL_RCC_GetSysClockFreq+0x2f0>
 800bd76:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800bd7a:	4b2f      	ldr	r3, [pc, #188]	@ (800be38 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bd7c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bd7e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800bd82:	ee07 3a90 	vmov	s15, r3
 800bd86:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800bd8a:	ed97 6a02 	vldr	s12, [r7, #8]
 800bd8e:	eddf 5a2e 	vldr	s11, [pc, #184]	@ 800be48 <HAL_RCC_GetSysClockFreq+0x2e4>
 800bd92:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800bd96:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800bd9a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800bd9e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bda2:	ee67 7a27 	vmul.f32	s15, s14, s15
 800bda6:	edc7 7a07 	vstr	s15, [r7, #28]
 800bdaa:	e021      	b.n	800bdf0 <HAL_RCC_GetSysClockFreq+0x28c>
 800bdac:	693b      	ldr	r3, [r7, #16]
 800bdae:	ee07 3a90 	vmov	s15, r3
 800bdb2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800bdb6:	eddf 6a26 	vldr	s13, [pc, #152]	@ 800be50 <HAL_RCC_GetSysClockFreq+0x2ec>
 800bdba:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800bdbe:	4b1e      	ldr	r3, [pc, #120]	@ (800be38 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bdc0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bdc2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800bdc6:	ee07 3a90 	vmov	s15, r3
 800bdca:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800bdce:	ed97 6a02 	vldr	s12, [r7, #8]
 800bdd2:	eddf 5a1d 	vldr	s11, [pc, #116]	@ 800be48 <HAL_RCC_GetSysClockFreq+0x2e4>
 800bdd6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800bdda:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800bdde:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800bde2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bde6:	ee67 7a27 	vmul.f32	s15, s14, s15
 800bdea:	edc7 7a07 	vstr	s15, [r7, #28]
 800bdee:	bf00      	nop
 800bdf0:	4b11      	ldr	r3, [pc, #68]	@ (800be38 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bdf2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bdf4:	0a5b      	lsrs	r3, r3, #9
 800bdf6:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800bdfa:	3301      	adds	r3, #1
 800bdfc:	603b      	str	r3, [r7, #0]
 800bdfe:	683b      	ldr	r3, [r7, #0]
 800be00:	ee07 3a90 	vmov	s15, r3
 800be04:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800be08:	edd7 6a07 	vldr	s13, [r7, #28]
 800be0c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800be10:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800be14:	ee17 3a90 	vmov	r3, s15
 800be18:	61bb      	str	r3, [r7, #24]
 800be1a:	e005      	b.n	800be28 <HAL_RCC_GetSysClockFreq+0x2c4>
 800be1c:	2300      	movs	r3, #0
 800be1e:	61bb      	str	r3, [r7, #24]
 800be20:	e002      	b.n	800be28 <HAL_RCC_GetSysClockFreq+0x2c4>
 800be22:	4b07      	ldr	r3, [pc, #28]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2dc>)
 800be24:	61bb      	str	r3, [r7, #24]
 800be26:	bf00      	nop
 800be28:	69bb      	ldr	r3, [r7, #24]
 800be2a:	4618      	mov	r0, r3
 800be2c:	3724      	adds	r7, #36	@ 0x24
 800be2e:	46bd      	mov	sp, r7
 800be30:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be34:	4770      	bx	lr
 800be36:	bf00      	nop
 800be38:	58024400 	.word	0x58024400
 800be3c:	03d09000 	.word	0x03d09000
 800be40:	003d0900 	.word	0x003d0900
 800be44:	016e3600 	.word	0x016e3600
 800be48:	46000000 	.word	0x46000000
 800be4c:	4c742400 	.word	0x4c742400
 800be50:	4a742400 	.word	0x4a742400
 800be54:	4bb71b00 	.word	0x4bb71b00

0800be58 <HAL_RCC_GetHCLKFreq>:
 800be58:	b580      	push	{r7, lr}
 800be5a:	b082      	sub	sp, #8
 800be5c:	af00      	add	r7, sp, #0
 800be5e:	f7ff fe81 	bl	800bb64 <HAL_RCC_GetSysClockFreq>
 800be62:	4602      	mov	r2, r0
 800be64:	4b10      	ldr	r3, [pc, #64]	@ (800bea8 <HAL_RCC_GetHCLKFreq+0x50>)
 800be66:	699b      	ldr	r3, [r3, #24]
 800be68:	0a1b      	lsrs	r3, r3, #8
 800be6a:	f003 030f 	and.w	r3, r3, #15
 800be6e:	490f      	ldr	r1, [pc, #60]	@ (800beac <HAL_RCC_GetHCLKFreq+0x54>)
 800be70:	5ccb      	ldrb	r3, [r1, r3]
 800be72:	f003 031f 	and.w	r3, r3, #31
 800be76:	fa22 f303 	lsr.w	r3, r2, r3
 800be7a:	607b      	str	r3, [r7, #4]
 800be7c:	4b0a      	ldr	r3, [pc, #40]	@ (800bea8 <HAL_RCC_GetHCLKFreq+0x50>)
 800be7e:	699b      	ldr	r3, [r3, #24]
 800be80:	f003 030f 	and.w	r3, r3, #15
 800be84:	4a09      	ldr	r2, [pc, #36]	@ (800beac <HAL_RCC_GetHCLKFreq+0x54>)
 800be86:	5cd3      	ldrb	r3, [r2, r3]
 800be88:	f003 031f 	and.w	r3, r3, #31
 800be8c:	687a      	ldr	r2, [r7, #4]
 800be8e:	fa22 f303 	lsr.w	r3, r2, r3
 800be92:	4a07      	ldr	r2, [pc, #28]	@ (800beb0 <HAL_RCC_GetHCLKFreq+0x58>)
 800be94:	6013      	str	r3, [r2, #0]
 800be96:	4a07      	ldr	r2, [pc, #28]	@ (800beb4 <HAL_RCC_GetHCLKFreq+0x5c>)
 800be98:	687b      	ldr	r3, [r7, #4]
 800be9a:	6013      	str	r3, [r2, #0]
 800be9c:	4b04      	ldr	r3, [pc, #16]	@ (800beb0 <HAL_RCC_GetHCLKFreq+0x58>)
 800be9e:	681b      	ldr	r3, [r3, #0]
 800bea0:	4618      	mov	r0, r3
 800bea2:	3708      	adds	r7, #8
 800bea4:	46bd      	mov	sp, r7
 800bea6:	bd80      	pop	{r7, pc}
 800bea8:	58024400 	.word	0x58024400
 800beac:	0801aba0 	.word	0x0801aba0
 800beb0:	24000004 	.word	0x24000004
 800beb4:	24000000 	.word	0x24000000

0800beb8 <HAL_RCC_GetPCLK1Freq>:
 800beb8:	b580      	push	{r7, lr}
 800beba:	af00      	add	r7, sp, #0
 800bebc:	f7ff ffcc 	bl	800be58 <HAL_RCC_GetHCLKFreq>
 800bec0:	4602      	mov	r2, r0
 800bec2:	4b06      	ldr	r3, [pc, #24]	@ (800bedc <HAL_RCC_GetPCLK1Freq+0x24>)
 800bec4:	69db      	ldr	r3, [r3, #28]
 800bec6:	091b      	lsrs	r3, r3, #4
 800bec8:	f003 0307 	and.w	r3, r3, #7
 800becc:	4904      	ldr	r1, [pc, #16]	@ (800bee0 <HAL_RCC_GetPCLK1Freq+0x28>)
 800bece:	5ccb      	ldrb	r3, [r1, r3]
 800bed0:	f003 031f 	and.w	r3, r3, #31
 800bed4:	fa22 f303 	lsr.w	r3, r2, r3
 800bed8:	4618      	mov	r0, r3
 800beda:	bd80      	pop	{r7, pc}
 800bedc:	58024400 	.word	0x58024400
 800bee0:	0801aba0 	.word	0x0801aba0

0800bee4 <HAL_RCC_GetPCLK2Freq>:
 800bee4:	b580      	push	{r7, lr}
 800bee6:	af00      	add	r7, sp, #0
 800bee8:	f7ff ffb6 	bl	800be58 <HAL_RCC_GetHCLKFreq>
 800beec:	4602      	mov	r2, r0
 800beee:	4b06      	ldr	r3, [pc, #24]	@ (800bf08 <HAL_RCC_GetPCLK2Freq+0x24>)
 800bef0:	69db      	ldr	r3, [r3, #28]
 800bef2:	0a1b      	lsrs	r3, r3, #8
 800bef4:	f003 0307 	and.w	r3, r3, #7
 800bef8:	4904      	ldr	r1, [pc, #16]	@ (800bf0c <HAL_RCC_GetPCLK2Freq+0x28>)
 800befa:	5ccb      	ldrb	r3, [r1, r3]
 800befc:	f003 031f 	and.w	r3, r3, #31
 800bf00:	fa22 f303 	lsr.w	r3, r2, r3
 800bf04:	4618      	mov	r0, r3
 800bf06:	bd80      	pop	{r7, pc}
 800bf08:	58024400 	.word	0x58024400
 800bf0c:	0801aba0 	.word	0x0801aba0

0800bf10 <HAL_RCCEx_PeriphCLKConfig>:
 800bf10:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800bf14:	b0c6      	sub	sp, #280	@ 0x118
 800bf16:	af00      	add	r7, sp, #0
 800bf18:	f8c7 0104 	str.w	r0, [r7, #260]	@ 0x104
 800bf1c:	2300      	movs	r3, #0
 800bf1e:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800bf22:	2300      	movs	r3, #0
 800bf24:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800bf28:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800bf2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bf30:	f002 6400 	and.w	r4, r2, #134217728	@ 0x8000000
 800bf34:	2500      	movs	r5, #0
 800bf36:	ea54 0305 	orrs.w	r3, r4, r5
 800bf3a:	d049      	beq.n	800bfd0 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 800bf3c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800bf40:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800bf42:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 800bf46:	d02f      	beq.n	800bfa8 <HAL_RCCEx_PeriphCLKConfig+0x98>
 800bf48:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 800bf4c:	d828      	bhi.n	800bfa0 <HAL_RCCEx_PeriphCLKConfig+0x90>
 800bf4e:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800bf52:	d01a      	beq.n	800bf8a <HAL_RCCEx_PeriphCLKConfig+0x7a>
 800bf54:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800bf58:	d822      	bhi.n	800bfa0 <HAL_RCCEx_PeriphCLKConfig+0x90>
 800bf5a:	2b00      	cmp	r3, #0
 800bf5c:	d003      	beq.n	800bf66 <HAL_RCCEx_PeriphCLKConfig+0x56>
 800bf5e:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800bf62:	d007      	beq.n	800bf74 <HAL_RCCEx_PeriphCLKConfig+0x64>
 800bf64:	e01c      	b.n	800bfa0 <HAL_RCCEx_PeriphCLKConfig+0x90>
 800bf66:	4bab      	ldr	r3, [pc, #684]	@ (800c214 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800bf68:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bf6a:	4aaa      	ldr	r2, [pc, #680]	@ (800c214 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800bf6c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800bf70:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800bf72:	e01a      	b.n	800bfaa <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800bf74:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800bf78:	3308      	adds	r3, #8
 800bf7a:	2102      	movs	r1, #2
 800bf7c:	4618      	mov	r0, r3
 800bf7e:	f002 fa49 	bl	800e414 <RCCEx_PLL2_Config>
 800bf82:	4603      	mov	r3, r0
 800bf84:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800bf88:	e00f      	b.n	800bfaa <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800bf8a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800bf8e:	3328      	adds	r3, #40	@ 0x28
 800bf90:	2102      	movs	r1, #2
 800bf92:	4618      	mov	r0, r3
 800bf94:	f002 faf0 	bl	800e578 <RCCEx_PLL3_Config>
 800bf98:	4603      	mov	r3, r0
 800bf9a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800bf9e:	e004      	b.n	800bfaa <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800bfa0:	2301      	movs	r3, #1
 800bfa2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800bfa6:	e000      	b.n	800bfaa <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800bfa8:	bf00      	nop
 800bfaa:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800bfae:	2b00      	cmp	r3, #0
 800bfb0:	d10a      	bne.n	800bfc8 <HAL_RCCEx_PeriphCLKConfig+0xb8>
 800bfb2:	4b98      	ldr	r3, [pc, #608]	@ (800c214 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800bfb4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800bfb6:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 800bfba:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800bfbe:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800bfc0:	4a94      	ldr	r2, [pc, #592]	@ (800c214 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800bfc2:	430b      	orrs	r3, r1
 800bfc4:	6513      	str	r3, [r2, #80]	@ 0x50
 800bfc6:	e003      	b.n	800bfd0 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 800bfc8:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800bfcc:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800bfd0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800bfd4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bfd8:	f402 7880 	and.w	r8, r2, #256	@ 0x100
 800bfdc:	f04f 0900 	mov.w	r9, #0
 800bfe0:	ea58 0309 	orrs.w	r3, r8, r9
 800bfe4:	d047      	beq.n	800c076 <HAL_RCCEx_PeriphCLKConfig+0x166>
 800bfe6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800bfea:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800bfec:	2b04      	cmp	r3, #4
 800bfee:	d82a      	bhi.n	800c046 <HAL_RCCEx_PeriphCLKConfig+0x136>
 800bff0:	a201      	add	r2, pc, #4	@ (adr r2, 800bff8 <HAL_RCCEx_PeriphCLKConfig+0xe8>)
 800bff2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800bff6:	bf00      	nop
 800bff8:	0800c00d 	.word	0x0800c00d
 800bffc:	0800c01b 	.word	0x0800c01b
 800c000:	0800c031 	.word	0x0800c031
 800c004:	0800c04f 	.word	0x0800c04f
 800c008:	0800c04f 	.word	0x0800c04f
 800c00c:	4b81      	ldr	r3, [pc, #516]	@ (800c214 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c00e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c010:	4a80      	ldr	r2, [pc, #512]	@ (800c214 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c012:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c016:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800c018:	e01a      	b.n	800c050 <HAL_RCCEx_PeriphCLKConfig+0x140>
 800c01a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c01e:	3308      	adds	r3, #8
 800c020:	2100      	movs	r1, #0
 800c022:	4618      	mov	r0, r3
 800c024:	f002 f9f6 	bl	800e414 <RCCEx_PLL2_Config>
 800c028:	4603      	mov	r3, r0
 800c02a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c02e:	e00f      	b.n	800c050 <HAL_RCCEx_PeriphCLKConfig+0x140>
 800c030:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c034:	3328      	adds	r3, #40	@ 0x28
 800c036:	2100      	movs	r1, #0
 800c038:	4618      	mov	r0, r3
 800c03a:	f002 fa9d 	bl	800e578 <RCCEx_PLL3_Config>
 800c03e:	4603      	mov	r3, r0
 800c040:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c044:	e004      	b.n	800c050 <HAL_RCCEx_PeriphCLKConfig+0x140>
 800c046:	2301      	movs	r3, #1
 800c048:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c04c:	e000      	b.n	800c050 <HAL_RCCEx_PeriphCLKConfig+0x140>
 800c04e:	bf00      	nop
 800c050:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c054:	2b00      	cmp	r3, #0
 800c056:	d10a      	bne.n	800c06e <HAL_RCCEx_PeriphCLKConfig+0x15e>
 800c058:	4b6e      	ldr	r3, [pc, #440]	@ (800c214 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c05a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c05c:	f023 0107 	bic.w	r1, r3, #7
 800c060:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c064:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c066:	4a6b      	ldr	r2, [pc, #428]	@ (800c214 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c068:	430b      	orrs	r3, r1
 800c06a:	6513      	str	r3, [r2, #80]	@ 0x50
 800c06c:	e003      	b.n	800c076 <HAL_RCCEx_PeriphCLKConfig+0x166>
 800c06e:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c072:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c076:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c07a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c07e:	f402 6a80 	and.w	sl, r2, #1024	@ 0x400
 800c082:	f04f 0b00 	mov.w	fp, #0
 800c086:	ea5a 030b 	orrs.w	r3, sl, fp
 800c08a:	d05b      	beq.n	800c144 <HAL_RCCEx_PeriphCLKConfig+0x234>
 800c08c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c090:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800c094:	f5b3 0f20 	cmp.w	r3, #10485760	@ 0xa00000
 800c098:	d03b      	beq.n	800c112 <HAL_RCCEx_PeriphCLKConfig+0x202>
 800c09a:	f5b3 0f20 	cmp.w	r3, #10485760	@ 0xa00000
 800c09e:	d834      	bhi.n	800c10a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800c0a0:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800c0a4:	d037      	beq.n	800c116 <HAL_RCCEx_PeriphCLKConfig+0x206>
 800c0a6:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800c0aa:	d82e      	bhi.n	800c10a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800c0ac:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 800c0b0:	d033      	beq.n	800c11a <HAL_RCCEx_PeriphCLKConfig+0x20a>
 800c0b2:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 800c0b6:	d828      	bhi.n	800c10a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800c0b8:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800c0bc:	d01a      	beq.n	800c0f4 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800c0be:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800c0c2:	d822      	bhi.n	800c10a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800c0c4:	2b00      	cmp	r3, #0
 800c0c6:	d003      	beq.n	800c0d0 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
 800c0c8:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800c0cc:	d007      	beq.n	800c0de <HAL_RCCEx_PeriphCLKConfig+0x1ce>
 800c0ce:	e01c      	b.n	800c10a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800c0d0:	4b50      	ldr	r3, [pc, #320]	@ (800c214 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c0d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c0d4:	4a4f      	ldr	r2, [pc, #316]	@ (800c214 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c0d6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c0da:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800c0dc:	e01e      	b.n	800c11c <HAL_RCCEx_PeriphCLKConfig+0x20c>
 800c0de:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c0e2:	3308      	adds	r3, #8
 800c0e4:	2100      	movs	r1, #0
 800c0e6:	4618      	mov	r0, r3
 800c0e8:	f002 f994 	bl	800e414 <RCCEx_PLL2_Config>
 800c0ec:	4603      	mov	r3, r0
 800c0ee:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c0f2:	e013      	b.n	800c11c <HAL_RCCEx_PeriphCLKConfig+0x20c>
 800c0f4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c0f8:	3328      	adds	r3, #40	@ 0x28
 800c0fa:	2100      	movs	r1, #0
 800c0fc:	4618      	mov	r0, r3
 800c0fe:	f002 fa3b 	bl	800e578 <RCCEx_PLL3_Config>
 800c102:	4603      	mov	r3, r0
 800c104:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c108:	e008      	b.n	800c11c <HAL_RCCEx_PeriphCLKConfig+0x20c>
 800c10a:	2301      	movs	r3, #1
 800c10c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c110:	e004      	b.n	800c11c <HAL_RCCEx_PeriphCLKConfig+0x20c>
 800c112:	bf00      	nop
 800c114:	e002      	b.n	800c11c <HAL_RCCEx_PeriphCLKConfig+0x20c>
 800c116:	bf00      	nop
 800c118:	e000      	b.n	800c11c <HAL_RCCEx_PeriphCLKConfig+0x20c>
 800c11a:	bf00      	nop
 800c11c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c120:	2b00      	cmp	r3, #0
 800c122:	d10b      	bne.n	800c13c <HAL_RCCEx_PeriphCLKConfig+0x22c>
 800c124:	4b3b      	ldr	r3, [pc, #236]	@ (800c214 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c126:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c128:	f423 0160 	bic.w	r1, r3, #14680064	@ 0xe00000
 800c12c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c130:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800c134:	4a37      	ldr	r2, [pc, #220]	@ (800c214 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c136:	430b      	orrs	r3, r1
 800c138:	6593      	str	r3, [r2, #88]	@ 0x58
 800c13a:	e003      	b.n	800c144 <HAL_RCCEx_PeriphCLKConfig+0x234>
 800c13c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c140:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c144:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c148:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c14c:	f402 6300 	and.w	r3, r2, #2048	@ 0x800
 800c150:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 800c154:	2300      	movs	r3, #0
 800c156:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 800c15a:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	@ 0xf8
 800c15e:	460b      	mov	r3, r1
 800c160:	4313      	orrs	r3, r2
 800c162:	d05d      	beq.n	800c220 <HAL_RCCEx_PeriphCLKConfig+0x310>
 800c164:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c168:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800c16c:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 800c170:	d03b      	beq.n	800c1ea <HAL_RCCEx_PeriphCLKConfig+0x2da>
 800c172:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 800c176:	d834      	bhi.n	800c1e2 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 800c178:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800c17c:	d037      	beq.n	800c1ee <HAL_RCCEx_PeriphCLKConfig+0x2de>
 800c17e:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800c182:	d82e      	bhi.n	800c1e2 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 800c184:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 800c188:	d033      	beq.n	800c1f2 <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 800c18a:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 800c18e:	d828      	bhi.n	800c1e2 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 800c190:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800c194:	d01a      	beq.n	800c1cc <HAL_RCCEx_PeriphCLKConfig+0x2bc>
 800c196:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800c19a:	d822      	bhi.n	800c1e2 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 800c19c:	2b00      	cmp	r3, #0
 800c19e:	d003      	beq.n	800c1a8 <HAL_RCCEx_PeriphCLKConfig+0x298>
 800c1a0:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800c1a4:	d007      	beq.n	800c1b6 <HAL_RCCEx_PeriphCLKConfig+0x2a6>
 800c1a6:	e01c      	b.n	800c1e2 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 800c1a8:	4b1a      	ldr	r3, [pc, #104]	@ (800c214 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c1aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c1ac:	4a19      	ldr	r2, [pc, #100]	@ (800c214 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c1ae:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c1b2:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800c1b4:	e01e      	b.n	800c1f4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 800c1b6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c1ba:	3308      	adds	r3, #8
 800c1bc:	2100      	movs	r1, #0
 800c1be:	4618      	mov	r0, r3
 800c1c0:	f002 f928 	bl	800e414 <RCCEx_PLL2_Config>
 800c1c4:	4603      	mov	r3, r0
 800c1c6:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c1ca:	e013      	b.n	800c1f4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 800c1cc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c1d0:	3328      	adds	r3, #40	@ 0x28
 800c1d2:	2100      	movs	r1, #0
 800c1d4:	4618      	mov	r0, r3
 800c1d6:	f002 f9cf 	bl	800e578 <RCCEx_PLL3_Config>
 800c1da:	4603      	mov	r3, r0
 800c1dc:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c1e0:	e008      	b.n	800c1f4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 800c1e2:	2301      	movs	r3, #1
 800c1e4:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c1e8:	e004      	b.n	800c1f4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 800c1ea:	bf00      	nop
 800c1ec:	e002      	b.n	800c1f4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 800c1ee:	bf00      	nop
 800c1f0:	e000      	b.n	800c1f4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 800c1f2:	bf00      	nop
 800c1f4:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c1f8:	2b00      	cmp	r3, #0
 800c1fa:	d10d      	bne.n	800c218 <HAL_RCCEx_PeriphCLKConfig+0x308>
 800c1fc:	4b05      	ldr	r3, [pc, #20]	@ (800c214 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c1fe:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c200:	f023 61e0 	bic.w	r1, r3, #117440512	@ 0x7000000
 800c204:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c208:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800c20c:	4a01      	ldr	r2, [pc, #4]	@ (800c214 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c20e:	430b      	orrs	r3, r1
 800c210:	6593      	str	r3, [r2, #88]	@ 0x58
 800c212:	e005      	b.n	800c220 <HAL_RCCEx_PeriphCLKConfig+0x310>
 800c214:	58024400 	.word	0x58024400
 800c218:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c21c:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c220:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c224:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c228:	f002 7300 	and.w	r3, r2, #33554432	@ 0x2000000
 800c22c:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 800c230:	2300      	movs	r3, #0
 800c232:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 800c236:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	@ 0xf0
 800c23a:	460b      	mov	r3, r1
 800c23c:	4313      	orrs	r3, r2
 800c23e:	d03a      	beq.n	800c2b6 <HAL_RCCEx_PeriphCLKConfig+0x3a6>
 800c240:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c244:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c246:	2b30      	cmp	r3, #48	@ 0x30
 800c248:	d01f      	beq.n	800c28a <HAL_RCCEx_PeriphCLKConfig+0x37a>
 800c24a:	2b30      	cmp	r3, #48	@ 0x30
 800c24c:	d819      	bhi.n	800c282 <HAL_RCCEx_PeriphCLKConfig+0x372>
 800c24e:	2b20      	cmp	r3, #32
 800c250:	d00c      	beq.n	800c26c <HAL_RCCEx_PeriphCLKConfig+0x35c>
 800c252:	2b20      	cmp	r3, #32
 800c254:	d815      	bhi.n	800c282 <HAL_RCCEx_PeriphCLKConfig+0x372>
 800c256:	2b00      	cmp	r3, #0
 800c258:	d019      	beq.n	800c28e <HAL_RCCEx_PeriphCLKConfig+0x37e>
 800c25a:	2b10      	cmp	r3, #16
 800c25c:	d111      	bne.n	800c282 <HAL_RCCEx_PeriphCLKConfig+0x372>
 800c25e:	4baa      	ldr	r3, [pc, #680]	@ (800c508 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c260:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c262:	4aa9      	ldr	r2, [pc, #676]	@ (800c508 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c264:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c268:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800c26a:	e011      	b.n	800c290 <HAL_RCCEx_PeriphCLKConfig+0x380>
 800c26c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c270:	3308      	adds	r3, #8
 800c272:	2102      	movs	r1, #2
 800c274:	4618      	mov	r0, r3
 800c276:	f002 f8cd 	bl	800e414 <RCCEx_PLL2_Config>
 800c27a:	4603      	mov	r3, r0
 800c27c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c280:	e006      	b.n	800c290 <HAL_RCCEx_PeriphCLKConfig+0x380>
 800c282:	2301      	movs	r3, #1
 800c284:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c288:	e002      	b.n	800c290 <HAL_RCCEx_PeriphCLKConfig+0x380>
 800c28a:	bf00      	nop
 800c28c:	e000      	b.n	800c290 <HAL_RCCEx_PeriphCLKConfig+0x380>
 800c28e:	bf00      	nop
 800c290:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c294:	2b00      	cmp	r3, #0
 800c296:	d10a      	bne.n	800c2ae <HAL_RCCEx_PeriphCLKConfig+0x39e>
 800c298:	4b9b      	ldr	r3, [pc, #620]	@ (800c508 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c29a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c29c:	f023 0130 	bic.w	r1, r3, #48	@ 0x30
 800c2a0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c2a4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c2a6:	4a98      	ldr	r2, [pc, #608]	@ (800c508 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c2a8:	430b      	orrs	r3, r1
 800c2aa:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800c2ac:	e003      	b.n	800c2b6 <HAL_RCCEx_PeriphCLKConfig+0x3a6>
 800c2ae:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c2b2:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c2b6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c2ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c2be:	f402 5380 	and.w	r3, r2, #4096	@ 0x1000
 800c2c2:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800c2c6:	2300      	movs	r3, #0
 800c2c8:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 800c2cc:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	@ 0xe8
 800c2d0:	460b      	mov	r3, r1
 800c2d2:	4313      	orrs	r3, r2
 800c2d4:	d051      	beq.n	800c37a <HAL_RCCEx_PeriphCLKConfig+0x46a>
 800c2d6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c2da:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c2dc:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800c2e0:	d035      	beq.n	800c34e <HAL_RCCEx_PeriphCLKConfig+0x43e>
 800c2e2:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800c2e6:	d82e      	bhi.n	800c346 <HAL_RCCEx_PeriphCLKConfig+0x436>
 800c2e8:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800c2ec:	d031      	beq.n	800c352 <HAL_RCCEx_PeriphCLKConfig+0x442>
 800c2ee:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800c2f2:	d828      	bhi.n	800c346 <HAL_RCCEx_PeriphCLKConfig+0x436>
 800c2f4:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800c2f8:	d01a      	beq.n	800c330 <HAL_RCCEx_PeriphCLKConfig+0x420>
 800c2fa:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800c2fe:	d822      	bhi.n	800c346 <HAL_RCCEx_PeriphCLKConfig+0x436>
 800c300:	2b00      	cmp	r3, #0
 800c302:	d003      	beq.n	800c30c <HAL_RCCEx_PeriphCLKConfig+0x3fc>
 800c304:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800c308:	d007      	beq.n	800c31a <HAL_RCCEx_PeriphCLKConfig+0x40a>
 800c30a:	e01c      	b.n	800c346 <HAL_RCCEx_PeriphCLKConfig+0x436>
 800c30c:	4b7e      	ldr	r3, [pc, #504]	@ (800c508 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c30e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c310:	4a7d      	ldr	r2, [pc, #500]	@ (800c508 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c312:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c316:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800c318:	e01c      	b.n	800c354 <HAL_RCCEx_PeriphCLKConfig+0x444>
 800c31a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c31e:	3308      	adds	r3, #8
 800c320:	2100      	movs	r1, #0
 800c322:	4618      	mov	r0, r3
 800c324:	f002 f876 	bl	800e414 <RCCEx_PLL2_Config>
 800c328:	4603      	mov	r3, r0
 800c32a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c32e:	e011      	b.n	800c354 <HAL_RCCEx_PeriphCLKConfig+0x444>
 800c330:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c334:	3328      	adds	r3, #40	@ 0x28
 800c336:	2100      	movs	r1, #0
 800c338:	4618      	mov	r0, r3
 800c33a:	f002 f91d 	bl	800e578 <RCCEx_PLL3_Config>
 800c33e:	4603      	mov	r3, r0
 800c340:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c344:	e006      	b.n	800c354 <HAL_RCCEx_PeriphCLKConfig+0x444>
 800c346:	2301      	movs	r3, #1
 800c348:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c34c:	e002      	b.n	800c354 <HAL_RCCEx_PeriphCLKConfig+0x444>
 800c34e:	bf00      	nop
 800c350:	e000      	b.n	800c354 <HAL_RCCEx_PeriphCLKConfig+0x444>
 800c352:	bf00      	nop
 800c354:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c358:	2b00      	cmp	r3, #0
 800c35a:	d10a      	bne.n	800c372 <HAL_RCCEx_PeriphCLKConfig+0x462>
 800c35c:	4b6a      	ldr	r3, [pc, #424]	@ (800c508 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c35e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c360:	f423 41e0 	bic.w	r1, r3, #28672	@ 0x7000
 800c364:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c368:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c36a:	4a67      	ldr	r2, [pc, #412]	@ (800c508 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c36c:	430b      	orrs	r3, r1
 800c36e:	6513      	str	r3, [r2, #80]	@ 0x50
 800c370:	e003      	b.n	800c37a <HAL_RCCEx_PeriphCLKConfig+0x46a>
 800c372:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c376:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c37a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c37e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c382:	f402 5300 	and.w	r3, r2, #8192	@ 0x2000
 800c386:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800c38a:	2300      	movs	r3, #0
 800c38c:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800c390:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	@ 0xe0
 800c394:	460b      	mov	r3, r1
 800c396:	4313      	orrs	r3, r2
 800c398:	d053      	beq.n	800c442 <HAL_RCCEx_PeriphCLKConfig+0x532>
 800c39a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c39e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800c3a0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800c3a4:	d033      	beq.n	800c40e <HAL_RCCEx_PeriphCLKConfig+0x4fe>
 800c3a6:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800c3aa:	d82c      	bhi.n	800c406 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 800c3ac:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 800c3b0:	d02f      	beq.n	800c412 <HAL_RCCEx_PeriphCLKConfig+0x502>
 800c3b2:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 800c3b6:	d826      	bhi.n	800c406 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 800c3b8:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800c3bc:	d02b      	beq.n	800c416 <HAL_RCCEx_PeriphCLKConfig+0x506>
 800c3be:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800c3c2:	d820      	bhi.n	800c406 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 800c3c4:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800c3c8:	d012      	beq.n	800c3f0 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 800c3ca:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800c3ce:	d81a      	bhi.n	800c406 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 800c3d0:	2b00      	cmp	r3, #0
 800c3d2:	d022      	beq.n	800c41a <HAL_RCCEx_PeriphCLKConfig+0x50a>
 800c3d4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800c3d8:	d115      	bne.n	800c406 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 800c3da:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c3de:	3308      	adds	r3, #8
 800c3e0:	2101      	movs	r1, #1
 800c3e2:	4618      	mov	r0, r3
 800c3e4:	f002 f816 	bl	800e414 <RCCEx_PLL2_Config>
 800c3e8:	4603      	mov	r3, r0
 800c3ea:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c3ee:	e015      	b.n	800c41c <HAL_RCCEx_PeriphCLKConfig+0x50c>
 800c3f0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c3f4:	3328      	adds	r3, #40	@ 0x28
 800c3f6:	2101      	movs	r1, #1
 800c3f8:	4618      	mov	r0, r3
 800c3fa:	f002 f8bd 	bl	800e578 <RCCEx_PLL3_Config>
 800c3fe:	4603      	mov	r3, r0
 800c400:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c404:	e00a      	b.n	800c41c <HAL_RCCEx_PeriphCLKConfig+0x50c>
 800c406:	2301      	movs	r3, #1
 800c408:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c40c:	e006      	b.n	800c41c <HAL_RCCEx_PeriphCLKConfig+0x50c>
 800c40e:	bf00      	nop
 800c410:	e004      	b.n	800c41c <HAL_RCCEx_PeriphCLKConfig+0x50c>
 800c412:	bf00      	nop
 800c414:	e002      	b.n	800c41c <HAL_RCCEx_PeriphCLKConfig+0x50c>
 800c416:	bf00      	nop
 800c418:	e000      	b.n	800c41c <HAL_RCCEx_PeriphCLKConfig+0x50c>
 800c41a:	bf00      	nop
 800c41c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c420:	2b00      	cmp	r3, #0
 800c422:	d10a      	bne.n	800c43a <HAL_RCCEx_PeriphCLKConfig+0x52a>
 800c424:	4b38      	ldr	r3, [pc, #224]	@ (800c508 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c426:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c428:	f423 21e0 	bic.w	r1, r3, #458752	@ 0x70000
 800c42c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c430:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800c432:	4a35      	ldr	r2, [pc, #212]	@ (800c508 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c434:	430b      	orrs	r3, r1
 800c436:	6513      	str	r3, [r2, #80]	@ 0x50
 800c438:	e003      	b.n	800c442 <HAL_RCCEx_PeriphCLKConfig+0x532>
 800c43a:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c43e:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c442:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c446:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c44a:	f402 4380 	and.w	r3, r2, #16384	@ 0x4000
 800c44e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800c452:	2300      	movs	r3, #0
 800c454:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 800c458:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 800c45c:	460b      	mov	r3, r1
 800c45e:	4313      	orrs	r3, r2
 800c460:	d058      	beq.n	800c514 <HAL_RCCEx_PeriphCLKConfig+0x604>
 800c462:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c466:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c46a:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800c46e:	d033      	beq.n	800c4d8 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
 800c470:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800c474:	d82c      	bhi.n	800c4d0 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800c476:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800c47a:	d02f      	beq.n	800c4dc <HAL_RCCEx_PeriphCLKConfig+0x5cc>
 800c47c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800c480:	d826      	bhi.n	800c4d0 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800c482:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 800c486:	d02b      	beq.n	800c4e0 <HAL_RCCEx_PeriphCLKConfig+0x5d0>
 800c488:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 800c48c:	d820      	bhi.n	800c4d0 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800c48e:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800c492:	d012      	beq.n	800c4ba <HAL_RCCEx_PeriphCLKConfig+0x5aa>
 800c494:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800c498:	d81a      	bhi.n	800c4d0 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800c49a:	2b00      	cmp	r3, #0
 800c49c:	d022      	beq.n	800c4e4 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 800c49e:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800c4a2:	d115      	bne.n	800c4d0 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800c4a4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c4a8:	3308      	adds	r3, #8
 800c4aa:	2101      	movs	r1, #1
 800c4ac:	4618      	mov	r0, r3
 800c4ae:	f001 ffb1 	bl	800e414 <RCCEx_PLL2_Config>
 800c4b2:	4603      	mov	r3, r0
 800c4b4:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c4b8:	e015      	b.n	800c4e6 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 800c4ba:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c4be:	3328      	adds	r3, #40	@ 0x28
 800c4c0:	2101      	movs	r1, #1
 800c4c2:	4618      	mov	r0, r3
 800c4c4:	f002 f858 	bl	800e578 <RCCEx_PLL3_Config>
 800c4c8:	4603      	mov	r3, r0
 800c4ca:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c4ce:	e00a      	b.n	800c4e6 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 800c4d0:	2301      	movs	r3, #1
 800c4d2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c4d6:	e006      	b.n	800c4e6 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 800c4d8:	bf00      	nop
 800c4da:	e004      	b.n	800c4e6 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 800c4dc:	bf00      	nop
 800c4de:	e002      	b.n	800c4e6 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 800c4e0:	bf00      	nop
 800c4e2:	e000      	b.n	800c4e6 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 800c4e4:	bf00      	nop
 800c4e6:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c4ea:	2b00      	cmp	r3, #0
 800c4ec:	d10e      	bne.n	800c50c <HAL_RCCEx_PeriphCLKConfig+0x5fc>
 800c4ee:	4b06      	ldr	r3, [pc, #24]	@ (800c508 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c4f0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c4f2:	f023 41e0 	bic.w	r1, r3, #1879048192	@ 0x70000000
 800c4f6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c4fa:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c4fe:	4a02      	ldr	r2, [pc, #8]	@ (800c508 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c500:	430b      	orrs	r3, r1
 800c502:	6593      	str	r3, [r2, #88]	@ 0x58
 800c504:	e006      	b.n	800c514 <HAL_RCCEx_PeriphCLKConfig+0x604>
 800c506:	bf00      	nop
 800c508:	58024400 	.word	0x58024400
 800c50c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c510:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c514:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c518:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c51c:	f402 4300 	and.w	r3, r2, #32768	@ 0x8000
 800c520:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800c524:	2300      	movs	r3, #0
 800c526:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800c52a:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	@ 0xd0
 800c52e:	460b      	mov	r3, r1
 800c530:	4313      	orrs	r3, r2
 800c532:	d037      	beq.n	800c5a4 <HAL_RCCEx_PeriphCLKConfig+0x694>
 800c534:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c538:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800c53a:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800c53e:	d00e      	beq.n	800c55e <HAL_RCCEx_PeriphCLKConfig+0x64e>
 800c540:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800c544:	d816      	bhi.n	800c574 <HAL_RCCEx_PeriphCLKConfig+0x664>
 800c546:	2b00      	cmp	r3, #0
 800c548:	d018      	beq.n	800c57c <HAL_RCCEx_PeriphCLKConfig+0x66c>
 800c54a:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800c54e:	d111      	bne.n	800c574 <HAL_RCCEx_PeriphCLKConfig+0x664>
 800c550:	4bc4      	ldr	r3, [pc, #784]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c552:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c554:	4ac3      	ldr	r2, [pc, #780]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c556:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c55a:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800c55c:	e00f      	b.n	800c57e <HAL_RCCEx_PeriphCLKConfig+0x66e>
 800c55e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c562:	3308      	adds	r3, #8
 800c564:	2101      	movs	r1, #1
 800c566:	4618      	mov	r0, r3
 800c568:	f001 ff54 	bl	800e414 <RCCEx_PLL2_Config>
 800c56c:	4603      	mov	r3, r0
 800c56e:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c572:	e004      	b.n	800c57e <HAL_RCCEx_PeriphCLKConfig+0x66e>
 800c574:	2301      	movs	r3, #1
 800c576:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c57a:	e000      	b.n	800c57e <HAL_RCCEx_PeriphCLKConfig+0x66e>
 800c57c:	bf00      	nop
 800c57e:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c582:	2b00      	cmp	r3, #0
 800c584:	d10a      	bne.n	800c59c <HAL_RCCEx_PeriphCLKConfig+0x68c>
 800c586:	4bb7      	ldr	r3, [pc, #732]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c588:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c58a:	f023 5140 	bic.w	r1, r3, #805306368	@ 0x30000000
 800c58e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c592:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800c594:	4ab3      	ldr	r2, [pc, #716]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c596:	430b      	orrs	r3, r1
 800c598:	6513      	str	r3, [r2, #80]	@ 0x50
 800c59a:	e003      	b.n	800c5a4 <HAL_RCCEx_PeriphCLKConfig+0x694>
 800c59c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c5a0:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c5a4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c5a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c5ac:	f002 7380 	and.w	r3, r2, #16777216	@ 0x1000000
 800c5b0:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800c5b4:	2300      	movs	r3, #0
 800c5b6:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 800c5ba:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	@ 0xc8
 800c5be:	460b      	mov	r3, r1
 800c5c0:	4313      	orrs	r3, r2
 800c5c2:	d039      	beq.n	800c638 <HAL_RCCEx_PeriphCLKConfig+0x728>
 800c5c4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c5c8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c5ca:	2b03      	cmp	r3, #3
 800c5cc:	d81c      	bhi.n	800c608 <HAL_RCCEx_PeriphCLKConfig+0x6f8>
 800c5ce:	a201      	add	r2, pc, #4	@ (adr r2, 800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x6c4>)
 800c5d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c5d4:	0800c611 	.word	0x0800c611
 800c5d8:	0800c5e5 	.word	0x0800c5e5
 800c5dc:	0800c5f3 	.word	0x0800c5f3
 800c5e0:	0800c611 	.word	0x0800c611
 800c5e4:	4b9f      	ldr	r3, [pc, #636]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c5e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c5e8:	4a9e      	ldr	r2, [pc, #632]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c5ea:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c5ee:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800c5f0:	e00f      	b.n	800c612 <HAL_RCCEx_PeriphCLKConfig+0x702>
 800c5f2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c5f6:	3308      	adds	r3, #8
 800c5f8:	2102      	movs	r1, #2
 800c5fa:	4618      	mov	r0, r3
 800c5fc:	f001 ff0a 	bl	800e414 <RCCEx_PLL2_Config>
 800c600:	4603      	mov	r3, r0
 800c602:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c606:	e004      	b.n	800c612 <HAL_RCCEx_PeriphCLKConfig+0x702>
 800c608:	2301      	movs	r3, #1
 800c60a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c60e:	e000      	b.n	800c612 <HAL_RCCEx_PeriphCLKConfig+0x702>
 800c610:	bf00      	nop
 800c612:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c616:	2b00      	cmp	r3, #0
 800c618:	d10a      	bne.n	800c630 <HAL_RCCEx_PeriphCLKConfig+0x720>
 800c61a:	4b92      	ldr	r3, [pc, #584]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c61c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c61e:	f023 0103 	bic.w	r1, r3, #3
 800c622:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c626:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c628:	4a8e      	ldr	r2, [pc, #568]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c62a:	430b      	orrs	r3, r1
 800c62c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800c62e:	e003      	b.n	800c638 <HAL_RCCEx_PeriphCLKConfig+0x728>
 800c630:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c634:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c638:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c63c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c640:	f402 0380 	and.w	r3, r2, #4194304	@ 0x400000
 800c644:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800c648:	2300      	movs	r3, #0
 800c64a:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800c64e:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 800c652:	460b      	mov	r3, r1
 800c654:	4313      	orrs	r3, r2
 800c656:	f000 8099 	beq.w	800c78c <HAL_RCCEx_PeriphCLKConfig+0x87c>
 800c65a:	4b83      	ldr	r3, [pc, #524]	@ (800c868 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 800c65c:	681b      	ldr	r3, [r3, #0]
 800c65e:	4a82      	ldr	r2, [pc, #520]	@ (800c868 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 800c660:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800c664:	6013      	str	r3, [r2, #0]
 800c666:	f7f8 fe3f 	bl	80052e8 <HAL_GetTick>
 800c66a:	f8c7 0110 	str.w	r0, [r7, #272]	@ 0x110
 800c66e:	e00b      	b.n	800c688 <HAL_RCCEx_PeriphCLKConfig+0x778>
 800c670:	f7f8 fe3a 	bl	80052e8 <HAL_GetTick>
 800c674:	4602      	mov	r2, r0
 800c676:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 800c67a:	1ad3      	subs	r3, r2, r3
 800c67c:	2b64      	cmp	r3, #100	@ 0x64
 800c67e:	d903      	bls.n	800c688 <HAL_RCCEx_PeriphCLKConfig+0x778>
 800c680:	2303      	movs	r3, #3
 800c682:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c686:	e005      	b.n	800c694 <HAL_RCCEx_PeriphCLKConfig+0x784>
 800c688:	4b77      	ldr	r3, [pc, #476]	@ (800c868 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 800c68a:	681b      	ldr	r3, [r3, #0]
 800c68c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800c690:	2b00      	cmp	r3, #0
 800c692:	d0ed      	beq.n	800c670 <HAL_RCCEx_PeriphCLKConfig+0x760>
 800c694:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c698:	2b00      	cmp	r3, #0
 800c69a:	d173      	bne.n	800c784 <HAL_RCCEx_PeriphCLKConfig+0x874>
 800c69c:	4b71      	ldr	r3, [pc, #452]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c69e:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 800c6a0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c6a4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800c6a8:	4053      	eors	r3, r2
 800c6aa:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800c6ae:	2b00      	cmp	r3, #0
 800c6b0:	d015      	beq.n	800c6de <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 800c6b2:	4b6c      	ldr	r3, [pc, #432]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c6b4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800c6b6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800c6ba:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 800c6be:	4b69      	ldr	r3, [pc, #420]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c6c0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800c6c2:	4a68      	ldr	r2, [pc, #416]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c6c4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800c6c8:	6713      	str	r3, [r2, #112]	@ 0x70
 800c6ca:	4b66      	ldr	r3, [pc, #408]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c6cc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800c6ce:	4a65      	ldr	r2, [pc, #404]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c6d0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800c6d4:	6713      	str	r3, [r2, #112]	@ 0x70
 800c6d6:	4a63      	ldr	r2, [pc, #396]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c6d8:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800c6dc:	6713      	str	r3, [r2, #112]	@ 0x70
 800c6de:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c6e2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800c6e6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800c6ea:	d118      	bne.n	800c71e <HAL_RCCEx_PeriphCLKConfig+0x80e>
 800c6ec:	f7f8 fdfc 	bl	80052e8 <HAL_GetTick>
 800c6f0:	f8c7 0110 	str.w	r0, [r7, #272]	@ 0x110
 800c6f4:	e00d      	b.n	800c712 <HAL_RCCEx_PeriphCLKConfig+0x802>
 800c6f6:	f7f8 fdf7 	bl	80052e8 <HAL_GetTick>
 800c6fa:	4602      	mov	r2, r0
 800c6fc:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 800c700:	1ad2      	subs	r2, r2, r3
 800c702:	f241 3388 	movw	r3, #5000	@ 0x1388
 800c706:	429a      	cmp	r2, r3
 800c708:	d903      	bls.n	800c712 <HAL_RCCEx_PeriphCLKConfig+0x802>
 800c70a:	2303      	movs	r3, #3
 800c70c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c710:	e005      	b.n	800c71e <HAL_RCCEx_PeriphCLKConfig+0x80e>
 800c712:	4b54      	ldr	r3, [pc, #336]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c714:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800c716:	f003 0302 	and.w	r3, r3, #2
 800c71a:	2b00      	cmp	r3, #0
 800c71c:	d0eb      	beq.n	800c6f6 <HAL_RCCEx_PeriphCLKConfig+0x7e6>
 800c71e:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c722:	2b00      	cmp	r3, #0
 800c724:	d129      	bne.n	800c77a <HAL_RCCEx_PeriphCLKConfig+0x86a>
 800c726:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c72a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800c72e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800c732:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800c736:	d10e      	bne.n	800c756 <HAL_RCCEx_PeriphCLKConfig+0x846>
 800c738:	4b4a      	ldr	r3, [pc, #296]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c73a:	691b      	ldr	r3, [r3, #16]
 800c73c:	f423 517c 	bic.w	r1, r3, #16128	@ 0x3f00
 800c740:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c744:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800c748:	091a      	lsrs	r2, r3, #4
 800c74a:	4b48      	ldr	r3, [pc, #288]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x95c>)
 800c74c:	4013      	ands	r3, r2
 800c74e:	4a45      	ldr	r2, [pc, #276]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c750:	430b      	orrs	r3, r1
 800c752:	6113      	str	r3, [r2, #16]
 800c754:	e005      	b.n	800c762 <HAL_RCCEx_PeriphCLKConfig+0x852>
 800c756:	4b43      	ldr	r3, [pc, #268]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c758:	691b      	ldr	r3, [r3, #16]
 800c75a:	4a42      	ldr	r2, [pc, #264]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c75c:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 800c760:	6113      	str	r3, [r2, #16]
 800c762:	4b40      	ldr	r3, [pc, #256]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c764:	6f19      	ldr	r1, [r3, #112]	@ 0x70
 800c766:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c76a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800c76e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c772:	4a3c      	ldr	r2, [pc, #240]	@ (800c864 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c774:	430b      	orrs	r3, r1
 800c776:	6713      	str	r3, [r2, #112]	@ 0x70
 800c778:	e008      	b.n	800c78c <HAL_RCCEx_PeriphCLKConfig+0x87c>
 800c77a:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c77e:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c782:	e003      	b.n	800c78c <HAL_RCCEx_PeriphCLKConfig+0x87c>
 800c784:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c788:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c78c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c790:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c794:	f002 0301 	and.w	r3, r2, #1
 800c798:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800c79c:	2300      	movs	r3, #0
 800c79e:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 800c7a2:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	@ 0xb8
 800c7a6:	460b      	mov	r3, r1
 800c7a8:	4313      	orrs	r3, r2
 800c7aa:	f000 808f 	beq.w	800c8cc <HAL_RCCEx_PeriphCLKConfig+0x9bc>
 800c7ae:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c7b2:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800c7b4:	2b28      	cmp	r3, #40	@ 0x28
 800c7b6:	d871      	bhi.n	800c89c <HAL_RCCEx_PeriphCLKConfig+0x98c>
 800c7b8:	a201      	add	r2, pc, #4	@ (adr r2, 800c7c0 <HAL_RCCEx_PeriphCLKConfig+0x8b0>)
 800c7ba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c7be:	bf00      	nop
 800c7c0:	0800c8a5 	.word	0x0800c8a5
 800c7c4:	0800c89d 	.word	0x0800c89d
 800c7c8:	0800c89d 	.word	0x0800c89d
 800c7cc:	0800c89d 	.word	0x0800c89d
 800c7d0:	0800c89d 	.word	0x0800c89d
 800c7d4:	0800c89d 	.word	0x0800c89d
 800c7d8:	0800c89d 	.word	0x0800c89d
 800c7dc:	0800c89d 	.word	0x0800c89d
 800c7e0:	0800c871 	.word	0x0800c871
 800c7e4:	0800c89d 	.word	0x0800c89d
 800c7e8:	0800c89d 	.word	0x0800c89d
 800c7ec:	0800c89d 	.word	0x0800c89d
 800c7f0:	0800c89d 	.word	0x0800c89d
 800c7f4:	0800c89d 	.word	0x0800c89d
 800c7f8:	0800c89d 	.word	0x0800c89d
 800c7fc:	0800c89d 	.word	0x0800c89d
 800c800:	0800c887 	.word	0x0800c887
 800c804:	0800c89d 	.word	0x0800c89d
 800c808:	0800c89d 	.word	0x0800c89d
 800c80c:	0800c89d 	.word	0x0800c89d
 800c810:	0800c89d 	.word	0x0800c89d
 800c814:	0800c89d 	.word	0x0800c89d
 800c818:	0800c89d 	.word	0x0800c89d
 800c81c:	0800c89d 	.word	0x0800c89d
 800c820:	0800c8a5 	.word	0x0800c8a5
 800c824:	0800c89d 	.word	0x0800c89d
 800c828:	0800c89d 	.word	0x0800c89d
 800c82c:	0800c89d 	.word	0x0800c89d
 800c830:	0800c89d 	.word	0x0800c89d
 800c834:	0800c89d 	.word	0x0800c89d
 800c838:	0800c89d 	.word	0x0800c89d
 800c83c:	0800c89d 	.word	0x0800c89d
 800c840:	0800c8a5 	.word	0x0800c8a5
 800c844:	0800c89d 	.word	0x0800c89d
 800c848:	0800c89d 	.word	0x0800c89d
 800c84c:	0800c89d 	.word	0x0800c89d
 800c850:	0800c89d 	.word	0x0800c89d
 800c854:	0800c89d 	.word	0x0800c89d
 800c858:	0800c89d 	.word	0x0800c89d
 800c85c:	0800c89d 	.word	0x0800c89d
 800c860:	0800c8a5 	.word	0x0800c8a5
 800c864:	58024400 	.word	0x58024400
 800c868:	58024800 	.word	0x58024800
 800c86c:	00ffffcf 	.word	0x00ffffcf
 800c870:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c874:	3308      	adds	r3, #8
 800c876:	2101      	movs	r1, #1
 800c878:	4618      	mov	r0, r3
 800c87a:	f001 fdcb 	bl	800e414 <RCCEx_PLL2_Config>
 800c87e:	4603      	mov	r3, r0
 800c880:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c884:	e00f      	b.n	800c8a6 <HAL_RCCEx_PeriphCLKConfig+0x996>
 800c886:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c88a:	3328      	adds	r3, #40	@ 0x28
 800c88c:	2101      	movs	r1, #1
 800c88e:	4618      	mov	r0, r3
 800c890:	f001 fe72 	bl	800e578 <RCCEx_PLL3_Config>
 800c894:	4603      	mov	r3, r0
 800c896:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c89a:	e004      	b.n	800c8a6 <HAL_RCCEx_PeriphCLKConfig+0x996>
 800c89c:	2301      	movs	r3, #1
 800c89e:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c8a2:	e000      	b.n	800c8a6 <HAL_RCCEx_PeriphCLKConfig+0x996>
 800c8a4:	bf00      	nop
 800c8a6:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c8aa:	2b00      	cmp	r3, #0
 800c8ac:	d10a      	bne.n	800c8c4 <HAL_RCCEx_PeriphCLKConfig+0x9b4>
 800c8ae:	4bbf      	ldr	r3, [pc, #764]	@ (800cbac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800c8b0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c8b2:	f023 0138 	bic.w	r1, r3, #56	@ 0x38
 800c8b6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c8ba:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800c8bc:	4abb      	ldr	r2, [pc, #748]	@ (800cbac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800c8be:	430b      	orrs	r3, r1
 800c8c0:	6553      	str	r3, [r2, #84]	@ 0x54
 800c8c2:	e003      	b.n	800c8cc <HAL_RCCEx_PeriphCLKConfig+0x9bc>
 800c8c4:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c8c8:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c8cc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c8d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c8d4:	f002 0302 	and.w	r3, r2, #2
 800c8d8:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800c8dc:	2300      	movs	r3, #0
 800c8de:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800c8e2:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	@ 0xb0
 800c8e6:	460b      	mov	r3, r1
 800c8e8:	4313      	orrs	r3, r2
 800c8ea:	d041      	beq.n	800c970 <HAL_RCCEx_PeriphCLKConfig+0xa60>
 800c8ec:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c8f0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800c8f2:	2b05      	cmp	r3, #5
 800c8f4:	d824      	bhi.n	800c940 <HAL_RCCEx_PeriphCLKConfig+0xa30>
 800c8f6:	a201      	add	r2, pc, #4	@ (adr r2, 800c8fc <HAL_RCCEx_PeriphCLKConfig+0x9ec>)
 800c8f8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c8fc:	0800c949 	.word	0x0800c949
 800c900:	0800c915 	.word	0x0800c915
 800c904:	0800c92b 	.word	0x0800c92b
 800c908:	0800c949 	.word	0x0800c949
 800c90c:	0800c949 	.word	0x0800c949
 800c910:	0800c949 	.word	0x0800c949
 800c914:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c918:	3308      	adds	r3, #8
 800c91a:	2101      	movs	r1, #1
 800c91c:	4618      	mov	r0, r3
 800c91e:	f001 fd79 	bl	800e414 <RCCEx_PLL2_Config>
 800c922:	4603      	mov	r3, r0
 800c924:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c928:	e00f      	b.n	800c94a <HAL_RCCEx_PeriphCLKConfig+0xa3a>
 800c92a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c92e:	3328      	adds	r3, #40	@ 0x28
 800c930:	2101      	movs	r1, #1
 800c932:	4618      	mov	r0, r3
 800c934:	f001 fe20 	bl	800e578 <RCCEx_PLL3_Config>
 800c938:	4603      	mov	r3, r0
 800c93a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c93e:	e004      	b.n	800c94a <HAL_RCCEx_PeriphCLKConfig+0xa3a>
 800c940:	2301      	movs	r3, #1
 800c942:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c946:	e000      	b.n	800c94a <HAL_RCCEx_PeriphCLKConfig+0xa3a>
 800c948:	bf00      	nop
 800c94a:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c94e:	2b00      	cmp	r3, #0
 800c950:	d10a      	bne.n	800c968 <HAL_RCCEx_PeriphCLKConfig+0xa58>
 800c952:	4b96      	ldr	r3, [pc, #600]	@ (800cbac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800c954:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c956:	f023 0107 	bic.w	r1, r3, #7
 800c95a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c95e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800c960:	4a92      	ldr	r2, [pc, #584]	@ (800cbac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800c962:	430b      	orrs	r3, r1
 800c964:	6553      	str	r3, [r2, #84]	@ 0x54
 800c966:	e003      	b.n	800c970 <HAL_RCCEx_PeriphCLKConfig+0xa60>
 800c968:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c96c:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c970:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c974:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c978:	f002 0304 	and.w	r3, r2, #4
 800c97c:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 800c980:	2300      	movs	r3, #0
 800c982:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800c986:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 800c98a:	460b      	mov	r3, r1
 800c98c:	4313      	orrs	r3, r2
 800c98e:	d044      	beq.n	800ca1a <HAL_RCCEx_PeriphCLKConfig+0xb0a>
 800c990:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c994:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800c998:	2b05      	cmp	r3, #5
 800c99a:	d825      	bhi.n	800c9e8 <HAL_RCCEx_PeriphCLKConfig+0xad8>
 800c99c:	a201      	add	r2, pc, #4	@ (adr r2, 800c9a4 <HAL_RCCEx_PeriphCLKConfig+0xa94>)
 800c99e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c9a2:	bf00      	nop
 800c9a4:	0800c9f1 	.word	0x0800c9f1
 800c9a8:	0800c9bd 	.word	0x0800c9bd
 800c9ac:	0800c9d3 	.word	0x0800c9d3
 800c9b0:	0800c9f1 	.word	0x0800c9f1
 800c9b4:	0800c9f1 	.word	0x0800c9f1
 800c9b8:	0800c9f1 	.word	0x0800c9f1
 800c9bc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c9c0:	3308      	adds	r3, #8
 800c9c2:	2101      	movs	r1, #1
 800c9c4:	4618      	mov	r0, r3
 800c9c6:	f001 fd25 	bl	800e414 <RCCEx_PLL2_Config>
 800c9ca:	4603      	mov	r3, r0
 800c9cc:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c9d0:	e00f      	b.n	800c9f2 <HAL_RCCEx_PeriphCLKConfig+0xae2>
 800c9d2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c9d6:	3328      	adds	r3, #40	@ 0x28
 800c9d8:	2101      	movs	r1, #1
 800c9da:	4618      	mov	r0, r3
 800c9dc:	f001 fdcc 	bl	800e578 <RCCEx_PLL3_Config>
 800c9e0:	4603      	mov	r3, r0
 800c9e2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c9e6:	e004      	b.n	800c9f2 <HAL_RCCEx_PeriphCLKConfig+0xae2>
 800c9e8:	2301      	movs	r3, #1
 800c9ea:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c9ee:	e000      	b.n	800c9f2 <HAL_RCCEx_PeriphCLKConfig+0xae2>
 800c9f0:	bf00      	nop
 800c9f2:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c9f6:	2b00      	cmp	r3, #0
 800c9f8:	d10b      	bne.n	800ca12 <HAL_RCCEx_PeriphCLKConfig+0xb02>
 800c9fa:	4b6c      	ldr	r3, [pc, #432]	@ (800cbac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800c9fc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c9fe:	f023 0107 	bic.w	r1, r3, #7
 800ca02:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ca06:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800ca0a:	4a68      	ldr	r2, [pc, #416]	@ (800cbac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800ca0c:	430b      	orrs	r3, r1
 800ca0e:	6593      	str	r3, [r2, #88]	@ 0x58
 800ca10:	e003      	b.n	800ca1a <HAL_RCCEx_PeriphCLKConfig+0xb0a>
 800ca12:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800ca16:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800ca1a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ca1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ca22:	f002 0320 	and.w	r3, r2, #32
 800ca26:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800ca2a:	2300      	movs	r3, #0
 800ca2c:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800ca30:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	@ 0xa0
 800ca34:	460b      	mov	r3, r1
 800ca36:	4313      	orrs	r3, r2
 800ca38:	d055      	beq.n	800cae6 <HAL_RCCEx_PeriphCLKConfig+0xbd6>
 800ca3a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ca3e:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800ca42:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800ca46:	d033      	beq.n	800cab0 <HAL_RCCEx_PeriphCLKConfig+0xba0>
 800ca48:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800ca4c:	d82c      	bhi.n	800caa8 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800ca4e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800ca52:	d02f      	beq.n	800cab4 <HAL_RCCEx_PeriphCLKConfig+0xba4>
 800ca54:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800ca58:	d826      	bhi.n	800caa8 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800ca5a:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 800ca5e:	d02b      	beq.n	800cab8 <HAL_RCCEx_PeriphCLKConfig+0xba8>
 800ca60:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 800ca64:	d820      	bhi.n	800caa8 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800ca66:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800ca6a:	d012      	beq.n	800ca92 <HAL_RCCEx_PeriphCLKConfig+0xb82>
 800ca6c:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800ca70:	d81a      	bhi.n	800caa8 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800ca72:	2b00      	cmp	r3, #0
 800ca74:	d022      	beq.n	800cabc <HAL_RCCEx_PeriphCLKConfig+0xbac>
 800ca76:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800ca7a:	d115      	bne.n	800caa8 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800ca7c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ca80:	3308      	adds	r3, #8
 800ca82:	2100      	movs	r1, #0
 800ca84:	4618      	mov	r0, r3
 800ca86:	f001 fcc5 	bl	800e414 <RCCEx_PLL2_Config>
 800ca8a:	4603      	mov	r3, r0
 800ca8c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800ca90:	e015      	b.n	800cabe <HAL_RCCEx_PeriphCLKConfig+0xbae>
 800ca92:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ca96:	3328      	adds	r3, #40	@ 0x28
 800ca98:	2102      	movs	r1, #2
 800ca9a:	4618      	mov	r0, r3
 800ca9c:	f001 fd6c 	bl	800e578 <RCCEx_PLL3_Config>
 800caa0:	4603      	mov	r3, r0
 800caa2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800caa6:	e00a      	b.n	800cabe <HAL_RCCEx_PeriphCLKConfig+0xbae>
 800caa8:	2301      	movs	r3, #1
 800caaa:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800caae:	e006      	b.n	800cabe <HAL_RCCEx_PeriphCLKConfig+0xbae>
 800cab0:	bf00      	nop
 800cab2:	e004      	b.n	800cabe <HAL_RCCEx_PeriphCLKConfig+0xbae>
 800cab4:	bf00      	nop
 800cab6:	e002      	b.n	800cabe <HAL_RCCEx_PeriphCLKConfig+0xbae>
 800cab8:	bf00      	nop
 800caba:	e000      	b.n	800cabe <HAL_RCCEx_PeriphCLKConfig+0xbae>
 800cabc:	bf00      	nop
 800cabe:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cac2:	2b00      	cmp	r3, #0
 800cac4:	d10b      	bne.n	800cade <HAL_RCCEx_PeriphCLKConfig+0xbce>
 800cac6:	4b39      	ldr	r3, [pc, #228]	@ (800cbac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800cac8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800caca:	f023 41e0 	bic.w	r1, r3, #1879048192	@ 0x70000000
 800cace:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cad2:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800cad6:	4a35      	ldr	r2, [pc, #212]	@ (800cbac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800cad8:	430b      	orrs	r3, r1
 800cada:	6553      	str	r3, [r2, #84]	@ 0x54
 800cadc:	e003      	b.n	800cae6 <HAL_RCCEx_PeriphCLKConfig+0xbd6>
 800cade:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cae2:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800cae6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800caea:	e9d3 2300 	ldrd	r2, r3, [r3]
 800caee:	f002 0340 	and.w	r3, r2, #64	@ 0x40
 800caf2:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800caf6:	2300      	movs	r3, #0
 800caf8:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800cafc:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	@ 0x98
 800cb00:	460b      	mov	r3, r1
 800cb02:	4313      	orrs	r3, r2
 800cb04:	d058      	beq.n	800cbb8 <HAL_RCCEx_PeriphCLKConfig+0xca8>
 800cb06:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cb0a:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800cb0e:	f5b3 5fa0 	cmp.w	r3, #5120	@ 0x1400
 800cb12:	d033      	beq.n	800cb7c <HAL_RCCEx_PeriphCLKConfig+0xc6c>
 800cb14:	f5b3 5fa0 	cmp.w	r3, #5120	@ 0x1400
 800cb18:	d82c      	bhi.n	800cb74 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800cb1a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800cb1e:	d02f      	beq.n	800cb80 <HAL_RCCEx_PeriphCLKConfig+0xc70>
 800cb20:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800cb24:	d826      	bhi.n	800cb74 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800cb26:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800cb2a:	d02b      	beq.n	800cb84 <HAL_RCCEx_PeriphCLKConfig+0xc74>
 800cb2c:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800cb30:	d820      	bhi.n	800cb74 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800cb32:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800cb36:	d012      	beq.n	800cb5e <HAL_RCCEx_PeriphCLKConfig+0xc4e>
 800cb38:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800cb3c:	d81a      	bhi.n	800cb74 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800cb3e:	2b00      	cmp	r3, #0
 800cb40:	d022      	beq.n	800cb88 <HAL_RCCEx_PeriphCLKConfig+0xc78>
 800cb42:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800cb46:	d115      	bne.n	800cb74 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800cb48:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cb4c:	3308      	adds	r3, #8
 800cb4e:	2100      	movs	r1, #0
 800cb50:	4618      	mov	r0, r3
 800cb52:	f001 fc5f 	bl	800e414 <RCCEx_PLL2_Config>
 800cb56:	4603      	mov	r3, r0
 800cb58:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cb5c:	e015      	b.n	800cb8a <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 800cb5e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cb62:	3328      	adds	r3, #40	@ 0x28
 800cb64:	2102      	movs	r1, #2
 800cb66:	4618      	mov	r0, r3
 800cb68:	f001 fd06 	bl	800e578 <RCCEx_PLL3_Config>
 800cb6c:	4603      	mov	r3, r0
 800cb6e:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cb72:	e00a      	b.n	800cb8a <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 800cb74:	2301      	movs	r3, #1
 800cb76:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cb7a:	e006      	b.n	800cb8a <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 800cb7c:	bf00      	nop
 800cb7e:	e004      	b.n	800cb8a <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 800cb80:	bf00      	nop
 800cb82:	e002      	b.n	800cb8a <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 800cb84:	bf00      	nop
 800cb86:	e000      	b.n	800cb8a <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 800cb88:	bf00      	nop
 800cb8a:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cb8e:	2b00      	cmp	r3, #0
 800cb90:	d10e      	bne.n	800cbb0 <HAL_RCCEx_PeriphCLKConfig+0xca0>
 800cb92:	4b06      	ldr	r3, [pc, #24]	@ (800cbac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800cb94:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800cb96:	f423 51e0 	bic.w	r1, r3, #7168	@ 0x1c00
 800cb9a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cb9e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800cba2:	4a02      	ldr	r2, [pc, #8]	@ (800cbac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800cba4:	430b      	orrs	r3, r1
 800cba6:	6593      	str	r3, [r2, #88]	@ 0x58
 800cba8:	e006      	b.n	800cbb8 <HAL_RCCEx_PeriphCLKConfig+0xca8>
 800cbaa:	bf00      	nop
 800cbac:	58024400 	.word	0x58024400
 800cbb0:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cbb4:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800cbb8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cbbc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cbc0:	f002 0380 	and.w	r3, r2, #128	@ 0x80
 800cbc4:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800cbc8:	2300      	movs	r3, #0
 800cbca:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800cbce:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	@ 0x90
 800cbd2:	460b      	mov	r3, r1
 800cbd4:	4313      	orrs	r3, r2
 800cbd6:	d055      	beq.n	800cc84 <HAL_RCCEx_PeriphCLKConfig+0xd74>
 800cbd8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cbdc:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800cbe0:	f5b3 4f20 	cmp.w	r3, #40960	@ 0xa000
 800cbe4:	d033      	beq.n	800cc4e <HAL_RCCEx_PeriphCLKConfig+0xd3e>
 800cbe6:	f5b3 4f20 	cmp.w	r3, #40960	@ 0xa000
 800cbea:	d82c      	bhi.n	800cc46 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 800cbec:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800cbf0:	d02f      	beq.n	800cc52 <HAL_RCCEx_PeriphCLKConfig+0xd42>
 800cbf2:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800cbf6:	d826      	bhi.n	800cc46 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 800cbf8:	f5b3 4fc0 	cmp.w	r3, #24576	@ 0x6000
 800cbfc:	d02b      	beq.n	800cc56 <HAL_RCCEx_PeriphCLKConfig+0xd46>
 800cbfe:	f5b3 4fc0 	cmp.w	r3, #24576	@ 0x6000
 800cc02:	d820      	bhi.n	800cc46 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 800cc04:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800cc08:	d012      	beq.n	800cc30 <HAL_RCCEx_PeriphCLKConfig+0xd20>
 800cc0a:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800cc0e:	d81a      	bhi.n	800cc46 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 800cc10:	2b00      	cmp	r3, #0
 800cc12:	d022      	beq.n	800cc5a <HAL_RCCEx_PeriphCLKConfig+0xd4a>
 800cc14:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800cc18:	d115      	bne.n	800cc46 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 800cc1a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cc1e:	3308      	adds	r3, #8
 800cc20:	2100      	movs	r1, #0
 800cc22:	4618      	mov	r0, r3
 800cc24:	f001 fbf6 	bl	800e414 <RCCEx_PLL2_Config>
 800cc28:	4603      	mov	r3, r0
 800cc2a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cc2e:	e015      	b.n	800cc5c <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 800cc30:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cc34:	3328      	adds	r3, #40	@ 0x28
 800cc36:	2102      	movs	r1, #2
 800cc38:	4618      	mov	r0, r3
 800cc3a:	f001 fc9d 	bl	800e578 <RCCEx_PLL3_Config>
 800cc3e:	4603      	mov	r3, r0
 800cc40:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cc44:	e00a      	b.n	800cc5c <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 800cc46:	2301      	movs	r3, #1
 800cc48:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cc4c:	e006      	b.n	800cc5c <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 800cc4e:	bf00      	nop
 800cc50:	e004      	b.n	800cc5c <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 800cc52:	bf00      	nop
 800cc54:	e002      	b.n	800cc5c <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 800cc56:	bf00      	nop
 800cc58:	e000      	b.n	800cc5c <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 800cc5a:	bf00      	nop
 800cc5c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cc60:	2b00      	cmp	r3, #0
 800cc62:	d10b      	bne.n	800cc7c <HAL_RCCEx_PeriphCLKConfig+0xd6c>
 800cc64:	4ba0      	ldr	r3, [pc, #640]	@ (800cee8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cc66:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800cc68:	f423 4160 	bic.w	r1, r3, #57344	@ 0xe000
 800cc6c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cc70:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800cc74:	4a9c      	ldr	r2, [pc, #624]	@ (800cee8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cc76:	430b      	orrs	r3, r1
 800cc78:	6593      	str	r3, [r2, #88]	@ 0x58
 800cc7a:	e003      	b.n	800cc84 <HAL_RCCEx_PeriphCLKConfig+0xd74>
 800cc7c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cc80:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800cc84:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cc88:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cc8c:	f002 0308 	and.w	r3, r2, #8
 800cc90:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800cc94:	2300      	movs	r3, #0
 800cc96:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800cc9a:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	@ 0x88
 800cc9e:	460b      	mov	r3, r1
 800cca0:	4313      	orrs	r3, r2
 800cca2:	d01e      	beq.n	800cce2 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 800cca4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cca8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ccac:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800ccb0:	d10c      	bne.n	800cccc <HAL_RCCEx_PeriphCLKConfig+0xdbc>
 800ccb2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ccb6:	3328      	adds	r3, #40	@ 0x28
 800ccb8:	2102      	movs	r1, #2
 800ccba:	4618      	mov	r0, r3
 800ccbc:	f001 fc5c 	bl	800e578 <RCCEx_PLL3_Config>
 800ccc0:	4603      	mov	r3, r0
 800ccc2:	2b00      	cmp	r3, #0
 800ccc4:	d002      	beq.n	800cccc <HAL_RCCEx_PeriphCLKConfig+0xdbc>
 800ccc6:	2301      	movs	r3, #1
 800ccc8:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800cccc:	4b86      	ldr	r3, [pc, #536]	@ (800cee8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800ccce:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800ccd0:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800ccd4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ccd8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ccdc:	4a82      	ldr	r2, [pc, #520]	@ (800cee8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800ccde:	430b      	orrs	r3, r1
 800cce0:	6553      	str	r3, [r2, #84]	@ 0x54
 800cce2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cce6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ccea:	f002 0310 	and.w	r3, r2, #16
 800ccee:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 800ccf2:	2300      	movs	r3, #0
 800ccf4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800ccf8:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	@ 0x80
 800ccfc:	460b      	mov	r3, r1
 800ccfe:	4313      	orrs	r3, r2
 800cd00:	d01e      	beq.n	800cd40 <HAL_RCCEx_PeriphCLKConfig+0xe30>
 800cd02:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cd06:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800cd0a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800cd0e:	d10c      	bne.n	800cd2a <HAL_RCCEx_PeriphCLKConfig+0xe1a>
 800cd10:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cd14:	3328      	adds	r3, #40	@ 0x28
 800cd16:	2102      	movs	r1, #2
 800cd18:	4618      	mov	r0, r3
 800cd1a:	f001 fc2d 	bl	800e578 <RCCEx_PLL3_Config>
 800cd1e:	4603      	mov	r3, r0
 800cd20:	2b00      	cmp	r3, #0
 800cd22:	d002      	beq.n	800cd2a <HAL_RCCEx_PeriphCLKConfig+0xe1a>
 800cd24:	2301      	movs	r3, #1
 800cd26:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800cd2a:	4b6f      	ldr	r3, [pc, #444]	@ (800cee8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cd2c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800cd2e:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 800cd32:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cd36:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800cd3a:	4a6b      	ldr	r2, [pc, #428]	@ (800cee8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cd3c:	430b      	orrs	r3, r1
 800cd3e:	6593      	str	r3, [r2, #88]	@ 0x58
 800cd40:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cd44:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cd48:	f402 2300 	and.w	r3, r2, #524288	@ 0x80000
 800cd4c:	67bb      	str	r3, [r7, #120]	@ 0x78
 800cd4e:	2300      	movs	r3, #0
 800cd50:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800cd52:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	@ 0x78
 800cd56:	460b      	mov	r3, r1
 800cd58:	4313      	orrs	r3, r2
 800cd5a:	d03e      	beq.n	800cdda <HAL_RCCEx_PeriphCLKConfig+0xeca>
 800cd5c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cd60:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800cd64:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800cd68:	d022      	beq.n	800cdb0 <HAL_RCCEx_PeriphCLKConfig+0xea0>
 800cd6a:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800cd6e:	d81b      	bhi.n	800cda8 <HAL_RCCEx_PeriphCLKConfig+0xe98>
 800cd70:	2b00      	cmp	r3, #0
 800cd72:	d003      	beq.n	800cd7c <HAL_RCCEx_PeriphCLKConfig+0xe6c>
 800cd74:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800cd78:	d00b      	beq.n	800cd92 <HAL_RCCEx_PeriphCLKConfig+0xe82>
 800cd7a:	e015      	b.n	800cda8 <HAL_RCCEx_PeriphCLKConfig+0xe98>
 800cd7c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cd80:	3308      	adds	r3, #8
 800cd82:	2100      	movs	r1, #0
 800cd84:	4618      	mov	r0, r3
 800cd86:	f001 fb45 	bl	800e414 <RCCEx_PLL2_Config>
 800cd8a:	4603      	mov	r3, r0
 800cd8c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cd90:	e00f      	b.n	800cdb2 <HAL_RCCEx_PeriphCLKConfig+0xea2>
 800cd92:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cd96:	3328      	adds	r3, #40	@ 0x28
 800cd98:	2102      	movs	r1, #2
 800cd9a:	4618      	mov	r0, r3
 800cd9c:	f001 fbec 	bl	800e578 <RCCEx_PLL3_Config>
 800cda0:	4603      	mov	r3, r0
 800cda2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cda6:	e004      	b.n	800cdb2 <HAL_RCCEx_PeriphCLKConfig+0xea2>
 800cda8:	2301      	movs	r3, #1
 800cdaa:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cdae:	e000      	b.n	800cdb2 <HAL_RCCEx_PeriphCLKConfig+0xea2>
 800cdb0:	bf00      	nop
 800cdb2:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cdb6:	2b00      	cmp	r3, #0
 800cdb8:	d10b      	bne.n	800cdd2 <HAL_RCCEx_PeriphCLKConfig+0xec2>
 800cdba:	4b4b      	ldr	r3, [pc, #300]	@ (800cee8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cdbc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800cdbe:	f423 3140 	bic.w	r1, r3, #196608	@ 0x30000
 800cdc2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cdc6:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800cdca:	4a47      	ldr	r2, [pc, #284]	@ (800cee8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cdcc:	430b      	orrs	r3, r1
 800cdce:	6593      	str	r3, [r2, #88]	@ 0x58
 800cdd0:	e003      	b.n	800cdda <HAL_RCCEx_PeriphCLKConfig+0xeca>
 800cdd2:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cdd6:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800cdda:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cdde:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cde2:	f402 2380 	and.w	r3, r2, #262144	@ 0x40000
 800cde6:	673b      	str	r3, [r7, #112]	@ 0x70
 800cde8:	2300      	movs	r3, #0
 800cdea:	677b      	str	r3, [r7, #116]	@ 0x74
 800cdec:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	@ 0x70
 800cdf0:	460b      	mov	r3, r1
 800cdf2:	4313      	orrs	r3, r2
 800cdf4:	d03b      	beq.n	800ce6e <HAL_RCCEx_PeriphCLKConfig+0xf5e>
 800cdf6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cdfa:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800cdfe:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 800ce02:	d01f      	beq.n	800ce44 <HAL_RCCEx_PeriphCLKConfig+0xf34>
 800ce04:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 800ce08:	d818      	bhi.n	800ce3c <HAL_RCCEx_PeriphCLKConfig+0xf2c>
 800ce0a:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800ce0e:	d003      	beq.n	800ce18 <HAL_RCCEx_PeriphCLKConfig+0xf08>
 800ce10:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800ce14:	d007      	beq.n	800ce26 <HAL_RCCEx_PeriphCLKConfig+0xf16>
 800ce16:	e011      	b.n	800ce3c <HAL_RCCEx_PeriphCLKConfig+0xf2c>
 800ce18:	4b33      	ldr	r3, [pc, #204]	@ (800cee8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800ce1a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ce1c:	4a32      	ldr	r2, [pc, #200]	@ (800cee8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800ce1e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800ce22:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800ce24:	e00f      	b.n	800ce46 <HAL_RCCEx_PeriphCLKConfig+0xf36>
 800ce26:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ce2a:	3328      	adds	r3, #40	@ 0x28
 800ce2c:	2101      	movs	r1, #1
 800ce2e:	4618      	mov	r0, r3
 800ce30:	f001 fba2 	bl	800e578 <RCCEx_PLL3_Config>
 800ce34:	4603      	mov	r3, r0
 800ce36:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800ce3a:	e004      	b.n	800ce46 <HAL_RCCEx_PeriphCLKConfig+0xf36>
 800ce3c:	2301      	movs	r3, #1
 800ce3e:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800ce42:	e000      	b.n	800ce46 <HAL_RCCEx_PeriphCLKConfig+0xf36>
 800ce44:	bf00      	nop
 800ce46:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800ce4a:	2b00      	cmp	r3, #0
 800ce4c:	d10b      	bne.n	800ce66 <HAL_RCCEx_PeriphCLKConfig+0xf56>
 800ce4e:	4b26      	ldr	r3, [pc, #152]	@ (800cee8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800ce50:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800ce52:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 800ce56:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ce5a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800ce5e:	4a22      	ldr	r2, [pc, #136]	@ (800cee8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800ce60:	430b      	orrs	r3, r1
 800ce62:	6553      	str	r3, [r2, #84]	@ 0x54
 800ce64:	e003      	b.n	800ce6e <HAL_RCCEx_PeriphCLKConfig+0xf5e>
 800ce66:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800ce6a:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800ce6e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ce72:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ce76:	f402 3380 	and.w	r3, r2, #65536	@ 0x10000
 800ce7a:	66bb      	str	r3, [r7, #104]	@ 0x68
 800ce7c:	2300      	movs	r3, #0
 800ce7e:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800ce80:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	@ 0x68
 800ce84:	460b      	mov	r3, r1
 800ce86:	4313      	orrs	r3, r2
 800ce88:	d034      	beq.n	800cef4 <HAL_RCCEx_PeriphCLKConfig+0xfe4>
 800ce8a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ce8e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800ce90:	2b00      	cmp	r3, #0
 800ce92:	d003      	beq.n	800ce9c <HAL_RCCEx_PeriphCLKConfig+0xf8c>
 800ce94:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800ce98:	d007      	beq.n	800ceaa <HAL_RCCEx_PeriphCLKConfig+0xf9a>
 800ce9a:	e011      	b.n	800cec0 <HAL_RCCEx_PeriphCLKConfig+0xfb0>
 800ce9c:	4b12      	ldr	r3, [pc, #72]	@ (800cee8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800ce9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cea0:	4a11      	ldr	r2, [pc, #68]	@ (800cee8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cea2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800cea6:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800cea8:	e00e      	b.n	800cec8 <HAL_RCCEx_PeriphCLKConfig+0xfb8>
 800ceaa:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ceae:	3308      	adds	r3, #8
 800ceb0:	2102      	movs	r1, #2
 800ceb2:	4618      	mov	r0, r3
 800ceb4:	f001 faae 	bl	800e414 <RCCEx_PLL2_Config>
 800ceb8:	4603      	mov	r3, r0
 800ceba:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cebe:	e003      	b.n	800cec8 <HAL_RCCEx_PeriphCLKConfig+0xfb8>
 800cec0:	2301      	movs	r3, #1
 800cec2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cec6:	bf00      	nop
 800cec8:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cecc:	2b00      	cmp	r3, #0
 800cece:	d10d      	bne.n	800ceec <HAL_RCCEx_PeriphCLKConfig+0xfdc>
 800ced0:	4b05      	ldr	r3, [pc, #20]	@ (800cee8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800ced2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ced4:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 800ced8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cedc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800cede:	4a02      	ldr	r2, [pc, #8]	@ (800cee8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cee0:	430b      	orrs	r3, r1
 800cee2:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800cee4:	e006      	b.n	800cef4 <HAL_RCCEx_PeriphCLKConfig+0xfe4>
 800cee6:	bf00      	nop
 800cee8:	58024400 	.word	0x58024400
 800ceec:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cef0:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800cef4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cef8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cefc:	f002 5300 	and.w	r3, r2, #536870912	@ 0x20000000
 800cf00:	663b      	str	r3, [r7, #96]	@ 0x60
 800cf02:	2300      	movs	r3, #0
 800cf04:	667b      	str	r3, [r7, #100]	@ 0x64
 800cf06:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	@ 0x60
 800cf0a:	460b      	mov	r3, r1
 800cf0c:	4313      	orrs	r3, r2
 800cf0e:	d00c      	beq.n	800cf2a <HAL_RCCEx_PeriphCLKConfig+0x101a>
 800cf10:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cf14:	3328      	adds	r3, #40	@ 0x28
 800cf16:	2102      	movs	r1, #2
 800cf18:	4618      	mov	r0, r3
 800cf1a:	f001 fb2d 	bl	800e578 <RCCEx_PLL3_Config>
 800cf1e:	4603      	mov	r3, r0
 800cf20:	2b00      	cmp	r3, #0
 800cf22:	d002      	beq.n	800cf2a <HAL_RCCEx_PeriphCLKConfig+0x101a>
 800cf24:	2301      	movs	r3, #1
 800cf26:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800cf2a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cf2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cf32:	f402 3300 	and.w	r3, r2, #131072	@ 0x20000
 800cf36:	65bb      	str	r3, [r7, #88]	@ 0x58
 800cf38:	2300      	movs	r3, #0
 800cf3a:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800cf3c:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	@ 0x58
 800cf40:	460b      	mov	r3, r1
 800cf42:	4313      	orrs	r3, r2
 800cf44:	d036      	beq.n	800cfb4 <HAL_RCCEx_PeriphCLKConfig+0x10a4>
 800cf46:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cf4a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800cf4c:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800cf50:	d018      	beq.n	800cf84 <HAL_RCCEx_PeriphCLKConfig+0x1074>
 800cf52:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800cf56:	d811      	bhi.n	800cf7c <HAL_RCCEx_PeriphCLKConfig+0x106c>
 800cf58:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800cf5c:	d014      	beq.n	800cf88 <HAL_RCCEx_PeriphCLKConfig+0x1078>
 800cf5e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800cf62:	d80b      	bhi.n	800cf7c <HAL_RCCEx_PeriphCLKConfig+0x106c>
 800cf64:	2b00      	cmp	r3, #0
 800cf66:	d011      	beq.n	800cf8c <HAL_RCCEx_PeriphCLKConfig+0x107c>
 800cf68:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800cf6c:	d106      	bne.n	800cf7c <HAL_RCCEx_PeriphCLKConfig+0x106c>
 800cf6e:	4bb7      	ldr	r3, [pc, #732]	@ (800d24c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800cf70:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cf72:	4ab6      	ldr	r2, [pc, #728]	@ (800d24c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800cf74:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800cf78:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800cf7a:	e008      	b.n	800cf8e <HAL_RCCEx_PeriphCLKConfig+0x107e>
 800cf7c:	2301      	movs	r3, #1
 800cf7e:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cf82:	e004      	b.n	800cf8e <HAL_RCCEx_PeriphCLKConfig+0x107e>
 800cf84:	bf00      	nop
 800cf86:	e002      	b.n	800cf8e <HAL_RCCEx_PeriphCLKConfig+0x107e>
 800cf88:	bf00      	nop
 800cf8a:	e000      	b.n	800cf8e <HAL_RCCEx_PeriphCLKConfig+0x107e>
 800cf8c:	bf00      	nop
 800cf8e:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cf92:	2b00      	cmp	r3, #0
 800cf94:	d10a      	bne.n	800cfac <HAL_RCCEx_PeriphCLKConfig+0x109c>
 800cf96:	4bad      	ldr	r3, [pc, #692]	@ (800d24c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800cf98:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800cf9a:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 800cf9e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cfa2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800cfa4:	4aa9      	ldr	r2, [pc, #676]	@ (800d24c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800cfa6:	430b      	orrs	r3, r1
 800cfa8:	6553      	str	r3, [r2, #84]	@ 0x54
 800cfaa:	e003      	b.n	800cfb4 <HAL_RCCEx_PeriphCLKConfig+0x10a4>
 800cfac:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cfb0:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800cfb4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cfb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cfbc:	f402 1380 	and.w	r3, r2, #1048576	@ 0x100000
 800cfc0:	653b      	str	r3, [r7, #80]	@ 0x50
 800cfc2:	2300      	movs	r3, #0
 800cfc4:	657b      	str	r3, [r7, #84]	@ 0x54
 800cfc6:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	@ 0x50
 800cfca:	460b      	mov	r3, r1
 800cfcc:	4313      	orrs	r3, r2
 800cfce:	d009      	beq.n	800cfe4 <HAL_RCCEx_PeriphCLKConfig+0x10d4>
 800cfd0:	4b9e      	ldr	r3, [pc, #632]	@ (800d24c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800cfd2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800cfd4:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 800cfd8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cfdc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800cfde:	4a9b      	ldr	r2, [pc, #620]	@ (800d24c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800cfe0:	430b      	orrs	r3, r1
 800cfe2:	6513      	str	r3, [r2, #80]	@ 0x50
 800cfe4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cfe8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cfec:	f402 1300 	and.w	r3, r2, #2097152	@ 0x200000
 800cff0:	64bb      	str	r3, [r7, #72]	@ 0x48
 800cff2:	2300      	movs	r3, #0
 800cff4:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800cff6:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	@ 0x48
 800cffa:	460b      	mov	r3, r1
 800cffc:	4313      	orrs	r3, r2
 800cffe:	d009      	beq.n	800d014 <HAL_RCCEx_PeriphCLKConfig+0x1104>
 800d000:	4b92      	ldr	r3, [pc, #584]	@ (800d24c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d002:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d004:	f023 7180 	bic.w	r1, r3, #16777216	@ 0x1000000
 800d008:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d00c:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800d00e:	4a8f      	ldr	r2, [pc, #572]	@ (800d24c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d010:	430b      	orrs	r3, r1
 800d012:	6513      	str	r3, [r2, #80]	@ 0x50
 800d014:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d018:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d01c:	f002 4380 	and.w	r3, r2, #1073741824	@ 0x40000000
 800d020:	643b      	str	r3, [r7, #64]	@ 0x40
 800d022:	2300      	movs	r3, #0
 800d024:	647b      	str	r3, [r7, #68]	@ 0x44
 800d026:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	@ 0x40
 800d02a:	460b      	mov	r3, r1
 800d02c:	4313      	orrs	r3, r2
 800d02e:	d00e      	beq.n	800d04e <HAL_RCCEx_PeriphCLKConfig+0x113e>
 800d030:	4b86      	ldr	r3, [pc, #536]	@ (800d24c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d032:	691b      	ldr	r3, [r3, #16]
 800d034:	4a85      	ldr	r2, [pc, #532]	@ (800d24c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d036:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800d03a:	6113      	str	r3, [r2, #16]
 800d03c:	4b83      	ldr	r3, [pc, #524]	@ (800d24c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d03e:	6919      	ldr	r1, [r3, #16]
 800d040:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d044:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800d048:	4a80      	ldr	r2, [pc, #512]	@ (800d24c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d04a:	430b      	orrs	r3, r1
 800d04c:	6113      	str	r3, [r2, #16]
 800d04e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d052:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d056:	f002 4300 	and.w	r3, r2, #2147483648	@ 0x80000000
 800d05a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800d05c:	2300      	movs	r3, #0
 800d05e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d060:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	@ 0x38
 800d064:	460b      	mov	r3, r1
 800d066:	4313      	orrs	r3, r2
 800d068:	d009      	beq.n	800d07e <HAL_RCCEx_PeriphCLKConfig+0x116e>
 800d06a:	4b78      	ldr	r3, [pc, #480]	@ (800d24c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d06c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d06e:	f023 5140 	bic.w	r1, r3, #805306368	@ 0x30000000
 800d072:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d076:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800d078:	4a74      	ldr	r2, [pc, #464]	@ (800d24c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d07a:	430b      	orrs	r3, r1
 800d07c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800d07e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d082:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d086:	f402 0300 	and.w	r3, r2, #8388608	@ 0x800000
 800d08a:	633b      	str	r3, [r7, #48]	@ 0x30
 800d08c:	2300      	movs	r3, #0
 800d08e:	637b      	str	r3, [r7, #52]	@ 0x34
 800d090:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	@ 0x30
 800d094:	460b      	mov	r3, r1
 800d096:	4313      	orrs	r3, r2
 800d098:	d00a      	beq.n	800d0b0 <HAL_RCCEx_PeriphCLKConfig+0x11a0>
 800d09a:	4b6c      	ldr	r3, [pc, #432]	@ (800d24c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d09c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800d09e:	f423 0140 	bic.w	r1, r3, #12582912	@ 0xc00000
 800d0a2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d0a6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800d0aa:	4a68      	ldr	r2, [pc, #416]	@ (800d24c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d0ac:	430b      	orrs	r3, r1
 800d0ae:	6553      	str	r3, [r2, #84]	@ 0x54
 800d0b0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d0b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d0b8:	2100      	movs	r1, #0
 800d0ba:	62b9      	str	r1, [r7, #40]	@ 0x28
 800d0bc:	f003 0301 	and.w	r3, r3, #1
 800d0c0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800d0c2:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	@ 0x28
 800d0c6:	460b      	mov	r3, r1
 800d0c8:	4313      	orrs	r3, r2
 800d0ca:	d011      	beq.n	800d0f0 <HAL_RCCEx_PeriphCLKConfig+0x11e0>
 800d0cc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d0d0:	3308      	adds	r3, #8
 800d0d2:	2100      	movs	r1, #0
 800d0d4:	4618      	mov	r0, r3
 800d0d6:	f001 f99d 	bl	800e414 <RCCEx_PLL2_Config>
 800d0da:	4603      	mov	r3, r0
 800d0dc:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800d0e0:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d0e4:	2b00      	cmp	r3, #0
 800d0e6:	d003      	beq.n	800d0f0 <HAL_RCCEx_PeriphCLKConfig+0x11e0>
 800d0e8:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d0ec:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800d0f0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d0f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d0f8:	2100      	movs	r1, #0
 800d0fa:	6239      	str	r1, [r7, #32]
 800d0fc:	f003 0302 	and.w	r3, r3, #2
 800d100:	627b      	str	r3, [r7, #36]	@ 0x24
 800d102:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 800d106:	460b      	mov	r3, r1
 800d108:	4313      	orrs	r3, r2
 800d10a:	d011      	beq.n	800d130 <HAL_RCCEx_PeriphCLKConfig+0x1220>
 800d10c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d110:	3308      	adds	r3, #8
 800d112:	2101      	movs	r1, #1
 800d114:	4618      	mov	r0, r3
 800d116:	f001 f97d 	bl	800e414 <RCCEx_PLL2_Config>
 800d11a:	4603      	mov	r3, r0
 800d11c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800d120:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d124:	2b00      	cmp	r3, #0
 800d126:	d003      	beq.n	800d130 <HAL_RCCEx_PeriphCLKConfig+0x1220>
 800d128:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d12c:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800d130:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d134:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d138:	2100      	movs	r1, #0
 800d13a:	61b9      	str	r1, [r7, #24]
 800d13c:	f003 0304 	and.w	r3, r3, #4
 800d140:	61fb      	str	r3, [r7, #28]
 800d142:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 800d146:	460b      	mov	r3, r1
 800d148:	4313      	orrs	r3, r2
 800d14a:	d011      	beq.n	800d170 <HAL_RCCEx_PeriphCLKConfig+0x1260>
 800d14c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d150:	3308      	adds	r3, #8
 800d152:	2102      	movs	r1, #2
 800d154:	4618      	mov	r0, r3
 800d156:	f001 f95d 	bl	800e414 <RCCEx_PLL2_Config>
 800d15a:	4603      	mov	r3, r0
 800d15c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800d160:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d164:	2b00      	cmp	r3, #0
 800d166:	d003      	beq.n	800d170 <HAL_RCCEx_PeriphCLKConfig+0x1260>
 800d168:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d16c:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800d170:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d174:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d178:	2100      	movs	r1, #0
 800d17a:	6139      	str	r1, [r7, #16]
 800d17c:	f003 0308 	and.w	r3, r3, #8
 800d180:	617b      	str	r3, [r7, #20]
 800d182:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 800d186:	460b      	mov	r3, r1
 800d188:	4313      	orrs	r3, r2
 800d18a:	d011      	beq.n	800d1b0 <HAL_RCCEx_PeriphCLKConfig+0x12a0>
 800d18c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d190:	3328      	adds	r3, #40	@ 0x28
 800d192:	2100      	movs	r1, #0
 800d194:	4618      	mov	r0, r3
 800d196:	f001 f9ef 	bl	800e578 <RCCEx_PLL3_Config>
 800d19a:	4603      	mov	r3, r0
 800d19c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800d1a0:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d1a4:	2b00      	cmp	r3, #0
 800d1a6:	d003      	beq.n	800d1b0 <HAL_RCCEx_PeriphCLKConfig+0x12a0>
 800d1a8:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d1ac:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800d1b0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d1b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d1b8:	2100      	movs	r1, #0
 800d1ba:	60b9      	str	r1, [r7, #8]
 800d1bc:	f003 0310 	and.w	r3, r3, #16
 800d1c0:	60fb      	str	r3, [r7, #12]
 800d1c2:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 800d1c6:	460b      	mov	r3, r1
 800d1c8:	4313      	orrs	r3, r2
 800d1ca:	d011      	beq.n	800d1f0 <HAL_RCCEx_PeriphCLKConfig+0x12e0>
 800d1cc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d1d0:	3328      	adds	r3, #40	@ 0x28
 800d1d2:	2101      	movs	r1, #1
 800d1d4:	4618      	mov	r0, r3
 800d1d6:	f001 f9cf 	bl	800e578 <RCCEx_PLL3_Config>
 800d1da:	4603      	mov	r3, r0
 800d1dc:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800d1e0:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d1e4:	2b00      	cmp	r3, #0
 800d1e6:	d003      	beq.n	800d1f0 <HAL_RCCEx_PeriphCLKConfig+0x12e0>
 800d1e8:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d1ec:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800d1f0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d1f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d1f8:	2100      	movs	r1, #0
 800d1fa:	6039      	str	r1, [r7, #0]
 800d1fc:	f003 0320 	and.w	r3, r3, #32
 800d200:	607b      	str	r3, [r7, #4]
 800d202:	e9d7 1200 	ldrd	r1, r2, [r7]
 800d206:	460b      	mov	r3, r1
 800d208:	4313      	orrs	r3, r2
 800d20a:	d011      	beq.n	800d230 <HAL_RCCEx_PeriphCLKConfig+0x1320>
 800d20c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d210:	3328      	adds	r3, #40	@ 0x28
 800d212:	2102      	movs	r1, #2
 800d214:	4618      	mov	r0, r3
 800d216:	f001 f9af 	bl	800e578 <RCCEx_PLL3_Config>
 800d21a:	4603      	mov	r3, r0
 800d21c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800d220:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d224:	2b00      	cmp	r3, #0
 800d226:	d003      	beq.n	800d230 <HAL_RCCEx_PeriphCLKConfig+0x1320>
 800d228:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d22c:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800d230:	f897 3116 	ldrb.w	r3, [r7, #278]	@ 0x116
 800d234:	2b00      	cmp	r3, #0
 800d236:	d101      	bne.n	800d23c <HAL_RCCEx_PeriphCLKConfig+0x132c>
 800d238:	2300      	movs	r3, #0
 800d23a:	e000      	b.n	800d23e <HAL_RCCEx_PeriphCLKConfig+0x132e>
 800d23c:	2301      	movs	r3, #1
 800d23e:	4618      	mov	r0, r3
 800d240:	f507 778c 	add.w	r7, r7, #280	@ 0x118
 800d244:	46bd      	mov	sp, r7
 800d246:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800d24a:	bf00      	nop
 800d24c:	58024400 	.word	0x58024400

0800d250 <HAL_RCCEx_GetPeriphCLKFreq>:
 800d250:	b580      	push	{r7, lr}
 800d252:	b090      	sub	sp, #64	@ 0x40
 800d254:	af00      	add	r7, sp, #0
 800d256:	e9c7 0100 	strd	r0, r1, [r7]
 800d25a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d25e:	f5a2 7180 	sub.w	r1, r2, #256	@ 0x100
 800d262:	430b      	orrs	r3, r1
 800d264:	f040 8094 	bne.w	800d390 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 800d268:	4b9b      	ldr	r3, [pc, #620]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d26a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d26c:	f003 0307 	and.w	r3, r3, #7
 800d270:	633b      	str	r3, [r7, #48]	@ 0x30
 800d272:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d274:	2b04      	cmp	r3, #4
 800d276:	f200 8087 	bhi.w	800d388 <HAL_RCCEx_GetPeriphCLKFreq+0x138>
 800d27a:	a201      	add	r2, pc, #4	@ (adr r2, 800d280 <HAL_RCCEx_GetPeriphCLKFreq+0x30>)
 800d27c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d280:	0800d295 	.word	0x0800d295
 800d284:	0800d2bd 	.word	0x0800d2bd
 800d288:	0800d2e5 	.word	0x0800d2e5
 800d28c:	0800d381 	.word	0x0800d381
 800d290:	0800d30d 	.word	0x0800d30d
 800d294:	4b90      	ldr	r3, [pc, #576]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d296:	681b      	ldr	r3, [r3, #0]
 800d298:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800d29c:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800d2a0:	d108      	bne.n	800d2b4 <HAL_RCCEx_GetPeriphCLKFreq+0x64>
 800d2a2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800d2a6:	4618      	mov	r0, r3
 800d2a8:	f000 ff62 	bl	800e170 <HAL_RCCEx_GetPLL1ClockFreq>
 800d2ac:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d2ae:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d2b0:	f000 bc93 	b.w	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d2b4:	2300      	movs	r3, #0
 800d2b6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d2b8:	f000 bc8f 	b.w	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d2bc:	4b86      	ldr	r3, [pc, #536]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d2be:	681b      	ldr	r3, [r3, #0]
 800d2c0:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800d2c4:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800d2c8:	d108      	bne.n	800d2dc <HAL_RCCEx_GetPeriphCLKFreq+0x8c>
 800d2ca:	f107 0318 	add.w	r3, r7, #24
 800d2ce:	4618      	mov	r0, r3
 800d2d0:	f000 fca6 	bl	800dc20 <HAL_RCCEx_GetPLL2ClockFreq>
 800d2d4:	69bb      	ldr	r3, [r7, #24]
 800d2d6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d2d8:	f000 bc7f 	b.w	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d2dc:	2300      	movs	r3, #0
 800d2de:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d2e0:	f000 bc7b 	b.w	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d2e4:	4b7c      	ldr	r3, [pc, #496]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d2e6:	681b      	ldr	r3, [r3, #0]
 800d2e8:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800d2ec:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d2f0:	d108      	bne.n	800d304 <HAL_RCCEx_GetPeriphCLKFreq+0xb4>
 800d2f2:	f107 030c 	add.w	r3, r7, #12
 800d2f6:	4618      	mov	r0, r3
 800d2f8:	f000 fde6 	bl	800dec8 <HAL_RCCEx_GetPLL3ClockFreq>
 800d2fc:	68fb      	ldr	r3, [r7, #12]
 800d2fe:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d300:	f000 bc6b 	b.w	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d304:	2300      	movs	r3, #0
 800d306:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d308:	f000 bc67 	b.w	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d30c:	4b72      	ldr	r3, [pc, #456]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d30e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d310:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800d314:	637b      	str	r3, [r7, #52]	@ 0x34
 800d316:	4b70      	ldr	r3, [pc, #448]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d318:	681b      	ldr	r3, [r3, #0]
 800d31a:	f003 0304 	and.w	r3, r3, #4
 800d31e:	2b04      	cmp	r3, #4
 800d320:	d10c      	bne.n	800d33c <HAL_RCCEx_GetPeriphCLKFreq+0xec>
 800d322:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d324:	2b00      	cmp	r3, #0
 800d326:	d109      	bne.n	800d33c <HAL_RCCEx_GetPeriphCLKFreq+0xec>
 800d328:	4b6b      	ldr	r3, [pc, #428]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d32a:	681b      	ldr	r3, [r3, #0]
 800d32c:	08db      	lsrs	r3, r3, #3
 800d32e:	f003 0303 	and.w	r3, r3, #3
 800d332:	4a6a      	ldr	r2, [pc, #424]	@ (800d4dc <HAL_RCCEx_GetPeriphCLKFreq+0x28c>)
 800d334:	fa22 f303 	lsr.w	r3, r2, r3
 800d338:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d33a:	e01f      	b.n	800d37c <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
 800d33c:	4b66      	ldr	r3, [pc, #408]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d33e:	681b      	ldr	r3, [r3, #0]
 800d340:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d344:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800d348:	d106      	bne.n	800d358 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
 800d34a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d34c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800d350:	d102      	bne.n	800d358 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
 800d352:	4b63      	ldr	r3, [pc, #396]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x290>)
 800d354:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d356:	e011      	b.n	800d37c <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
 800d358:	4b5f      	ldr	r3, [pc, #380]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d35a:	681b      	ldr	r3, [r3, #0]
 800d35c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800d360:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d364:	d106      	bne.n	800d374 <HAL_RCCEx_GetPeriphCLKFreq+0x124>
 800d366:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d368:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d36c:	d102      	bne.n	800d374 <HAL_RCCEx_GetPeriphCLKFreq+0x124>
 800d36e:	4b5d      	ldr	r3, [pc, #372]	@ (800d4e4 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 800d370:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d372:	e003      	b.n	800d37c <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
 800d374:	2300      	movs	r3, #0
 800d376:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d378:	f000 bc2f 	b.w	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d37c:	f000 bc2d 	b.w	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d380:	4b59      	ldr	r3, [pc, #356]	@ (800d4e8 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 800d382:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d384:	f000 bc29 	b.w	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d388:	2300      	movs	r3, #0
 800d38a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d38c:	f000 bc25 	b.w	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d390:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d394:	f5a2 6180 	sub.w	r1, r2, #1024	@ 0x400
 800d398:	430b      	orrs	r3, r1
 800d39a:	f040 80a7 	bne.w	800d4ec <HAL_RCCEx_GetPeriphCLKFreq+0x29c>
 800d39e:	4b4e      	ldr	r3, [pc, #312]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d3a0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800d3a2:	f403 0360 	and.w	r3, r3, #14680064	@ 0xe00000
 800d3a6:	633b      	str	r3, [r7, #48]	@ 0x30
 800d3a8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d3aa:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800d3ae:	d054      	beq.n	800d45a <HAL_RCCEx_GetPeriphCLKFreq+0x20a>
 800d3b0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d3b2:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800d3b6:	f200 808b 	bhi.w	800d4d0 <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 800d3ba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d3bc:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 800d3c0:	f000 8083 	beq.w	800d4ca <HAL_RCCEx_GetPeriphCLKFreq+0x27a>
 800d3c4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d3c6:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 800d3ca:	f200 8081 	bhi.w	800d4d0 <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 800d3ce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d3d0:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800d3d4:	d02f      	beq.n	800d436 <HAL_RCCEx_GetPeriphCLKFreq+0x1e6>
 800d3d6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d3d8:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800d3dc:	d878      	bhi.n	800d4d0 <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 800d3de:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d3e0:	2b00      	cmp	r3, #0
 800d3e2:	d004      	beq.n	800d3ee <HAL_RCCEx_GetPeriphCLKFreq+0x19e>
 800d3e4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d3e6:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800d3ea:	d012      	beq.n	800d412 <HAL_RCCEx_GetPeriphCLKFreq+0x1c2>
 800d3ec:	e070      	b.n	800d4d0 <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 800d3ee:	4b3a      	ldr	r3, [pc, #232]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d3f0:	681b      	ldr	r3, [r3, #0]
 800d3f2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800d3f6:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800d3fa:	d107      	bne.n	800d40c <HAL_RCCEx_GetPeriphCLKFreq+0x1bc>
 800d3fc:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800d400:	4618      	mov	r0, r3
 800d402:	f000 feb5 	bl	800e170 <HAL_RCCEx_GetPLL1ClockFreq>
 800d406:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d408:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d40a:	e3e6      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d40c:	2300      	movs	r3, #0
 800d40e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d410:	e3e3      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d412:	4b31      	ldr	r3, [pc, #196]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d414:	681b      	ldr	r3, [r3, #0]
 800d416:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800d41a:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800d41e:	d107      	bne.n	800d430 <HAL_RCCEx_GetPeriphCLKFreq+0x1e0>
 800d420:	f107 0318 	add.w	r3, r7, #24
 800d424:	4618      	mov	r0, r3
 800d426:	f000 fbfb 	bl	800dc20 <HAL_RCCEx_GetPLL2ClockFreq>
 800d42a:	69bb      	ldr	r3, [r7, #24]
 800d42c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d42e:	e3d4      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d430:	2300      	movs	r3, #0
 800d432:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d434:	e3d1      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d436:	4b28      	ldr	r3, [pc, #160]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d438:	681b      	ldr	r3, [r3, #0]
 800d43a:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800d43e:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d442:	d107      	bne.n	800d454 <HAL_RCCEx_GetPeriphCLKFreq+0x204>
 800d444:	f107 030c 	add.w	r3, r7, #12
 800d448:	4618      	mov	r0, r3
 800d44a:	f000 fd3d 	bl	800dec8 <HAL_RCCEx_GetPLL3ClockFreq>
 800d44e:	68fb      	ldr	r3, [r7, #12]
 800d450:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d452:	e3c2      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d454:	2300      	movs	r3, #0
 800d456:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d458:	e3bf      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d45a:	4b1f      	ldr	r3, [pc, #124]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d45c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d45e:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800d462:	637b      	str	r3, [r7, #52]	@ 0x34
 800d464:	4b1c      	ldr	r3, [pc, #112]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d466:	681b      	ldr	r3, [r3, #0]
 800d468:	f003 0304 	and.w	r3, r3, #4
 800d46c:	2b04      	cmp	r3, #4
 800d46e:	d10c      	bne.n	800d48a <HAL_RCCEx_GetPeriphCLKFreq+0x23a>
 800d470:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d472:	2b00      	cmp	r3, #0
 800d474:	d109      	bne.n	800d48a <HAL_RCCEx_GetPeriphCLKFreq+0x23a>
 800d476:	4b18      	ldr	r3, [pc, #96]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d478:	681b      	ldr	r3, [r3, #0]
 800d47a:	08db      	lsrs	r3, r3, #3
 800d47c:	f003 0303 	and.w	r3, r3, #3
 800d480:	4a16      	ldr	r2, [pc, #88]	@ (800d4dc <HAL_RCCEx_GetPeriphCLKFreq+0x28c>)
 800d482:	fa22 f303 	lsr.w	r3, r2, r3
 800d486:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d488:	e01e      	b.n	800d4c8 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
 800d48a:	4b13      	ldr	r3, [pc, #76]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d48c:	681b      	ldr	r3, [r3, #0]
 800d48e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d492:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800d496:	d106      	bne.n	800d4a6 <HAL_RCCEx_GetPeriphCLKFreq+0x256>
 800d498:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d49a:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800d49e:	d102      	bne.n	800d4a6 <HAL_RCCEx_GetPeriphCLKFreq+0x256>
 800d4a0:	4b0f      	ldr	r3, [pc, #60]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x290>)
 800d4a2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d4a4:	e010      	b.n	800d4c8 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
 800d4a6:	4b0c      	ldr	r3, [pc, #48]	@ (800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d4a8:	681b      	ldr	r3, [r3, #0]
 800d4aa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800d4ae:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d4b2:	d106      	bne.n	800d4c2 <HAL_RCCEx_GetPeriphCLKFreq+0x272>
 800d4b4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d4b6:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d4ba:	d102      	bne.n	800d4c2 <HAL_RCCEx_GetPeriphCLKFreq+0x272>
 800d4bc:	4b09      	ldr	r3, [pc, #36]	@ (800d4e4 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 800d4be:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d4c0:	e002      	b.n	800d4c8 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
 800d4c2:	2300      	movs	r3, #0
 800d4c4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d4c6:	e388      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d4c8:	e387      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d4ca:	4b07      	ldr	r3, [pc, #28]	@ (800d4e8 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 800d4cc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d4ce:	e384      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d4d0:	2300      	movs	r3, #0
 800d4d2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d4d4:	e381      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d4d6:	bf00      	nop
 800d4d8:	58024400 	.word	0x58024400
 800d4dc:	03d09000 	.word	0x03d09000
 800d4e0:	003d0900 	.word	0x003d0900
 800d4e4:	016e3600 	.word	0x016e3600
 800d4e8:	00bb8000 	.word	0x00bb8000
 800d4ec:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d4f0:	f5a2 6100 	sub.w	r1, r2, #2048	@ 0x800
 800d4f4:	430b      	orrs	r3, r1
 800d4f6:	f040 809c 	bne.w	800d632 <HAL_RCCEx_GetPeriphCLKFreq+0x3e2>
 800d4fa:	4b9e      	ldr	r3, [pc, #632]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d4fc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800d4fe:	f003 63e0 	and.w	r3, r3, #117440512	@ 0x7000000
 800d502:	633b      	str	r3, [r7, #48]	@ 0x30
 800d504:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d506:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800d50a:	d054      	beq.n	800d5b6 <HAL_RCCEx_GetPeriphCLKFreq+0x366>
 800d50c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d50e:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800d512:	f200 808b 	bhi.w	800d62c <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 800d516:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d518:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 800d51c:	f000 8083 	beq.w	800d626 <HAL_RCCEx_GetPeriphCLKFreq+0x3d6>
 800d520:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d522:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 800d526:	f200 8081 	bhi.w	800d62c <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 800d52a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d52c:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800d530:	d02f      	beq.n	800d592 <HAL_RCCEx_GetPeriphCLKFreq+0x342>
 800d532:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d534:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800d538:	d878      	bhi.n	800d62c <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 800d53a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d53c:	2b00      	cmp	r3, #0
 800d53e:	d004      	beq.n	800d54a <HAL_RCCEx_GetPeriphCLKFreq+0x2fa>
 800d540:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d542:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800d546:	d012      	beq.n	800d56e <HAL_RCCEx_GetPeriphCLKFreq+0x31e>
 800d548:	e070      	b.n	800d62c <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 800d54a:	4b8a      	ldr	r3, [pc, #552]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d54c:	681b      	ldr	r3, [r3, #0]
 800d54e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800d552:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800d556:	d107      	bne.n	800d568 <HAL_RCCEx_GetPeriphCLKFreq+0x318>
 800d558:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800d55c:	4618      	mov	r0, r3
 800d55e:	f000 fe07 	bl	800e170 <HAL_RCCEx_GetPLL1ClockFreq>
 800d562:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d564:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d566:	e338      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d568:	2300      	movs	r3, #0
 800d56a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d56c:	e335      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d56e:	4b81      	ldr	r3, [pc, #516]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d570:	681b      	ldr	r3, [r3, #0]
 800d572:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800d576:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800d57a:	d107      	bne.n	800d58c <HAL_RCCEx_GetPeriphCLKFreq+0x33c>
 800d57c:	f107 0318 	add.w	r3, r7, #24
 800d580:	4618      	mov	r0, r3
 800d582:	f000 fb4d 	bl	800dc20 <HAL_RCCEx_GetPLL2ClockFreq>
 800d586:	69bb      	ldr	r3, [r7, #24]
 800d588:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d58a:	e326      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d58c:	2300      	movs	r3, #0
 800d58e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d590:	e323      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d592:	4b78      	ldr	r3, [pc, #480]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d594:	681b      	ldr	r3, [r3, #0]
 800d596:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800d59a:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d59e:	d107      	bne.n	800d5b0 <HAL_RCCEx_GetPeriphCLKFreq+0x360>
 800d5a0:	f107 030c 	add.w	r3, r7, #12
 800d5a4:	4618      	mov	r0, r3
 800d5a6:	f000 fc8f 	bl	800dec8 <HAL_RCCEx_GetPLL3ClockFreq>
 800d5aa:	68fb      	ldr	r3, [r7, #12]
 800d5ac:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d5ae:	e314      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d5b0:	2300      	movs	r3, #0
 800d5b2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d5b4:	e311      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d5b6:	4b6f      	ldr	r3, [pc, #444]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d5b8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d5ba:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800d5be:	637b      	str	r3, [r7, #52]	@ 0x34
 800d5c0:	4b6c      	ldr	r3, [pc, #432]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d5c2:	681b      	ldr	r3, [r3, #0]
 800d5c4:	f003 0304 	and.w	r3, r3, #4
 800d5c8:	2b04      	cmp	r3, #4
 800d5ca:	d10c      	bne.n	800d5e6 <HAL_RCCEx_GetPeriphCLKFreq+0x396>
 800d5cc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d5ce:	2b00      	cmp	r3, #0
 800d5d0:	d109      	bne.n	800d5e6 <HAL_RCCEx_GetPeriphCLKFreq+0x396>
 800d5d2:	4b68      	ldr	r3, [pc, #416]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d5d4:	681b      	ldr	r3, [r3, #0]
 800d5d6:	08db      	lsrs	r3, r3, #3
 800d5d8:	f003 0303 	and.w	r3, r3, #3
 800d5dc:	4a66      	ldr	r2, [pc, #408]	@ (800d778 <HAL_RCCEx_GetPeriphCLKFreq+0x528>)
 800d5de:	fa22 f303 	lsr.w	r3, r2, r3
 800d5e2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d5e4:	e01e      	b.n	800d624 <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
 800d5e6:	4b63      	ldr	r3, [pc, #396]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d5e8:	681b      	ldr	r3, [r3, #0]
 800d5ea:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d5ee:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800d5f2:	d106      	bne.n	800d602 <HAL_RCCEx_GetPeriphCLKFreq+0x3b2>
 800d5f4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d5f6:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800d5fa:	d102      	bne.n	800d602 <HAL_RCCEx_GetPeriphCLKFreq+0x3b2>
 800d5fc:	4b5f      	ldr	r3, [pc, #380]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x52c>)
 800d5fe:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d600:	e010      	b.n	800d624 <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
 800d602:	4b5c      	ldr	r3, [pc, #368]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d604:	681b      	ldr	r3, [r3, #0]
 800d606:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800d60a:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d60e:	d106      	bne.n	800d61e <HAL_RCCEx_GetPeriphCLKFreq+0x3ce>
 800d610:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d612:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d616:	d102      	bne.n	800d61e <HAL_RCCEx_GetPeriphCLKFreq+0x3ce>
 800d618:	4b59      	ldr	r3, [pc, #356]	@ (800d780 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800d61a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d61c:	e002      	b.n	800d624 <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
 800d61e:	2300      	movs	r3, #0
 800d620:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d622:	e2da      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d624:	e2d9      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d626:	4b57      	ldr	r3, [pc, #348]	@ (800d784 <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 800d628:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d62a:	e2d6      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d62c:	2300      	movs	r3, #0
 800d62e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d630:	e2d3      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d632:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d636:	f5a2 5180 	sub.w	r1, r2, #4096	@ 0x1000
 800d63a:	430b      	orrs	r3, r1
 800d63c:	f040 80a7 	bne.w	800d78e <HAL_RCCEx_GetPeriphCLKFreq+0x53e>
 800d640:	4b4c      	ldr	r3, [pc, #304]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d642:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d644:	f403 43e0 	and.w	r3, r3, #28672	@ 0x7000
 800d648:	63bb      	str	r3, [r7, #56]	@ 0x38
 800d64a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d64c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800d650:	d055      	beq.n	800d6fe <HAL_RCCEx_GetPeriphCLKFreq+0x4ae>
 800d652:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d654:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800d658:	f200 8096 	bhi.w	800d788 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 800d65c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d65e:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800d662:	f000 8084 	beq.w	800d76e <HAL_RCCEx_GetPeriphCLKFreq+0x51e>
 800d666:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d668:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800d66c:	f200 808c 	bhi.w	800d788 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 800d670:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d672:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800d676:	d030      	beq.n	800d6da <HAL_RCCEx_GetPeriphCLKFreq+0x48a>
 800d678:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d67a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800d67e:	f200 8083 	bhi.w	800d788 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 800d682:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d684:	2b00      	cmp	r3, #0
 800d686:	d004      	beq.n	800d692 <HAL_RCCEx_GetPeriphCLKFreq+0x442>
 800d688:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d68a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800d68e:	d012      	beq.n	800d6b6 <HAL_RCCEx_GetPeriphCLKFreq+0x466>
 800d690:	e07a      	b.n	800d788 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 800d692:	4b38      	ldr	r3, [pc, #224]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d694:	681b      	ldr	r3, [r3, #0]
 800d696:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800d69a:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800d69e:	d107      	bne.n	800d6b0 <HAL_RCCEx_GetPeriphCLKFreq+0x460>
 800d6a0:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800d6a4:	4618      	mov	r0, r3
 800d6a6:	f000 fd63 	bl	800e170 <HAL_RCCEx_GetPLL1ClockFreq>
 800d6aa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d6ac:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d6ae:	e294      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d6b0:	2300      	movs	r3, #0
 800d6b2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d6b4:	e291      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d6b6:	4b2f      	ldr	r3, [pc, #188]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d6b8:	681b      	ldr	r3, [r3, #0]
 800d6ba:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800d6be:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800d6c2:	d107      	bne.n	800d6d4 <HAL_RCCEx_GetPeriphCLKFreq+0x484>
 800d6c4:	f107 0318 	add.w	r3, r7, #24
 800d6c8:	4618      	mov	r0, r3
 800d6ca:	f000 faa9 	bl	800dc20 <HAL_RCCEx_GetPLL2ClockFreq>
 800d6ce:	69bb      	ldr	r3, [r7, #24]
 800d6d0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d6d2:	e282      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d6d4:	2300      	movs	r3, #0
 800d6d6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d6d8:	e27f      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d6da:	4b26      	ldr	r3, [pc, #152]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d6dc:	681b      	ldr	r3, [r3, #0]
 800d6de:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800d6e2:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d6e6:	d107      	bne.n	800d6f8 <HAL_RCCEx_GetPeriphCLKFreq+0x4a8>
 800d6e8:	f107 030c 	add.w	r3, r7, #12
 800d6ec:	4618      	mov	r0, r3
 800d6ee:	f000 fbeb 	bl	800dec8 <HAL_RCCEx_GetPLL3ClockFreq>
 800d6f2:	68fb      	ldr	r3, [r7, #12]
 800d6f4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d6f6:	e270      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d6f8:	2300      	movs	r3, #0
 800d6fa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d6fc:	e26d      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d6fe:	4b1d      	ldr	r3, [pc, #116]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d700:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d702:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800d706:	637b      	str	r3, [r7, #52]	@ 0x34
 800d708:	4b1a      	ldr	r3, [pc, #104]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d70a:	681b      	ldr	r3, [r3, #0]
 800d70c:	f003 0304 	and.w	r3, r3, #4
 800d710:	2b04      	cmp	r3, #4
 800d712:	d10c      	bne.n	800d72e <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
 800d714:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d716:	2b00      	cmp	r3, #0
 800d718:	d109      	bne.n	800d72e <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
 800d71a:	4b16      	ldr	r3, [pc, #88]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d71c:	681b      	ldr	r3, [r3, #0]
 800d71e:	08db      	lsrs	r3, r3, #3
 800d720:	f003 0303 	and.w	r3, r3, #3
 800d724:	4a14      	ldr	r2, [pc, #80]	@ (800d778 <HAL_RCCEx_GetPeriphCLKFreq+0x528>)
 800d726:	fa22 f303 	lsr.w	r3, r2, r3
 800d72a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d72c:	e01e      	b.n	800d76c <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
 800d72e:	4b11      	ldr	r3, [pc, #68]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d730:	681b      	ldr	r3, [r3, #0]
 800d732:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d736:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800d73a:	d106      	bne.n	800d74a <HAL_RCCEx_GetPeriphCLKFreq+0x4fa>
 800d73c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d73e:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800d742:	d102      	bne.n	800d74a <HAL_RCCEx_GetPeriphCLKFreq+0x4fa>
 800d744:	4b0d      	ldr	r3, [pc, #52]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x52c>)
 800d746:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d748:	e010      	b.n	800d76c <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
 800d74a:	4b0a      	ldr	r3, [pc, #40]	@ (800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d74c:	681b      	ldr	r3, [r3, #0]
 800d74e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800d752:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d756:	d106      	bne.n	800d766 <HAL_RCCEx_GetPeriphCLKFreq+0x516>
 800d758:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d75a:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d75e:	d102      	bne.n	800d766 <HAL_RCCEx_GetPeriphCLKFreq+0x516>
 800d760:	4b07      	ldr	r3, [pc, #28]	@ (800d780 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800d762:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d764:	e002      	b.n	800d76c <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
 800d766:	2300      	movs	r3, #0
 800d768:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d76a:	e236      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d76c:	e235      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d76e:	4b05      	ldr	r3, [pc, #20]	@ (800d784 <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 800d770:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d772:	e232      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d774:	58024400 	.word	0x58024400
 800d778:	03d09000 	.word	0x03d09000
 800d77c:	003d0900 	.word	0x003d0900
 800d780:	016e3600 	.word	0x016e3600
 800d784:	00bb8000 	.word	0x00bb8000
 800d788:	2300      	movs	r3, #0
 800d78a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d78c:	e225      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d78e:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d792:	f5a2 5100 	sub.w	r1, r2, #8192	@ 0x2000
 800d796:	430b      	orrs	r3, r1
 800d798:	f040 8085 	bne.w	800d8a6 <HAL_RCCEx_GetPeriphCLKFreq+0x656>
 800d79c:	4b9c      	ldr	r3, [pc, #624]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d79e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d7a0:	f403 23e0 	and.w	r3, r3, #458752	@ 0x70000
 800d7a4:	63bb      	str	r3, [r7, #56]	@ 0x38
 800d7a6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7a8:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800d7ac:	d06b      	beq.n	800d886 <HAL_RCCEx_GetPeriphCLKFreq+0x636>
 800d7ae:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7b0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800d7b4:	d874      	bhi.n	800d8a0 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 800d7b6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7b8:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 800d7bc:	d056      	beq.n	800d86c <HAL_RCCEx_GetPeriphCLKFreq+0x61c>
 800d7be:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7c0:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 800d7c4:	d86c      	bhi.n	800d8a0 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 800d7c6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7c8:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800d7cc:	d03b      	beq.n	800d846 <HAL_RCCEx_GetPeriphCLKFreq+0x5f6>
 800d7ce:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7d0:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800d7d4:	d864      	bhi.n	800d8a0 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 800d7d6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7d8:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d7dc:	d021      	beq.n	800d822 <HAL_RCCEx_GetPeriphCLKFreq+0x5d2>
 800d7de:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7e0:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d7e4:	d85c      	bhi.n	800d8a0 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 800d7e6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7e8:	2b00      	cmp	r3, #0
 800d7ea:	d004      	beq.n	800d7f6 <HAL_RCCEx_GetPeriphCLKFreq+0x5a6>
 800d7ec:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7ee:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800d7f2:	d004      	beq.n	800d7fe <HAL_RCCEx_GetPeriphCLKFreq+0x5ae>
 800d7f4:	e054      	b.n	800d8a0 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 800d7f6:	f7fe fb5f 	bl	800beb8 <HAL_RCC_GetPCLK1Freq>
 800d7fa:	63f8      	str	r0, [r7, #60]	@ 0x3c
 800d7fc:	e1ed      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d7fe:	4b84      	ldr	r3, [pc, #528]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d800:	681b      	ldr	r3, [r3, #0]
 800d802:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800d806:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800d80a:	d107      	bne.n	800d81c <HAL_RCCEx_GetPeriphCLKFreq+0x5cc>
 800d80c:	f107 0318 	add.w	r3, r7, #24
 800d810:	4618      	mov	r0, r3
 800d812:	f000 fa05 	bl	800dc20 <HAL_RCCEx_GetPLL2ClockFreq>
 800d816:	69fb      	ldr	r3, [r7, #28]
 800d818:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d81a:	e1de      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d81c:	2300      	movs	r3, #0
 800d81e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d820:	e1db      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d822:	4b7b      	ldr	r3, [pc, #492]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d824:	681b      	ldr	r3, [r3, #0]
 800d826:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800d82a:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d82e:	d107      	bne.n	800d840 <HAL_RCCEx_GetPeriphCLKFreq+0x5f0>
 800d830:	f107 030c 	add.w	r3, r7, #12
 800d834:	4618      	mov	r0, r3
 800d836:	f000 fb47 	bl	800dec8 <HAL_RCCEx_GetPLL3ClockFreq>
 800d83a:	693b      	ldr	r3, [r7, #16]
 800d83c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d83e:	e1cc      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d840:	2300      	movs	r3, #0
 800d842:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d844:	e1c9      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d846:	4b72      	ldr	r3, [pc, #456]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d848:	681b      	ldr	r3, [r3, #0]
 800d84a:	f003 0304 	and.w	r3, r3, #4
 800d84e:	2b04      	cmp	r3, #4
 800d850:	d109      	bne.n	800d866 <HAL_RCCEx_GetPeriphCLKFreq+0x616>
 800d852:	4b6f      	ldr	r3, [pc, #444]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d854:	681b      	ldr	r3, [r3, #0]
 800d856:	08db      	lsrs	r3, r3, #3
 800d858:	f003 0303 	and.w	r3, r3, #3
 800d85c:	4a6d      	ldr	r2, [pc, #436]	@ (800da14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c4>)
 800d85e:	fa22 f303 	lsr.w	r3, r2, r3
 800d862:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d864:	e1b9      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d866:	2300      	movs	r3, #0
 800d868:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d86a:	e1b6      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d86c:	4b68      	ldr	r3, [pc, #416]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d86e:	681b      	ldr	r3, [r3, #0]
 800d870:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d874:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800d878:	d102      	bne.n	800d880 <HAL_RCCEx_GetPeriphCLKFreq+0x630>
 800d87a:	4b67      	ldr	r3, [pc, #412]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c8>)
 800d87c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d87e:	e1ac      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d880:	2300      	movs	r3, #0
 800d882:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d884:	e1a9      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d886:	4b62      	ldr	r3, [pc, #392]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d888:	681b      	ldr	r3, [r3, #0]
 800d88a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800d88e:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d892:	d102      	bne.n	800d89a <HAL_RCCEx_GetPeriphCLKFreq+0x64a>
 800d894:	4b61      	ldr	r3, [pc, #388]	@ (800da1c <HAL_RCCEx_GetPeriphCLKFreq+0x7cc>)
 800d896:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d898:	e19f      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d89a:	2300      	movs	r3, #0
 800d89c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d89e:	e19c      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d8a0:	2300      	movs	r3, #0
 800d8a2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d8a4:	e199      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d8a6:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d8aa:	f5a2 2100 	sub.w	r1, r2, #524288	@ 0x80000
 800d8ae:	430b      	orrs	r3, r1
 800d8b0:	d173      	bne.n	800d99a <HAL_RCCEx_GetPeriphCLKFreq+0x74a>
 800d8b2:	4b57      	ldr	r3, [pc, #348]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d8b4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800d8b6:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800d8ba:	63bb      	str	r3, [r7, #56]	@ 0x38
 800d8bc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d8be:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d8c2:	d02f      	beq.n	800d924 <HAL_RCCEx_GetPeriphCLKFreq+0x6d4>
 800d8c4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d8c6:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d8ca:	d863      	bhi.n	800d994 <HAL_RCCEx_GetPeriphCLKFreq+0x744>
 800d8cc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d8ce:	2b00      	cmp	r3, #0
 800d8d0:	d004      	beq.n	800d8dc <HAL_RCCEx_GetPeriphCLKFreq+0x68c>
 800d8d2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d8d4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800d8d8:	d012      	beq.n	800d900 <HAL_RCCEx_GetPeriphCLKFreq+0x6b0>
 800d8da:	e05b      	b.n	800d994 <HAL_RCCEx_GetPeriphCLKFreq+0x744>
 800d8dc:	4b4c      	ldr	r3, [pc, #304]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d8de:	681b      	ldr	r3, [r3, #0]
 800d8e0:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800d8e4:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800d8e8:	d107      	bne.n	800d8fa <HAL_RCCEx_GetPeriphCLKFreq+0x6aa>
 800d8ea:	f107 0318 	add.w	r3, r7, #24
 800d8ee:	4618      	mov	r0, r3
 800d8f0:	f000 f996 	bl	800dc20 <HAL_RCCEx_GetPLL2ClockFreq>
 800d8f4:	69bb      	ldr	r3, [r7, #24]
 800d8f6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d8f8:	e16f      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d8fa:	2300      	movs	r3, #0
 800d8fc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d8fe:	e16c      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d900:	4b43      	ldr	r3, [pc, #268]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d902:	681b      	ldr	r3, [r3, #0]
 800d904:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800d908:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d90c:	d107      	bne.n	800d91e <HAL_RCCEx_GetPeriphCLKFreq+0x6ce>
 800d90e:	f107 030c 	add.w	r3, r7, #12
 800d912:	4618      	mov	r0, r3
 800d914:	f000 fad8 	bl	800dec8 <HAL_RCCEx_GetPLL3ClockFreq>
 800d918:	697b      	ldr	r3, [r7, #20]
 800d91a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d91c:	e15d      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d91e:	2300      	movs	r3, #0
 800d920:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d922:	e15a      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d924:	4b3a      	ldr	r3, [pc, #232]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d926:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d928:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800d92c:	637b      	str	r3, [r7, #52]	@ 0x34
 800d92e:	4b38      	ldr	r3, [pc, #224]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d930:	681b      	ldr	r3, [r3, #0]
 800d932:	f003 0304 	and.w	r3, r3, #4
 800d936:	2b04      	cmp	r3, #4
 800d938:	d10c      	bne.n	800d954 <HAL_RCCEx_GetPeriphCLKFreq+0x704>
 800d93a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d93c:	2b00      	cmp	r3, #0
 800d93e:	d109      	bne.n	800d954 <HAL_RCCEx_GetPeriphCLKFreq+0x704>
 800d940:	4b33      	ldr	r3, [pc, #204]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d942:	681b      	ldr	r3, [r3, #0]
 800d944:	08db      	lsrs	r3, r3, #3
 800d946:	f003 0303 	and.w	r3, r3, #3
 800d94a:	4a32      	ldr	r2, [pc, #200]	@ (800da14 <HAL_RCCEx_GetPeriphCLKFreq+0x7c4>)
 800d94c:	fa22 f303 	lsr.w	r3, r2, r3
 800d950:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d952:	e01e      	b.n	800d992 <HAL_RCCEx_GetPeriphCLKFreq+0x742>
 800d954:	4b2e      	ldr	r3, [pc, #184]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d956:	681b      	ldr	r3, [r3, #0]
 800d958:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d95c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800d960:	d106      	bne.n	800d970 <HAL_RCCEx_GetPeriphCLKFreq+0x720>
 800d962:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d964:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800d968:	d102      	bne.n	800d970 <HAL_RCCEx_GetPeriphCLKFreq+0x720>
 800d96a:	4b2b      	ldr	r3, [pc, #172]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c8>)
 800d96c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d96e:	e010      	b.n	800d992 <HAL_RCCEx_GetPeriphCLKFreq+0x742>
 800d970:	4b27      	ldr	r3, [pc, #156]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d972:	681b      	ldr	r3, [r3, #0]
 800d974:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800d978:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d97c:	d106      	bne.n	800d98c <HAL_RCCEx_GetPeriphCLKFreq+0x73c>
 800d97e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d980:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d984:	d102      	bne.n	800d98c <HAL_RCCEx_GetPeriphCLKFreq+0x73c>
 800d986:	4b25      	ldr	r3, [pc, #148]	@ (800da1c <HAL_RCCEx_GetPeriphCLKFreq+0x7cc>)
 800d988:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d98a:	e002      	b.n	800d992 <HAL_RCCEx_GetPeriphCLKFreq+0x742>
 800d98c:	2300      	movs	r3, #0
 800d98e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d990:	e123      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d992:	e122      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d994:	2300      	movs	r3, #0
 800d996:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d998:	e11f      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d99a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d99e:	f5a2 3180 	sub.w	r1, r2, #65536	@ 0x10000
 800d9a2:	430b      	orrs	r3, r1
 800d9a4:	d13c      	bne.n	800da20 <HAL_RCCEx_GetPeriphCLKFreq+0x7d0>
 800d9a6:	4b1a      	ldr	r3, [pc, #104]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d9a8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d9aa:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800d9ae:	63bb      	str	r3, [r7, #56]	@ 0x38
 800d9b0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d9b2:	2b00      	cmp	r3, #0
 800d9b4:	d004      	beq.n	800d9c0 <HAL_RCCEx_GetPeriphCLKFreq+0x770>
 800d9b6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d9b8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800d9bc:	d012      	beq.n	800d9e4 <HAL_RCCEx_GetPeriphCLKFreq+0x794>
 800d9be:	e023      	b.n	800da08 <HAL_RCCEx_GetPeriphCLKFreq+0x7b8>
 800d9c0:	4b13      	ldr	r3, [pc, #76]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d9c2:	681b      	ldr	r3, [r3, #0]
 800d9c4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800d9c8:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800d9cc:	d107      	bne.n	800d9de <HAL_RCCEx_GetPeriphCLKFreq+0x78e>
 800d9ce:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800d9d2:	4618      	mov	r0, r3
 800d9d4:	f000 fbcc 	bl	800e170 <HAL_RCCEx_GetPLL1ClockFreq>
 800d9d8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d9da:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d9dc:	e0fd      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d9de:	2300      	movs	r3, #0
 800d9e0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d9e2:	e0fa      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d9e4:	4b0a      	ldr	r3, [pc, #40]	@ (800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d9e6:	681b      	ldr	r3, [r3, #0]
 800d9e8:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800d9ec:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800d9f0:	d107      	bne.n	800da02 <HAL_RCCEx_GetPeriphCLKFreq+0x7b2>
 800d9f2:	f107 0318 	add.w	r3, r7, #24
 800d9f6:	4618      	mov	r0, r3
 800d9f8:	f000 f912 	bl	800dc20 <HAL_RCCEx_GetPLL2ClockFreq>
 800d9fc:	6a3b      	ldr	r3, [r7, #32]
 800d9fe:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800da00:	e0eb      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800da02:	2300      	movs	r3, #0
 800da04:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800da06:	e0e8      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800da08:	2300      	movs	r3, #0
 800da0a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800da0c:	e0e5      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800da0e:	bf00      	nop
 800da10:	58024400 	.word	0x58024400
 800da14:	03d09000 	.word	0x03d09000
 800da18:	003d0900 	.word	0x003d0900
 800da1c:	016e3600 	.word	0x016e3600
 800da20:	e9d7 2300 	ldrd	r2, r3, [r7]
 800da24:	f5a2 4180 	sub.w	r1, r2, #16384	@ 0x4000
 800da28:	430b      	orrs	r3, r1
 800da2a:	f040 8085 	bne.w	800db38 <HAL_RCCEx_GetPeriphCLKFreq+0x8e8>
 800da2e:	4b6d      	ldr	r3, [pc, #436]	@ (800dbe4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800da30:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800da32:	f003 43e0 	and.w	r3, r3, #1879048192	@ 0x70000000
 800da36:	63bb      	str	r3, [r7, #56]	@ 0x38
 800da38:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da3a:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800da3e:	d06b      	beq.n	800db18 <HAL_RCCEx_GetPeriphCLKFreq+0x8c8>
 800da40:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da42:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800da46:	d874      	bhi.n	800db32 <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 800da48:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da4a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800da4e:	d056      	beq.n	800dafe <HAL_RCCEx_GetPeriphCLKFreq+0x8ae>
 800da50:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da52:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800da56:	d86c      	bhi.n	800db32 <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 800da58:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da5a:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 800da5e:	d03b      	beq.n	800dad8 <HAL_RCCEx_GetPeriphCLKFreq+0x888>
 800da60:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da62:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 800da66:	d864      	bhi.n	800db32 <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 800da68:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da6a:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800da6e:	d021      	beq.n	800dab4 <HAL_RCCEx_GetPeriphCLKFreq+0x864>
 800da70:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da72:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800da76:	d85c      	bhi.n	800db32 <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 800da78:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da7a:	2b00      	cmp	r3, #0
 800da7c:	d004      	beq.n	800da88 <HAL_RCCEx_GetPeriphCLKFreq+0x838>
 800da7e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da80:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800da84:	d004      	beq.n	800da90 <HAL_RCCEx_GetPeriphCLKFreq+0x840>
 800da86:	e054      	b.n	800db32 <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 800da88:	f000 f8b4 	bl	800dbf4 <HAL_RCCEx_GetD3PCLK1Freq>
 800da8c:	63f8      	str	r0, [r7, #60]	@ 0x3c
 800da8e:	e0a4      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800da90:	4b54      	ldr	r3, [pc, #336]	@ (800dbe4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800da92:	681b      	ldr	r3, [r3, #0]
 800da94:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800da98:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800da9c:	d107      	bne.n	800daae <HAL_RCCEx_GetPeriphCLKFreq+0x85e>
 800da9e:	f107 0318 	add.w	r3, r7, #24
 800daa2:	4618      	mov	r0, r3
 800daa4:	f000 f8bc 	bl	800dc20 <HAL_RCCEx_GetPLL2ClockFreq>
 800daa8:	69fb      	ldr	r3, [r7, #28]
 800daaa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800daac:	e095      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800daae:	2300      	movs	r3, #0
 800dab0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dab2:	e092      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dab4:	4b4b      	ldr	r3, [pc, #300]	@ (800dbe4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800dab6:	681b      	ldr	r3, [r3, #0]
 800dab8:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800dabc:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800dac0:	d107      	bne.n	800dad2 <HAL_RCCEx_GetPeriphCLKFreq+0x882>
 800dac2:	f107 030c 	add.w	r3, r7, #12
 800dac6:	4618      	mov	r0, r3
 800dac8:	f000 f9fe 	bl	800dec8 <HAL_RCCEx_GetPLL3ClockFreq>
 800dacc:	693b      	ldr	r3, [r7, #16]
 800dace:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dad0:	e083      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dad2:	2300      	movs	r3, #0
 800dad4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dad6:	e080      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dad8:	4b42      	ldr	r3, [pc, #264]	@ (800dbe4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800dada:	681b      	ldr	r3, [r3, #0]
 800dadc:	f003 0304 	and.w	r3, r3, #4
 800dae0:	2b04      	cmp	r3, #4
 800dae2:	d109      	bne.n	800daf8 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
 800dae4:	4b3f      	ldr	r3, [pc, #252]	@ (800dbe4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800dae6:	681b      	ldr	r3, [r3, #0]
 800dae8:	08db      	lsrs	r3, r3, #3
 800daea:	f003 0303 	and.w	r3, r3, #3
 800daee:	4a3e      	ldr	r2, [pc, #248]	@ (800dbe8 <HAL_RCCEx_GetPeriphCLKFreq+0x998>)
 800daf0:	fa22 f303 	lsr.w	r3, r2, r3
 800daf4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800daf6:	e070      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800daf8:	2300      	movs	r3, #0
 800dafa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dafc:	e06d      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dafe:	4b39      	ldr	r3, [pc, #228]	@ (800dbe4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800db00:	681b      	ldr	r3, [r3, #0]
 800db02:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800db06:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800db0a:	d102      	bne.n	800db12 <HAL_RCCEx_GetPeriphCLKFreq+0x8c2>
 800db0c:	4b37      	ldr	r3, [pc, #220]	@ (800dbec <HAL_RCCEx_GetPeriphCLKFreq+0x99c>)
 800db0e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800db10:	e063      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800db12:	2300      	movs	r3, #0
 800db14:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800db16:	e060      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800db18:	4b32      	ldr	r3, [pc, #200]	@ (800dbe4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800db1a:	681b      	ldr	r3, [r3, #0]
 800db1c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800db20:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800db24:	d102      	bne.n	800db2c <HAL_RCCEx_GetPeriphCLKFreq+0x8dc>
 800db26:	4b32      	ldr	r3, [pc, #200]	@ (800dbf0 <HAL_RCCEx_GetPeriphCLKFreq+0x9a0>)
 800db28:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800db2a:	e056      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800db2c:	2300      	movs	r3, #0
 800db2e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800db30:	e053      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800db32:	2300      	movs	r3, #0
 800db34:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800db36:	e050      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800db38:	e9d7 2300 	ldrd	r2, r3, [r7]
 800db3c:	f5a2 4100 	sub.w	r1, r2, #32768	@ 0x8000
 800db40:	430b      	orrs	r3, r1
 800db42:	d148      	bne.n	800dbd6 <HAL_RCCEx_GetPeriphCLKFreq+0x986>
 800db44:	4b27      	ldr	r3, [pc, #156]	@ (800dbe4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800db46:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800db48:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800db4c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800db4e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800db50:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800db54:	d02a      	beq.n	800dbac <HAL_RCCEx_GetPeriphCLKFreq+0x95c>
 800db56:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800db58:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800db5c:	d838      	bhi.n	800dbd0 <HAL_RCCEx_GetPeriphCLKFreq+0x980>
 800db5e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800db60:	2b00      	cmp	r3, #0
 800db62:	d004      	beq.n	800db6e <HAL_RCCEx_GetPeriphCLKFreq+0x91e>
 800db64:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800db66:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800db6a:	d00d      	beq.n	800db88 <HAL_RCCEx_GetPeriphCLKFreq+0x938>
 800db6c:	e030      	b.n	800dbd0 <HAL_RCCEx_GetPeriphCLKFreq+0x980>
 800db6e:	4b1d      	ldr	r3, [pc, #116]	@ (800dbe4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800db70:	681b      	ldr	r3, [r3, #0]
 800db72:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800db76:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800db7a:	d102      	bne.n	800db82 <HAL_RCCEx_GetPeriphCLKFreq+0x932>
 800db7c:	4b1c      	ldr	r3, [pc, #112]	@ (800dbf0 <HAL_RCCEx_GetPeriphCLKFreq+0x9a0>)
 800db7e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800db80:	e02b      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800db82:	2300      	movs	r3, #0
 800db84:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800db86:	e028      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800db88:	4b16      	ldr	r3, [pc, #88]	@ (800dbe4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800db8a:	681b      	ldr	r3, [r3, #0]
 800db8c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800db90:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800db94:	d107      	bne.n	800dba6 <HAL_RCCEx_GetPeriphCLKFreq+0x956>
 800db96:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800db9a:	4618      	mov	r0, r3
 800db9c:	f000 fae8 	bl	800e170 <HAL_RCCEx_GetPLL1ClockFreq>
 800dba0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800dba2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dba4:	e019      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dba6:	2300      	movs	r3, #0
 800dba8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dbaa:	e016      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dbac:	4b0d      	ldr	r3, [pc, #52]	@ (800dbe4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800dbae:	681b      	ldr	r3, [r3, #0]
 800dbb0:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800dbb4:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800dbb8:	d107      	bne.n	800dbca <HAL_RCCEx_GetPeriphCLKFreq+0x97a>
 800dbba:	f107 0318 	add.w	r3, r7, #24
 800dbbe:	4618      	mov	r0, r3
 800dbc0:	f000 f82e 	bl	800dc20 <HAL_RCCEx_GetPLL2ClockFreq>
 800dbc4:	69fb      	ldr	r3, [r7, #28]
 800dbc6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dbc8:	e007      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dbca:	2300      	movs	r3, #0
 800dbcc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dbce:	e004      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dbd0:	2300      	movs	r3, #0
 800dbd2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dbd4:	e001      	b.n	800dbda <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dbd6:	2300      	movs	r3, #0
 800dbd8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dbda:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800dbdc:	4618      	mov	r0, r3
 800dbde:	3740      	adds	r7, #64	@ 0x40
 800dbe0:	46bd      	mov	sp, r7
 800dbe2:	bd80      	pop	{r7, pc}
 800dbe4:	58024400 	.word	0x58024400
 800dbe8:	03d09000 	.word	0x03d09000
 800dbec:	003d0900 	.word	0x003d0900
 800dbf0:	016e3600 	.word	0x016e3600

0800dbf4 <HAL_RCCEx_GetD3PCLK1Freq>:
 800dbf4:	b580      	push	{r7, lr}
 800dbf6:	af00      	add	r7, sp, #0
 800dbf8:	f7fe f92e 	bl	800be58 <HAL_RCC_GetHCLKFreq>
 800dbfc:	4602      	mov	r2, r0
 800dbfe:	4b06      	ldr	r3, [pc, #24]	@ (800dc18 <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 800dc00:	6a1b      	ldr	r3, [r3, #32]
 800dc02:	091b      	lsrs	r3, r3, #4
 800dc04:	f003 0307 	and.w	r3, r3, #7
 800dc08:	4904      	ldr	r1, [pc, #16]	@ (800dc1c <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 800dc0a:	5ccb      	ldrb	r3, [r1, r3]
 800dc0c:	f003 031f 	and.w	r3, r3, #31
 800dc10:	fa22 f303 	lsr.w	r3, r2, r3
 800dc14:	4618      	mov	r0, r3
 800dc16:	bd80      	pop	{r7, pc}
 800dc18:	58024400 	.word	0x58024400
 800dc1c:	0801aba0 	.word	0x0801aba0

0800dc20 <HAL_RCCEx_GetPLL2ClockFreq>:
 800dc20:	b480      	push	{r7}
 800dc22:	b089      	sub	sp, #36	@ 0x24
 800dc24:	af00      	add	r7, sp, #0
 800dc26:	6078      	str	r0, [r7, #4]
 800dc28:	4ba1      	ldr	r3, [pc, #644]	@ (800deb0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dc2a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800dc2c:	f003 0303 	and.w	r3, r3, #3
 800dc30:	61bb      	str	r3, [r7, #24]
 800dc32:	4b9f      	ldr	r3, [pc, #636]	@ (800deb0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dc34:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800dc36:	0b1b      	lsrs	r3, r3, #12
 800dc38:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800dc3c:	617b      	str	r3, [r7, #20]
 800dc3e:	4b9c      	ldr	r3, [pc, #624]	@ (800deb0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dc40:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dc42:	091b      	lsrs	r3, r3, #4
 800dc44:	f003 0301 	and.w	r3, r3, #1
 800dc48:	613b      	str	r3, [r7, #16]
 800dc4a:	4b99      	ldr	r3, [pc, #612]	@ (800deb0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dc4c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800dc4e:	08db      	lsrs	r3, r3, #3
 800dc50:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800dc54:	693a      	ldr	r2, [r7, #16]
 800dc56:	fb02 f303 	mul.w	r3, r2, r3
 800dc5a:	ee07 3a90 	vmov	s15, r3
 800dc5e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800dc62:	edc7 7a03 	vstr	s15, [r7, #12]
 800dc66:	697b      	ldr	r3, [r7, #20]
 800dc68:	2b00      	cmp	r3, #0
 800dc6a:	f000 8111 	beq.w	800de90 <HAL_RCCEx_GetPLL2ClockFreq+0x270>
 800dc6e:	69bb      	ldr	r3, [r7, #24]
 800dc70:	2b02      	cmp	r3, #2
 800dc72:	f000 8083 	beq.w	800dd7c <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 800dc76:	69bb      	ldr	r3, [r7, #24]
 800dc78:	2b02      	cmp	r3, #2
 800dc7a:	f200 80a1 	bhi.w	800ddc0 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 800dc7e:	69bb      	ldr	r3, [r7, #24]
 800dc80:	2b00      	cmp	r3, #0
 800dc82:	d003      	beq.n	800dc8c <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 800dc84:	69bb      	ldr	r3, [r7, #24]
 800dc86:	2b01      	cmp	r3, #1
 800dc88:	d056      	beq.n	800dd38 <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 800dc8a:	e099      	b.n	800ddc0 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 800dc8c:	4b88      	ldr	r3, [pc, #544]	@ (800deb0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dc8e:	681b      	ldr	r3, [r3, #0]
 800dc90:	f003 0320 	and.w	r3, r3, #32
 800dc94:	2b00      	cmp	r3, #0
 800dc96:	d02d      	beq.n	800dcf4 <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
 800dc98:	4b85      	ldr	r3, [pc, #532]	@ (800deb0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dc9a:	681b      	ldr	r3, [r3, #0]
 800dc9c:	08db      	lsrs	r3, r3, #3
 800dc9e:	f003 0303 	and.w	r3, r3, #3
 800dca2:	4a84      	ldr	r2, [pc, #528]	@ (800deb4 <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 800dca4:	fa22 f303 	lsr.w	r3, r2, r3
 800dca8:	60bb      	str	r3, [r7, #8]
 800dcaa:	68bb      	ldr	r3, [r7, #8]
 800dcac:	ee07 3a90 	vmov	s15, r3
 800dcb0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800dcb4:	697b      	ldr	r3, [r7, #20]
 800dcb6:	ee07 3a90 	vmov	s15, r3
 800dcba:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800dcbe:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800dcc2:	4b7b      	ldr	r3, [pc, #492]	@ (800deb0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dcc4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dcc6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800dcca:	ee07 3a90 	vmov	s15, r3
 800dcce:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800dcd2:	ed97 6a03 	vldr	s12, [r7, #12]
 800dcd6:	eddf 5a78 	vldr	s11, [pc, #480]	@ 800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800dcda:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800dcde:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800dce2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800dce6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dcea:	ee67 7a27 	vmul.f32	s15, s14, s15
 800dcee:	edc7 7a07 	vstr	s15, [r7, #28]
 800dcf2:	e087      	b.n	800de04 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 800dcf4:	697b      	ldr	r3, [r7, #20]
 800dcf6:	ee07 3a90 	vmov	s15, r3
 800dcfa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800dcfe:	eddf 6a6f 	vldr	s13, [pc, #444]	@ 800debc <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 800dd02:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800dd06:	4b6a      	ldr	r3, [pc, #424]	@ (800deb0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dd08:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dd0a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800dd0e:	ee07 3a90 	vmov	s15, r3
 800dd12:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800dd16:	ed97 6a03 	vldr	s12, [r7, #12]
 800dd1a:	eddf 5a67 	vldr	s11, [pc, #412]	@ 800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800dd1e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800dd22:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800dd26:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800dd2a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dd2e:	ee67 7a27 	vmul.f32	s15, s14, s15
 800dd32:	edc7 7a07 	vstr	s15, [r7, #28]
 800dd36:	e065      	b.n	800de04 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 800dd38:	697b      	ldr	r3, [r7, #20]
 800dd3a:	ee07 3a90 	vmov	s15, r3
 800dd3e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800dd42:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 800dec0 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 800dd46:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800dd4a:	4b59      	ldr	r3, [pc, #356]	@ (800deb0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dd4c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dd4e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800dd52:	ee07 3a90 	vmov	s15, r3
 800dd56:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800dd5a:	ed97 6a03 	vldr	s12, [r7, #12]
 800dd5e:	eddf 5a56 	vldr	s11, [pc, #344]	@ 800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800dd62:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800dd66:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800dd6a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800dd6e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dd72:	ee67 7a27 	vmul.f32	s15, s14, s15
 800dd76:	edc7 7a07 	vstr	s15, [r7, #28]
 800dd7a:	e043      	b.n	800de04 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 800dd7c:	697b      	ldr	r3, [r7, #20]
 800dd7e:	ee07 3a90 	vmov	s15, r3
 800dd82:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800dd86:	eddf 6a4f 	vldr	s13, [pc, #316]	@ 800dec4 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 800dd8a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800dd8e:	4b48      	ldr	r3, [pc, #288]	@ (800deb0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dd90:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dd92:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800dd96:	ee07 3a90 	vmov	s15, r3
 800dd9a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800dd9e:	ed97 6a03 	vldr	s12, [r7, #12]
 800dda2:	eddf 5a45 	vldr	s11, [pc, #276]	@ 800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800dda6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800ddaa:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800ddae:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800ddb2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ddb6:	ee67 7a27 	vmul.f32	s15, s14, s15
 800ddba:	edc7 7a07 	vstr	s15, [r7, #28]
 800ddbe:	e021      	b.n	800de04 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 800ddc0:	697b      	ldr	r3, [r7, #20]
 800ddc2:	ee07 3a90 	vmov	s15, r3
 800ddc6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800ddca:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 800dec0 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 800ddce:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800ddd2:	4b37      	ldr	r3, [pc, #220]	@ (800deb0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800ddd4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ddd6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800ddda:	ee07 3a90 	vmov	s15, r3
 800ddde:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800dde2:	ed97 6a03 	vldr	s12, [r7, #12]
 800dde6:	eddf 5a34 	vldr	s11, [pc, #208]	@ 800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800ddea:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800ddee:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800ddf2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800ddf6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ddfa:	ee67 7a27 	vmul.f32	s15, s14, s15
 800ddfe:	edc7 7a07 	vstr	s15, [r7, #28]
 800de02:	bf00      	nop
 800de04:	4b2a      	ldr	r3, [pc, #168]	@ (800deb0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800de06:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800de08:	0a5b      	lsrs	r3, r3, #9
 800de0a:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800de0e:	ee07 3a90 	vmov	s15, r3
 800de12:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800de16:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800de1a:	ee37 7a87 	vadd.f32	s14, s15, s14
 800de1e:	edd7 6a07 	vldr	s13, [r7, #28]
 800de22:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800de26:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800de2a:	ee17 2a90 	vmov	r2, s15
 800de2e:	687b      	ldr	r3, [r7, #4]
 800de30:	601a      	str	r2, [r3, #0]
 800de32:	4b1f      	ldr	r3, [pc, #124]	@ (800deb0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800de34:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800de36:	0c1b      	lsrs	r3, r3, #16
 800de38:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800de3c:	ee07 3a90 	vmov	s15, r3
 800de40:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800de44:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800de48:	ee37 7a87 	vadd.f32	s14, s15, s14
 800de4c:	edd7 6a07 	vldr	s13, [r7, #28]
 800de50:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800de54:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800de58:	ee17 2a90 	vmov	r2, s15
 800de5c:	687b      	ldr	r3, [r7, #4]
 800de5e:	605a      	str	r2, [r3, #4]
 800de60:	4b13      	ldr	r3, [pc, #76]	@ (800deb0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800de62:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800de64:	0e1b      	lsrs	r3, r3, #24
 800de66:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800de6a:	ee07 3a90 	vmov	s15, r3
 800de6e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800de72:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800de76:	ee37 7a87 	vadd.f32	s14, s15, s14
 800de7a:	edd7 6a07 	vldr	s13, [r7, #28]
 800de7e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800de82:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800de86:	ee17 2a90 	vmov	r2, s15
 800de8a:	687b      	ldr	r3, [r7, #4]
 800de8c:	609a      	str	r2, [r3, #8]
 800de8e:	e008      	b.n	800dea2 <HAL_RCCEx_GetPLL2ClockFreq+0x282>
 800de90:	687b      	ldr	r3, [r7, #4]
 800de92:	2200      	movs	r2, #0
 800de94:	601a      	str	r2, [r3, #0]
 800de96:	687b      	ldr	r3, [r7, #4]
 800de98:	2200      	movs	r2, #0
 800de9a:	605a      	str	r2, [r3, #4]
 800de9c:	687b      	ldr	r3, [r7, #4]
 800de9e:	2200      	movs	r2, #0
 800dea0:	609a      	str	r2, [r3, #8]
 800dea2:	bf00      	nop
 800dea4:	3724      	adds	r7, #36	@ 0x24
 800dea6:	46bd      	mov	sp, r7
 800dea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800deac:	4770      	bx	lr
 800deae:	bf00      	nop
 800deb0:	58024400 	.word	0x58024400
 800deb4:	03d09000 	.word	0x03d09000
 800deb8:	46000000 	.word	0x46000000
 800debc:	4c742400 	.word	0x4c742400
 800dec0:	4a742400 	.word	0x4a742400
 800dec4:	4bb71b00 	.word	0x4bb71b00

0800dec8 <HAL_RCCEx_GetPLL3ClockFreq>:
 800dec8:	b480      	push	{r7}
 800deca:	b089      	sub	sp, #36	@ 0x24
 800decc:	af00      	add	r7, sp, #0
 800dece:	6078      	str	r0, [r7, #4]
 800ded0:	4ba1      	ldr	r3, [pc, #644]	@ (800e158 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800ded2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ded4:	f003 0303 	and.w	r3, r3, #3
 800ded8:	61bb      	str	r3, [r7, #24]
 800deda:	4b9f      	ldr	r3, [pc, #636]	@ (800e158 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800dedc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800dede:	0d1b      	lsrs	r3, r3, #20
 800dee0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800dee4:	617b      	str	r3, [r7, #20]
 800dee6:	4b9c      	ldr	r3, [pc, #624]	@ (800e158 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800dee8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800deea:	0a1b      	lsrs	r3, r3, #8
 800deec:	f003 0301 	and.w	r3, r3, #1
 800def0:	613b      	str	r3, [r7, #16]
 800def2:	4b99      	ldr	r3, [pc, #612]	@ (800e158 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800def4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800def6:	08db      	lsrs	r3, r3, #3
 800def8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800defc:	693a      	ldr	r2, [r7, #16]
 800defe:	fb02 f303 	mul.w	r3, r2, r3
 800df02:	ee07 3a90 	vmov	s15, r3
 800df06:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800df0a:	edc7 7a03 	vstr	s15, [r7, #12]
 800df0e:	697b      	ldr	r3, [r7, #20]
 800df10:	2b00      	cmp	r3, #0
 800df12:	f000 8111 	beq.w	800e138 <HAL_RCCEx_GetPLL3ClockFreq+0x270>
 800df16:	69bb      	ldr	r3, [r7, #24]
 800df18:	2b02      	cmp	r3, #2
 800df1a:	f000 8083 	beq.w	800e024 <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 800df1e:	69bb      	ldr	r3, [r7, #24]
 800df20:	2b02      	cmp	r3, #2
 800df22:	f200 80a1 	bhi.w	800e068 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 800df26:	69bb      	ldr	r3, [r7, #24]
 800df28:	2b00      	cmp	r3, #0
 800df2a:	d003      	beq.n	800df34 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 800df2c:	69bb      	ldr	r3, [r7, #24]
 800df2e:	2b01      	cmp	r3, #1
 800df30:	d056      	beq.n	800dfe0 <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 800df32:	e099      	b.n	800e068 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 800df34:	4b88      	ldr	r3, [pc, #544]	@ (800e158 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800df36:	681b      	ldr	r3, [r3, #0]
 800df38:	f003 0320 	and.w	r3, r3, #32
 800df3c:	2b00      	cmp	r3, #0
 800df3e:	d02d      	beq.n	800df9c <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
 800df40:	4b85      	ldr	r3, [pc, #532]	@ (800e158 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800df42:	681b      	ldr	r3, [r3, #0]
 800df44:	08db      	lsrs	r3, r3, #3
 800df46:	f003 0303 	and.w	r3, r3, #3
 800df4a:	4a84      	ldr	r2, [pc, #528]	@ (800e15c <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 800df4c:	fa22 f303 	lsr.w	r3, r2, r3
 800df50:	60bb      	str	r3, [r7, #8]
 800df52:	68bb      	ldr	r3, [r7, #8]
 800df54:	ee07 3a90 	vmov	s15, r3
 800df58:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800df5c:	697b      	ldr	r3, [r7, #20]
 800df5e:	ee07 3a90 	vmov	s15, r3
 800df62:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800df66:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800df6a:	4b7b      	ldr	r3, [pc, #492]	@ (800e158 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800df6c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800df6e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800df72:	ee07 3a90 	vmov	s15, r3
 800df76:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800df7a:	ed97 6a03 	vldr	s12, [r7, #12]
 800df7e:	eddf 5a78 	vldr	s11, [pc, #480]	@ 800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800df82:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800df86:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800df8a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800df8e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800df92:	ee67 7a27 	vmul.f32	s15, s14, s15
 800df96:	edc7 7a07 	vstr	s15, [r7, #28]
 800df9a:	e087      	b.n	800e0ac <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800df9c:	697b      	ldr	r3, [r7, #20]
 800df9e:	ee07 3a90 	vmov	s15, r3
 800dfa2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800dfa6:	eddf 6a6f 	vldr	s13, [pc, #444]	@ 800e164 <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 800dfaa:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800dfae:	4b6a      	ldr	r3, [pc, #424]	@ (800e158 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800dfb0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dfb2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800dfb6:	ee07 3a90 	vmov	s15, r3
 800dfba:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800dfbe:	ed97 6a03 	vldr	s12, [r7, #12]
 800dfc2:	eddf 5a67 	vldr	s11, [pc, #412]	@ 800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800dfc6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800dfca:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800dfce:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800dfd2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dfd6:	ee67 7a27 	vmul.f32	s15, s14, s15
 800dfda:	edc7 7a07 	vstr	s15, [r7, #28]
 800dfde:	e065      	b.n	800e0ac <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800dfe0:	697b      	ldr	r3, [r7, #20]
 800dfe2:	ee07 3a90 	vmov	s15, r3
 800dfe6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800dfea:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 800e168 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 800dfee:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800dff2:	4b59      	ldr	r3, [pc, #356]	@ (800e158 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800dff4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dff6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800dffa:	ee07 3a90 	vmov	s15, r3
 800dffe:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e002:	ed97 6a03 	vldr	s12, [r7, #12]
 800e006:	eddf 5a56 	vldr	s11, [pc, #344]	@ 800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800e00a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800e00e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800e012:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e016:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e01a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e01e:	edc7 7a07 	vstr	s15, [r7, #28]
 800e022:	e043      	b.n	800e0ac <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800e024:	697b      	ldr	r3, [r7, #20]
 800e026:	ee07 3a90 	vmov	s15, r3
 800e02a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e02e:	eddf 6a4f 	vldr	s13, [pc, #316]	@ 800e16c <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 800e032:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e036:	4b48      	ldr	r3, [pc, #288]	@ (800e158 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800e038:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e03a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800e03e:	ee07 3a90 	vmov	s15, r3
 800e042:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e046:	ed97 6a03 	vldr	s12, [r7, #12]
 800e04a:	eddf 5a45 	vldr	s11, [pc, #276]	@ 800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800e04e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800e052:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800e056:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e05a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e05e:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e062:	edc7 7a07 	vstr	s15, [r7, #28]
 800e066:	e021      	b.n	800e0ac <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800e068:	697b      	ldr	r3, [r7, #20]
 800e06a:	ee07 3a90 	vmov	s15, r3
 800e06e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e072:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 800e168 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 800e076:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e07a:	4b37      	ldr	r3, [pc, #220]	@ (800e158 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800e07c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e07e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800e082:	ee07 3a90 	vmov	s15, r3
 800e086:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e08a:	ed97 6a03 	vldr	s12, [r7, #12]
 800e08e:	eddf 5a34 	vldr	s11, [pc, #208]	@ 800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800e092:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800e096:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800e09a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e09e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e0a2:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e0a6:	edc7 7a07 	vstr	s15, [r7, #28]
 800e0aa:	bf00      	nop
 800e0ac:	4b2a      	ldr	r3, [pc, #168]	@ (800e158 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800e0ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e0b0:	0a5b      	lsrs	r3, r3, #9
 800e0b2:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800e0b6:	ee07 3a90 	vmov	s15, r3
 800e0ba:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e0be:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800e0c2:	ee37 7a87 	vadd.f32	s14, s15, s14
 800e0c6:	edd7 6a07 	vldr	s13, [r7, #28]
 800e0ca:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e0ce:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800e0d2:	ee17 2a90 	vmov	r2, s15
 800e0d6:	687b      	ldr	r3, [r7, #4]
 800e0d8:	601a      	str	r2, [r3, #0]
 800e0da:	4b1f      	ldr	r3, [pc, #124]	@ (800e158 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800e0dc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e0de:	0c1b      	lsrs	r3, r3, #16
 800e0e0:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800e0e4:	ee07 3a90 	vmov	s15, r3
 800e0e8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e0ec:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800e0f0:	ee37 7a87 	vadd.f32	s14, s15, s14
 800e0f4:	edd7 6a07 	vldr	s13, [r7, #28]
 800e0f8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e0fc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800e100:	ee17 2a90 	vmov	r2, s15
 800e104:	687b      	ldr	r3, [r7, #4]
 800e106:	605a      	str	r2, [r3, #4]
 800e108:	4b13      	ldr	r3, [pc, #76]	@ (800e158 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800e10a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e10c:	0e1b      	lsrs	r3, r3, #24
 800e10e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800e112:	ee07 3a90 	vmov	s15, r3
 800e116:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e11a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800e11e:	ee37 7a87 	vadd.f32	s14, s15, s14
 800e122:	edd7 6a07 	vldr	s13, [r7, #28]
 800e126:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e12a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800e12e:	ee17 2a90 	vmov	r2, s15
 800e132:	687b      	ldr	r3, [r7, #4]
 800e134:	609a      	str	r2, [r3, #8]
 800e136:	e008      	b.n	800e14a <HAL_RCCEx_GetPLL3ClockFreq+0x282>
 800e138:	687b      	ldr	r3, [r7, #4]
 800e13a:	2200      	movs	r2, #0
 800e13c:	601a      	str	r2, [r3, #0]
 800e13e:	687b      	ldr	r3, [r7, #4]
 800e140:	2200      	movs	r2, #0
 800e142:	605a      	str	r2, [r3, #4]
 800e144:	687b      	ldr	r3, [r7, #4]
 800e146:	2200      	movs	r2, #0
 800e148:	609a      	str	r2, [r3, #8]
 800e14a:	bf00      	nop
 800e14c:	3724      	adds	r7, #36	@ 0x24
 800e14e:	46bd      	mov	sp, r7
 800e150:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e154:	4770      	bx	lr
 800e156:	bf00      	nop
 800e158:	58024400 	.word	0x58024400
 800e15c:	03d09000 	.word	0x03d09000
 800e160:	46000000 	.word	0x46000000
 800e164:	4c742400 	.word	0x4c742400
 800e168:	4a742400 	.word	0x4a742400
 800e16c:	4bb71b00 	.word	0x4bb71b00

0800e170 <HAL_RCCEx_GetPLL1ClockFreq>:
 800e170:	b480      	push	{r7}
 800e172:	b089      	sub	sp, #36	@ 0x24
 800e174:	af00      	add	r7, sp, #0
 800e176:	6078      	str	r0, [r7, #4]
 800e178:	4ba0      	ldr	r3, [pc, #640]	@ (800e3fc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e17a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e17c:	f003 0303 	and.w	r3, r3, #3
 800e180:	61bb      	str	r3, [r7, #24]
 800e182:	4b9e      	ldr	r3, [pc, #632]	@ (800e3fc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e184:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e186:	091b      	lsrs	r3, r3, #4
 800e188:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800e18c:	617b      	str	r3, [r7, #20]
 800e18e:	4b9b      	ldr	r3, [pc, #620]	@ (800e3fc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e190:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e192:	f003 0301 	and.w	r3, r3, #1
 800e196:	613b      	str	r3, [r7, #16]
 800e198:	4b98      	ldr	r3, [pc, #608]	@ (800e3fc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e19a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e19c:	08db      	lsrs	r3, r3, #3
 800e19e:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800e1a2:	693a      	ldr	r2, [r7, #16]
 800e1a4:	fb02 f303 	mul.w	r3, r2, r3
 800e1a8:	ee07 3a90 	vmov	s15, r3
 800e1ac:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e1b0:	edc7 7a03 	vstr	s15, [r7, #12]
 800e1b4:	697b      	ldr	r3, [r7, #20]
 800e1b6:	2b00      	cmp	r3, #0
 800e1b8:	f000 8111 	beq.w	800e3de <HAL_RCCEx_GetPLL1ClockFreq+0x26e>
 800e1bc:	69bb      	ldr	r3, [r7, #24]
 800e1be:	2b02      	cmp	r3, #2
 800e1c0:	f000 8083 	beq.w	800e2ca <HAL_RCCEx_GetPLL1ClockFreq+0x15a>
 800e1c4:	69bb      	ldr	r3, [r7, #24]
 800e1c6:	2b02      	cmp	r3, #2
 800e1c8:	f200 80a1 	bhi.w	800e30e <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
 800e1cc:	69bb      	ldr	r3, [r7, #24]
 800e1ce:	2b00      	cmp	r3, #0
 800e1d0:	d003      	beq.n	800e1da <HAL_RCCEx_GetPLL1ClockFreq+0x6a>
 800e1d2:	69bb      	ldr	r3, [r7, #24]
 800e1d4:	2b01      	cmp	r3, #1
 800e1d6:	d056      	beq.n	800e286 <HAL_RCCEx_GetPLL1ClockFreq+0x116>
 800e1d8:	e099      	b.n	800e30e <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
 800e1da:	4b88      	ldr	r3, [pc, #544]	@ (800e3fc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e1dc:	681b      	ldr	r3, [r3, #0]
 800e1de:	f003 0320 	and.w	r3, r3, #32
 800e1e2:	2b00      	cmp	r3, #0
 800e1e4:	d02d      	beq.n	800e242 <HAL_RCCEx_GetPLL1ClockFreq+0xd2>
 800e1e6:	4b85      	ldr	r3, [pc, #532]	@ (800e3fc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e1e8:	681b      	ldr	r3, [r3, #0]
 800e1ea:	08db      	lsrs	r3, r3, #3
 800e1ec:	f003 0303 	and.w	r3, r3, #3
 800e1f0:	4a83      	ldr	r2, [pc, #524]	@ (800e400 <HAL_RCCEx_GetPLL1ClockFreq+0x290>)
 800e1f2:	fa22 f303 	lsr.w	r3, r2, r3
 800e1f6:	60bb      	str	r3, [r7, #8]
 800e1f8:	68bb      	ldr	r3, [r7, #8]
 800e1fa:	ee07 3a90 	vmov	s15, r3
 800e1fe:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e202:	697b      	ldr	r3, [r7, #20]
 800e204:	ee07 3a90 	vmov	s15, r3
 800e208:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e20c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e210:	4b7a      	ldr	r3, [pc, #488]	@ (800e3fc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e212:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e214:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800e218:	ee07 3a90 	vmov	s15, r3
 800e21c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e220:	ed97 6a03 	vldr	s12, [r7, #12]
 800e224:	eddf 5a77 	vldr	s11, [pc, #476]	@ 800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800e228:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800e22c:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800e230:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e234:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e238:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e23c:	edc7 7a07 	vstr	s15, [r7, #28]
 800e240:	e087      	b.n	800e352 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 800e242:	697b      	ldr	r3, [r7, #20]
 800e244:	ee07 3a90 	vmov	s15, r3
 800e248:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e24c:	eddf 6a6e 	vldr	s13, [pc, #440]	@ 800e408 <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 800e250:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e254:	4b69      	ldr	r3, [pc, #420]	@ (800e3fc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e256:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e258:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800e25c:	ee07 3a90 	vmov	s15, r3
 800e260:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e264:	ed97 6a03 	vldr	s12, [r7, #12]
 800e268:	eddf 5a66 	vldr	s11, [pc, #408]	@ 800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800e26c:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800e270:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800e274:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e278:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e27c:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e280:	edc7 7a07 	vstr	s15, [r7, #28]
 800e284:	e065      	b.n	800e352 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 800e286:	697b      	ldr	r3, [r7, #20]
 800e288:	ee07 3a90 	vmov	s15, r3
 800e28c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e290:	eddf 6a5e 	vldr	s13, [pc, #376]	@ 800e40c <HAL_RCCEx_GetPLL1ClockFreq+0x29c>
 800e294:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e298:	4b58      	ldr	r3, [pc, #352]	@ (800e3fc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e29a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e29c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800e2a0:	ee07 3a90 	vmov	s15, r3
 800e2a4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e2a8:	ed97 6a03 	vldr	s12, [r7, #12]
 800e2ac:	eddf 5a55 	vldr	s11, [pc, #340]	@ 800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800e2b0:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800e2b4:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800e2b8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e2bc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e2c0:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e2c4:	edc7 7a07 	vstr	s15, [r7, #28]
 800e2c8:	e043      	b.n	800e352 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 800e2ca:	697b      	ldr	r3, [r7, #20]
 800e2cc:	ee07 3a90 	vmov	s15, r3
 800e2d0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e2d4:	eddf 6a4e 	vldr	s13, [pc, #312]	@ 800e410 <HAL_RCCEx_GetPLL1ClockFreq+0x2a0>
 800e2d8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e2dc:	4b47      	ldr	r3, [pc, #284]	@ (800e3fc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e2de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e2e0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800e2e4:	ee07 3a90 	vmov	s15, r3
 800e2e8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e2ec:	ed97 6a03 	vldr	s12, [r7, #12]
 800e2f0:	eddf 5a44 	vldr	s11, [pc, #272]	@ 800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800e2f4:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800e2f8:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800e2fc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e300:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e304:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e308:	edc7 7a07 	vstr	s15, [r7, #28]
 800e30c:	e021      	b.n	800e352 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 800e30e:	697b      	ldr	r3, [r7, #20]
 800e310:	ee07 3a90 	vmov	s15, r3
 800e314:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e318:	eddf 6a3b 	vldr	s13, [pc, #236]	@ 800e408 <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 800e31c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e320:	4b36      	ldr	r3, [pc, #216]	@ (800e3fc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e322:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e324:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800e328:	ee07 3a90 	vmov	s15, r3
 800e32c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e330:	ed97 6a03 	vldr	s12, [r7, #12]
 800e334:	eddf 5a33 	vldr	s11, [pc, #204]	@ 800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800e338:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800e33c:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800e340:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e344:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e348:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e34c:	edc7 7a07 	vstr	s15, [r7, #28]
 800e350:	bf00      	nop
 800e352:	4b2a      	ldr	r3, [pc, #168]	@ (800e3fc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e354:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e356:	0a5b      	lsrs	r3, r3, #9
 800e358:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800e35c:	ee07 3a90 	vmov	s15, r3
 800e360:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e364:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800e368:	ee37 7a87 	vadd.f32	s14, s15, s14
 800e36c:	edd7 6a07 	vldr	s13, [r7, #28]
 800e370:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e374:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800e378:	ee17 2a90 	vmov	r2, s15
 800e37c:	687b      	ldr	r3, [r7, #4]
 800e37e:	601a      	str	r2, [r3, #0]
 800e380:	4b1e      	ldr	r3, [pc, #120]	@ (800e3fc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e382:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e384:	0c1b      	lsrs	r3, r3, #16
 800e386:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800e38a:	ee07 3a90 	vmov	s15, r3
 800e38e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e392:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800e396:	ee37 7a87 	vadd.f32	s14, s15, s14
 800e39a:	edd7 6a07 	vldr	s13, [r7, #28]
 800e39e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e3a2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800e3a6:	ee17 2a90 	vmov	r2, s15
 800e3aa:	687b      	ldr	r3, [r7, #4]
 800e3ac:	605a      	str	r2, [r3, #4]
 800e3ae:	4b13      	ldr	r3, [pc, #76]	@ (800e3fc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e3b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e3b2:	0e1b      	lsrs	r3, r3, #24
 800e3b4:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800e3b8:	ee07 3a90 	vmov	s15, r3
 800e3bc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e3c0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800e3c4:	ee37 7a87 	vadd.f32	s14, s15, s14
 800e3c8:	edd7 6a07 	vldr	s13, [r7, #28]
 800e3cc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e3d0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800e3d4:	ee17 2a90 	vmov	r2, s15
 800e3d8:	687b      	ldr	r3, [r7, #4]
 800e3da:	609a      	str	r2, [r3, #8]
 800e3dc:	e008      	b.n	800e3f0 <HAL_RCCEx_GetPLL1ClockFreq+0x280>
 800e3de:	687b      	ldr	r3, [r7, #4]
 800e3e0:	2200      	movs	r2, #0
 800e3e2:	601a      	str	r2, [r3, #0]
 800e3e4:	687b      	ldr	r3, [r7, #4]
 800e3e6:	2200      	movs	r2, #0
 800e3e8:	605a      	str	r2, [r3, #4]
 800e3ea:	687b      	ldr	r3, [r7, #4]
 800e3ec:	2200      	movs	r2, #0
 800e3ee:	609a      	str	r2, [r3, #8]
 800e3f0:	bf00      	nop
 800e3f2:	3724      	adds	r7, #36	@ 0x24
 800e3f4:	46bd      	mov	sp, r7
 800e3f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e3fa:	4770      	bx	lr
 800e3fc:	58024400 	.word	0x58024400
 800e400:	03d09000 	.word	0x03d09000
 800e404:	46000000 	.word	0x46000000
 800e408:	4c742400 	.word	0x4c742400
 800e40c:	4a742400 	.word	0x4a742400
 800e410:	4bb71b00 	.word	0x4bb71b00

0800e414 <RCCEx_PLL2_Config>:
 800e414:	b580      	push	{r7, lr}
 800e416:	b084      	sub	sp, #16
 800e418:	af00      	add	r7, sp, #0
 800e41a:	6078      	str	r0, [r7, #4]
 800e41c:	6039      	str	r1, [r7, #0]
 800e41e:	2300      	movs	r3, #0
 800e420:	73fb      	strb	r3, [r7, #15]
 800e422:	4b53      	ldr	r3, [pc, #332]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e424:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e426:	f003 0303 	and.w	r3, r3, #3
 800e42a:	2b03      	cmp	r3, #3
 800e42c:	d101      	bne.n	800e432 <RCCEx_PLL2_Config+0x1e>
 800e42e:	2301      	movs	r3, #1
 800e430:	e099      	b.n	800e566 <RCCEx_PLL2_Config+0x152>
 800e432:	4b4f      	ldr	r3, [pc, #316]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e434:	681b      	ldr	r3, [r3, #0]
 800e436:	4a4e      	ldr	r2, [pc, #312]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e438:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800e43c:	6013      	str	r3, [r2, #0]
 800e43e:	f7f6 ff53 	bl	80052e8 <HAL_GetTick>
 800e442:	60b8      	str	r0, [r7, #8]
 800e444:	e008      	b.n	800e458 <RCCEx_PLL2_Config+0x44>
 800e446:	f7f6 ff4f 	bl	80052e8 <HAL_GetTick>
 800e44a:	4602      	mov	r2, r0
 800e44c:	68bb      	ldr	r3, [r7, #8]
 800e44e:	1ad3      	subs	r3, r2, r3
 800e450:	2b02      	cmp	r3, #2
 800e452:	d901      	bls.n	800e458 <RCCEx_PLL2_Config+0x44>
 800e454:	2303      	movs	r3, #3
 800e456:	e086      	b.n	800e566 <RCCEx_PLL2_Config+0x152>
 800e458:	4b45      	ldr	r3, [pc, #276]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e45a:	681b      	ldr	r3, [r3, #0]
 800e45c:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800e460:	2b00      	cmp	r3, #0
 800e462:	d1f0      	bne.n	800e446 <RCCEx_PLL2_Config+0x32>
 800e464:	4b42      	ldr	r3, [pc, #264]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e466:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e468:	f423 327c 	bic.w	r2, r3, #258048	@ 0x3f000
 800e46c:	687b      	ldr	r3, [r7, #4]
 800e46e:	681b      	ldr	r3, [r3, #0]
 800e470:	031b      	lsls	r3, r3, #12
 800e472:	493f      	ldr	r1, [pc, #252]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e474:	4313      	orrs	r3, r2
 800e476:	628b      	str	r3, [r1, #40]	@ 0x28
 800e478:	687b      	ldr	r3, [r7, #4]
 800e47a:	685b      	ldr	r3, [r3, #4]
 800e47c:	3b01      	subs	r3, #1
 800e47e:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800e482:	687b      	ldr	r3, [r7, #4]
 800e484:	689b      	ldr	r3, [r3, #8]
 800e486:	3b01      	subs	r3, #1
 800e488:	025b      	lsls	r3, r3, #9
 800e48a:	b29b      	uxth	r3, r3
 800e48c:	431a      	orrs	r2, r3
 800e48e:	687b      	ldr	r3, [r7, #4]
 800e490:	68db      	ldr	r3, [r3, #12]
 800e492:	3b01      	subs	r3, #1
 800e494:	041b      	lsls	r3, r3, #16
 800e496:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 800e49a:	431a      	orrs	r2, r3
 800e49c:	687b      	ldr	r3, [r7, #4]
 800e49e:	691b      	ldr	r3, [r3, #16]
 800e4a0:	3b01      	subs	r3, #1
 800e4a2:	061b      	lsls	r3, r3, #24
 800e4a4:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 800e4a8:	4931      	ldr	r1, [pc, #196]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e4aa:	4313      	orrs	r3, r2
 800e4ac:	638b      	str	r3, [r1, #56]	@ 0x38
 800e4ae:	4b30      	ldr	r3, [pc, #192]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e4b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e4b2:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 800e4b6:	687b      	ldr	r3, [r7, #4]
 800e4b8:	695b      	ldr	r3, [r3, #20]
 800e4ba:	492d      	ldr	r1, [pc, #180]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e4bc:	4313      	orrs	r3, r2
 800e4be:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800e4c0:	4b2b      	ldr	r3, [pc, #172]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e4c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e4c4:	f023 0220 	bic.w	r2, r3, #32
 800e4c8:	687b      	ldr	r3, [r7, #4]
 800e4ca:	699b      	ldr	r3, [r3, #24]
 800e4cc:	4928      	ldr	r1, [pc, #160]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e4ce:	4313      	orrs	r3, r2
 800e4d0:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800e4d2:	4b27      	ldr	r3, [pc, #156]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e4d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e4d6:	4a26      	ldr	r2, [pc, #152]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e4d8:	f023 0310 	bic.w	r3, r3, #16
 800e4dc:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e4de:	4b24      	ldr	r3, [pc, #144]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e4e0:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800e4e2:	4b24      	ldr	r3, [pc, #144]	@ (800e574 <RCCEx_PLL2_Config+0x160>)
 800e4e4:	4013      	ands	r3, r2
 800e4e6:	687a      	ldr	r2, [r7, #4]
 800e4e8:	69d2      	ldr	r2, [r2, #28]
 800e4ea:	00d2      	lsls	r2, r2, #3
 800e4ec:	4920      	ldr	r1, [pc, #128]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e4ee:	4313      	orrs	r3, r2
 800e4f0:	63cb      	str	r3, [r1, #60]	@ 0x3c
 800e4f2:	4b1f      	ldr	r3, [pc, #124]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e4f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e4f6:	4a1e      	ldr	r2, [pc, #120]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e4f8:	f043 0310 	orr.w	r3, r3, #16
 800e4fc:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e4fe:	683b      	ldr	r3, [r7, #0]
 800e500:	2b00      	cmp	r3, #0
 800e502:	d106      	bne.n	800e512 <RCCEx_PLL2_Config+0xfe>
 800e504:	4b1a      	ldr	r3, [pc, #104]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e506:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e508:	4a19      	ldr	r2, [pc, #100]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e50a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800e50e:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e510:	e00f      	b.n	800e532 <RCCEx_PLL2_Config+0x11e>
 800e512:	683b      	ldr	r3, [r7, #0]
 800e514:	2b01      	cmp	r3, #1
 800e516:	d106      	bne.n	800e526 <RCCEx_PLL2_Config+0x112>
 800e518:	4b15      	ldr	r3, [pc, #84]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e51a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e51c:	4a14      	ldr	r2, [pc, #80]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e51e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800e522:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e524:	e005      	b.n	800e532 <RCCEx_PLL2_Config+0x11e>
 800e526:	4b12      	ldr	r3, [pc, #72]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e528:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e52a:	4a11      	ldr	r2, [pc, #68]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e52c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800e530:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e532:	4b0f      	ldr	r3, [pc, #60]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e534:	681b      	ldr	r3, [r3, #0]
 800e536:	4a0e      	ldr	r2, [pc, #56]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e538:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800e53c:	6013      	str	r3, [r2, #0]
 800e53e:	f7f6 fed3 	bl	80052e8 <HAL_GetTick>
 800e542:	60b8      	str	r0, [r7, #8]
 800e544:	e008      	b.n	800e558 <RCCEx_PLL2_Config+0x144>
 800e546:	f7f6 fecf 	bl	80052e8 <HAL_GetTick>
 800e54a:	4602      	mov	r2, r0
 800e54c:	68bb      	ldr	r3, [r7, #8]
 800e54e:	1ad3      	subs	r3, r2, r3
 800e550:	2b02      	cmp	r3, #2
 800e552:	d901      	bls.n	800e558 <RCCEx_PLL2_Config+0x144>
 800e554:	2303      	movs	r3, #3
 800e556:	e006      	b.n	800e566 <RCCEx_PLL2_Config+0x152>
 800e558:	4b05      	ldr	r3, [pc, #20]	@ (800e570 <RCCEx_PLL2_Config+0x15c>)
 800e55a:	681b      	ldr	r3, [r3, #0]
 800e55c:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800e560:	2b00      	cmp	r3, #0
 800e562:	d0f0      	beq.n	800e546 <RCCEx_PLL2_Config+0x132>
 800e564:	7bfb      	ldrb	r3, [r7, #15]
 800e566:	4618      	mov	r0, r3
 800e568:	3710      	adds	r7, #16
 800e56a:	46bd      	mov	sp, r7
 800e56c:	bd80      	pop	{r7, pc}
 800e56e:	bf00      	nop
 800e570:	58024400 	.word	0x58024400
 800e574:	ffff0007 	.word	0xffff0007

0800e578 <RCCEx_PLL3_Config>:
 800e578:	b580      	push	{r7, lr}
 800e57a:	b084      	sub	sp, #16
 800e57c:	af00      	add	r7, sp, #0
 800e57e:	6078      	str	r0, [r7, #4]
 800e580:	6039      	str	r1, [r7, #0]
 800e582:	2300      	movs	r3, #0
 800e584:	73fb      	strb	r3, [r7, #15]
 800e586:	4b53      	ldr	r3, [pc, #332]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e588:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e58a:	f003 0303 	and.w	r3, r3, #3
 800e58e:	2b03      	cmp	r3, #3
 800e590:	d101      	bne.n	800e596 <RCCEx_PLL3_Config+0x1e>
 800e592:	2301      	movs	r3, #1
 800e594:	e099      	b.n	800e6ca <RCCEx_PLL3_Config+0x152>
 800e596:	4b4f      	ldr	r3, [pc, #316]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e598:	681b      	ldr	r3, [r3, #0]
 800e59a:	4a4e      	ldr	r2, [pc, #312]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e59c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800e5a0:	6013      	str	r3, [r2, #0]
 800e5a2:	f7f6 fea1 	bl	80052e8 <HAL_GetTick>
 800e5a6:	60b8      	str	r0, [r7, #8]
 800e5a8:	e008      	b.n	800e5bc <RCCEx_PLL3_Config+0x44>
 800e5aa:	f7f6 fe9d 	bl	80052e8 <HAL_GetTick>
 800e5ae:	4602      	mov	r2, r0
 800e5b0:	68bb      	ldr	r3, [r7, #8]
 800e5b2:	1ad3      	subs	r3, r2, r3
 800e5b4:	2b02      	cmp	r3, #2
 800e5b6:	d901      	bls.n	800e5bc <RCCEx_PLL3_Config+0x44>
 800e5b8:	2303      	movs	r3, #3
 800e5ba:	e086      	b.n	800e6ca <RCCEx_PLL3_Config+0x152>
 800e5bc:	4b45      	ldr	r3, [pc, #276]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e5be:	681b      	ldr	r3, [r3, #0]
 800e5c0:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800e5c4:	2b00      	cmp	r3, #0
 800e5c6:	d1f0      	bne.n	800e5aa <RCCEx_PLL3_Config+0x32>
 800e5c8:	4b42      	ldr	r3, [pc, #264]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e5ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e5cc:	f023 727c 	bic.w	r2, r3, #66060288	@ 0x3f00000
 800e5d0:	687b      	ldr	r3, [r7, #4]
 800e5d2:	681b      	ldr	r3, [r3, #0]
 800e5d4:	051b      	lsls	r3, r3, #20
 800e5d6:	493f      	ldr	r1, [pc, #252]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e5d8:	4313      	orrs	r3, r2
 800e5da:	628b      	str	r3, [r1, #40]	@ 0x28
 800e5dc:	687b      	ldr	r3, [r7, #4]
 800e5de:	685b      	ldr	r3, [r3, #4]
 800e5e0:	3b01      	subs	r3, #1
 800e5e2:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800e5e6:	687b      	ldr	r3, [r7, #4]
 800e5e8:	689b      	ldr	r3, [r3, #8]
 800e5ea:	3b01      	subs	r3, #1
 800e5ec:	025b      	lsls	r3, r3, #9
 800e5ee:	b29b      	uxth	r3, r3
 800e5f0:	431a      	orrs	r2, r3
 800e5f2:	687b      	ldr	r3, [r7, #4]
 800e5f4:	68db      	ldr	r3, [r3, #12]
 800e5f6:	3b01      	subs	r3, #1
 800e5f8:	041b      	lsls	r3, r3, #16
 800e5fa:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 800e5fe:	431a      	orrs	r2, r3
 800e600:	687b      	ldr	r3, [r7, #4]
 800e602:	691b      	ldr	r3, [r3, #16]
 800e604:	3b01      	subs	r3, #1
 800e606:	061b      	lsls	r3, r3, #24
 800e608:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 800e60c:	4931      	ldr	r1, [pc, #196]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e60e:	4313      	orrs	r3, r2
 800e610:	640b      	str	r3, [r1, #64]	@ 0x40
 800e612:	4b30      	ldr	r3, [pc, #192]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e614:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e616:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 800e61a:	687b      	ldr	r3, [r7, #4]
 800e61c:	695b      	ldr	r3, [r3, #20]
 800e61e:	492d      	ldr	r1, [pc, #180]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e620:	4313      	orrs	r3, r2
 800e622:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800e624:	4b2b      	ldr	r3, [pc, #172]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e626:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e628:	f423 7200 	bic.w	r2, r3, #512	@ 0x200
 800e62c:	687b      	ldr	r3, [r7, #4]
 800e62e:	699b      	ldr	r3, [r3, #24]
 800e630:	4928      	ldr	r1, [pc, #160]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e632:	4313      	orrs	r3, r2
 800e634:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800e636:	4b27      	ldr	r3, [pc, #156]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e638:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e63a:	4a26      	ldr	r2, [pc, #152]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e63c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800e640:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e642:	4b24      	ldr	r3, [pc, #144]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e644:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800e646:	4b24      	ldr	r3, [pc, #144]	@ (800e6d8 <RCCEx_PLL3_Config+0x160>)
 800e648:	4013      	ands	r3, r2
 800e64a:	687a      	ldr	r2, [r7, #4]
 800e64c:	69d2      	ldr	r2, [r2, #28]
 800e64e:	00d2      	lsls	r2, r2, #3
 800e650:	4920      	ldr	r1, [pc, #128]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e652:	4313      	orrs	r3, r2
 800e654:	644b      	str	r3, [r1, #68]	@ 0x44
 800e656:	4b1f      	ldr	r3, [pc, #124]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e658:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e65a:	4a1e      	ldr	r2, [pc, #120]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e65c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800e660:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e662:	683b      	ldr	r3, [r7, #0]
 800e664:	2b00      	cmp	r3, #0
 800e666:	d106      	bne.n	800e676 <RCCEx_PLL3_Config+0xfe>
 800e668:	4b1a      	ldr	r3, [pc, #104]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e66a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e66c:	4a19      	ldr	r2, [pc, #100]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e66e:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 800e672:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e674:	e00f      	b.n	800e696 <RCCEx_PLL3_Config+0x11e>
 800e676:	683b      	ldr	r3, [r7, #0]
 800e678:	2b01      	cmp	r3, #1
 800e67a:	d106      	bne.n	800e68a <RCCEx_PLL3_Config+0x112>
 800e67c:	4b15      	ldr	r3, [pc, #84]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e67e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e680:	4a14      	ldr	r2, [pc, #80]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e682:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800e686:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e688:	e005      	b.n	800e696 <RCCEx_PLL3_Config+0x11e>
 800e68a:	4b12      	ldr	r3, [pc, #72]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e68c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e68e:	4a11      	ldr	r2, [pc, #68]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e690:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800e694:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e696:	4b0f      	ldr	r3, [pc, #60]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e698:	681b      	ldr	r3, [r3, #0]
 800e69a:	4a0e      	ldr	r2, [pc, #56]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e69c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800e6a0:	6013      	str	r3, [r2, #0]
 800e6a2:	f7f6 fe21 	bl	80052e8 <HAL_GetTick>
 800e6a6:	60b8      	str	r0, [r7, #8]
 800e6a8:	e008      	b.n	800e6bc <RCCEx_PLL3_Config+0x144>
 800e6aa:	f7f6 fe1d 	bl	80052e8 <HAL_GetTick>
 800e6ae:	4602      	mov	r2, r0
 800e6b0:	68bb      	ldr	r3, [r7, #8]
 800e6b2:	1ad3      	subs	r3, r2, r3
 800e6b4:	2b02      	cmp	r3, #2
 800e6b6:	d901      	bls.n	800e6bc <RCCEx_PLL3_Config+0x144>
 800e6b8:	2303      	movs	r3, #3
 800e6ba:	e006      	b.n	800e6ca <RCCEx_PLL3_Config+0x152>
 800e6bc:	4b05      	ldr	r3, [pc, #20]	@ (800e6d4 <RCCEx_PLL3_Config+0x15c>)
 800e6be:	681b      	ldr	r3, [r3, #0]
 800e6c0:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800e6c4:	2b00      	cmp	r3, #0
 800e6c6:	d0f0      	beq.n	800e6aa <RCCEx_PLL3_Config+0x132>
 800e6c8:	7bfb      	ldrb	r3, [r7, #15]
 800e6ca:	4618      	mov	r0, r3
 800e6cc:	3710      	adds	r7, #16
 800e6ce:	46bd      	mov	sp, r7
 800e6d0:	bd80      	pop	{r7, pc}
 800e6d2:	bf00      	nop
 800e6d4:	58024400 	.word	0x58024400
 800e6d8:	ffff0007 	.word	0xffff0007

0800e6dc <HAL_SPI_Init>:
 800e6dc:	b580      	push	{r7, lr}
 800e6de:	b084      	sub	sp, #16
 800e6e0:	af00      	add	r7, sp, #0
 800e6e2:	6078      	str	r0, [r7, #4]
 800e6e4:	687b      	ldr	r3, [r7, #4]
 800e6e6:	2b00      	cmp	r3, #0
 800e6e8:	d101      	bne.n	800e6ee <HAL_SPI_Init+0x12>
 800e6ea:	2301      	movs	r3, #1
 800e6ec:	e10f      	b.n	800e90e <HAL_SPI_Init+0x232>
 800e6ee:	687b      	ldr	r3, [r7, #4]
 800e6f0:	2200      	movs	r2, #0
 800e6f2:	629a      	str	r2, [r3, #40]	@ 0x28
 800e6f4:	687b      	ldr	r3, [r7, #4]
 800e6f6:	681b      	ldr	r3, [r3, #0]
 800e6f8:	4a87      	ldr	r2, [pc, #540]	@ (800e918 <HAL_SPI_Init+0x23c>)
 800e6fa:	4293      	cmp	r3, r2
 800e6fc:	d00f      	beq.n	800e71e <HAL_SPI_Init+0x42>
 800e6fe:	687b      	ldr	r3, [r7, #4]
 800e700:	681b      	ldr	r3, [r3, #0]
 800e702:	4a86      	ldr	r2, [pc, #536]	@ (800e91c <HAL_SPI_Init+0x240>)
 800e704:	4293      	cmp	r3, r2
 800e706:	d00a      	beq.n	800e71e <HAL_SPI_Init+0x42>
 800e708:	687b      	ldr	r3, [r7, #4]
 800e70a:	681b      	ldr	r3, [r3, #0]
 800e70c:	4a84      	ldr	r2, [pc, #528]	@ (800e920 <HAL_SPI_Init+0x244>)
 800e70e:	4293      	cmp	r3, r2
 800e710:	d005      	beq.n	800e71e <HAL_SPI_Init+0x42>
 800e712:	687b      	ldr	r3, [r7, #4]
 800e714:	68db      	ldr	r3, [r3, #12]
 800e716:	2b0f      	cmp	r3, #15
 800e718:	d901      	bls.n	800e71e <HAL_SPI_Init+0x42>
 800e71a:	2301      	movs	r3, #1
 800e71c:	e0f7      	b.n	800e90e <HAL_SPI_Init+0x232>
 800e71e:	6878      	ldr	r0, [r7, #4]
 800e720:	f000 f900 	bl	800e924 <SPI_GetPacketSize>
 800e724:	60f8      	str	r0, [r7, #12]
 800e726:	687b      	ldr	r3, [r7, #4]
 800e728:	681b      	ldr	r3, [r3, #0]
 800e72a:	4a7b      	ldr	r2, [pc, #492]	@ (800e918 <HAL_SPI_Init+0x23c>)
 800e72c:	4293      	cmp	r3, r2
 800e72e:	d00c      	beq.n	800e74a <HAL_SPI_Init+0x6e>
 800e730:	687b      	ldr	r3, [r7, #4]
 800e732:	681b      	ldr	r3, [r3, #0]
 800e734:	4a79      	ldr	r2, [pc, #484]	@ (800e91c <HAL_SPI_Init+0x240>)
 800e736:	4293      	cmp	r3, r2
 800e738:	d007      	beq.n	800e74a <HAL_SPI_Init+0x6e>
 800e73a:	687b      	ldr	r3, [r7, #4]
 800e73c:	681b      	ldr	r3, [r3, #0]
 800e73e:	4a78      	ldr	r2, [pc, #480]	@ (800e920 <HAL_SPI_Init+0x244>)
 800e740:	4293      	cmp	r3, r2
 800e742:	d002      	beq.n	800e74a <HAL_SPI_Init+0x6e>
 800e744:	68fb      	ldr	r3, [r7, #12]
 800e746:	2b08      	cmp	r3, #8
 800e748:	d811      	bhi.n	800e76e <HAL_SPI_Init+0x92>
 800e74a:	687b      	ldr	r3, [r7, #4]
 800e74c:	681b      	ldr	r3, [r3, #0]
 800e74e:	4a72      	ldr	r2, [pc, #456]	@ (800e918 <HAL_SPI_Init+0x23c>)
 800e750:	4293      	cmp	r3, r2
 800e752:	d009      	beq.n	800e768 <HAL_SPI_Init+0x8c>
 800e754:	687b      	ldr	r3, [r7, #4]
 800e756:	681b      	ldr	r3, [r3, #0]
 800e758:	4a70      	ldr	r2, [pc, #448]	@ (800e91c <HAL_SPI_Init+0x240>)
 800e75a:	4293      	cmp	r3, r2
 800e75c:	d004      	beq.n	800e768 <HAL_SPI_Init+0x8c>
 800e75e:	687b      	ldr	r3, [r7, #4]
 800e760:	681b      	ldr	r3, [r3, #0]
 800e762:	4a6f      	ldr	r2, [pc, #444]	@ (800e920 <HAL_SPI_Init+0x244>)
 800e764:	4293      	cmp	r3, r2
 800e766:	d104      	bne.n	800e772 <HAL_SPI_Init+0x96>
 800e768:	68fb      	ldr	r3, [r7, #12]
 800e76a:	2b10      	cmp	r3, #16
 800e76c:	d901      	bls.n	800e772 <HAL_SPI_Init+0x96>
 800e76e:	2301      	movs	r3, #1
 800e770:	e0cd      	b.n	800e90e <HAL_SPI_Init+0x232>
 800e772:	687b      	ldr	r3, [r7, #4]
 800e774:	f893 3081 	ldrb.w	r3, [r3, #129]	@ 0x81
 800e778:	b2db      	uxtb	r3, r3
 800e77a:	2b00      	cmp	r3, #0
 800e77c:	d106      	bne.n	800e78c <HAL_SPI_Init+0xb0>
 800e77e:	687b      	ldr	r3, [r7, #4]
 800e780:	2200      	movs	r2, #0
 800e782:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 800e786:	6878      	ldr	r0, [r7, #4]
 800e788:	f7f3 fb1a 	bl	8001dc0 <HAL_SPI_MspInit>
 800e78c:	687b      	ldr	r3, [r7, #4]
 800e78e:	2202      	movs	r2, #2
 800e790:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
 800e794:	687b      	ldr	r3, [r7, #4]
 800e796:	681b      	ldr	r3, [r3, #0]
 800e798:	681a      	ldr	r2, [r3, #0]
 800e79a:	687b      	ldr	r3, [r7, #4]
 800e79c:	681b      	ldr	r3, [r3, #0]
 800e79e:	f022 0201 	bic.w	r2, r2, #1
 800e7a2:	601a      	str	r2, [r3, #0]
 800e7a4:	687b      	ldr	r3, [r7, #4]
 800e7a6:	681b      	ldr	r3, [r3, #0]
 800e7a8:	689b      	ldr	r3, [r3, #8]
 800e7aa:	f403 13f8 	and.w	r3, r3, #2031616	@ 0x1f0000
 800e7ae:	60bb      	str	r3, [r7, #8]
 800e7b0:	687b      	ldr	r3, [r7, #4]
 800e7b2:	699b      	ldr	r3, [r3, #24]
 800e7b4:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800e7b8:	d119      	bne.n	800e7ee <HAL_SPI_Init+0x112>
 800e7ba:	687b      	ldr	r3, [r7, #4]
 800e7bc:	685b      	ldr	r3, [r3, #4]
 800e7be:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800e7c2:	d103      	bne.n	800e7cc <HAL_SPI_Init+0xf0>
 800e7c4:	687b      	ldr	r3, [r7, #4]
 800e7c6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e7c8:	2b00      	cmp	r3, #0
 800e7ca:	d008      	beq.n	800e7de <HAL_SPI_Init+0x102>
 800e7cc:	687b      	ldr	r3, [r7, #4]
 800e7ce:	685b      	ldr	r3, [r3, #4]
 800e7d0:	2b00      	cmp	r3, #0
 800e7d2:	d10c      	bne.n	800e7ee <HAL_SPI_Init+0x112>
 800e7d4:	687b      	ldr	r3, [r7, #4]
 800e7d6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e7d8:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800e7dc:	d107      	bne.n	800e7ee <HAL_SPI_Init+0x112>
 800e7de:	687b      	ldr	r3, [r7, #4]
 800e7e0:	681b      	ldr	r3, [r3, #0]
 800e7e2:	681a      	ldr	r2, [r3, #0]
 800e7e4:	687b      	ldr	r3, [r7, #4]
 800e7e6:	681b      	ldr	r3, [r3, #0]
 800e7e8:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800e7ec:	601a      	str	r2, [r3, #0]
 800e7ee:	687b      	ldr	r3, [r7, #4]
 800e7f0:	685b      	ldr	r3, [r3, #4]
 800e7f2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800e7f6:	2b00      	cmp	r3, #0
 800e7f8:	d00f      	beq.n	800e81a <HAL_SPI_Init+0x13e>
 800e7fa:	687b      	ldr	r3, [r7, #4]
 800e7fc:	68db      	ldr	r3, [r3, #12]
 800e7fe:	2b06      	cmp	r3, #6
 800e800:	d90b      	bls.n	800e81a <HAL_SPI_Init+0x13e>
 800e802:	687b      	ldr	r3, [r7, #4]
 800e804:	681b      	ldr	r3, [r3, #0]
 800e806:	681b      	ldr	r3, [r3, #0]
 800e808:	f423 7180 	bic.w	r1, r3, #256	@ 0x100
 800e80c:	687b      	ldr	r3, [r7, #4]
 800e80e:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800e810:	687b      	ldr	r3, [r7, #4]
 800e812:	681b      	ldr	r3, [r3, #0]
 800e814:	430a      	orrs	r2, r1
 800e816:	601a      	str	r2, [r3, #0]
 800e818:	e007      	b.n	800e82a <HAL_SPI_Init+0x14e>
 800e81a:	687b      	ldr	r3, [r7, #4]
 800e81c:	681b      	ldr	r3, [r3, #0]
 800e81e:	681a      	ldr	r2, [r3, #0]
 800e820:	687b      	ldr	r3, [r7, #4]
 800e822:	681b      	ldr	r3, [r3, #0]
 800e824:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800e828:	601a      	str	r2, [r3, #0]
 800e82a:	687b      	ldr	r3, [r7, #4]
 800e82c:	69da      	ldr	r2, [r3, #28]
 800e82e:	687b      	ldr	r3, [r7, #4]
 800e830:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e832:	431a      	orrs	r2, r3
 800e834:	68bb      	ldr	r3, [r7, #8]
 800e836:	431a      	orrs	r2, r3
 800e838:	687b      	ldr	r3, [r7, #4]
 800e83a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e83c:	ea42 0103 	orr.w	r1, r2, r3
 800e840:	687b      	ldr	r3, [r7, #4]
 800e842:	68da      	ldr	r2, [r3, #12]
 800e844:	687b      	ldr	r3, [r7, #4]
 800e846:	681b      	ldr	r3, [r3, #0]
 800e848:	430a      	orrs	r2, r1
 800e84a:	609a      	str	r2, [r3, #8]
 800e84c:	687b      	ldr	r3, [r7, #4]
 800e84e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800e850:	687b      	ldr	r3, [r7, #4]
 800e852:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e854:	431a      	orrs	r2, r3
 800e856:	687b      	ldr	r3, [r7, #4]
 800e858:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e85a:	431a      	orrs	r2, r3
 800e85c:	687b      	ldr	r3, [r7, #4]
 800e85e:	699b      	ldr	r3, [r3, #24]
 800e860:	431a      	orrs	r2, r3
 800e862:	687b      	ldr	r3, [r7, #4]
 800e864:	691b      	ldr	r3, [r3, #16]
 800e866:	431a      	orrs	r2, r3
 800e868:	687b      	ldr	r3, [r7, #4]
 800e86a:	695b      	ldr	r3, [r3, #20]
 800e86c:	431a      	orrs	r2, r3
 800e86e:	687b      	ldr	r3, [r7, #4]
 800e870:	6a1b      	ldr	r3, [r3, #32]
 800e872:	431a      	orrs	r2, r3
 800e874:	687b      	ldr	r3, [r7, #4]
 800e876:	685b      	ldr	r3, [r3, #4]
 800e878:	431a      	orrs	r2, r3
 800e87a:	687b      	ldr	r3, [r7, #4]
 800e87c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e87e:	431a      	orrs	r2, r3
 800e880:	687b      	ldr	r3, [r7, #4]
 800e882:	689b      	ldr	r3, [r3, #8]
 800e884:	431a      	orrs	r2, r3
 800e886:	687b      	ldr	r3, [r7, #4]
 800e888:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800e88a:	ea42 0103 	orr.w	r1, r2, r3
 800e88e:	687b      	ldr	r3, [r7, #4]
 800e890:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 800e892:	687b      	ldr	r3, [r7, #4]
 800e894:	681b      	ldr	r3, [r3, #0]
 800e896:	430a      	orrs	r2, r1
 800e898:	60da      	str	r2, [r3, #12]
 800e89a:	687b      	ldr	r3, [r7, #4]
 800e89c:	685b      	ldr	r3, [r3, #4]
 800e89e:	2b00      	cmp	r3, #0
 800e8a0:	d113      	bne.n	800e8ca <HAL_SPI_Init+0x1ee>
 800e8a2:	687b      	ldr	r3, [r7, #4]
 800e8a4:	681b      	ldr	r3, [r3, #0]
 800e8a6:	689b      	ldr	r3, [r3, #8]
 800e8a8:	f423 52c0 	bic.w	r2, r3, #6144	@ 0x1800
 800e8ac:	687b      	ldr	r3, [r7, #4]
 800e8ae:	681b      	ldr	r3, [r3, #0]
 800e8b0:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800e8b4:	609a      	str	r2, [r3, #8]
 800e8b6:	687b      	ldr	r3, [r7, #4]
 800e8b8:	681b      	ldr	r3, [r3, #0]
 800e8ba:	689b      	ldr	r3, [r3, #8]
 800e8bc:	f423 62c0 	bic.w	r2, r3, #1536	@ 0x600
 800e8c0:	687b      	ldr	r3, [r7, #4]
 800e8c2:	681b      	ldr	r3, [r3, #0]
 800e8c4:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800e8c8:	609a      	str	r2, [r3, #8]
 800e8ca:	687b      	ldr	r3, [r7, #4]
 800e8cc:	681b      	ldr	r3, [r3, #0]
 800e8ce:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800e8d0:	687b      	ldr	r3, [r7, #4]
 800e8d2:	681b      	ldr	r3, [r3, #0]
 800e8d4:	f022 0201 	bic.w	r2, r2, #1
 800e8d8:	651a      	str	r2, [r3, #80]	@ 0x50
 800e8da:	687b      	ldr	r3, [r7, #4]
 800e8dc:	685b      	ldr	r3, [r3, #4]
 800e8de:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800e8e2:	2b00      	cmp	r3, #0
 800e8e4:	d00a      	beq.n	800e8fc <HAL_SPI_Init+0x220>
 800e8e6:	687b      	ldr	r3, [r7, #4]
 800e8e8:	681b      	ldr	r3, [r3, #0]
 800e8ea:	68db      	ldr	r3, [r3, #12]
 800e8ec:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 800e8f0:	687b      	ldr	r3, [r7, #4]
 800e8f2:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800e8f4:	687b      	ldr	r3, [r7, #4]
 800e8f6:	681b      	ldr	r3, [r3, #0]
 800e8f8:	430a      	orrs	r2, r1
 800e8fa:	60da      	str	r2, [r3, #12]
 800e8fc:	687b      	ldr	r3, [r7, #4]
 800e8fe:	2200      	movs	r2, #0
 800e900:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800e904:	687b      	ldr	r3, [r7, #4]
 800e906:	2201      	movs	r2, #1
 800e908:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
 800e90c:	2300      	movs	r3, #0
 800e90e:	4618      	mov	r0, r3
 800e910:	3710      	adds	r7, #16
 800e912:	46bd      	mov	sp, r7
 800e914:	bd80      	pop	{r7, pc}
 800e916:	bf00      	nop
 800e918:	40013000 	.word	0x40013000
 800e91c:	40003800 	.word	0x40003800
 800e920:	40003c00 	.word	0x40003c00

0800e924 <SPI_GetPacketSize>:
 800e924:	b480      	push	{r7}
 800e926:	b085      	sub	sp, #20
 800e928:	af00      	add	r7, sp, #0
 800e92a:	6078      	str	r0, [r7, #4]
 800e92c:	687b      	ldr	r3, [r7, #4]
 800e92e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e930:	095b      	lsrs	r3, r3, #5
 800e932:	3301      	adds	r3, #1
 800e934:	60fb      	str	r3, [r7, #12]
 800e936:	687b      	ldr	r3, [r7, #4]
 800e938:	68db      	ldr	r3, [r3, #12]
 800e93a:	3301      	adds	r3, #1
 800e93c:	60bb      	str	r3, [r7, #8]
 800e93e:	68bb      	ldr	r3, [r7, #8]
 800e940:	3307      	adds	r3, #7
 800e942:	08db      	lsrs	r3, r3, #3
 800e944:	60bb      	str	r3, [r7, #8]
 800e946:	68bb      	ldr	r3, [r7, #8]
 800e948:	68fa      	ldr	r2, [r7, #12]
 800e94a:	fb02 f303 	mul.w	r3, r2, r3
 800e94e:	4618      	mov	r0, r3
 800e950:	3714      	adds	r7, #20
 800e952:	46bd      	mov	sp, r7
 800e954:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e958:	4770      	bx	lr

0800e95a <HAL_TIM_Base_Init>:
 800e95a:	b580      	push	{r7, lr}
 800e95c:	b082      	sub	sp, #8
 800e95e:	af00      	add	r7, sp, #0
 800e960:	6078      	str	r0, [r7, #4]
 800e962:	687b      	ldr	r3, [r7, #4]
 800e964:	2b00      	cmp	r3, #0
 800e966:	d101      	bne.n	800e96c <HAL_TIM_Base_Init+0x12>
 800e968:	2301      	movs	r3, #1
 800e96a:	e049      	b.n	800ea00 <HAL_TIM_Base_Init+0xa6>
 800e96c:	687b      	ldr	r3, [r7, #4]
 800e96e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800e972:	b2db      	uxtb	r3, r3
 800e974:	2b00      	cmp	r3, #0
 800e976:	d106      	bne.n	800e986 <HAL_TIM_Base_Init+0x2c>
 800e978:	687b      	ldr	r3, [r7, #4]
 800e97a:	2200      	movs	r2, #0
 800e97c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800e980:	6878      	ldr	r0, [r7, #4]
 800e982:	f7f3 fb25 	bl	8001fd0 <HAL_TIM_Base_MspInit>
 800e986:	687b      	ldr	r3, [r7, #4]
 800e988:	2202      	movs	r2, #2
 800e98a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e98e:	687b      	ldr	r3, [r7, #4]
 800e990:	681a      	ldr	r2, [r3, #0]
 800e992:	687b      	ldr	r3, [r7, #4]
 800e994:	3304      	adds	r3, #4
 800e996:	4619      	mov	r1, r3
 800e998:	4610      	mov	r0, r2
 800e99a:	f001 f9a3 	bl	800fce4 <TIM_Base_SetConfig>
 800e99e:	687b      	ldr	r3, [r7, #4]
 800e9a0:	2201      	movs	r2, #1
 800e9a2:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 800e9a6:	687b      	ldr	r3, [r7, #4]
 800e9a8:	2201      	movs	r2, #1
 800e9aa:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e9ae:	687b      	ldr	r3, [r7, #4]
 800e9b0:	2201      	movs	r2, #1
 800e9b2:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800e9b6:	687b      	ldr	r3, [r7, #4]
 800e9b8:	2201      	movs	r2, #1
 800e9ba:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800e9be:	687b      	ldr	r3, [r7, #4]
 800e9c0:	2201      	movs	r2, #1
 800e9c2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800e9c6:	687b      	ldr	r3, [r7, #4]
 800e9c8:	2201      	movs	r2, #1
 800e9ca:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800e9ce:	687b      	ldr	r3, [r7, #4]
 800e9d0:	2201      	movs	r2, #1
 800e9d2:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800e9d6:	687b      	ldr	r3, [r7, #4]
 800e9d8:	2201      	movs	r2, #1
 800e9da:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800e9de:	687b      	ldr	r3, [r7, #4]
 800e9e0:	2201      	movs	r2, #1
 800e9e2:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800e9e6:	687b      	ldr	r3, [r7, #4]
 800e9e8:	2201      	movs	r2, #1
 800e9ea:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800e9ee:	687b      	ldr	r3, [r7, #4]
 800e9f0:	2201      	movs	r2, #1
 800e9f2:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 800e9f6:	687b      	ldr	r3, [r7, #4]
 800e9f8:	2201      	movs	r2, #1
 800e9fa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e9fe:	2300      	movs	r3, #0
 800ea00:	4618      	mov	r0, r3
 800ea02:	3708      	adds	r7, #8
 800ea04:	46bd      	mov	sp, r7
 800ea06:	bd80      	pop	{r7, pc}

0800ea08 <HAL_TIM_Base_Start>:
 800ea08:	b480      	push	{r7}
 800ea0a:	b085      	sub	sp, #20
 800ea0c:	af00      	add	r7, sp, #0
 800ea0e:	6078      	str	r0, [r7, #4]
 800ea10:	687b      	ldr	r3, [r7, #4]
 800ea12:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800ea16:	b2db      	uxtb	r3, r3
 800ea18:	2b01      	cmp	r3, #1
 800ea1a:	d001      	beq.n	800ea20 <HAL_TIM_Base_Start+0x18>
 800ea1c:	2301      	movs	r3, #1
 800ea1e:	e056      	b.n	800eace <HAL_TIM_Base_Start+0xc6>
 800ea20:	687b      	ldr	r3, [r7, #4]
 800ea22:	2202      	movs	r2, #2
 800ea24:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ea28:	687b      	ldr	r3, [r7, #4]
 800ea2a:	681b      	ldr	r3, [r3, #0]
 800ea2c:	4a2b      	ldr	r2, [pc, #172]	@ (800eadc <HAL_TIM_Base_Start+0xd4>)
 800ea2e:	4293      	cmp	r3, r2
 800ea30:	d02c      	beq.n	800ea8c <HAL_TIM_Base_Start+0x84>
 800ea32:	687b      	ldr	r3, [r7, #4]
 800ea34:	681b      	ldr	r3, [r3, #0]
 800ea36:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800ea3a:	d027      	beq.n	800ea8c <HAL_TIM_Base_Start+0x84>
 800ea3c:	687b      	ldr	r3, [r7, #4]
 800ea3e:	681b      	ldr	r3, [r3, #0]
 800ea40:	4a27      	ldr	r2, [pc, #156]	@ (800eae0 <HAL_TIM_Base_Start+0xd8>)
 800ea42:	4293      	cmp	r3, r2
 800ea44:	d022      	beq.n	800ea8c <HAL_TIM_Base_Start+0x84>
 800ea46:	687b      	ldr	r3, [r7, #4]
 800ea48:	681b      	ldr	r3, [r3, #0]
 800ea4a:	4a26      	ldr	r2, [pc, #152]	@ (800eae4 <HAL_TIM_Base_Start+0xdc>)
 800ea4c:	4293      	cmp	r3, r2
 800ea4e:	d01d      	beq.n	800ea8c <HAL_TIM_Base_Start+0x84>
 800ea50:	687b      	ldr	r3, [r7, #4]
 800ea52:	681b      	ldr	r3, [r3, #0]
 800ea54:	4a24      	ldr	r2, [pc, #144]	@ (800eae8 <HAL_TIM_Base_Start+0xe0>)
 800ea56:	4293      	cmp	r3, r2
 800ea58:	d018      	beq.n	800ea8c <HAL_TIM_Base_Start+0x84>
 800ea5a:	687b      	ldr	r3, [r7, #4]
 800ea5c:	681b      	ldr	r3, [r3, #0]
 800ea5e:	4a23      	ldr	r2, [pc, #140]	@ (800eaec <HAL_TIM_Base_Start+0xe4>)
 800ea60:	4293      	cmp	r3, r2
 800ea62:	d013      	beq.n	800ea8c <HAL_TIM_Base_Start+0x84>
 800ea64:	687b      	ldr	r3, [r7, #4]
 800ea66:	681b      	ldr	r3, [r3, #0]
 800ea68:	4a21      	ldr	r2, [pc, #132]	@ (800eaf0 <HAL_TIM_Base_Start+0xe8>)
 800ea6a:	4293      	cmp	r3, r2
 800ea6c:	d00e      	beq.n	800ea8c <HAL_TIM_Base_Start+0x84>
 800ea6e:	687b      	ldr	r3, [r7, #4]
 800ea70:	681b      	ldr	r3, [r3, #0]
 800ea72:	4a20      	ldr	r2, [pc, #128]	@ (800eaf4 <HAL_TIM_Base_Start+0xec>)
 800ea74:	4293      	cmp	r3, r2
 800ea76:	d009      	beq.n	800ea8c <HAL_TIM_Base_Start+0x84>
 800ea78:	687b      	ldr	r3, [r7, #4]
 800ea7a:	681b      	ldr	r3, [r3, #0]
 800ea7c:	4a1e      	ldr	r2, [pc, #120]	@ (800eaf8 <HAL_TIM_Base_Start+0xf0>)
 800ea7e:	4293      	cmp	r3, r2
 800ea80:	d004      	beq.n	800ea8c <HAL_TIM_Base_Start+0x84>
 800ea82:	687b      	ldr	r3, [r7, #4]
 800ea84:	681b      	ldr	r3, [r3, #0]
 800ea86:	4a1d      	ldr	r2, [pc, #116]	@ (800eafc <HAL_TIM_Base_Start+0xf4>)
 800ea88:	4293      	cmp	r3, r2
 800ea8a:	d115      	bne.n	800eab8 <HAL_TIM_Base_Start+0xb0>
 800ea8c:	687b      	ldr	r3, [r7, #4]
 800ea8e:	681b      	ldr	r3, [r3, #0]
 800ea90:	689a      	ldr	r2, [r3, #8]
 800ea92:	4b1b      	ldr	r3, [pc, #108]	@ (800eb00 <HAL_TIM_Base_Start+0xf8>)
 800ea94:	4013      	ands	r3, r2
 800ea96:	60fb      	str	r3, [r7, #12]
 800ea98:	68fb      	ldr	r3, [r7, #12]
 800ea9a:	2b06      	cmp	r3, #6
 800ea9c:	d015      	beq.n	800eaca <HAL_TIM_Base_Start+0xc2>
 800ea9e:	68fb      	ldr	r3, [r7, #12]
 800eaa0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800eaa4:	d011      	beq.n	800eaca <HAL_TIM_Base_Start+0xc2>
 800eaa6:	687b      	ldr	r3, [r7, #4]
 800eaa8:	681b      	ldr	r3, [r3, #0]
 800eaaa:	681a      	ldr	r2, [r3, #0]
 800eaac:	687b      	ldr	r3, [r7, #4]
 800eaae:	681b      	ldr	r3, [r3, #0]
 800eab0:	f042 0201 	orr.w	r2, r2, #1
 800eab4:	601a      	str	r2, [r3, #0]
 800eab6:	e008      	b.n	800eaca <HAL_TIM_Base_Start+0xc2>
 800eab8:	687b      	ldr	r3, [r7, #4]
 800eaba:	681b      	ldr	r3, [r3, #0]
 800eabc:	681a      	ldr	r2, [r3, #0]
 800eabe:	687b      	ldr	r3, [r7, #4]
 800eac0:	681b      	ldr	r3, [r3, #0]
 800eac2:	f042 0201 	orr.w	r2, r2, #1
 800eac6:	601a      	str	r2, [r3, #0]
 800eac8:	e000      	b.n	800eacc <HAL_TIM_Base_Start+0xc4>
 800eaca:	bf00      	nop
 800eacc:	2300      	movs	r3, #0
 800eace:	4618      	mov	r0, r3
 800ead0:	3714      	adds	r7, #20
 800ead2:	46bd      	mov	sp, r7
 800ead4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ead8:	4770      	bx	lr
 800eada:	bf00      	nop
 800eadc:	40010000 	.word	0x40010000
 800eae0:	40000400 	.word	0x40000400
 800eae4:	40000800 	.word	0x40000800
 800eae8:	40000c00 	.word	0x40000c00
 800eaec:	40010400 	.word	0x40010400
 800eaf0:	40001800 	.word	0x40001800
 800eaf4:	40014000 	.word	0x40014000
 800eaf8:	4000e000 	.word	0x4000e000
 800eafc:	4000e400 	.word	0x4000e400
 800eb00:	00010007 	.word	0x00010007

0800eb04 <HAL_TIM_Base_Start_IT>:
 800eb04:	b480      	push	{r7}
 800eb06:	b085      	sub	sp, #20
 800eb08:	af00      	add	r7, sp, #0
 800eb0a:	6078      	str	r0, [r7, #4]
 800eb0c:	687b      	ldr	r3, [r7, #4]
 800eb0e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800eb12:	b2db      	uxtb	r3, r3
 800eb14:	2b01      	cmp	r3, #1
 800eb16:	d001      	beq.n	800eb1c <HAL_TIM_Base_Start_IT+0x18>
 800eb18:	2301      	movs	r3, #1
 800eb1a:	e05e      	b.n	800ebda <HAL_TIM_Base_Start_IT+0xd6>
 800eb1c:	687b      	ldr	r3, [r7, #4]
 800eb1e:	2202      	movs	r2, #2
 800eb20:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800eb24:	687b      	ldr	r3, [r7, #4]
 800eb26:	681b      	ldr	r3, [r3, #0]
 800eb28:	68da      	ldr	r2, [r3, #12]
 800eb2a:	687b      	ldr	r3, [r7, #4]
 800eb2c:	681b      	ldr	r3, [r3, #0]
 800eb2e:	f042 0201 	orr.w	r2, r2, #1
 800eb32:	60da      	str	r2, [r3, #12]
 800eb34:	687b      	ldr	r3, [r7, #4]
 800eb36:	681b      	ldr	r3, [r3, #0]
 800eb38:	4a2b      	ldr	r2, [pc, #172]	@ (800ebe8 <HAL_TIM_Base_Start_IT+0xe4>)
 800eb3a:	4293      	cmp	r3, r2
 800eb3c:	d02c      	beq.n	800eb98 <HAL_TIM_Base_Start_IT+0x94>
 800eb3e:	687b      	ldr	r3, [r7, #4]
 800eb40:	681b      	ldr	r3, [r3, #0]
 800eb42:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800eb46:	d027      	beq.n	800eb98 <HAL_TIM_Base_Start_IT+0x94>
 800eb48:	687b      	ldr	r3, [r7, #4]
 800eb4a:	681b      	ldr	r3, [r3, #0]
 800eb4c:	4a27      	ldr	r2, [pc, #156]	@ (800ebec <HAL_TIM_Base_Start_IT+0xe8>)
 800eb4e:	4293      	cmp	r3, r2
 800eb50:	d022      	beq.n	800eb98 <HAL_TIM_Base_Start_IT+0x94>
 800eb52:	687b      	ldr	r3, [r7, #4]
 800eb54:	681b      	ldr	r3, [r3, #0]
 800eb56:	4a26      	ldr	r2, [pc, #152]	@ (800ebf0 <HAL_TIM_Base_Start_IT+0xec>)
 800eb58:	4293      	cmp	r3, r2
 800eb5a:	d01d      	beq.n	800eb98 <HAL_TIM_Base_Start_IT+0x94>
 800eb5c:	687b      	ldr	r3, [r7, #4]
 800eb5e:	681b      	ldr	r3, [r3, #0]
 800eb60:	4a24      	ldr	r2, [pc, #144]	@ (800ebf4 <HAL_TIM_Base_Start_IT+0xf0>)
 800eb62:	4293      	cmp	r3, r2
 800eb64:	d018      	beq.n	800eb98 <HAL_TIM_Base_Start_IT+0x94>
 800eb66:	687b      	ldr	r3, [r7, #4]
 800eb68:	681b      	ldr	r3, [r3, #0]
 800eb6a:	4a23      	ldr	r2, [pc, #140]	@ (800ebf8 <HAL_TIM_Base_Start_IT+0xf4>)
 800eb6c:	4293      	cmp	r3, r2
 800eb6e:	d013      	beq.n	800eb98 <HAL_TIM_Base_Start_IT+0x94>
 800eb70:	687b      	ldr	r3, [r7, #4]
 800eb72:	681b      	ldr	r3, [r3, #0]
 800eb74:	4a21      	ldr	r2, [pc, #132]	@ (800ebfc <HAL_TIM_Base_Start_IT+0xf8>)
 800eb76:	4293      	cmp	r3, r2
 800eb78:	d00e      	beq.n	800eb98 <HAL_TIM_Base_Start_IT+0x94>
 800eb7a:	687b      	ldr	r3, [r7, #4]
 800eb7c:	681b      	ldr	r3, [r3, #0]
 800eb7e:	4a20      	ldr	r2, [pc, #128]	@ (800ec00 <HAL_TIM_Base_Start_IT+0xfc>)
 800eb80:	4293      	cmp	r3, r2
 800eb82:	d009      	beq.n	800eb98 <HAL_TIM_Base_Start_IT+0x94>
 800eb84:	687b      	ldr	r3, [r7, #4]
 800eb86:	681b      	ldr	r3, [r3, #0]
 800eb88:	4a1e      	ldr	r2, [pc, #120]	@ (800ec04 <HAL_TIM_Base_Start_IT+0x100>)
 800eb8a:	4293      	cmp	r3, r2
 800eb8c:	d004      	beq.n	800eb98 <HAL_TIM_Base_Start_IT+0x94>
 800eb8e:	687b      	ldr	r3, [r7, #4]
 800eb90:	681b      	ldr	r3, [r3, #0]
 800eb92:	4a1d      	ldr	r2, [pc, #116]	@ (800ec08 <HAL_TIM_Base_Start_IT+0x104>)
 800eb94:	4293      	cmp	r3, r2
 800eb96:	d115      	bne.n	800ebc4 <HAL_TIM_Base_Start_IT+0xc0>
 800eb98:	687b      	ldr	r3, [r7, #4]
 800eb9a:	681b      	ldr	r3, [r3, #0]
 800eb9c:	689a      	ldr	r2, [r3, #8]
 800eb9e:	4b1b      	ldr	r3, [pc, #108]	@ (800ec0c <HAL_TIM_Base_Start_IT+0x108>)
 800eba0:	4013      	ands	r3, r2
 800eba2:	60fb      	str	r3, [r7, #12]
 800eba4:	68fb      	ldr	r3, [r7, #12]
 800eba6:	2b06      	cmp	r3, #6
 800eba8:	d015      	beq.n	800ebd6 <HAL_TIM_Base_Start_IT+0xd2>
 800ebaa:	68fb      	ldr	r3, [r7, #12]
 800ebac:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800ebb0:	d011      	beq.n	800ebd6 <HAL_TIM_Base_Start_IT+0xd2>
 800ebb2:	687b      	ldr	r3, [r7, #4]
 800ebb4:	681b      	ldr	r3, [r3, #0]
 800ebb6:	681a      	ldr	r2, [r3, #0]
 800ebb8:	687b      	ldr	r3, [r7, #4]
 800ebba:	681b      	ldr	r3, [r3, #0]
 800ebbc:	f042 0201 	orr.w	r2, r2, #1
 800ebc0:	601a      	str	r2, [r3, #0]
 800ebc2:	e008      	b.n	800ebd6 <HAL_TIM_Base_Start_IT+0xd2>
 800ebc4:	687b      	ldr	r3, [r7, #4]
 800ebc6:	681b      	ldr	r3, [r3, #0]
 800ebc8:	681a      	ldr	r2, [r3, #0]
 800ebca:	687b      	ldr	r3, [r7, #4]
 800ebcc:	681b      	ldr	r3, [r3, #0]
 800ebce:	f042 0201 	orr.w	r2, r2, #1
 800ebd2:	601a      	str	r2, [r3, #0]
 800ebd4:	e000      	b.n	800ebd8 <HAL_TIM_Base_Start_IT+0xd4>
 800ebd6:	bf00      	nop
 800ebd8:	2300      	movs	r3, #0
 800ebda:	4618      	mov	r0, r3
 800ebdc:	3714      	adds	r7, #20
 800ebde:	46bd      	mov	sp, r7
 800ebe0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ebe4:	4770      	bx	lr
 800ebe6:	bf00      	nop
 800ebe8:	40010000 	.word	0x40010000
 800ebec:	40000400 	.word	0x40000400
 800ebf0:	40000800 	.word	0x40000800
 800ebf4:	40000c00 	.word	0x40000c00
 800ebf8:	40010400 	.word	0x40010400
 800ebfc:	40001800 	.word	0x40001800
 800ec00:	40014000 	.word	0x40014000
 800ec04:	4000e000 	.word	0x4000e000
 800ec08:	4000e400 	.word	0x4000e400
 800ec0c:	00010007 	.word	0x00010007

0800ec10 <HAL_TIM_PWM_Init>:
 800ec10:	b580      	push	{r7, lr}
 800ec12:	b082      	sub	sp, #8
 800ec14:	af00      	add	r7, sp, #0
 800ec16:	6078      	str	r0, [r7, #4]
 800ec18:	687b      	ldr	r3, [r7, #4]
 800ec1a:	2b00      	cmp	r3, #0
 800ec1c:	d101      	bne.n	800ec22 <HAL_TIM_PWM_Init+0x12>
 800ec1e:	2301      	movs	r3, #1
 800ec20:	e049      	b.n	800ecb6 <HAL_TIM_PWM_Init+0xa6>
 800ec22:	687b      	ldr	r3, [r7, #4]
 800ec24:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800ec28:	b2db      	uxtb	r3, r3
 800ec2a:	2b00      	cmp	r3, #0
 800ec2c:	d106      	bne.n	800ec3c <HAL_TIM_PWM_Init+0x2c>
 800ec2e:	687b      	ldr	r3, [r7, #4]
 800ec30:	2200      	movs	r2, #0
 800ec32:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800ec36:	6878      	ldr	r0, [r7, #4]
 800ec38:	f000 f841 	bl	800ecbe <HAL_TIM_PWM_MspInit>
 800ec3c:	687b      	ldr	r3, [r7, #4]
 800ec3e:	2202      	movs	r2, #2
 800ec40:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ec44:	687b      	ldr	r3, [r7, #4]
 800ec46:	681a      	ldr	r2, [r3, #0]
 800ec48:	687b      	ldr	r3, [r7, #4]
 800ec4a:	3304      	adds	r3, #4
 800ec4c:	4619      	mov	r1, r3
 800ec4e:	4610      	mov	r0, r2
 800ec50:	f001 f848 	bl	800fce4 <TIM_Base_SetConfig>
 800ec54:	687b      	ldr	r3, [r7, #4]
 800ec56:	2201      	movs	r2, #1
 800ec58:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 800ec5c:	687b      	ldr	r3, [r7, #4]
 800ec5e:	2201      	movs	r2, #1
 800ec60:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800ec64:	687b      	ldr	r3, [r7, #4]
 800ec66:	2201      	movs	r2, #1
 800ec68:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800ec6c:	687b      	ldr	r3, [r7, #4]
 800ec6e:	2201      	movs	r2, #1
 800ec70:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800ec74:	687b      	ldr	r3, [r7, #4]
 800ec76:	2201      	movs	r2, #1
 800ec78:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800ec7c:	687b      	ldr	r3, [r7, #4]
 800ec7e:	2201      	movs	r2, #1
 800ec80:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800ec84:	687b      	ldr	r3, [r7, #4]
 800ec86:	2201      	movs	r2, #1
 800ec88:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800ec8c:	687b      	ldr	r3, [r7, #4]
 800ec8e:	2201      	movs	r2, #1
 800ec90:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800ec94:	687b      	ldr	r3, [r7, #4]
 800ec96:	2201      	movs	r2, #1
 800ec98:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800ec9c:	687b      	ldr	r3, [r7, #4]
 800ec9e:	2201      	movs	r2, #1
 800eca0:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800eca4:	687b      	ldr	r3, [r7, #4]
 800eca6:	2201      	movs	r2, #1
 800eca8:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 800ecac:	687b      	ldr	r3, [r7, #4]
 800ecae:	2201      	movs	r2, #1
 800ecb0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ecb4:	2300      	movs	r3, #0
 800ecb6:	4618      	mov	r0, r3
 800ecb8:	3708      	adds	r7, #8
 800ecba:	46bd      	mov	sp, r7
 800ecbc:	bd80      	pop	{r7, pc}

0800ecbe <HAL_TIM_PWM_MspInit>:
 800ecbe:	b480      	push	{r7}
 800ecc0:	b083      	sub	sp, #12
 800ecc2:	af00      	add	r7, sp, #0
 800ecc4:	6078      	str	r0, [r7, #4]
 800ecc6:	bf00      	nop
 800ecc8:	370c      	adds	r7, #12
 800ecca:	46bd      	mov	sp, r7
 800eccc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecd0:	4770      	bx	lr
	...

0800ecd4 <HAL_TIM_PWM_Start>:
 800ecd4:	b580      	push	{r7, lr}
 800ecd6:	b084      	sub	sp, #16
 800ecd8:	af00      	add	r7, sp, #0
 800ecda:	6078      	str	r0, [r7, #4]
 800ecdc:	6039      	str	r1, [r7, #0]
 800ecde:	683b      	ldr	r3, [r7, #0]
 800ece0:	2b00      	cmp	r3, #0
 800ece2:	d109      	bne.n	800ecf8 <HAL_TIM_PWM_Start+0x24>
 800ece4:	687b      	ldr	r3, [r7, #4]
 800ece6:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800ecea:	b2db      	uxtb	r3, r3
 800ecec:	2b01      	cmp	r3, #1
 800ecee:	bf14      	ite	ne
 800ecf0:	2301      	movne	r3, #1
 800ecf2:	2300      	moveq	r3, #0
 800ecf4:	b2db      	uxtb	r3, r3
 800ecf6:	e03c      	b.n	800ed72 <HAL_TIM_PWM_Start+0x9e>
 800ecf8:	683b      	ldr	r3, [r7, #0]
 800ecfa:	2b04      	cmp	r3, #4
 800ecfc:	d109      	bne.n	800ed12 <HAL_TIM_PWM_Start+0x3e>
 800ecfe:	687b      	ldr	r3, [r7, #4]
 800ed00:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 800ed04:	b2db      	uxtb	r3, r3
 800ed06:	2b01      	cmp	r3, #1
 800ed08:	bf14      	ite	ne
 800ed0a:	2301      	movne	r3, #1
 800ed0c:	2300      	moveq	r3, #0
 800ed0e:	b2db      	uxtb	r3, r3
 800ed10:	e02f      	b.n	800ed72 <HAL_TIM_PWM_Start+0x9e>
 800ed12:	683b      	ldr	r3, [r7, #0]
 800ed14:	2b08      	cmp	r3, #8
 800ed16:	d109      	bne.n	800ed2c <HAL_TIM_PWM_Start+0x58>
 800ed18:	687b      	ldr	r3, [r7, #4]
 800ed1a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800ed1e:	b2db      	uxtb	r3, r3
 800ed20:	2b01      	cmp	r3, #1
 800ed22:	bf14      	ite	ne
 800ed24:	2301      	movne	r3, #1
 800ed26:	2300      	moveq	r3, #0
 800ed28:	b2db      	uxtb	r3, r3
 800ed2a:	e022      	b.n	800ed72 <HAL_TIM_PWM_Start+0x9e>
 800ed2c:	683b      	ldr	r3, [r7, #0]
 800ed2e:	2b0c      	cmp	r3, #12
 800ed30:	d109      	bne.n	800ed46 <HAL_TIM_PWM_Start+0x72>
 800ed32:	687b      	ldr	r3, [r7, #4]
 800ed34:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800ed38:	b2db      	uxtb	r3, r3
 800ed3a:	2b01      	cmp	r3, #1
 800ed3c:	bf14      	ite	ne
 800ed3e:	2301      	movne	r3, #1
 800ed40:	2300      	moveq	r3, #0
 800ed42:	b2db      	uxtb	r3, r3
 800ed44:	e015      	b.n	800ed72 <HAL_TIM_PWM_Start+0x9e>
 800ed46:	683b      	ldr	r3, [r7, #0]
 800ed48:	2b10      	cmp	r3, #16
 800ed4a:	d109      	bne.n	800ed60 <HAL_TIM_PWM_Start+0x8c>
 800ed4c:	687b      	ldr	r3, [r7, #4]
 800ed4e:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800ed52:	b2db      	uxtb	r3, r3
 800ed54:	2b01      	cmp	r3, #1
 800ed56:	bf14      	ite	ne
 800ed58:	2301      	movne	r3, #1
 800ed5a:	2300      	moveq	r3, #0
 800ed5c:	b2db      	uxtb	r3, r3
 800ed5e:	e008      	b.n	800ed72 <HAL_TIM_PWM_Start+0x9e>
 800ed60:	687b      	ldr	r3, [r7, #4]
 800ed62:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 800ed66:	b2db      	uxtb	r3, r3
 800ed68:	2b01      	cmp	r3, #1
 800ed6a:	bf14      	ite	ne
 800ed6c:	2301      	movne	r3, #1
 800ed6e:	2300      	moveq	r3, #0
 800ed70:	b2db      	uxtb	r3, r3
 800ed72:	2b00      	cmp	r3, #0
 800ed74:	d001      	beq.n	800ed7a <HAL_TIM_PWM_Start+0xa6>
 800ed76:	2301      	movs	r3, #1
 800ed78:	e0ab      	b.n	800eed2 <HAL_TIM_PWM_Start+0x1fe>
 800ed7a:	683b      	ldr	r3, [r7, #0]
 800ed7c:	2b00      	cmp	r3, #0
 800ed7e:	d104      	bne.n	800ed8a <HAL_TIM_PWM_Start+0xb6>
 800ed80:	687b      	ldr	r3, [r7, #4]
 800ed82:	2202      	movs	r2, #2
 800ed84:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800ed88:	e023      	b.n	800edd2 <HAL_TIM_PWM_Start+0xfe>
 800ed8a:	683b      	ldr	r3, [r7, #0]
 800ed8c:	2b04      	cmp	r3, #4
 800ed8e:	d104      	bne.n	800ed9a <HAL_TIM_PWM_Start+0xc6>
 800ed90:	687b      	ldr	r3, [r7, #4]
 800ed92:	2202      	movs	r2, #2
 800ed94:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800ed98:	e01b      	b.n	800edd2 <HAL_TIM_PWM_Start+0xfe>
 800ed9a:	683b      	ldr	r3, [r7, #0]
 800ed9c:	2b08      	cmp	r3, #8
 800ed9e:	d104      	bne.n	800edaa <HAL_TIM_PWM_Start+0xd6>
 800eda0:	687b      	ldr	r3, [r7, #4]
 800eda2:	2202      	movs	r2, #2
 800eda4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800eda8:	e013      	b.n	800edd2 <HAL_TIM_PWM_Start+0xfe>
 800edaa:	683b      	ldr	r3, [r7, #0]
 800edac:	2b0c      	cmp	r3, #12
 800edae:	d104      	bne.n	800edba <HAL_TIM_PWM_Start+0xe6>
 800edb0:	687b      	ldr	r3, [r7, #4]
 800edb2:	2202      	movs	r2, #2
 800edb4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800edb8:	e00b      	b.n	800edd2 <HAL_TIM_PWM_Start+0xfe>
 800edba:	683b      	ldr	r3, [r7, #0]
 800edbc:	2b10      	cmp	r3, #16
 800edbe:	d104      	bne.n	800edca <HAL_TIM_PWM_Start+0xf6>
 800edc0:	687b      	ldr	r3, [r7, #4]
 800edc2:	2202      	movs	r2, #2
 800edc4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800edc8:	e003      	b.n	800edd2 <HAL_TIM_PWM_Start+0xfe>
 800edca:	687b      	ldr	r3, [r7, #4]
 800edcc:	2202      	movs	r2, #2
 800edce:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800edd2:	687b      	ldr	r3, [r7, #4]
 800edd4:	681b      	ldr	r3, [r3, #0]
 800edd6:	2201      	movs	r2, #1
 800edd8:	6839      	ldr	r1, [r7, #0]
 800edda:	4618      	mov	r0, r3
 800eddc:	f001 fba8 	bl	8010530 <TIM_CCxChannelCmd>
 800ede0:	687b      	ldr	r3, [r7, #4]
 800ede2:	681b      	ldr	r3, [r3, #0]
 800ede4:	4a3d      	ldr	r2, [pc, #244]	@ (800eedc <HAL_TIM_PWM_Start+0x208>)
 800ede6:	4293      	cmp	r3, r2
 800ede8:	d013      	beq.n	800ee12 <HAL_TIM_PWM_Start+0x13e>
 800edea:	687b      	ldr	r3, [r7, #4]
 800edec:	681b      	ldr	r3, [r3, #0]
 800edee:	4a3c      	ldr	r2, [pc, #240]	@ (800eee0 <HAL_TIM_PWM_Start+0x20c>)
 800edf0:	4293      	cmp	r3, r2
 800edf2:	d00e      	beq.n	800ee12 <HAL_TIM_PWM_Start+0x13e>
 800edf4:	687b      	ldr	r3, [r7, #4]
 800edf6:	681b      	ldr	r3, [r3, #0]
 800edf8:	4a3a      	ldr	r2, [pc, #232]	@ (800eee4 <HAL_TIM_PWM_Start+0x210>)
 800edfa:	4293      	cmp	r3, r2
 800edfc:	d009      	beq.n	800ee12 <HAL_TIM_PWM_Start+0x13e>
 800edfe:	687b      	ldr	r3, [r7, #4]
 800ee00:	681b      	ldr	r3, [r3, #0]
 800ee02:	4a39      	ldr	r2, [pc, #228]	@ (800eee8 <HAL_TIM_PWM_Start+0x214>)
 800ee04:	4293      	cmp	r3, r2
 800ee06:	d004      	beq.n	800ee12 <HAL_TIM_PWM_Start+0x13e>
 800ee08:	687b      	ldr	r3, [r7, #4]
 800ee0a:	681b      	ldr	r3, [r3, #0]
 800ee0c:	4a37      	ldr	r2, [pc, #220]	@ (800eeec <HAL_TIM_PWM_Start+0x218>)
 800ee0e:	4293      	cmp	r3, r2
 800ee10:	d101      	bne.n	800ee16 <HAL_TIM_PWM_Start+0x142>
 800ee12:	2301      	movs	r3, #1
 800ee14:	e000      	b.n	800ee18 <HAL_TIM_PWM_Start+0x144>
 800ee16:	2300      	movs	r3, #0
 800ee18:	2b00      	cmp	r3, #0
 800ee1a:	d007      	beq.n	800ee2c <HAL_TIM_PWM_Start+0x158>
 800ee1c:	687b      	ldr	r3, [r7, #4]
 800ee1e:	681b      	ldr	r3, [r3, #0]
 800ee20:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800ee22:	687b      	ldr	r3, [r7, #4]
 800ee24:	681b      	ldr	r3, [r3, #0]
 800ee26:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800ee2a:	645a      	str	r2, [r3, #68]	@ 0x44
 800ee2c:	687b      	ldr	r3, [r7, #4]
 800ee2e:	681b      	ldr	r3, [r3, #0]
 800ee30:	4a2a      	ldr	r2, [pc, #168]	@ (800eedc <HAL_TIM_PWM_Start+0x208>)
 800ee32:	4293      	cmp	r3, r2
 800ee34:	d02c      	beq.n	800ee90 <HAL_TIM_PWM_Start+0x1bc>
 800ee36:	687b      	ldr	r3, [r7, #4]
 800ee38:	681b      	ldr	r3, [r3, #0]
 800ee3a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800ee3e:	d027      	beq.n	800ee90 <HAL_TIM_PWM_Start+0x1bc>
 800ee40:	687b      	ldr	r3, [r7, #4]
 800ee42:	681b      	ldr	r3, [r3, #0]
 800ee44:	4a2a      	ldr	r2, [pc, #168]	@ (800eef0 <HAL_TIM_PWM_Start+0x21c>)
 800ee46:	4293      	cmp	r3, r2
 800ee48:	d022      	beq.n	800ee90 <HAL_TIM_PWM_Start+0x1bc>
 800ee4a:	687b      	ldr	r3, [r7, #4]
 800ee4c:	681b      	ldr	r3, [r3, #0]
 800ee4e:	4a29      	ldr	r2, [pc, #164]	@ (800eef4 <HAL_TIM_PWM_Start+0x220>)
 800ee50:	4293      	cmp	r3, r2
 800ee52:	d01d      	beq.n	800ee90 <HAL_TIM_PWM_Start+0x1bc>
 800ee54:	687b      	ldr	r3, [r7, #4]
 800ee56:	681b      	ldr	r3, [r3, #0]
 800ee58:	4a27      	ldr	r2, [pc, #156]	@ (800eef8 <HAL_TIM_PWM_Start+0x224>)
 800ee5a:	4293      	cmp	r3, r2
 800ee5c:	d018      	beq.n	800ee90 <HAL_TIM_PWM_Start+0x1bc>
 800ee5e:	687b      	ldr	r3, [r7, #4]
 800ee60:	681b      	ldr	r3, [r3, #0]
 800ee62:	4a1f      	ldr	r2, [pc, #124]	@ (800eee0 <HAL_TIM_PWM_Start+0x20c>)
 800ee64:	4293      	cmp	r3, r2
 800ee66:	d013      	beq.n	800ee90 <HAL_TIM_PWM_Start+0x1bc>
 800ee68:	687b      	ldr	r3, [r7, #4]
 800ee6a:	681b      	ldr	r3, [r3, #0]
 800ee6c:	4a23      	ldr	r2, [pc, #140]	@ (800eefc <HAL_TIM_PWM_Start+0x228>)
 800ee6e:	4293      	cmp	r3, r2
 800ee70:	d00e      	beq.n	800ee90 <HAL_TIM_PWM_Start+0x1bc>
 800ee72:	687b      	ldr	r3, [r7, #4]
 800ee74:	681b      	ldr	r3, [r3, #0]
 800ee76:	4a1b      	ldr	r2, [pc, #108]	@ (800eee4 <HAL_TIM_PWM_Start+0x210>)
 800ee78:	4293      	cmp	r3, r2
 800ee7a:	d009      	beq.n	800ee90 <HAL_TIM_PWM_Start+0x1bc>
 800ee7c:	687b      	ldr	r3, [r7, #4]
 800ee7e:	681b      	ldr	r3, [r3, #0]
 800ee80:	4a1f      	ldr	r2, [pc, #124]	@ (800ef00 <HAL_TIM_PWM_Start+0x22c>)
 800ee82:	4293      	cmp	r3, r2
 800ee84:	d004      	beq.n	800ee90 <HAL_TIM_PWM_Start+0x1bc>
 800ee86:	687b      	ldr	r3, [r7, #4]
 800ee88:	681b      	ldr	r3, [r3, #0]
 800ee8a:	4a1e      	ldr	r2, [pc, #120]	@ (800ef04 <HAL_TIM_PWM_Start+0x230>)
 800ee8c:	4293      	cmp	r3, r2
 800ee8e:	d115      	bne.n	800eebc <HAL_TIM_PWM_Start+0x1e8>
 800ee90:	687b      	ldr	r3, [r7, #4]
 800ee92:	681b      	ldr	r3, [r3, #0]
 800ee94:	689a      	ldr	r2, [r3, #8]
 800ee96:	4b1c      	ldr	r3, [pc, #112]	@ (800ef08 <HAL_TIM_PWM_Start+0x234>)
 800ee98:	4013      	ands	r3, r2
 800ee9a:	60fb      	str	r3, [r7, #12]
 800ee9c:	68fb      	ldr	r3, [r7, #12]
 800ee9e:	2b06      	cmp	r3, #6
 800eea0:	d015      	beq.n	800eece <HAL_TIM_PWM_Start+0x1fa>
 800eea2:	68fb      	ldr	r3, [r7, #12]
 800eea4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800eea8:	d011      	beq.n	800eece <HAL_TIM_PWM_Start+0x1fa>
 800eeaa:	687b      	ldr	r3, [r7, #4]
 800eeac:	681b      	ldr	r3, [r3, #0]
 800eeae:	681a      	ldr	r2, [r3, #0]
 800eeb0:	687b      	ldr	r3, [r7, #4]
 800eeb2:	681b      	ldr	r3, [r3, #0]
 800eeb4:	f042 0201 	orr.w	r2, r2, #1
 800eeb8:	601a      	str	r2, [r3, #0]
 800eeba:	e008      	b.n	800eece <HAL_TIM_PWM_Start+0x1fa>
 800eebc:	687b      	ldr	r3, [r7, #4]
 800eebe:	681b      	ldr	r3, [r3, #0]
 800eec0:	681a      	ldr	r2, [r3, #0]
 800eec2:	687b      	ldr	r3, [r7, #4]
 800eec4:	681b      	ldr	r3, [r3, #0]
 800eec6:	f042 0201 	orr.w	r2, r2, #1
 800eeca:	601a      	str	r2, [r3, #0]
 800eecc:	e000      	b.n	800eed0 <HAL_TIM_PWM_Start+0x1fc>
 800eece:	bf00      	nop
 800eed0:	2300      	movs	r3, #0
 800eed2:	4618      	mov	r0, r3
 800eed4:	3710      	adds	r7, #16
 800eed6:	46bd      	mov	sp, r7
 800eed8:	bd80      	pop	{r7, pc}
 800eeda:	bf00      	nop
 800eedc:	40010000 	.word	0x40010000
 800eee0:	40010400 	.word	0x40010400
 800eee4:	40014000 	.word	0x40014000
 800eee8:	40014400 	.word	0x40014400
 800eeec:	40014800 	.word	0x40014800
 800eef0:	40000400 	.word	0x40000400
 800eef4:	40000800 	.word	0x40000800
 800eef8:	40000c00 	.word	0x40000c00
 800eefc:	40001800 	.word	0x40001800
 800ef00:	4000e000 	.word	0x4000e000
 800ef04:	4000e400 	.word	0x4000e400
 800ef08:	00010007 	.word	0x00010007

0800ef0c <HAL_TIM_PWM_Stop>:
 800ef0c:	b580      	push	{r7, lr}
 800ef0e:	b082      	sub	sp, #8
 800ef10:	af00      	add	r7, sp, #0
 800ef12:	6078      	str	r0, [r7, #4]
 800ef14:	6039      	str	r1, [r7, #0]
 800ef16:	687b      	ldr	r3, [r7, #4]
 800ef18:	681b      	ldr	r3, [r3, #0]
 800ef1a:	2200      	movs	r2, #0
 800ef1c:	6839      	ldr	r1, [r7, #0]
 800ef1e:	4618      	mov	r0, r3
 800ef20:	f001 fb06 	bl	8010530 <TIM_CCxChannelCmd>
 800ef24:	687b      	ldr	r3, [r7, #4]
 800ef26:	681b      	ldr	r3, [r3, #0]
 800ef28:	4a3e      	ldr	r2, [pc, #248]	@ (800f024 <HAL_TIM_PWM_Stop+0x118>)
 800ef2a:	4293      	cmp	r3, r2
 800ef2c:	d013      	beq.n	800ef56 <HAL_TIM_PWM_Stop+0x4a>
 800ef2e:	687b      	ldr	r3, [r7, #4]
 800ef30:	681b      	ldr	r3, [r3, #0]
 800ef32:	4a3d      	ldr	r2, [pc, #244]	@ (800f028 <HAL_TIM_PWM_Stop+0x11c>)
 800ef34:	4293      	cmp	r3, r2
 800ef36:	d00e      	beq.n	800ef56 <HAL_TIM_PWM_Stop+0x4a>
 800ef38:	687b      	ldr	r3, [r7, #4]
 800ef3a:	681b      	ldr	r3, [r3, #0]
 800ef3c:	4a3b      	ldr	r2, [pc, #236]	@ (800f02c <HAL_TIM_PWM_Stop+0x120>)
 800ef3e:	4293      	cmp	r3, r2
 800ef40:	d009      	beq.n	800ef56 <HAL_TIM_PWM_Stop+0x4a>
 800ef42:	687b      	ldr	r3, [r7, #4]
 800ef44:	681b      	ldr	r3, [r3, #0]
 800ef46:	4a3a      	ldr	r2, [pc, #232]	@ (800f030 <HAL_TIM_PWM_Stop+0x124>)
 800ef48:	4293      	cmp	r3, r2
 800ef4a:	d004      	beq.n	800ef56 <HAL_TIM_PWM_Stop+0x4a>
 800ef4c:	687b      	ldr	r3, [r7, #4]
 800ef4e:	681b      	ldr	r3, [r3, #0]
 800ef50:	4a38      	ldr	r2, [pc, #224]	@ (800f034 <HAL_TIM_PWM_Stop+0x128>)
 800ef52:	4293      	cmp	r3, r2
 800ef54:	d101      	bne.n	800ef5a <HAL_TIM_PWM_Stop+0x4e>
 800ef56:	2301      	movs	r3, #1
 800ef58:	e000      	b.n	800ef5c <HAL_TIM_PWM_Stop+0x50>
 800ef5a:	2300      	movs	r3, #0
 800ef5c:	2b00      	cmp	r3, #0
 800ef5e:	d017      	beq.n	800ef90 <HAL_TIM_PWM_Stop+0x84>
 800ef60:	687b      	ldr	r3, [r7, #4]
 800ef62:	681b      	ldr	r3, [r3, #0]
 800ef64:	6a1a      	ldr	r2, [r3, #32]
 800ef66:	f241 1311 	movw	r3, #4369	@ 0x1111
 800ef6a:	4013      	ands	r3, r2
 800ef6c:	2b00      	cmp	r3, #0
 800ef6e:	d10f      	bne.n	800ef90 <HAL_TIM_PWM_Stop+0x84>
 800ef70:	687b      	ldr	r3, [r7, #4]
 800ef72:	681b      	ldr	r3, [r3, #0]
 800ef74:	6a1a      	ldr	r2, [r3, #32]
 800ef76:	f240 4344 	movw	r3, #1092	@ 0x444
 800ef7a:	4013      	ands	r3, r2
 800ef7c:	2b00      	cmp	r3, #0
 800ef7e:	d107      	bne.n	800ef90 <HAL_TIM_PWM_Stop+0x84>
 800ef80:	687b      	ldr	r3, [r7, #4]
 800ef82:	681b      	ldr	r3, [r3, #0]
 800ef84:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800ef86:	687b      	ldr	r3, [r7, #4]
 800ef88:	681b      	ldr	r3, [r3, #0]
 800ef8a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800ef8e:	645a      	str	r2, [r3, #68]	@ 0x44
 800ef90:	687b      	ldr	r3, [r7, #4]
 800ef92:	681b      	ldr	r3, [r3, #0]
 800ef94:	6a1a      	ldr	r2, [r3, #32]
 800ef96:	f241 1311 	movw	r3, #4369	@ 0x1111
 800ef9a:	4013      	ands	r3, r2
 800ef9c:	2b00      	cmp	r3, #0
 800ef9e:	d10f      	bne.n	800efc0 <HAL_TIM_PWM_Stop+0xb4>
 800efa0:	687b      	ldr	r3, [r7, #4]
 800efa2:	681b      	ldr	r3, [r3, #0]
 800efa4:	6a1a      	ldr	r2, [r3, #32]
 800efa6:	f240 4344 	movw	r3, #1092	@ 0x444
 800efaa:	4013      	ands	r3, r2
 800efac:	2b00      	cmp	r3, #0
 800efae:	d107      	bne.n	800efc0 <HAL_TIM_PWM_Stop+0xb4>
 800efb0:	687b      	ldr	r3, [r7, #4]
 800efb2:	681b      	ldr	r3, [r3, #0]
 800efb4:	681a      	ldr	r2, [r3, #0]
 800efb6:	687b      	ldr	r3, [r7, #4]
 800efb8:	681b      	ldr	r3, [r3, #0]
 800efba:	f022 0201 	bic.w	r2, r2, #1
 800efbe:	601a      	str	r2, [r3, #0]
 800efc0:	683b      	ldr	r3, [r7, #0]
 800efc2:	2b00      	cmp	r3, #0
 800efc4:	d104      	bne.n	800efd0 <HAL_TIM_PWM_Stop+0xc4>
 800efc6:	687b      	ldr	r3, [r7, #4]
 800efc8:	2201      	movs	r2, #1
 800efca:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800efce:	e023      	b.n	800f018 <HAL_TIM_PWM_Stop+0x10c>
 800efd0:	683b      	ldr	r3, [r7, #0]
 800efd2:	2b04      	cmp	r3, #4
 800efd4:	d104      	bne.n	800efe0 <HAL_TIM_PWM_Stop+0xd4>
 800efd6:	687b      	ldr	r3, [r7, #4]
 800efd8:	2201      	movs	r2, #1
 800efda:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800efde:	e01b      	b.n	800f018 <HAL_TIM_PWM_Stop+0x10c>
 800efe0:	683b      	ldr	r3, [r7, #0]
 800efe2:	2b08      	cmp	r3, #8
 800efe4:	d104      	bne.n	800eff0 <HAL_TIM_PWM_Stop+0xe4>
 800efe6:	687b      	ldr	r3, [r7, #4]
 800efe8:	2201      	movs	r2, #1
 800efea:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800efee:	e013      	b.n	800f018 <HAL_TIM_PWM_Stop+0x10c>
 800eff0:	683b      	ldr	r3, [r7, #0]
 800eff2:	2b0c      	cmp	r3, #12
 800eff4:	d104      	bne.n	800f000 <HAL_TIM_PWM_Stop+0xf4>
 800eff6:	687b      	ldr	r3, [r7, #4]
 800eff8:	2201      	movs	r2, #1
 800effa:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800effe:	e00b      	b.n	800f018 <HAL_TIM_PWM_Stop+0x10c>
 800f000:	683b      	ldr	r3, [r7, #0]
 800f002:	2b10      	cmp	r3, #16
 800f004:	d104      	bne.n	800f010 <HAL_TIM_PWM_Stop+0x104>
 800f006:	687b      	ldr	r3, [r7, #4]
 800f008:	2201      	movs	r2, #1
 800f00a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800f00e:	e003      	b.n	800f018 <HAL_TIM_PWM_Stop+0x10c>
 800f010:	687b      	ldr	r3, [r7, #4]
 800f012:	2201      	movs	r2, #1
 800f014:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800f018:	2300      	movs	r3, #0
 800f01a:	4618      	mov	r0, r3
 800f01c:	3708      	adds	r7, #8
 800f01e:	46bd      	mov	sp, r7
 800f020:	bd80      	pop	{r7, pc}
 800f022:	bf00      	nop
 800f024:	40010000 	.word	0x40010000
 800f028:	40010400 	.word	0x40010400
 800f02c:	40014000 	.word	0x40014000
 800f030:	40014400 	.word	0x40014400
 800f034:	40014800 	.word	0x40014800

0800f038 <HAL_TIM_PWM_Start_DMA>:
 800f038:	b580      	push	{r7, lr}
 800f03a:	b086      	sub	sp, #24
 800f03c:	af00      	add	r7, sp, #0
 800f03e:	60f8      	str	r0, [r7, #12]
 800f040:	60b9      	str	r1, [r7, #8]
 800f042:	607a      	str	r2, [r7, #4]
 800f044:	807b      	strh	r3, [r7, #2]
 800f046:	2300      	movs	r3, #0
 800f048:	75fb      	strb	r3, [r7, #23]
 800f04a:	68bb      	ldr	r3, [r7, #8]
 800f04c:	2b00      	cmp	r3, #0
 800f04e:	d109      	bne.n	800f064 <HAL_TIM_PWM_Start_DMA+0x2c>
 800f050:	68fb      	ldr	r3, [r7, #12]
 800f052:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800f056:	b2db      	uxtb	r3, r3
 800f058:	2b02      	cmp	r3, #2
 800f05a:	bf0c      	ite	eq
 800f05c:	2301      	moveq	r3, #1
 800f05e:	2300      	movne	r3, #0
 800f060:	b2db      	uxtb	r3, r3
 800f062:	e03c      	b.n	800f0de <HAL_TIM_PWM_Start_DMA+0xa6>
 800f064:	68bb      	ldr	r3, [r7, #8]
 800f066:	2b04      	cmp	r3, #4
 800f068:	d109      	bne.n	800f07e <HAL_TIM_PWM_Start_DMA+0x46>
 800f06a:	68fb      	ldr	r3, [r7, #12]
 800f06c:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 800f070:	b2db      	uxtb	r3, r3
 800f072:	2b02      	cmp	r3, #2
 800f074:	bf0c      	ite	eq
 800f076:	2301      	moveq	r3, #1
 800f078:	2300      	movne	r3, #0
 800f07a:	b2db      	uxtb	r3, r3
 800f07c:	e02f      	b.n	800f0de <HAL_TIM_PWM_Start_DMA+0xa6>
 800f07e:	68bb      	ldr	r3, [r7, #8]
 800f080:	2b08      	cmp	r3, #8
 800f082:	d109      	bne.n	800f098 <HAL_TIM_PWM_Start_DMA+0x60>
 800f084:	68fb      	ldr	r3, [r7, #12]
 800f086:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800f08a:	b2db      	uxtb	r3, r3
 800f08c:	2b02      	cmp	r3, #2
 800f08e:	bf0c      	ite	eq
 800f090:	2301      	moveq	r3, #1
 800f092:	2300      	movne	r3, #0
 800f094:	b2db      	uxtb	r3, r3
 800f096:	e022      	b.n	800f0de <HAL_TIM_PWM_Start_DMA+0xa6>
 800f098:	68bb      	ldr	r3, [r7, #8]
 800f09a:	2b0c      	cmp	r3, #12
 800f09c:	d109      	bne.n	800f0b2 <HAL_TIM_PWM_Start_DMA+0x7a>
 800f09e:	68fb      	ldr	r3, [r7, #12]
 800f0a0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800f0a4:	b2db      	uxtb	r3, r3
 800f0a6:	2b02      	cmp	r3, #2
 800f0a8:	bf0c      	ite	eq
 800f0aa:	2301      	moveq	r3, #1
 800f0ac:	2300      	movne	r3, #0
 800f0ae:	b2db      	uxtb	r3, r3
 800f0b0:	e015      	b.n	800f0de <HAL_TIM_PWM_Start_DMA+0xa6>
 800f0b2:	68bb      	ldr	r3, [r7, #8]
 800f0b4:	2b10      	cmp	r3, #16
 800f0b6:	d109      	bne.n	800f0cc <HAL_TIM_PWM_Start_DMA+0x94>
 800f0b8:	68fb      	ldr	r3, [r7, #12]
 800f0ba:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800f0be:	b2db      	uxtb	r3, r3
 800f0c0:	2b02      	cmp	r3, #2
 800f0c2:	bf0c      	ite	eq
 800f0c4:	2301      	moveq	r3, #1
 800f0c6:	2300      	movne	r3, #0
 800f0c8:	b2db      	uxtb	r3, r3
 800f0ca:	e008      	b.n	800f0de <HAL_TIM_PWM_Start_DMA+0xa6>
 800f0cc:	68fb      	ldr	r3, [r7, #12]
 800f0ce:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 800f0d2:	b2db      	uxtb	r3, r3
 800f0d4:	2b02      	cmp	r3, #2
 800f0d6:	bf0c      	ite	eq
 800f0d8:	2301      	moveq	r3, #1
 800f0da:	2300      	movne	r3, #0
 800f0dc:	b2db      	uxtb	r3, r3
 800f0de:	2b00      	cmp	r3, #0
 800f0e0:	d001      	beq.n	800f0e6 <HAL_TIM_PWM_Start_DMA+0xae>
 800f0e2:	2302      	movs	r3, #2
 800f0e4:	e1ba      	b.n	800f45c <HAL_TIM_PWM_Start_DMA+0x424>
 800f0e6:	68bb      	ldr	r3, [r7, #8]
 800f0e8:	2b00      	cmp	r3, #0
 800f0ea:	d109      	bne.n	800f100 <HAL_TIM_PWM_Start_DMA+0xc8>
 800f0ec:	68fb      	ldr	r3, [r7, #12]
 800f0ee:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800f0f2:	b2db      	uxtb	r3, r3
 800f0f4:	2b01      	cmp	r3, #1
 800f0f6:	bf0c      	ite	eq
 800f0f8:	2301      	moveq	r3, #1
 800f0fa:	2300      	movne	r3, #0
 800f0fc:	b2db      	uxtb	r3, r3
 800f0fe:	e03c      	b.n	800f17a <HAL_TIM_PWM_Start_DMA+0x142>
 800f100:	68bb      	ldr	r3, [r7, #8]
 800f102:	2b04      	cmp	r3, #4
 800f104:	d109      	bne.n	800f11a <HAL_TIM_PWM_Start_DMA+0xe2>
 800f106:	68fb      	ldr	r3, [r7, #12]
 800f108:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 800f10c:	b2db      	uxtb	r3, r3
 800f10e:	2b01      	cmp	r3, #1
 800f110:	bf0c      	ite	eq
 800f112:	2301      	moveq	r3, #1
 800f114:	2300      	movne	r3, #0
 800f116:	b2db      	uxtb	r3, r3
 800f118:	e02f      	b.n	800f17a <HAL_TIM_PWM_Start_DMA+0x142>
 800f11a:	68bb      	ldr	r3, [r7, #8]
 800f11c:	2b08      	cmp	r3, #8
 800f11e:	d109      	bne.n	800f134 <HAL_TIM_PWM_Start_DMA+0xfc>
 800f120:	68fb      	ldr	r3, [r7, #12]
 800f122:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800f126:	b2db      	uxtb	r3, r3
 800f128:	2b01      	cmp	r3, #1
 800f12a:	bf0c      	ite	eq
 800f12c:	2301      	moveq	r3, #1
 800f12e:	2300      	movne	r3, #0
 800f130:	b2db      	uxtb	r3, r3
 800f132:	e022      	b.n	800f17a <HAL_TIM_PWM_Start_DMA+0x142>
 800f134:	68bb      	ldr	r3, [r7, #8]
 800f136:	2b0c      	cmp	r3, #12
 800f138:	d109      	bne.n	800f14e <HAL_TIM_PWM_Start_DMA+0x116>
 800f13a:	68fb      	ldr	r3, [r7, #12]
 800f13c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800f140:	b2db      	uxtb	r3, r3
 800f142:	2b01      	cmp	r3, #1
 800f144:	bf0c      	ite	eq
 800f146:	2301      	moveq	r3, #1
 800f148:	2300      	movne	r3, #0
 800f14a:	b2db      	uxtb	r3, r3
 800f14c:	e015      	b.n	800f17a <HAL_TIM_PWM_Start_DMA+0x142>
 800f14e:	68bb      	ldr	r3, [r7, #8]
 800f150:	2b10      	cmp	r3, #16
 800f152:	d109      	bne.n	800f168 <HAL_TIM_PWM_Start_DMA+0x130>
 800f154:	68fb      	ldr	r3, [r7, #12]
 800f156:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800f15a:	b2db      	uxtb	r3, r3
 800f15c:	2b01      	cmp	r3, #1
 800f15e:	bf0c      	ite	eq
 800f160:	2301      	moveq	r3, #1
 800f162:	2300      	movne	r3, #0
 800f164:	b2db      	uxtb	r3, r3
 800f166:	e008      	b.n	800f17a <HAL_TIM_PWM_Start_DMA+0x142>
 800f168:	68fb      	ldr	r3, [r7, #12]
 800f16a:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 800f16e:	b2db      	uxtb	r3, r3
 800f170:	2b01      	cmp	r3, #1
 800f172:	bf0c      	ite	eq
 800f174:	2301      	moveq	r3, #1
 800f176:	2300      	movne	r3, #0
 800f178:	b2db      	uxtb	r3, r3
 800f17a:	2b00      	cmp	r3, #0
 800f17c:	d034      	beq.n	800f1e8 <HAL_TIM_PWM_Start_DMA+0x1b0>
 800f17e:	687b      	ldr	r3, [r7, #4]
 800f180:	2b00      	cmp	r3, #0
 800f182:	d002      	beq.n	800f18a <HAL_TIM_PWM_Start_DMA+0x152>
 800f184:	887b      	ldrh	r3, [r7, #2]
 800f186:	2b00      	cmp	r3, #0
 800f188:	d101      	bne.n	800f18e <HAL_TIM_PWM_Start_DMA+0x156>
 800f18a:	2301      	movs	r3, #1
 800f18c:	e166      	b.n	800f45c <HAL_TIM_PWM_Start_DMA+0x424>
 800f18e:	68bb      	ldr	r3, [r7, #8]
 800f190:	2b00      	cmp	r3, #0
 800f192:	d104      	bne.n	800f19e <HAL_TIM_PWM_Start_DMA+0x166>
 800f194:	68fb      	ldr	r3, [r7, #12]
 800f196:	2202      	movs	r2, #2
 800f198:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800f19c:	e026      	b.n	800f1ec <HAL_TIM_PWM_Start_DMA+0x1b4>
 800f19e:	68bb      	ldr	r3, [r7, #8]
 800f1a0:	2b04      	cmp	r3, #4
 800f1a2:	d104      	bne.n	800f1ae <HAL_TIM_PWM_Start_DMA+0x176>
 800f1a4:	68fb      	ldr	r3, [r7, #12]
 800f1a6:	2202      	movs	r2, #2
 800f1a8:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800f1ac:	e01e      	b.n	800f1ec <HAL_TIM_PWM_Start_DMA+0x1b4>
 800f1ae:	68bb      	ldr	r3, [r7, #8]
 800f1b0:	2b08      	cmp	r3, #8
 800f1b2:	d104      	bne.n	800f1be <HAL_TIM_PWM_Start_DMA+0x186>
 800f1b4:	68fb      	ldr	r3, [r7, #12]
 800f1b6:	2202      	movs	r2, #2
 800f1b8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800f1bc:	e016      	b.n	800f1ec <HAL_TIM_PWM_Start_DMA+0x1b4>
 800f1be:	68bb      	ldr	r3, [r7, #8]
 800f1c0:	2b0c      	cmp	r3, #12
 800f1c2:	d104      	bne.n	800f1ce <HAL_TIM_PWM_Start_DMA+0x196>
 800f1c4:	68fb      	ldr	r3, [r7, #12]
 800f1c6:	2202      	movs	r2, #2
 800f1c8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800f1cc:	e00e      	b.n	800f1ec <HAL_TIM_PWM_Start_DMA+0x1b4>
 800f1ce:	68bb      	ldr	r3, [r7, #8]
 800f1d0:	2b10      	cmp	r3, #16
 800f1d2:	d104      	bne.n	800f1de <HAL_TIM_PWM_Start_DMA+0x1a6>
 800f1d4:	68fb      	ldr	r3, [r7, #12]
 800f1d6:	2202      	movs	r2, #2
 800f1d8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800f1dc:	e006      	b.n	800f1ec <HAL_TIM_PWM_Start_DMA+0x1b4>
 800f1de:	68fb      	ldr	r3, [r7, #12]
 800f1e0:	2202      	movs	r2, #2
 800f1e2:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800f1e6:	e001      	b.n	800f1ec <HAL_TIM_PWM_Start_DMA+0x1b4>
 800f1e8:	2301      	movs	r3, #1
 800f1ea:	e137      	b.n	800f45c <HAL_TIM_PWM_Start_DMA+0x424>
 800f1ec:	68bb      	ldr	r3, [r7, #8]
 800f1ee:	2b0c      	cmp	r3, #12
 800f1f0:	f200 80ae 	bhi.w	800f350 <HAL_TIM_PWM_Start_DMA+0x318>
 800f1f4:	a201      	add	r2, pc, #4	@ (adr r2, 800f1fc <HAL_TIM_PWM_Start_DMA+0x1c4>)
 800f1f6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f1fa:	bf00      	nop
 800f1fc:	0800f231 	.word	0x0800f231
 800f200:	0800f351 	.word	0x0800f351
 800f204:	0800f351 	.word	0x0800f351
 800f208:	0800f351 	.word	0x0800f351
 800f20c:	0800f279 	.word	0x0800f279
 800f210:	0800f351 	.word	0x0800f351
 800f214:	0800f351 	.word	0x0800f351
 800f218:	0800f351 	.word	0x0800f351
 800f21c:	0800f2c1 	.word	0x0800f2c1
 800f220:	0800f351 	.word	0x0800f351
 800f224:	0800f351 	.word	0x0800f351
 800f228:	0800f351 	.word	0x0800f351
 800f22c:	0800f309 	.word	0x0800f309
 800f230:	68fb      	ldr	r3, [r7, #12]
 800f232:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f234:	4a8b      	ldr	r2, [pc, #556]	@ (800f464 <HAL_TIM_PWM_Start_DMA+0x42c>)
 800f236:	63da      	str	r2, [r3, #60]	@ 0x3c
 800f238:	68fb      	ldr	r3, [r7, #12]
 800f23a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f23c:	4a8a      	ldr	r2, [pc, #552]	@ (800f468 <HAL_TIM_PWM_Start_DMA+0x430>)
 800f23e:	641a      	str	r2, [r3, #64]	@ 0x40
 800f240:	68fb      	ldr	r3, [r7, #12]
 800f242:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f244:	4a89      	ldr	r2, [pc, #548]	@ (800f46c <HAL_TIM_PWM_Start_DMA+0x434>)
 800f246:	64da      	str	r2, [r3, #76]	@ 0x4c
 800f248:	68fb      	ldr	r3, [r7, #12]
 800f24a:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 800f24c:	6879      	ldr	r1, [r7, #4]
 800f24e:	68fb      	ldr	r3, [r7, #12]
 800f250:	681b      	ldr	r3, [r3, #0]
 800f252:	3334      	adds	r3, #52	@ 0x34
 800f254:	461a      	mov	r2, r3
 800f256:	887b      	ldrh	r3, [r7, #2]
 800f258:	f7f8 fb82 	bl	8007960 <HAL_DMA_Start_IT>
 800f25c:	4603      	mov	r3, r0
 800f25e:	2b00      	cmp	r3, #0
 800f260:	d001      	beq.n	800f266 <HAL_TIM_PWM_Start_DMA+0x22e>
 800f262:	2301      	movs	r3, #1
 800f264:	e0fa      	b.n	800f45c <HAL_TIM_PWM_Start_DMA+0x424>
 800f266:	68fb      	ldr	r3, [r7, #12]
 800f268:	681b      	ldr	r3, [r3, #0]
 800f26a:	68da      	ldr	r2, [r3, #12]
 800f26c:	68fb      	ldr	r3, [r7, #12]
 800f26e:	681b      	ldr	r3, [r3, #0]
 800f270:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800f274:	60da      	str	r2, [r3, #12]
 800f276:	e06e      	b.n	800f356 <HAL_TIM_PWM_Start_DMA+0x31e>
 800f278:	68fb      	ldr	r3, [r7, #12]
 800f27a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f27c:	4a79      	ldr	r2, [pc, #484]	@ (800f464 <HAL_TIM_PWM_Start_DMA+0x42c>)
 800f27e:	63da      	str	r2, [r3, #60]	@ 0x3c
 800f280:	68fb      	ldr	r3, [r7, #12]
 800f282:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f284:	4a78      	ldr	r2, [pc, #480]	@ (800f468 <HAL_TIM_PWM_Start_DMA+0x430>)
 800f286:	641a      	str	r2, [r3, #64]	@ 0x40
 800f288:	68fb      	ldr	r3, [r7, #12]
 800f28a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f28c:	4a77      	ldr	r2, [pc, #476]	@ (800f46c <HAL_TIM_PWM_Start_DMA+0x434>)
 800f28e:	64da      	str	r2, [r3, #76]	@ 0x4c
 800f290:	68fb      	ldr	r3, [r7, #12]
 800f292:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 800f294:	6879      	ldr	r1, [r7, #4]
 800f296:	68fb      	ldr	r3, [r7, #12]
 800f298:	681b      	ldr	r3, [r3, #0]
 800f29a:	3338      	adds	r3, #56	@ 0x38
 800f29c:	461a      	mov	r2, r3
 800f29e:	887b      	ldrh	r3, [r7, #2]
 800f2a0:	f7f8 fb5e 	bl	8007960 <HAL_DMA_Start_IT>
 800f2a4:	4603      	mov	r3, r0
 800f2a6:	2b00      	cmp	r3, #0
 800f2a8:	d001      	beq.n	800f2ae <HAL_TIM_PWM_Start_DMA+0x276>
 800f2aa:	2301      	movs	r3, #1
 800f2ac:	e0d6      	b.n	800f45c <HAL_TIM_PWM_Start_DMA+0x424>
 800f2ae:	68fb      	ldr	r3, [r7, #12]
 800f2b0:	681b      	ldr	r3, [r3, #0]
 800f2b2:	68da      	ldr	r2, [r3, #12]
 800f2b4:	68fb      	ldr	r3, [r7, #12]
 800f2b6:	681b      	ldr	r3, [r3, #0]
 800f2b8:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800f2bc:	60da      	str	r2, [r3, #12]
 800f2be:	e04a      	b.n	800f356 <HAL_TIM_PWM_Start_DMA+0x31e>
 800f2c0:	68fb      	ldr	r3, [r7, #12]
 800f2c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f2c4:	4a67      	ldr	r2, [pc, #412]	@ (800f464 <HAL_TIM_PWM_Start_DMA+0x42c>)
 800f2c6:	63da      	str	r2, [r3, #60]	@ 0x3c
 800f2c8:	68fb      	ldr	r3, [r7, #12]
 800f2ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f2cc:	4a66      	ldr	r2, [pc, #408]	@ (800f468 <HAL_TIM_PWM_Start_DMA+0x430>)
 800f2ce:	641a      	str	r2, [r3, #64]	@ 0x40
 800f2d0:	68fb      	ldr	r3, [r7, #12]
 800f2d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f2d4:	4a65      	ldr	r2, [pc, #404]	@ (800f46c <HAL_TIM_PWM_Start_DMA+0x434>)
 800f2d6:	64da      	str	r2, [r3, #76]	@ 0x4c
 800f2d8:	68fb      	ldr	r3, [r7, #12]
 800f2da:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 800f2dc:	6879      	ldr	r1, [r7, #4]
 800f2de:	68fb      	ldr	r3, [r7, #12]
 800f2e0:	681b      	ldr	r3, [r3, #0]
 800f2e2:	333c      	adds	r3, #60	@ 0x3c
 800f2e4:	461a      	mov	r2, r3
 800f2e6:	887b      	ldrh	r3, [r7, #2]
 800f2e8:	f7f8 fb3a 	bl	8007960 <HAL_DMA_Start_IT>
 800f2ec:	4603      	mov	r3, r0
 800f2ee:	2b00      	cmp	r3, #0
 800f2f0:	d001      	beq.n	800f2f6 <HAL_TIM_PWM_Start_DMA+0x2be>
 800f2f2:	2301      	movs	r3, #1
 800f2f4:	e0b2      	b.n	800f45c <HAL_TIM_PWM_Start_DMA+0x424>
 800f2f6:	68fb      	ldr	r3, [r7, #12]
 800f2f8:	681b      	ldr	r3, [r3, #0]
 800f2fa:	68da      	ldr	r2, [r3, #12]
 800f2fc:	68fb      	ldr	r3, [r7, #12]
 800f2fe:	681b      	ldr	r3, [r3, #0]
 800f300:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800f304:	60da      	str	r2, [r3, #12]
 800f306:	e026      	b.n	800f356 <HAL_TIM_PWM_Start_DMA+0x31e>
 800f308:	68fb      	ldr	r3, [r7, #12]
 800f30a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f30c:	4a55      	ldr	r2, [pc, #340]	@ (800f464 <HAL_TIM_PWM_Start_DMA+0x42c>)
 800f30e:	63da      	str	r2, [r3, #60]	@ 0x3c
 800f310:	68fb      	ldr	r3, [r7, #12]
 800f312:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f314:	4a54      	ldr	r2, [pc, #336]	@ (800f468 <HAL_TIM_PWM_Start_DMA+0x430>)
 800f316:	641a      	str	r2, [r3, #64]	@ 0x40
 800f318:	68fb      	ldr	r3, [r7, #12]
 800f31a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f31c:	4a53      	ldr	r2, [pc, #332]	@ (800f46c <HAL_TIM_PWM_Start_DMA+0x434>)
 800f31e:	64da      	str	r2, [r3, #76]	@ 0x4c
 800f320:	68fb      	ldr	r3, [r7, #12]
 800f322:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 800f324:	6879      	ldr	r1, [r7, #4]
 800f326:	68fb      	ldr	r3, [r7, #12]
 800f328:	681b      	ldr	r3, [r3, #0]
 800f32a:	3340      	adds	r3, #64	@ 0x40
 800f32c:	461a      	mov	r2, r3
 800f32e:	887b      	ldrh	r3, [r7, #2]
 800f330:	f7f8 fb16 	bl	8007960 <HAL_DMA_Start_IT>
 800f334:	4603      	mov	r3, r0
 800f336:	2b00      	cmp	r3, #0
 800f338:	d001      	beq.n	800f33e <HAL_TIM_PWM_Start_DMA+0x306>
 800f33a:	2301      	movs	r3, #1
 800f33c:	e08e      	b.n	800f45c <HAL_TIM_PWM_Start_DMA+0x424>
 800f33e:	68fb      	ldr	r3, [r7, #12]
 800f340:	681b      	ldr	r3, [r3, #0]
 800f342:	68da      	ldr	r2, [r3, #12]
 800f344:	68fb      	ldr	r3, [r7, #12]
 800f346:	681b      	ldr	r3, [r3, #0]
 800f348:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800f34c:	60da      	str	r2, [r3, #12]
 800f34e:	e002      	b.n	800f356 <HAL_TIM_PWM_Start_DMA+0x31e>
 800f350:	2301      	movs	r3, #1
 800f352:	75fb      	strb	r3, [r7, #23]
 800f354:	bf00      	nop
 800f356:	7dfb      	ldrb	r3, [r7, #23]
 800f358:	2b00      	cmp	r3, #0
 800f35a:	d17e      	bne.n	800f45a <HAL_TIM_PWM_Start_DMA+0x422>
 800f35c:	68fb      	ldr	r3, [r7, #12]
 800f35e:	681b      	ldr	r3, [r3, #0]
 800f360:	2201      	movs	r2, #1
 800f362:	68b9      	ldr	r1, [r7, #8]
 800f364:	4618      	mov	r0, r3
 800f366:	f001 f8e3 	bl	8010530 <TIM_CCxChannelCmd>
 800f36a:	68fb      	ldr	r3, [r7, #12]
 800f36c:	681b      	ldr	r3, [r3, #0]
 800f36e:	4a40      	ldr	r2, [pc, #256]	@ (800f470 <HAL_TIM_PWM_Start_DMA+0x438>)
 800f370:	4293      	cmp	r3, r2
 800f372:	d013      	beq.n	800f39c <HAL_TIM_PWM_Start_DMA+0x364>
 800f374:	68fb      	ldr	r3, [r7, #12]
 800f376:	681b      	ldr	r3, [r3, #0]
 800f378:	4a3e      	ldr	r2, [pc, #248]	@ (800f474 <HAL_TIM_PWM_Start_DMA+0x43c>)
 800f37a:	4293      	cmp	r3, r2
 800f37c:	d00e      	beq.n	800f39c <HAL_TIM_PWM_Start_DMA+0x364>
 800f37e:	68fb      	ldr	r3, [r7, #12]
 800f380:	681b      	ldr	r3, [r3, #0]
 800f382:	4a3d      	ldr	r2, [pc, #244]	@ (800f478 <HAL_TIM_PWM_Start_DMA+0x440>)
 800f384:	4293      	cmp	r3, r2
 800f386:	d009      	beq.n	800f39c <HAL_TIM_PWM_Start_DMA+0x364>
 800f388:	68fb      	ldr	r3, [r7, #12]
 800f38a:	681b      	ldr	r3, [r3, #0]
 800f38c:	4a3b      	ldr	r2, [pc, #236]	@ (800f47c <HAL_TIM_PWM_Start_DMA+0x444>)
 800f38e:	4293      	cmp	r3, r2
 800f390:	d004      	beq.n	800f39c <HAL_TIM_PWM_Start_DMA+0x364>
 800f392:	68fb      	ldr	r3, [r7, #12]
 800f394:	681b      	ldr	r3, [r3, #0]
 800f396:	4a3a      	ldr	r2, [pc, #232]	@ (800f480 <HAL_TIM_PWM_Start_DMA+0x448>)
 800f398:	4293      	cmp	r3, r2
 800f39a:	d101      	bne.n	800f3a0 <HAL_TIM_PWM_Start_DMA+0x368>
 800f39c:	2301      	movs	r3, #1
 800f39e:	e000      	b.n	800f3a2 <HAL_TIM_PWM_Start_DMA+0x36a>
 800f3a0:	2300      	movs	r3, #0
 800f3a2:	2b00      	cmp	r3, #0
 800f3a4:	d007      	beq.n	800f3b6 <HAL_TIM_PWM_Start_DMA+0x37e>
 800f3a6:	68fb      	ldr	r3, [r7, #12]
 800f3a8:	681b      	ldr	r3, [r3, #0]
 800f3aa:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800f3ac:	68fb      	ldr	r3, [r7, #12]
 800f3ae:	681b      	ldr	r3, [r3, #0]
 800f3b0:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800f3b4:	645a      	str	r2, [r3, #68]	@ 0x44
 800f3b6:	68fb      	ldr	r3, [r7, #12]
 800f3b8:	681b      	ldr	r3, [r3, #0]
 800f3ba:	4a2d      	ldr	r2, [pc, #180]	@ (800f470 <HAL_TIM_PWM_Start_DMA+0x438>)
 800f3bc:	4293      	cmp	r3, r2
 800f3be:	d02c      	beq.n	800f41a <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f3c0:	68fb      	ldr	r3, [r7, #12]
 800f3c2:	681b      	ldr	r3, [r3, #0]
 800f3c4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800f3c8:	d027      	beq.n	800f41a <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f3ca:	68fb      	ldr	r3, [r7, #12]
 800f3cc:	681b      	ldr	r3, [r3, #0]
 800f3ce:	4a2d      	ldr	r2, [pc, #180]	@ (800f484 <HAL_TIM_PWM_Start_DMA+0x44c>)
 800f3d0:	4293      	cmp	r3, r2
 800f3d2:	d022      	beq.n	800f41a <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f3d4:	68fb      	ldr	r3, [r7, #12]
 800f3d6:	681b      	ldr	r3, [r3, #0]
 800f3d8:	4a2b      	ldr	r2, [pc, #172]	@ (800f488 <HAL_TIM_PWM_Start_DMA+0x450>)
 800f3da:	4293      	cmp	r3, r2
 800f3dc:	d01d      	beq.n	800f41a <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f3de:	68fb      	ldr	r3, [r7, #12]
 800f3e0:	681b      	ldr	r3, [r3, #0]
 800f3e2:	4a2a      	ldr	r2, [pc, #168]	@ (800f48c <HAL_TIM_PWM_Start_DMA+0x454>)
 800f3e4:	4293      	cmp	r3, r2
 800f3e6:	d018      	beq.n	800f41a <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f3e8:	68fb      	ldr	r3, [r7, #12]
 800f3ea:	681b      	ldr	r3, [r3, #0]
 800f3ec:	4a21      	ldr	r2, [pc, #132]	@ (800f474 <HAL_TIM_PWM_Start_DMA+0x43c>)
 800f3ee:	4293      	cmp	r3, r2
 800f3f0:	d013      	beq.n	800f41a <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f3f2:	68fb      	ldr	r3, [r7, #12]
 800f3f4:	681b      	ldr	r3, [r3, #0]
 800f3f6:	4a26      	ldr	r2, [pc, #152]	@ (800f490 <HAL_TIM_PWM_Start_DMA+0x458>)
 800f3f8:	4293      	cmp	r3, r2
 800f3fa:	d00e      	beq.n	800f41a <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f3fc:	68fb      	ldr	r3, [r7, #12]
 800f3fe:	681b      	ldr	r3, [r3, #0]
 800f400:	4a1d      	ldr	r2, [pc, #116]	@ (800f478 <HAL_TIM_PWM_Start_DMA+0x440>)
 800f402:	4293      	cmp	r3, r2
 800f404:	d009      	beq.n	800f41a <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f406:	68fb      	ldr	r3, [r7, #12]
 800f408:	681b      	ldr	r3, [r3, #0]
 800f40a:	4a22      	ldr	r2, [pc, #136]	@ (800f494 <HAL_TIM_PWM_Start_DMA+0x45c>)
 800f40c:	4293      	cmp	r3, r2
 800f40e:	d004      	beq.n	800f41a <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f410:	68fb      	ldr	r3, [r7, #12]
 800f412:	681b      	ldr	r3, [r3, #0]
 800f414:	4a20      	ldr	r2, [pc, #128]	@ (800f498 <HAL_TIM_PWM_Start_DMA+0x460>)
 800f416:	4293      	cmp	r3, r2
 800f418:	d115      	bne.n	800f446 <HAL_TIM_PWM_Start_DMA+0x40e>
 800f41a:	68fb      	ldr	r3, [r7, #12]
 800f41c:	681b      	ldr	r3, [r3, #0]
 800f41e:	689a      	ldr	r2, [r3, #8]
 800f420:	4b1e      	ldr	r3, [pc, #120]	@ (800f49c <HAL_TIM_PWM_Start_DMA+0x464>)
 800f422:	4013      	ands	r3, r2
 800f424:	613b      	str	r3, [r7, #16]
 800f426:	693b      	ldr	r3, [r7, #16]
 800f428:	2b06      	cmp	r3, #6
 800f42a:	d015      	beq.n	800f458 <HAL_TIM_PWM_Start_DMA+0x420>
 800f42c:	693b      	ldr	r3, [r7, #16]
 800f42e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800f432:	d011      	beq.n	800f458 <HAL_TIM_PWM_Start_DMA+0x420>
 800f434:	68fb      	ldr	r3, [r7, #12]
 800f436:	681b      	ldr	r3, [r3, #0]
 800f438:	681a      	ldr	r2, [r3, #0]
 800f43a:	68fb      	ldr	r3, [r7, #12]
 800f43c:	681b      	ldr	r3, [r3, #0]
 800f43e:	f042 0201 	orr.w	r2, r2, #1
 800f442:	601a      	str	r2, [r3, #0]
 800f444:	e008      	b.n	800f458 <HAL_TIM_PWM_Start_DMA+0x420>
 800f446:	68fb      	ldr	r3, [r7, #12]
 800f448:	681b      	ldr	r3, [r3, #0]
 800f44a:	681a      	ldr	r2, [r3, #0]
 800f44c:	68fb      	ldr	r3, [r7, #12]
 800f44e:	681b      	ldr	r3, [r3, #0]
 800f450:	f042 0201 	orr.w	r2, r2, #1
 800f454:	601a      	str	r2, [r3, #0]
 800f456:	e000      	b.n	800f45a <HAL_TIM_PWM_Start_DMA+0x422>
 800f458:	bf00      	nop
 800f45a:	7dfb      	ldrb	r3, [r7, #23]
 800f45c:	4618      	mov	r0, r3
 800f45e:	3718      	adds	r7, #24
 800f460:	46bd      	mov	sp, r7
 800f462:	bd80      	pop	{r7, pc}
 800f464:	0800fbd3 	.word	0x0800fbd3
 800f468:	0800fc7b 	.word	0x0800fc7b
 800f46c:	0800fb41 	.word	0x0800fb41
 800f470:	40010000 	.word	0x40010000
 800f474:	40010400 	.word	0x40010400
 800f478:	40014000 	.word	0x40014000
 800f47c:	40014400 	.word	0x40014400
 800f480:	40014800 	.word	0x40014800
 800f484:	40000400 	.word	0x40000400
 800f488:	40000800 	.word	0x40000800
 800f48c:	40000c00 	.word	0x40000c00
 800f490:	40001800 	.word	0x40001800
 800f494:	4000e000 	.word	0x4000e000
 800f498:	4000e400 	.word	0x4000e400
 800f49c:	00010007 	.word	0x00010007

0800f4a0 <HAL_TIM_IRQHandler>:
 800f4a0:	b580      	push	{r7, lr}
 800f4a2:	b084      	sub	sp, #16
 800f4a4:	af00      	add	r7, sp, #0
 800f4a6:	6078      	str	r0, [r7, #4]
 800f4a8:	687b      	ldr	r3, [r7, #4]
 800f4aa:	681b      	ldr	r3, [r3, #0]
 800f4ac:	68db      	ldr	r3, [r3, #12]
 800f4ae:	60fb      	str	r3, [r7, #12]
 800f4b0:	687b      	ldr	r3, [r7, #4]
 800f4b2:	681b      	ldr	r3, [r3, #0]
 800f4b4:	691b      	ldr	r3, [r3, #16]
 800f4b6:	60bb      	str	r3, [r7, #8]
 800f4b8:	68bb      	ldr	r3, [r7, #8]
 800f4ba:	f003 0302 	and.w	r3, r3, #2
 800f4be:	2b00      	cmp	r3, #0
 800f4c0:	d020      	beq.n	800f504 <HAL_TIM_IRQHandler+0x64>
 800f4c2:	68fb      	ldr	r3, [r7, #12]
 800f4c4:	f003 0302 	and.w	r3, r3, #2
 800f4c8:	2b00      	cmp	r3, #0
 800f4ca:	d01b      	beq.n	800f504 <HAL_TIM_IRQHandler+0x64>
 800f4cc:	687b      	ldr	r3, [r7, #4]
 800f4ce:	681b      	ldr	r3, [r3, #0]
 800f4d0:	f06f 0202 	mvn.w	r2, #2
 800f4d4:	611a      	str	r2, [r3, #16]
 800f4d6:	687b      	ldr	r3, [r7, #4]
 800f4d8:	2201      	movs	r2, #1
 800f4da:	771a      	strb	r2, [r3, #28]
 800f4dc:	687b      	ldr	r3, [r7, #4]
 800f4de:	681b      	ldr	r3, [r3, #0]
 800f4e0:	699b      	ldr	r3, [r3, #24]
 800f4e2:	f003 0303 	and.w	r3, r3, #3
 800f4e6:	2b00      	cmp	r3, #0
 800f4e8:	d003      	beq.n	800f4f2 <HAL_TIM_IRQHandler+0x52>
 800f4ea:	6878      	ldr	r0, [r7, #4]
 800f4ec:	f000 faf6 	bl	800fadc <HAL_TIM_IC_CaptureCallback>
 800f4f0:	e005      	b.n	800f4fe <HAL_TIM_IRQHandler+0x5e>
 800f4f2:	6878      	ldr	r0, [r7, #4]
 800f4f4:	f000 fae8 	bl	800fac8 <HAL_TIM_OC_DelayElapsedCallback>
 800f4f8:	6878      	ldr	r0, [r7, #4]
 800f4fa:	f000 faf9 	bl	800faf0 <HAL_TIM_PWM_PulseFinishedCallback>
 800f4fe:	687b      	ldr	r3, [r7, #4]
 800f500:	2200      	movs	r2, #0
 800f502:	771a      	strb	r2, [r3, #28]
 800f504:	68bb      	ldr	r3, [r7, #8]
 800f506:	f003 0304 	and.w	r3, r3, #4
 800f50a:	2b00      	cmp	r3, #0
 800f50c:	d020      	beq.n	800f550 <HAL_TIM_IRQHandler+0xb0>
 800f50e:	68fb      	ldr	r3, [r7, #12]
 800f510:	f003 0304 	and.w	r3, r3, #4
 800f514:	2b00      	cmp	r3, #0
 800f516:	d01b      	beq.n	800f550 <HAL_TIM_IRQHandler+0xb0>
 800f518:	687b      	ldr	r3, [r7, #4]
 800f51a:	681b      	ldr	r3, [r3, #0]
 800f51c:	f06f 0204 	mvn.w	r2, #4
 800f520:	611a      	str	r2, [r3, #16]
 800f522:	687b      	ldr	r3, [r7, #4]
 800f524:	2202      	movs	r2, #2
 800f526:	771a      	strb	r2, [r3, #28]
 800f528:	687b      	ldr	r3, [r7, #4]
 800f52a:	681b      	ldr	r3, [r3, #0]
 800f52c:	699b      	ldr	r3, [r3, #24]
 800f52e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800f532:	2b00      	cmp	r3, #0
 800f534:	d003      	beq.n	800f53e <HAL_TIM_IRQHandler+0x9e>
 800f536:	6878      	ldr	r0, [r7, #4]
 800f538:	f000 fad0 	bl	800fadc <HAL_TIM_IC_CaptureCallback>
 800f53c:	e005      	b.n	800f54a <HAL_TIM_IRQHandler+0xaa>
 800f53e:	6878      	ldr	r0, [r7, #4]
 800f540:	f000 fac2 	bl	800fac8 <HAL_TIM_OC_DelayElapsedCallback>
 800f544:	6878      	ldr	r0, [r7, #4]
 800f546:	f000 fad3 	bl	800faf0 <HAL_TIM_PWM_PulseFinishedCallback>
 800f54a:	687b      	ldr	r3, [r7, #4]
 800f54c:	2200      	movs	r2, #0
 800f54e:	771a      	strb	r2, [r3, #28]
 800f550:	68bb      	ldr	r3, [r7, #8]
 800f552:	f003 0308 	and.w	r3, r3, #8
 800f556:	2b00      	cmp	r3, #0
 800f558:	d020      	beq.n	800f59c <HAL_TIM_IRQHandler+0xfc>
 800f55a:	68fb      	ldr	r3, [r7, #12]
 800f55c:	f003 0308 	and.w	r3, r3, #8
 800f560:	2b00      	cmp	r3, #0
 800f562:	d01b      	beq.n	800f59c <HAL_TIM_IRQHandler+0xfc>
 800f564:	687b      	ldr	r3, [r7, #4]
 800f566:	681b      	ldr	r3, [r3, #0]
 800f568:	f06f 0208 	mvn.w	r2, #8
 800f56c:	611a      	str	r2, [r3, #16]
 800f56e:	687b      	ldr	r3, [r7, #4]
 800f570:	2204      	movs	r2, #4
 800f572:	771a      	strb	r2, [r3, #28]
 800f574:	687b      	ldr	r3, [r7, #4]
 800f576:	681b      	ldr	r3, [r3, #0]
 800f578:	69db      	ldr	r3, [r3, #28]
 800f57a:	f003 0303 	and.w	r3, r3, #3
 800f57e:	2b00      	cmp	r3, #0
 800f580:	d003      	beq.n	800f58a <HAL_TIM_IRQHandler+0xea>
 800f582:	6878      	ldr	r0, [r7, #4]
 800f584:	f000 faaa 	bl	800fadc <HAL_TIM_IC_CaptureCallback>
 800f588:	e005      	b.n	800f596 <HAL_TIM_IRQHandler+0xf6>
 800f58a:	6878      	ldr	r0, [r7, #4]
 800f58c:	f000 fa9c 	bl	800fac8 <HAL_TIM_OC_DelayElapsedCallback>
 800f590:	6878      	ldr	r0, [r7, #4]
 800f592:	f000 faad 	bl	800faf0 <HAL_TIM_PWM_PulseFinishedCallback>
 800f596:	687b      	ldr	r3, [r7, #4]
 800f598:	2200      	movs	r2, #0
 800f59a:	771a      	strb	r2, [r3, #28]
 800f59c:	68bb      	ldr	r3, [r7, #8]
 800f59e:	f003 0310 	and.w	r3, r3, #16
 800f5a2:	2b00      	cmp	r3, #0
 800f5a4:	d020      	beq.n	800f5e8 <HAL_TIM_IRQHandler+0x148>
 800f5a6:	68fb      	ldr	r3, [r7, #12]
 800f5a8:	f003 0310 	and.w	r3, r3, #16
 800f5ac:	2b00      	cmp	r3, #0
 800f5ae:	d01b      	beq.n	800f5e8 <HAL_TIM_IRQHandler+0x148>
 800f5b0:	687b      	ldr	r3, [r7, #4]
 800f5b2:	681b      	ldr	r3, [r3, #0]
 800f5b4:	f06f 0210 	mvn.w	r2, #16
 800f5b8:	611a      	str	r2, [r3, #16]
 800f5ba:	687b      	ldr	r3, [r7, #4]
 800f5bc:	2208      	movs	r2, #8
 800f5be:	771a      	strb	r2, [r3, #28]
 800f5c0:	687b      	ldr	r3, [r7, #4]
 800f5c2:	681b      	ldr	r3, [r3, #0]
 800f5c4:	69db      	ldr	r3, [r3, #28]
 800f5c6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800f5ca:	2b00      	cmp	r3, #0
 800f5cc:	d003      	beq.n	800f5d6 <HAL_TIM_IRQHandler+0x136>
 800f5ce:	6878      	ldr	r0, [r7, #4]
 800f5d0:	f000 fa84 	bl	800fadc <HAL_TIM_IC_CaptureCallback>
 800f5d4:	e005      	b.n	800f5e2 <HAL_TIM_IRQHandler+0x142>
 800f5d6:	6878      	ldr	r0, [r7, #4]
 800f5d8:	f000 fa76 	bl	800fac8 <HAL_TIM_OC_DelayElapsedCallback>
 800f5dc:	6878      	ldr	r0, [r7, #4]
 800f5de:	f000 fa87 	bl	800faf0 <HAL_TIM_PWM_PulseFinishedCallback>
 800f5e2:	687b      	ldr	r3, [r7, #4]
 800f5e4:	2200      	movs	r2, #0
 800f5e6:	771a      	strb	r2, [r3, #28]
 800f5e8:	68bb      	ldr	r3, [r7, #8]
 800f5ea:	f003 0301 	and.w	r3, r3, #1
 800f5ee:	2b00      	cmp	r3, #0
 800f5f0:	d00c      	beq.n	800f60c <HAL_TIM_IRQHandler+0x16c>
 800f5f2:	68fb      	ldr	r3, [r7, #12]
 800f5f4:	f003 0301 	and.w	r3, r3, #1
 800f5f8:	2b00      	cmp	r3, #0
 800f5fa:	d007      	beq.n	800f60c <HAL_TIM_IRQHandler+0x16c>
 800f5fc:	687b      	ldr	r3, [r7, #4]
 800f5fe:	681b      	ldr	r3, [r3, #0]
 800f600:	f06f 0201 	mvn.w	r2, #1
 800f604:	611a      	str	r2, [r3, #16]
 800f606:	6878      	ldr	r0, [r7, #4]
 800f608:	f7f1 fa56 	bl	8000ab8 <HAL_TIM_PeriodElapsedCallback>
 800f60c:	68bb      	ldr	r3, [r7, #8]
 800f60e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f612:	2b00      	cmp	r3, #0
 800f614:	d104      	bne.n	800f620 <HAL_TIM_IRQHandler+0x180>
 800f616:	68bb      	ldr	r3, [r7, #8]
 800f618:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800f61c:	2b00      	cmp	r3, #0
 800f61e:	d00c      	beq.n	800f63a <HAL_TIM_IRQHandler+0x19a>
 800f620:	68fb      	ldr	r3, [r7, #12]
 800f622:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f626:	2b00      	cmp	r3, #0
 800f628:	d007      	beq.n	800f63a <HAL_TIM_IRQHandler+0x19a>
 800f62a:	687b      	ldr	r3, [r7, #4]
 800f62c:	681b      	ldr	r3, [r3, #0]
 800f62e:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 800f632:	611a      	str	r2, [r3, #16]
 800f634:	6878      	ldr	r0, [r7, #4]
 800f636:	f001 f847 	bl	80106c8 <HAL_TIMEx_BreakCallback>
 800f63a:	68bb      	ldr	r3, [r7, #8]
 800f63c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f640:	2b00      	cmp	r3, #0
 800f642:	d00c      	beq.n	800f65e <HAL_TIM_IRQHandler+0x1be>
 800f644:	68fb      	ldr	r3, [r7, #12]
 800f646:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f64a:	2b00      	cmp	r3, #0
 800f64c:	d007      	beq.n	800f65e <HAL_TIM_IRQHandler+0x1be>
 800f64e:	687b      	ldr	r3, [r7, #4]
 800f650:	681b      	ldr	r3, [r3, #0]
 800f652:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 800f656:	611a      	str	r2, [r3, #16]
 800f658:	6878      	ldr	r0, [r7, #4]
 800f65a:	f001 f83f 	bl	80106dc <HAL_TIMEx_Break2Callback>
 800f65e:	68bb      	ldr	r3, [r7, #8]
 800f660:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800f664:	2b00      	cmp	r3, #0
 800f666:	d00c      	beq.n	800f682 <HAL_TIM_IRQHandler+0x1e2>
 800f668:	68fb      	ldr	r3, [r7, #12]
 800f66a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800f66e:	2b00      	cmp	r3, #0
 800f670:	d007      	beq.n	800f682 <HAL_TIM_IRQHandler+0x1e2>
 800f672:	687b      	ldr	r3, [r7, #4]
 800f674:	681b      	ldr	r3, [r3, #0]
 800f676:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800f67a:	611a      	str	r2, [r3, #16]
 800f67c:	6878      	ldr	r0, [r7, #4]
 800f67e:	f000 fa4b 	bl	800fb18 <HAL_TIM_TriggerCallback>
 800f682:	68bb      	ldr	r3, [r7, #8]
 800f684:	f003 0320 	and.w	r3, r3, #32
 800f688:	2b00      	cmp	r3, #0
 800f68a:	d00c      	beq.n	800f6a6 <HAL_TIM_IRQHandler+0x206>
 800f68c:	68fb      	ldr	r3, [r7, #12]
 800f68e:	f003 0320 	and.w	r3, r3, #32
 800f692:	2b00      	cmp	r3, #0
 800f694:	d007      	beq.n	800f6a6 <HAL_TIM_IRQHandler+0x206>
 800f696:	687b      	ldr	r3, [r7, #4]
 800f698:	681b      	ldr	r3, [r3, #0]
 800f69a:	f06f 0220 	mvn.w	r2, #32
 800f69e:	611a      	str	r2, [r3, #16]
 800f6a0:	6878      	ldr	r0, [r7, #4]
 800f6a2:	f001 f807 	bl	80106b4 <HAL_TIMEx_CommutCallback>
 800f6a6:	bf00      	nop
 800f6a8:	3710      	adds	r7, #16
 800f6aa:	46bd      	mov	sp, r7
 800f6ac:	bd80      	pop	{r7, pc}
	...

0800f6b0 <HAL_TIM_PWM_ConfigChannel>:
 800f6b0:	b580      	push	{r7, lr}
 800f6b2:	b086      	sub	sp, #24
 800f6b4:	af00      	add	r7, sp, #0
 800f6b6:	60f8      	str	r0, [r7, #12]
 800f6b8:	60b9      	str	r1, [r7, #8]
 800f6ba:	607a      	str	r2, [r7, #4]
 800f6bc:	2300      	movs	r3, #0
 800f6be:	75fb      	strb	r3, [r7, #23]
 800f6c0:	68fb      	ldr	r3, [r7, #12]
 800f6c2:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800f6c6:	2b01      	cmp	r3, #1
 800f6c8:	d101      	bne.n	800f6ce <HAL_TIM_PWM_ConfigChannel+0x1e>
 800f6ca:	2302      	movs	r3, #2
 800f6cc:	e0ff      	b.n	800f8ce <HAL_TIM_PWM_ConfigChannel+0x21e>
 800f6ce:	68fb      	ldr	r3, [r7, #12]
 800f6d0:	2201      	movs	r2, #1
 800f6d2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800f6d6:	687b      	ldr	r3, [r7, #4]
 800f6d8:	2b14      	cmp	r3, #20
 800f6da:	f200 80f0 	bhi.w	800f8be <HAL_TIM_PWM_ConfigChannel+0x20e>
 800f6de:	a201      	add	r2, pc, #4	@ (adr r2, 800f6e4 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800f6e0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f6e4:	0800f739 	.word	0x0800f739
 800f6e8:	0800f8bf 	.word	0x0800f8bf
 800f6ec:	0800f8bf 	.word	0x0800f8bf
 800f6f0:	0800f8bf 	.word	0x0800f8bf
 800f6f4:	0800f779 	.word	0x0800f779
 800f6f8:	0800f8bf 	.word	0x0800f8bf
 800f6fc:	0800f8bf 	.word	0x0800f8bf
 800f700:	0800f8bf 	.word	0x0800f8bf
 800f704:	0800f7bb 	.word	0x0800f7bb
 800f708:	0800f8bf 	.word	0x0800f8bf
 800f70c:	0800f8bf 	.word	0x0800f8bf
 800f710:	0800f8bf 	.word	0x0800f8bf
 800f714:	0800f7fb 	.word	0x0800f7fb
 800f718:	0800f8bf 	.word	0x0800f8bf
 800f71c:	0800f8bf 	.word	0x0800f8bf
 800f720:	0800f8bf 	.word	0x0800f8bf
 800f724:	0800f83d 	.word	0x0800f83d
 800f728:	0800f8bf 	.word	0x0800f8bf
 800f72c:	0800f8bf 	.word	0x0800f8bf
 800f730:	0800f8bf 	.word	0x0800f8bf
 800f734:	0800f87d 	.word	0x0800f87d
 800f738:	68fb      	ldr	r3, [r7, #12]
 800f73a:	681b      	ldr	r3, [r3, #0]
 800f73c:	68b9      	ldr	r1, [r7, #8]
 800f73e:	4618      	mov	r0, r3
 800f740:	f000 fb82 	bl	800fe48 <TIM_OC1_SetConfig>
 800f744:	68fb      	ldr	r3, [r7, #12]
 800f746:	681b      	ldr	r3, [r3, #0]
 800f748:	699a      	ldr	r2, [r3, #24]
 800f74a:	68fb      	ldr	r3, [r7, #12]
 800f74c:	681b      	ldr	r3, [r3, #0]
 800f74e:	f042 0208 	orr.w	r2, r2, #8
 800f752:	619a      	str	r2, [r3, #24]
 800f754:	68fb      	ldr	r3, [r7, #12]
 800f756:	681b      	ldr	r3, [r3, #0]
 800f758:	699a      	ldr	r2, [r3, #24]
 800f75a:	68fb      	ldr	r3, [r7, #12]
 800f75c:	681b      	ldr	r3, [r3, #0]
 800f75e:	f022 0204 	bic.w	r2, r2, #4
 800f762:	619a      	str	r2, [r3, #24]
 800f764:	68fb      	ldr	r3, [r7, #12]
 800f766:	681b      	ldr	r3, [r3, #0]
 800f768:	6999      	ldr	r1, [r3, #24]
 800f76a:	68bb      	ldr	r3, [r7, #8]
 800f76c:	691a      	ldr	r2, [r3, #16]
 800f76e:	68fb      	ldr	r3, [r7, #12]
 800f770:	681b      	ldr	r3, [r3, #0]
 800f772:	430a      	orrs	r2, r1
 800f774:	619a      	str	r2, [r3, #24]
 800f776:	e0a5      	b.n	800f8c4 <HAL_TIM_PWM_ConfigChannel+0x214>
 800f778:	68fb      	ldr	r3, [r7, #12]
 800f77a:	681b      	ldr	r3, [r3, #0]
 800f77c:	68b9      	ldr	r1, [r7, #8]
 800f77e:	4618      	mov	r0, r3
 800f780:	f000 fbf2 	bl	800ff68 <TIM_OC2_SetConfig>
 800f784:	68fb      	ldr	r3, [r7, #12]
 800f786:	681b      	ldr	r3, [r3, #0]
 800f788:	699a      	ldr	r2, [r3, #24]
 800f78a:	68fb      	ldr	r3, [r7, #12]
 800f78c:	681b      	ldr	r3, [r3, #0]
 800f78e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800f792:	619a      	str	r2, [r3, #24]
 800f794:	68fb      	ldr	r3, [r7, #12]
 800f796:	681b      	ldr	r3, [r3, #0]
 800f798:	699a      	ldr	r2, [r3, #24]
 800f79a:	68fb      	ldr	r3, [r7, #12]
 800f79c:	681b      	ldr	r3, [r3, #0]
 800f79e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800f7a2:	619a      	str	r2, [r3, #24]
 800f7a4:	68fb      	ldr	r3, [r7, #12]
 800f7a6:	681b      	ldr	r3, [r3, #0]
 800f7a8:	6999      	ldr	r1, [r3, #24]
 800f7aa:	68bb      	ldr	r3, [r7, #8]
 800f7ac:	691b      	ldr	r3, [r3, #16]
 800f7ae:	021a      	lsls	r2, r3, #8
 800f7b0:	68fb      	ldr	r3, [r7, #12]
 800f7b2:	681b      	ldr	r3, [r3, #0]
 800f7b4:	430a      	orrs	r2, r1
 800f7b6:	619a      	str	r2, [r3, #24]
 800f7b8:	e084      	b.n	800f8c4 <HAL_TIM_PWM_ConfigChannel+0x214>
 800f7ba:	68fb      	ldr	r3, [r7, #12]
 800f7bc:	681b      	ldr	r3, [r3, #0]
 800f7be:	68b9      	ldr	r1, [r7, #8]
 800f7c0:	4618      	mov	r0, r3
 800f7c2:	f000 fc5b 	bl	801007c <TIM_OC3_SetConfig>
 800f7c6:	68fb      	ldr	r3, [r7, #12]
 800f7c8:	681b      	ldr	r3, [r3, #0]
 800f7ca:	69da      	ldr	r2, [r3, #28]
 800f7cc:	68fb      	ldr	r3, [r7, #12]
 800f7ce:	681b      	ldr	r3, [r3, #0]
 800f7d0:	f042 0208 	orr.w	r2, r2, #8
 800f7d4:	61da      	str	r2, [r3, #28]
 800f7d6:	68fb      	ldr	r3, [r7, #12]
 800f7d8:	681b      	ldr	r3, [r3, #0]
 800f7da:	69da      	ldr	r2, [r3, #28]
 800f7dc:	68fb      	ldr	r3, [r7, #12]
 800f7de:	681b      	ldr	r3, [r3, #0]
 800f7e0:	f022 0204 	bic.w	r2, r2, #4
 800f7e4:	61da      	str	r2, [r3, #28]
 800f7e6:	68fb      	ldr	r3, [r7, #12]
 800f7e8:	681b      	ldr	r3, [r3, #0]
 800f7ea:	69d9      	ldr	r1, [r3, #28]
 800f7ec:	68bb      	ldr	r3, [r7, #8]
 800f7ee:	691a      	ldr	r2, [r3, #16]
 800f7f0:	68fb      	ldr	r3, [r7, #12]
 800f7f2:	681b      	ldr	r3, [r3, #0]
 800f7f4:	430a      	orrs	r2, r1
 800f7f6:	61da      	str	r2, [r3, #28]
 800f7f8:	e064      	b.n	800f8c4 <HAL_TIM_PWM_ConfigChannel+0x214>
 800f7fa:	68fb      	ldr	r3, [r7, #12]
 800f7fc:	681b      	ldr	r3, [r3, #0]
 800f7fe:	68b9      	ldr	r1, [r7, #8]
 800f800:	4618      	mov	r0, r3
 800f802:	f000 fcc3 	bl	801018c <TIM_OC4_SetConfig>
 800f806:	68fb      	ldr	r3, [r7, #12]
 800f808:	681b      	ldr	r3, [r3, #0]
 800f80a:	69da      	ldr	r2, [r3, #28]
 800f80c:	68fb      	ldr	r3, [r7, #12]
 800f80e:	681b      	ldr	r3, [r3, #0]
 800f810:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800f814:	61da      	str	r2, [r3, #28]
 800f816:	68fb      	ldr	r3, [r7, #12]
 800f818:	681b      	ldr	r3, [r3, #0]
 800f81a:	69da      	ldr	r2, [r3, #28]
 800f81c:	68fb      	ldr	r3, [r7, #12]
 800f81e:	681b      	ldr	r3, [r3, #0]
 800f820:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800f824:	61da      	str	r2, [r3, #28]
 800f826:	68fb      	ldr	r3, [r7, #12]
 800f828:	681b      	ldr	r3, [r3, #0]
 800f82a:	69d9      	ldr	r1, [r3, #28]
 800f82c:	68bb      	ldr	r3, [r7, #8]
 800f82e:	691b      	ldr	r3, [r3, #16]
 800f830:	021a      	lsls	r2, r3, #8
 800f832:	68fb      	ldr	r3, [r7, #12]
 800f834:	681b      	ldr	r3, [r3, #0]
 800f836:	430a      	orrs	r2, r1
 800f838:	61da      	str	r2, [r3, #28]
 800f83a:	e043      	b.n	800f8c4 <HAL_TIM_PWM_ConfigChannel+0x214>
 800f83c:	68fb      	ldr	r3, [r7, #12]
 800f83e:	681b      	ldr	r3, [r3, #0]
 800f840:	68b9      	ldr	r1, [r7, #8]
 800f842:	4618      	mov	r0, r3
 800f844:	f000 fd0c 	bl	8010260 <TIM_OC5_SetConfig>
 800f848:	68fb      	ldr	r3, [r7, #12]
 800f84a:	681b      	ldr	r3, [r3, #0]
 800f84c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800f84e:	68fb      	ldr	r3, [r7, #12]
 800f850:	681b      	ldr	r3, [r3, #0]
 800f852:	f042 0208 	orr.w	r2, r2, #8
 800f856:	655a      	str	r2, [r3, #84]	@ 0x54
 800f858:	68fb      	ldr	r3, [r7, #12]
 800f85a:	681b      	ldr	r3, [r3, #0]
 800f85c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800f85e:	68fb      	ldr	r3, [r7, #12]
 800f860:	681b      	ldr	r3, [r3, #0]
 800f862:	f022 0204 	bic.w	r2, r2, #4
 800f866:	655a      	str	r2, [r3, #84]	@ 0x54
 800f868:	68fb      	ldr	r3, [r7, #12]
 800f86a:	681b      	ldr	r3, [r3, #0]
 800f86c:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 800f86e:	68bb      	ldr	r3, [r7, #8]
 800f870:	691a      	ldr	r2, [r3, #16]
 800f872:	68fb      	ldr	r3, [r7, #12]
 800f874:	681b      	ldr	r3, [r3, #0]
 800f876:	430a      	orrs	r2, r1
 800f878:	655a      	str	r2, [r3, #84]	@ 0x54
 800f87a:	e023      	b.n	800f8c4 <HAL_TIM_PWM_ConfigChannel+0x214>
 800f87c:	68fb      	ldr	r3, [r7, #12]
 800f87e:	681b      	ldr	r3, [r3, #0]
 800f880:	68b9      	ldr	r1, [r7, #8]
 800f882:	4618      	mov	r0, r3
 800f884:	f000 fd50 	bl	8010328 <TIM_OC6_SetConfig>
 800f888:	68fb      	ldr	r3, [r7, #12]
 800f88a:	681b      	ldr	r3, [r3, #0]
 800f88c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800f88e:	68fb      	ldr	r3, [r7, #12]
 800f890:	681b      	ldr	r3, [r3, #0]
 800f892:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800f896:	655a      	str	r2, [r3, #84]	@ 0x54
 800f898:	68fb      	ldr	r3, [r7, #12]
 800f89a:	681b      	ldr	r3, [r3, #0]
 800f89c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800f89e:	68fb      	ldr	r3, [r7, #12]
 800f8a0:	681b      	ldr	r3, [r3, #0]
 800f8a2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800f8a6:	655a      	str	r2, [r3, #84]	@ 0x54
 800f8a8:	68fb      	ldr	r3, [r7, #12]
 800f8aa:	681b      	ldr	r3, [r3, #0]
 800f8ac:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 800f8ae:	68bb      	ldr	r3, [r7, #8]
 800f8b0:	691b      	ldr	r3, [r3, #16]
 800f8b2:	021a      	lsls	r2, r3, #8
 800f8b4:	68fb      	ldr	r3, [r7, #12]
 800f8b6:	681b      	ldr	r3, [r3, #0]
 800f8b8:	430a      	orrs	r2, r1
 800f8ba:	655a      	str	r2, [r3, #84]	@ 0x54
 800f8bc:	e002      	b.n	800f8c4 <HAL_TIM_PWM_ConfigChannel+0x214>
 800f8be:	2301      	movs	r3, #1
 800f8c0:	75fb      	strb	r3, [r7, #23]
 800f8c2:	bf00      	nop
 800f8c4:	68fb      	ldr	r3, [r7, #12]
 800f8c6:	2200      	movs	r2, #0
 800f8c8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800f8cc:	7dfb      	ldrb	r3, [r7, #23]
 800f8ce:	4618      	mov	r0, r3
 800f8d0:	3718      	adds	r7, #24
 800f8d2:	46bd      	mov	sp, r7
 800f8d4:	bd80      	pop	{r7, pc}
 800f8d6:	bf00      	nop

0800f8d8 <HAL_TIM_ConfigClockSource>:
 800f8d8:	b580      	push	{r7, lr}
 800f8da:	b084      	sub	sp, #16
 800f8dc:	af00      	add	r7, sp, #0
 800f8de:	6078      	str	r0, [r7, #4]
 800f8e0:	6039      	str	r1, [r7, #0]
 800f8e2:	2300      	movs	r3, #0
 800f8e4:	73fb      	strb	r3, [r7, #15]
 800f8e6:	687b      	ldr	r3, [r7, #4]
 800f8e8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800f8ec:	2b01      	cmp	r3, #1
 800f8ee:	d101      	bne.n	800f8f4 <HAL_TIM_ConfigClockSource+0x1c>
 800f8f0:	2302      	movs	r3, #2
 800f8f2:	e0dc      	b.n	800faae <HAL_TIM_ConfigClockSource+0x1d6>
 800f8f4:	687b      	ldr	r3, [r7, #4]
 800f8f6:	2201      	movs	r2, #1
 800f8f8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800f8fc:	687b      	ldr	r3, [r7, #4]
 800f8fe:	2202      	movs	r2, #2
 800f900:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800f904:	687b      	ldr	r3, [r7, #4]
 800f906:	681b      	ldr	r3, [r3, #0]
 800f908:	689b      	ldr	r3, [r3, #8]
 800f90a:	60bb      	str	r3, [r7, #8]
 800f90c:	68ba      	ldr	r2, [r7, #8]
 800f90e:	4b6a      	ldr	r3, [pc, #424]	@ (800fab8 <HAL_TIM_ConfigClockSource+0x1e0>)
 800f910:	4013      	ands	r3, r2
 800f912:	60bb      	str	r3, [r7, #8]
 800f914:	68bb      	ldr	r3, [r7, #8]
 800f916:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800f91a:	60bb      	str	r3, [r7, #8]
 800f91c:	687b      	ldr	r3, [r7, #4]
 800f91e:	681b      	ldr	r3, [r3, #0]
 800f920:	68ba      	ldr	r2, [r7, #8]
 800f922:	609a      	str	r2, [r3, #8]
 800f924:	683b      	ldr	r3, [r7, #0]
 800f926:	681b      	ldr	r3, [r3, #0]
 800f928:	4a64      	ldr	r2, [pc, #400]	@ (800fabc <HAL_TIM_ConfigClockSource+0x1e4>)
 800f92a:	4293      	cmp	r3, r2
 800f92c:	f000 80a9 	beq.w	800fa82 <HAL_TIM_ConfigClockSource+0x1aa>
 800f930:	4a62      	ldr	r2, [pc, #392]	@ (800fabc <HAL_TIM_ConfigClockSource+0x1e4>)
 800f932:	4293      	cmp	r3, r2
 800f934:	f200 80ae 	bhi.w	800fa94 <HAL_TIM_ConfigClockSource+0x1bc>
 800f938:	4a61      	ldr	r2, [pc, #388]	@ (800fac0 <HAL_TIM_ConfigClockSource+0x1e8>)
 800f93a:	4293      	cmp	r3, r2
 800f93c:	f000 80a1 	beq.w	800fa82 <HAL_TIM_ConfigClockSource+0x1aa>
 800f940:	4a5f      	ldr	r2, [pc, #380]	@ (800fac0 <HAL_TIM_ConfigClockSource+0x1e8>)
 800f942:	4293      	cmp	r3, r2
 800f944:	f200 80a6 	bhi.w	800fa94 <HAL_TIM_ConfigClockSource+0x1bc>
 800f948:	4a5e      	ldr	r2, [pc, #376]	@ (800fac4 <HAL_TIM_ConfigClockSource+0x1ec>)
 800f94a:	4293      	cmp	r3, r2
 800f94c:	f000 8099 	beq.w	800fa82 <HAL_TIM_ConfigClockSource+0x1aa>
 800f950:	4a5c      	ldr	r2, [pc, #368]	@ (800fac4 <HAL_TIM_ConfigClockSource+0x1ec>)
 800f952:	4293      	cmp	r3, r2
 800f954:	f200 809e 	bhi.w	800fa94 <HAL_TIM_ConfigClockSource+0x1bc>
 800f958:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 800f95c:	f000 8091 	beq.w	800fa82 <HAL_TIM_ConfigClockSource+0x1aa>
 800f960:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 800f964:	f200 8096 	bhi.w	800fa94 <HAL_TIM_ConfigClockSource+0x1bc>
 800f968:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800f96c:	f000 8089 	beq.w	800fa82 <HAL_TIM_ConfigClockSource+0x1aa>
 800f970:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800f974:	f200 808e 	bhi.w	800fa94 <HAL_TIM_ConfigClockSource+0x1bc>
 800f978:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800f97c:	d03e      	beq.n	800f9fc <HAL_TIM_ConfigClockSource+0x124>
 800f97e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800f982:	f200 8087 	bhi.w	800fa94 <HAL_TIM_ConfigClockSource+0x1bc>
 800f986:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800f98a:	f000 8086 	beq.w	800fa9a <HAL_TIM_ConfigClockSource+0x1c2>
 800f98e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800f992:	d87f      	bhi.n	800fa94 <HAL_TIM_ConfigClockSource+0x1bc>
 800f994:	2b70      	cmp	r3, #112	@ 0x70
 800f996:	d01a      	beq.n	800f9ce <HAL_TIM_ConfigClockSource+0xf6>
 800f998:	2b70      	cmp	r3, #112	@ 0x70
 800f99a:	d87b      	bhi.n	800fa94 <HAL_TIM_ConfigClockSource+0x1bc>
 800f99c:	2b60      	cmp	r3, #96	@ 0x60
 800f99e:	d050      	beq.n	800fa42 <HAL_TIM_ConfigClockSource+0x16a>
 800f9a0:	2b60      	cmp	r3, #96	@ 0x60
 800f9a2:	d877      	bhi.n	800fa94 <HAL_TIM_ConfigClockSource+0x1bc>
 800f9a4:	2b50      	cmp	r3, #80	@ 0x50
 800f9a6:	d03c      	beq.n	800fa22 <HAL_TIM_ConfigClockSource+0x14a>
 800f9a8:	2b50      	cmp	r3, #80	@ 0x50
 800f9aa:	d873      	bhi.n	800fa94 <HAL_TIM_ConfigClockSource+0x1bc>
 800f9ac:	2b40      	cmp	r3, #64	@ 0x40
 800f9ae:	d058      	beq.n	800fa62 <HAL_TIM_ConfigClockSource+0x18a>
 800f9b0:	2b40      	cmp	r3, #64	@ 0x40
 800f9b2:	d86f      	bhi.n	800fa94 <HAL_TIM_ConfigClockSource+0x1bc>
 800f9b4:	2b30      	cmp	r3, #48	@ 0x30
 800f9b6:	d064      	beq.n	800fa82 <HAL_TIM_ConfigClockSource+0x1aa>
 800f9b8:	2b30      	cmp	r3, #48	@ 0x30
 800f9ba:	d86b      	bhi.n	800fa94 <HAL_TIM_ConfigClockSource+0x1bc>
 800f9bc:	2b20      	cmp	r3, #32
 800f9be:	d060      	beq.n	800fa82 <HAL_TIM_ConfigClockSource+0x1aa>
 800f9c0:	2b20      	cmp	r3, #32
 800f9c2:	d867      	bhi.n	800fa94 <HAL_TIM_ConfigClockSource+0x1bc>
 800f9c4:	2b00      	cmp	r3, #0
 800f9c6:	d05c      	beq.n	800fa82 <HAL_TIM_ConfigClockSource+0x1aa>
 800f9c8:	2b10      	cmp	r3, #16
 800f9ca:	d05a      	beq.n	800fa82 <HAL_TIM_ConfigClockSource+0x1aa>
 800f9cc:	e062      	b.n	800fa94 <HAL_TIM_ConfigClockSource+0x1bc>
 800f9ce:	687b      	ldr	r3, [r7, #4]
 800f9d0:	6818      	ldr	r0, [r3, #0]
 800f9d2:	683b      	ldr	r3, [r7, #0]
 800f9d4:	6899      	ldr	r1, [r3, #8]
 800f9d6:	683b      	ldr	r3, [r7, #0]
 800f9d8:	685a      	ldr	r2, [r3, #4]
 800f9da:	683b      	ldr	r3, [r7, #0]
 800f9dc:	68db      	ldr	r3, [r3, #12]
 800f9de:	f000 fd87 	bl	80104f0 <TIM_ETR_SetConfig>
 800f9e2:	687b      	ldr	r3, [r7, #4]
 800f9e4:	681b      	ldr	r3, [r3, #0]
 800f9e6:	689b      	ldr	r3, [r3, #8]
 800f9e8:	60bb      	str	r3, [r7, #8]
 800f9ea:	68bb      	ldr	r3, [r7, #8]
 800f9ec:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 800f9f0:	60bb      	str	r3, [r7, #8]
 800f9f2:	687b      	ldr	r3, [r7, #4]
 800f9f4:	681b      	ldr	r3, [r3, #0]
 800f9f6:	68ba      	ldr	r2, [r7, #8]
 800f9f8:	609a      	str	r2, [r3, #8]
 800f9fa:	e04f      	b.n	800fa9c <HAL_TIM_ConfigClockSource+0x1c4>
 800f9fc:	687b      	ldr	r3, [r7, #4]
 800f9fe:	6818      	ldr	r0, [r3, #0]
 800fa00:	683b      	ldr	r3, [r7, #0]
 800fa02:	6899      	ldr	r1, [r3, #8]
 800fa04:	683b      	ldr	r3, [r7, #0]
 800fa06:	685a      	ldr	r2, [r3, #4]
 800fa08:	683b      	ldr	r3, [r7, #0]
 800fa0a:	68db      	ldr	r3, [r3, #12]
 800fa0c:	f000 fd70 	bl	80104f0 <TIM_ETR_SetConfig>
 800fa10:	687b      	ldr	r3, [r7, #4]
 800fa12:	681b      	ldr	r3, [r3, #0]
 800fa14:	689a      	ldr	r2, [r3, #8]
 800fa16:	687b      	ldr	r3, [r7, #4]
 800fa18:	681b      	ldr	r3, [r3, #0]
 800fa1a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800fa1e:	609a      	str	r2, [r3, #8]
 800fa20:	e03c      	b.n	800fa9c <HAL_TIM_ConfigClockSource+0x1c4>
 800fa22:	687b      	ldr	r3, [r7, #4]
 800fa24:	6818      	ldr	r0, [r3, #0]
 800fa26:	683b      	ldr	r3, [r7, #0]
 800fa28:	6859      	ldr	r1, [r3, #4]
 800fa2a:	683b      	ldr	r3, [r7, #0]
 800fa2c:	68db      	ldr	r3, [r3, #12]
 800fa2e:	461a      	mov	r2, r3
 800fa30:	f000 fce0 	bl	80103f4 <TIM_TI1_ConfigInputStage>
 800fa34:	687b      	ldr	r3, [r7, #4]
 800fa36:	681b      	ldr	r3, [r3, #0]
 800fa38:	2150      	movs	r1, #80	@ 0x50
 800fa3a:	4618      	mov	r0, r3
 800fa3c:	f000 fd3a 	bl	80104b4 <TIM_ITRx_SetConfig>
 800fa40:	e02c      	b.n	800fa9c <HAL_TIM_ConfigClockSource+0x1c4>
 800fa42:	687b      	ldr	r3, [r7, #4]
 800fa44:	6818      	ldr	r0, [r3, #0]
 800fa46:	683b      	ldr	r3, [r7, #0]
 800fa48:	6859      	ldr	r1, [r3, #4]
 800fa4a:	683b      	ldr	r3, [r7, #0]
 800fa4c:	68db      	ldr	r3, [r3, #12]
 800fa4e:	461a      	mov	r2, r3
 800fa50:	f000 fcff 	bl	8010452 <TIM_TI2_ConfigInputStage>
 800fa54:	687b      	ldr	r3, [r7, #4]
 800fa56:	681b      	ldr	r3, [r3, #0]
 800fa58:	2160      	movs	r1, #96	@ 0x60
 800fa5a:	4618      	mov	r0, r3
 800fa5c:	f000 fd2a 	bl	80104b4 <TIM_ITRx_SetConfig>
 800fa60:	e01c      	b.n	800fa9c <HAL_TIM_ConfigClockSource+0x1c4>
 800fa62:	687b      	ldr	r3, [r7, #4]
 800fa64:	6818      	ldr	r0, [r3, #0]
 800fa66:	683b      	ldr	r3, [r7, #0]
 800fa68:	6859      	ldr	r1, [r3, #4]
 800fa6a:	683b      	ldr	r3, [r7, #0]
 800fa6c:	68db      	ldr	r3, [r3, #12]
 800fa6e:	461a      	mov	r2, r3
 800fa70:	f000 fcc0 	bl	80103f4 <TIM_TI1_ConfigInputStage>
 800fa74:	687b      	ldr	r3, [r7, #4]
 800fa76:	681b      	ldr	r3, [r3, #0]
 800fa78:	2140      	movs	r1, #64	@ 0x40
 800fa7a:	4618      	mov	r0, r3
 800fa7c:	f000 fd1a 	bl	80104b4 <TIM_ITRx_SetConfig>
 800fa80:	e00c      	b.n	800fa9c <HAL_TIM_ConfigClockSource+0x1c4>
 800fa82:	687b      	ldr	r3, [r7, #4]
 800fa84:	681a      	ldr	r2, [r3, #0]
 800fa86:	683b      	ldr	r3, [r7, #0]
 800fa88:	681b      	ldr	r3, [r3, #0]
 800fa8a:	4619      	mov	r1, r3
 800fa8c:	4610      	mov	r0, r2
 800fa8e:	f000 fd11 	bl	80104b4 <TIM_ITRx_SetConfig>
 800fa92:	e003      	b.n	800fa9c <HAL_TIM_ConfigClockSource+0x1c4>
 800fa94:	2301      	movs	r3, #1
 800fa96:	73fb      	strb	r3, [r7, #15]
 800fa98:	e000      	b.n	800fa9c <HAL_TIM_ConfigClockSource+0x1c4>
 800fa9a:	bf00      	nop
 800fa9c:	687b      	ldr	r3, [r7, #4]
 800fa9e:	2201      	movs	r2, #1
 800faa0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800faa4:	687b      	ldr	r3, [r7, #4]
 800faa6:	2200      	movs	r2, #0
 800faa8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800faac:	7bfb      	ldrb	r3, [r7, #15]
 800faae:	4618      	mov	r0, r3
 800fab0:	3710      	adds	r7, #16
 800fab2:	46bd      	mov	sp, r7
 800fab4:	bd80      	pop	{r7, pc}
 800fab6:	bf00      	nop
 800fab8:	ffceff88 	.word	0xffceff88
 800fabc:	00100040 	.word	0x00100040
 800fac0:	00100030 	.word	0x00100030
 800fac4:	00100020 	.word	0x00100020

0800fac8 <HAL_TIM_OC_DelayElapsedCallback>:
 800fac8:	b480      	push	{r7}
 800faca:	b083      	sub	sp, #12
 800facc:	af00      	add	r7, sp, #0
 800face:	6078      	str	r0, [r7, #4]
 800fad0:	bf00      	nop
 800fad2:	370c      	adds	r7, #12
 800fad4:	46bd      	mov	sp, r7
 800fad6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fada:	4770      	bx	lr

0800fadc <HAL_TIM_IC_CaptureCallback>:
 800fadc:	b480      	push	{r7}
 800fade:	b083      	sub	sp, #12
 800fae0:	af00      	add	r7, sp, #0
 800fae2:	6078      	str	r0, [r7, #4]
 800fae4:	bf00      	nop
 800fae6:	370c      	adds	r7, #12
 800fae8:	46bd      	mov	sp, r7
 800faea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800faee:	4770      	bx	lr

0800faf0 <HAL_TIM_PWM_PulseFinishedCallback>:
 800faf0:	b480      	push	{r7}
 800faf2:	b083      	sub	sp, #12
 800faf4:	af00      	add	r7, sp, #0
 800faf6:	6078      	str	r0, [r7, #4]
 800faf8:	bf00      	nop
 800fafa:	370c      	adds	r7, #12
 800fafc:	46bd      	mov	sp, r7
 800fafe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb02:	4770      	bx	lr

0800fb04 <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>:
 800fb04:	b480      	push	{r7}
 800fb06:	b083      	sub	sp, #12
 800fb08:	af00      	add	r7, sp, #0
 800fb0a:	6078      	str	r0, [r7, #4]
 800fb0c:	bf00      	nop
 800fb0e:	370c      	adds	r7, #12
 800fb10:	46bd      	mov	sp, r7
 800fb12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb16:	4770      	bx	lr

0800fb18 <HAL_TIM_TriggerCallback>:
 800fb18:	b480      	push	{r7}
 800fb1a:	b083      	sub	sp, #12
 800fb1c:	af00      	add	r7, sp, #0
 800fb1e:	6078      	str	r0, [r7, #4]
 800fb20:	bf00      	nop
 800fb22:	370c      	adds	r7, #12
 800fb24:	46bd      	mov	sp, r7
 800fb26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb2a:	4770      	bx	lr

0800fb2c <HAL_TIM_ErrorCallback>:
 800fb2c:	b480      	push	{r7}
 800fb2e:	b083      	sub	sp, #12
 800fb30:	af00      	add	r7, sp, #0
 800fb32:	6078      	str	r0, [r7, #4]
 800fb34:	bf00      	nop
 800fb36:	370c      	adds	r7, #12
 800fb38:	46bd      	mov	sp, r7
 800fb3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb3e:	4770      	bx	lr

0800fb40 <TIM_DMAError>:
 800fb40:	b580      	push	{r7, lr}
 800fb42:	b084      	sub	sp, #16
 800fb44:	af00      	add	r7, sp, #0
 800fb46:	6078      	str	r0, [r7, #4]
 800fb48:	687b      	ldr	r3, [r7, #4]
 800fb4a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fb4c:	60fb      	str	r3, [r7, #12]
 800fb4e:	68fb      	ldr	r3, [r7, #12]
 800fb50:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fb52:	687a      	ldr	r2, [r7, #4]
 800fb54:	429a      	cmp	r2, r3
 800fb56:	d107      	bne.n	800fb68 <TIM_DMAError+0x28>
 800fb58:	68fb      	ldr	r3, [r7, #12]
 800fb5a:	2201      	movs	r2, #1
 800fb5c:	771a      	strb	r2, [r3, #28]
 800fb5e:	68fb      	ldr	r3, [r7, #12]
 800fb60:	2201      	movs	r2, #1
 800fb62:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800fb66:	e02a      	b.n	800fbbe <TIM_DMAError+0x7e>
 800fb68:	68fb      	ldr	r3, [r7, #12]
 800fb6a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800fb6c:	687a      	ldr	r2, [r7, #4]
 800fb6e:	429a      	cmp	r2, r3
 800fb70:	d107      	bne.n	800fb82 <TIM_DMAError+0x42>
 800fb72:	68fb      	ldr	r3, [r7, #12]
 800fb74:	2202      	movs	r2, #2
 800fb76:	771a      	strb	r2, [r3, #28]
 800fb78:	68fb      	ldr	r3, [r7, #12]
 800fb7a:	2201      	movs	r2, #1
 800fb7c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800fb80:	e01d      	b.n	800fbbe <TIM_DMAError+0x7e>
 800fb82:	68fb      	ldr	r3, [r7, #12]
 800fb84:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fb86:	687a      	ldr	r2, [r7, #4]
 800fb88:	429a      	cmp	r2, r3
 800fb8a:	d107      	bne.n	800fb9c <TIM_DMAError+0x5c>
 800fb8c:	68fb      	ldr	r3, [r7, #12]
 800fb8e:	2204      	movs	r2, #4
 800fb90:	771a      	strb	r2, [r3, #28]
 800fb92:	68fb      	ldr	r3, [r7, #12]
 800fb94:	2201      	movs	r2, #1
 800fb96:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800fb9a:	e010      	b.n	800fbbe <TIM_DMAError+0x7e>
 800fb9c:	68fb      	ldr	r3, [r7, #12]
 800fb9e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800fba0:	687a      	ldr	r2, [r7, #4]
 800fba2:	429a      	cmp	r2, r3
 800fba4:	d107      	bne.n	800fbb6 <TIM_DMAError+0x76>
 800fba6:	68fb      	ldr	r3, [r7, #12]
 800fba8:	2208      	movs	r2, #8
 800fbaa:	771a      	strb	r2, [r3, #28]
 800fbac:	68fb      	ldr	r3, [r7, #12]
 800fbae:	2201      	movs	r2, #1
 800fbb0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800fbb4:	e003      	b.n	800fbbe <TIM_DMAError+0x7e>
 800fbb6:	68fb      	ldr	r3, [r7, #12]
 800fbb8:	2201      	movs	r2, #1
 800fbba:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800fbbe:	68f8      	ldr	r0, [r7, #12]
 800fbc0:	f7ff ffb4 	bl	800fb2c <HAL_TIM_ErrorCallback>
 800fbc4:	68fb      	ldr	r3, [r7, #12]
 800fbc6:	2200      	movs	r2, #0
 800fbc8:	771a      	strb	r2, [r3, #28]
 800fbca:	bf00      	nop
 800fbcc:	3710      	adds	r7, #16
 800fbce:	46bd      	mov	sp, r7
 800fbd0:	bd80      	pop	{r7, pc}

0800fbd2 <TIM_DMADelayPulseCplt>:
 800fbd2:	b580      	push	{r7, lr}
 800fbd4:	b084      	sub	sp, #16
 800fbd6:	af00      	add	r7, sp, #0
 800fbd8:	6078      	str	r0, [r7, #4]
 800fbda:	687b      	ldr	r3, [r7, #4]
 800fbdc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fbde:	60fb      	str	r3, [r7, #12]
 800fbe0:	68fb      	ldr	r3, [r7, #12]
 800fbe2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fbe4:	687a      	ldr	r2, [r7, #4]
 800fbe6:	429a      	cmp	r2, r3
 800fbe8:	d10b      	bne.n	800fc02 <TIM_DMADelayPulseCplt+0x30>
 800fbea:	68fb      	ldr	r3, [r7, #12]
 800fbec:	2201      	movs	r2, #1
 800fbee:	771a      	strb	r2, [r3, #28]
 800fbf0:	687b      	ldr	r3, [r7, #4]
 800fbf2:	69db      	ldr	r3, [r3, #28]
 800fbf4:	2b00      	cmp	r3, #0
 800fbf6:	d136      	bne.n	800fc66 <TIM_DMADelayPulseCplt+0x94>
 800fbf8:	68fb      	ldr	r3, [r7, #12]
 800fbfa:	2201      	movs	r2, #1
 800fbfc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800fc00:	e031      	b.n	800fc66 <TIM_DMADelayPulseCplt+0x94>
 800fc02:	68fb      	ldr	r3, [r7, #12]
 800fc04:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800fc06:	687a      	ldr	r2, [r7, #4]
 800fc08:	429a      	cmp	r2, r3
 800fc0a:	d10b      	bne.n	800fc24 <TIM_DMADelayPulseCplt+0x52>
 800fc0c:	68fb      	ldr	r3, [r7, #12]
 800fc0e:	2202      	movs	r2, #2
 800fc10:	771a      	strb	r2, [r3, #28]
 800fc12:	687b      	ldr	r3, [r7, #4]
 800fc14:	69db      	ldr	r3, [r3, #28]
 800fc16:	2b00      	cmp	r3, #0
 800fc18:	d125      	bne.n	800fc66 <TIM_DMADelayPulseCplt+0x94>
 800fc1a:	68fb      	ldr	r3, [r7, #12]
 800fc1c:	2201      	movs	r2, #1
 800fc1e:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800fc22:	e020      	b.n	800fc66 <TIM_DMADelayPulseCplt+0x94>
 800fc24:	68fb      	ldr	r3, [r7, #12]
 800fc26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fc28:	687a      	ldr	r2, [r7, #4]
 800fc2a:	429a      	cmp	r2, r3
 800fc2c:	d10b      	bne.n	800fc46 <TIM_DMADelayPulseCplt+0x74>
 800fc2e:	68fb      	ldr	r3, [r7, #12]
 800fc30:	2204      	movs	r2, #4
 800fc32:	771a      	strb	r2, [r3, #28]
 800fc34:	687b      	ldr	r3, [r7, #4]
 800fc36:	69db      	ldr	r3, [r3, #28]
 800fc38:	2b00      	cmp	r3, #0
 800fc3a:	d114      	bne.n	800fc66 <TIM_DMADelayPulseCplt+0x94>
 800fc3c:	68fb      	ldr	r3, [r7, #12]
 800fc3e:	2201      	movs	r2, #1
 800fc40:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800fc44:	e00f      	b.n	800fc66 <TIM_DMADelayPulseCplt+0x94>
 800fc46:	68fb      	ldr	r3, [r7, #12]
 800fc48:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800fc4a:	687a      	ldr	r2, [r7, #4]
 800fc4c:	429a      	cmp	r2, r3
 800fc4e:	d10a      	bne.n	800fc66 <TIM_DMADelayPulseCplt+0x94>
 800fc50:	68fb      	ldr	r3, [r7, #12]
 800fc52:	2208      	movs	r2, #8
 800fc54:	771a      	strb	r2, [r3, #28]
 800fc56:	687b      	ldr	r3, [r7, #4]
 800fc58:	69db      	ldr	r3, [r3, #28]
 800fc5a:	2b00      	cmp	r3, #0
 800fc5c:	d103      	bne.n	800fc66 <TIM_DMADelayPulseCplt+0x94>
 800fc5e:	68fb      	ldr	r3, [r7, #12]
 800fc60:	2201      	movs	r2, #1
 800fc62:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800fc66:	68f8      	ldr	r0, [r7, #12]
 800fc68:	f7ff ff42 	bl	800faf0 <HAL_TIM_PWM_PulseFinishedCallback>
 800fc6c:	68fb      	ldr	r3, [r7, #12]
 800fc6e:	2200      	movs	r2, #0
 800fc70:	771a      	strb	r2, [r3, #28]
 800fc72:	bf00      	nop
 800fc74:	3710      	adds	r7, #16
 800fc76:	46bd      	mov	sp, r7
 800fc78:	bd80      	pop	{r7, pc}

0800fc7a <TIM_DMADelayPulseHalfCplt>:
 800fc7a:	b580      	push	{r7, lr}
 800fc7c:	b084      	sub	sp, #16
 800fc7e:	af00      	add	r7, sp, #0
 800fc80:	6078      	str	r0, [r7, #4]
 800fc82:	687b      	ldr	r3, [r7, #4]
 800fc84:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fc86:	60fb      	str	r3, [r7, #12]
 800fc88:	68fb      	ldr	r3, [r7, #12]
 800fc8a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fc8c:	687a      	ldr	r2, [r7, #4]
 800fc8e:	429a      	cmp	r2, r3
 800fc90:	d103      	bne.n	800fc9a <TIM_DMADelayPulseHalfCplt+0x20>
 800fc92:	68fb      	ldr	r3, [r7, #12]
 800fc94:	2201      	movs	r2, #1
 800fc96:	771a      	strb	r2, [r3, #28]
 800fc98:	e019      	b.n	800fcce <TIM_DMADelayPulseHalfCplt+0x54>
 800fc9a:	68fb      	ldr	r3, [r7, #12]
 800fc9c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800fc9e:	687a      	ldr	r2, [r7, #4]
 800fca0:	429a      	cmp	r2, r3
 800fca2:	d103      	bne.n	800fcac <TIM_DMADelayPulseHalfCplt+0x32>
 800fca4:	68fb      	ldr	r3, [r7, #12]
 800fca6:	2202      	movs	r2, #2
 800fca8:	771a      	strb	r2, [r3, #28]
 800fcaa:	e010      	b.n	800fcce <TIM_DMADelayPulseHalfCplt+0x54>
 800fcac:	68fb      	ldr	r3, [r7, #12]
 800fcae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fcb0:	687a      	ldr	r2, [r7, #4]
 800fcb2:	429a      	cmp	r2, r3
 800fcb4:	d103      	bne.n	800fcbe <TIM_DMADelayPulseHalfCplt+0x44>
 800fcb6:	68fb      	ldr	r3, [r7, #12]
 800fcb8:	2204      	movs	r2, #4
 800fcba:	771a      	strb	r2, [r3, #28]
 800fcbc:	e007      	b.n	800fcce <TIM_DMADelayPulseHalfCplt+0x54>
 800fcbe:	68fb      	ldr	r3, [r7, #12]
 800fcc0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800fcc2:	687a      	ldr	r2, [r7, #4]
 800fcc4:	429a      	cmp	r2, r3
 800fcc6:	d102      	bne.n	800fcce <TIM_DMADelayPulseHalfCplt+0x54>
 800fcc8:	68fb      	ldr	r3, [r7, #12]
 800fcca:	2208      	movs	r2, #8
 800fccc:	771a      	strb	r2, [r3, #28]
 800fcce:	68f8      	ldr	r0, [r7, #12]
 800fcd0:	f7ff ff18 	bl	800fb04 <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>
 800fcd4:	68fb      	ldr	r3, [r7, #12]
 800fcd6:	2200      	movs	r2, #0
 800fcd8:	771a      	strb	r2, [r3, #28]
 800fcda:	bf00      	nop
 800fcdc:	3710      	adds	r7, #16
 800fcde:	46bd      	mov	sp, r7
 800fce0:	bd80      	pop	{r7, pc}
	...

0800fce4 <TIM_Base_SetConfig>:
 800fce4:	b480      	push	{r7}
 800fce6:	b085      	sub	sp, #20
 800fce8:	af00      	add	r7, sp, #0
 800fcea:	6078      	str	r0, [r7, #4]
 800fcec:	6039      	str	r1, [r7, #0]
 800fcee:	687b      	ldr	r3, [r7, #4]
 800fcf0:	681b      	ldr	r3, [r3, #0]
 800fcf2:	60fb      	str	r3, [r7, #12]
 800fcf4:	687b      	ldr	r3, [r7, #4]
 800fcf6:	4a4a      	ldr	r2, [pc, #296]	@ (800fe20 <TIM_Base_SetConfig+0x13c>)
 800fcf8:	4293      	cmp	r3, r2
 800fcfa:	d013      	beq.n	800fd24 <TIM_Base_SetConfig+0x40>
 800fcfc:	687b      	ldr	r3, [r7, #4]
 800fcfe:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800fd02:	d00f      	beq.n	800fd24 <TIM_Base_SetConfig+0x40>
 800fd04:	687b      	ldr	r3, [r7, #4]
 800fd06:	4a47      	ldr	r2, [pc, #284]	@ (800fe24 <TIM_Base_SetConfig+0x140>)
 800fd08:	4293      	cmp	r3, r2
 800fd0a:	d00b      	beq.n	800fd24 <TIM_Base_SetConfig+0x40>
 800fd0c:	687b      	ldr	r3, [r7, #4]
 800fd0e:	4a46      	ldr	r2, [pc, #280]	@ (800fe28 <TIM_Base_SetConfig+0x144>)
 800fd10:	4293      	cmp	r3, r2
 800fd12:	d007      	beq.n	800fd24 <TIM_Base_SetConfig+0x40>
 800fd14:	687b      	ldr	r3, [r7, #4]
 800fd16:	4a45      	ldr	r2, [pc, #276]	@ (800fe2c <TIM_Base_SetConfig+0x148>)
 800fd18:	4293      	cmp	r3, r2
 800fd1a:	d003      	beq.n	800fd24 <TIM_Base_SetConfig+0x40>
 800fd1c:	687b      	ldr	r3, [r7, #4]
 800fd1e:	4a44      	ldr	r2, [pc, #272]	@ (800fe30 <TIM_Base_SetConfig+0x14c>)
 800fd20:	4293      	cmp	r3, r2
 800fd22:	d108      	bne.n	800fd36 <TIM_Base_SetConfig+0x52>
 800fd24:	68fb      	ldr	r3, [r7, #12]
 800fd26:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800fd2a:	60fb      	str	r3, [r7, #12]
 800fd2c:	683b      	ldr	r3, [r7, #0]
 800fd2e:	685b      	ldr	r3, [r3, #4]
 800fd30:	68fa      	ldr	r2, [r7, #12]
 800fd32:	4313      	orrs	r3, r2
 800fd34:	60fb      	str	r3, [r7, #12]
 800fd36:	687b      	ldr	r3, [r7, #4]
 800fd38:	4a39      	ldr	r2, [pc, #228]	@ (800fe20 <TIM_Base_SetConfig+0x13c>)
 800fd3a:	4293      	cmp	r3, r2
 800fd3c:	d027      	beq.n	800fd8e <TIM_Base_SetConfig+0xaa>
 800fd3e:	687b      	ldr	r3, [r7, #4]
 800fd40:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800fd44:	d023      	beq.n	800fd8e <TIM_Base_SetConfig+0xaa>
 800fd46:	687b      	ldr	r3, [r7, #4]
 800fd48:	4a36      	ldr	r2, [pc, #216]	@ (800fe24 <TIM_Base_SetConfig+0x140>)
 800fd4a:	4293      	cmp	r3, r2
 800fd4c:	d01f      	beq.n	800fd8e <TIM_Base_SetConfig+0xaa>
 800fd4e:	687b      	ldr	r3, [r7, #4]
 800fd50:	4a35      	ldr	r2, [pc, #212]	@ (800fe28 <TIM_Base_SetConfig+0x144>)
 800fd52:	4293      	cmp	r3, r2
 800fd54:	d01b      	beq.n	800fd8e <TIM_Base_SetConfig+0xaa>
 800fd56:	687b      	ldr	r3, [r7, #4]
 800fd58:	4a34      	ldr	r2, [pc, #208]	@ (800fe2c <TIM_Base_SetConfig+0x148>)
 800fd5a:	4293      	cmp	r3, r2
 800fd5c:	d017      	beq.n	800fd8e <TIM_Base_SetConfig+0xaa>
 800fd5e:	687b      	ldr	r3, [r7, #4]
 800fd60:	4a33      	ldr	r2, [pc, #204]	@ (800fe30 <TIM_Base_SetConfig+0x14c>)
 800fd62:	4293      	cmp	r3, r2
 800fd64:	d013      	beq.n	800fd8e <TIM_Base_SetConfig+0xaa>
 800fd66:	687b      	ldr	r3, [r7, #4]
 800fd68:	4a32      	ldr	r2, [pc, #200]	@ (800fe34 <TIM_Base_SetConfig+0x150>)
 800fd6a:	4293      	cmp	r3, r2
 800fd6c:	d00f      	beq.n	800fd8e <TIM_Base_SetConfig+0xaa>
 800fd6e:	687b      	ldr	r3, [r7, #4]
 800fd70:	4a31      	ldr	r2, [pc, #196]	@ (800fe38 <TIM_Base_SetConfig+0x154>)
 800fd72:	4293      	cmp	r3, r2
 800fd74:	d00b      	beq.n	800fd8e <TIM_Base_SetConfig+0xaa>
 800fd76:	687b      	ldr	r3, [r7, #4]
 800fd78:	4a30      	ldr	r2, [pc, #192]	@ (800fe3c <TIM_Base_SetConfig+0x158>)
 800fd7a:	4293      	cmp	r3, r2
 800fd7c:	d007      	beq.n	800fd8e <TIM_Base_SetConfig+0xaa>
 800fd7e:	687b      	ldr	r3, [r7, #4]
 800fd80:	4a2f      	ldr	r2, [pc, #188]	@ (800fe40 <TIM_Base_SetConfig+0x15c>)
 800fd82:	4293      	cmp	r3, r2
 800fd84:	d003      	beq.n	800fd8e <TIM_Base_SetConfig+0xaa>
 800fd86:	687b      	ldr	r3, [r7, #4]
 800fd88:	4a2e      	ldr	r2, [pc, #184]	@ (800fe44 <TIM_Base_SetConfig+0x160>)
 800fd8a:	4293      	cmp	r3, r2
 800fd8c:	d108      	bne.n	800fda0 <TIM_Base_SetConfig+0xbc>
 800fd8e:	68fb      	ldr	r3, [r7, #12]
 800fd90:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800fd94:	60fb      	str	r3, [r7, #12]
 800fd96:	683b      	ldr	r3, [r7, #0]
 800fd98:	68db      	ldr	r3, [r3, #12]
 800fd9a:	68fa      	ldr	r2, [r7, #12]
 800fd9c:	4313      	orrs	r3, r2
 800fd9e:	60fb      	str	r3, [r7, #12]
 800fda0:	68fb      	ldr	r3, [r7, #12]
 800fda2:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800fda6:	683b      	ldr	r3, [r7, #0]
 800fda8:	695b      	ldr	r3, [r3, #20]
 800fdaa:	4313      	orrs	r3, r2
 800fdac:	60fb      	str	r3, [r7, #12]
 800fdae:	687b      	ldr	r3, [r7, #4]
 800fdb0:	68fa      	ldr	r2, [r7, #12]
 800fdb2:	601a      	str	r2, [r3, #0]
 800fdb4:	683b      	ldr	r3, [r7, #0]
 800fdb6:	689a      	ldr	r2, [r3, #8]
 800fdb8:	687b      	ldr	r3, [r7, #4]
 800fdba:	62da      	str	r2, [r3, #44]	@ 0x2c
 800fdbc:	683b      	ldr	r3, [r7, #0]
 800fdbe:	681a      	ldr	r2, [r3, #0]
 800fdc0:	687b      	ldr	r3, [r7, #4]
 800fdc2:	629a      	str	r2, [r3, #40]	@ 0x28
 800fdc4:	687b      	ldr	r3, [r7, #4]
 800fdc6:	4a16      	ldr	r2, [pc, #88]	@ (800fe20 <TIM_Base_SetConfig+0x13c>)
 800fdc8:	4293      	cmp	r3, r2
 800fdca:	d00f      	beq.n	800fdec <TIM_Base_SetConfig+0x108>
 800fdcc:	687b      	ldr	r3, [r7, #4]
 800fdce:	4a18      	ldr	r2, [pc, #96]	@ (800fe30 <TIM_Base_SetConfig+0x14c>)
 800fdd0:	4293      	cmp	r3, r2
 800fdd2:	d00b      	beq.n	800fdec <TIM_Base_SetConfig+0x108>
 800fdd4:	687b      	ldr	r3, [r7, #4]
 800fdd6:	4a17      	ldr	r2, [pc, #92]	@ (800fe34 <TIM_Base_SetConfig+0x150>)
 800fdd8:	4293      	cmp	r3, r2
 800fdda:	d007      	beq.n	800fdec <TIM_Base_SetConfig+0x108>
 800fddc:	687b      	ldr	r3, [r7, #4]
 800fdde:	4a16      	ldr	r2, [pc, #88]	@ (800fe38 <TIM_Base_SetConfig+0x154>)
 800fde0:	4293      	cmp	r3, r2
 800fde2:	d003      	beq.n	800fdec <TIM_Base_SetConfig+0x108>
 800fde4:	687b      	ldr	r3, [r7, #4]
 800fde6:	4a15      	ldr	r2, [pc, #84]	@ (800fe3c <TIM_Base_SetConfig+0x158>)
 800fde8:	4293      	cmp	r3, r2
 800fdea:	d103      	bne.n	800fdf4 <TIM_Base_SetConfig+0x110>
 800fdec:	683b      	ldr	r3, [r7, #0]
 800fdee:	691a      	ldr	r2, [r3, #16]
 800fdf0:	687b      	ldr	r3, [r7, #4]
 800fdf2:	631a      	str	r2, [r3, #48]	@ 0x30
 800fdf4:	687b      	ldr	r3, [r7, #4]
 800fdf6:	2201      	movs	r2, #1
 800fdf8:	615a      	str	r2, [r3, #20]
 800fdfa:	687b      	ldr	r3, [r7, #4]
 800fdfc:	691b      	ldr	r3, [r3, #16]
 800fdfe:	f003 0301 	and.w	r3, r3, #1
 800fe02:	2b01      	cmp	r3, #1
 800fe04:	d105      	bne.n	800fe12 <TIM_Base_SetConfig+0x12e>
 800fe06:	687b      	ldr	r3, [r7, #4]
 800fe08:	691b      	ldr	r3, [r3, #16]
 800fe0a:	f023 0201 	bic.w	r2, r3, #1
 800fe0e:	687b      	ldr	r3, [r7, #4]
 800fe10:	611a      	str	r2, [r3, #16]
 800fe12:	bf00      	nop
 800fe14:	3714      	adds	r7, #20
 800fe16:	46bd      	mov	sp, r7
 800fe18:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe1c:	4770      	bx	lr
 800fe1e:	bf00      	nop
 800fe20:	40010000 	.word	0x40010000
 800fe24:	40000400 	.word	0x40000400
 800fe28:	40000800 	.word	0x40000800
 800fe2c:	40000c00 	.word	0x40000c00
 800fe30:	40010400 	.word	0x40010400
 800fe34:	40014000 	.word	0x40014000
 800fe38:	40014400 	.word	0x40014400
 800fe3c:	40014800 	.word	0x40014800
 800fe40:	4000e000 	.word	0x4000e000
 800fe44:	4000e400 	.word	0x4000e400

0800fe48 <TIM_OC1_SetConfig>:
 800fe48:	b480      	push	{r7}
 800fe4a:	b087      	sub	sp, #28
 800fe4c:	af00      	add	r7, sp, #0
 800fe4e:	6078      	str	r0, [r7, #4]
 800fe50:	6039      	str	r1, [r7, #0]
 800fe52:	687b      	ldr	r3, [r7, #4]
 800fe54:	6a1b      	ldr	r3, [r3, #32]
 800fe56:	617b      	str	r3, [r7, #20]
 800fe58:	687b      	ldr	r3, [r7, #4]
 800fe5a:	6a1b      	ldr	r3, [r3, #32]
 800fe5c:	f023 0201 	bic.w	r2, r3, #1
 800fe60:	687b      	ldr	r3, [r7, #4]
 800fe62:	621a      	str	r2, [r3, #32]
 800fe64:	687b      	ldr	r3, [r7, #4]
 800fe66:	685b      	ldr	r3, [r3, #4]
 800fe68:	613b      	str	r3, [r7, #16]
 800fe6a:	687b      	ldr	r3, [r7, #4]
 800fe6c:	699b      	ldr	r3, [r3, #24]
 800fe6e:	60fb      	str	r3, [r7, #12]
 800fe70:	68fa      	ldr	r2, [r7, #12]
 800fe72:	4b37      	ldr	r3, [pc, #220]	@ (800ff50 <TIM_OC1_SetConfig+0x108>)
 800fe74:	4013      	ands	r3, r2
 800fe76:	60fb      	str	r3, [r7, #12]
 800fe78:	68fb      	ldr	r3, [r7, #12]
 800fe7a:	f023 0303 	bic.w	r3, r3, #3
 800fe7e:	60fb      	str	r3, [r7, #12]
 800fe80:	683b      	ldr	r3, [r7, #0]
 800fe82:	681b      	ldr	r3, [r3, #0]
 800fe84:	68fa      	ldr	r2, [r7, #12]
 800fe86:	4313      	orrs	r3, r2
 800fe88:	60fb      	str	r3, [r7, #12]
 800fe8a:	697b      	ldr	r3, [r7, #20]
 800fe8c:	f023 0302 	bic.w	r3, r3, #2
 800fe90:	617b      	str	r3, [r7, #20]
 800fe92:	683b      	ldr	r3, [r7, #0]
 800fe94:	689b      	ldr	r3, [r3, #8]
 800fe96:	697a      	ldr	r2, [r7, #20]
 800fe98:	4313      	orrs	r3, r2
 800fe9a:	617b      	str	r3, [r7, #20]
 800fe9c:	687b      	ldr	r3, [r7, #4]
 800fe9e:	4a2d      	ldr	r2, [pc, #180]	@ (800ff54 <TIM_OC1_SetConfig+0x10c>)
 800fea0:	4293      	cmp	r3, r2
 800fea2:	d00f      	beq.n	800fec4 <TIM_OC1_SetConfig+0x7c>
 800fea4:	687b      	ldr	r3, [r7, #4]
 800fea6:	4a2c      	ldr	r2, [pc, #176]	@ (800ff58 <TIM_OC1_SetConfig+0x110>)
 800fea8:	4293      	cmp	r3, r2
 800feaa:	d00b      	beq.n	800fec4 <TIM_OC1_SetConfig+0x7c>
 800feac:	687b      	ldr	r3, [r7, #4]
 800feae:	4a2b      	ldr	r2, [pc, #172]	@ (800ff5c <TIM_OC1_SetConfig+0x114>)
 800feb0:	4293      	cmp	r3, r2
 800feb2:	d007      	beq.n	800fec4 <TIM_OC1_SetConfig+0x7c>
 800feb4:	687b      	ldr	r3, [r7, #4]
 800feb6:	4a2a      	ldr	r2, [pc, #168]	@ (800ff60 <TIM_OC1_SetConfig+0x118>)
 800feb8:	4293      	cmp	r3, r2
 800feba:	d003      	beq.n	800fec4 <TIM_OC1_SetConfig+0x7c>
 800febc:	687b      	ldr	r3, [r7, #4]
 800febe:	4a29      	ldr	r2, [pc, #164]	@ (800ff64 <TIM_OC1_SetConfig+0x11c>)
 800fec0:	4293      	cmp	r3, r2
 800fec2:	d10c      	bne.n	800fede <TIM_OC1_SetConfig+0x96>
 800fec4:	697b      	ldr	r3, [r7, #20]
 800fec6:	f023 0308 	bic.w	r3, r3, #8
 800feca:	617b      	str	r3, [r7, #20]
 800fecc:	683b      	ldr	r3, [r7, #0]
 800fece:	68db      	ldr	r3, [r3, #12]
 800fed0:	697a      	ldr	r2, [r7, #20]
 800fed2:	4313      	orrs	r3, r2
 800fed4:	617b      	str	r3, [r7, #20]
 800fed6:	697b      	ldr	r3, [r7, #20]
 800fed8:	f023 0304 	bic.w	r3, r3, #4
 800fedc:	617b      	str	r3, [r7, #20]
 800fede:	687b      	ldr	r3, [r7, #4]
 800fee0:	4a1c      	ldr	r2, [pc, #112]	@ (800ff54 <TIM_OC1_SetConfig+0x10c>)
 800fee2:	4293      	cmp	r3, r2
 800fee4:	d00f      	beq.n	800ff06 <TIM_OC1_SetConfig+0xbe>
 800fee6:	687b      	ldr	r3, [r7, #4]
 800fee8:	4a1b      	ldr	r2, [pc, #108]	@ (800ff58 <TIM_OC1_SetConfig+0x110>)
 800feea:	4293      	cmp	r3, r2
 800feec:	d00b      	beq.n	800ff06 <TIM_OC1_SetConfig+0xbe>
 800feee:	687b      	ldr	r3, [r7, #4]
 800fef0:	4a1a      	ldr	r2, [pc, #104]	@ (800ff5c <TIM_OC1_SetConfig+0x114>)
 800fef2:	4293      	cmp	r3, r2
 800fef4:	d007      	beq.n	800ff06 <TIM_OC1_SetConfig+0xbe>
 800fef6:	687b      	ldr	r3, [r7, #4]
 800fef8:	4a19      	ldr	r2, [pc, #100]	@ (800ff60 <TIM_OC1_SetConfig+0x118>)
 800fefa:	4293      	cmp	r3, r2
 800fefc:	d003      	beq.n	800ff06 <TIM_OC1_SetConfig+0xbe>
 800fefe:	687b      	ldr	r3, [r7, #4]
 800ff00:	4a18      	ldr	r2, [pc, #96]	@ (800ff64 <TIM_OC1_SetConfig+0x11c>)
 800ff02:	4293      	cmp	r3, r2
 800ff04:	d111      	bne.n	800ff2a <TIM_OC1_SetConfig+0xe2>
 800ff06:	693b      	ldr	r3, [r7, #16]
 800ff08:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800ff0c:	613b      	str	r3, [r7, #16]
 800ff0e:	693b      	ldr	r3, [r7, #16]
 800ff10:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800ff14:	613b      	str	r3, [r7, #16]
 800ff16:	683b      	ldr	r3, [r7, #0]
 800ff18:	695b      	ldr	r3, [r3, #20]
 800ff1a:	693a      	ldr	r2, [r7, #16]
 800ff1c:	4313      	orrs	r3, r2
 800ff1e:	613b      	str	r3, [r7, #16]
 800ff20:	683b      	ldr	r3, [r7, #0]
 800ff22:	699b      	ldr	r3, [r3, #24]
 800ff24:	693a      	ldr	r2, [r7, #16]
 800ff26:	4313      	orrs	r3, r2
 800ff28:	613b      	str	r3, [r7, #16]
 800ff2a:	687b      	ldr	r3, [r7, #4]
 800ff2c:	693a      	ldr	r2, [r7, #16]
 800ff2e:	605a      	str	r2, [r3, #4]
 800ff30:	687b      	ldr	r3, [r7, #4]
 800ff32:	68fa      	ldr	r2, [r7, #12]
 800ff34:	619a      	str	r2, [r3, #24]
 800ff36:	683b      	ldr	r3, [r7, #0]
 800ff38:	685a      	ldr	r2, [r3, #4]
 800ff3a:	687b      	ldr	r3, [r7, #4]
 800ff3c:	635a      	str	r2, [r3, #52]	@ 0x34
 800ff3e:	687b      	ldr	r3, [r7, #4]
 800ff40:	697a      	ldr	r2, [r7, #20]
 800ff42:	621a      	str	r2, [r3, #32]
 800ff44:	bf00      	nop
 800ff46:	371c      	adds	r7, #28
 800ff48:	46bd      	mov	sp, r7
 800ff4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff4e:	4770      	bx	lr
 800ff50:	fffeff8f 	.word	0xfffeff8f
 800ff54:	40010000 	.word	0x40010000
 800ff58:	40010400 	.word	0x40010400
 800ff5c:	40014000 	.word	0x40014000
 800ff60:	40014400 	.word	0x40014400
 800ff64:	40014800 	.word	0x40014800

0800ff68 <TIM_OC2_SetConfig>:
 800ff68:	b480      	push	{r7}
 800ff6a:	b087      	sub	sp, #28
 800ff6c:	af00      	add	r7, sp, #0
 800ff6e:	6078      	str	r0, [r7, #4]
 800ff70:	6039      	str	r1, [r7, #0]
 800ff72:	687b      	ldr	r3, [r7, #4]
 800ff74:	6a1b      	ldr	r3, [r3, #32]
 800ff76:	617b      	str	r3, [r7, #20]
 800ff78:	687b      	ldr	r3, [r7, #4]
 800ff7a:	6a1b      	ldr	r3, [r3, #32]
 800ff7c:	f023 0210 	bic.w	r2, r3, #16
 800ff80:	687b      	ldr	r3, [r7, #4]
 800ff82:	621a      	str	r2, [r3, #32]
 800ff84:	687b      	ldr	r3, [r7, #4]
 800ff86:	685b      	ldr	r3, [r3, #4]
 800ff88:	613b      	str	r3, [r7, #16]
 800ff8a:	687b      	ldr	r3, [r7, #4]
 800ff8c:	699b      	ldr	r3, [r3, #24]
 800ff8e:	60fb      	str	r3, [r7, #12]
 800ff90:	68fa      	ldr	r2, [r7, #12]
 800ff92:	4b34      	ldr	r3, [pc, #208]	@ (8010064 <TIM_OC2_SetConfig+0xfc>)
 800ff94:	4013      	ands	r3, r2
 800ff96:	60fb      	str	r3, [r7, #12]
 800ff98:	68fb      	ldr	r3, [r7, #12]
 800ff9a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800ff9e:	60fb      	str	r3, [r7, #12]
 800ffa0:	683b      	ldr	r3, [r7, #0]
 800ffa2:	681b      	ldr	r3, [r3, #0]
 800ffa4:	021b      	lsls	r3, r3, #8
 800ffa6:	68fa      	ldr	r2, [r7, #12]
 800ffa8:	4313      	orrs	r3, r2
 800ffaa:	60fb      	str	r3, [r7, #12]
 800ffac:	697b      	ldr	r3, [r7, #20]
 800ffae:	f023 0320 	bic.w	r3, r3, #32
 800ffb2:	617b      	str	r3, [r7, #20]
 800ffb4:	683b      	ldr	r3, [r7, #0]
 800ffb6:	689b      	ldr	r3, [r3, #8]
 800ffb8:	011b      	lsls	r3, r3, #4
 800ffba:	697a      	ldr	r2, [r7, #20]
 800ffbc:	4313      	orrs	r3, r2
 800ffbe:	617b      	str	r3, [r7, #20]
 800ffc0:	687b      	ldr	r3, [r7, #4]
 800ffc2:	4a29      	ldr	r2, [pc, #164]	@ (8010068 <TIM_OC2_SetConfig+0x100>)
 800ffc4:	4293      	cmp	r3, r2
 800ffc6:	d003      	beq.n	800ffd0 <TIM_OC2_SetConfig+0x68>
 800ffc8:	687b      	ldr	r3, [r7, #4]
 800ffca:	4a28      	ldr	r2, [pc, #160]	@ (801006c <TIM_OC2_SetConfig+0x104>)
 800ffcc:	4293      	cmp	r3, r2
 800ffce:	d10d      	bne.n	800ffec <TIM_OC2_SetConfig+0x84>
 800ffd0:	697b      	ldr	r3, [r7, #20]
 800ffd2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800ffd6:	617b      	str	r3, [r7, #20]
 800ffd8:	683b      	ldr	r3, [r7, #0]
 800ffda:	68db      	ldr	r3, [r3, #12]
 800ffdc:	011b      	lsls	r3, r3, #4
 800ffde:	697a      	ldr	r2, [r7, #20]
 800ffe0:	4313      	orrs	r3, r2
 800ffe2:	617b      	str	r3, [r7, #20]
 800ffe4:	697b      	ldr	r3, [r7, #20]
 800ffe6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800ffea:	617b      	str	r3, [r7, #20]
 800ffec:	687b      	ldr	r3, [r7, #4]
 800ffee:	4a1e      	ldr	r2, [pc, #120]	@ (8010068 <TIM_OC2_SetConfig+0x100>)
 800fff0:	4293      	cmp	r3, r2
 800fff2:	d00f      	beq.n	8010014 <TIM_OC2_SetConfig+0xac>
 800fff4:	687b      	ldr	r3, [r7, #4]
 800fff6:	4a1d      	ldr	r2, [pc, #116]	@ (801006c <TIM_OC2_SetConfig+0x104>)
 800fff8:	4293      	cmp	r3, r2
 800fffa:	d00b      	beq.n	8010014 <TIM_OC2_SetConfig+0xac>
 800fffc:	687b      	ldr	r3, [r7, #4]
 800fffe:	4a1c      	ldr	r2, [pc, #112]	@ (8010070 <TIM_OC2_SetConfig+0x108>)
 8010000:	4293      	cmp	r3, r2
 8010002:	d007      	beq.n	8010014 <TIM_OC2_SetConfig+0xac>
 8010004:	687b      	ldr	r3, [r7, #4]
 8010006:	4a1b      	ldr	r2, [pc, #108]	@ (8010074 <TIM_OC2_SetConfig+0x10c>)
 8010008:	4293      	cmp	r3, r2
 801000a:	d003      	beq.n	8010014 <TIM_OC2_SetConfig+0xac>
 801000c:	687b      	ldr	r3, [r7, #4]
 801000e:	4a1a      	ldr	r2, [pc, #104]	@ (8010078 <TIM_OC2_SetConfig+0x110>)
 8010010:	4293      	cmp	r3, r2
 8010012:	d113      	bne.n	801003c <TIM_OC2_SetConfig+0xd4>
 8010014:	693b      	ldr	r3, [r7, #16]
 8010016:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 801001a:	613b      	str	r3, [r7, #16]
 801001c:	693b      	ldr	r3, [r7, #16]
 801001e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8010022:	613b      	str	r3, [r7, #16]
 8010024:	683b      	ldr	r3, [r7, #0]
 8010026:	695b      	ldr	r3, [r3, #20]
 8010028:	009b      	lsls	r3, r3, #2
 801002a:	693a      	ldr	r2, [r7, #16]
 801002c:	4313      	orrs	r3, r2
 801002e:	613b      	str	r3, [r7, #16]
 8010030:	683b      	ldr	r3, [r7, #0]
 8010032:	699b      	ldr	r3, [r3, #24]
 8010034:	009b      	lsls	r3, r3, #2
 8010036:	693a      	ldr	r2, [r7, #16]
 8010038:	4313      	orrs	r3, r2
 801003a:	613b      	str	r3, [r7, #16]
 801003c:	687b      	ldr	r3, [r7, #4]
 801003e:	693a      	ldr	r2, [r7, #16]
 8010040:	605a      	str	r2, [r3, #4]
 8010042:	687b      	ldr	r3, [r7, #4]
 8010044:	68fa      	ldr	r2, [r7, #12]
 8010046:	619a      	str	r2, [r3, #24]
 8010048:	683b      	ldr	r3, [r7, #0]
 801004a:	685a      	ldr	r2, [r3, #4]
 801004c:	687b      	ldr	r3, [r7, #4]
 801004e:	639a      	str	r2, [r3, #56]	@ 0x38
 8010050:	687b      	ldr	r3, [r7, #4]
 8010052:	697a      	ldr	r2, [r7, #20]
 8010054:	621a      	str	r2, [r3, #32]
 8010056:	bf00      	nop
 8010058:	371c      	adds	r7, #28
 801005a:	46bd      	mov	sp, r7
 801005c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010060:	4770      	bx	lr
 8010062:	bf00      	nop
 8010064:	feff8fff 	.word	0xfeff8fff
 8010068:	40010000 	.word	0x40010000
 801006c:	40010400 	.word	0x40010400
 8010070:	40014000 	.word	0x40014000
 8010074:	40014400 	.word	0x40014400
 8010078:	40014800 	.word	0x40014800

0801007c <TIM_OC3_SetConfig>:
 801007c:	b480      	push	{r7}
 801007e:	b087      	sub	sp, #28
 8010080:	af00      	add	r7, sp, #0
 8010082:	6078      	str	r0, [r7, #4]
 8010084:	6039      	str	r1, [r7, #0]
 8010086:	687b      	ldr	r3, [r7, #4]
 8010088:	6a1b      	ldr	r3, [r3, #32]
 801008a:	617b      	str	r3, [r7, #20]
 801008c:	687b      	ldr	r3, [r7, #4]
 801008e:	6a1b      	ldr	r3, [r3, #32]
 8010090:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8010094:	687b      	ldr	r3, [r7, #4]
 8010096:	621a      	str	r2, [r3, #32]
 8010098:	687b      	ldr	r3, [r7, #4]
 801009a:	685b      	ldr	r3, [r3, #4]
 801009c:	613b      	str	r3, [r7, #16]
 801009e:	687b      	ldr	r3, [r7, #4]
 80100a0:	69db      	ldr	r3, [r3, #28]
 80100a2:	60fb      	str	r3, [r7, #12]
 80100a4:	68fa      	ldr	r2, [r7, #12]
 80100a6:	4b33      	ldr	r3, [pc, #204]	@ (8010174 <TIM_OC3_SetConfig+0xf8>)
 80100a8:	4013      	ands	r3, r2
 80100aa:	60fb      	str	r3, [r7, #12]
 80100ac:	68fb      	ldr	r3, [r7, #12]
 80100ae:	f023 0303 	bic.w	r3, r3, #3
 80100b2:	60fb      	str	r3, [r7, #12]
 80100b4:	683b      	ldr	r3, [r7, #0]
 80100b6:	681b      	ldr	r3, [r3, #0]
 80100b8:	68fa      	ldr	r2, [r7, #12]
 80100ba:	4313      	orrs	r3, r2
 80100bc:	60fb      	str	r3, [r7, #12]
 80100be:	697b      	ldr	r3, [r7, #20]
 80100c0:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80100c4:	617b      	str	r3, [r7, #20]
 80100c6:	683b      	ldr	r3, [r7, #0]
 80100c8:	689b      	ldr	r3, [r3, #8]
 80100ca:	021b      	lsls	r3, r3, #8
 80100cc:	697a      	ldr	r2, [r7, #20]
 80100ce:	4313      	orrs	r3, r2
 80100d0:	617b      	str	r3, [r7, #20]
 80100d2:	687b      	ldr	r3, [r7, #4]
 80100d4:	4a28      	ldr	r2, [pc, #160]	@ (8010178 <TIM_OC3_SetConfig+0xfc>)
 80100d6:	4293      	cmp	r3, r2
 80100d8:	d003      	beq.n	80100e2 <TIM_OC3_SetConfig+0x66>
 80100da:	687b      	ldr	r3, [r7, #4]
 80100dc:	4a27      	ldr	r2, [pc, #156]	@ (801017c <TIM_OC3_SetConfig+0x100>)
 80100de:	4293      	cmp	r3, r2
 80100e0:	d10d      	bne.n	80100fe <TIM_OC3_SetConfig+0x82>
 80100e2:	697b      	ldr	r3, [r7, #20]
 80100e4:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80100e8:	617b      	str	r3, [r7, #20]
 80100ea:	683b      	ldr	r3, [r7, #0]
 80100ec:	68db      	ldr	r3, [r3, #12]
 80100ee:	021b      	lsls	r3, r3, #8
 80100f0:	697a      	ldr	r2, [r7, #20]
 80100f2:	4313      	orrs	r3, r2
 80100f4:	617b      	str	r3, [r7, #20]
 80100f6:	697b      	ldr	r3, [r7, #20]
 80100f8:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80100fc:	617b      	str	r3, [r7, #20]
 80100fe:	687b      	ldr	r3, [r7, #4]
 8010100:	4a1d      	ldr	r2, [pc, #116]	@ (8010178 <TIM_OC3_SetConfig+0xfc>)
 8010102:	4293      	cmp	r3, r2
 8010104:	d00f      	beq.n	8010126 <TIM_OC3_SetConfig+0xaa>
 8010106:	687b      	ldr	r3, [r7, #4]
 8010108:	4a1c      	ldr	r2, [pc, #112]	@ (801017c <TIM_OC3_SetConfig+0x100>)
 801010a:	4293      	cmp	r3, r2
 801010c:	d00b      	beq.n	8010126 <TIM_OC3_SetConfig+0xaa>
 801010e:	687b      	ldr	r3, [r7, #4]
 8010110:	4a1b      	ldr	r2, [pc, #108]	@ (8010180 <TIM_OC3_SetConfig+0x104>)
 8010112:	4293      	cmp	r3, r2
 8010114:	d007      	beq.n	8010126 <TIM_OC3_SetConfig+0xaa>
 8010116:	687b      	ldr	r3, [r7, #4]
 8010118:	4a1a      	ldr	r2, [pc, #104]	@ (8010184 <TIM_OC3_SetConfig+0x108>)
 801011a:	4293      	cmp	r3, r2
 801011c:	d003      	beq.n	8010126 <TIM_OC3_SetConfig+0xaa>
 801011e:	687b      	ldr	r3, [r7, #4]
 8010120:	4a19      	ldr	r2, [pc, #100]	@ (8010188 <TIM_OC3_SetConfig+0x10c>)
 8010122:	4293      	cmp	r3, r2
 8010124:	d113      	bne.n	801014e <TIM_OC3_SetConfig+0xd2>
 8010126:	693b      	ldr	r3, [r7, #16]
 8010128:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801012c:	613b      	str	r3, [r7, #16]
 801012e:	693b      	ldr	r3, [r7, #16]
 8010130:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8010134:	613b      	str	r3, [r7, #16]
 8010136:	683b      	ldr	r3, [r7, #0]
 8010138:	695b      	ldr	r3, [r3, #20]
 801013a:	011b      	lsls	r3, r3, #4
 801013c:	693a      	ldr	r2, [r7, #16]
 801013e:	4313      	orrs	r3, r2
 8010140:	613b      	str	r3, [r7, #16]
 8010142:	683b      	ldr	r3, [r7, #0]
 8010144:	699b      	ldr	r3, [r3, #24]
 8010146:	011b      	lsls	r3, r3, #4
 8010148:	693a      	ldr	r2, [r7, #16]
 801014a:	4313      	orrs	r3, r2
 801014c:	613b      	str	r3, [r7, #16]
 801014e:	687b      	ldr	r3, [r7, #4]
 8010150:	693a      	ldr	r2, [r7, #16]
 8010152:	605a      	str	r2, [r3, #4]
 8010154:	687b      	ldr	r3, [r7, #4]
 8010156:	68fa      	ldr	r2, [r7, #12]
 8010158:	61da      	str	r2, [r3, #28]
 801015a:	683b      	ldr	r3, [r7, #0]
 801015c:	685a      	ldr	r2, [r3, #4]
 801015e:	687b      	ldr	r3, [r7, #4]
 8010160:	63da      	str	r2, [r3, #60]	@ 0x3c
 8010162:	687b      	ldr	r3, [r7, #4]
 8010164:	697a      	ldr	r2, [r7, #20]
 8010166:	621a      	str	r2, [r3, #32]
 8010168:	bf00      	nop
 801016a:	371c      	adds	r7, #28
 801016c:	46bd      	mov	sp, r7
 801016e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010172:	4770      	bx	lr
 8010174:	fffeff8f 	.word	0xfffeff8f
 8010178:	40010000 	.word	0x40010000
 801017c:	40010400 	.word	0x40010400
 8010180:	40014000 	.word	0x40014000
 8010184:	40014400 	.word	0x40014400
 8010188:	40014800 	.word	0x40014800

0801018c <TIM_OC4_SetConfig>:
 801018c:	b480      	push	{r7}
 801018e:	b087      	sub	sp, #28
 8010190:	af00      	add	r7, sp, #0
 8010192:	6078      	str	r0, [r7, #4]
 8010194:	6039      	str	r1, [r7, #0]
 8010196:	687b      	ldr	r3, [r7, #4]
 8010198:	6a1b      	ldr	r3, [r3, #32]
 801019a:	613b      	str	r3, [r7, #16]
 801019c:	687b      	ldr	r3, [r7, #4]
 801019e:	6a1b      	ldr	r3, [r3, #32]
 80101a0:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80101a4:	687b      	ldr	r3, [r7, #4]
 80101a6:	621a      	str	r2, [r3, #32]
 80101a8:	687b      	ldr	r3, [r7, #4]
 80101aa:	685b      	ldr	r3, [r3, #4]
 80101ac:	617b      	str	r3, [r7, #20]
 80101ae:	687b      	ldr	r3, [r7, #4]
 80101b0:	69db      	ldr	r3, [r3, #28]
 80101b2:	60fb      	str	r3, [r7, #12]
 80101b4:	68fa      	ldr	r2, [r7, #12]
 80101b6:	4b24      	ldr	r3, [pc, #144]	@ (8010248 <TIM_OC4_SetConfig+0xbc>)
 80101b8:	4013      	ands	r3, r2
 80101ba:	60fb      	str	r3, [r7, #12]
 80101bc:	68fb      	ldr	r3, [r7, #12]
 80101be:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80101c2:	60fb      	str	r3, [r7, #12]
 80101c4:	683b      	ldr	r3, [r7, #0]
 80101c6:	681b      	ldr	r3, [r3, #0]
 80101c8:	021b      	lsls	r3, r3, #8
 80101ca:	68fa      	ldr	r2, [r7, #12]
 80101cc:	4313      	orrs	r3, r2
 80101ce:	60fb      	str	r3, [r7, #12]
 80101d0:	693b      	ldr	r3, [r7, #16]
 80101d2:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80101d6:	613b      	str	r3, [r7, #16]
 80101d8:	683b      	ldr	r3, [r7, #0]
 80101da:	689b      	ldr	r3, [r3, #8]
 80101dc:	031b      	lsls	r3, r3, #12
 80101de:	693a      	ldr	r2, [r7, #16]
 80101e0:	4313      	orrs	r3, r2
 80101e2:	613b      	str	r3, [r7, #16]
 80101e4:	687b      	ldr	r3, [r7, #4]
 80101e6:	4a19      	ldr	r2, [pc, #100]	@ (801024c <TIM_OC4_SetConfig+0xc0>)
 80101e8:	4293      	cmp	r3, r2
 80101ea:	d00f      	beq.n	801020c <TIM_OC4_SetConfig+0x80>
 80101ec:	687b      	ldr	r3, [r7, #4]
 80101ee:	4a18      	ldr	r2, [pc, #96]	@ (8010250 <TIM_OC4_SetConfig+0xc4>)
 80101f0:	4293      	cmp	r3, r2
 80101f2:	d00b      	beq.n	801020c <TIM_OC4_SetConfig+0x80>
 80101f4:	687b      	ldr	r3, [r7, #4]
 80101f6:	4a17      	ldr	r2, [pc, #92]	@ (8010254 <TIM_OC4_SetConfig+0xc8>)
 80101f8:	4293      	cmp	r3, r2
 80101fa:	d007      	beq.n	801020c <TIM_OC4_SetConfig+0x80>
 80101fc:	687b      	ldr	r3, [r7, #4]
 80101fe:	4a16      	ldr	r2, [pc, #88]	@ (8010258 <TIM_OC4_SetConfig+0xcc>)
 8010200:	4293      	cmp	r3, r2
 8010202:	d003      	beq.n	801020c <TIM_OC4_SetConfig+0x80>
 8010204:	687b      	ldr	r3, [r7, #4]
 8010206:	4a15      	ldr	r2, [pc, #84]	@ (801025c <TIM_OC4_SetConfig+0xd0>)
 8010208:	4293      	cmp	r3, r2
 801020a:	d109      	bne.n	8010220 <TIM_OC4_SetConfig+0x94>
 801020c:	697b      	ldr	r3, [r7, #20]
 801020e:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8010212:	617b      	str	r3, [r7, #20]
 8010214:	683b      	ldr	r3, [r7, #0]
 8010216:	695b      	ldr	r3, [r3, #20]
 8010218:	019b      	lsls	r3, r3, #6
 801021a:	697a      	ldr	r2, [r7, #20]
 801021c:	4313      	orrs	r3, r2
 801021e:	617b      	str	r3, [r7, #20]
 8010220:	687b      	ldr	r3, [r7, #4]
 8010222:	697a      	ldr	r2, [r7, #20]
 8010224:	605a      	str	r2, [r3, #4]
 8010226:	687b      	ldr	r3, [r7, #4]
 8010228:	68fa      	ldr	r2, [r7, #12]
 801022a:	61da      	str	r2, [r3, #28]
 801022c:	683b      	ldr	r3, [r7, #0]
 801022e:	685a      	ldr	r2, [r3, #4]
 8010230:	687b      	ldr	r3, [r7, #4]
 8010232:	641a      	str	r2, [r3, #64]	@ 0x40
 8010234:	687b      	ldr	r3, [r7, #4]
 8010236:	693a      	ldr	r2, [r7, #16]
 8010238:	621a      	str	r2, [r3, #32]
 801023a:	bf00      	nop
 801023c:	371c      	adds	r7, #28
 801023e:	46bd      	mov	sp, r7
 8010240:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010244:	4770      	bx	lr
 8010246:	bf00      	nop
 8010248:	feff8fff 	.word	0xfeff8fff
 801024c:	40010000 	.word	0x40010000
 8010250:	40010400 	.word	0x40010400
 8010254:	40014000 	.word	0x40014000
 8010258:	40014400 	.word	0x40014400
 801025c:	40014800 	.word	0x40014800

08010260 <TIM_OC5_SetConfig>:
 8010260:	b480      	push	{r7}
 8010262:	b087      	sub	sp, #28
 8010264:	af00      	add	r7, sp, #0
 8010266:	6078      	str	r0, [r7, #4]
 8010268:	6039      	str	r1, [r7, #0]
 801026a:	687b      	ldr	r3, [r7, #4]
 801026c:	6a1b      	ldr	r3, [r3, #32]
 801026e:	613b      	str	r3, [r7, #16]
 8010270:	687b      	ldr	r3, [r7, #4]
 8010272:	6a1b      	ldr	r3, [r3, #32]
 8010274:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8010278:	687b      	ldr	r3, [r7, #4]
 801027a:	621a      	str	r2, [r3, #32]
 801027c:	687b      	ldr	r3, [r7, #4]
 801027e:	685b      	ldr	r3, [r3, #4]
 8010280:	617b      	str	r3, [r7, #20]
 8010282:	687b      	ldr	r3, [r7, #4]
 8010284:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010286:	60fb      	str	r3, [r7, #12]
 8010288:	68fa      	ldr	r2, [r7, #12]
 801028a:	4b21      	ldr	r3, [pc, #132]	@ (8010310 <TIM_OC5_SetConfig+0xb0>)
 801028c:	4013      	ands	r3, r2
 801028e:	60fb      	str	r3, [r7, #12]
 8010290:	683b      	ldr	r3, [r7, #0]
 8010292:	681b      	ldr	r3, [r3, #0]
 8010294:	68fa      	ldr	r2, [r7, #12]
 8010296:	4313      	orrs	r3, r2
 8010298:	60fb      	str	r3, [r7, #12]
 801029a:	693b      	ldr	r3, [r7, #16]
 801029c:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 80102a0:	613b      	str	r3, [r7, #16]
 80102a2:	683b      	ldr	r3, [r7, #0]
 80102a4:	689b      	ldr	r3, [r3, #8]
 80102a6:	041b      	lsls	r3, r3, #16
 80102a8:	693a      	ldr	r2, [r7, #16]
 80102aa:	4313      	orrs	r3, r2
 80102ac:	613b      	str	r3, [r7, #16]
 80102ae:	687b      	ldr	r3, [r7, #4]
 80102b0:	4a18      	ldr	r2, [pc, #96]	@ (8010314 <TIM_OC5_SetConfig+0xb4>)
 80102b2:	4293      	cmp	r3, r2
 80102b4:	d00f      	beq.n	80102d6 <TIM_OC5_SetConfig+0x76>
 80102b6:	687b      	ldr	r3, [r7, #4]
 80102b8:	4a17      	ldr	r2, [pc, #92]	@ (8010318 <TIM_OC5_SetConfig+0xb8>)
 80102ba:	4293      	cmp	r3, r2
 80102bc:	d00b      	beq.n	80102d6 <TIM_OC5_SetConfig+0x76>
 80102be:	687b      	ldr	r3, [r7, #4]
 80102c0:	4a16      	ldr	r2, [pc, #88]	@ (801031c <TIM_OC5_SetConfig+0xbc>)
 80102c2:	4293      	cmp	r3, r2
 80102c4:	d007      	beq.n	80102d6 <TIM_OC5_SetConfig+0x76>
 80102c6:	687b      	ldr	r3, [r7, #4]
 80102c8:	4a15      	ldr	r2, [pc, #84]	@ (8010320 <TIM_OC5_SetConfig+0xc0>)
 80102ca:	4293      	cmp	r3, r2
 80102cc:	d003      	beq.n	80102d6 <TIM_OC5_SetConfig+0x76>
 80102ce:	687b      	ldr	r3, [r7, #4]
 80102d0:	4a14      	ldr	r2, [pc, #80]	@ (8010324 <TIM_OC5_SetConfig+0xc4>)
 80102d2:	4293      	cmp	r3, r2
 80102d4:	d109      	bne.n	80102ea <TIM_OC5_SetConfig+0x8a>
 80102d6:	697b      	ldr	r3, [r7, #20]
 80102d8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80102dc:	617b      	str	r3, [r7, #20]
 80102de:	683b      	ldr	r3, [r7, #0]
 80102e0:	695b      	ldr	r3, [r3, #20]
 80102e2:	021b      	lsls	r3, r3, #8
 80102e4:	697a      	ldr	r2, [r7, #20]
 80102e6:	4313      	orrs	r3, r2
 80102e8:	617b      	str	r3, [r7, #20]
 80102ea:	687b      	ldr	r3, [r7, #4]
 80102ec:	697a      	ldr	r2, [r7, #20]
 80102ee:	605a      	str	r2, [r3, #4]
 80102f0:	687b      	ldr	r3, [r7, #4]
 80102f2:	68fa      	ldr	r2, [r7, #12]
 80102f4:	655a      	str	r2, [r3, #84]	@ 0x54
 80102f6:	683b      	ldr	r3, [r7, #0]
 80102f8:	685a      	ldr	r2, [r3, #4]
 80102fa:	687b      	ldr	r3, [r7, #4]
 80102fc:	659a      	str	r2, [r3, #88]	@ 0x58
 80102fe:	687b      	ldr	r3, [r7, #4]
 8010300:	693a      	ldr	r2, [r7, #16]
 8010302:	621a      	str	r2, [r3, #32]
 8010304:	bf00      	nop
 8010306:	371c      	adds	r7, #28
 8010308:	46bd      	mov	sp, r7
 801030a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801030e:	4770      	bx	lr
 8010310:	fffeff8f 	.word	0xfffeff8f
 8010314:	40010000 	.word	0x40010000
 8010318:	40010400 	.word	0x40010400
 801031c:	40014000 	.word	0x40014000
 8010320:	40014400 	.word	0x40014400
 8010324:	40014800 	.word	0x40014800

08010328 <TIM_OC6_SetConfig>:
 8010328:	b480      	push	{r7}
 801032a:	b087      	sub	sp, #28
 801032c:	af00      	add	r7, sp, #0
 801032e:	6078      	str	r0, [r7, #4]
 8010330:	6039      	str	r1, [r7, #0]
 8010332:	687b      	ldr	r3, [r7, #4]
 8010334:	6a1b      	ldr	r3, [r3, #32]
 8010336:	613b      	str	r3, [r7, #16]
 8010338:	687b      	ldr	r3, [r7, #4]
 801033a:	6a1b      	ldr	r3, [r3, #32]
 801033c:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8010340:	687b      	ldr	r3, [r7, #4]
 8010342:	621a      	str	r2, [r3, #32]
 8010344:	687b      	ldr	r3, [r7, #4]
 8010346:	685b      	ldr	r3, [r3, #4]
 8010348:	617b      	str	r3, [r7, #20]
 801034a:	687b      	ldr	r3, [r7, #4]
 801034c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801034e:	60fb      	str	r3, [r7, #12]
 8010350:	68fa      	ldr	r2, [r7, #12]
 8010352:	4b22      	ldr	r3, [pc, #136]	@ (80103dc <TIM_OC6_SetConfig+0xb4>)
 8010354:	4013      	ands	r3, r2
 8010356:	60fb      	str	r3, [r7, #12]
 8010358:	683b      	ldr	r3, [r7, #0]
 801035a:	681b      	ldr	r3, [r3, #0]
 801035c:	021b      	lsls	r3, r3, #8
 801035e:	68fa      	ldr	r2, [r7, #12]
 8010360:	4313      	orrs	r3, r2
 8010362:	60fb      	str	r3, [r7, #12]
 8010364:	693b      	ldr	r3, [r7, #16]
 8010366:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 801036a:	613b      	str	r3, [r7, #16]
 801036c:	683b      	ldr	r3, [r7, #0]
 801036e:	689b      	ldr	r3, [r3, #8]
 8010370:	051b      	lsls	r3, r3, #20
 8010372:	693a      	ldr	r2, [r7, #16]
 8010374:	4313      	orrs	r3, r2
 8010376:	613b      	str	r3, [r7, #16]
 8010378:	687b      	ldr	r3, [r7, #4]
 801037a:	4a19      	ldr	r2, [pc, #100]	@ (80103e0 <TIM_OC6_SetConfig+0xb8>)
 801037c:	4293      	cmp	r3, r2
 801037e:	d00f      	beq.n	80103a0 <TIM_OC6_SetConfig+0x78>
 8010380:	687b      	ldr	r3, [r7, #4]
 8010382:	4a18      	ldr	r2, [pc, #96]	@ (80103e4 <TIM_OC6_SetConfig+0xbc>)
 8010384:	4293      	cmp	r3, r2
 8010386:	d00b      	beq.n	80103a0 <TIM_OC6_SetConfig+0x78>
 8010388:	687b      	ldr	r3, [r7, #4]
 801038a:	4a17      	ldr	r2, [pc, #92]	@ (80103e8 <TIM_OC6_SetConfig+0xc0>)
 801038c:	4293      	cmp	r3, r2
 801038e:	d007      	beq.n	80103a0 <TIM_OC6_SetConfig+0x78>
 8010390:	687b      	ldr	r3, [r7, #4]
 8010392:	4a16      	ldr	r2, [pc, #88]	@ (80103ec <TIM_OC6_SetConfig+0xc4>)
 8010394:	4293      	cmp	r3, r2
 8010396:	d003      	beq.n	80103a0 <TIM_OC6_SetConfig+0x78>
 8010398:	687b      	ldr	r3, [r7, #4]
 801039a:	4a15      	ldr	r2, [pc, #84]	@ (80103f0 <TIM_OC6_SetConfig+0xc8>)
 801039c:	4293      	cmp	r3, r2
 801039e:	d109      	bne.n	80103b4 <TIM_OC6_SetConfig+0x8c>
 80103a0:	697b      	ldr	r3, [r7, #20]
 80103a2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80103a6:	617b      	str	r3, [r7, #20]
 80103a8:	683b      	ldr	r3, [r7, #0]
 80103aa:	695b      	ldr	r3, [r3, #20]
 80103ac:	029b      	lsls	r3, r3, #10
 80103ae:	697a      	ldr	r2, [r7, #20]
 80103b0:	4313      	orrs	r3, r2
 80103b2:	617b      	str	r3, [r7, #20]
 80103b4:	687b      	ldr	r3, [r7, #4]
 80103b6:	697a      	ldr	r2, [r7, #20]
 80103b8:	605a      	str	r2, [r3, #4]
 80103ba:	687b      	ldr	r3, [r7, #4]
 80103bc:	68fa      	ldr	r2, [r7, #12]
 80103be:	655a      	str	r2, [r3, #84]	@ 0x54
 80103c0:	683b      	ldr	r3, [r7, #0]
 80103c2:	685a      	ldr	r2, [r3, #4]
 80103c4:	687b      	ldr	r3, [r7, #4]
 80103c6:	65da      	str	r2, [r3, #92]	@ 0x5c
 80103c8:	687b      	ldr	r3, [r7, #4]
 80103ca:	693a      	ldr	r2, [r7, #16]
 80103cc:	621a      	str	r2, [r3, #32]
 80103ce:	bf00      	nop
 80103d0:	371c      	adds	r7, #28
 80103d2:	46bd      	mov	sp, r7
 80103d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80103d8:	4770      	bx	lr
 80103da:	bf00      	nop
 80103dc:	feff8fff 	.word	0xfeff8fff
 80103e0:	40010000 	.word	0x40010000
 80103e4:	40010400 	.word	0x40010400
 80103e8:	40014000 	.word	0x40014000
 80103ec:	40014400 	.word	0x40014400
 80103f0:	40014800 	.word	0x40014800

080103f4 <TIM_TI1_ConfigInputStage>:
 80103f4:	b480      	push	{r7}
 80103f6:	b087      	sub	sp, #28
 80103f8:	af00      	add	r7, sp, #0
 80103fa:	60f8      	str	r0, [r7, #12]
 80103fc:	60b9      	str	r1, [r7, #8]
 80103fe:	607a      	str	r2, [r7, #4]
 8010400:	68fb      	ldr	r3, [r7, #12]
 8010402:	6a1b      	ldr	r3, [r3, #32]
 8010404:	617b      	str	r3, [r7, #20]
 8010406:	68fb      	ldr	r3, [r7, #12]
 8010408:	6a1b      	ldr	r3, [r3, #32]
 801040a:	f023 0201 	bic.w	r2, r3, #1
 801040e:	68fb      	ldr	r3, [r7, #12]
 8010410:	621a      	str	r2, [r3, #32]
 8010412:	68fb      	ldr	r3, [r7, #12]
 8010414:	699b      	ldr	r3, [r3, #24]
 8010416:	613b      	str	r3, [r7, #16]
 8010418:	693b      	ldr	r3, [r7, #16]
 801041a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 801041e:	613b      	str	r3, [r7, #16]
 8010420:	687b      	ldr	r3, [r7, #4]
 8010422:	011b      	lsls	r3, r3, #4
 8010424:	693a      	ldr	r2, [r7, #16]
 8010426:	4313      	orrs	r3, r2
 8010428:	613b      	str	r3, [r7, #16]
 801042a:	697b      	ldr	r3, [r7, #20]
 801042c:	f023 030a 	bic.w	r3, r3, #10
 8010430:	617b      	str	r3, [r7, #20]
 8010432:	697a      	ldr	r2, [r7, #20]
 8010434:	68bb      	ldr	r3, [r7, #8]
 8010436:	4313      	orrs	r3, r2
 8010438:	617b      	str	r3, [r7, #20]
 801043a:	68fb      	ldr	r3, [r7, #12]
 801043c:	693a      	ldr	r2, [r7, #16]
 801043e:	619a      	str	r2, [r3, #24]
 8010440:	68fb      	ldr	r3, [r7, #12]
 8010442:	697a      	ldr	r2, [r7, #20]
 8010444:	621a      	str	r2, [r3, #32]
 8010446:	bf00      	nop
 8010448:	371c      	adds	r7, #28
 801044a:	46bd      	mov	sp, r7
 801044c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010450:	4770      	bx	lr

08010452 <TIM_TI2_ConfigInputStage>:
 8010452:	b480      	push	{r7}
 8010454:	b087      	sub	sp, #28
 8010456:	af00      	add	r7, sp, #0
 8010458:	60f8      	str	r0, [r7, #12]
 801045a:	60b9      	str	r1, [r7, #8]
 801045c:	607a      	str	r2, [r7, #4]
 801045e:	68fb      	ldr	r3, [r7, #12]
 8010460:	6a1b      	ldr	r3, [r3, #32]
 8010462:	617b      	str	r3, [r7, #20]
 8010464:	68fb      	ldr	r3, [r7, #12]
 8010466:	6a1b      	ldr	r3, [r3, #32]
 8010468:	f023 0210 	bic.w	r2, r3, #16
 801046c:	68fb      	ldr	r3, [r7, #12]
 801046e:	621a      	str	r2, [r3, #32]
 8010470:	68fb      	ldr	r3, [r7, #12]
 8010472:	699b      	ldr	r3, [r3, #24]
 8010474:	613b      	str	r3, [r7, #16]
 8010476:	693b      	ldr	r3, [r7, #16]
 8010478:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 801047c:	613b      	str	r3, [r7, #16]
 801047e:	687b      	ldr	r3, [r7, #4]
 8010480:	031b      	lsls	r3, r3, #12
 8010482:	693a      	ldr	r2, [r7, #16]
 8010484:	4313      	orrs	r3, r2
 8010486:	613b      	str	r3, [r7, #16]
 8010488:	697b      	ldr	r3, [r7, #20]
 801048a:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 801048e:	617b      	str	r3, [r7, #20]
 8010490:	68bb      	ldr	r3, [r7, #8]
 8010492:	011b      	lsls	r3, r3, #4
 8010494:	697a      	ldr	r2, [r7, #20]
 8010496:	4313      	orrs	r3, r2
 8010498:	617b      	str	r3, [r7, #20]
 801049a:	68fb      	ldr	r3, [r7, #12]
 801049c:	693a      	ldr	r2, [r7, #16]
 801049e:	619a      	str	r2, [r3, #24]
 80104a0:	68fb      	ldr	r3, [r7, #12]
 80104a2:	697a      	ldr	r2, [r7, #20]
 80104a4:	621a      	str	r2, [r3, #32]
 80104a6:	bf00      	nop
 80104a8:	371c      	adds	r7, #28
 80104aa:	46bd      	mov	sp, r7
 80104ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80104b0:	4770      	bx	lr
	...

080104b4 <TIM_ITRx_SetConfig>:
 80104b4:	b480      	push	{r7}
 80104b6:	b085      	sub	sp, #20
 80104b8:	af00      	add	r7, sp, #0
 80104ba:	6078      	str	r0, [r7, #4]
 80104bc:	6039      	str	r1, [r7, #0]
 80104be:	687b      	ldr	r3, [r7, #4]
 80104c0:	689b      	ldr	r3, [r3, #8]
 80104c2:	60fb      	str	r3, [r7, #12]
 80104c4:	68fa      	ldr	r2, [r7, #12]
 80104c6:	4b09      	ldr	r3, [pc, #36]	@ (80104ec <TIM_ITRx_SetConfig+0x38>)
 80104c8:	4013      	ands	r3, r2
 80104ca:	60fb      	str	r3, [r7, #12]
 80104cc:	683a      	ldr	r2, [r7, #0]
 80104ce:	68fb      	ldr	r3, [r7, #12]
 80104d0:	4313      	orrs	r3, r2
 80104d2:	f043 0307 	orr.w	r3, r3, #7
 80104d6:	60fb      	str	r3, [r7, #12]
 80104d8:	687b      	ldr	r3, [r7, #4]
 80104da:	68fa      	ldr	r2, [r7, #12]
 80104dc:	609a      	str	r2, [r3, #8]
 80104de:	bf00      	nop
 80104e0:	3714      	adds	r7, #20
 80104e2:	46bd      	mov	sp, r7
 80104e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80104e8:	4770      	bx	lr
 80104ea:	bf00      	nop
 80104ec:	ffcfff8f 	.word	0xffcfff8f

080104f0 <TIM_ETR_SetConfig>:
 80104f0:	b480      	push	{r7}
 80104f2:	b087      	sub	sp, #28
 80104f4:	af00      	add	r7, sp, #0
 80104f6:	60f8      	str	r0, [r7, #12]
 80104f8:	60b9      	str	r1, [r7, #8]
 80104fa:	607a      	str	r2, [r7, #4]
 80104fc:	603b      	str	r3, [r7, #0]
 80104fe:	68fb      	ldr	r3, [r7, #12]
 8010500:	689b      	ldr	r3, [r3, #8]
 8010502:	617b      	str	r3, [r7, #20]
 8010504:	697b      	ldr	r3, [r7, #20]
 8010506:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 801050a:	617b      	str	r3, [r7, #20]
 801050c:	683b      	ldr	r3, [r7, #0]
 801050e:	021a      	lsls	r2, r3, #8
 8010510:	687b      	ldr	r3, [r7, #4]
 8010512:	431a      	orrs	r2, r3
 8010514:	68bb      	ldr	r3, [r7, #8]
 8010516:	4313      	orrs	r3, r2
 8010518:	697a      	ldr	r2, [r7, #20]
 801051a:	4313      	orrs	r3, r2
 801051c:	617b      	str	r3, [r7, #20]
 801051e:	68fb      	ldr	r3, [r7, #12]
 8010520:	697a      	ldr	r2, [r7, #20]
 8010522:	609a      	str	r2, [r3, #8]
 8010524:	bf00      	nop
 8010526:	371c      	adds	r7, #28
 8010528:	46bd      	mov	sp, r7
 801052a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801052e:	4770      	bx	lr

08010530 <TIM_CCxChannelCmd>:
 8010530:	b480      	push	{r7}
 8010532:	b087      	sub	sp, #28
 8010534:	af00      	add	r7, sp, #0
 8010536:	60f8      	str	r0, [r7, #12]
 8010538:	60b9      	str	r1, [r7, #8]
 801053a:	607a      	str	r2, [r7, #4]
 801053c:	68bb      	ldr	r3, [r7, #8]
 801053e:	f003 031f 	and.w	r3, r3, #31
 8010542:	2201      	movs	r2, #1
 8010544:	fa02 f303 	lsl.w	r3, r2, r3
 8010548:	617b      	str	r3, [r7, #20]
 801054a:	68fb      	ldr	r3, [r7, #12]
 801054c:	6a1a      	ldr	r2, [r3, #32]
 801054e:	697b      	ldr	r3, [r7, #20]
 8010550:	43db      	mvns	r3, r3
 8010552:	401a      	ands	r2, r3
 8010554:	68fb      	ldr	r3, [r7, #12]
 8010556:	621a      	str	r2, [r3, #32]
 8010558:	68fb      	ldr	r3, [r7, #12]
 801055a:	6a1a      	ldr	r2, [r3, #32]
 801055c:	68bb      	ldr	r3, [r7, #8]
 801055e:	f003 031f 	and.w	r3, r3, #31
 8010562:	6879      	ldr	r1, [r7, #4]
 8010564:	fa01 f303 	lsl.w	r3, r1, r3
 8010568:	431a      	orrs	r2, r3
 801056a:	68fb      	ldr	r3, [r7, #12]
 801056c:	621a      	str	r2, [r3, #32]
 801056e:	bf00      	nop
 8010570:	371c      	adds	r7, #28
 8010572:	46bd      	mov	sp, r7
 8010574:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010578:	4770      	bx	lr
	...

0801057c <HAL_TIMEx_MasterConfigSynchronization>:
 801057c:	b480      	push	{r7}
 801057e:	b085      	sub	sp, #20
 8010580:	af00      	add	r7, sp, #0
 8010582:	6078      	str	r0, [r7, #4]
 8010584:	6039      	str	r1, [r7, #0]
 8010586:	687b      	ldr	r3, [r7, #4]
 8010588:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 801058c:	2b01      	cmp	r3, #1
 801058e:	d101      	bne.n	8010594 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8010590:	2302      	movs	r3, #2
 8010592:	e077      	b.n	8010684 <HAL_TIMEx_MasterConfigSynchronization+0x108>
 8010594:	687b      	ldr	r3, [r7, #4]
 8010596:	2201      	movs	r2, #1
 8010598:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 801059c:	687b      	ldr	r3, [r7, #4]
 801059e:	2202      	movs	r2, #2
 80105a0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80105a4:	687b      	ldr	r3, [r7, #4]
 80105a6:	681b      	ldr	r3, [r3, #0]
 80105a8:	685b      	ldr	r3, [r3, #4]
 80105aa:	60fb      	str	r3, [r7, #12]
 80105ac:	687b      	ldr	r3, [r7, #4]
 80105ae:	681b      	ldr	r3, [r3, #0]
 80105b0:	689b      	ldr	r3, [r3, #8]
 80105b2:	60bb      	str	r3, [r7, #8]
 80105b4:	687b      	ldr	r3, [r7, #4]
 80105b6:	681b      	ldr	r3, [r3, #0]
 80105b8:	4a35      	ldr	r2, [pc, #212]	@ (8010690 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 80105ba:	4293      	cmp	r3, r2
 80105bc:	d004      	beq.n	80105c8 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 80105be:	687b      	ldr	r3, [r7, #4]
 80105c0:	681b      	ldr	r3, [r3, #0]
 80105c2:	4a34      	ldr	r2, [pc, #208]	@ (8010694 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 80105c4:	4293      	cmp	r3, r2
 80105c6:	d108      	bne.n	80105da <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80105c8:	68fb      	ldr	r3, [r7, #12]
 80105ca:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 80105ce:	60fb      	str	r3, [r7, #12]
 80105d0:	683b      	ldr	r3, [r7, #0]
 80105d2:	685b      	ldr	r3, [r3, #4]
 80105d4:	68fa      	ldr	r2, [r7, #12]
 80105d6:	4313      	orrs	r3, r2
 80105d8:	60fb      	str	r3, [r7, #12]
 80105da:	68fb      	ldr	r3, [r7, #12]
 80105dc:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80105e0:	60fb      	str	r3, [r7, #12]
 80105e2:	683b      	ldr	r3, [r7, #0]
 80105e4:	681b      	ldr	r3, [r3, #0]
 80105e6:	68fa      	ldr	r2, [r7, #12]
 80105e8:	4313      	orrs	r3, r2
 80105ea:	60fb      	str	r3, [r7, #12]
 80105ec:	687b      	ldr	r3, [r7, #4]
 80105ee:	681b      	ldr	r3, [r3, #0]
 80105f0:	68fa      	ldr	r2, [r7, #12]
 80105f2:	605a      	str	r2, [r3, #4]
 80105f4:	687b      	ldr	r3, [r7, #4]
 80105f6:	681b      	ldr	r3, [r3, #0]
 80105f8:	4a25      	ldr	r2, [pc, #148]	@ (8010690 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 80105fa:	4293      	cmp	r3, r2
 80105fc:	d02c      	beq.n	8010658 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 80105fe:	687b      	ldr	r3, [r7, #4]
 8010600:	681b      	ldr	r3, [r3, #0]
 8010602:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8010606:	d027      	beq.n	8010658 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 8010608:	687b      	ldr	r3, [r7, #4]
 801060a:	681b      	ldr	r3, [r3, #0]
 801060c:	4a22      	ldr	r2, [pc, #136]	@ (8010698 <HAL_TIMEx_MasterConfigSynchronization+0x11c>)
 801060e:	4293      	cmp	r3, r2
 8010610:	d022      	beq.n	8010658 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 8010612:	687b      	ldr	r3, [r7, #4]
 8010614:	681b      	ldr	r3, [r3, #0]
 8010616:	4a21      	ldr	r2, [pc, #132]	@ (801069c <HAL_TIMEx_MasterConfigSynchronization+0x120>)
 8010618:	4293      	cmp	r3, r2
 801061a:	d01d      	beq.n	8010658 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 801061c:	687b      	ldr	r3, [r7, #4]
 801061e:	681b      	ldr	r3, [r3, #0]
 8010620:	4a1f      	ldr	r2, [pc, #124]	@ (80106a0 <HAL_TIMEx_MasterConfigSynchronization+0x124>)
 8010622:	4293      	cmp	r3, r2
 8010624:	d018      	beq.n	8010658 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 8010626:	687b      	ldr	r3, [r7, #4]
 8010628:	681b      	ldr	r3, [r3, #0]
 801062a:	4a1a      	ldr	r2, [pc, #104]	@ (8010694 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 801062c:	4293      	cmp	r3, r2
 801062e:	d013      	beq.n	8010658 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 8010630:	687b      	ldr	r3, [r7, #4]
 8010632:	681b      	ldr	r3, [r3, #0]
 8010634:	4a1b      	ldr	r2, [pc, #108]	@ (80106a4 <HAL_TIMEx_MasterConfigSynchronization+0x128>)
 8010636:	4293      	cmp	r3, r2
 8010638:	d00e      	beq.n	8010658 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 801063a:	687b      	ldr	r3, [r7, #4]
 801063c:	681b      	ldr	r3, [r3, #0]
 801063e:	4a1a      	ldr	r2, [pc, #104]	@ (80106a8 <HAL_TIMEx_MasterConfigSynchronization+0x12c>)
 8010640:	4293      	cmp	r3, r2
 8010642:	d009      	beq.n	8010658 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 8010644:	687b      	ldr	r3, [r7, #4]
 8010646:	681b      	ldr	r3, [r3, #0]
 8010648:	4a18      	ldr	r2, [pc, #96]	@ (80106ac <HAL_TIMEx_MasterConfigSynchronization+0x130>)
 801064a:	4293      	cmp	r3, r2
 801064c:	d004      	beq.n	8010658 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 801064e:	687b      	ldr	r3, [r7, #4]
 8010650:	681b      	ldr	r3, [r3, #0]
 8010652:	4a17      	ldr	r2, [pc, #92]	@ (80106b0 <HAL_TIMEx_MasterConfigSynchronization+0x134>)
 8010654:	4293      	cmp	r3, r2
 8010656:	d10c      	bne.n	8010672 <HAL_TIMEx_MasterConfigSynchronization+0xf6>
 8010658:	68bb      	ldr	r3, [r7, #8]
 801065a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 801065e:	60bb      	str	r3, [r7, #8]
 8010660:	683b      	ldr	r3, [r7, #0]
 8010662:	689b      	ldr	r3, [r3, #8]
 8010664:	68ba      	ldr	r2, [r7, #8]
 8010666:	4313      	orrs	r3, r2
 8010668:	60bb      	str	r3, [r7, #8]
 801066a:	687b      	ldr	r3, [r7, #4]
 801066c:	681b      	ldr	r3, [r3, #0]
 801066e:	68ba      	ldr	r2, [r7, #8]
 8010670:	609a      	str	r2, [r3, #8]
 8010672:	687b      	ldr	r3, [r7, #4]
 8010674:	2201      	movs	r2, #1
 8010676:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 801067a:	687b      	ldr	r3, [r7, #4]
 801067c:	2200      	movs	r2, #0
 801067e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8010682:	2300      	movs	r3, #0
 8010684:	4618      	mov	r0, r3
 8010686:	3714      	adds	r7, #20
 8010688:	46bd      	mov	sp, r7
 801068a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801068e:	4770      	bx	lr
 8010690:	40010000 	.word	0x40010000
 8010694:	40010400 	.word	0x40010400
 8010698:	40000400 	.word	0x40000400
 801069c:	40000800 	.word	0x40000800
 80106a0:	40000c00 	.word	0x40000c00
 80106a4:	40001800 	.word	0x40001800
 80106a8:	40014000 	.word	0x40014000
 80106ac:	4000e000 	.word	0x4000e000
 80106b0:	4000e400 	.word	0x4000e400

080106b4 <HAL_TIMEx_CommutCallback>:
 80106b4:	b480      	push	{r7}
 80106b6:	b083      	sub	sp, #12
 80106b8:	af00      	add	r7, sp, #0
 80106ba:	6078      	str	r0, [r7, #4]
 80106bc:	bf00      	nop
 80106be:	370c      	adds	r7, #12
 80106c0:	46bd      	mov	sp, r7
 80106c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106c6:	4770      	bx	lr

080106c8 <HAL_TIMEx_BreakCallback>:
 80106c8:	b480      	push	{r7}
 80106ca:	b083      	sub	sp, #12
 80106cc:	af00      	add	r7, sp, #0
 80106ce:	6078      	str	r0, [r7, #4]
 80106d0:	bf00      	nop
 80106d2:	370c      	adds	r7, #12
 80106d4:	46bd      	mov	sp, r7
 80106d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106da:	4770      	bx	lr

080106dc <HAL_TIMEx_Break2Callback>:
 80106dc:	b480      	push	{r7}
 80106de:	b083      	sub	sp, #12
 80106e0:	af00      	add	r7, sp, #0
 80106e2:	6078      	str	r0, [r7, #4]
 80106e4:	bf00      	nop
 80106e6:	370c      	adds	r7, #12
 80106e8:	46bd      	mov	sp, r7
 80106ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106ee:	4770      	bx	lr

080106f0 <HAL_UART_Init>:
 80106f0:	b580      	push	{r7, lr}
 80106f2:	b082      	sub	sp, #8
 80106f4:	af00      	add	r7, sp, #0
 80106f6:	6078      	str	r0, [r7, #4]
 80106f8:	687b      	ldr	r3, [r7, #4]
 80106fa:	2b00      	cmp	r3, #0
 80106fc:	d101      	bne.n	8010702 <HAL_UART_Init+0x12>
 80106fe:	2301      	movs	r3, #1
 8010700:	e042      	b.n	8010788 <HAL_UART_Init+0x98>
 8010702:	687b      	ldr	r3, [r7, #4]
 8010704:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8010708:	2b00      	cmp	r3, #0
 801070a:	d106      	bne.n	801071a <HAL_UART_Init+0x2a>
 801070c:	687b      	ldr	r3, [r7, #4]
 801070e:	2200      	movs	r2, #0
 8010710:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8010714:	6878      	ldr	r0, [r7, #4]
 8010716:	f7f1 fd5f 	bl	80021d8 <HAL_UART_MspInit>
 801071a:	687b      	ldr	r3, [r7, #4]
 801071c:	2224      	movs	r2, #36	@ 0x24
 801071e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8010722:	687b      	ldr	r3, [r7, #4]
 8010724:	681b      	ldr	r3, [r3, #0]
 8010726:	681a      	ldr	r2, [r3, #0]
 8010728:	687b      	ldr	r3, [r7, #4]
 801072a:	681b      	ldr	r3, [r3, #0]
 801072c:	f022 0201 	bic.w	r2, r2, #1
 8010730:	601a      	str	r2, [r3, #0]
 8010732:	687b      	ldr	r3, [r7, #4]
 8010734:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010736:	2b00      	cmp	r3, #0
 8010738:	d002      	beq.n	8010740 <HAL_UART_Init+0x50>
 801073a:	6878      	ldr	r0, [r7, #4]
 801073c:	f000 fe94 	bl	8011468 <UART_AdvFeatureConfig>
 8010740:	6878      	ldr	r0, [r7, #4]
 8010742:	f000 f825 	bl	8010790 <UART_SetConfig>
 8010746:	4603      	mov	r3, r0
 8010748:	2b01      	cmp	r3, #1
 801074a:	d101      	bne.n	8010750 <HAL_UART_Init+0x60>
 801074c:	2301      	movs	r3, #1
 801074e:	e01b      	b.n	8010788 <HAL_UART_Init+0x98>
 8010750:	687b      	ldr	r3, [r7, #4]
 8010752:	681b      	ldr	r3, [r3, #0]
 8010754:	685a      	ldr	r2, [r3, #4]
 8010756:	687b      	ldr	r3, [r7, #4]
 8010758:	681b      	ldr	r3, [r3, #0]
 801075a:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 801075e:	605a      	str	r2, [r3, #4]
 8010760:	687b      	ldr	r3, [r7, #4]
 8010762:	681b      	ldr	r3, [r3, #0]
 8010764:	689a      	ldr	r2, [r3, #8]
 8010766:	687b      	ldr	r3, [r7, #4]
 8010768:	681b      	ldr	r3, [r3, #0]
 801076a:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 801076e:	609a      	str	r2, [r3, #8]
 8010770:	687b      	ldr	r3, [r7, #4]
 8010772:	681b      	ldr	r3, [r3, #0]
 8010774:	681a      	ldr	r2, [r3, #0]
 8010776:	687b      	ldr	r3, [r7, #4]
 8010778:	681b      	ldr	r3, [r3, #0]
 801077a:	f042 0201 	orr.w	r2, r2, #1
 801077e:	601a      	str	r2, [r3, #0]
 8010780:	6878      	ldr	r0, [r7, #4]
 8010782:	f000 ff13 	bl	80115ac <UART_CheckIdleState>
 8010786:	4603      	mov	r3, r0
 8010788:	4618      	mov	r0, r3
 801078a:	3708      	adds	r7, #8
 801078c:	46bd      	mov	sp, r7
 801078e:	bd80      	pop	{r7, pc}

08010790 <UART_SetConfig>:
 8010790:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8010794:	b092      	sub	sp, #72	@ 0x48
 8010796:	af00      	add	r7, sp, #0
 8010798:	6178      	str	r0, [r7, #20]
 801079a:	2300      	movs	r3, #0
 801079c:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 80107a0:	697b      	ldr	r3, [r7, #20]
 80107a2:	689a      	ldr	r2, [r3, #8]
 80107a4:	697b      	ldr	r3, [r7, #20]
 80107a6:	691b      	ldr	r3, [r3, #16]
 80107a8:	431a      	orrs	r2, r3
 80107aa:	697b      	ldr	r3, [r7, #20]
 80107ac:	695b      	ldr	r3, [r3, #20]
 80107ae:	431a      	orrs	r2, r3
 80107b0:	697b      	ldr	r3, [r7, #20]
 80107b2:	69db      	ldr	r3, [r3, #28]
 80107b4:	4313      	orrs	r3, r2
 80107b6:	647b      	str	r3, [r7, #68]	@ 0x44
 80107b8:	697b      	ldr	r3, [r7, #20]
 80107ba:	681b      	ldr	r3, [r3, #0]
 80107bc:	681a      	ldr	r2, [r3, #0]
 80107be:	4bbe      	ldr	r3, [pc, #760]	@ (8010ab8 <UART_SetConfig+0x328>)
 80107c0:	4013      	ands	r3, r2
 80107c2:	697a      	ldr	r2, [r7, #20]
 80107c4:	6812      	ldr	r2, [r2, #0]
 80107c6:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 80107c8:	430b      	orrs	r3, r1
 80107ca:	6013      	str	r3, [r2, #0]
 80107cc:	697b      	ldr	r3, [r7, #20]
 80107ce:	681b      	ldr	r3, [r3, #0]
 80107d0:	685b      	ldr	r3, [r3, #4]
 80107d2:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 80107d6:	697b      	ldr	r3, [r7, #20]
 80107d8:	68da      	ldr	r2, [r3, #12]
 80107da:	697b      	ldr	r3, [r7, #20]
 80107dc:	681b      	ldr	r3, [r3, #0]
 80107de:	430a      	orrs	r2, r1
 80107e0:	605a      	str	r2, [r3, #4]
 80107e2:	697b      	ldr	r3, [r7, #20]
 80107e4:	699b      	ldr	r3, [r3, #24]
 80107e6:	647b      	str	r3, [r7, #68]	@ 0x44
 80107e8:	697b      	ldr	r3, [r7, #20]
 80107ea:	681b      	ldr	r3, [r3, #0]
 80107ec:	4ab3      	ldr	r2, [pc, #716]	@ (8010abc <UART_SetConfig+0x32c>)
 80107ee:	4293      	cmp	r3, r2
 80107f0:	d004      	beq.n	80107fc <UART_SetConfig+0x6c>
 80107f2:	697b      	ldr	r3, [r7, #20]
 80107f4:	6a1b      	ldr	r3, [r3, #32]
 80107f6:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80107f8:	4313      	orrs	r3, r2
 80107fa:	647b      	str	r3, [r7, #68]	@ 0x44
 80107fc:	697b      	ldr	r3, [r7, #20]
 80107fe:	681b      	ldr	r3, [r3, #0]
 8010800:	689a      	ldr	r2, [r3, #8]
 8010802:	4baf      	ldr	r3, [pc, #700]	@ (8010ac0 <UART_SetConfig+0x330>)
 8010804:	4013      	ands	r3, r2
 8010806:	697a      	ldr	r2, [r7, #20]
 8010808:	6812      	ldr	r2, [r2, #0]
 801080a:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 801080c:	430b      	orrs	r3, r1
 801080e:	6093      	str	r3, [r2, #8]
 8010810:	697b      	ldr	r3, [r7, #20]
 8010812:	681b      	ldr	r3, [r3, #0]
 8010814:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010816:	f023 010f 	bic.w	r1, r3, #15
 801081a:	697b      	ldr	r3, [r7, #20]
 801081c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801081e:	697b      	ldr	r3, [r7, #20]
 8010820:	681b      	ldr	r3, [r3, #0]
 8010822:	430a      	orrs	r2, r1
 8010824:	62da      	str	r2, [r3, #44]	@ 0x2c
 8010826:	697b      	ldr	r3, [r7, #20]
 8010828:	681b      	ldr	r3, [r3, #0]
 801082a:	4aa6      	ldr	r2, [pc, #664]	@ (8010ac4 <UART_SetConfig+0x334>)
 801082c:	4293      	cmp	r3, r2
 801082e:	d177      	bne.n	8010920 <UART_SetConfig+0x190>
 8010830:	4ba5      	ldr	r3, [pc, #660]	@ (8010ac8 <UART_SetConfig+0x338>)
 8010832:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010834:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8010838:	2b28      	cmp	r3, #40	@ 0x28
 801083a:	d86d      	bhi.n	8010918 <UART_SetConfig+0x188>
 801083c:	a201      	add	r2, pc, #4	@ (adr r2, 8010844 <UART_SetConfig+0xb4>)
 801083e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010842:	bf00      	nop
 8010844:	080108e9 	.word	0x080108e9
 8010848:	08010919 	.word	0x08010919
 801084c:	08010919 	.word	0x08010919
 8010850:	08010919 	.word	0x08010919
 8010854:	08010919 	.word	0x08010919
 8010858:	08010919 	.word	0x08010919
 801085c:	08010919 	.word	0x08010919
 8010860:	08010919 	.word	0x08010919
 8010864:	080108f1 	.word	0x080108f1
 8010868:	08010919 	.word	0x08010919
 801086c:	08010919 	.word	0x08010919
 8010870:	08010919 	.word	0x08010919
 8010874:	08010919 	.word	0x08010919
 8010878:	08010919 	.word	0x08010919
 801087c:	08010919 	.word	0x08010919
 8010880:	08010919 	.word	0x08010919
 8010884:	080108f9 	.word	0x080108f9
 8010888:	08010919 	.word	0x08010919
 801088c:	08010919 	.word	0x08010919
 8010890:	08010919 	.word	0x08010919
 8010894:	08010919 	.word	0x08010919
 8010898:	08010919 	.word	0x08010919
 801089c:	08010919 	.word	0x08010919
 80108a0:	08010919 	.word	0x08010919
 80108a4:	08010901 	.word	0x08010901
 80108a8:	08010919 	.word	0x08010919
 80108ac:	08010919 	.word	0x08010919
 80108b0:	08010919 	.word	0x08010919
 80108b4:	08010919 	.word	0x08010919
 80108b8:	08010919 	.word	0x08010919
 80108bc:	08010919 	.word	0x08010919
 80108c0:	08010919 	.word	0x08010919
 80108c4:	08010909 	.word	0x08010909
 80108c8:	08010919 	.word	0x08010919
 80108cc:	08010919 	.word	0x08010919
 80108d0:	08010919 	.word	0x08010919
 80108d4:	08010919 	.word	0x08010919
 80108d8:	08010919 	.word	0x08010919
 80108dc:	08010919 	.word	0x08010919
 80108e0:	08010919 	.word	0x08010919
 80108e4:	08010911 	.word	0x08010911
 80108e8:	2301      	movs	r3, #1
 80108ea:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80108ee:	e326      	b.n	8010f3e <UART_SetConfig+0x7ae>
 80108f0:	2304      	movs	r3, #4
 80108f2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80108f6:	e322      	b.n	8010f3e <UART_SetConfig+0x7ae>
 80108f8:	2308      	movs	r3, #8
 80108fa:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80108fe:	e31e      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010900:	2310      	movs	r3, #16
 8010902:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010906:	e31a      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010908:	2320      	movs	r3, #32
 801090a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 801090e:	e316      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010910:	2340      	movs	r3, #64	@ 0x40
 8010912:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010916:	e312      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010918:	2380      	movs	r3, #128	@ 0x80
 801091a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 801091e:	e30e      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010920:	697b      	ldr	r3, [r7, #20]
 8010922:	681b      	ldr	r3, [r3, #0]
 8010924:	4a69      	ldr	r2, [pc, #420]	@ (8010acc <UART_SetConfig+0x33c>)
 8010926:	4293      	cmp	r3, r2
 8010928:	d130      	bne.n	801098c <UART_SetConfig+0x1fc>
 801092a:	4b67      	ldr	r3, [pc, #412]	@ (8010ac8 <UART_SetConfig+0x338>)
 801092c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801092e:	f003 0307 	and.w	r3, r3, #7
 8010932:	2b05      	cmp	r3, #5
 8010934:	d826      	bhi.n	8010984 <UART_SetConfig+0x1f4>
 8010936:	a201      	add	r2, pc, #4	@ (adr r2, 801093c <UART_SetConfig+0x1ac>)
 8010938:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801093c:	08010955 	.word	0x08010955
 8010940:	0801095d 	.word	0x0801095d
 8010944:	08010965 	.word	0x08010965
 8010948:	0801096d 	.word	0x0801096d
 801094c:	08010975 	.word	0x08010975
 8010950:	0801097d 	.word	0x0801097d
 8010954:	2300      	movs	r3, #0
 8010956:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 801095a:	e2f0      	b.n	8010f3e <UART_SetConfig+0x7ae>
 801095c:	2304      	movs	r3, #4
 801095e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010962:	e2ec      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010964:	2308      	movs	r3, #8
 8010966:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 801096a:	e2e8      	b.n	8010f3e <UART_SetConfig+0x7ae>
 801096c:	2310      	movs	r3, #16
 801096e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010972:	e2e4      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010974:	2320      	movs	r3, #32
 8010976:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 801097a:	e2e0      	b.n	8010f3e <UART_SetConfig+0x7ae>
 801097c:	2340      	movs	r3, #64	@ 0x40
 801097e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010982:	e2dc      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010984:	2380      	movs	r3, #128	@ 0x80
 8010986:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 801098a:	e2d8      	b.n	8010f3e <UART_SetConfig+0x7ae>
 801098c:	697b      	ldr	r3, [r7, #20]
 801098e:	681b      	ldr	r3, [r3, #0]
 8010990:	4a4f      	ldr	r2, [pc, #316]	@ (8010ad0 <UART_SetConfig+0x340>)
 8010992:	4293      	cmp	r3, r2
 8010994:	d130      	bne.n	80109f8 <UART_SetConfig+0x268>
 8010996:	4b4c      	ldr	r3, [pc, #304]	@ (8010ac8 <UART_SetConfig+0x338>)
 8010998:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801099a:	f003 0307 	and.w	r3, r3, #7
 801099e:	2b05      	cmp	r3, #5
 80109a0:	d826      	bhi.n	80109f0 <UART_SetConfig+0x260>
 80109a2:	a201      	add	r2, pc, #4	@ (adr r2, 80109a8 <UART_SetConfig+0x218>)
 80109a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80109a8:	080109c1 	.word	0x080109c1
 80109ac:	080109c9 	.word	0x080109c9
 80109b0:	080109d1 	.word	0x080109d1
 80109b4:	080109d9 	.word	0x080109d9
 80109b8:	080109e1 	.word	0x080109e1
 80109bc:	080109e9 	.word	0x080109e9
 80109c0:	2300      	movs	r3, #0
 80109c2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80109c6:	e2ba      	b.n	8010f3e <UART_SetConfig+0x7ae>
 80109c8:	2304      	movs	r3, #4
 80109ca:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80109ce:	e2b6      	b.n	8010f3e <UART_SetConfig+0x7ae>
 80109d0:	2308      	movs	r3, #8
 80109d2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80109d6:	e2b2      	b.n	8010f3e <UART_SetConfig+0x7ae>
 80109d8:	2310      	movs	r3, #16
 80109da:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80109de:	e2ae      	b.n	8010f3e <UART_SetConfig+0x7ae>
 80109e0:	2320      	movs	r3, #32
 80109e2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80109e6:	e2aa      	b.n	8010f3e <UART_SetConfig+0x7ae>
 80109e8:	2340      	movs	r3, #64	@ 0x40
 80109ea:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80109ee:	e2a6      	b.n	8010f3e <UART_SetConfig+0x7ae>
 80109f0:	2380      	movs	r3, #128	@ 0x80
 80109f2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80109f6:	e2a2      	b.n	8010f3e <UART_SetConfig+0x7ae>
 80109f8:	697b      	ldr	r3, [r7, #20]
 80109fa:	681b      	ldr	r3, [r3, #0]
 80109fc:	4a35      	ldr	r2, [pc, #212]	@ (8010ad4 <UART_SetConfig+0x344>)
 80109fe:	4293      	cmp	r3, r2
 8010a00:	d130      	bne.n	8010a64 <UART_SetConfig+0x2d4>
 8010a02:	4b31      	ldr	r3, [pc, #196]	@ (8010ac8 <UART_SetConfig+0x338>)
 8010a04:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010a06:	f003 0307 	and.w	r3, r3, #7
 8010a0a:	2b05      	cmp	r3, #5
 8010a0c:	d826      	bhi.n	8010a5c <UART_SetConfig+0x2cc>
 8010a0e:	a201      	add	r2, pc, #4	@ (adr r2, 8010a14 <UART_SetConfig+0x284>)
 8010a10:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010a14:	08010a2d 	.word	0x08010a2d
 8010a18:	08010a35 	.word	0x08010a35
 8010a1c:	08010a3d 	.word	0x08010a3d
 8010a20:	08010a45 	.word	0x08010a45
 8010a24:	08010a4d 	.word	0x08010a4d
 8010a28:	08010a55 	.word	0x08010a55
 8010a2c:	2300      	movs	r3, #0
 8010a2e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010a32:	e284      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010a34:	2304      	movs	r3, #4
 8010a36:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010a3a:	e280      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010a3c:	2308      	movs	r3, #8
 8010a3e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010a42:	e27c      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010a44:	2310      	movs	r3, #16
 8010a46:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010a4a:	e278      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010a4c:	2320      	movs	r3, #32
 8010a4e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010a52:	e274      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010a54:	2340      	movs	r3, #64	@ 0x40
 8010a56:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010a5a:	e270      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010a5c:	2380      	movs	r3, #128	@ 0x80
 8010a5e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010a62:	e26c      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010a64:	697b      	ldr	r3, [r7, #20]
 8010a66:	681b      	ldr	r3, [r3, #0]
 8010a68:	4a1b      	ldr	r2, [pc, #108]	@ (8010ad8 <UART_SetConfig+0x348>)
 8010a6a:	4293      	cmp	r3, r2
 8010a6c:	d142      	bne.n	8010af4 <UART_SetConfig+0x364>
 8010a6e:	4b16      	ldr	r3, [pc, #88]	@ (8010ac8 <UART_SetConfig+0x338>)
 8010a70:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010a72:	f003 0307 	and.w	r3, r3, #7
 8010a76:	2b05      	cmp	r3, #5
 8010a78:	d838      	bhi.n	8010aec <UART_SetConfig+0x35c>
 8010a7a:	a201      	add	r2, pc, #4	@ (adr r2, 8010a80 <UART_SetConfig+0x2f0>)
 8010a7c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010a80:	08010a99 	.word	0x08010a99
 8010a84:	08010aa1 	.word	0x08010aa1
 8010a88:	08010aa9 	.word	0x08010aa9
 8010a8c:	08010ab1 	.word	0x08010ab1
 8010a90:	08010add 	.word	0x08010add
 8010a94:	08010ae5 	.word	0x08010ae5
 8010a98:	2300      	movs	r3, #0
 8010a9a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010a9e:	e24e      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010aa0:	2304      	movs	r3, #4
 8010aa2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010aa6:	e24a      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010aa8:	2308      	movs	r3, #8
 8010aaa:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010aae:	e246      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010ab0:	2310      	movs	r3, #16
 8010ab2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010ab6:	e242      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010ab8:	cfff69f3 	.word	0xcfff69f3
 8010abc:	58000c00 	.word	0x58000c00
 8010ac0:	11fff4ff 	.word	0x11fff4ff
 8010ac4:	40011000 	.word	0x40011000
 8010ac8:	58024400 	.word	0x58024400
 8010acc:	40004400 	.word	0x40004400
 8010ad0:	40004800 	.word	0x40004800
 8010ad4:	40004c00 	.word	0x40004c00
 8010ad8:	40005000 	.word	0x40005000
 8010adc:	2320      	movs	r3, #32
 8010ade:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010ae2:	e22c      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010ae4:	2340      	movs	r3, #64	@ 0x40
 8010ae6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010aea:	e228      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010aec:	2380      	movs	r3, #128	@ 0x80
 8010aee:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010af2:	e224      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010af4:	697b      	ldr	r3, [r7, #20]
 8010af6:	681b      	ldr	r3, [r3, #0]
 8010af8:	4ab1      	ldr	r2, [pc, #708]	@ (8010dc0 <UART_SetConfig+0x630>)
 8010afa:	4293      	cmp	r3, r2
 8010afc:	d176      	bne.n	8010bec <UART_SetConfig+0x45c>
 8010afe:	4bb1      	ldr	r3, [pc, #708]	@ (8010dc4 <UART_SetConfig+0x634>)
 8010b00:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010b02:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8010b06:	2b28      	cmp	r3, #40	@ 0x28
 8010b08:	d86c      	bhi.n	8010be4 <UART_SetConfig+0x454>
 8010b0a:	a201      	add	r2, pc, #4	@ (adr r2, 8010b10 <UART_SetConfig+0x380>)
 8010b0c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010b10:	08010bb5 	.word	0x08010bb5
 8010b14:	08010be5 	.word	0x08010be5
 8010b18:	08010be5 	.word	0x08010be5
 8010b1c:	08010be5 	.word	0x08010be5
 8010b20:	08010be5 	.word	0x08010be5
 8010b24:	08010be5 	.word	0x08010be5
 8010b28:	08010be5 	.word	0x08010be5
 8010b2c:	08010be5 	.word	0x08010be5
 8010b30:	08010bbd 	.word	0x08010bbd
 8010b34:	08010be5 	.word	0x08010be5
 8010b38:	08010be5 	.word	0x08010be5
 8010b3c:	08010be5 	.word	0x08010be5
 8010b40:	08010be5 	.word	0x08010be5
 8010b44:	08010be5 	.word	0x08010be5
 8010b48:	08010be5 	.word	0x08010be5
 8010b4c:	08010be5 	.word	0x08010be5
 8010b50:	08010bc5 	.word	0x08010bc5
 8010b54:	08010be5 	.word	0x08010be5
 8010b58:	08010be5 	.word	0x08010be5
 8010b5c:	08010be5 	.word	0x08010be5
 8010b60:	08010be5 	.word	0x08010be5
 8010b64:	08010be5 	.word	0x08010be5
 8010b68:	08010be5 	.word	0x08010be5
 8010b6c:	08010be5 	.word	0x08010be5
 8010b70:	08010bcd 	.word	0x08010bcd
 8010b74:	08010be5 	.word	0x08010be5
 8010b78:	08010be5 	.word	0x08010be5
 8010b7c:	08010be5 	.word	0x08010be5
 8010b80:	08010be5 	.word	0x08010be5
 8010b84:	08010be5 	.word	0x08010be5
 8010b88:	08010be5 	.word	0x08010be5
 8010b8c:	08010be5 	.word	0x08010be5
 8010b90:	08010bd5 	.word	0x08010bd5
 8010b94:	08010be5 	.word	0x08010be5
 8010b98:	08010be5 	.word	0x08010be5
 8010b9c:	08010be5 	.word	0x08010be5
 8010ba0:	08010be5 	.word	0x08010be5
 8010ba4:	08010be5 	.word	0x08010be5
 8010ba8:	08010be5 	.word	0x08010be5
 8010bac:	08010be5 	.word	0x08010be5
 8010bb0:	08010bdd 	.word	0x08010bdd
 8010bb4:	2301      	movs	r3, #1
 8010bb6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010bba:	e1c0      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010bbc:	2304      	movs	r3, #4
 8010bbe:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010bc2:	e1bc      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010bc4:	2308      	movs	r3, #8
 8010bc6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010bca:	e1b8      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010bcc:	2310      	movs	r3, #16
 8010bce:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010bd2:	e1b4      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010bd4:	2320      	movs	r3, #32
 8010bd6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010bda:	e1b0      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010bdc:	2340      	movs	r3, #64	@ 0x40
 8010bde:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010be2:	e1ac      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010be4:	2380      	movs	r3, #128	@ 0x80
 8010be6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010bea:	e1a8      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010bec:	697b      	ldr	r3, [r7, #20]
 8010bee:	681b      	ldr	r3, [r3, #0]
 8010bf0:	4a75      	ldr	r2, [pc, #468]	@ (8010dc8 <UART_SetConfig+0x638>)
 8010bf2:	4293      	cmp	r3, r2
 8010bf4:	d130      	bne.n	8010c58 <UART_SetConfig+0x4c8>
 8010bf6:	4b73      	ldr	r3, [pc, #460]	@ (8010dc4 <UART_SetConfig+0x634>)
 8010bf8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010bfa:	f003 0307 	and.w	r3, r3, #7
 8010bfe:	2b05      	cmp	r3, #5
 8010c00:	d826      	bhi.n	8010c50 <UART_SetConfig+0x4c0>
 8010c02:	a201      	add	r2, pc, #4	@ (adr r2, 8010c08 <UART_SetConfig+0x478>)
 8010c04:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010c08:	08010c21 	.word	0x08010c21
 8010c0c:	08010c29 	.word	0x08010c29
 8010c10:	08010c31 	.word	0x08010c31
 8010c14:	08010c39 	.word	0x08010c39
 8010c18:	08010c41 	.word	0x08010c41
 8010c1c:	08010c49 	.word	0x08010c49
 8010c20:	2300      	movs	r3, #0
 8010c22:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c26:	e18a      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010c28:	2304      	movs	r3, #4
 8010c2a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c2e:	e186      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010c30:	2308      	movs	r3, #8
 8010c32:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c36:	e182      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010c38:	2310      	movs	r3, #16
 8010c3a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c3e:	e17e      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010c40:	2320      	movs	r3, #32
 8010c42:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c46:	e17a      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010c48:	2340      	movs	r3, #64	@ 0x40
 8010c4a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c4e:	e176      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010c50:	2380      	movs	r3, #128	@ 0x80
 8010c52:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c56:	e172      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010c58:	697b      	ldr	r3, [r7, #20]
 8010c5a:	681b      	ldr	r3, [r3, #0]
 8010c5c:	4a5b      	ldr	r2, [pc, #364]	@ (8010dcc <UART_SetConfig+0x63c>)
 8010c5e:	4293      	cmp	r3, r2
 8010c60:	d130      	bne.n	8010cc4 <UART_SetConfig+0x534>
 8010c62:	4b58      	ldr	r3, [pc, #352]	@ (8010dc4 <UART_SetConfig+0x634>)
 8010c64:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010c66:	f003 0307 	and.w	r3, r3, #7
 8010c6a:	2b05      	cmp	r3, #5
 8010c6c:	d826      	bhi.n	8010cbc <UART_SetConfig+0x52c>
 8010c6e:	a201      	add	r2, pc, #4	@ (adr r2, 8010c74 <UART_SetConfig+0x4e4>)
 8010c70:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010c74:	08010c8d 	.word	0x08010c8d
 8010c78:	08010c95 	.word	0x08010c95
 8010c7c:	08010c9d 	.word	0x08010c9d
 8010c80:	08010ca5 	.word	0x08010ca5
 8010c84:	08010cad 	.word	0x08010cad
 8010c88:	08010cb5 	.word	0x08010cb5
 8010c8c:	2300      	movs	r3, #0
 8010c8e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c92:	e154      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010c94:	2304      	movs	r3, #4
 8010c96:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c9a:	e150      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010c9c:	2308      	movs	r3, #8
 8010c9e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010ca2:	e14c      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010ca4:	2310      	movs	r3, #16
 8010ca6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010caa:	e148      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010cac:	2320      	movs	r3, #32
 8010cae:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010cb2:	e144      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010cb4:	2340      	movs	r3, #64	@ 0x40
 8010cb6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010cba:	e140      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010cbc:	2380      	movs	r3, #128	@ 0x80
 8010cbe:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010cc2:	e13c      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010cc4:	697b      	ldr	r3, [r7, #20]
 8010cc6:	681b      	ldr	r3, [r3, #0]
 8010cc8:	4a41      	ldr	r2, [pc, #260]	@ (8010dd0 <UART_SetConfig+0x640>)
 8010cca:	4293      	cmp	r3, r2
 8010ccc:	f040 8082 	bne.w	8010dd4 <UART_SetConfig+0x644>
 8010cd0:	4b3c      	ldr	r3, [pc, #240]	@ (8010dc4 <UART_SetConfig+0x634>)
 8010cd2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010cd4:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8010cd8:	2b28      	cmp	r3, #40	@ 0x28
 8010cda:	d86d      	bhi.n	8010db8 <UART_SetConfig+0x628>
 8010cdc:	a201      	add	r2, pc, #4	@ (adr r2, 8010ce4 <UART_SetConfig+0x554>)
 8010cde:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010ce2:	bf00      	nop
 8010ce4:	08010d89 	.word	0x08010d89
 8010ce8:	08010db9 	.word	0x08010db9
 8010cec:	08010db9 	.word	0x08010db9
 8010cf0:	08010db9 	.word	0x08010db9
 8010cf4:	08010db9 	.word	0x08010db9
 8010cf8:	08010db9 	.word	0x08010db9
 8010cfc:	08010db9 	.word	0x08010db9
 8010d00:	08010db9 	.word	0x08010db9
 8010d04:	08010d91 	.word	0x08010d91
 8010d08:	08010db9 	.word	0x08010db9
 8010d0c:	08010db9 	.word	0x08010db9
 8010d10:	08010db9 	.word	0x08010db9
 8010d14:	08010db9 	.word	0x08010db9
 8010d18:	08010db9 	.word	0x08010db9
 8010d1c:	08010db9 	.word	0x08010db9
 8010d20:	08010db9 	.word	0x08010db9
 8010d24:	08010d99 	.word	0x08010d99
 8010d28:	08010db9 	.word	0x08010db9
 8010d2c:	08010db9 	.word	0x08010db9
 8010d30:	08010db9 	.word	0x08010db9
 8010d34:	08010db9 	.word	0x08010db9
 8010d38:	08010db9 	.word	0x08010db9
 8010d3c:	08010db9 	.word	0x08010db9
 8010d40:	08010db9 	.word	0x08010db9
 8010d44:	08010da1 	.word	0x08010da1
 8010d48:	08010db9 	.word	0x08010db9
 8010d4c:	08010db9 	.word	0x08010db9
 8010d50:	08010db9 	.word	0x08010db9
 8010d54:	08010db9 	.word	0x08010db9
 8010d58:	08010db9 	.word	0x08010db9
 8010d5c:	08010db9 	.word	0x08010db9
 8010d60:	08010db9 	.word	0x08010db9
 8010d64:	08010da9 	.word	0x08010da9
 8010d68:	08010db9 	.word	0x08010db9
 8010d6c:	08010db9 	.word	0x08010db9
 8010d70:	08010db9 	.word	0x08010db9
 8010d74:	08010db9 	.word	0x08010db9
 8010d78:	08010db9 	.word	0x08010db9
 8010d7c:	08010db9 	.word	0x08010db9
 8010d80:	08010db9 	.word	0x08010db9
 8010d84:	08010db1 	.word	0x08010db1
 8010d88:	2301      	movs	r3, #1
 8010d8a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010d8e:	e0d6      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010d90:	2304      	movs	r3, #4
 8010d92:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010d96:	e0d2      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010d98:	2308      	movs	r3, #8
 8010d9a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010d9e:	e0ce      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010da0:	2310      	movs	r3, #16
 8010da2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010da6:	e0ca      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010da8:	2320      	movs	r3, #32
 8010daa:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010dae:	e0c6      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010db0:	2340      	movs	r3, #64	@ 0x40
 8010db2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010db6:	e0c2      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010db8:	2380      	movs	r3, #128	@ 0x80
 8010dba:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010dbe:	e0be      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010dc0:	40011400 	.word	0x40011400
 8010dc4:	58024400 	.word	0x58024400
 8010dc8:	40007800 	.word	0x40007800
 8010dcc:	40007c00 	.word	0x40007c00
 8010dd0:	40011800 	.word	0x40011800
 8010dd4:	697b      	ldr	r3, [r7, #20]
 8010dd6:	681b      	ldr	r3, [r3, #0]
 8010dd8:	4aad      	ldr	r2, [pc, #692]	@ (8011090 <UART_SetConfig+0x900>)
 8010dda:	4293      	cmp	r3, r2
 8010ddc:	d176      	bne.n	8010ecc <UART_SetConfig+0x73c>
 8010dde:	4bad      	ldr	r3, [pc, #692]	@ (8011094 <UART_SetConfig+0x904>)
 8010de0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010de2:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8010de6:	2b28      	cmp	r3, #40	@ 0x28
 8010de8:	d86c      	bhi.n	8010ec4 <UART_SetConfig+0x734>
 8010dea:	a201      	add	r2, pc, #4	@ (adr r2, 8010df0 <UART_SetConfig+0x660>)
 8010dec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010df0:	08010e95 	.word	0x08010e95
 8010df4:	08010ec5 	.word	0x08010ec5
 8010df8:	08010ec5 	.word	0x08010ec5
 8010dfc:	08010ec5 	.word	0x08010ec5
 8010e00:	08010ec5 	.word	0x08010ec5
 8010e04:	08010ec5 	.word	0x08010ec5
 8010e08:	08010ec5 	.word	0x08010ec5
 8010e0c:	08010ec5 	.word	0x08010ec5
 8010e10:	08010e9d 	.word	0x08010e9d
 8010e14:	08010ec5 	.word	0x08010ec5
 8010e18:	08010ec5 	.word	0x08010ec5
 8010e1c:	08010ec5 	.word	0x08010ec5
 8010e20:	08010ec5 	.word	0x08010ec5
 8010e24:	08010ec5 	.word	0x08010ec5
 8010e28:	08010ec5 	.word	0x08010ec5
 8010e2c:	08010ec5 	.word	0x08010ec5
 8010e30:	08010ea5 	.word	0x08010ea5
 8010e34:	08010ec5 	.word	0x08010ec5
 8010e38:	08010ec5 	.word	0x08010ec5
 8010e3c:	08010ec5 	.word	0x08010ec5
 8010e40:	08010ec5 	.word	0x08010ec5
 8010e44:	08010ec5 	.word	0x08010ec5
 8010e48:	08010ec5 	.word	0x08010ec5
 8010e4c:	08010ec5 	.word	0x08010ec5
 8010e50:	08010ead 	.word	0x08010ead
 8010e54:	08010ec5 	.word	0x08010ec5
 8010e58:	08010ec5 	.word	0x08010ec5
 8010e5c:	08010ec5 	.word	0x08010ec5
 8010e60:	08010ec5 	.word	0x08010ec5
 8010e64:	08010ec5 	.word	0x08010ec5
 8010e68:	08010ec5 	.word	0x08010ec5
 8010e6c:	08010ec5 	.word	0x08010ec5
 8010e70:	08010eb5 	.word	0x08010eb5
 8010e74:	08010ec5 	.word	0x08010ec5
 8010e78:	08010ec5 	.word	0x08010ec5
 8010e7c:	08010ec5 	.word	0x08010ec5
 8010e80:	08010ec5 	.word	0x08010ec5
 8010e84:	08010ec5 	.word	0x08010ec5
 8010e88:	08010ec5 	.word	0x08010ec5
 8010e8c:	08010ec5 	.word	0x08010ec5
 8010e90:	08010ebd 	.word	0x08010ebd
 8010e94:	2301      	movs	r3, #1
 8010e96:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010e9a:	e050      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010e9c:	2304      	movs	r3, #4
 8010e9e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010ea2:	e04c      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010ea4:	2308      	movs	r3, #8
 8010ea6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010eaa:	e048      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010eac:	2310      	movs	r3, #16
 8010eae:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010eb2:	e044      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010eb4:	2320      	movs	r3, #32
 8010eb6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010eba:	e040      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010ebc:	2340      	movs	r3, #64	@ 0x40
 8010ebe:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010ec2:	e03c      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010ec4:	2380      	movs	r3, #128	@ 0x80
 8010ec6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010eca:	e038      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010ecc:	697b      	ldr	r3, [r7, #20]
 8010ece:	681b      	ldr	r3, [r3, #0]
 8010ed0:	4a71      	ldr	r2, [pc, #452]	@ (8011098 <UART_SetConfig+0x908>)
 8010ed2:	4293      	cmp	r3, r2
 8010ed4:	d130      	bne.n	8010f38 <UART_SetConfig+0x7a8>
 8010ed6:	4b6f      	ldr	r3, [pc, #444]	@ (8011094 <UART_SetConfig+0x904>)
 8010ed8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8010eda:	f003 0307 	and.w	r3, r3, #7
 8010ede:	2b05      	cmp	r3, #5
 8010ee0:	d826      	bhi.n	8010f30 <UART_SetConfig+0x7a0>
 8010ee2:	a201      	add	r2, pc, #4	@ (adr r2, 8010ee8 <UART_SetConfig+0x758>)
 8010ee4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010ee8:	08010f01 	.word	0x08010f01
 8010eec:	08010f09 	.word	0x08010f09
 8010ef0:	08010f11 	.word	0x08010f11
 8010ef4:	08010f19 	.word	0x08010f19
 8010ef8:	08010f21 	.word	0x08010f21
 8010efc:	08010f29 	.word	0x08010f29
 8010f00:	2302      	movs	r3, #2
 8010f02:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010f06:	e01a      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010f08:	2304      	movs	r3, #4
 8010f0a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010f0e:	e016      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010f10:	2308      	movs	r3, #8
 8010f12:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010f16:	e012      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010f18:	2310      	movs	r3, #16
 8010f1a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010f1e:	e00e      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010f20:	2320      	movs	r3, #32
 8010f22:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010f26:	e00a      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010f28:	2340      	movs	r3, #64	@ 0x40
 8010f2a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010f2e:	e006      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010f30:	2380      	movs	r3, #128	@ 0x80
 8010f32:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010f36:	e002      	b.n	8010f3e <UART_SetConfig+0x7ae>
 8010f38:	2380      	movs	r3, #128	@ 0x80
 8010f3a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010f3e:	697b      	ldr	r3, [r7, #20]
 8010f40:	681b      	ldr	r3, [r3, #0]
 8010f42:	4a55      	ldr	r2, [pc, #340]	@ (8011098 <UART_SetConfig+0x908>)
 8010f44:	4293      	cmp	r3, r2
 8010f46:	f040 80f8 	bne.w	801113a <UART_SetConfig+0x9aa>
 8010f4a:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 8010f4e:	2b20      	cmp	r3, #32
 8010f50:	dc46      	bgt.n	8010fe0 <UART_SetConfig+0x850>
 8010f52:	2b02      	cmp	r3, #2
 8010f54:	db75      	blt.n	8011042 <UART_SetConfig+0x8b2>
 8010f56:	3b02      	subs	r3, #2
 8010f58:	2b1e      	cmp	r3, #30
 8010f5a:	d872      	bhi.n	8011042 <UART_SetConfig+0x8b2>
 8010f5c:	a201      	add	r2, pc, #4	@ (adr r2, 8010f64 <UART_SetConfig+0x7d4>)
 8010f5e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010f62:	bf00      	nop
 8010f64:	08010fe7 	.word	0x08010fe7
 8010f68:	08011043 	.word	0x08011043
 8010f6c:	08010fef 	.word	0x08010fef
 8010f70:	08011043 	.word	0x08011043
 8010f74:	08011043 	.word	0x08011043
 8010f78:	08011043 	.word	0x08011043
 8010f7c:	08010fff 	.word	0x08010fff
 8010f80:	08011043 	.word	0x08011043
 8010f84:	08011043 	.word	0x08011043
 8010f88:	08011043 	.word	0x08011043
 8010f8c:	08011043 	.word	0x08011043
 8010f90:	08011043 	.word	0x08011043
 8010f94:	08011043 	.word	0x08011043
 8010f98:	08011043 	.word	0x08011043
 8010f9c:	0801100f 	.word	0x0801100f
 8010fa0:	08011043 	.word	0x08011043
 8010fa4:	08011043 	.word	0x08011043
 8010fa8:	08011043 	.word	0x08011043
 8010fac:	08011043 	.word	0x08011043
 8010fb0:	08011043 	.word	0x08011043
 8010fb4:	08011043 	.word	0x08011043
 8010fb8:	08011043 	.word	0x08011043
 8010fbc:	08011043 	.word	0x08011043
 8010fc0:	08011043 	.word	0x08011043
 8010fc4:	08011043 	.word	0x08011043
 8010fc8:	08011043 	.word	0x08011043
 8010fcc:	08011043 	.word	0x08011043
 8010fd0:	08011043 	.word	0x08011043
 8010fd4:	08011043 	.word	0x08011043
 8010fd8:	08011043 	.word	0x08011043
 8010fdc:	08011035 	.word	0x08011035
 8010fe0:	2b40      	cmp	r3, #64	@ 0x40
 8010fe2:	d02a      	beq.n	801103a <UART_SetConfig+0x8aa>
 8010fe4:	e02d      	b.n	8011042 <UART_SetConfig+0x8b2>
 8010fe6:	f7fc fe05 	bl	800dbf4 <HAL_RCCEx_GetD3PCLK1Freq>
 8010fea:	63f8      	str	r0, [r7, #60]	@ 0x3c
 8010fec:	e02f      	b.n	801104e <UART_SetConfig+0x8be>
 8010fee:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8010ff2:	4618      	mov	r0, r3
 8010ff4:	f7fc fe14 	bl	800dc20 <HAL_RCCEx_GetPLL2ClockFreq>
 8010ff8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8010ffa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8010ffc:	e027      	b.n	801104e <UART_SetConfig+0x8be>
 8010ffe:	f107 0318 	add.w	r3, r7, #24
 8011002:	4618      	mov	r0, r3
 8011004:	f7fc ff60 	bl	800dec8 <HAL_RCCEx_GetPLL3ClockFreq>
 8011008:	69fb      	ldr	r3, [r7, #28]
 801100a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801100c:	e01f      	b.n	801104e <UART_SetConfig+0x8be>
 801100e:	4b21      	ldr	r3, [pc, #132]	@ (8011094 <UART_SetConfig+0x904>)
 8011010:	681b      	ldr	r3, [r3, #0]
 8011012:	f003 0320 	and.w	r3, r3, #32
 8011016:	2b00      	cmp	r3, #0
 8011018:	d009      	beq.n	801102e <UART_SetConfig+0x89e>
 801101a:	4b1e      	ldr	r3, [pc, #120]	@ (8011094 <UART_SetConfig+0x904>)
 801101c:	681b      	ldr	r3, [r3, #0]
 801101e:	08db      	lsrs	r3, r3, #3
 8011020:	f003 0303 	and.w	r3, r3, #3
 8011024:	4a1d      	ldr	r2, [pc, #116]	@ (801109c <UART_SetConfig+0x90c>)
 8011026:	fa22 f303 	lsr.w	r3, r2, r3
 801102a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801102c:	e00f      	b.n	801104e <UART_SetConfig+0x8be>
 801102e:	4b1b      	ldr	r3, [pc, #108]	@ (801109c <UART_SetConfig+0x90c>)
 8011030:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011032:	e00c      	b.n	801104e <UART_SetConfig+0x8be>
 8011034:	4b1a      	ldr	r3, [pc, #104]	@ (80110a0 <UART_SetConfig+0x910>)
 8011036:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011038:	e009      	b.n	801104e <UART_SetConfig+0x8be>
 801103a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801103e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011040:	e005      	b.n	801104e <UART_SetConfig+0x8be>
 8011042:	2300      	movs	r3, #0
 8011044:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011046:	2301      	movs	r3, #1
 8011048:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 801104c:	bf00      	nop
 801104e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8011050:	2b00      	cmp	r3, #0
 8011052:	f000 81ee 	beq.w	8011432 <UART_SetConfig+0xca2>
 8011056:	697b      	ldr	r3, [r7, #20]
 8011058:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801105a:	4a12      	ldr	r2, [pc, #72]	@ (80110a4 <UART_SetConfig+0x914>)
 801105c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8011060:	461a      	mov	r2, r3
 8011062:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8011064:	fbb3 f3f2 	udiv	r3, r3, r2
 8011068:	633b      	str	r3, [r7, #48]	@ 0x30
 801106a:	697b      	ldr	r3, [r7, #20]
 801106c:	685a      	ldr	r2, [r3, #4]
 801106e:	4613      	mov	r3, r2
 8011070:	005b      	lsls	r3, r3, #1
 8011072:	4413      	add	r3, r2
 8011074:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8011076:	429a      	cmp	r2, r3
 8011078:	d305      	bcc.n	8011086 <UART_SetConfig+0x8f6>
 801107a:	697b      	ldr	r3, [r7, #20]
 801107c:	685b      	ldr	r3, [r3, #4]
 801107e:	031b      	lsls	r3, r3, #12
 8011080:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8011082:	429a      	cmp	r2, r3
 8011084:	d910      	bls.n	80110a8 <UART_SetConfig+0x918>
 8011086:	2301      	movs	r3, #1
 8011088:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 801108c:	e1d1      	b.n	8011432 <UART_SetConfig+0xca2>
 801108e:	bf00      	nop
 8011090:	40011c00 	.word	0x40011c00
 8011094:	58024400 	.word	0x58024400
 8011098:	58000c00 	.word	0x58000c00
 801109c:	03d09000 	.word	0x03d09000
 80110a0:	003d0900 	.word	0x003d0900
 80110a4:	0801b05c 	.word	0x0801b05c
 80110a8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80110aa:	2200      	movs	r2, #0
 80110ac:	60bb      	str	r3, [r7, #8]
 80110ae:	60fa      	str	r2, [r7, #12]
 80110b0:	697b      	ldr	r3, [r7, #20]
 80110b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80110b4:	4ac0      	ldr	r2, [pc, #768]	@ (80113b8 <UART_SetConfig+0xc28>)
 80110b6:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80110ba:	b29b      	uxth	r3, r3
 80110bc:	2200      	movs	r2, #0
 80110be:	603b      	str	r3, [r7, #0]
 80110c0:	607a      	str	r2, [r7, #4]
 80110c2:	e9d7 2300 	ldrd	r2, r3, [r7]
 80110c6:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80110ca:	f7ef fb45 	bl	8000758 <__aeabi_uldivmod>
 80110ce:	4602      	mov	r2, r0
 80110d0:	460b      	mov	r3, r1
 80110d2:	4610      	mov	r0, r2
 80110d4:	4619      	mov	r1, r3
 80110d6:	f04f 0200 	mov.w	r2, #0
 80110da:	f04f 0300 	mov.w	r3, #0
 80110de:	020b      	lsls	r3, r1, #8
 80110e0:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 80110e4:	0202      	lsls	r2, r0, #8
 80110e6:	6979      	ldr	r1, [r7, #20]
 80110e8:	6849      	ldr	r1, [r1, #4]
 80110ea:	0849      	lsrs	r1, r1, #1
 80110ec:	2000      	movs	r0, #0
 80110ee:	460c      	mov	r4, r1
 80110f0:	4605      	mov	r5, r0
 80110f2:	eb12 0804 	adds.w	r8, r2, r4
 80110f6:	eb43 0905 	adc.w	r9, r3, r5
 80110fa:	697b      	ldr	r3, [r7, #20]
 80110fc:	685b      	ldr	r3, [r3, #4]
 80110fe:	2200      	movs	r2, #0
 8011100:	469a      	mov	sl, r3
 8011102:	4693      	mov	fp, r2
 8011104:	4652      	mov	r2, sl
 8011106:	465b      	mov	r3, fp
 8011108:	4640      	mov	r0, r8
 801110a:	4649      	mov	r1, r9
 801110c:	f7ef fb24 	bl	8000758 <__aeabi_uldivmod>
 8011110:	4602      	mov	r2, r0
 8011112:	460b      	mov	r3, r1
 8011114:	4613      	mov	r3, r2
 8011116:	63bb      	str	r3, [r7, #56]	@ 0x38
 8011118:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801111a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801111e:	d308      	bcc.n	8011132 <UART_SetConfig+0x9a2>
 8011120:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8011122:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8011126:	d204      	bcs.n	8011132 <UART_SetConfig+0x9a2>
 8011128:	697b      	ldr	r3, [r7, #20]
 801112a:	681b      	ldr	r3, [r3, #0]
 801112c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 801112e:	60da      	str	r2, [r3, #12]
 8011130:	e17f      	b.n	8011432 <UART_SetConfig+0xca2>
 8011132:	2301      	movs	r3, #1
 8011134:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 8011138:	e17b      	b.n	8011432 <UART_SetConfig+0xca2>
 801113a:	697b      	ldr	r3, [r7, #20]
 801113c:	69db      	ldr	r3, [r3, #28]
 801113e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8011142:	f040 80bd 	bne.w	80112c0 <UART_SetConfig+0xb30>
 8011146:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 801114a:	2b20      	cmp	r3, #32
 801114c:	dc48      	bgt.n	80111e0 <UART_SetConfig+0xa50>
 801114e:	2b00      	cmp	r3, #0
 8011150:	db7b      	blt.n	801124a <UART_SetConfig+0xaba>
 8011152:	2b20      	cmp	r3, #32
 8011154:	d879      	bhi.n	801124a <UART_SetConfig+0xaba>
 8011156:	a201      	add	r2, pc, #4	@ (adr r2, 801115c <UART_SetConfig+0x9cc>)
 8011158:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801115c:	080111e7 	.word	0x080111e7
 8011160:	080111ef 	.word	0x080111ef
 8011164:	0801124b 	.word	0x0801124b
 8011168:	0801124b 	.word	0x0801124b
 801116c:	080111f7 	.word	0x080111f7
 8011170:	0801124b 	.word	0x0801124b
 8011174:	0801124b 	.word	0x0801124b
 8011178:	0801124b 	.word	0x0801124b
 801117c:	08011207 	.word	0x08011207
 8011180:	0801124b 	.word	0x0801124b
 8011184:	0801124b 	.word	0x0801124b
 8011188:	0801124b 	.word	0x0801124b
 801118c:	0801124b 	.word	0x0801124b
 8011190:	0801124b 	.word	0x0801124b
 8011194:	0801124b 	.word	0x0801124b
 8011198:	0801124b 	.word	0x0801124b
 801119c:	08011217 	.word	0x08011217
 80111a0:	0801124b 	.word	0x0801124b
 80111a4:	0801124b 	.word	0x0801124b
 80111a8:	0801124b 	.word	0x0801124b
 80111ac:	0801124b 	.word	0x0801124b
 80111b0:	0801124b 	.word	0x0801124b
 80111b4:	0801124b 	.word	0x0801124b
 80111b8:	0801124b 	.word	0x0801124b
 80111bc:	0801124b 	.word	0x0801124b
 80111c0:	0801124b 	.word	0x0801124b
 80111c4:	0801124b 	.word	0x0801124b
 80111c8:	0801124b 	.word	0x0801124b
 80111cc:	0801124b 	.word	0x0801124b
 80111d0:	0801124b 	.word	0x0801124b
 80111d4:	0801124b 	.word	0x0801124b
 80111d8:	0801124b 	.word	0x0801124b
 80111dc:	0801123d 	.word	0x0801123d
 80111e0:	2b40      	cmp	r3, #64	@ 0x40
 80111e2:	d02e      	beq.n	8011242 <UART_SetConfig+0xab2>
 80111e4:	e031      	b.n	801124a <UART_SetConfig+0xaba>
 80111e6:	f7fa fe67 	bl	800beb8 <HAL_RCC_GetPCLK1Freq>
 80111ea:	63f8      	str	r0, [r7, #60]	@ 0x3c
 80111ec:	e033      	b.n	8011256 <UART_SetConfig+0xac6>
 80111ee:	f7fa fe79 	bl	800bee4 <HAL_RCC_GetPCLK2Freq>
 80111f2:	63f8      	str	r0, [r7, #60]	@ 0x3c
 80111f4:	e02f      	b.n	8011256 <UART_SetConfig+0xac6>
 80111f6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80111fa:	4618      	mov	r0, r3
 80111fc:	f7fc fd10 	bl	800dc20 <HAL_RCCEx_GetPLL2ClockFreq>
 8011200:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8011202:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011204:	e027      	b.n	8011256 <UART_SetConfig+0xac6>
 8011206:	f107 0318 	add.w	r3, r7, #24
 801120a:	4618      	mov	r0, r3
 801120c:	f7fc fe5c 	bl	800dec8 <HAL_RCCEx_GetPLL3ClockFreq>
 8011210:	69fb      	ldr	r3, [r7, #28]
 8011212:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011214:	e01f      	b.n	8011256 <UART_SetConfig+0xac6>
 8011216:	4b69      	ldr	r3, [pc, #420]	@ (80113bc <UART_SetConfig+0xc2c>)
 8011218:	681b      	ldr	r3, [r3, #0]
 801121a:	f003 0320 	and.w	r3, r3, #32
 801121e:	2b00      	cmp	r3, #0
 8011220:	d009      	beq.n	8011236 <UART_SetConfig+0xaa6>
 8011222:	4b66      	ldr	r3, [pc, #408]	@ (80113bc <UART_SetConfig+0xc2c>)
 8011224:	681b      	ldr	r3, [r3, #0]
 8011226:	08db      	lsrs	r3, r3, #3
 8011228:	f003 0303 	and.w	r3, r3, #3
 801122c:	4a64      	ldr	r2, [pc, #400]	@ (80113c0 <UART_SetConfig+0xc30>)
 801122e:	fa22 f303 	lsr.w	r3, r2, r3
 8011232:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011234:	e00f      	b.n	8011256 <UART_SetConfig+0xac6>
 8011236:	4b62      	ldr	r3, [pc, #392]	@ (80113c0 <UART_SetConfig+0xc30>)
 8011238:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801123a:	e00c      	b.n	8011256 <UART_SetConfig+0xac6>
 801123c:	4b61      	ldr	r3, [pc, #388]	@ (80113c4 <UART_SetConfig+0xc34>)
 801123e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011240:	e009      	b.n	8011256 <UART_SetConfig+0xac6>
 8011242:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011246:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011248:	e005      	b.n	8011256 <UART_SetConfig+0xac6>
 801124a:	2300      	movs	r3, #0
 801124c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801124e:	2301      	movs	r3, #1
 8011250:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 8011254:	bf00      	nop
 8011256:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8011258:	2b00      	cmp	r3, #0
 801125a:	f000 80ea 	beq.w	8011432 <UART_SetConfig+0xca2>
 801125e:	697b      	ldr	r3, [r7, #20]
 8011260:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8011262:	4a55      	ldr	r2, [pc, #340]	@ (80113b8 <UART_SetConfig+0xc28>)
 8011264:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8011268:	461a      	mov	r2, r3
 801126a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 801126c:	fbb3 f3f2 	udiv	r3, r3, r2
 8011270:	005a      	lsls	r2, r3, #1
 8011272:	697b      	ldr	r3, [r7, #20]
 8011274:	685b      	ldr	r3, [r3, #4]
 8011276:	085b      	lsrs	r3, r3, #1
 8011278:	441a      	add	r2, r3
 801127a:	697b      	ldr	r3, [r7, #20]
 801127c:	685b      	ldr	r3, [r3, #4]
 801127e:	fbb2 f3f3 	udiv	r3, r2, r3
 8011282:	63bb      	str	r3, [r7, #56]	@ 0x38
 8011284:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8011286:	2b0f      	cmp	r3, #15
 8011288:	d916      	bls.n	80112b8 <UART_SetConfig+0xb28>
 801128a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801128c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8011290:	d212      	bcs.n	80112b8 <UART_SetConfig+0xb28>
 8011292:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8011294:	b29b      	uxth	r3, r3
 8011296:	f023 030f 	bic.w	r3, r3, #15
 801129a:	86fb      	strh	r3, [r7, #54]	@ 0x36
 801129c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801129e:	085b      	lsrs	r3, r3, #1
 80112a0:	b29b      	uxth	r3, r3
 80112a2:	f003 0307 	and.w	r3, r3, #7
 80112a6:	b29a      	uxth	r2, r3
 80112a8:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 80112aa:	4313      	orrs	r3, r2
 80112ac:	86fb      	strh	r3, [r7, #54]	@ 0x36
 80112ae:	697b      	ldr	r3, [r7, #20]
 80112b0:	681b      	ldr	r3, [r3, #0]
 80112b2:	8efa      	ldrh	r2, [r7, #54]	@ 0x36
 80112b4:	60da      	str	r2, [r3, #12]
 80112b6:	e0bc      	b.n	8011432 <UART_SetConfig+0xca2>
 80112b8:	2301      	movs	r3, #1
 80112ba:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 80112be:	e0b8      	b.n	8011432 <UART_SetConfig+0xca2>
 80112c0:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 80112c4:	2b20      	cmp	r3, #32
 80112c6:	dc4b      	bgt.n	8011360 <UART_SetConfig+0xbd0>
 80112c8:	2b00      	cmp	r3, #0
 80112ca:	f2c0 8087 	blt.w	80113dc <UART_SetConfig+0xc4c>
 80112ce:	2b20      	cmp	r3, #32
 80112d0:	f200 8084 	bhi.w	80113dc <UART_SetConfig+0xc4c>
 80112d4:	a201      	add	r2, pc, #4	@ (adr r2, 80112dc <UART_SetConfig+0xb4c>)
 80112d6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80112da:	bf00      	nop
 80112dc:	08011367 	.word	0x08011367
 80112e0:	0801136f 	.word	0x0801136f
 80112e4:	080113dd 	.word	0x080113dd
 80112e8:	080113dd 	.word	0x080113dd
 80112ec:	08011377 	.word	0x08011377
 80112f0:	080113dd 	.word	0x080113dd
 80112f4:	080113dd 	.word	0x080113dd
 80112f8:	080113dd 	.word	0x080113dd
 80112fc:	08011387 	.word	0x08011387
 8011300:	080113dd 	.word	0x080113dd
 8011304:	080113dd 	.word	0x080113dd
 8011308:	080113dd 	.word	0x080113dd
 801130c:	080113dd 	.word	0x080113dd
 8011310:	080113dd 	.word	0x080113dd
 8011314:	080113dd 	.word	0x080113dd
 8011318:	080113dd 	.word	0x080113dd
 801131c:	08011397 	.word	0x08011397
 8011320:	080113dd 	.word	0x080113dd
 8011324:	080113dd 	.word	0x080113dd
 8011328:	080113dd 	.word	0x080113dd
 801132c:	080113dd 	.word	0x080113dd
 8011330:	080113dd 	.word	0x080113dd
 8011334:	080113dd 	.word	0x080113dd
 8011338:	080113dd 	.word	0x080113dd
 801133c:	080113dd 	.word	0x080113dd
 8011340:	080113dd 	.word	0x080113dd
 8011344:	080113dd 	.word	0x080113dd
 8011348:	080113dd 	.word	0x080113dd
 801134c:	080113dd 	.word	0x080113dd
 8011350:	080113dd 	.word	0x080113dd
 8011354:	080113dd 	.word	0x080113dd
 8011358:	080113dd 	.word	0x080113dd
 801135c:	080113cf 	.word	0x080113cf
 8011360:	2b40      	cmp	r3, #64	@ 0x40
 8011362:	d037      	beq.n	80113d4 <UART_SetConfig+0xc44>
 8011364:	e03a      	b.n	80113dc <UART_SetConfig+0xc4c>
 8011366:	f7fa fda7 	bl	800beb8 <HAL_RCC_GetPCLK1Freq>
 801136a:	63f8      	str	r0, [r7, #60]	@ 0x3c
 801136c:	e03c      	b.n	80113e8 <UART_SetConfig+0xc58>
 801136e:	f7fa fdb9 	bl	800bee4 <HAL_RCC_GetPCLK2Freq>
 8011372:	63f8      	str	r0, [r7, #60]	@ 0x3c
 8011374:	e038      	b.n	80113e8 <UART_SetConfig+0xc58>
 8011376:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 801137a:	4618      	mov	r0, r3
 801137c:	f7fc fc50 	bl	800dc20 <HAL_RCCEx_GetPLL2ClockFreq>
 8011380:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8011382:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011384:	e030      	b.n	80113e8 <UART_SetConfig+0xc58>
 8011386:	f107 0318 	add.w	r3, r7, #24
 801138a:	4618      	mov	r0, r3
 801138c:	f7fc fd9c 	bl	800dec8 <HAL_RCCEx_GetPLL3ClockFreq>
 8011390:	69fb      	ldr	r3, [r7, #28]
 8011392:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011394:	e028      	b.n	80113e8 <UART_SetConfig+0xc58>
 8011396:	4b09      	ldr	r3, [pc, #36]	@ (80113bc <UART_SetConfig+0xc2c>)
 8011398:	681b      	ldr	r3, [r3, #0]
 801139a:	f003 0320 	and.w	r3, r3, #32
 801139e:	2b00      	cmp	r3, #0
 80113a0:	d012      	beq.n	80113c8 <UART_SetConfig+0xc38>
 80113a2:	4b06      	ldr	r3, [pc, #24]	@ (80113bc <UART_SetConfig+0xc2c>)
 80113a4:	681b      	ldr	r3, [r3, #0]
 80113a6:	08db      	lsrs	r3, r3, #3
 80113a8:	f003 0303 	and.w	r3, r3, #3
 80113ac:	4a04      	ldr	r2, [pc, #16]	@ (80113c0 <UART_SetConfig+0xc30>)
 80113ae:	fa22 f303 	lsr.w	r3, r2, r3
 80113b2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80113b4:	e018      	b.n	80113e8 <UART_SetConfig+0xc58>
 80113b6:	bf00      	nop
 80113b8:	0801b05c 	.word	0x0801b05c
 80113bc:	58024400 	.word	0x58024400
 80113c0:	03d09000 	.word	0x03d09000
 80113c4:	003d0900 	.word	0x003d0900
 80113c8:	4b24      	ldr	r3, [pc, #144]	@ (801145c <UART_SetConfig+0xccc>)
 80113ca:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80113cc:	e00c      	b.n	80113e8 <UART_SetConfig+0xc58>
 80113ce:	4b24      	ldr	r3, [pc, #144]	@ (8011460 <UART_SetConfig+0xcd0>)
 80113d0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80113d2:	e009      	b.n	80113e8 <UART_SetConfig+0xc58>
 80113d4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80113d8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80113da:	e005      	b.n	80113e8 <UART_SetConfig+0xc58>
 80113dc:	2300      	movs	r3, #0
 80113de:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80113e0:	2301      	movs	r3, #1
 80113e2:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 80113e6:	bf00      	nop
 80113e8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80113ea:	2b00      	cmp	r3, #0
 80113ec:	d021      	beq.n	8011432 <UART_SetConfig+0xca2>
 80113ee:	697b      	ldr	r3, [r7, #20]
 80113f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80113f2:	4a1c      	ldr	r2, [pc, #112]	@ (8011464 <UART_SetConfig+0xcd4>)
 80113f4:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80113f8:	461a      	mov	r2, r3
 80113fa:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80113fc:	fbb3 f2f2 	udiv	r2, r3, r2
 8011400:	697b      	ldr	r3, [r7, #20]
 8011402:	685b      	ldr	r3, [r3, #4]
 8011404:	085b      	lsrs	r3, r3, #1
 8011406:	441a      	add	r2, r3
 8011408:	697b      	ldr	r3, [r7, #20]
 801140a:	685b      	ldr	r3, [r3, #4]
 801140c:	fbb2 f3f3 	udiv	r3, r2, r3
 8011410:	63bb      	str	r3, [r7, #56]	@ 0x38
 8011412:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8011414:	2b0f      	cmp	r3, #15
 8011416:	d909      	bls.n	801142c <UART_SetConfig+0xc9c>
 8011418:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801141a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 801141e:	d205      	bcs.n	801142c <UART_SetConfig+0xc9c>
 8011420:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8011422:	b29a      	uxth	r2, r3
 8011424:	697b      	ldr	r3, [r7, #20]
 8011426:	681b      	ldr	r3, [r3, #0]
 8011428:	60da      	str	r2, [r3, #12]
 801142a:	e002      	b.n	8011432 <UART_SetConfig+0xca2>
 801142c:	2301      	movs	r3, #1
 801142e:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 8011432:	697b      	ldr	r3, [r7, #20]
 8011434:	2201      	movs	r2, #1
 8011436:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 801143a:	697b      	ldr	r3, [r7, #20]
 801143c:	2201      	movs	r2, #1
 801143e:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 8011442:	697b      	ldr	r3, [r7, #20]
 8011444:	2200      	movs	r2, #0
 8011446:	675a      	str	r2, [r3, #116]	@ 0x74
 8011448:	697b      	ldr	r3, [r7, #20]
 801144a:	2200      	movs	r2, #0
 801144c:	679a      	str	r2, [r3, #120]	@ 0x78
 801144e:	f897 3042 	ldrb.w	r3, [r7, #66]	@ 0x42
 8011452:	4618      	mov	r0, r3
 8011454:	3748      	adds	r7, #72	@ 0x48
 8011456:	46bd      	mov	sp, r7
 8011458:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 801145c:	03d09000 	.word	0x03d09000
 8011460:	003d0900 	.word	0x003d0900
 8011464:	0801b05c 	.word	0x0801b05c

08011468 <UART_AdvFeatureConfig>:
 8011468:	b480      	push	{r7}
 801146a:	b083      	sub	sp, #12
 801146c:	af00      	add	r7, sp, #0
 801146e:	6078      	str	r0, [r7, #4]
 8011470:	687b      	ldr	r3, [r7, #4]
 8011472:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011474:	f003 0308 	and.w	r3, r3, #8
 8011478:	2b00      	cmp	r3, #0
 801147a:	d00a      	beq.n	8011492 <UART_AdvFeatureConfig+0x2a>
 801147c:	687b      	ldr	r3, [r7, #4]
 801147e:	681b      	ldr	r3, [r3, #0]
 8011480:	685b      	ldr	r3, [r3, #4]
 8011482:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 8011486:	687b      	ldr	r3, [r7, #4]
 8011488:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 801148a:	687b      	ldr	r3, [r7, #4]
 801148c:	681b      	ldr	r3, [r3, #0]
 801148e:	430a      	orrs	r2, r1
 8011490:	605a      	str	r2, [r3, #4]
 8011492:	687b      	ldr	r3, [r7, #4]
 8011494:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011496:	f003 0301 	and.w	r3, r3, #1
 801149a:	2b00      	cmp	r3, #0
 801149c:	d00a      	beq.n	80114b4 <UART_AdvFeatureConfig+0x4c>
 801149e:	687b      	ldr	r3, [r7, #4]
 80114a0:	681b      	ldr	r3, [r3, #0]
 80114a2:	685b      	ldr	r3, [r3, #4]
 80114a4:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 80114a8:	687b      	ldr	r3, [r7, #4]
 80114aa:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80114ac:	687b      	ldr	r3, [r7, #4]
 80114ae:	681b      	ldr	r3, [r3, #0]
 80114b0:	430a      	orrs	r2, r1
 80114b2:	605a      	str	r2, [r3, #4]
 80114b4:	687b      	ldr	r3, [r7, #4]
 80114b6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80114b8:	f003 0302 	and.w	r3, r3, #2
 80114bc:	2b00      	cmp	r3, #0
 80114be:	d00a      	beq.n	80114d6 <UART_AdvFeatureConfig+0x6e>
 80114c0:	687b      	ldr	r3, [r7, #4]
 80114c2:	681b      	ldr	r3, [r3, #0]
 80114c4:	685b      	ldr	r3, [r3, #4]
 80114c6:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 80114ca:	687b      	ldr	r3, [r7, #4]
 80114cc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80114ce:	687b      	ldr	r3, [r7, #4]
 80114d0:	681b      	ldr	r3, [r3, #0]
 80114d2:	430a      	orrs	r2, r1
 80114d4:	605a      	str	r2, [r3, #4]
 80114d6:	687b      	ldr	r3, [r7, #4]
 80114d8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80114da:	f003 0304 	and.w	r3, r3, #4
 80114de:	2b00      	cmp	r3, #0
 80114e0:	d00a      	beq.n	80114f8 <UART_AdvFeatureConfig+0x90>
 80114e2:	687b      	ldr	r3, [r7, #4]
 80114e4:	681b      	ldr	r3, [r3, #0]
 80114e6:	685b      	ldr	r3, [r3, #4]
 80114e8:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 80114ec:	687b      	ldr	r3, [r7, #4]
 80114ee:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80114f0:	687b      	ldr	r3, [r7, #4]
 80114f2:	681b      	ldr	r3, [r3, #0]
 80114f4:	430a      	orrs	r2, r1
 80114f6:	605a      	str	r2, [r3, #4]
 80114f8:	687b      	ldr	r3, [r7, #4]
 80114fa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80114fc:	f003 0310 	and.w	r3, r3, #16
 8011500:	2b00      	cmp	r3, #0
 8011502:	d00a      	beq.n	801151a <UART_AdvFeatureConfig+0xb2>
 8011504:	687b      	ldr	r3, [r7, #4]
 8011506:	681b      	ldr	r3, [r3, #0]
 8011508:	689b      	ldr	r3, [r3, #8]
 801150a:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 801150e:	687b      	ldr	r3, [r7, #4]
 8011510:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8011512:	687b      	ldr	r3, [r7, #4]
 8011514:	681b      	ldr	r3, [r3, #0]
 8011516:	430a      	orrs	r2, r1
 8011518:	609a      	str	r2, [r3, #8]
 801151a:	687b      	ldr	r3, [r7, #4]
 801151c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801151e:	f003 0320 	and.w	r3, r3, #32
 8011522:	2b00      	cmp	r3, #0
 8011524:	d00a      	beq.n	801153c <UART_AdvFeatureConfig+0xd4>
 8011526:	687b      	ldr	r3, [r7, #4]
 8011528:	681b      	ldr	r3, [r3, #0]
 801152a:	689b      	ldr	r3, [r3, #8]
 801152c:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 8011530:	687b      	ldr	r3, [r7, #4]
 8011532:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8011534:	687b      	ldr	r3, [r7, #4]
 8011536:	681b      	ldr	r3, [r3, #0]
 8011538:	430a      	orrs	r2, r1
 801153a:	609a      	str	r2, [r3, #8]
 801153c:	687b      	ldr	r3, [r7, #4]
 801153e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011540:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8011544:	2b00      	cmp	r3, #0
 8011546:	d01a      	beq.n	801157e <UART_AdvFeatureConfig+0x116>
 8011548:	687b      	ldr	r3, [r7, #4]
 801154a:	681b      	ldr	r3, [r3, #0]
 801154c:	685b      	ldr	r3, [r3, #4]
 801154e:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 8011552:	687b      	ldr	r3, [r7, #4]
 8011554:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8011556:	687b      	ldr	r3, [r7, #4]
 8011558:	681b      	ldr	r3, [r3, #0]
 801155a:	430a      	orrs	r2, r1
 801155c:	605a      	str	r2, [r3, #4]
 801155e:	687b      	ldr	r3, [r7, #4]
 8011560:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011562:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8011566:	d10a      	bne.n	801157e <UART_AdvFeatureConfig+0x116>
 8011568:	687b      	ldr	r3, [r7, #4]
 801156a:	681b      	ldr	r3, [r3, #0]
 801156c:	685b      	ldr	r3, [r3, #4]
 801156e:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 8011572:	687b      	ldr	r3, [r7, #4]
 8011574:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8011576:	687b      	ldr	r3, [r7, #4]
 8011578:	681b      	ldr	r3, [r3, #0]
 801157a:	430a      	orrs	r2, r1
 801157c:	605a      	str	r2, [r3, #4]
 801157e:	687b      	ldr	r3, [r7, #4]
 8011580:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011582:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8011586:	2b00      	cmp	r3, #0
 8011588:	d00a      	beq.n	80115a0 <UART_AdvFeatureConfig+0x138>
 801158a:	687b      	ldr	r3, [r7, #4]
 801158c:	681b      	ldr	r3, [r3, #0]
 801158e:	685b      	ldr	r3, [r3, #4]
 8011590:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 8011594:	687b      	ldr	r3, [r7, #4]
 8011596:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8011598:	687b      	ldr	r3, [r7, #4]
 801159a:	681b      	ldr	r3, [r3, #0]
 801159c:	430a      	orrs	r2, r1
 801159e:	605a      	str	r2, [r3, #4]
 80115a0:	bf00      	nop
 80115a2:	370c      	adds	r7, #12
 80115a4:	46bd      	mov	sp, r7
 80115a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80115aa:	4770      	bx	lr

080115ac <UART_CheckIdleState>:
 80115ac:	b580      	push	{r7, lr}
 80115ae:	b098      	sub	sp, #96	@ 0x60
 80115b0:	af02      	add	r7, sp, #8
 80115b2:	6078      	str	r0, [r7, #4]
 80115b4:	687b      	ldr	r3, [r7, #4]
 80115b6:	2200      	movs	r2, #0
 80115b8:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80115bc:	f7f3 fe94 	bl	80052e8 <HAL_GetTick>
 80115c0:	6578      	str	r0, [r7, #84]	@ 0x54
 80115c2:	687b      	ldr	r3, [r7, #4]
 80115c4:	681b      	ldr	r3, [r3, #0]
 80115c6:	681b      	ldr	r3, [r3, #0]
 80115c8:	f003 0308 	and.w	r3, r3, #8
 80115cc:	2b08      	cmp	r3, #8
 80115ce:	d12f      	bne.n	8011630 <UART_CheckIdleState+0x84>
 80115d0:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 80115d4:	9300      	str	r3, [sp, #0]
 80115d6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80115d8:	2200      	movs	r2, #0
 80115da:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 80115de:	6878      	ldr	r0, [r7, #4]
 80115e0:	f000 f88e 	bl	8011700 <UART_WaitOnFlagUntilTimeout>
 80115e4:	4603      	mov	r3, r0
 80115e6:	2b00      	cmp	r3, #0
 80115e8:	d022      	beq.n	8011630 <UART_CheckIdleState+0x84>
 80115ea:	687b      	ldr	r3, [r7, #4]
 80115ec:	681b      	ldr	r3, [r3, #0]
 80115ee:	63bb      	str	r3, [r7, #56]	@ 0x38
 80115f0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80115f2:	e853 3f00 	ldrex	r3, [r3]
 80115f6:	637b      	str	r3, [r7, #52]	@ 0x34
 80115f8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80115fa:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80115fe:	653b      	str	r3, [r7, #80]	@ 0x50
 8011600:	687b      	ldr	r3, [r7, #4]
 8011602:	681b      	ldr	r3, [r3, #0]
 8011604:	461a      	mov	r2, r3
 8011606:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8011608:	647b      	str	r3, [r7, #68]	@ 0x44
 801160a:	643a      	str	r2, [r7, #64]	@ 0x40
 801160c:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 801160e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8011610:	e841 2300 	strex	r3, r2, [r1]
 8011614:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011616:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8011618:	2b00      	cmp	r3, #0
 801161a:	d1e6      	bne.n	80115ea <UART_CheckIdleState+0x3e>
 801161c:	687b      	ldr	r3, [r7, #4]
 801161e:	2220      	movs	r2, #32
 8011620:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8011624:	687b      	ldr	r3, [r7, #4]
 8011626:	2200      	movs	r2, #0
 8011628:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 801162c:	2303      	movs	r3, #3
 801162e:	e063      	b.n	80116f8 <UART_CheckIdleState+0x14c>
 8011630:	687b      	ldr	r3, [r7, #4]
 8011632:	681b      	ldr	r3, [r3, #0]
 8011634:	681b      	ldr	r3, [r3, #0]
 8011636:	f003 0304 	and.w	r3, r3, #4
 801163a:	2b04      	cmp	r3, #4
 801163c:	d149      	bne.n	80116d2 <UART_CheckIdleState+0x126>
 801163e:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8011642:	9300      	str	r3, [sp, #0]
 8011644:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8011646:	2200      	movs	r2, #0
 8011648:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 801164c:	6878      	ldr	r0, [r7, #4]
 801164e:	f000 f857 	bl	8011700 <UART_WaitOnFlagUntilTimeout>
 8011652:	4603      	mov	r3, r0
 8011654:	2b00      	cmp	r3, #0
 8011656:	d03c      	beq.n	80116d2 <UART_CheckIdleState+0x126>
 8011658:	687b      	ldr	r3, [r7, #4]
 801165a:	681b      	ldr	r3, [r3, #0]
 801165c:	627b      	str	r3, [r7, #36]	@ 0x24
 801165e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011660:	e853 3f00 	ldrex	r3, [r3]
 8011664:	623b      	str	r3, [r7, #32]
 8011666:	6a3b      	ldr	r3, [r7, #32]
 8011668:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 801166c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 801166e:	687b      	ldr	r3, [r7, #4]
 8011670:	681b      	ldr	r3, [r3, #0]
 8011672:	461a      	mov	r2, r3
 8011674:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8011676:	633b      	str	r3, [r7, #48]	@ 0x30
 8011678:	62fa      	str	r2, [r7, #44]	@ 0x2c
 801167a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 801167c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 801167e:	e841 2300 	strex	r3, r2, [r1]
 8011682:	62bb      	str	r3, [r7, #40]	@ 0x28
 8011684:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8011686:	2b00      	cmp	r3, #0
 8011688:	d1e6      	bne.n	8011658 <UART_CheckIdleState+0xac>
 801168a:	687b      	ldr	r3, [r7, #4]
 801168c:	681b      	ldr	r3, [r3, #0]
 801168e:	3308      	adds	r3, #8
 8011690:	613b      	str	r3, [r7, #16]
 8011692:	693b      	ldr	r3, [r7, #16]
 8011694:	e853 3f00 	ldrex	r3, [r3]
 8011698:	60fb      	str	r3, [r7, #12]
 801169a:	68fb      	ldr	r3, [r7, #12]
 801169c:	f023 0301 	bic.w	r3, r3, #1
 80116a0:	64bb      	str	r3, [r7, #72]	@ 0x48
 80116a2:	687b      	ldr	r3, [r7, #4]
 80116a4:	681b      	ldr	r3, [r3, #0]
 80116a6:	3308      	adds	r3, #8
 80116a8:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80116aa:	61fa      	str	r2, [r7, #28]
 80116ac:	61bb      	str	r3, [r7, #24]
 80116ae:	69b9      	ldr	r1, [r7, #24]
 80116b0:	69fa      	ldr	r2, [r7, #28]
 80116b2:	e841 2300 	strex	r3, r2, [r1]
 80116b6:	617b      	str	r3, [r7, #20]
 80116b8:	697b      	ldr	r3, [r7, #20]
 80116ba:	2b00      	cmp	r3, #0
 80116bc:	d1e5      	bne.n	801168a <UART_CheckIdleState+0xde>
 80116be:	687b      	ldr	r3, [r7, #4]
 80116c0:	2220      	movs	r2, #32
 80116c2:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80116c6:	687b      	ldr	r3, [r7, #4]
 80116c8:	2200      	movs	r2, #0
 80116ca:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 80116ce:	2303      	movs	r3, #3
 80116d0:	e012      	b.n	80116f8 <UART_CheckIdleState+0x14c>
 80116d2:	687b      	ldr	r3, [r7, #4]
 80116d4:	2220      	movs	r2, #32
 80116d6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80116da:	687b      	ldr	r3, [r7, #4]
 80116dc:	2220      	movs	r2, #32
 80116de:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80116e2:	687b      	ldr	r3, [r7, #4]
 80116e4:	2200      	movs	r2, #0
 80116e6:	66da      	str	r2, [r3, #108]	@ 0x6c
 80116e8:	687b      	ldr	r3, [r7, #4]
 80116ea:	2200      	movs	r2, #0
 80116ec:	671a      	str	r2, [r3, #112]	@ 0x70
 80116ee:	687b      	ldr	r3, [r7, #4]
 80116f0:	2200      	movs	r2, #0
 80116f2:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 80116f6:	2300      	movs	r3, #0
 80116f8:	4618      	mov	r0, r3
 80116fa:	3758      	adds	r7, #88	@ 0x58
 80116fc:	46bd      	mov	sp, r7
 80116fe:	bd80      	pop	{r7, pc}

08011700 <UART_WaitOnFlagUntilTimeout>:
 8011700:	b580      	push	{r7, lr}
 8011702:	b084      	sub	sp, #16
 8011704:	af00      	add	r7, sp, #0
 8011706:	60f8      	str	r0, [r7, #12]
 8011708:	60b9      	str	r1, [r7, #8]
 801170a:	603b      	str	r3, [r7, #0]
 801170c:	4613      	mov	r3, r2
 801170e:	71fb      	strb	r3, [r7, #7]
 8011710:	e04f      	b.n	80117b2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8011712:	69bb      	ldr	r3, [r7, #24]
 8011714:	f1b3 3fff 	cmp.w	r3, #4294967295
 8011718:	d04b      	beq.n	80117b2 <UART_WaitOnFlagUntilTimeout+0xb2>
 801171a:	f7f3 fde5 	bl	80052e8 <HAL_GetTick>
 801171e:	4602      	mov	r2, r0
 8011720:	683b      	ldr	r3, [r7, #0]
 8011722:	1ad3      	subs	r3, r2, r3
 8011724:	69ba      	ldr	r2, [r7, #24]
 8011726:	429a      	cmp	r2, r3
 8011728:	d302      	bcc.n	8011730 <UART_WaitOnFlagUntilTimeout+0x30>
 801172a:	69bb      	ldr	r3, [r7, #24]
 801172c:	2b00      	cmp	r3, #0
 801172e:	d101      	bne.n	8011734 <UART_WaitOnFlagUntilTimeout+0x34>
 8011730:	2303      	movs	r3, #3
 8011732:	e04e      	b.n	80117d2 <UART_WaitOnFlagUntilTimeout+0xd2>
 8011734:	68fb      	ldr	r3, [r7, #12]
 8011736:	681b      	ldr	r3, [r3, #0]
 8011738:	681b      	ldr	r3, [r3, #0]
 801173a:	f003 0304 	and.w	r3, r3, #4
 801173e:	2b00      	cmp	r3, #0
 8011740:	d037      	beq.n	80117b2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8011742:	68bb      	ldr	r3, [r7, #8]
 8011744:	2b80      	cmp	r3, #128	@ 0x80
 8011746:	d034      	beq.n	80117b2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8011748:	68bb      	ldr	r3, [r7, #8]
 801174a:	2b40      	cmp	r3, #64	@ 0x40
 801174c:	d031      	beq.n	80117b2 <UART_WaitOnFlagUntilTimeout+0xb2>
 801174e:	68fb      	ldr	r3, [r7, #12]
 8011750:	681b      	ldr	r3, [r3, #0]
 8011752:	69db      	ldr	r3, [r3, #28]
 8011754:	f003 0308 	and.w	r3, r3, #8
 8011758:	2b08      	cmp	r3, #8
 801175a:	d110      	bne.n	801177e <UART_WaitOnFlagUntilTimeout+0x7e>
 801175c:	68fb      	ldr	r3, [r7, #12]
 801175e:	681b      	ldr	r3, [r3, #0]
 8011760:	2208      	movs	r2, #8
 8011762:	621a      	str	r2, [r3, #32]
 8011764:	68f8      	ldr	r0, [r7, #12]
 8011766:	f000 f839 	bl	80117dc <UART_EndRxTransfer>
 801176a:	68fb      	ldr	r3, [r7, #12]
 801176c:	2208      	movs	r2, #8
 801176e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8011772:	68fb      	ldr	r3, [r7, #12]
 8011774:	2200      	movs	r2, #0
 8011776:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 801177a:	2301      	movs	r3, #1
 801177c:	e029      	b.n	80117d2 <UART_WaitOnFlagUntilTimeout+0xd2>
 801177e:	68fb      	ldr	r3, [r7, #12]
 8011780:	681b      	ldr	r3, [r3, #0]
 8011782:	69db      	ldr	r3, [r3, #28]
 8011784:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8011788:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 801178c:	d111      	bne.n	80117b2 <UART_WaitOnFlagUntilTimeout+0xb2>
 801178e:	68fb      	ldr	r3, [r7, #12]
 8011790:	681b      	ldr	r3, [r3, #0]
 8011792:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8011796:	621a      	str	r2, [r3, #32]
 8011798:	68f8      	ldr	r0, [r7, #12]
 801179a:	f000 f81f 	bl	80117dc <UART_EndRxTransfer>
 801179e:	68fb      	ldr	r3, [r7, #12]
 80117a0:	2220      	movs	r2, #32
 80117a2:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80117a6:	68fb      	ldr	r3, [r7, #12]
 80117a8:	2200      	movs	r2, #0
 80117aa:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 80117ae:	2303      	movs	r3, #3
 80117b0:	e00f      	b.n	80117d2 <UART_WaitOnFlagUntilTimeout+0xd2>
 80117b2:	68fb      	ldr	r3, [r7, #12]
 80117b4:	681b      	ldr	r3, [r3, #0]
 80117b6:	69da      	ldr	r2, [r3, #28]
 80117b8:	68bb      	ldr	r3, [r7, #8]
 80117ba:	4013      	ands	r3, r2
 80117bc:	68ba      	ldr	r2, [r7, #8]
 80117be:	429a      	cmp	r2, r3
 80117c0:	bf0c      	ite	eq
 80117c2:	2301      	moveq	r3, #1
 80117c4:	2300      	movne	r3, #0
 80117c6:	b2db      	uxtb	r3, r3
 80117c8:	461a      	mov	r2, r3
 80117ca:	79fb      	ldrb	r3, [r7, #7]
 80117cc:	429a      	cmp	r2, r3
 80117ce:	d0a0      	beq.n	8011712 <UART_WaitOnFlagUntilTimeout+0x12>
 80117d0:	2300      	movs	r3, #0
 80117d2:	4618      	mov	r0, r3
 80117d4:	3710      	adds	r7, #16
 80117d6:	46bd      	mov	sp, r7
 80117d8:	bd80      	pop	{r7, pc}
	...

080117dc <UART_EndRxTransfer>:
 80117dc:	b480      	push	{r7}
 80117de:	b095      	sub	sp, #84	@ 0x54
 80117e0:	af00      	add	r7, sp, #0
 80117e2:	6078      	str	r0, [r7, #4]
 80117e4:	687b      	ldr	r3, [r7, #4]
 80117e6:	681b      	ldr	r3, [r3, #0]
 80117e8:	637b      	str	r3, [r7, #52]	@ 0x34
 80117ea:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80117ec:	e853 3f00 	ldrex	r3, [r3]
 80117f0:	633b      	str	r3, [r7, #48]	@ 0x30
 80117f2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80117f4:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80117f8:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80117fa:	687b      	ldr	r3, [r7, #4]
 80117fc:	681b      	ldr	r3, [r3, #0]
 80117fe:	461a      	mov	r2, r3
 8011800:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8011802:	643b      	str	r3, [r7, #64]	@ 0x40
 8011804:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8011806:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8011808:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 801180a:	e841 2300 	strex	r3, r2, [r1]
 801180e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8011810:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8011812:	2b00      	cmp	r3, #0
 8011814:	d1e6      	bne.n	80117e4 <UART_EndRxTransfer+0x8>
 8011816:	687b      	ldr	r3, [r7, #4]
 8011818:	681b      	ldr	r3, [r3, #0]
 801181a:	3308      	adds	r3, #8
 801181c:	623b      	str	r3, [r7, #32]
 801181e:	6a3b      	ldr	r3, [r7, #32]
 8011820:	e853 3f00 	ldrex	r3, [r3]
 8011824:	61fb      	str	r3, [r7, #28]
 8011826:	69fa      	ldr	r2, [r7, #28]
 8011828:	4b1e      	ldr	r3, [pc, #120]	@ (80118a4 <UART_EndRxTransfer+0xc8>)
 801182a:	4013      	ands	r3, r2
 801182c:	64bb      	str	r3, [r7, #72]	@ 0x48
 801182e:	687b      	ldr	r3, [r7, #4]
 8011830:	681b      	ldr	r3, [r3, #0]
 8011832:	3308      	adds	r3, #8
 8011834:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8011836:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8011838:	62bb      	str	r3, [r7, #40]	@ 0x28
 801183a:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 801183c:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 801183e:	e841 2300 	strex	r3, r2, [r1]
 8011842:	627b      	str	r3, [r7, #36]	@ 0x24
 8011844:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011846:	2b00      	cmp	r3, #0
 8011848:	d1e5      	bne.n	8011816 <UART_EndRxTransfer+0x3a>
 801184a:	687b      	ldr	r3, [r7, #4]
 801184c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 801184e:	2b01      	cmp	r3, #1
 8011850:	d118      	bne.n	8011884 <UART_EndRxTransfer+0xa8>
 8011852:	687b      	ldr	r3, [r7, #4]
 8011854:	681b      	ldr	r3, [r3, #0]
 8011856:	60fb      	str	r3, [r7, #12]
 8011858:	68fb      	ldr	r3, [r7, #12]
 801185a:	e853 3f00 	ldrex	r3, [r3]
 801185e:	60bb      	str	r3, [r7, #8]
 8011860:	68bb      	ldr	r3, [r7, #8]
 8011862:	f023 0310 	bic.w	r3, r3, #16
 8011866:	647b      	str	r3, [r7, #68]	@ 0x44
 8011868:	687b      	ldr	r3, [r7, #4]
 801186a:	681b      	ldr	r3, [r3, #0]
 801186c:	461a      	mov	r2, r3
 801186e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8011870:	61bb      	str	r3, [r7, #24]
 8011872:	617a      	str	r2, [r7, #20]
 8011874:	6979      	ldr	r1, [r7, #20]
 8011876:	69ba      	ldr	r2, [r7, #24]
 8011878:	e841 2300 	strex	r3, r2, [r1]
 801187c:	613b      	str	r3, [r7, #16]
 801187e:	693b      	ldr	r3, [r7, #16]
 8011880:	2b00      	cmp	r3, #0
 8011882:	d1e6      	bne.n	8011852 <UART_EndRxTransfer+0x76>
 8011884:	687b      	ldr	r3, [r7, #4]
 8011886:	2220      	movs	r2, #32
 8011888:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 801188c:	687b      	ldr	r3, [r7, #4]
 801188e:	2200      	movs	r2, #0
 8011890:	66da      	str	r2, [r3, #108]	@ 0x6c
 8011892:	687b      	ldr	r3, [r7, #4]
 8011894:	2200      	movs	r2, #0
 8011896:	675a      	str	r2, [r3, #116]	@ 0x74
 8011898:	bf00      	nop
 801189a:	3754      	adds	r7, #84	@ 0x54
 801189c:	46bd      	mov	sp, r7
 801189e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80118a2:	4770      	bx	lr
 80118a4:	effffffe 	.word	0xeffffffe

080118a8 <HAL_UARTEx_DisableFifoMode>:
 80118a8:	b480      	push	{r7}
 80118aa:	b085      	sub	sp, #20
 80118ac:	af00      	add	r7, sp, #0
 80118ae:	6078      	str	r0, [r7, #4]
 80118b0:	687b      	ldr	r3, [r7, #4]
 80118b2:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 80118b6:	2b01      	cmp	r3, #1
 80118b8:	d101      	bne.n	80118be <HAL_UARTEx_DisableFifoMode+0x16>
 80118ba:	2302      	movs	r3, #2
 80118bc:	e027      	b.n	801190e <HAL_UARTEx_DisableFifoMode+0x66>
 80118be:	687b      	ldr	r3, [r7, #4]
 80118c0:	2201      	movs	r2, #1
 80118c2:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 80118c6:	687b      	ldr	r3, [r7, #4]
 80118c8:	2224      	movs	r2, #36	@ 0x24
 80118ca:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80118ce:	687b      	ldr	r3, [r7, #4]
 80118d0:	681b      	ldr	r3, [r3, #0]
 80118d2:	681b      	ldr	r3, [r3, #0]
 80118d4:	60fb      	str	r3, [r7, #12]
 80118d6:	687b      	ldr	r3, [r7, #4]
 80118d8:	681b      	ldr	r3, [r3, #0]
 80118da:	681a      	ldr	r2, [r3, #0]
 80118dc:	687b      	ldr	r3, [r7, #4]
 80118de:	681b      	ldr	r3, [r3, #0]
 80118e0:	f022 0201 	bic.w	r2, r2, #1
 80118e4:	601a      	str	r2, [r3, #0]
 80118e6:	68fb      	ldr	r3, [r7, #12]
 80118e8:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 80118ec:	60fb      	str	r3, [r7, #12]
 80118ee:	687b      	ldr	r3, [r7, #4]
 80118f0:	2200      	movs	r2, #0
 80118f2:	665a      	str	r2, [r3, #100]	@ 0x64
 80118f4:	687b      	ldr	r3, [r7, #4]
 80118f6:	681b      	ldr	r3, [r3, #0]
 80118f8:	68fa      	ldr	r2, [r7, #12]
 80118fa:	601a      	str	r2, [r3, #0]
 80118fc:	687b      	ldr	r3, [r7, #4]
 80118fe:	2220      	movs	r2, #32
 8011900:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8011904:	687b      	ldr	r3, [r7, #4]
 8011906:	2200      	movs	r2, #0
 8011908:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 801190c:	2300      	movs	r3, #0
 801190e:	4618      	mov	r0, r3
 8011910:	3714      	adds	r7, #20
 8011912:	46bd      	mov	sp, r7
 8011914:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011918:	4770      	bx	lr

0801191a <HAL_UARTEx_SetTxFifoThreshold>:
 801191a:	b580      	push	{r7, lr}
 801191c:	b084      	sub	sp, #16
 801191e:	af00      	add	r7, sp, #0
 8011920:	6078      	str	r0, [r7, #4]
 8011922:	6039      	str	r1, [r7, #0]
 8011924:	687b      	ldr	r3, [r7, #4]
 8011926:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 801192a:	2b01      	cmp	r3, #1
 801192c:	d101      	bne.n	8011932 <HAL_UARTEx_SetTxFifoThreshold+0x18>
 801192e:	2302      	movs	r3, #2
 8011930:	e02d      	b.n	801198e <HAL_UARTEx_SetTxFifoThreshold+0x74>
 8011932:	687b      	ldr	r3, [r7, #4]
 8011934:	2201      	movs	r2, #1
 8011936:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 801193a:	687b      	ldr	r3, [r7, #4]
 801193c:	2224      	movs	r2, #36	@ 0x24
 801193e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8011942:	687b      	ldr	r3, [r7, #4]
 8011944:	681b      	ldr	r3, [r3, #0]
 8011946:	681b      	ldr	r3, [r3, #0]
 8011948:	60fb      	str	r3, [r7, #12]
 801194a:	687b      	ldr	r3, [r7, #4]
 801194c:	681b      	ldr	r3, [r3, #0]
 801194e:	681a      	ldr	r2, [r3, #0]
 8011950:	687b      	ldr	r3, [r7, #4]
 8011952:	681b      	ldr	r3, [r3, #0]
 8011954:	f022 0201 	bic.w	r2, r2, #1
 8011958:	601a      	str	r2, [r3, #0]
 801195a:	687b      	ldr	r3, [r7, #4]
 801195c:	681b      	ldr	r3, [r3, #0]
 801195e:	689b      	ldr	r3, [r3, #8]
 8011960:	f023 4160 	bic.w	r1, r3, #3758096384	@ 0xe0000000
 8011964:	687b      	ldr	r3, [r7, #4]
 8011966:	681b      	ldr	r3, [r3, #0]
 8011968:	683a      	ldr	r2, [r7, #0]
 801196a:	430a      	orrs	r2, r1
 801196c:	609a      	str	r2, [r3, #8]
 801196e:	6878      	ldr	r0, [r7, #4]
 8011970:	f000 f850 	bl	8011a14 <UARTEx_SetNbDataToProcess>
 8011974:	687b      	ldr	r3, [r7, #4]
 8011976:	681b      	ldr	r3, [r3, #0]
 8011978:	68fa      	ldr	r2, [r7, #12]
 801197a:	601a      	str	r2, [r3, #0]
 801197c:	687b      	ldr	r3, [r7, #4]
 801197e:	2220      	movs	r2, #32
 8011980:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8011984:	687b      	ldr	r3, [r7, #4]
 8011986:	2200      	movs	r2, #0
 8011988:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 801198c:	2300      	movs	r3, #0
 801198e:	4618      	mov	r0, r3
 8011990:	3710      	adds	r7, #16
 8011992:	46bd      	mov	sp, r7
 8011994:	bd80      	pop	{r7, pc}

08011996 <HAL_UARTEx_SetRxFifoThreshold>:
 8011996:	b580      	push	{r7, lr}
 8011998:	b084      	sub	sp, #16
 801199a:	af00      	add	r7, sp, #0
 801199c:	6078      	str	r0, [r7, #4]
 801199e:	6039      	str	r1, [r7, #0]
 80119a0:	687b      	ldr	r3, [r7, #4]
 80119a2:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 80119a6:	2b01      	cmp	r3, #1
 80119a8:	d101      	bne.n	80119ae <HAL_UARTEx_SetRxFifoThreshold+0x18>
 80119aa:	2302      	movs	r3, #2
 80119ac:	e02d      	b.n	8011a0a <HAL_UARTEx_SetRxFifoThreshold+0x74>
 80119ae:	687b      	ldr	r3, [r7, #4]
 80119b0:	2201      	movs	r2, #1
 80119b2:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 80119b6:	687b      	ldr	r3, [r7, #4]
 80119b8:	2224      	movs	r2, #36	@ 0x24
 80119ba:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80119be:	687b      	ldr	r3, [r7, #4]
 80119c0:	681b      	ldr	r3, [r3, #0]
 80119c2:	681b      	ldr	r3, [r3, #0]
 80119c4:	60fb      	str	r3, [r7, #12]
 80119c6:	687b      	ldr	r3, [r7, #4]
 80119c8:	681b      	ldr	r3, [r3, #0]
 80119ca:	681a      	ldr	r2, [r3, #0]
 80119cc:	687b      	ldr	r3, [r7, #4]
 80119ce:	681b      	ldr	r3, [r3, #0]
 80119d0:	f022 0201 	bic.w	r2, r2, #1
 80119d4:	601a      	str	r2, [r3, #0]
 80119d6:	687b      	ldr	r3, [r7, #4]
 80119d8:	681b      	ldr	r3, [r3, #0]
 80119da:	689b      	ldr	r3, [r3, #8]
 80119dc:	f023 6160 	bic.w	r1, r3, #234881024	@ 0xe000000
 80119e0:	687b      	ldr	r3, [r7, #4]
 80119e2:	681b      	ldr	r3, [r3, #0]
 80119e4:	683a      	ldr	r2, [r7, #0]
 80119e6:	430a      	orrs	r2, r1
 80119e8:	609a      	str	r2, [r3, #8]
 80119ea:	6878      	ldr	r0, [r7, #4]
 80119ec:	f000 f812 	bl	8011a14 <UARTEx_SetNbDataToProcess>
 80119f0:	687b      	ldr	r3, [r7, #4]
 80119f2:	681b      	ldr	r3, [r3, #0]
 80119f4:	68fa      	ldr	r2, [r7, #12]
 80119f6:	601a      	str	r2, [r3, #0]
 80119f8:	687b      	ldr	r3, [r7, #4]
 80119fa:	2220      	movs	r2, #32
 80119fc:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8011a00:	687b      	ldr	r3, [r7, #4]
 8011a02:	2200      	movs	r2, #0
 8011a04:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8011a08:	2300      	movs	r3, #0
 8011a0a:	4618      	mov	r0, r3
 8011a0c:	3710      	adds	r7, #16
 8011a0e:	46bd      	mov	sp, r7
 8011a10:	bd80      	pop	{r7, pc}
	...

08011a14 <UARTEx_SetNbDataToProcess>:
 8011a14:	b480      	push	{r7}
 8011a16:	b085      	sub	sp, #20
 8011a18:	af00      	add	r7, sp, #0
 8011a1a:	6078      	str	r0, [r7, #4]
 8011a1c:	687b      	ldr	r3, [r7, #4]
 8011a1e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8011a20:	2b00      	cmp	r3, #0
 8011a22:	d108      	bne.n	8011a36 <UARTEx_SetNbDataToProcess+0x22>
 8011a24:	687b      	ldr	r3, [r7, #4]
 8011a26:	2201      	movs	r2, #1
 8011a28:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8011a2c:	687b      	ldr	r3, [r7, #4]
 8011a2e:	2201      	movs	r2, #1
 8011a30:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 8011a34:	e031      	b.n	8011a9a <UARTEx_SetNbDataToProcess+0x86>
 8011a36:	2310      	movs	r3, #16
 8011a38:	73fb      	strb	r3, [r7, #15]
 8011a3a:	2310      	movs	r3, #16
 8011a3c:	73bb      	strb	r3, [r7, #14]
 8011a3e:	687b      	ldr	r3, [r7, #4]
 8011a40:	681b      	ldr	r3, [r3, #0]
 8011a42:	689b      	ldr	r3, [r3, #8]
 8011a44:	0e5b      	lsrs	r3, r3, #25
 8011a46:	b2db      	uxtb	r3, r3
 8011a48:	f003 0307 	and.w	r3, r3, #7
 8011a4c:	737b      	strb	r3, [r7, #13]
 8011a4e:	687b      	ldr	r3, [r7, #4]
 8011a50:	681b      	ldr	r3, [r3, #0]
 8011a52:	689b      	ldr	r3, [r3, #8]
 8011a54:	0f5b      	lsrs	r3, r3, #29
 8011a56:	b2db      	uxtb	r3, r3
 8011a58:	f003 0307 	and.w	r3, r3, #7
 8011a5c:	733b      	strb	r3, [r7, #12]
 8011a5e:	7bbb      	ldrb	r3, [r7, #14]
 8011a60:	7b3a      	ldrb	r2, [r7, #12]
 8011a62:	4911      	ldr	r1, [pc, #68]	@ (8011aa8 <UARTEx_SetNbDataToProcess+0x94>)
 8011a64:	5c8a      	ldrb	r2, [r1, r2]
 8011a66:	fb02 f303 	mul.w	r3, r2, r3
 8011a6a:	7b3a      	ldrb	r2, [r7, #12]
 8011a6c:	490f      	ldr	r1, [pc, #60]	@ (8011aac <UARTEx_SetNbDataToProcess+0x98>)
 8011a6e:	5c8a      	ldrb	r2, [r1, r2]
 8011a70:	fb93 f3f2 	sdiv	r3, r3, r2
 8011a74:	b29a      	uxth	r2, r3
 8011a76:	687b      	ldr	r3, [r7, #4]
 8011a78:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8011a7c:	7bfb      	ldrb	r3, [r7, #15]
 8011a7e:	7b7a      	ldrb	r2, [r7, #13]
 8011a80:	4909      	ldr	r1, [pc, #36]	@ (8011aa8 <UARTEx_SetNbDataToProcess+0x94>)
 8011a82:	5c8a      	ldrb	r2, [r1, r2]
 8011a84:	fb02 f303 	mul.w	r3, r2, r3
 8011a88:	7b7a      	ldrb	r2, [r7, #13]
 8011a8a:	4908      	ldr	r1, [pc, #32]	@ (8011aac <UARTEx_SetNbDataToProcess+0x98>)
 8011a8c:	5c8a      	ldrb	r2, [r1, r2]
 8011a8e:	fb93 f3f2 	sdiv	r3, r3, r2
 8011a92:	b29a      	uxth	r2, r3
 8011a94:	687b      	ldr	r3, [r7, #4]
 8011a96:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 8011a9a:	bf00      	nop
 8011a9c:	3714      	adds	r7, #20
 8011a9e:	46bd      	mov	sp, r7
 8011aa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011aa4:	4770      	bx	lr
 8011aa6:	bf00      	nop
 8011aa8:	0801b074 	.word	0x0801b074
 8011aac:	0801b07c 	.word	0x0801b07c

08011ab0 <USB_CoreInit>:
 8011ab0:	b084      	sub	sp, #16
 8011ab2:	b580      	push	{r7, lr}
 8011ab4:	b084      	sub	sp, #16
 8011ab6:	af00      	add	r7, sp, #0
 8011ab8:	6078      	str	r0, [r7, #4]
 8011aba:	f107 001c 	add.w	r0, r7, #28
 8011abe:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8011ac2:	f897 3021 	ldrb.w	r3, [r7, #33]	@ 0x21
 8011ac6:	2b01      	cmp	r3, #1
 8011ac8:	d121      	bne.n	8011b0e <USB_CoreInit+0x5e>
 8011aca:	687b      	ldr	r3, [r7, #4]
 8011acc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011ace:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8011ad2:	687b      	ldr	r3, [r7, #4]
 8011ad4:	639a      	str	r2, [r3, #56]	@ 0x38
 8011ad6:	687b      	ldr	r3, [r7, #4]
 8011ad8:	68da      	ldr	r2, [r3, #12]
 8011ada:	4b2c      	ldr	r3, [pc, #176]	@ (8011b8c <USB_CoreInit+0xdc>)
 8011adc:	4013      	ands	r3, r2
 8011ade:	687a      	ldr	r2, [r7, #4]
 8011ae0:	60d3      	str	r3, [r2, #12]
 8011ae2:	687b      	ldr	r3, [r7, #4]
 8011ae4:	68db      	ldr	r3, [r3, #12]
 8011ae6:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8011aea:	687b      	ldr	r3, [r7, #4]
 8011aec:	60da      	str	r2, [r3, #12]
 8011aee:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8011af2:	2b01      	cmp	r3, #1
 8011af4:	d105      	bne.n	8011b02 <USB_CoreInit+0x52>
 8011af6:	687b      	ldr	r3, [r7, #4]
 8011af8:	68db      	ldr	r3, [r3, #12]
 8011afa:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8011afe:	687b      	ldr	r3, [r7, #4]
 8011b00:	60da      	str	r2, [r3, #12]
 8011b02:	6878      	ldr	r0, [r7, #4]
 8011b04:	f001 faf6 	bl	80130f4 <USB_CoreReset>
 8011b08:	4603      	mov	r3, r0
 8011b0a:	73fb      	strb	r3, [r7, #15]
 8011b0c:	e01b      	b.n	8011b46 <USB_CoreInit+0x96>
 8011b0e:	687b      	ldr	r3, [r7, #4]
 8011b10:	68db      	ldr	r3, [r3, #12]
 8011b12:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8011b16:	687b      	ldr	r3, [r7, #4]
 8011b18:	60da      	str	r2, [r3, #12]
 8011b1a:	6878      	ldr	r0, [r7, #4]
 8011b1c:	f001 faea 	bl	80130f4 <USB_CoreReset>
 8011b20:	4603      	mov	r3, r0
 8011b22:	73fb      	strb	r3, [r7, #15]
 8011b24:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 8011b28:	2b00      	cmp	r3, #0
 8011b2a:	d106      	bne.n	8011b3a <USB_CoreInit+0x8a>
 8011b2c:	687b      	ldr	r3, [r7, #4]
 8011b2e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011b30:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 8011b34:	687b      	ldr	r3, [r7, #4]
 8011b36:	639a      	str	r2, [r3, #56]	@ 0x38
 8011b38:	e005      	b.n	8011b46 <USB_CoreInit+0x96>
 8011b3a:	687b      	ldr	r3, [r7, #4]
 8011b3c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011b3e:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8011b42:	687b      	ldr	r3, [r7, #4]
 8011b44:	639a      	str	r2, [r3, #56]	@ 0x38
 8011b46:	7fbb      	ldrb	r3, [r7, #30]
 8011b48:	2b01      	cmp	r3, #1
 8011b4a:	d116      	bne.n	8011b7a <USB_CoreInit+0xca>
 8011b4c:	687b      	ldr	r3, [r7, #4]
 8011b4e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8011b50:	b29a      	uxth	r2, r3
 8011b52:	687b      	ldr	r3, [r7, #4]
 8011b54:	65da      	str	r2, [r3, #92]	@ 0x5c
 8011b56:	687b      	ldr	r3, [r7, #4]
 8011b58:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8011b5a:	4b0d      	ldr	r3, [pc, #52]	@ (8011b90 <USB_CoreInit+0xe0>)
 8011b5c:	4313      	orrs	r3, r2
 8011b5e:	687a      	ldr	r2, [r7, #4]
 8011b60:	65d3      	str	r3, [r2, #92]	@ 0x5c
 8011b62:	687b      	ldr	r3, [r7, #4]
 8011b64:	689b      	ldr	r3, [r3, #8]
 8011b66:	f043 0206 	orr.w	r2, r3, #6
 8011b6a:	687b      	ldr	r3, [r7, #4]
 8011b6c:	609a      	str	r2, [r3, #8]
 8011b6e:	687b      	ldr	r3, [r7, #4]
 8011b70:	689b      	ldr	r3, [r3, #8]
 8011b72:	f043 0220 	orr.w	r2, r3, #32
 8011b76:	687b      	ldr	r3, [r7, #4]
 8011b78:	609a      	str	r2, [r3, #8]
 8011b7a:	7bfb      	ldrb	r3, [r7, #15]
 8011b7c:	4618      	mov	r0, r3
 8011b7e:	3710      	adds	r7, #16
 8011b80:	46bd      	mov	sp, r7
 8011b82:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8011b86:	b004      	add	sp, #16
 8011b88:	4770      	bx	lr
 8011b8a:	bf00      	nop
 8011b8c:	ffbdffbf 	.word	0xffbdffbf
 8011b90:	03ee0000 	.word	0x03ee0000

08011b94 <USB_SetTurnaroundTime>:
 8011b94:	b480      	push	{r7}
 8011b96:	b087      	sub	sp, #28
 8011b98:	af00      	add	r7, sp, #0
 8011b9a:	60f8      	str	r0, [r7, #12]
 8011b9c:	60b9      	str	r1, [r7, #8]
 8011b9e:	4613      	mov	r3, r2
 8011ba0:	71fb      	strb	r3, [r7, #7]
 8011ba2:	79fb      	ldrb	r3, [r7, #7]
 8011ba4:	2b02      	cmp	r3, #2
 8011ba6:	d165      	bne.n	8011c74 <USB_SetTurnaroundTime+0xe0>
 8011ba8:	68bb      	ldr	r3, [r7, #8]
 8011baa:	4a41      	ldr	r2, [pc, #260]	@ (8011cb0 <USB_SetTurnaroundTime+0x11c>)
 8011bac:	4293      	cmp	r3, r2
 8011bae:	d906      	bls.n	8011bbe <USB_SetTurnaroundTime+0x2a>
 8011bb0:	68bb      	ldr	r3, [r7, #8]
 8011bb2:	4a40      	ldr	r2, [pc, #256]	@ (8011cb4 <USB_SetTurnaroundTime+0x120>)
 8011bb4:	4293      	cmp	r3, r2
 8011bb6:	d202      	bcs.n	8011bbe <USB_SetTurnaroundTime+0x2a>
 8011bb8:	230f      	movs	r3, #15
 8011bba:	617b      	str	r3, [r7, #20]
 8011bbc:	e062      	b.n	8011c84 <USB_SetTurnaroundTime+0xf0>
 8011bbe:	68bb      	ldr	r3, [r7, #8]
 8011bc0:	4a3c      	ldr	r2, [pc, #240]	@ (8011cb4 <USB_SetTurnaroundTime+0x120>)
 8011bc2:	4293      	cmp	r3, r2
 8011bc4:	d306      	bcc.n	8011bd4 <USB_SetTurnaroundTime+0x40>
 8011bc6:	68bb      	ldr	r3, [r7, #8]
 8011bc8:	4a3b      	ldr	r2, [pc, #236]	@ (8011cb8 <USB_SetTurnaroundTime+0x124>)
 8011bca:	4293      	cmp	r3, r2
 8011bcc:	d202      	bcs.n	8011bd4 <USB_SetTurnaroundTime+0x40>
 8011bce:	230e      	movs	r3, #14
 8011bd0:	617b      	str	r3, [r7, #20]
 8011bd2:	e057      	b.n	8011c84 <USB_SetTurnaroundTime+0xf0>
 8011bd4:	68bb      	ldr	r3, [r7, #8]
 8011bd6:	4a38      	ldr	r2, [pc, #224]	@ (8011cb8 <USB_SetTurnaroundTime+0x124>)
 8011bd8:	4293      	cmp	r3, r2
 8011bda:	d306      	bcc.n	8011bea <USB_SetTurnaroundTime+0x56>
 8011bdc:	68bb      	ldr	r3, [r7, #8]
 8011bde:	4a37      	ldr	r2, [pc, #220]	@ (8011cbc <USB_SetTurnaroundTime+0x128>)
 8011be0:	4293      	cmp	r3, r2
 8011be2:	d202      	bcs.n	8011bea <USB_SetTurnaroundTime+0x56>
 8011be4:	230d      	movs	r3, #13
 8011be6:	617b      	str	r3, [r7, #20]
 8011be8:	e04c      	b.n	8011c84 <USB_SetTurnaroundTime+0xf0>
 8011bea:	68bb      	ldr	r3, [r7, #8]
 8011bec:	4a33      	ldr	r2, [pc, #204]	@ (8011cbc <USB_SetTurnaroundTime+0x128>)
 8011bee:	4293      	cmp	r3, r2
 8011bf0:	d306      	bcc.n	8011c00 <USB_SetTurnaroundTime+0x6c>
 8011bf2:	68bb      	ldr	r3, [r7, #8]
 8011bf4:	4a32      	ldr	r2, [pc, #200]	@ (8011cc0 <USB_SetTurnaroundTime+0x12c>)
 8011bf6:	4293      	cmp	r3, r2
 8011bf8:	d802      	bhi.n	8011c00 <USB_SetTurnaroundTime+0x6c>
 8011bfa:	230c      	movs	r3, #12
 8011bfc:	617b      	str	r3, [r7, #20]
 8011bfe:	e041      	b.n	8011c84 <USB_SetTurnaroundTime+0xf0>
 8011c00:	68bb      	ldr	r3, [r7, #8]
 8011c02:	4a2f      	ldr	r2, [pc, #188]	@ (8011cc0 <USB_SetTurnaroundTime+0x12c>)
 8011c04:	4293      	cmp	r3, r2
 8011c06:	d906      	bls.n	8011c16 <USB_SetTurnaroundTime+0x82>
 8011c08:	68bb      	ldr	r3, [r7, #8]
 8011c0a:	4a2e      	ldr	r2, [pc, #184]	@ (8011cc4 <USB_SetTurnaroundTime+0x130>)
 8011c0c:	4293      	cmp	r3, r2
 8011c0e:	d802      	bhi.n	8011c16 <USB_SetTurnaroundTime+0x82>
 8011c10:	230b      	movs	r3, #11
 8011c12:	617b      	str	r3, [r7, #20]
 8011c14:	e036      	b.n	8011c84 <USB_SetTurnaroundTime+0xf0>
 8011c16:	68bb      	ldr	r3, [r7, #8]
 8011c18:	4a2a      	ldr	r2, [pc, #168]	@ (8011cc4 <USB_SetTurnaroundTime+0x130>)
 8011c1a:	4293      	cmp	r3, r2
 8011c1c:	d906      	bls.n	8011c2c <USB_SetTurnaroundTime+0x98>
 8011c1e:	68bb      	ldr	r3, [r7, #8]
 8011c20:	4a29      	ldr	r2, [pc, #164]	@ (8011cc8 <USB_SetTurnaroundTime+0x134>)
 8011c22:	4293      	cmp	r3, r2
 8011c24:	d802      	bhi.n	8011c2c <USB_SetTurnaroundTime+0x98>
 8011c26:	230a      	movs	r3, #10
 8011c28:	617b      	str	r3, [r7, #20]
 8011c2a:	e02b      	b.n	8011c84 <USB_SetTurnaroundTime+0xf0>
 8011c2c:	68bb      	ldr	r3, [r7, #8]
 8011c2e:	4a26      	ldr	r2, [pc, #152]	@ (8011cc8 <USB_SetTurnaroundTime+0x134>)
 8011c30:	4293      	cmp	r3, r2
 8011c32:	d906      	bls.n	8011c42 <USB_SetTurnaroundTime+0xae>
 8011c34:	68bb      	ldr	r3, [r7, #8]
 8011c36:	4a25      	ldr	r2, [pc, #148]	@ (8011ccc <USB_SetTurnaroundTime+0x138>)
 8011c38:	4293      	cmp	r3, r2
 8011c3a:	d202      	bcs.n	8011c42 <USB_SetTurnaroundTime+0xae>
 8011c3c:	2309      	movs	r3, #9
 8011c3e:	617b      	str	r3, [r7, #20]
 8011c40:	e020      	b.n	8011c84 <USB_SetTurnaroundTime+0xf0>
 8011c42:	68bb      	ldr	r3, [r7, #8]
 8011c44:	4a21      	ldr	r2, [pc, #132]	@ (8011ccc <USB_SetTurnaroundTime+0x138>)
 8011c46:	4293      	cmp	r3, r2
 8011c48:	d306      	bcc.n	8011c58 <USB_SetTurnaroundTime+0xc4>
 8011c4a:	68bb      	ldr	r3, [r7, #8]
 8011c4c:	4a20      	ldr	r2, [pc, #128]	@ (8011cd0 <USB_SetTurnaroundTime+0x13c>)
 8011c4e:	4293      	cmp	r3, r2
 8011c50:	d802      	bhi.n	8011c58 <USB_SetTurnaroundTime+0xc4>
 8011c52:	2308      	movs	r3, #8
 8011c54:	617b      	str	r3, [r7, #20]
 8011c56:	e015      	b.n	8011c84 <USB_SetTurnaroundTime+0xf0>
 8011c58:	68bb      	ldr	r3, [r7, #8]
 8011c5a:	4a1d      	ldr	r2, [pc, #116]	@ (8011cd0 <USB_SetTurnaroundTime+0x13c>)
 8011c5c:	4293      	cmp	r3, r2
 8011c5e:	d906      	bls.n	8011c6e <USB_SetTurnaroundTime+0xda>
 8011c60:	68bb      	ldr	r3, [r7, #8]
 8011c62:	4a1c      	ldr	r2, [pc, #112]	@ (8011cd4 <USB_SetTurnaroundTime+0x140>)
 8011c64:	4293      	cmp	r3, r2
 8011c66:	d202      	bcs.n	8011c6e <USB_SetTurnaroundTime+0xda>
 8011c68:	2307      	movs	r3, #7
 8011c6a:	617b      	str	r3, [r7, #20]
 8011c6c:	e00a      	b.n	8011c84 <USB_SetTurnaroundTime+0xf0>
 8011c6e:	2306      	movs	r3, #6
 8011c70:	617b      	str	r3, [r7, #20]
 8011c72:	e007      	b.n	8011c84 <USB_SetTurnaroundTime+0xf0>
 8011c74:	79fb      	ldrb	r3, [r7, #7]
 8011c76:	2b00      	cmp	r3, #0
 8011c78:	d102      	bne.n	8011c80 <USB_SetTurnaroundTime+0xec>
 8011c7a:	2309      	movs	r3, #9
 8011c7c:	617b      	str	r3, [r7, #20]
 8011c7e:	e001      	b.n	8011c84 <USB_SetTurnaroundTime+0xf0>
 8011c80:	2309      	movs	r3, #9
 8011c82:	617b      	str	r3, [r7, #20]
 8011c84:	68fb      	ldr	r3, [r7, #12]
 8011c86:	68db      	ldr	r3, [r3, #12]
 8011c88:	f423 5270 	bic.w	r2, r3, #15360	@ 0x3c00
 8011c8c:	68fb      	ldr	r3, [r7, #12]
 8011c8e:	60da      	str	r2, [r3, #12]
 8011c90:	68fb      	ldr	r3, [r7, #12]
 8011c92:	68da      	ldr	r2, [r3, #12]
 8011c94:	697b      	ldr	r3, [r7, #20]
 8011c96:	029b      	lsls	r3, r3, #10
 8011c98:	f403 5370 	and.w	r3, r3, #15360	@ 0x3c00
 8011c9c:	431a      	orrs	r2, r3
 8011c9e:	68fb      	ldr	r3, [r7, #12]
 8011ca0:	60da      	str	r2, [r3, #12]
 8011ca2:	2300      	movs	r3, #0
 8011ca4:	4618      	mov	r0, r3
 8011ca6:	371c      	adds	r7, #28
 8011ca8:	46bd      	mov	sp, r7
 8011caa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011cae:	4770      	bx	lr
 8011cb0:	00d8acbf 	.word	0x00d8acbf
 8011cb4:	00e4e1c0 	.word	0x00e4e1c0
 8011cb8:	00f42400 	.word	0x00f42400
 8011cbc:	01067380 	.word	0x01067380
 8011cc0:	011a499f 	.word	0x011a499f
 8011cc4:	01312cff 	.word	0x01312cff
 8011cc8:	014ca43f 	.word	0x014ca43f
 8011ccc:	016e3600 	.word	0x016e3600
 8011cd0:	01a6ab1f 	.word	0x01a6ab1f
 8011cd4:	01e84800 	.word	0x01e84800

08011cd8 <USB_EnableGlobalInt>:
 8011cd8:	b480      	push	{r7}
 8011cda:	b083      	sub	sp, #12
 8011cdc:	af00      	add	r7, sp, #0
 8011cde:	6078      	str	r0, [r7, #4]
 8011ce0:	687b      	ldr	r3, [r7, #4]
 8011ce2:	689b      	ldr	r3, [r3, #8]
 8011ce4:	f043 0201 	orr.w	r2, r3, #1
 8011ce8:	687b      	ldr	r3, [r7, #4]
 8011cea:	609a      	str	r2, [r3, #8]
 8011cec:	2300      	movs	r3, #0
 8011cee:	4618      	mov	r0, r3
 8011cf0:	370c      	adds	r7, #12
 8011cf2:	46bd      	mov	sp, r7
 8011cf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011cf8:	4770      	bx	lr

08011cfa <USB_DisableGlobalInt>:
 8011cfa:	b480      	push	{r7}
 8011cfc:	b083      	sub	sp, #12
 8011cfe:	af00      	add	r7, sp, #0
 8011d00:	6078      	str	r0, [r7, #4]
 8011d02:	687b      	ldr	r3, [r7, #4]
 8011d04:	689b      	ldr	r3, [r3, #8]
 8011d06:	f023 0201 	bic.w	r2, r3, #1
 8011d0a:	687b      	ldr	r3, [r7, #4]
 8011d0c:	609a      	str	r2, [r3, #8]
 8011d0e:	2300      	movs	r3, #0
 8011d10:	4618      	mov	r0, r3
 8011d12:	370c      	adds	r7, #12
 8011d14:	46bd      	mov	sp, r7
 8011d16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011d1a:	4770      	bx	lr

08011d1c <USB_SetCurrentMode>:
 8011d1c:	b580      	push	{r7, lr}
 8011d1e:	b084      	sub	sp, #16
 8011d20:	af00      	add	r7, sp, #0
 8011d22:	6078      	str	r0, [r7, #4]
 8011d24:	460b      	mov	r3, r1
 8011d26:	70fb      	strb	r3, [r7, #3]
 8011d28:	2300      	movs	r3, #0
 8011d2a:	60fb      	str	r3, [r7, #12]
 8011d2c:	687b      	ldr	r3, [r7, #4]
 8011d2e:	68db      	ldr	r3, [r3, #12]
 8011d30:	f023 42c0 	bic.w	r2, r3, #1610612736	@ 0x60000000
 8011d34:	687b      	ldr	r3, [r7, #4]
 8011d36:	60da      	str	r2, [r3, #12]
 8011d38:	78fb      	ldrb	r3, [r7, #3]
 8011d3a:	2b01      	cmp	r3, #1
 8011d3c:	d115      	bne.n	8011d6a <USB_SetCurrentMode+0x4e>
 8011d3e:	687b      	ldr	r3, [r7, #4]
 8011d40:	68db      	ldr	r3, [r3, #12]
 8011d42:	f043 5200 	orr.w	r2, r3, #536870912	@ 0x20000000
 8011d46:	687b      	ldr	r3, [r7, #4]
 8011d48:	60da      	str	r2, [r3, #12]
 8011d4a:	200a      	movs	r0, #10
 8011d4c:	f7f3 fad8 	bl	8005300 <HAL_Delay>
 8011d50:	68fb      	ldr	r3, [r7, #12]
 8011d52:	330a      	adds	r3, #10
 8011d54:	60fb      	str	r3, [r7, #12]
 8011d56:	6878      	ldr	r0, [r7, #4]
 8011d58:	f001 f93b 	bl	8012fd2 <USB_GetMode>
 8011d5c:	4603      	mov	r3, r0
 8011d5e:	2b01      	cmp	r3, #1
 8011d60:	d01e      	beq.n	8011da0 <USB_SetCurrentMode+0x84>
 8011d62:	68fb      	ldr	r3, [r7, #12]
 8011d64:	2bc7      	cmp	r3, #199	@ 0xc7
 8011d66:	d9f0      	bls.n	8011d4a <USB_SetCurrentMode+0x2e>
 8011d68:	e01a      	b.n	8011da0 <USB_SetCurrentMode+0x84>
 8011d6a:	78fb      	ldrb	r3, [r7, #3]
 8011d6c:	2b00      	cmp	r3, #0
 8011d6e:	d115      	bne.n	8011d9c <USB_SetCurrentMode+0x80>
 8011d70:	687b      	ldr	r3, [r7, #4]
 8011d72:	68db      	ldr	r3, [r3, #12]
 8011d74:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 8011d78:	687b      	ldr	r3, [r7, #4]
 8011d7a:	60da      	str	r2, [r3, #12]
 8011d7c:	200a      	movs	r0, #10
 8011d7e:	f7f3 fabf 	bl	8005300 <HAL_Delay>
 8011d82:	68fb      	ldr	r3, [r7, #12]
 8011d84:	330a      	adds	r3, #10
 8011d86:	60fb      	str	r3, [r7, #12]
 8011d88:	6878      	ldr	r0, [r7, #4]
 8011d8a:	f001 f922 	bl	8012fd2 <USB_GetMode>
 8011d8e:	4603      	mov	r3, r0
 8011d90:	2b00      	cmp	r3, #0
 8011d92:	d005      	beq.n	8011da0 <USB_SetCurrentMode+0x84>
 8011d94:	68fb      	ldr	r3, [r7, #12]
 8011d96:	2bc7      	cmp	r3, #199	@ 0xc7
 8011d98:	d9f0      	bls.n	8011d7c <USB_SetCurrentMode+0x60>
 8011d9a:	e001      	b.n	8011da0 <USB_SetCurrentMode+0x84>
 8011d9c:	2301      	movs	r3, #1
 8011d9e:	e005      	b.n	8011dac <USB_SetCurrentMode+0x90>
 8011da0:	68fb      	ldr	r3, [r7, #12]
 8011da2:	2bc8      	cmp	r3, #200	@ 0xc8
 8011da4:	d101      	bne.n	8011daa <USB_SetCurrentMode+0x8e>
 8011da6:	2301      	movs	r3, #1
 8011da8:	e000      	b.n	8011dac <USB_SetCurrentMode+0x90>
 8011daa:	2300      	movs	r3, #0
 8011dac:	4618      	mov	r0, r3
 8011dae:	3710      	adds	r7, #16
 8011db0:	46bd      	mov	sp, r7
 8011db2:	bd80      	pop	{r7, pc}

08011db4 <USB_DevInit>:
 8011db4:	b084      	sub	sp, #16
 8011db6:	b580      	push	{r7, lr}
 8011db8:	b086      	sub	sp, #24
 8011dba:	af00      	add	r7, sp, #0
 8011dbc:	6078      	str	r0, [r7, #4]
 8011dbe:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 8011dc2:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8011dc6:	2300      	movs	r3, #0
 8011dc8:	75fb      	strb	r3, [r7, #23]
 8011dca:	687b      	ldr	r3, [r7, #4]
 8011dcc:	60fb      	str	r3, [r7, #12]
 8011dce:	2300      	movs	r3, #0
 8011dd0:	613b      	str	r3, [r7, #16]
 8011dd2:	e009      	b.n	8011de8 <USB_DevInit+0x34>
 8011dd4:	687a      	ldr	r2, [r7, #4]
 8011dd6:	693b      	ldr	r3, [r7, #16]
 8011dd8:	3340      	adds	r3, #64	@ 0x40
 8011dda:	009b      	lsls	r3, r3, #2
 8011ddc:	4413      	add	r3, r2
 8011dde:	2200      	movs	r2, #0
 8011de0:	605a      	str	r2, [r3, #4]
 8011de2:	693b      	ldr	r3, [r7, #16]
 8011de4:	3301      	adds	r3, #1
 8011de6:	613b      	str	r3, [r7, #16]
 8011de8:	693b      	ldr	r3, [r7, #16]
 8011dea:	2b0e      	cmp	r3, #14
 8011dec:	d9f2      	bls.n	8011dd4 <USB_DevInit+0x20>
 8011dee:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 8011df2:	2b00      	cmp	r3, #0
 8011df4:	d11c      	bne.n	8011e30 <USB_DevInit+0x7c>
 8011df6:	68fb      	ldr	r3, [r7, #12]
 8011df8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011dfc:	685b      	ldr	r3, [r3, #4]
 8011dfe:	68fa      	ldr	r2, [r7, #12]
 8011e00:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8011e04:	f043 0302 	orr.w	r3, r3, #2
 8011e08:	6053      	str	r3, [r2, #4]
 8011e0a:	687b      	ldr	r3, [r7, #4]
 8011e0c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011e0e:	f423 1200 	bic.w	r2, r3, #2097152	@ 0x200000
 8011e12:	687b      	ldr	r3, [r7, #4]
 8011e14:	639a      	str	r2, [r3, #56]	@ 0x38
 8011e16:	687b      	ldr	r3, [r7, #4]
 8011e18:	681b      	ldr	r3, [r3, #0]
 8011e1a:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8011e1e:	687b      	ldr	r3, [r7, #4]
 8011e20:	601a      	str	r2, [r3, #0]
 8011e22:	687b      	ldr	r3, [r7, #4]
 8011e24:	681b      	ldr	r3, [r3, #0]
 8011e26:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 8011e2a:	687b      	ldr	r3, [r7, #4]
 8011e2c:	601a      	str	r2, [r3, #0]
 8011e2e:	e005      	b.n	8011e3c <USB_DevInit+0x88>
 8011e30:	687b      	ldr	r3, [r7, #4]
 8011e32:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011e34:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8011e38:	687b      	ldr	r3, [r7, #4]
 8011e3a:	639a      	str	r2, [r3, #56]	@ 0x38
 8011e3c:	68fb      	ldr	r3, [r7, #12]
 8011e3e:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8011e42:	461a      	mov	r2, r3
 8011e44:	2300      	movs	r3, #0
 8011e46:	6013      	str	r3, [r2, #0]
 8011e48:	f897 3029 	ldrb.w	r3, [r7, #41]	@ 0x29
 8011e4c:	2b01      	cmp	r3, #1
 8011e4e:	d10d      	bne.n	8011e6c <USB_DevInit+0xb8>
 8011e50:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8011e54:	2b00      	cmp	r3, #0
 8011e56:	d104      	bne.n	8011e62 <USB_DevInit+0xae>
 8011e58:	2100      	movs	r1, #0
 8011e5a:	6878      	ldr	r0, [r7, #4]
 8011e5c:	f000 f968 	bl	8012130 <USB_SetDevSpeed>
 8011e60:	e008      	b.n	8011e74 <USB_DevInit+0xc0>
 8011e62:	2101      	movs	r1, #1
 8011e64:	6878      	ldr	r0, [r7, #4]
 8011e66:	f000 f963 	bl	8012130 <USB_SetDevSpeed>
 8011e6a:	e003      	b.n	8011e74 <USB_DevInit+0xc0>
 8011e6c:	2103      	movs	r1, #3
 8011e6e:	6878      	ldr	r0, [r7, #4]
 8011e70:	f000 f95e 	bl	8012130 <USB_SetDevSpeed>
 8011e74:	2110      	movs	r1, #16
 8011e76:	6878      	ldr	r0, [r7, #4]
 8011e78:	f000 f8fa 	bl	8012070 <USB_FlushTxFifo>
 8011e7c:	4603      	mov	r3, r0
 8011e7e:	2b00      	cmp	r3, #0
 8011e80:	d001      	beq.n	8011e86 <USB_DevInit+0xd2>
 8011e82:	2301      	movs	r3, #1
 8011e84:	75fb      	strb	r3, [r7, #23]
 8011e86:	6878      	ldr	r0, [r7, #4]
 8011e88:	f000 f924 	bl	80120d4 <USB_FlushRxFifo>
 8011e8c:	4603      	mov	r3, r0
 8011e8e:	2b00      	cmp	r3, #0
 8011e90:	d001      	beq.n	8011e96 <USB_DevInit+0xe2>
 8011e92:	2301      	movs	r3, #1
 8011e94:	75fb      	strb	r3, [r7, #23]
 8011e96:	68fb      	ldr	r3, [r7, #12]
 8011e98:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011e9c:	461a      	mov	r2, r3
 8011e9e:	2300      	movs	r3, #0
 8011ea0:	6113      	str	r3, [r2, #16]
 8011ea2:	68fb      	ldr	r3, [r7, #12]
 8011ea4:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011ea8:	461a      	mov	r2, r3
 8011eaa:	2300      	movs	r3, #0
 8011eac:	6153      	str	r3, [r2, #20]
 8011eae:	68fb      	ldr	r3, [r7, #12]
 8011eb0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011eb4:	461a      	mov	r2, r3
 8011eb6:	2300      	movs	r3, #0
 8011eb8:	61d3      	str	r3, [r2, #28]
 8011eba:	2300      	movs	r3, #0
 8011ebc:	613b      	str	r3, [r7, #16]
 8011ebe:	e043      	b.n	8011f48 <USB_DevInit+0x194>
 8011ec0:	693b      	ldr	r3, [r7, #16]
 8011ec2:	015a      	lsls	r2, r3, #5
 8011ec4:	68fb      	ldr	r3, [r7, #12]
 8011ec6:	4413      	add	r3, r2
 8011ec8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011ecc:	681b      	ldr	r3, [r3, #0]
 8011ece:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8011ed2:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8011ed6:	d118      	bne.n	8011f0a <USB_DevInit+0x156>
 8011ed8:	693b      	ldr	r3, [r7, #16]
 8011eda:	2b00      	cmp	r3, #0
 8011edc:	d10a      	bne.n	8011ef4 <USB_DevInit+0x140>
 8011ede:	693b      	ldr	r3, [r7, #16]
 8011ee0:	015a      	lsls	r2, r3, #5
 8011ee2:	68fb      	ldr	r3, [r7, #12]
 8011ee4:	4413      	add	r3, r2
 8011ee6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011eea:	461a      	mov	r2, r3
 8011eec:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8011ef0:	6013      	str	r3, [r2, #0]
 8011ef2:	e013      	b.n	8011f1c <USB_DevInit+0x168>
 8011ef4:	693b      	ldr	r3, [r7, #16]
 8011ef6:	015a      	lsls	r2, r3, #5
 8011ef8:	68fb      	ldr	r3, [r7, #12]
 8011efa:	4413      	add	r3, r2
 8011efc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011f00:	461a      	mov	r2, r3
 8011f02:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8011f06:	6013      	str	r3, [r2, #0]
 8011f08:	e008      	b.n	8011f1c <USB_DevInit+0x168>
 8011f0a:	693b      	ldr	r3, [r7, #16]
 8011f0c:	015a      	lsls	r2, r3, #5
 8011f0e:	68fb      	ldr	r3, [r7, #12]
 8011f10:	4413      	add	r3, r2
 8011f12:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011f16:	461a      	mov	r2, r3
 8011f18:	2300      	movs	r3, #0
 8011f1a:	6013      	str	r3, [r2, #0]
 8011f1c:	693b      	ldr	r3, [r7, #16]
 8011f1e:	015a      	lsls	r2, r3, #5
 8011f20:	68fb      	ldr	r3, [r7, #12]
 8011f22:	4413      	add	r3, r2
 8011f24:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011f28:	461a      	mov	r2, r3
 8011f2a:	2300      	movs	r3, #0
 8011f2c:	6113      	str	r3, [r2, #16]
 8011f2e:	693b      	ldr	r3, [r7, #16]
 8011f30:	015a      	lsls	r2, r3, #5
 8011f32:	68fb      	ldr	r3, [r7, #12]
 8011f34:	4413      	add	r3, r2
 8011f36:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011f3a:	461a      	mov	r2, r3
 8011f3c:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8011f40:	6093      	str	r3, [r2, #8]
 8011f42:	693b      	ldr	r3, [r7, #16]
 8011f44:	3301      	adds	r3, #1
 8011f46:	613b      	str	r3, [r7, #16]
 8011f48:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8011f4c:	461a      	mov	r2, r3
 8011f4e:	693b      	ldr	r3, [r7, #16]
 8011f50:	4293      	cmp	r3, r2
 8011f52:	d3b5      	bcc.n	8011ec0 <USB_DevInit+0x10c>
 8011f54:	2300      	movs	r3, #0
 8011f56:	613b      	str	r3, [r7, #16]
 8011f58:	e043      	b.n	8011fe2 <USB_DevInit+0x22e>
 8011f5a:	693b      	ldr	r3, [r7, #16]
 8011f5c:	015a      	lsls	r2, r3, #5
 8011f5e:	68fb      	ldr	r3, [r7, #12]
 8011f60:	4413      	add	r3, r2
 8011f62:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011f66:	681b      	ldr	r3, [r3, #0]
 8011f68:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8011f6c:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8011f70:	d118      	bne.n	8011fa4 <USB_DevInit+0x1f0>
 8011f72:	693b      	ldr	r3, [r7, #16]
 8011f74:	2b00      	cmp	r3, #0
 8011f76:	d10a      	bne.n	8011f8e <USB_DevInit+0x1da>
 8011f78:	693b      	ldr	r3, [r7, #16]
 8011f7a:	015a      	lsls	r2, r3, #5
 8011f7c:	68fb      	ldr	r3, [r7, #12]
 8011f7e:	4413      	add	r3, r2
 8011f80:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011f84:	461a      	mov	r2, r3
 8011f86:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8011f8a:	6013      	str	r3, [r2, #0]
 8011f8c:	e013      	b.n	8011fb6 <USB_DevInit+0x202>
 8011f8e:	693b      	ldr	r3, [r7, #16]
 8011f90:	015a      	lsls	r2, r3, #5
 8011f92:	68fb      	ldr	r3, [r7, #12]
 8011f94:	4413      	add	r3, r2
 8011f96:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011f9a:	461a      	mov	r2, r3
 8011f9c:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8011fa0:	6013      	str	r3, [r2, #0]
 8011fa2:	e008      	b.n	8011fb6 <USB_DevInit+0x202>
 8011fa4:	693b      	ldr	r3, [r7, #16]
 8011fa6:	015a      	lsls	r2, r3, #5
 8011fa8:	68fb      	ldr	r3, [r7, #12]
 8011faa:	4413      	add	r3, r2
 8011fac:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011fb0:	461a      	mov	r2, r3
 8011fb2:	2300      	movs	r3, #0
 8011fb4:	6013      	str	r3, [r2, #0]
 8011fb6:	693b      	ldr	r3, [r7, #16]
 8011fb8:	015a      	lsls	r2, r3, #5
 8011fba:	68fb      	ldr	r3, [r7, #12]
 8011fbc:	4413      	add	r3, r2
 8011fbe:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011fc2:	461a      	mov	r2, r3
 8011fc4:	2300      	movs	r3, #0
 8011fc6:	6113      	str	r3, [r2, #16]
 8011fc8:	693b      	ldr	r3, [r7, #16]
 8011fca:	015a      	lsls	r2, r3, #5
 8011fcc:	68fb      	ldr	r3, [r7, #12]
 8011fce:	4413      	add	r3, r2
 8011fd0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011fd4:	461a      	mov	r2, r3
 8011fd6:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8011fda:	6093      	str	r3, [r2, #8]
 8011fdc:	693b      	ldr	r3, [r7, #16]
 8011fde:	3301      	adds	r3, #1
 8011fe0:	613b      	str	r3, [r7, #16]
 8011fe2:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8011fe6:	461a      	mov	r2, r3
 8011fe8:	693b      	ldr	r3, [r7, #16]
 8011fea:	4293      	cmp	r3, r2
 8011fec:	d3b5      	bcc.n	8011f5a <USB_DevInit+0x1a6>
 8011fee:	68fb      	ldr	r3, [r7, #12]
 8011ff0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011ff4:	691b      	ldr	r3, [r3, #16]
 8011ff6:	68fa      	ldr	r2, [r7, #12]
 8011ff8:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8011ffc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8012000:	6113      	str	r3, [r2, #16]
 8012002:	687b      	ldr	r3, [r7, #4]
 8012004:	2200      	movs	r2, #0
 8012006:	619a      	str	r2, [r3, #24]
 8012008:	687b      	ldr	r3, [r7, #4]
 801200a:	f06f 4280 	mvn.w	r2, #1073741824	@ 0x40000000
 801200e:	615a      	str	r2, [r3, #20]
 8012010:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 8012014:	2b00      	cmp	r3, #0
 8012016:	d105      	bne.n	8012024 <USB_DevInit+0x270>
 8012018:	687b      	ldr	r3, [r7, #4]
 801201a:	699b      	ldr	r3, [r3, #24]
 801201c:	f043 0210 	orr.w	r2, r3, #16
 8012020:	687b      	ldr	r3, [r7, #4]
 8012022:	619a      	str	r2, [r3, #24]
 8012024:	687b      	ldr	r3, [r7, #4]
 8012026:	699a      	ldr	r2, [r3, #24]
 8012028:	4b0f      	ldr	r3, [pc, #60]	@ (8012068 <USB_DevInit+0x2b4>)
 801202a:	4313      	orrs	r3, r2
 801202c:	687a      	ldr	r2, [r7, #4]
 801202e:	6193      	str	r3, [r2, #24]
 8012030:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 8012034:	2b00      	cmp	r3, #0
 8012036:	d005      	beq.n	8012044 <USB_DevInit+0x290>
 8012038:	687b      	ldr	r3, [r7, #4]
 801203a:	699b      	ldr	r3, [r3, #24]
 801203c:	f043 0208 	orr.w	r2, r3, #8
 8012040:	687b      	ldr	r3, [r7, #4]
 8012042:	619a      	str	r2, [r3, #24]
 8012044:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 8012048:	2b01      	cmp	r3, #1
 801204a:	d105      	bne.n	8012058 <USB_DevInit+0x2a4>
 801204c:	687b      	ldr	r3, [r7, #4]
 801204e:	699a      	ldr	r2, [r3, #24]
 8012050:	4b06      	ldr	r3, [pc, #24]	@ (801206c <USB_DevInit+0x2b8>)
 8012052:	4313      	orrs	r3, r2
 8012054:	687a      	ldr	r2, [r7, #4]
 8012056:	6193      	str	r3, [r2, #24]
 8012058:	7dfb      	ldrb	r3, [r7, #23]
 801205a:	4618      	mov	r0, r3
 801205c:	3718      	adds	r7, #24
 801205e:	46bd      	mov	sp, r7
 8012060:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8012064:	b004      	add	sp, #16
 8012066:	4770      	bx	lr
 8012068:	803c3800 	.word	0x803c3800
 801206c:	40000004 	.word	0x40000004

08012070 <USB_FlushTxFifo>:
 8012070:	b480      	push	{r7}
 8012072:	b085      	sub	sp, #20
 8012074:	af00      	add	r7, sp, #0
 8012076:	6078      	str	r0, [r7, #4]
 8012078:	6039      	str	r1, [r7, #0]
 801207a:	2300      	movs	r3, #0
 801207c:	60fb      	str	r3, [r7, #12]
 801207e:	68fb      	ldr	r3, [r7, #12]
 8012080:	3301      	adds	r3, #1
 8012082:	60fb      	str	r3, [r7, #12]
 8012084:	68fb      	ldr	r3, [r7, #12]
 8012086:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 801208a:	d901      	bls.n	8012090 <USB_FlushTxFifo+0x20>
 801208c:	2303      	movs	r3, #3
 801208e:	e01b      	b.n	80120c8 <USB_FlushTxFifo+0x58>
 8012090:	687b      	ldr	r3, [r7, #4]
 8012092:	691b      	ldr	r3, [r3, #16]
 8012094:	2b00      	cmp	r3, #0
 8012096:	daf2      	bge.n	801207e <USB_FlushTxFifo+0xe>
 8012098:	2300      	movs	r3, #0
 801209a:	60fb      	str	r3, [r7, #12]
 801209c:	683b      	ldr	r3, [r7, #0]
 801209e:	019b      	lsls	r3, r3, #6
 80120a0:	f043 0220 	orr.w	r2, r3, #32
 80120a4:	687b      	ldr	r3, [r7, #4]
 80120a6:	611a      	str	r2, [r3, #16]
 80120a8:	68fb      	ldr	r3, [r7, #12]
 80120aa:	3301      	adds	r3, #1
 80120ac:	60fb      	str	r3, [r7, #12]
 80120ae:	68fb      	ldr	r3, [r7, #12]
 80120b0:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80120b4:	d901      	bls.n	80120ba <USB_FlushTxFifo+0x4a>
 80120b6:	2303      	movs	r3, #3
 80120b8:	e006      	b.n	80120c8 <USB_FlushTxFifo+0x58>
 80120ba:	687b      	ldr	r3, [r7, #4]
 80120bc:	691b      	ldr	r3, [r3, #16]
 80120be:	f003 0320 	and.w	r3, r3, #32
 80120c2:	2b20      	cmp	r3, #32
 80120c4:	d0f0      	beq.n	80120a8 <USB_FlushTxFifo+0x38>
 80120c6:	2300      	movs	r3, #0
 80120c8:	4618      	mov	r0, r3
 80120ca:	3714      	adds	r7, #20
 80120cc:	46bd      	mov	sp, r7
 80120ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80120d2:	4770      	bx	lr

080120d4 <USB_FlushRxFifo>:
 80120d4:	b480      	push	{r7}
 80120d6:	b085      	sub	sp, #20
 80120d8:	af00      	add	r7, sp, #0
 80120da:	6078      	str	r0, [r7, #4]
 80120dc:	2300      	movs	r3, #0
 80120de:	60fb      	str	r3, [r7, #12]
 80120e0:	68fb      	ldr	r3, [r7, #12]
 80120e2:	3301      	adds	r3, #1
 80120e4:	60fb      	str	r3, [r7, #12]
 80120e6:	68fb      	ldr	r3, [r7, #12]
 80120e8:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80120ec:	d901      	bls.n	80120f2 <USB_FlushRxFifo+0x1e>
 80120ee:	2303      	movs	r3, #3
 80120f0:	e018      	b.n	8012124 <USB_FlushRxFifo+0x50>
 80120f2:	687b      	ldr	r3, [r7, #4]
 80120f4:	691b      	ldr	r3, [r3, #16]
 80120f6:	2b00      	cmp	r3, #0
 80120f8:	daf2      	bge.n	80120e0 <USB_FlushRxFifo+0xc>
 80120fa:	2300      	movs	r3, #0
 80120fc:	60fb      	str	r3, [r7, #12]
 80120fe:	687b      	ldr	r3, [r7, #4]
 8012100:	2210      	movs	r2, #16
 8012102:	611a      	str	r2, [r3, #16]
 8012104:	68fb      	ldr	r3, [r7, #12]
 8012106:	3301      	adds	r3, #1
 8012108:	60fb      	str	r3, [r7, #12]
 801210a:	68fb      	ldr	r3, [r7, #12]
 801210c:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8012110:	d901      	bls.n	8012116 <USB_FlushRxFifo+0x42>
 8012112:	2303      	movs	r3, #3
 8012114:	e006      	b.n	8012124 <USB_FlushRxFifo+0x50>
 8012116:	687b      	ldr	r3, [r7, #4]
 8012118:	691b      	ldr	r3, [r3, #16]
 801211a:	f003 0310 	and.w	r3, r3, #16
 801211e:	2b10      	cmp	r3, #16
 8012120:	d0f0      	beq.n	8012104 <USB_FlushRxFifo+0x30>
 8012122:	2300      	movs	r3, #0
 8012124:	4618      	mov	r0, r3
 8012126:	3714      	adds	r7, #20
 8012128:	46bd      	mov	sp, r7
 801212a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801212e:	4770      	bx	lr

08012130 <USB_SetDevSpeed>:
 8012130:	b480      	push	{r7}
 8012132:	b085      	sub	sp, #20
 8012134:	af00      	add	r7, sp, #0
 8012136:	6078      	str	r0, [r7, #4]
 8012138:	460b      	mov	r3, r1
 801213a:	70fb      	strb	r3, [r7, #3]
 801213c:	687b      	ldr	r3, [r7, #4]
 801213e:	60fb      	str	r3, [r7, #12]
 8012140:	68fb      	ldr	r3, [r7, #12]
 8012142:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012146:	681a      	ldr	r2, [r3, #0]
 8012148:	78fb      	ldrb	r3, [r7, #3]
 801214a:	68f9      	ldr	r1, [r7, #12]
 801214c:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8012150:	4313      	orrs	r3, r2
 8012152:	600b      	str	r3, [r1, #0]
 8012154:	2300      	movs	r3, #0
 8012156:	4618      	mov	r0, r3
 8012158:	3714      	adds	r7, #20
 801215a:	46bd      	mov	sp, r7
 801215c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012160:	4770      	bx	lr

08012162 <USB_GetDevSpeed>:
 8012162:	b480      	push	{r7}
 8012164:	b087      	sub	sp, #28
 8012166:	af00      	add	r7, sp, #0
 8012168:	6078      	str	r0, [r7, #4]
 801216a:	687b      	ldr	r3, [r7, #4]
 801216c:	613b      	str	r3, [r7, #16]
 801216e:	693b      	ldr	r3, [r7, #16]
 8012170:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012174:	689b      	ldr	r3, [r3, #8]
 8012176:	f003 0306 	and.w	r3, r3, #6
 801217a:	60fb      	str	r3, [r7, #12]
 801217c:	68fb      	ldr	r3, [r7, #12]
 801217e:	2b00      	cmp	r3, #0
 8012180:	d102      	bne.n	8012188 <USB_GetDevSpeed+0x26>
 8012182:	2300      	movs	r3, #0
 8012184:	75fb      	strb	r3, [r7, #23]
 8012186:	e00a      	b.n	801219e <USB_GetDevSpeed+0x3c>
 8012188:	68fb      	ldr	r3, [r7, #12]
 801218a:	2b02      	cmp	r3, #2
 801218c:	d002      	beq.n	8012194 <USB_GetDevSpeed+0x32>
 801218e:	68fb      	ldr	r3, [r7, #12]
 8012190:	2b06      	cmp	r3, #6
 8012192:	d102      	bne.n	801219a <USB_GetDevSpeed+0x38>
 8012194:	2302      	movs	r3, #2
 8012196:	75fb      	strb	r3, [r7, #23]
 8012198:	e001      	b.n	801219e <USB_GetDevSpeed+0x3c>
 801219a:	230f      	movs	r3, #15
 801219c:	75fb      	strb	r3, [r7, #23]
 801219e:	7dfb      	ldrb	r3, [r7, #23]
 80121a0:	4618      	mov	r0, r3
 80121a2:	371c      	adds	r7, #28
 80121a4:	46bd      	mov	sp, r7
 80121a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80121aa:	4770      	bx	lr

080121ac <USB_ActivateEndpoint>:
 80121ac:	b480      	push	{r7}
 80121ae:	b085      	sub	sp, #20
 80121b0:	af00      	add	r7, sp, #0
 80121b2:	6078      	str	r0, [r7, #4]
 80121b4:	6039      	str	r1, [r7, #0]
 80121b6:	687b      	ldr	r3, [r7, #4]
 80121b8:	60fb      	str	r3, [r7, #12]
 80121ba:	683b      	ldr	r3, [r7, #0]
 80121bc:	781b      	ldrb	r3, [r3, #0]
 80121be:	60bb      	str	r3, [r7, #8]
 80121c0:	683b      	ldr	r3, [r7, #0]
 80121c2:	785b      	ldrb	r3, [r3, #1]
 80121c4:	2b01      	cmp	r3, #1
 80121c6:	d139      	bne.n	801223c <USB_ActivateEndpoint+0x90>
 80121c8:	68fb      	ldr	r3, [r7, #12]
 80121ca:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80121ce:	69da      	ldr	r2, [r3, #28]
 80121d0:	683b      	ldr	r3, [r7, #0]
 80121d2:	781b      	ldrb	r3, [r3, #0]
 80121d4:	f003 030f 	and.w	r3, r3, #15
 80121d8:	2101      	movs	r1, #1
 80121da:	fa01 f303 	lsl.w	r3, r1, r3
 80121de:	b29b      	uxth	r3, r3
 80121e0:	68f9      	ldr	r1, [r7, #12]
 80121e2:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 80121e6:	4313      	orrs	r3, r2
 80121e8:	61cb      	str	r3, [r1, #28]
 80121ea:	68bb      	ldr	r3, [r7, #8]
 80121ec:	015a      	lsls	r2, r3, #5
 80121ee:	68fb      	ldr	r3, [r7, #12]
 80121f0:	4413      	add	r3, r2
 80121f2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80121f6:	681b      	ldr	r3, [r3, #0]
 80121f8:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80121fc:	2b00      	cmp	r3, #0
 80121fe:	d153      	bne.n	80122a8 <USB_ActivateEndpoint+0xfc>
 8012200:	68bb      	ldr	r3, [r7, #8]
 8012202:	015a      	lsls	r2, r3, #5
 8012204:	68fb      	ldr	r3, [r7, #12]
 8012206:	4413      	add	r3, r2
 8012208:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801220c:	681a      	ldr	r2, [r3, #0]
 801220e:	683b      	ldr	r3, [r7, #0]
 8012210:	689b      	ldr	r3, [r3, #8]
 8012212:	f3c3 010a 	ubfx	r1, r3, #0, #11
 8012216:	683b      	ldr	r3, [r7, #0]
 8012218:	791b      	ldrb	r3, [r3, #4]
 801221a:	049b      	lsls	r3, r3, #18
 801221c:	4319      	orrs	r1, r3
 801221e:	68bb      	ldr	r3, [r7, #8]
 8012220:	059b      	lsls	r3, r3, #22
 8012222:	430b      	orrs	r3, r1
 8012224:	431a      	orrs	r2, r3
 8012226:	68bb      	ldr	r3, [r7, #8]
 8012228:	0159      	lsls	r1, r3, #5
 801222a:	68fb      	ldr	r3, [r7, #12]
 801222c:	440b      	add	r3, r1
 801222e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012232:	4619      	mov	r1, r3
 8012234:	4b20      	ldr	r3, [pc, #128]	@ (80122b8 <USB_ActivateEndpoint+0x10c>)
 8012236:	4313      	orrs	r3, r2
 8012238:	600b      	str	r3, [r1, #0]
 801223a:	e035      	b.n	80122a8 <USB_ActivateEndpoint+0xfc>
 801223c:	68fb      	ldr	r3, [r7, #12]
 801223e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012242:	69da      	ldr	r2, [r3, #28]
 8012244:	683b      	ldr	r3, [r7, #0]
 8012246:	781b      	ldrb	r3, [r3, #0]
 8012248:	f003 030f 	and.w	r3, r3, #15
 801224c:	2101      	movs	r1, #1
 801224e:	fa01 f303 	lsl.w	r3, r1, r3
 8012252:	041b      	lsls	r3, r3, #16
 8012254:	68f9      	ldr	r1, [r7, #12]
 8012256:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 801225a:	4313      	orrs	r3, r2
 801225c:	61cb      	str	r3, [r1, #28]
 801225e:	68bb      	ldr	r3, [r7, #8]
 8012260:	015a      	lsls	r2, r3, #5
 8012262:	68fb      	ldr	r3, [r7, #12]
 8012264:	4413      	add	r3, r2
 8012266:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801226a:	681b      	ldr	r3, [r3, #0]
 801226c:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8012270:	2b00      	cmp	r3, #0
 8012272:	d119      	bne.n	80122a8 <USB_ActivateEndpoint+0xfc>
 8012274:	68bb      	ldr	r3, [r7, #8]
 8012276:	015a      	lsls	r2, r3, #5
 8012278:	68fb      	ldr	r3, [r7, #12]
 801227a:	4413      	add	r3, r2
 801227c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012280:	681a      	ldr	r2, [r3, #0]
 8012282:	683b      	ldr	r3, [r7, #0]
 8012284:	689b      	ldr	r3, [r3, #8]
 8012286:	f3c3 010a 	ubfx	r1, r3, #0, #11
 801228a:	683b      	ldr	r3, [r7, #0]
 801228c:	791b      	ldrb	r3, [r3, #4]
 801228e:	049b      	lsls	r3, r3, #18
 8012290:	430b      	orrs	r3, r1
 8012292:	431a      	orrs	r2, r3
 8012294:	68bb      	ldr	r3, [r7, #8]
 8012296:	0159      	lsls	r1, r3, #5
 8012298:	68fb      	ldr	r3, [r7, #12]
 801229a:	440b      	add	r3, r1
 801229c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80122a0:	4619      	mov	r1, r3
 80122a2:	4b05      	ldr	r3, [pc, #20]	@ (80122b8 <USB_ActivateEndpoint+0x10c>)
 80122a4:	4313      	orrs	r3, r2
 80122a6:	600b      	str	r3, [r1, #0]
 80122a8:	2300      	movs	r3, #0
 80122aa:	4618      	mov	r0, r3
 80122ac:	3714      	adds	r7, #20
 80122ae:	46bd      	mov	sp, r7
 80122b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80122b4:	4770      	bx	lr
 80122b6:	bf00      	nop
 80122b8:	10008000 	.word	0x10008000

080122bc <USB_DeactivateEndpoint>:
 80122bc:	b480      	push	{r7}
 80122be:	b085      	sub	sp, #20
 80122c0:	af00      	add	r7, sp, #0
 80122c2:	6078      	str	r0, [r7, #4]
 80122c4:	6039      	str	r1, [r7, #0]
 80122c6:	687b      	ldr	r3, [r7, #4]
 80122c8:	60fb      	str	r3, [r7, #12]
 80122ca:	683b      	ldr	r3, [r7, #0]
 80122cc:	781b      	ldrb	r3, [r3, #0]
 80122ce:	60bb      	str	r3, [r7, #8]
 80122d0:	683b      	ldr	r3, [r7, #0]
 80122d2:	785b      	ldrb	r3, [r3, #1]
 80122d4:	2b01      	cmp	r3, #1
 80122d6:	d161      	bne.n	801239c <USB_DeactivateEndpoint+0xe0>
 80122d8:	68bb      	ldr	r3, [r7, #8]
 80122da:	015a      	lsls	r2, r3, #5
 80122dc:	68fb      	ldr	r3, [r7, #12]
 80122de:	4413      	add	r3, r2
 80122e0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80122e4:	681b      	ldr	r3, [r3, #0]
 80122e6:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80122ea:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80122ee:	d11f      	bne.n	8012330 <USB_DeactivateEndpoint+0x74>
 80122f0:	68bb      	ldr	r3, [r7, #8]
 80122f2:	015a      	lsls	r2, r3, #5
 80122f4:	68fb      	ldr	r3, [r7, #12]
 80122f6:	4413      	add	r3, r2
 80122f8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80122fc:	681b      	ldr	r3, [r3, #0]
 80122fe:	68ba      	ldr	r2, [r7, #8]
 8012300:	0151      	lsls	r1, r2, #5
 8012302:	68fa      	ldr	r2, [r7, #12]
 8012304:	440a      	add	r2, r1
 8012306:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801230a:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 801230e:	6013      	str	r3, [r2, #0]
 8012310:	68bb      	ldr	r3, [r7, #8]
 8012312:	015a      	lsls	r2, r3, #5
 8012314:	68fb      	ldr	r3, [r7, #12]
 8012316:	4413      	add	r3, r2
 8012318:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801231c:	681b      	ldr	r3, [r3, #0]
 801231e:	68ba      	ldr	r2, [r7, #8]
 8012320:	0151      	lsls	r1, r2, #5
 8012322:	68fa      	ldr	r2, [r7, #12]
 8012324:	440a      	add	r2, r1
 8012326:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801232a:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 801232e:	6013      	str	r3, [r2, #0]
 8012330:	68fb      	ldr	r3, [r7, #12]
 8012332:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012336:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8012338:	683b      	ldr	r3, [r7, #0]
 801233a:	781b      	ldrb	r3, [r3, #0]
 801233c:	f003 030f 	and.w	r3, r3, #15
 8012340:	2101      	movs	r1, #1
 8012342:	fa01 f303 	lsl.w	r3, r1, r3
 8012346:	b29b      	uxth	r3, r3
 8012348:	43db      	mvns	r3, r3
 801234a:	68f9      	ldr	r1, [r7, #12]
 801234c:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8012350:	4013      	ands	r3, r2
 8012352:	63cb      	str	r3, [r1, #60]	@ 0x3c
 8012354:	68fb      	ldr	r3, [r7, #12]
 8012356:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801235a:	69da      	ldr	r2, [r3, #28]
 801235c:	683b      	ldr	r3, [r7, #0]
 801235e:	781b      	ldrb	r3, [r3, #0]
 8012360:	f003 030f 	and.w	r3, r3, #15
 8012364:	2101      	movs	r1, #1
 8012366:	fa01 f303 	lsl.w	r3, r1, r3
 801236a:	b29b      	uxth	r3, r3
 801236c:	43db      	mvns	r3, r3
 801236e:	68f9      	ldr	r1, [r7, #12]
 8012370:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8012374:	4013      	ands	r3, r2
 8012376:	61cb      	str	r3, [r1, #28]
 8012378:	68bb      	ldr	r3, [r7, #8]
 801237a:	015a      	lsls	r2, r3, #5
 801237c:	68fb      	ldr	r3, [r7, #12]
 801237e:	4413      	add	r3, r2
 8012380:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012384:	681a      	ldr	r2, [r3, #0]
 8012386:	68bb      	ldr	r3, [r7, #8]
 8012388:	0159      	lsls	r1, r3, #5
 801238a:	68fb      	ldr	r3, [r7, #12]
 801238c:	440b      	add	r3, r1
 801238e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012392:	4619      	mov	r1, r3
 8012394:	4b35      	ldr	r3, [pc, #212]	@ (801246c <USB_DeactivateEndpoint+0x1b0>)
 8012396:	4013      	ands	r3, r2
 8012398:	600b      	str	r3, [r1, #0]
 801239a:	e060      	b.n	801245e <USB_DeactivateEndpoint+0x1a2>
 801239c:	68bb      	ldr	r3, [r7, #8]
 801239e:	015a      	lsls	r2, r3, #5
 80123a0:	68fb      	ldr	r3, [r7, #12]
 80123a2:	4413      	add	r3, r2
 80123a4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80123a8:	681b      	ldr	r3, [r3, #0]
 80123aa:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80123ae:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80123b2:	d11f      	bne.n	80123f4 <USB_DeactivateEndpoint+0x138>
 80123b4:	68bb      	ldr	r3, [r7, #8]
 80123b6:	015a      	lsls	r2, r3, #5
 80123b8:	68fb      	ldr	r3, [r7, #12]
 80123ba:	4413      	add	r3, r2
 80123bc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80123c0:	681b      	ldr	r3, [r3, #0]
 80123c2:	68ba      	ldr	r2, [r7, #8]
 80123c4:	0151      	lsls	r1, r2, #5
 80123c6:	68fa      	ldr	r2, [r7, #12]
 80123c8:	440a      	add	r2, r1
 80123ca:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80123ce:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 80123d2:	6013      	str	r3, [r2, #0]
 80123d4:	68bb      	ldr	r3, [r7, #8]
 80123d6:	015a      	lsls	r2, r3, #5
 80123d8:	68fb      	ldr	r3, [r7, #12]
 80123da:	4413      	add	r3, r2
 80123dc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80123e0:	681b      	ldr	r3, [r3, #0]
 80123e2:	68ba      	ldr	r2, [r7, #8]
 80123e4:	0151      	lsls	r1, r2, #5
 80123e6:	68fa      	ldr	r2, [r7, #12]
 80123e8:	440a      	add	r2, r1
 80123ea:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80123ee:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80123f2:	6013      	str	r3, [r2, #0]
 80123f4:	68fb      	ldr	r3, [r7, #12]
 80123f6:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80123fa:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80123fc:	683b      	ldr	r3, [r7, #0]
 80123fe:	781b      	ldrb	r3, [r3, #0]
 8012400:	f003 030f 	and.w	r3, r3, #15
 8012404:	2101      	movs	r1, #1
 8012406:	fa01 f303 	lsl.w	r3, r1, r3
 801240a:	041b      	lsls	r3, r3, #16
 801240c:	43db      	mvns	r3, r3
 801240e:	68f9      	ldr	r1, [r7, #12]
 8012410:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8012414:	4013      	ands	r3, r2
 8012416:	63cb      	str	r3, [r1, #60]	@ 0x3c
 8012418:	68fb      	ldr	r3, [r7, #12]
 801241a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801241e:	69da      	ldr	r2, [r3, #28]
 8012420:	683b      	ldr	r3, [r7, #0]
 8012422:	781b      	ldrb	r3, [r3, #0]
 8012424:	f003 030f 	and.w	r3, r3, #15
 8012428:	2101      	movs	r1, #1
 801242a:	fa01 f303 	lsl.w	r3, r1, r3
 801242e:	041b      	lsls	r3, r3, #16
 8012430:	43db      	mvns	r3, r3
 8012432:	68f9      	ldr	r1, [r7, #12]
 8012434:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8012438:	4013      	ands	r3, r2
 801243a:	61cb      	str	r3, [r1, #28]
 801243c:	68bb      	ldr	r3, [r7, #8]
 801243e:	015a      	lsls	r2, r3, #5
 8012440:	68fb      	ldr	r3, [r7, #12]
 8012442:	4413      	add	r3, r2
 8012444:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012448:	681a      	ldr	r2, [r3, #0]
 801244a:	68bb      	ldr	r3, [r7, #8]
 801244c:	0159      	lsls	r1, r3, #5
 801244e:	68fb      	ldr	r3, [r7, #12]
 8012450:	440b      	add	r3, r1
 8012452:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012456:	4619      	mov	r1, r3
 8012458:	4b05      	ldr	r3, [pc, #20]	@ (8012470 <USB_DeactivateEndpoint+0x1b4>)
 801245a:	4013      	ands	r3, r2
 801245c:	600b      	str	r3, [r1, #0]
 801245e:	2300      	movs	r3, #0
 8012460:	4618      	mov	r0, r3
 8012462:	3714      	adds	r7, #20
 8012464:	46bd      	mov	sp, r7
 8012466:	f85d 7b04 	ldr.w	r7, [sp], #4
 801246a:	4770      	bx	lr
 801246c:	ec337800 	.word	0xec337800
 8012470:	eff37800 	.word	0xeff37800

08012474 <USB_EPStartXfer>:
 8012474:	b580      	push	{r7, lr}
 8012476:	b08a      	sub	sp, #40	@ 0x28
 8012478:	af02      	add	r7, sp, #8
 801247a:	60f8      	str	r0, [r7, #12]
 801247c:	60b9      	str	r1, [r7, #8]
 801247e:	4613      	mov	r3, r2
 8012480:	71fb      	strb	r3, [r7, #7]
 8012482:	68fb      	ldr	r3, [r7, #12]
 8012484:	61fb      	str	r3, [r7, #28]
 8012486:	68bb      	ldr	r3, [r7, #8]
 8012488:	781b      	ldrb	r3, [r3, #0]
 801248a:	61bb      	str	r3, [r7, #24]
 801248c:	68bb      	ldr	r3, [r7, #8]
 801248e:	785b      	ldrb	r3, [r3, #1]
 8012490:	2b01      	cmp	r3, #1
 8012492:	f040 8181 	bne.w	8012798 <USB_EPStartXfer+0x324>
 8012496:	68bb      	ldr	r3, [r7, #8]
 8012498:	691b      	ldr	r3, [r3, #16]
 801249a:	2b00      	cmp	r3, #0
 801249c:	d132      	bne.n	8012504 <USB_EPStartXfer+0x90>
 801249e:	69bb      	ldr	r3, [r7, #24]
 80124a0:	015a      	lsls	r2, r3, #5
 80124a2:	69fb      	ldr	r3, [r7, #28]
 80124a4:	4413      	add	r3, r2
 80124a6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80124aa:	691a      	ldr	r2, [r3, #16]
 80124ac:	69bb      	ldr	r3, [r7, #24]
 80124ae:	0159      	lsls	r1, r3, #5
 80124b0:	69fb      	ldr	r3, [r7, #28]
 80124b2:	440b      	add	r3, r1
 80124b4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80124b8:	4619      	mov	r1, r3
 80124ba:	4ba5      	ldr	r3, [pc, #660]	@ (8012750 <USB_EPStartXfer+0x2dc>)
 80124bc:	4013      	ands	r3, r2
 80124be:	610b      	str	r3, [r1, #16]
 80124c0:	69bb      	ldr	r3, [r7, #24]
 80124c2:	015a      	lsls	r2, r3, #5
 80124c4:	69fb      	ldr	r3, [r7, #28]
 80124c6:	4413      	add	r3, r2
 80124c8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80124cc:	691b      	ldr	r3, [r3, #16]
 80124ce:	69ba      	ldr	r2, [r7, #24]
 80124d0:	0151      	lsls	r1, r2, #5
 80124d2:	69fa      	ldr	r2, [r7, #28]
 80124d4:	440a      	add	r2, r1
 80124d6:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80124da:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80124de:	6113      	str	r3, [r2, #16]
 80124e0:	69bb      	ldr	r3, [r7, #24]
 80124e2:	015a      	lsls	r2, r3, #5
 80124e4:	69fb      	ldr	r3, [r7, #28]
 80124e6:	4413      	add	r3, r2
 80124e8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80124ec:	691a      	ldr	r2, [r3, #16]
 80124ee:	69bb      	ldr	r3, [r7, #24]
 80124f0:	0159      	lsls	r1, r3, #5
 80124f2:	69fb      	ldr	r3, [r7, #28]
 80124f4:	440b      	add	r3, r1
 80124f6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80124fa:	4619      	mov	r1, r3
 80124fc:	4b95      	ldr	r3, [pc, #596]	@ (8012754 <USB_EPStartXfer+0x2e0>)
 80124fe:	4013      	ands	r3, r2
 8012500:	610b      	str	r3, [r1, #16]
 8012502:	e092      	b.n	801262a <USB_EPStartXfer+0x1b6>
 8012504:	69bb      	ldr	r3, [r7, #24]
 8012506:	015a      	lsls	r2, r3, #5
 8012508:	69fb      	ldr	r3, [r7, #28]
 801250a:	4413      	add	r3, r2
 801250c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012510:	691a      	ldr	r2, [r3, #16]
 8012512:	69bb      	ldr	r3, [r7, #24]
 8012514:	0159      	lsls	r1, r3, #5
 8012516:	69fb      	ldr	r3, [r7, #28]
 8012518:	440b      	add	r3, r1
 801251a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801251e:	4619      	mov	r1, r3
 8012520:	4b8c      	ldr	r3, [pc, #560]	@ (8012754 <USB_EPStartXfer+0x2e0>)
 8012522:	4013      	ands	r3, r2
 8012524:	610b      	str	r3, [r1, #16]
 8012526:	69bb      	ldr	r3, [r7, #24]
 8012528:	015a      	lsls	r2, r3, #5
 801252a:	69fb      	ldr	r3, [r7, #28]
 801252c:	4413      	add	r3, r2
 801252e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012532:	691a      	ldr	r2, [r3, #16]
 8012534:	69bb      	ldr	r3, [r7, #24]
 8012536:	0159      	lsls	r1, r3, #5
 8012538:	69fb      	ldr	r3, [r7, #28]
 801253a:	440b      	add	r3, r1
 801253c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012540:	4619      	mov	r1, r3
 8012542:	4b83      	ldr	r3, [pc, #524]	@ (8012750 <USB_EPStartXfer+0x2dc>)
 8012544:	4013      	ands	r3, r2
 8012546:	610b      	str	r3, [r1, #16]
 8012548:	69bb      	ldr	r3, [r7, #24]
 801254a:	2b00      	cmp	r3, #0
 801254c:	d11a      	bne.n	8012584 <USB_EPStartXfer+0x110>
 801254e:	68bb      	ldr	r3, [r7, #8]
 8012550:	691a      	ldr	r2, [r3, #16]
 8012552:	68bb      	ldr	r3, [r7, #8]
 8012554:	689b      	ldr	r3, [r3, #8]
 8012556:	429a      	cmp	r2, r3
 8012558:	d903      	bls.n	8012562 <USB_EPStartXfer+0xee>
 801255a:	68bb      	ldr	r3, [r7, #8]
 801255c:	689a      	ldr	r2, [r3, #8]
 801255e:	68bb      	ldr	r3, [r7, #8]
 8012560:	611a      	str	r2, [r3, #16]
 8012562:	69bb      	ldr	r3, [r7, #24]
 8012564:	015a      	lsls	r2, r3, #5
 8012566:	69fb      	ldr	r3, [r7, #28]
 8012568:	4413      	add	r3, r2
 801256a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801256e:	691b      	ldr	r3, [r3, #16]
 8012570:	69ba      	ldr	r2, [r7, #24]
 8012572:	0151      	lsls	r1, r2, #5
 8012574:	69fa      	ldr	r2, [r7, #28]
 8012576:	440a      	add	r2, r1
 8012578:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801257c:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8012580:	6113      	str	r3, [r2, #16]
 8012582:	e01b      	b.n	80125bc <USB_EPStartXfer+0x148>
 8012584:	69bb      	ldr	r3, [r7, #24]
 8012586:	015a      	lsls	r2, r3, #5
 8012588:	69fb      	ldr	r3, [r7, #28]
 801258a:	4413      	add	r3, r2
 801258c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012590:	691a      	ldr	r2, [r3, #16]
 8012592:	68bb      	ldr	r3, [r7, #8]
 8012594:	6919      	ldr	r1, [r3, #16]
 8012596:	68bb      	ldr	r3, [r7, #8]
 8012598:	689b      	ldr	r3, [r3, #8]
 801259a:	440b      	add	r3, r1
 801259c:	1e59      	subs	r1, r3, #1
 801259e:	68bb      	ldr	r3, [r7, #8]
 80125a0:	689b      	ldr	r3, [r3, #8]
 80125a2:	fbb1 f3f3 	udiv	r3, r1, r3
 80125a6:	04d9      	lsls	r1, r3, #19
 80125a8:	4b6b      	ldr	r3, [pc, #428]	@ (8012758 <USB_EPStartXfer+0x2e4>)
 80125aa:	400b      	ands	r3, r1
 80125ac:	69b9      	ldr	r1, [r7, #24]
 80125ae:	0148      	lsls	r0, r1, #5
 80125b0:	69f9      	ldr	r1, [r7, #28]
 80125b2:	4401      	add	r1, r0
 80125b4:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 80125b8:	4313      	orrs	r3, r2
 80125ba:	610b      	str	r3, [r1, #16]
 80125bc:	69bb      	ldr	r3, [r7, #24]
 80125be:	015a      	lsls	r2, r3, #5
 80125c0:	69fb      	ldr	r3, [r7, #28]
 80125c2:	4413      	add	r3, r2
 80125c4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80125c8:	691a      	ldr	r2, [r3, #16]
 80125ca:	68bb      	ldr	r3, [r7, #8]
 80125cc:	691b      	ldr	r3, [r3, #16]
 80125ce:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80125d2:	69b9      	ldr	r1, [r7, #24]
 80125d4:	0148      	lsls	r0, r1, #5
 80125d6:	69f9      	ldr	r1, [r7, #28]
 80125d8:	4401      	add	r1, r0
 80125da:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 80125de:	4313      	orrs	r3, r2
 80125e0:	610b      	str	r3, [r1, #16]
 80125e2:	68bb      	ldr	r3, [r7, #8]
 80125e4:	791b      	ldrb	r3, [r3, #4]
 80125e6:	2b01      	cmp	r3, #1
 80125e8:	d11f      	bne.n	801262a <USB_EPStartXfer+0x1b6>
 80125ea:	69bb      	ldr	r3, [r7, #24]
 80125ec:	015a      	lsls	r2, r3, #5
 80125ee:	69fb      	ldr	r3, [r7, #28]
 80125f0:	4413      	add	r3, r2
 80125f2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80125f6:	691b      	ldr	r3, [r3, #16]
 80125f8:	69ba      	ldr	r2, [r7, #24]
 80125fa:	0151      	lsls	r1, r2, #5
 80125fc:	69fa      	ldr	r2, [r7, #28]
 80125fe:	440a      	add	r2, r1
 8012600:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012604:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 8012608:	6113      	str	r3, [r2, #16]
 801260a:	69bb      	ldr	r3, [r7, #24]
 801260c:	015a      	lsls	r2, r3, #5
 801260e:	69fb      	ldr	r3, [r7, #28]
 8012610:	4413      	add	r3, r2
 8012612:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012616:	691b      	ldr	r3, [r3, #16]
 8012618:	69ba      	ldr	r2, [r7, #24]
 801261a:	0151      	lsls	r1, r2, #5
 801261c:	69fa      	ldr	r2, [r7, #28]
 801261e:	440a      	add	r2, r1
 8012620:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012624:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8012628:	6113      	str	r3, [r2, #16]
 801262a:	79fb      	ldrb	r3, [r7, #7]
 801262c:	2b01      	cmp	r3, #1
 801262e:	d14b      	bne.n	80126c8 <USB_EPStartXfer+0x254>
 8012630:	68bb      	ldr	r3, [r7, #8]
 8012632:	69db      	ldr	r3, [r3, #28]
 8012634:	2b00      	cmp	r3, #0
 8012636:	d009      	beq.n	801264c <USB_EPStartXfer+0x1d8>
 8012638:	69bb      	ldr	r3, [r7, #24]
 801263a:	015a      	lsls	r2, r3, #5
 801263c:	69fb      	ldr	r3, [r7, #28]
 801263e:	4413      	add	r3, r2
 8012640:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012644:	461a      	mov	r2, r3
 8012646:	68bb      	ldr	r3, [r7, #8]
 8012648:	69db      	ldr	r3, [r3, #28]
 801264a:	6153      	str	r3, [r2, #20]
 801264c:	68bb      	ldr	r3, [r7, #8]
 801264e:	791b      	ldrb	r3, [r3, #4]
 8012650:	2b01      	cmp	r3, #1
 8012652:	d128      	bne.n	80126a6 <USB_EPStartXfer+0x232>
 8012654:	69fb      	ldr	r3, [r7, #28]
 8012656:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801265a:	689b      	ldr	r3, [r3, #8]
 801265c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012660:	2b00      	cmp	r3, #0
 8012662:	d110      	bne.n	8012686 <USB_EPStartXfer+0x212>
 8012664:	69bb      	ldr	r3, [r7, #24]
 8012666:	015a      	lsls	r2, r3, #5
 8012668:	69fb      	ldr	r3, [r7, #28]
 801266a:	4413      	add	r3, r2
 801266c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012670:	681b      	ldr	r3, [r3, #0]
 8012672:	69ba      	ldr	r2, [r7, #24]
 8012674:	0151      	lsls	r1, r2, #5
 8012676:	69fa      	ldr	r2, [r7, #28]
 8012678:	440a      	add	r2, r1
 801267a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801267e:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8012682:	6013      	str	r3, [r2, #0]
 8012684:	e00f      	b.n	80126a6 <USB_EPStartXfer+0x232>
 8012686:	69bb      	ldr	r3, [r7, #24]
 8012688:	015a      	lsls	r2, r3, #5
 801268a:	69fb      	ldr	r3, [r7, #28]
 801268c:	4413      	add	r3, r2
 801268e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012692:	681b      	ldr	r3, [r3, #0]
 8012694:	69ba      	ldr	r2, [r7, #24]
 8012696:	0151      	lsls	r1, r2, #5
 8012698:	69fa      	ldr	r2, [r7, #28]
 801269a:	440a      	add	r2, r1
 801269c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80126a0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80126a4:	6013      	str	r3, [r2, #0]
 80126a6:	69bb      	ldr	r3, [r7, #24]
 80126a8:	015a      	lsls	r2, r3, #5
 80126aa:	69fb      	ldr	r3, [r7, #28]
 80126ac:	4413      	add	r3, r2
 80126ae:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80126b2:	681b      	ldr	r3, [r3, #0]
 80126b4:	69ba      	ldr	r2, [r7, #24]
 80126b6:	0151      	lsls	r1, r2, #5
 80126b8:	69fa      	ldr	r2, [r7, #28]
 80126ba:	440a      	add	r2, r1
 80126bc:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80126c0:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80126c4:	6013      	str	r3, [r2, #0]
 80126c6:	e16a      	b.n	801299e <USB_EPStartXfer+0x52a>
 80126c8:	69bb      	ldr	r3, [r7, #24]
 80126ca:	015a      	lsls	r2, r3, #5
 80126cc:	69fb      	ldr	r3, [r7, #28]
 80126ce:	4413      	add	r3, r2
 80126d0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80126d4:	681b      	ldr	r3, [r3, #0]
 80126d6:	69ba      	ldr	r2, [r7, #24]
 80126d8:	0151      	lsls	r1, r2, #5
 80126da:	69fa      	ldr	r2, [r7, #28]
 80126dc:	440a      	add	r2, r1
 80126de:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80126e2:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80126e6:	6013      	str	r3, [r2, #0]
 80126e8:	68bb      	ldr	r3, [r7, #8]
 80126ea:	791b      	ldrb	r3, [r3, #4]
 80126ec:	2b01      	cmp	r3, #1
 80126ee:	d015      	beq.n	801271c <USB_EPStartXfer+0x2a8>
 80126f0:	68bb      	ldr	r3, [r7, #8]
 80126f2:	691b      	ldr	r3, [r3, #16]
 80126f4:	2b00      	cmp	r3, #0
 80126f6:	f000 8152 	beq.w	801299e <USB_EPStartXfer+0x52a>
 80126fa:	69fb      	ldr	r3, [r7, #28]
 80126fc:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012700:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8012702:	68bb      	ldr	r3, [r7, #8]
 8012704:	781b      	ldrb	r3, [r3, #0]
 8012706:	f003 030f 	and.w	r3, r3, #15
 801270a:	2101      	movs	r1, #1
 801270c:	fa01 f303 	lsl.w	r3, r1, r3
 8012710:	69f9      	ldr	r1, [r7, #28]
 8012712:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8012716:	4313      	orrs	r3, r2
 8012718:	634b      	str	r3, [r1, #52]	@ 0x34
 801271a:	e140      	b.n	801299e <USB_EPStartXfer+0x52a>
 801271c:	69fb      	ldr	r3, [r7, #28]
 801271e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012722:	689b      	ldr	r3, [r3, #8]
 8012724:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012728:	2b00      	cmp	r3, #0
 801272a:	d117      	bne.n	801275c <USB_EPStartXfer+0x2e8>
 801272c:	69bb      	ldr	r3, [r7, #24]
 801272e:	015a      	lsls	r2, r3, #5
 8012730:	69fb      	ldr	r3, [r7, #28]
 8012732:	4413      	add	r3, r2
 8012734:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012738:	681b      	ldr	r3, [r3, #0]
 801273a:	69ba      	ldr	r2, [r7, #24]
 801273c:	0151      	lsls	r1, r2, #5
 801273e:	69fa      	ldr	r2, [r7, #28]
 8012740:	440a      	add	r2, r1
 8012742:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012746:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 801274a:	6013      	str	r3, [r2, #0]
 801274c:	e016      	b.n	801277c <USB_EPStartXfer+0x308>
 801274e:	bf00      	nop
 8012750:	e007ffff 	.word	0xe007ffff
 8012754:	fff80000 	.word	0xfff80000
 8012758:	1ff80000 	.word	0x1ff80000
 801275c:	69bb      	ldr	r3, [r7, #24]
 801275e:	015a      	lsls	r2, r3, #5
 8012760:	69fb      	ldr	r3, [r7, #28]
 8012762:	4413      	add	r3, r2
 8012764:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012768:	681b      	ldr	r3, [r3, #0]
 801276a:	69ba      	ldr	r2, [r7, #24]
 801276c:	0151      	lsls	r1, r2, #5
 801276e:	69fa      	ldr	r2, [r7, #28]
 8012770:	440a      	add	r2, r1
 8012772:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012776:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 801277a:	6013      	str	r3, [r2, #0]
 801277c:	68bb      	ldr	r3, [r7, #8]
 801277e:	68d9      	ldr	r1, [r3, #12]
 8012780:	68bb      	ldr	r3, [r7, #8]
 8012782:	781a      	ldrb	r2, [r3, #0]
 8012784:	68bb      	ldr	r3, [r7, #8]
 8012786:	691b      	ldr	r3, [r3, #16]
 8012788:	b298      	uxth	r0, r3
 801278a:	79fb      	ldrb	r3, [r7, #7]
 801278c:	9300      	str	r3, [sp, #0]
 801278e:	4603      	mov	r3, r0
 8012790:	68f8      	ldr	r0, [r7, #12]
 8012792:	f000 f9b9 	bl	8012b08 <USB_WritePacket>
 8012796:	e102      	b.n	801299e <USB_EPStartXfer+0x52a>
 8012798:	69bb      	ldr	r3, [r7, #24]
 801279a:	015a      	lsls	r2, r3, #5
 801279c:	69fb      	ldr	r3, [r7, #28]
 801279e:	4413      	add	r3, r2
 80127a0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80127a4:	691a      	ldr	r2, [r3, #16]
 80127a6:	69bb      	ldr	r3, [r7, #24]
 80127a8:	0159      	lsls	r1, r3, #5
 80127aa:	69fb      	ldr	r3, [r7, #28]
 80127ac:	440b      	add	r3, r1
 80127ae:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80127b2:	4619      	mov	r1, r3
 80127b4:	4b7c      	ldr	r3, [pc, #496]	@ (80129a8 <USB_EPStartXfer+0x534>)
 80127b6:	4013      	ands	r3, r2
 80127b8:	610b      	str	r3, [r1, #16]
 80127ba:	69bb      	ldr	r3, [r7, #24]
 80127bc:	015a      	lsls	r2, r3, #5
 80127be:	69fb      	ldr	r3, [r7, #28]
 80127c0:	4413      	add	r3, r2
 80127c2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80127c6:	691a      	ldr	r2, [r3, #16]
 80127c8:	69bb      	ldr	r3, [r7, #24]
 80127ca:	0159      	lsls	r1, r3, #5
 80127cc:	69fb      	ldr	r3, [r7, #28]
 80127ce:	440b      	add	r3, r1
 80127d0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80127d4:	4619      	mov	r1, r3
 80127d6:	4b75      	ldr	r3, [pc, #468]	@ (80129ac <USB_EPStartXfer+0x538>)
 80127d8:	4013      	ands	r3, r2
 80127da:	610b      	str	r3, [r1, #16]
 80127dc:	69bb      	ldr	r3, [r7, #24]
 80127de:	2b00      	cmp	r3, #0
 80127e0:	d12f      	bne.n	8012842 <USB_EPStartXfer+0x3ce>
 80127e2:	68bb      	ldr	r3, [r7, #8]
 80127e4:	691b      	ldr	r3, [r3, #16]
 80127e6:	2b00      	cmp	r3, #0
 80127e8:	d003      	beq.n	80127f2 <USB_EPStartXfer+0x37e>
 80127ea:	68bb      	ldr	r3, [r7, #8]
 80127ec:	689a      	ldr	r2, [r3, #8]
 80127ee:	68bb      	ldr	r3, [r7, #8]
 80127f0:	611a      	str	r2, [r3, #16]
 80127f2:	68bb      	ldr	r3, [r7, #8]
 80127f4:	689a      	ldr	r2, [r3, #8]
 80127f6:	68bb      	ldr	r3, [r7, #8]
 80127f8:	621a      	str	r2, [r3, #32]
 80127fa:	69bb      	ldr	r3, [r7, #24]
 80127fc:	015a      	lsls	r2, r3, #5
 80127fe:	69fb      	ldr	r3, [r7, #28]
 8012800:	4413      	add	r3, r2
 8012802:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012806:	691a      	ldr	r2, [r3, #16]
 8012808:	68bb      	ldr	r3, [r7, #8]
 801280a:	6a1b      	ldr	r3, [r3, #32]
 801280c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8012810:	69b9      	ldr	r1, [r7, #24]
 8012812:	0148      	lsls	r0, r1, #5
 8012814:	69f9      	ldr	r1, [r7, #28]
 8012816:	4401      	add	r1, r0
 8012818:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 801281c:	4313      	orrs	r3, r2
 801281e:	610b      	str	r3, [r1, #16]
 8012820:	69bb      	ldr	r3, [r7, #24]
 8012822:	015a      	lsls	r2, r3, #5
 8012824:	69fb      	ldr	r3, [r7, #28]
 8012826:	4413      	add	r3, r2
 8012828:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801282c:	691b      	ldr	r3, [r3, #16]
 801282e:	69ba      	ldr	r2, [r7, #24]
 8012830:	0151      	lsls	r1, r2, #5
 8012832:	69fa      	ldr	r2, [r7, #28]
 8012834:	440a      	add	r2, r1
 8012836:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 801283a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 801283e:	6113      	str	r3, [r2, #16]
 8012840:	e05f      	b.n	8012902 <USB_EPStartXfer+0x48e>
 8012842:	68bb      	ldr	r3, [r7, #8]
 8012844:	691b      	ldr	r3, [r3, #16]
 8012846:	2b00      	cmp	r3, #0
 8012848:	d123      	bne.n	8012892 <USB_EPStartXfer+0x41e>
 801284a:	69bb      	ldr	r3, [r7, #24]
 801284c:	015a      	lsls	r2, r3, #5
 801284e:	69fb      	ldr	r3, [r7, #28]
 8012850:	4413      	add	r3, r2
 8012852:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012856:	691a      	ldr	r2, [r3, #16]
 8012858:	68bb      	ldr	r3, [r7, #8]
 801285a:	689b      	ldr	r3, [r3, #8]
 801285c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8012860:	69b9      	ldr	r1, [r7, #24]
 8012862:	0148      	lsls	r0, r1, #5
 8012864:	69f9      	ldr	r1, [r7, #28]
 8012866:	4401      	add	r1, r0
 8012868:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 801286c:	4313      	orrs	r3, r2
 801286e:	610b      	str	r3, [r1, #16]
 8012870:	69bb      	ldr	r3, [r7, #24]
 8012872:	015a      	lsls	r2, r3, #5
 8012874:	69fb      	ldr	r3, [r7, #28]
 8012876:	4413      	add	r3, r2
 8012878:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801287c:	691b      	ldr	r3, [r3, #16]
 801287e:	69ba      	ldr	r2, [r7, #24]
 8012880:	0151      	lsls	r1, r2, #5
 8012882:	69fa      	ldr	r2, [r7, #28]
 8012884:	440a      	add	r2, r1
 8012886:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 801288a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 801288e:	6113      	str	r3, [r2, #16]
 8012890:	e037      	b.n	8012902 <USB_EPStartXfer+0x48e>
 8012892:	68bb      	ldr	r3, [r7, #8]
 8012894:	691a      	ldr	r2, [r3, #16]
 8012896:	68bb      	ldr	r3, [r7, #8]
 8012898:	689b      	ldr	r3, [r3, #8]
 801289a:	4413      	add	r3, r2
 801289c:	1e5a      	subs	r2, r3, #1
 801289e:	68bb      	ldr	r3, [r7, #8]
 80128a0:	689b      	ldr	r3, [r3, #8]
 80128a2:	fbb2 f3f3 	udiv	r3, r2, r3
 80128a6:	82fb      	strh	r3, [r7, #22]
 80128a8:	68bb      	ldr	r3, [r7, #8]
 80128aa:	689b      	ldr	r3, [r3, #8]
 80128ac:	8afa      	ldrh	r2, [r7, #22]
 80128ae:	fb03 f202 	mul.w	r2, r3, r2
 80128b2:	68bb      	ldr	r3, [r7, #8]
 80128b4:	621a      	str	r2, [r3, #32]
 80128b6:	69bb      	ldr	r3, [r7, #24]
 80128b8:	015a      	lsls	r2, r3, #5
 80128ba:	69fb      	ldr	r3, [r7, #28]
 80128bc:	4413      	add	r3, r2
 80128be:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80128c2:	691a      	ldr	r2, [r3, #16]
 80128c4:	8afb      	ldrh	r3, [r7, #22]
 80128c6:	04d9      	lsls	r1, r3, #19
 80128c8:	4b39      	ldr	r3, [pc, #228]	@ (80129b0 <USB_EPStartXfer+0x53c>)
 80128ca:	400b      	ands	r3, r1
 80128cc:	69b9      	ldr	r1, [r7, #24]
 80128ce:	0148      	lsls	r0, r1, #5
 80128d0:	69f9      	ldr	r1, [r7, #28]
 80128d2:	4401      	add	r1, r0
 80128d4:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 80128d8:	4313      	orrs	r3, r2
 80128da:	610b      	str	r3, [r1, #16]
 80128dc:	69bb      	ldr	r3, [r7, #24]
 80128de:	015a      	lsls	r2, r3, #5
 80128e0:	69fb      	ldr	r3, [r7, #28]
 80128e2:	4413      	add	r3, r2
 80128e4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80128e8:	691a      	ldr	r2, [r3, #16]
 80128ea:	68bb      	ldr	r3, [r7, #8]
 80128ec:	6a1b      	ldr	r3, [r3, #32]
 80128ee:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80128f2:	69b9      	ldr	r1, [r7, #24]
 80128f4:	0148      	lsls	r0, r1, #5
 80128f6:	69f9      	ldr	r1, [r7, #28]
 80128f8:	4401      	add	r1, r0
 80128fa:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 80128fe:	4313      	orrs	r3, r2
 8012900:	610b      	str	r3, [r1, #16]
 8012902:	79fb      	ldrb	r3, [r7, #7]
 8012904:	2b01      	cmp	r3, #1
 8012906:	d10d      	bne.n	8012924 <USB_EPStartXfer+0x4b0>
 8012908:	68bb      	ldr	r3, [r7, #8]
 801290a:	68db      	ldr	r3, [r3, #12]
 801290c:	2b00      	cmp	r3, #0
 801290e:	d009      	beq.n	8012924 <USB_EPStartXfer+0x4b0>
 8012910:	68bb      	ldr	r3, [r7, #8]
 8012912:	68d9      	ldr	r1, [r3, #12]
 8012914:	69bb      	ldr	r3, [r7, #24]
 8012916:	015a      	lsls	r2, r3, #5
 8012918:	69fb      	ldr	r3, [r7, #28]
 801291a:	4413      	add	r3, r2
 801291c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012920:	460a      	mov	r2, r1
 8012922:	615a      	str	r2, [r3, #20]
 8012924:	68bb      	ldr	r3, [r7, #8]
 8012926:	791b      	ldrb	r3, [r3, #4]
 8012928:	2b01      	cmp	r3, #1
 801292a:	d128      	bne.n	801297e <USB_EPStartXfer+0x50a>
 801292c:	69fb      	ldr	r3, [r7, #28]
 801292e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012932:	689b      	ldr	r3, [r3, #8]
 8012934:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012938:	2b00      	cmp	r3, #0
 801293a:	d110      	bne.n	801295e <USB_EPStartXfer+0x4ea>
 801293c:	69bb      	ldr	r3, [r7, #24]
 801293e:	015a      	lsls	r2, r3, #5
 8012940:	69fb      	ldr	r3, [r7, #28]
 8012942:	4413      	add	r3, r2
 8012944:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012948:	681b      	ldr	r3, [r3, #0]
 801294a:	69ba      	ldr	r2, [r7, #24]
 801294c:	0151      	lsls	r1, r2, #5
 801294e:	69fa      	ldr	r2, [r7, #28]
 8012950:	440a      	add	r2, r1
 8012952:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012956:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 801295a:	6013      	str	r3, [r2, #0]
 801295c:	e00f      	b.n	801297e <USB_EPStartXfer+0x50a>
 801295e:	69bb      	ldr	r3, [r7, #24]
 8012960:	015a      	lsls	r2, r3, #5
 8012962:	69fb      	ldr	r3, [r7, #28]
 8012964:	4413      	add	r3, r2
 8012966:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801296a:	681b      	ldr	r3, [r3, #0]
 801296c:	69ba      	ldr	r2, [r7, #24]
 801296e:	0151      	lsls	r1, r2, #5
 8012970:	69fa      	ldr	r2, [r7, #28]
 8012972:	440a      	add	r2, r1
 8012974:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012978:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 801297c:	6013      	str	r3, [r2, #0]
 801297e:	69bb      	ldr	r3, [r7, #24]
 8012980:	015a      	lsls	r2, r3, #5
 8012982:	69fb      	ldr	r3, [r7, #28]
 8012984:	4413      	add	r3, r2
 8012986:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801298a:	681b      	ldr	r3, [r3, #0]
 801298c:	69ba      	ldr	r2, [r7, #24]
 801298e:	0151      	lsls	r1, r2, #5
 8012990:	69fa      	ldr	r2, [r7, #28]
 8012992:	440a      	add	r2, r1
 8012994:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012998:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 801299c:	6013      	str	r3, [r2, #0]
 801299e:	2300      	movs	r3, #0
 80129a0:	4618      	mov	r0, r3
 80129a2:	3720      	adds	r7, #32
 80129a4:	46bd      	mov	sp, r7
 80129a6:	bd80      	pop	{r7, pc}
 80129a8:	fff80000 	.word	0xfff80000
 80129ac:	e007ffff 	.word	0xe007ffff
 80129b0:	1ff80000 	.word	0x1ff80000

080129b4 <USB_EPStopXfer>:
 80129b4:	b480      	push	{r7}
 80129b6:	b087      	sub	sp, #28
 80129b8:	af00      	add	r7, sp, #0
 80129ba:	6078      	str	r0, [r7, #4]
 80129bc:	6039      	str	r1, [r7, #0]
 80129be:	2300      	movs	r3, #0
 80129c0:	60fb      	str	r3, [r7, #12]
 80129c2:	2300      	movs	r3, #0
 80129c4:	75fb      	strb	r3, [r7, #23]
 80129c6:	687b      	ldr	r3, [r7, #4]
 80129c8:	613b      	str	r3, [r7, #16]
 80129ca:	683b      	ldr	r3, [r7, #0]
 80129cc:	785b      	ldrb	r3, [r3, #1]
 80129ce:	2b01      	cmp	r3, #1
 80129d0:	d14a      	bne.n	8012a68 <USB_EPStopXfer+0xb4>
 80129d2:	683b      	ldr	r3, [r7, #0]
 80129d4:	781b      	ldrb	r3, [r3, #0]
 80129d6:	015a      	lsls	r2, r3, #5
 80129d8:	693b      	ldr	r3, [r7, #16]
 80129da:	4413      	add	r3, r2
 80129dc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80129e0:	681b      	ldr	r3, [r3, #0]
 80129e2:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80129e6:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80129ea:	f040 8086 	bne.w	8012afa <USB_EPStopXfer+0x146>
 80129ee:	683b      	ldr	r3, [r7, #0]
 80129f0:	781b      	ldrb	r3, [r3, #0]
 80129f2:	015a      	lsls	r2, r3, #5
 80129f4:	693b      	ldr	r3, [r7, #16]
 80129f6:	4413      	add	r3, r2
 80129f8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80129fc:	681b      	ldr	r3, [r3, #0]
 80129fe:	683a      	ldr	r2, [r7, #0]
 8012a00:	7812      	ldrb	r2, [r2, #0]
 8012a02:	0151      	lsls	r1, r2, #5
 8012a04:	693a      	ldr	r2, [r7, #16]
 8012a06:	440a      	add	r2, r1
 8012a08:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012a0c:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8012a10:	6013      	str	r3, [r2, #0]
 8012a12:	683b      	ldr	r3, [r7, #0]
 8012a14:	781b      	ldrb	r3, [r3, #0]
 8012a16:	015a      	lsls	r2, r3, #5
 8012a18:	693b      	ldr	r3, [r7, #16]
 8012a1a:	4413      	add	r3, r2
 8012a1c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012a20:	681b      	ldr	r3, [r3, #0]
 8012a22:	683a      	ldr	r2, [r7, #0]
 8012a24:	7812      	ldrb	r2, [r2, #0]
 8012a26:	0151      	lsls	r1, r2, #5
 8012a28:	693a      	ldr	r2, [r7, #16]
 8012a2a:	440a      	add	r2, r1
 8012a2c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012a30:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8012a34:	6013      	str	r3, [r2, #0]
 8012a36:	68fb      	ldr	r3, [r7, #12]
 8012a38:	3301      	adds	r3, #1
 8012a3a:	60fb      	str	r3, [r7, #12]
 8012a3c:	68fb      	ldr	r3, [r7, #12]
 8012a3e:	f242 7210 	movw	r2, #10000	@ 0x2710
 8012a42:	4293      	cmp	r3, r2
 8012a44:	d902      	bls.n	8012a4c <USB_EPStopXfer+0x98>
 8012a46:	2301      	movs	r3, #1
 8012a48:	75fb      	strb	r3, [r7, #23]
 8012a4a:	e056      	b.n	8012afa <USB_EPStopXfer+0x146>
 8012a4c:	683b      	ldr	r3, [r7, #0]
 8012a4e:	781b      	ldrb	r3, [r3, #0]
 8012a50:	015a      	lsls	r2, r3, #5
 8012a52:	693b      	ldr	r3, [r7, #16]
 8012a54:	4413      	add	r3, r2
 8012a56:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012a5a:	681b      	ldr	r3, [r3, #0]
 8012a5c:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8012a60:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8012a64:	d0e7      	beq.n	8012a36 <USB_EPStopXfer+0x82>
 8012a66:	e048      	b.n	8012afa <USB_EPStopXfer+0x146>
 8012a68:	683b      	ldr	r3, [r7, #0]
 8012a6a:	781b      	ldrb	r3, [r3, #0]
 8012a6c:	015a      	lsls	r2, r3, #5
 8012a6e:	693b      	ldr	r3, [r7, #16]
 8012a70:	4413      	add	r3, r2
 8012a72:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012a76:	681b      	ldr	r3, [r3, #0]
 8012a78:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8012a7c:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8012a80:	d13b      	bne.n	8012afa <USB_EPStopXfer+0x146>
 8012a82:	683b      	ldr	r3, [r7, #0]
 8012a84:	781b      	ldrb	r3, [r3, #0]
 8012a86:	015a      	lsls	r2, r3, #5
 8012a88:	693b      	ldr	r3, [r7, #16]
 8012a8a:	4413      	add	r3, r2
 8012a8c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012a90:	681b      	ldr	r3, [r3, #0]
 8012a92:	683a      	ldr	r2, [r7, #0]
 8012a94:	7812      	ldrb	r2, [r2, #0]
 8012a96:	0151      	lsls	r1, r2, #5
 8012a98:	693a      	ldr	r2, [r7, #16]
 8012a9a:	440a      	add	r2, r1
 8012a9c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012aa0:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8012aa4:	6013      	str	r3, [r2, #0]
 8012aa6:	683b      	ldr	r3, [r7, #0]
 8012aa8:	781b      	ldrb	r3, [r3, #0]
 8012aaa:	015a      	lsls	r2, r3, #5
 8012aac:	693b      	ldr	r3, [r7, #16]
 8012aae:	4413      	add	r3, r2
 8012ab0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012ab4:	681b      	ldr	r3, [r3, #0]
 8012ab6:	683a      	ldr	r2, [r7, #0]
 8012ab8:	7812      	ldrb	r2, [r2, #0]
 8012aba:	0151      	lsls	r1, r2, #5
 8012abc:	693a      	ldr	r2, [r7, #16]
 8012abe:	440a      	add	r2, r1
 8012ac0:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012ac4:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8012ac8:	6013      	str	r3, [r2, #0]
 8012aca:	68fb      	ldr	r3, [r7, #12]
 8012acc:	3301      	adds	r3, #1
 8012ace:	60fb      	str	r3, [r7, #12]
 8012ad0:	68fb      	ldr	r3, [r7, #12]
 8012ad2:	f242 7210 	movw	r2, #10000	@ 0x2710
 8012ad6:	4293      	cmp	r3, r2
 8012ad8:	d902      	bls.n	8012ae0 <USB_EPStopXfer+0x12c>
 8012ada:	2301      	movs	r3, #1
 8012adc:	75fb      	strb	r3, [r7, #23]
 8012ade:	e00c      	b.n	8012afa <USB_EPStopXfer+0x146>
 8012ae0:	683b      	ldr	r3, [r7, #0]
 8012ae2:	781b      	ldrb	r3, [r3, #0]
 8012ae4:	015a      	lsls	r2, r3, #5
 8012ae6:	693b      	ldr	r3, [r7, #16]
 8012ae8:	4413      	add	r3, r2
 8012aea:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012aee:	681b      	ldr	r3, [r3, #0]
 8012af0:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8012af4:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8012af8:	d0e7      	beq.n	8012aca <USB_EPStopXfer+0x116>
 8012afa:	7dfb      	ldrb	r3, [r7, #23]
 8012afc:	4618      	mov	r0, r3
 8012afe:	371c      	adds	r7, #28
 8012b00:	46bd      	mov	sp, r7
 8012b02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012b06:	4770      	bx	lr

08012b08 <USB_WritePacket>:
 8012b08:	b480      	push	{r7}
 8012b0a:	b089      	sub	sp, #36	@ 0x24
 8012b0c:	af00      	add	r7, sp, #0
 8012b0e:	60f8      	str	r0, [r7, #12]
 8012b10:	60b9      	str	r1, [r7, #8]
 8012b12:	4611      	mov	r1, r2
 8012b14:	461a      	mov	r2, r3
 8012b16:	460b      	mov	r3, r1
 8012b18:	71fb      	strb	r3, [r7, #7]
 8012b1a:	4613      	mov	r3, r2
 8012b1c:	80bb      	strh	r3, [r7, #4]
 8012b1e:	68fb      	ldr	r3, [r7, #12]
 8012b20:	617b      	str	r3, [r7, #20]
 8012b22:	68bb      	ldr	r3, [r7, #8]
 8012b24:	61fb      	str	r3, [r7, #28]
 8012b26:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8012b2a:	2b00      	cmp	r3, #0
 8012b2c:	d123      	bne.n	8012b76 <USB_WritePacket+0x6e>
 8012b2e:	88bb      	ldrh	r3, [r7, #4]
 8012b30:	3303      	adds	r3, #3
 8012b32:	089b      	lsrs	r3, r3, #2
 8012b34:	613b      	str	r3, [r7, #16]
 8012b36:	2300      	movs	r3, #0
 8012b38:	61bb      	str	r3, [r7, #24]
 8012b3a:	e018      	b.n	8012b6e <USB_WritePacket+0x66>
 8012b3c:	79fb      	ldrb	r3, [r7, #7]
 8012b3e:	031a      	lsls	r2, r3, #12
 8012b40:	697b      	ldr	r3, [r7, #20]
 8012b42:	4413      	add	r3, r2
 8012b44:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8012b48:	461a      	mov	r2, r3
 8012b4a:	69fb      	ldr	r3, [r7, #28]
 8012b4c:	681b      	ldr	r3, [r3, #0]
 8012b4e:	6013      	str	r3, [r2, #0]
 8012b50:	69fb      	ldr	r3, [r7, #28]
 8012b52:	3301      	adds	r3, #1
 8012b54:	61fb      	str	r3, [r7, #28]
 8012b56:	69fb      	ldr	r3, [r7, #28]
 8012b58:	3301      	adds	r3, #1
 8012b5a:	61fb      	str	r3, [r7, #28]
 8012b5c:	69fb      	ldr	r3, [r7, #28]
 8012b5e:	3301      	adds	r3, #1
 8012b60:	61fb      	str	r3, [r7, #28]
 8012b62:	69fb      	ldr	r3, [r7, #28]
 8012b64:	3301      	adds	r3, #1
 8012b66:	61fb      	str	r3, [r7, #28]
 8012b68:	69bb      	ldr	r3, [r7, #24]
 8012b6a:	3301      	adds	r3, #1
 8012b6c:	61bb      	str	r3, [r7, #24]
 8012b6e:	69ba      	ldr	r2, [r7, #24]
 8012b70:	693b      	ldr	r3, [r7, #16]
 8012b72:	429a      	cmp	r2, r3
 8012b74:	d3e2      	bcc.n	8012b3c <USB_WritePacket+0x34>
 8012b76:	2300      	movs	r3, #0
 8012b78:	4618      	mov	r0, r3
 8012b7a:	3724      	adds	r7, #36	@ 0x24
 8012b7c:	46bd      	mov	sp, r7
 8012b7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012b82:	4770      	bx	lr

08012b84 <USB_ReadPacket>:
 8012b84:	b480      	push	{r7}
 8012b86:	b08b      	sub	sp, #44	@ 0x2c
 8012b88:	af00      	add	r7, sp, #0
 8012b8a:	60f8      	str	r0, [r7, #12]
 8012b8c:	60b9      	str	r1, [r7, #8]
 8012b8e:	4613      	mov	r3, r2
 8012b90:	80fb      	strh	r3, [r7, #6]
 8012b92:	68fb      	ldr	r3, [r7, #12]
 8012b94:	61bb      	str	r3, [r7, #24]
 8012b96:	68bb      	ldr	r3, [r7, #8]
 8012b98:	627b      	str	r3, [r7, #36]	@ 0x24
 8012b9a:	88fb      	ldrh	r3, [r7, #6]
 8012b9c:	089b      	lsrs	r3, r3, #2
 8012b9e:	b29b      	uxth	r3, r3
 8012ba0:	617b      	str	r3, [r7, #20]
 8012ba2:	88fb      	ldrh	r3, [r7, #6]
 8012ba4:	f003 0303 	and.w	r3, r3, #3
 8012ba8:	83fb      	strh	r3, [r7, #30]
 8012baa:	2300      	movs	r3, #0
 8012bac:	623b      	str	r3, [r7, #32]
 8012bae:	e014      	b.n	8012bda <USB_ReadPacket+0x56>
 8012bb0:	69bb      	ldr	r3, [r7, #24]
 8012bb2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8012bb6:	681a      	ldr	r2, [r3, #0]
 8012bb8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012bba:	601a      	str	r2, [r3, #0]
 8012bbc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012bbe:	3301      	adds	r3, #1
 8012bc0:	627b      	str	r3, [r7, #36]	@ 0x24
 8012bc2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012bc4:	3301      	adds	r3, #1
 8012bc6:	627b      	str	r3, [r7, #36]	@ 0x24
 8012bc8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012bca:	3301      	adds	r3, #1
 8012bcc:	627b      	str	r3, [r7, #36]	@ 0x24
 8012bce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012bd0:	3301      	adds	r3, #1
 8012bd2:	627b      	str	r3, [r7, #36]	@ 0x24
 8012bd4:	6a3b      	ldr	r3, [r7, #32]
 8012bd6:	3301      	adds	r3, #1
 8012bd8:	623b      	str	r3, [r7, #32]
 8012bda:	6a3a      	ldr	r2, [r7, #32]
 8012bdc:	697b      	ldr	r3, [r7, #20]
 8012bde:	429a      	cmp	r2, r3
 8012be0:	d3e6      	bcc.n	8012bb0 <USB_ReadPacket+0x2c>
 8012be2:	8bfb      	ldrh	r3, [r7, #30]
 8012be4:	2b00      	cmp	r3, #0
 8012be6:	d01e      	beq.n	8012c26 <USB_ReadPacket+0xa2>
 8012be8:	2300      	movs	r3, #0
 8012bea:	623b      	str	r3, [r7, #32]
 8012bec:	69bb      	ldr	r3, [r7, #24]
 8012bee:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8012bf2:	461a      	mov	r2, r3
 8012bf4:	f107 0310 	add.w	r3, r7, #16
 8012bf8:	6812      	ldr	r2, [r2, #0]
 8012bfa:	601a      	str	r2, [r3, #0]
 8012bfc:	693a      	ldr	r2, [r7, #16]
 8012bfe:	6a3b      	ldr	r3, [r7, #32]
 8012c00:	b2db      	uxtb	r3, r3
 8012c02:	00db      	lsls	r3, r3, #3
 8012c04:	fa22 f303 	lsr.w	r3, r2, r3
 8012c08:	b2da      	uxtb	r2, r3
 8012c0a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012c0c:	701a      	strb	r2, [r3, #0]
 8012c0e:	6a3b      	ldr	r3, [r7, #32]
 8012c10:	3301      	adds	r3, #1
 8012c12:	623b      	str	r3, [r7, #32]
 8012c14:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012c16:	3301      	adds	r3, #1
 8012c18:	627b      	str	r3, [r7, #36]	@ 0x24
 8012c1a:	8bfb      	ldrh	r3, [r7, #30]
 8012c1c:	3b01      	subs	r3, #1
 8012c1e:	83fb      	strh	r3, [r7, #30]
 8012c20:	8bfb      	ldrh	r3, [r7, #30]
 8012c22:	2b00      	cmp	r3, #0
 8012c24:	d1ea      	bne.n	8012bfc <USB_ReadPacket+0x78>
 8012c26:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012c28:	4618      	mov	r0, r3
 8012c2a:	372c      	adds	r7, #44	@ 0x2c
 8012c2c:	46bd      	mov	sp, r7
 8012c2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c32:	4770      	bx	lr

08012c34 <USB_EPSetStall>:
 8012c34:	b480      	push	{r7}
 8012c36:	b085      	sub	sp, #20
 8012c38:	af00      	add	r7, sp, #0
 8012c3a:	6078      	str	r0, [r7, #4]
 8012c3c:	6039      	str	r1, [r7, #0]
 8012c3e:	687b      	ldr	r3, [r7, #4]
 8012c40:	60fb      	str	r3, [r7, #12]
 8012c42:	683b      	ldr	r3, [r7, #0]
 8012c44:	781b      	ldrb	r3, [r3, #0]
 8012c46:	60bb      	str	r3, [r7, #8]
 8012c48:	683b      	ldr	r3, [r7, #0]
 8012c4a:	785b      	ldrb	r3, [r3, #1]
 8012c4c:	2b01      	cmp	r3, #1
 8012c4e:	d12c      	bne.n	8012caa <USB_EPSetStall+0x76>
 8012c50:	68bb      	ldr	r3, [r7, #8]
 8012c52:	015a      	lsls	r2, r3, #5
 8012c54:	68fb      	ldr	r3, [r7, #12]
 8012c56:	4413      	add	r3, r2
 8012c58:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012c5c:	681b      	ldr	r3, [r3, #0]
 8012c5e:	2b00      	cmp	r3, #0
 8012c60:	db12      	blt.n	8012c88 <USB_EPSetStall+0x54>
 8012c62:	68bb      	ldr	r3, [r7, #8]
 8012c64:	2b00      	cmp	r3, #0
 8012c66:	d00f      	beq.n	8012c88 <USB_EPSetStall+0x54>
 8012c68:	68bb      	ldr	r3, [r7, #8]
 8012c6a:	015a      	lsls	r2, r3, #5
 8012c6c:	68fb      	ldr	r3, [r7, #12]
 8012c6e:	4413      	add	r3, r2
 8012c70:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012c74:	681b      	ldr	r3, [r3, #0]
 8012c76:	68ba      	ldr	r2, [r7, #8]
 8012c78:	0151      	lsls	r1, r2, #5
 8012c7a:	68fa      	ldr	r2, [r7, #12]
 8012c7c:	440a      	add	r2, r1
 8012c7e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012c82:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8012c86:	6013      	str	r3, [r2, #0]
 8012c88:	68bb      	ldr	r3, [r7, #8]
 8012c8a:	015a      	lsls	r2, r3, #5
 8012c8c:	68fb      	ldr	r3, [r7, #12]
 8012c8e:	4413      	add	r3, r2
 8012c90:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012c94:	681b      	ldr	r3, [r3, #0]
 8012c96:	68ba      	ldr	r2, [r7, #8]
 8012c98:	0151      	lsls	r1, r2, #5
 8012c9a:	68fa      	ldr	r2, [r7, #12]
 8012c9c:	440a      	add	r2, r1
 8012c9e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012ca2:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8012ca6:	6013      	str	r3, [r2, #0]
 8012ca8:	e02b      	b.n	8012d02 <USB_EPSetStall+0xce>
 8012caa:	68bb      	ldr	r3, [r7, #8]
 8012cac:	015a      	lsls	r2, r3, #5
 8012cae:	68fb      	ldr	r3, [r7, #12]
 8012cb0:	4413      	add	r3, r2
 8012cb2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012cb6:	681b      	ldr	r3, [r3, #0]
 8012cb8:	2b00      	cmp	r3, #0
 8012cba:	db12      	blt.n	8012ce2 <USB_EPSetStall+0xae>
 8012cbc:	68bb      	ldr	r3, [r7, #8]
 8012cbe:	2b00      	cmp	r3, #0
 8012cc0:	d00f      	beq.n	8012ce2 <USB_EPSetStall+0xae>
 8012cc2:	68bb      	ldr	r3, [r7, #8]
 8012cc4:	015a      	lsls	r2, r3, #5
 8012cc6:	68fb      	ldr	r3, [r7, #12]
 8012cc8:	4413      	add	r3, r2
 8012cca:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012cce:	681b      	ldr	r3, [r3, #0]
 8012cd0:	68ba      	ldr	r2, [r7, #8]
 8012cd2:	0151      	lsls	r1, r2, #5
 8012cd4:	68fa      	ldr	r2, [r7, #12]
 8012cd6:	440a      	add	r2, r1
 8012cd8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012cdc:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8012ce0:	6013      	str	r3, [r2, #0]
 8012ce2:	68bb      	ldr	r3, [r7, #8]
 8012ce4:	015a      	lsls	r2, r3, #5
 8012ce6:	68fb      	ldr	r3, [r7, #12]
 8012ce8:	4413      	add	r3, r2
 8012cea:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012cee:	681b      	ldr	r3, [r3, #0]
 8012cf0:	68ba      	ldr	r2, [r7, #8]
 8012cf2:	0151      	lsls	r1, r2, #5
 8012cf4:	68fa      	ldr	r2, [r7, #12]
 8012cf6:	440a      	add	r2, r1
 8012cf8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012cfc:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8012d00:	6013      	str	r3, [r2, #0]
 8012d02:	2300      	movs	r3, #0
 8012d04:	4618      	mov	r0, r3
 8012d06:	3714      	adds	r7, #20
 8012d08:	46bd      	mov	sp, r7
 8012d0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012d0e:	4770      	bx	lr

08012d10 <USB_EPClearStall>:
 8012d10:	b480      	push	{r7}
 8012d12:	b085      	sub	sp, #20
 8012d14:	af00      	add	r7, sp, #0
 8012d16:	6078      	str	r0, [r7, #4]
 8012d18:	6039      	str	r1, [r7, #0]
 8012d1a:	687b      	ldr	r3, [r7, #4]
 8012d1c:	60fb      	str	r3, [r7, #12]
 8012d1e:	683b      	ldr	r3, [r7, #0]
 8012d20:	781b      	ldrb	r3, [r3, #0]
 8012d22:	60bb      	str	r3, [r7, #8]
 8012d24:	683b      	ldr	r3, [r7, #0]
 8012d26:	785b      	ldrb	r3, [r3, #1]
 8012d28:	2b01      	cmp	r3, #1
 8012d2a:	d128      	bne.n	8012d7e <USB_EPClearStall+0x6e>
 8012d2c:	68bb      	ldr	r3, [r7, #8]
 8012d2e:	015a      	lsls	r2, r3, #5
 8012d30:	68fb      	ldr	r3, [r7, #12]
 8012d32:	4413      	add	r3, r2
 8012d34:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012d38:	681b      	ldr	r3, [r3, #0]
 8012d3a:	68ba      	ldr	r2, [r7, #8]
 8012d3c:	0151      	lsls	r1, r2, #5
 8012d3e:	68fa      	ldr	r2, [r7, #12]
 8012d40:	440a      	add	r2, r1
 8012d42:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012d46:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8012d4a:	6013      	str	r3, [r2, #0]
 8012d4c:	683b      	ldr	r3, [r7, #0]
 8012d4e:	791b      	ldrb	r3, [r3, #4]
 8012d50:	2b03      	cmp	r3, #3
 8012d52:	d003      	beq.n	8012d5c <USB_EPClearStall+0x4c>
 8012d54:	683b      	ldr	r3, [r7, #0]
 8012d56:	791b      	ldrb	r3, [r3, #4]
 8012d58:	2b02      	cmp	r3, #2
 8012d5a:	d138      	bne.n	8012dce <USB_EPClearStall+0xbe>
 8012d5c:	68bb      	ldr	r3, [r7, #8]
 8012d5e:	015a      	lsls	r2, r3, #5
 8012d60:	68fb      	ldr	r3, [r7, #12]
 8012d62:	4413      	add	r3, r2
 8012d64:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012d68:	681b      	ldr	r3, [r3, #0]
 8012d6a:	68ba      	ldr	r2, [r7, #8]
 8012d6c:	0151      	lsls	r1, r2, #5
 8012d6e:	68fa      	ldr	r2, [r7, #12]
 8012d70:	440a      	add	r2, r1
 8012d72:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012d76:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8012d7a:	6013      	str	r3, [r2, #0]
 8012d7c:	e027      	b.n	8012dce <USB_EPClearStall+0xbe>
 8012d7e:	68bb      	ldr	r3, [r7, #8]
 8012d80:	015a      	lsls	r2, r3, #5
 8012d82:	68fb      	ldr	r3, [r7, #12]
 8012d84:	4413      	add	r3, r2
 8012d86:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012d8a:	681b      	ldr	r3, [r3, #0]
 8012d8c:	68ba      	ldr	r2, [r7, #8]
 8012d8e:	0151      	lsls	r1, r2, #5
 8012d90:	68fa      	ldr	r2, [r7, #12]
 8012d92:	440a      	add	r2, r1
 8012d94:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012d98:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8012d9c:	6013      	str	r3, [r2, #0]
 8012d9e:	683b      	ldr	r3, [r7, #0]
 8012da0:	791b      	ldrb	r3, [r3, #4]
 8012da2:	2b03      	cmp	r3, #3
 8012da4:	d003      	beq.n	8012dae <USB_EPClearStall+0x9e>
 8012da6:	683b      	ldr	r3, [r7, #0]
 8012da8:	791b      	ldrb	r3, [r3, #4]
 8012daa:	2b02      	cmp	r3, #2
 8012dac:	d10f      	bne.n	8012dce <USB_EPClearStall+0xbe>
 8012dae:	68bb      	ldr	r3, [r7, #8]
 8012db0:	015a      	lsls	r2, r3, #5
 8012db2:	68fb      	ldr	r3, [r7, #12]
 8012db4:	4413      	add	r3, r2
 8012db6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012dba:	681b      	ldr	r3, [r3, #0]
 8012dbc:	68ba      	ldr	r2, [r7, #8]
 8012dbe:	0151      	lsls	r1, r2, #5
 8012dc0:	68fa      	ldr	r2, [r7, #12]
 8012dc2:	440a      	add	r2, r1
 8012dc4:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012dc8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8012dcc:	6013      	str	r3, [r2, #0]
 8012dce:	2300      	movs	r3, #0
 8012dd0:	4618      	mov	r0, r3
 8012dd2:	3714      	adds	r7, #20
 8012dd4:	46bd      	mov	sp, r7
 8012dd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012dda:	4770      	bx	lr

08012ddc <USB_SetDevAddress>:
 8012ddc:	b480      	push	{r7}
 8012dde:	b085      	sub	sp, #20
 8012de0:	af00      	add	r7, sp, #0
 8012de2:	6078      	str	r0, [r7, #4]
 8012de4:	460b      	mov	r3, r1
 8012de6:	70fb      	strb	r3, [r7, #3]
 8012de8:	687b      	ldr	r3, [r7, #4]
 8012dea:	60fb      	str	r3, [r7, #12]
 8012dec:	68fb      	ldr	r3, [r7, #12]
 8012dee:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012df2:	681b      	ldr	r3, [r3, #0]
 8012df4:	68fa      	ldr	r2, [r7, #12]
 8012df6:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8012dfa:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8012dfe:	6013      	str	r3, [r2, #0]
 8012e00:	68fb      	ldr	r3, [r7, #12]
 8012e02:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012e06:	681a      	ldr	r2, [r3, #0]
 8012e08:	78fb      	ldrb	r3, [r7, #3]
 8012e0a:	011b      	lsls	r3, r3, #4
 8012e0c:	f403 63fe 	and.w	r3, r3, #2032	@ 0x7f0
 8012e10:	68f9      	ldr	r1, [r7, #12]
 8012e12:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8012e16:	4313      	orrs	r3, r2
 8012e18:	600b      	str	r3, [r1, #0]
 8012e1a:	2300      	movs	r3, #0
 8012e1c:	4618      	mov	r0, r3
 8012e1e:	3714      	adds	r7, #20
 8012e20:	46bd      	mov	sp, r7
 8012e22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012e26:	4770      	bx	lr

08012e28 <USB_DevConnect>:
 8012e28:	b480      	push	{r7}
 8012e2a:	b085      	sub	sp, #20
 8012e2c:	af00      	add	r7, sp, #0
 8012e2e:	6078      	str	r0, [r7, #4]
 8012e30:	687b      	ldr	r3, [r7, #4]
 8012e32:	60fb      	str	r3, [r7, #12]
 8012e34:	68fb      	ldr	r3, [r7, #12]
 8012e36:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8012e3a:	681b      	ldr	r3, [r3, #0]
 8012e3c:	68fa      	ldr	r2, [r7, #12]
 8012e3e:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 8012e42:	f023 0303 	bic.w	r3, r3, #3
 8012e46:	6013      	str	r3, [r2, #0]
 8012e48:	68fb      	ldr	r3, [r7, #12]
 8012e4a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012e4e:	685b      	ldr	r3, [r3, #4]
 8012e50:	68fa      	ldr	r2, [r7, #12]
 8012e52:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8012e56:	f023 0302 	bic.w	r3, r3, #2
 8012e5a:	6053      	str	r3, [r2, #4]
 8012e5c:	2300      	movs	r3, #0
 8012e5e:	4618      	mov	r0, r3
 8012e60:	3714      	adds	r7, #20
 8012e62:	46bd      	mov	sp, r7
 8012e64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012e68:	4770      	bx	lr

08012e6a <USB_DevDisconnect>:
 8012e6a:	b480      	push	{r7}
 8012e6c:	b085      	sub	sp, #20
 8012e6e:	af00      	add	r7, sp, #0
 8012e70:	6078      	str	r0, [r7, #4]
 8012e72:	687b      	ldr	r3, [r7, #4]
 8012e74:	60fb      	str	r3, [r7, #12]
 8012e76:	68fb      	ldr	r3, [r7, #12]
 8012e78:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8012e7c:	681b      	ldr	r3, [r3, #0]
 8012e7e:	68fa      	ldr	r2, [r7, #12]
 8012e80:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 8012e84:	f023 0303 	bic.w	r3, r3, #3
 8012e88:	6013      	str	r3, [r2, #0]
 8012e8a:	68fb      	ldr	r3, [r7, #12]
 8012e8c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012e90:	685b      	ldr	r3, [r3, #4]
 8012e92:	68fa      	ldr	r2, [r7, #12]
 8012e94:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8012e98:	f043 0302 	orr.w	r3, r3, #2
 8012e9c:	6053      	str	r3, [r2, #4]
 8012e9e:	2300      	movs	r3, #0
 8012ea0:	4618      	mov	r0, r3
 8012ea2:	3714      	adds	r7, #20
 8012ea4:	46bd      	mov	sp, r7
 8012ea6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012eaa:	4770      	bx	lr

08012eac <USB_ReadInterrupts>:
 8012eac:	b480      	push	{r7}
 8012eae:	b085      	sub	sp, #20
 8012eb0:	af00      	add	r7, sp, #0
 8012eb2:	6078      	str	r0, [r7, #4]
 8012eb4:	687b      	ldr	r3, [r7, #4]
 8012eb6:	695b      	ldr	r3, [r3, #20]
 8012eb8:	60fb      	str	r3, [r7, #12]
 8012eba:	687b      	ldr	r3, [r7, #4]
 8012ebc:	699b      	ldr	r3, [r3, #24]
 8012ebe:	68fa      	ldr	r2, [r7, #12]
 8012ec0:	4013      	ands	r3, r2
 8012ec2:	60fb      	str	r3, [r7, #12]
 8012ec4:	68fb      	ldr	r3, [r7, #12]
 8012ec6:	4618      	mov	r0, r3
 8012ec8:	3714      	adds	r7, #20
 8012eca:	46bd      	mov	sp, r7
 8012ecc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012ed0:	4770      	bx	lr

08012ed2 <USB_ReadDevAllOutEpInterrupt>:
 8012ed2:	b480      	push	{r7}
 8012ed4:	b085      	sub	sp, #20
 8012ed6:	af00      	add	r7, sp, #0
 8012ed8:	6078      	str	r0, [r7, #4]
 8012eda:	687b      	ldr	r3, [r7, #4]
 8012edc:	60fb      	str	r3, [r7, #12]
 8012ede:	68fb      	ldr	r3, [r7, #12]
 8012ee0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012ee4:	699b      	ldr	r3, [r3, #24]
 8012ee6:	60bb      	str	r3, [r7, #8]
 8012ee8:	68fb      	ldr	r3, [r7, #12]
 8012eea:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012eee:	69db      	ldr	r3, [r3, #28]
 8012ef0:	68ba      	ldr	r2, [r7, #8]
 8012ef2:	4013      	ands	r3, r2
 8012ef4:	60bb      	str	r3, [r7, #8]
 8012ef6:	68bb      	ldr	r3, [r7, #8]
 8012ef8:	0c1b      	lsrs	r3, r3, #16
 8012efa:	4618      	mov	r0, r3
 8012efc:	3714      	adds	r7, #20
 8012efe:	46bd      	mov	sp, r7
 8012f00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012f04:	4770      	bx	lr

08012f06 <USB_ReadDevAllInEpInterrupt>:
 8012f06:	b480      	push	{r7}
 8012f08:	b085      	sub	sp, #20
 8012f0a:	af00      	add	r7, sp, #0
 8012f0c:	6078      	str	r0, [r7, #4]
 8012f0e:	687b      	ldr	r3, [r7, #4]
 8012f10:	60fb      	str	r3, [r7, #12]
 8012f12:	68fb      	ldr	r3, [r7, #12]
 8012f14:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012f18:	699b      	ldr	r3, [r3, #24]
 8012f1a:	60bb      	str	r3, [r7, #8]
 8012f1c:	68fb      	ldr	r3, [r7, #12]
 8012f1e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012f22:	69db      	ldr	r3, [r3, #28]
 8012f24:	68ba      	ldr	r2, [r7, #8]
 8012f26:	4013      	ands	r3, r2
 8012f28:	60bb      	str	r3, [r7, #8]
 8012f2a:	68bb      	ldr	r3, [r7, #8]
 8012f2c:	b29b      	uxth	r3, r3
 8012f2e:	4618      	mov	r0, r3
 8012f30:	3714      	adds	r7, #20
 8012f32:	46bd      	mov	sp, r7
 8012f34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012f38:	4770      	bx	lr

08012f3a <USB_ReadDevOutEPInterrupt>:
 8012f3a:	b480      	push	{r7}
 8012f3c:	b085      	sub	sp, #20
 8012f3e:	af00      	add	r7, sp, #0
 8012f40:	6078      	str	r0, [r7, #4]
 8012f42:	460b      	mov	r3, r1
 8012f44:	70fb      	strb	r3, [r7, #3]
 8012f46:	687b      	ldr	r3, [r7, #4]
 8012f48:	60fb      	str	r3, [r7, #12]
 8012f4a:	78fb      	ldrb	r3, [r7, #3]
 8012f4c:	015a      	lsls	r2, r3, #5
 8012f4e:	68fb      	ldr	r3, [r7, #12]
 8012f50:	4413      	add	r3, r2
 8012f52:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012f56:	689b      	ldr	r3, [r3, #8]
 8012f58:	60bb      	str	r3, [r7, #8]
 8012f5a:	68fb      	ldr	r3, [r7, #12]
 8012f5c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012f60:	695b      	ldr	r3, [r3, #20]
 8012f62:	68ba      	ldr	r2, [r7, #8]
 8012f64:	4013      	ands	r3, r2
 8012f66:	60bb      	str	r3, [r7, #8]
 8012f68:	68bb      	ldr	r3, [r7, #8]
 8012f6a:	4618      	mov	r0, r3
 8012f6c:	3714      	adds	r7, #20
 8012f6e:	46bd      	mov	sp, r7
 8012f70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012f74:	4770      	bx	lr

08012f76 <USB_ReadDevInEPInterrupt>:
 8012f76:	b480      	push	{r7}
 8012f78:	b087      	sub	sp, #28
 8012f7a:	af00      	add	r7, sp, #0
 8012f7c:	6078      	str	r0, [r7, #4]
 8012f7e:	460b      	mov	r3, r1
 8012f80:	70fb      	strb	r3, [r7, #3]
 8012f82:	687b      	ldr	r3, [r7, #4]
 8012f84:	617b      	str	r3, [r7, #20]
 8012f86:	697b      	ldr	r3, [r7, #20]
 8012f88:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012f8c:	691b      	ldr	r3, [r3, #16]
 8012f8e:	613b      	str	r3, [r7, #16]
 8012f90:	697b      	ldr	r3, [r7, #20]
 8012f92:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012f96:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012f98:	60fb      	str	r3, [r7, #12]
 8012f9a:	78fb      	ldrb	r3, [r7, #3]
 8012f9c:	f003 030f 	and.w	r3, r3, #15
 8012fa0:	68fa      	ldr	r2, [r7, #12]
 8012fa2:	fa22 f303 	lsr.w	r3, r2, r3
 8012fa6:	01db      	lsls	r3, r3, #7
 8012fa8:	b2db      	uxtb	r3, r3
 8012faa:	693a      	ldr	r2, [r7, #16]
 8012fac:	4313      	orrs	r3, r2
 8012fae:	613b      	str	r3, [r7, #16]
 8012fb0:	78fb      	ldrb	r3, [r7, #3]
 8012fb2:	015a      	lsls	r2, r3, #5
 8012fb4:	697b      	ldr	r3, [r7, #20]
 8012fb6:	4413      	add	r3, r2
 8012fb8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012fbc:	689b      	ldr	r3, [r3, #8]
 8012fbe:	693a      	ldr	r2, [r7, #16]
 8012fc0:	4013      	ands	r3, r2
 8012fc2:	60bb      	str	r3, [r7, #8]
 8012fc4:	68bb      	ldr	r3, [r7, #8]
 8012fc6:	4618      	mov	r0, r3
 8012fc8:	371c      	adds	r7, #28
 8012fca:	46bd      	mov	sp, r7
 8012fcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012fd0:	4770      	bx	lr

08012fd2 <USB_GetMode>:
 8012fd2:	b480      	push	{r7}
 8012fd4:	b083      	sub	sp, #12
 8012fd6:	af00      	add	r7, sp, #0
 8012fd8:	6078      	str	r0, [r7, #4]
 8012fda:	687b      	ldr	r3, [r7, #4]
 8012fdc:	695b      	ldr	r3, [r3, #20]
 8012fde:	f003 0301 	and.w	r3, r3, #1
 8012fe2:	4618      	mov	r0, r3
 8012fe4:	370c      	adds	r7, #12
 8012fe6:	46bd      	mov	sp, r7
 8012fe8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012fec:	4770      	bx	lr
	...

08012ff0 <USB_ActivateSetup>:
 8012ff0:	b480      	push	{r7}
 8012ff2:	b085      	sub	sp, #20
 8012ff4:	af00      	add	r7, sp, #0
 8012ff6:	6078      	str	r0, [r7, #4]
 8012ff8:	687b      	ldr	r3, [r7, #4]
 8012ffa:	60fb      	str	r3, [r7, #12]
 8012ffc:	68fb      	ldr	r3, [r7, #12]
 8012ffe:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013002:	681a      	ldr	r2, [r3, #0]
 8013004:	68fb      	ldr	r3, [r7, #12]
 8013006:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801300a:	4619      	mov	r1, r3
 801300c:	4b09      	ldr	r3, [pc, #36]	@ (8013034 <USB_ActivateSetup+0x44>)
 801300e:	4013      	ands	r3, r2
 8013010:	600b      	str	r3, [r1, #0]
 8013012:	68fb      	ldr	r3, [r7, #12]
 8013014:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013018:	685b      	ldr	r3, [r3, #4]
 801301a:	68fa      	ldr	r2, [r7, #12]
 801301c:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8013020:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8013024:	6053      	str	r3, [r2, #4]
 8013026:	2300      	movs	r3, #0
 8013028:	4618      	mov	r0, r3
 801302a:	3714      	adds	r7, #20
 801302c:	46bd      	mov	sp, r7
 801302e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013032:	4770      	bx	lr
 8013034:	fffff800 	.word	0xfffff800

08013038 <USB_EP0_OutStart>:
 8013038:	b480      	push	{r7}
 801303a:	b087      	sub	sp, #28
 801303c:	af00      	add	r7, sp, #0
 801303e:	60f8      	str	r0, [r7, #12]
 8013040:	460b      	mov	r3, r1
 8013042:	607a      	str	r2, [r7, #4]
 8013044:	72fb      	strb	r3, [r7, #11]
 8013046:	68fb      	ldr	r3, [r7, #12]
 8013048:	617b      	str	r3, [r7, #20]
 801304a:	68fb      	ldr	r3, [r7, #12]
 801304c:	333c      	adds	r3, #60	@ 0x3c
 801304e:	3304      	adds	r3, #4
 8013050:	681b      	ldr	r3, [r3, #0]
 8013052:	613b      	str	r3, [r7, #16]
 8013054:	693b      	ldr	r3, [r7, #16]
 8013056:	4a26      	ldr	r2, [pc, #152]	@ (80130f0 <USB_EP0_OutStart+0xb8>)
 8013058:	4293      	cmp	r3, r2
 801305a:	d90a      	bls.n	8013072 <USB_EP0_OutStart+0x3a>
 801305c:	697b      	ldr	r3, [r7, #20]
 801305e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013062:	681b      	ldr	r3, [r3, #0]
 8013064:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8013068:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 801306c:	d101      	bne.n	8013072 <USB_EP0_OutStart+0x3a>
 801306e:	2300      	movs	r3, #0
 8013070:	e037      	b.n	80130e2 <USB_EP0_OutStart+0xaa>
 8013072:	697b      	ldr	r3, [r7, #20]
 8013074:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013078:	461a      	mov	r2, r3
 801307a:	2300      	movs	r3, #0
 801307c:	6113      	str	r3, [r2, #16]
 801307e:	697b      	ldr	r3, [r7, #20]
 8013080:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013084:	691b      	ldr	r3, [r3, #16]
 8013086:	697a      	ldr	r2, [r7, #20]
 8013088:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 801308c:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8013090:	6113      	str	r3, [r2, #16]
 8013092:	697b      	ldr	r3, [r7, #20]
 8013094:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013098:	691b      	ldr	r3, [r3, #16]
 801309a:	697a      	ldr	r2, [r7, #20]
 801309c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80130a0:	f043 0318 	orr.w	r3, r3, #24
 80130a4:	6113      	str	r3, [r2, #16]
 80130a6:	697b      	ldr	r3, [r7, #20]
 80130a8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80130ac:	691b      	ldr	r3, [r3, #16]
 80130ae:	697a      	ldr	r2, [r7, #20]
 80130b0:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80130b4:	f043 43c0 	orr.w	r3, r3, #1610612736	@ 0x60000000
 80130b8:	6113      	str	r3, [r2, #16]
 80130ba:	7afb      	ldrb	r3, [r7, #11]
 80130bc:	2b01      	cmp	r3, #1
 80130be:	d10f      	bne.n	80130e0 <USB_EP0_OutStart+0xa8>
 80130c0:	697b      	ldr	r3, [r7, #20]
 80130c2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80130c6:	461a      	mov	r2, r3
 80130c8:	687b      	ldr	r3, [r7, #4]
 80130ca:	6153      	str	r3, [r2, #20]
 80130cc:	697b      	ldr	r3, [r7, #20]
 80130ce:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80130d2:	681b      	ldr	r3, [r3, #0]
 80130d4:	697a      	ldr	r2, [r7, #20]
 80130d6:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80130da:	f043 2380 	orr.w	r3, r3, #2147516416	@ 0x80008000
 80130de:	6013      	str	r3, [r2, #0]
 80130e0:	2300      	movs	r3, #0
 80130e2:	4618      	mov	r0, r3
 80130e4:	371c      	adds	r7, #28
 80130e6:	46bd      	mov	sp, r7
 80130e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80130ec:	4770      	bx	lr
 80130ee:	bf00      	nop
 80130f0:	4f54300a 	.word	0x4f54300a

080130f4 <USB_CoreReset>:
 80130f4:	b480      	push	{r7}
 80130f6:	b085      	sub	sp, #20
 80130f8:	af00      	add	r7, sp, #0
 80130fa:	6078      	str	r0, [r7, #4]
 80130fc:	2300      	movs	r3, #0
 80130fe:	60fb      	str	r3, [r7, #12]
 8013100:	68fb      	ldr	r3, [r7, #12]
 8013102:	3301      	adds	r3, #1
 8013104:	60fb      	str	r3, [r7, #12]
 8013106:	68fb      	ldr	r3, [r7, #12]
 8013108:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 801310c:	d901      	bls.n	8013112 <USB_CoreReset+0x1e>
 801310e:	2303      	movs	r3, #3
 8013110:	e01b      	b.n	801314a <USB_CoreReset+0x56>
 8013112:	687b      	ldr	r3, [r7, #4]
 8013114:	691b      	ldr	r3, [r3, #16]
 8013116:	2b00      	cmp	r3, #0
 8013118:	daf2      	bge.n	8013100 <USB_CoreReset+0xc>
 801311a:	2300      	movs	r3, #0
 801311c:	60fb      	str	r3, [r7, #12]
 801311e:	687b      	ldr	r3, [r7, #4]
 8013120:	691b      	ldr	r3, [r3, #16]
 8013122:	f043 0201 	orr.w	r2, r3, #1
 8013126:	687b      	ldr	r3, [r7, #4]
 8013128:	611a      	str	r2, [r3, #16]
 801312a:	68fb      	ldr	r3, [r7, #12]
 801312c:	3301      	adds	r3, #1
 801312e:	60fb      	str	r3, [r7, #12]
 8013130:	68fb      	ldr	r3, [r7, #12]
 8013132:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8013136:	d901      	bls.n	801313c <USB_CoreReset+0x48>
 8013138:	2303      	movs	r3, #3
 801313a:	e006      	b.n	801314a <USB_CoreReset+0x56>
 801313c:	687b      	ldr	r3, [r7, #4]
 801313e:	691b      	ldr	r3, [r3, #16]
 8013140:	f003 0301 	and.w	r3, r3, #1
 8013144:	2b01      	cmp	r3, #1
 8013146:	d0f0      	beq.n	801312a <USB_CoreReset+0x36>
 8013148:	2300      	movs	r3, #0
 801314a:	4618      	mov	r0, r3
 801314c:	3714      	adds	r7, #20
 801314e:	46bd      	mov	sp, r7
 8013150:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013154:	4770      	bx	lr
	...

08013158 <USBD_CDC_Init>:
 8013158:	b580      	push	{r7, lr}
 801315a:	b084      	sub	sp, #16
 801315c:	af00      	add	r7, sp, #0
 801315e:	6078      	str	r0, [r7, #4]
 8013160:	460b      	mov	r3, r1
 8013162:	70fb      	strb	r3, [r7, #3]
 8013164:	f44f 7007 	mov.w	r0, #540	@ 0x21c
 8013168:	f002 fcca 	bl	8015b00 <USBD_static_malloc>
 801316c:	60f8      	str	r0, [r7, #12]
 801316e:	68fb      	ldr	r3, [r7, #12]
 8013170:	2b00      	cmp	r3, #0
 8013172:	d109      	bne.n	8013188 <USBD_CDC_Init+0x30>
 8013174:	687b      	ldr	r3, [r7, #4]
 8013176:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801317a:	687b      	ldr	r3, [r7, #4]
 801317c:	32b0      	adds	r2, #176	@ 0xb0
 801317e:	2100      	movs	r1, #0
 8013180:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8013184:	2302      	movs	r3, #2
 8013186:	e0d4      	b.n	8013332 <USBD_CDC_Init+0x1da>
 8013188:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 801318c:	2100      	movs	r1, #0
 801318e:	68f8      	ldr	r0, [r7, #12]
 8013190:	f004 f89f 	bl	80172d2 <memset>
 8013194:	687b      	ldr	r3, [r7, #4]
 8013196:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801319a:	687b      	ldr	r3, [r7, #4]
 801319c:	32b0      	adds	r2, #176	@ 0xb0
 801319e:	68f9      	ldr	r1, [r7, #12]
 80131a0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80131a4:	687b      	ldr	r3, [r7, #4]
 80131a6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80131aa:	687b      	ldr	r3, [r7, #4]
 80131ac:	32b0      	adds	r2, #176	@ 0xb0
 80131ae:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80131b2:	687b      	ldr	r3, [r7, #4]
 80131b4:	f8c3 22bc 	str.w	r2, [r3, #700]	@ 0x2bc
 80131b8:	687b      	ldr	r3, [r7, #4]
 80131ba:	7c1b      	ldrb	r3, [r3, #16]
 80131bc:	2b00      	cmp	r3, #0
 80131be:	d138      	bne.n	8013232 <USBD_CDC_Init+0xda>
 80131c0:	4b5e      	ldr	r3, [pc, #376]	@ (801333c <USBD_CDC_Init+0x1e4>)
 80131c2:	7819      	ldrb	r1, [r3, #0]
 80131c4:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80131c8:	2202      	movs	r2, #2
 80131ca:	6878      	ldr	r0, [r7, #4]
 80131cc:	f002 fb75 	bl	80158ba <USBD_LL_OpenEP>
 80131d0:	4b5a      	ldr	r3, [pc, #360]	@ (801333c <USBD_CDC_Init+0x1e4>)
 80131d2:	781b      	ldrb	r3, [r3, #0]
 80131d4:	f003 020f 	and.w	r2, r3, #15
 80131d8:	6879      	ldr	r1, [r7, #4]
 80131da:	4613      	mov	r3, r2
 80131dc:	009b      	lsls	r3, r3, #2
 80131de:	4413      	add	r3, r2
 80131e0:	009b      	lsls	r3, r3, #2
 80131e2:	440b      	add	r3, r1
 80131e4:	3324      	adds	r3, #36	@ 0x24
 80131e6:	2201      	movs	r2, #1
 80131e8:	801a      	strh	r2, [r3, #0]
 80131ea:	4b55      	ldr	r3, [pc, #340]	@ (8013340 <USBD_CDC_Init+0x1e8>)
 80131ec:	7819      	ldrb	r1, [r3, #0]
 80131ee:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80131f2:	2202      	movs	r2, #2
 80131f4:	6878      	ldr	r0, [r7, #4]
 80131f6:	f002 fb60 	bl	80158ba <USBD_LL_OpenEP>
 80131fa:	4b51      	ldr	r3, [pc, #324]	@ (8013340 <USBD_CDC_Init+0x1e8>)
 80131fc:	781b      	ldrb	r3, [r3, #0]
 80131fe:	f003 020f 	and.w	r2, r3, #15
 8013202:	6879      	ldr	r1, [r7, #4]
 8013204:	4613      	mov	r3, r2
 8013206:	009b      	lsls	r3, r3, #2
 8013208:	4413      	add	r3, r2
 801320a:	009b      	lsls	r3, r3, #2
 801320c:	440b      	add	r3, r1
 801320e:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 8013212:	2201      	movs	r2, #1
 8013214:	801a      	strh	r2, [r3, #0]
 8013216:	4b4b      	ldr	r3, [pc, #300]	@ (8013344 <USBD_CDC_Init+0x1ec>)
 8013218:	781b      	ldrb	r3, [r3, #0]
 801321a:	f003 020f 	and.w	r2, r3, #15
 801321e:	6879      	ldr	r1, [r7, #4]
 8013220:	4613      	mov	r3, r2
 8013222:	009b      	lsls	r3, r3, #2
 8013224:	4413      	add	r3, r2
 8013226:	009b      	lsls	r3, r3, #2
 8013228:	440b      	add	r3, r1
 801322a:	3326      	adds	r3, #38	@ 0x26
 801322c:	2210      	movs	r2, #16
 801322e:	801a      	strh	r2, [r3, #0]
 8013230:	e035      	b.n	801329e <USBD_CDC_Init+0x146>
 8013232:	4b42      	ldr	r3, [pc, #264]	@ (801333c <USBD_CDC_Init+0x1e4>)
 8013234:	7819      	ldrb	r1, [r3, #0]
 8013236:	2340      	movs	r3, #64	@ 0x40
 8013238:	2202      	movs	r2, #2
 801323a:	6878      	ldr	r0, [r7, #4]
 801323c:	f002 fb3d 	bl	80158ba <USBD_LL_OpenEP>
 8013240:	4b3e      	ldr	r3, [pc, #248]	@ (801333c <USBD_CDC_Init+0x1e4>)
 8013242:	781b      	ldrb	r3, [r3, #0]
 8013244:	f003 020f 	and.w	r2, r3, #15
 8013248:	6879      	ldr	r1, [r7, #4]
 801324a:	4613      	mov	r3, r2
 801324c:	009b      	lsls	r3, r3, #2
 801324e:	4413      	add	r3, r2
 8013250:	009b      	lsls	r3, r3, #2
 8013252:	440b      	add	r3, r1
 8013254:	3324      	adds	r3, #36	@ 0x24
 8013256:	2201      	movs	r2, #1
 8013258:	801a      	strh	r2, [r3, #0]
 801325a:	4b39      	ldr	r3, [pc, #228]	@ (8013340 <USBD_CDC_Init+0x1e8>)
 801325c:	7819      	ldrb	r1, [r3, #0]
 801325e:	2340      	movs	r3, #64	@ 0x40
 8013260:	2202      	movs	r2, #2
 8013262:	6878      	ldr	r0, [r7, #4]
 8013264:	f002 fb29 	bl	80158ba <USBD_LL_OpenEP>
 8013268:	4b35      	ldr	r3, [pc, #212]	@ (8013340 <USBD_CDC_Init+0x1e8>)
 801326a:	781b      	ldrb	r3, [r3, #0]
 801326c:	f003 020f 	and.w	r2, r3, #15
 8013270:	6879      	ldr	r1, [r7, #4]
 8013272:	4613      	mov	r3, r2
 8013274:	009b      	lsls	r3, r3, #2
 8013276:	4413      	add	r3, r2
 8013278:	009b      	lsls	r3, r3, #2
 801327a:	440b      	add	r3, r1
 801327c:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 8013280:	2201      	movs	r2, #1
 8013282:	801a      	strh	r2, [r3, #0]
 8013284:	4b2f      	ldr	r3, [pc, #188]	@ (8013344 <USBD_CDC_Init+0x1ec>)
 8013286:	781b      	ldrb	r3, [r3, #0]
 8013288:	f003 020f 	and.w	r2, r3, #15
 801328c:	6879      	ldr	r1, [r7, #4]
 801328e:	4613      	mov	r3, r2
 8013290:	009b      	lsls	r3, r3, #2
 8013292:	4413      	add	r3, r2
 8013294:	009b      	lsls	r3, r3, #2
 8013296:	440b      	add	r3, r1
 8013298:	3326      	adds	r3, #38	@ 0x26
 801329a:	2210      	movs	r2, #16
 801329c:	801a      	strh	r2, [r3, #0]
 801329e:	4b29      	ldr	r3, [pc, #164]	@ (8013344 <USBD_CDC_Init+0x1ec>)
 80132a0:	7819      	ldrb	r1, [r3, #0]
 80132a2:	2308      	movs	r3, #8
 80132a4:	2203      	movs	r2, #3
 80132a6:	6878      	ldr	r0, [r7, #4]
 80132a8:	f002 fb07 	bl	80158ba <USBD_LL_OpenEP>
 80132ac:	4b25      	ldr	r3, [pc, #148]	@ (8013344 <USBD_CDC_Init+0x1ec>)
 80132ae:	781b      	ldrb	r3, [r3, #0]
 80132b0:	f003 020f 	and.w	r2, r3, #15
 80132b4:	6879      	ldr	r1, [r7, #4]
 80132b6:	4613      	mov	r3, r2
 80132b8:	009b      	lsls	r3, r3, #2
 80132ba:	4413      	add	r3, r2
 80132bc:	009b      	lsls	r3, r3, #2
 80132be:	440b      	add	r3, r1
 80132c0:	3324      	adds	r3, #36	@ 0x24
 80132c2:	2201      	movs	r2, #1
 80132c4:	801a      	strh	r2, [r3, #0]
 80132c6:	68fb      	ldr	r3, [r7, #12]
 80132c8:	2200      	movs	r2, #0
 80132ca:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 80132ce:	687b      	ldr	r3, [r7, #4]
 80132d0:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80132d4:	687a      	ldr	r2, [r7, #4]
 80132d6:	33b0      	adds	r3, #176	@ 0xb0
 80132d8:	009b      	lsls	r3, r3, #2
 80132da:	4413      	add	r3, r2
 80132dc:	685b      	ldr	r3, [r3, #4]
 80132de:	681b      	ldr	r3, [r3, #0]
 80132e0:	4798      	blx	r3
 80132e2:	68fb      	ldr	r3, [r7, #12]
 80132e4:	2200      	movs	r2, #0
 80132e6:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 80132ea:	68fb      	ldr	r3, [r7, #12]
 80132ec:	2200      	movs	r2, #0
 80132ee:	f8c3 2218 	str.w	r2, [r3, #536]	@ 0x218
 80132f2:	68fb      	ldr	r3, [r7, #12]
 80132f4:	f8d3 3204 	ldr.w	r3, [r3, #516]	@ 0x204
 80132f8:	2b00      	cmp	r3, #0
 80132fa:	d101      	bne.n	8013300 <USBD_CDC_Init+0x1a8>
 80132fc:	2302      	movs	r3, #2
 80132fe:	e018      	b.n	8013332 <USBD_CDC_Init+0x1da>
 8013300:	687b      	ldr	r3, [r7, #4]
 8013302:	7c1b      	ldrb	r3, [r3, #16]
 8013304:	2b00      	cmp	r3, #0
 8013306:	d10a      	bne.n	801331e <USBD_CDC_Init+0x1c6>
 8013308:	4b0d      	ldr	r3, [pc, #52]	@ (8013340 <USBD_CDC_Init+0x1e8>)
 801330a:	7819      	ldrb	r1, [r3, #0]
 801330c:	68fb      	ldr	r3, [r7, #12]
 801330e:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8013312:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8013316:	6878      	ldr	r0, [r7, #4]
 8013318:	f002 fbbe 	bl	8015a98 <USBD_LL_PrepareReceive>
 801331c:	e008      	b.n	8013330 <USBD_CDC_Init+0x1d8>
 801331e:	4b08      	ldr	r3, [pc, #32]	@ (8013340 <USBD_CDC_Init+0x1e8>)
 8013320:	7819      	ldrb	r1, [r3, #0]
 8013322:	68fb      	ldr	r3, [r7, #12]
 8013324:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8013328:	2340      	movs	r3, #64	@ 0x40
 801332a:	6878      	ldr	r0, [r7, #4]
 801332c:	f002 fbb4 	bl	8015a98 <USBD_LL_PrepareReceive>
 8013330:	2300      	movs	r3, #0
 8013332:	4618      	mov	r0, r3
 8013334:	3710      	adds	r7, #16
 8013336:	46bd      	mov	sp, r7
 8013338:	bd80      	pop	{r7, pc}
 801333a:	bf00      	nop
 801333c:	24000097 	.word	0x24000097
 8013340:	24000098 	.word	0x24000098
 8013344:	24000099 	.word	0x24000099

08013348 <USBD_CDC_DeInit>:
 8013348:	b580      	push	{r7, lr}
 801334a:	b082      	sub	sp, #8
 801334c:	af00      	add	r7, sp, #0
 801334e:	6078      	str	r0, [r7, #4]
 8013350:	460b      	mov	r3, r1
 8013352:	70fb      	strb	r3, [r7, #3]
 8013354:	4b3a      	ldr	r3, [pc, #232]	@ (8013440 <USBD_CDC_DeInit+0xf8>)
 8013356:	781b      	ldrb	r3, [r3, #0]
 8013358:	4619      	mov	r1, r3
 801335a:	6878      	ldr	r0, [r7, #4]
 801335c:	f002 fad3 	bl	8015906 <USBD_LL_CloseEP>
 8013360:	4b37      	ldr	r3, [pc, #220]	@ (8013440 <USBD_CDC_DeInit+0xf8>)
 8013362:	781b      	ldrb	r3, [r3, #0]
 8013364:	f003 020f 	and.w	r2, r3, #15
 8013368:	6879      	ldr	r1, [r7, #4]
 801336a:	4613      	mov	r3, r2
 801336c:	009b      	lsls	r3, r3, #2
 801336e:	4413      	add	r3, r2
 8013370:	009b      	lsls	r3, r3, #2
 8013372:	440b      	add	r3, r1
 8013374:	3324      	adds	r3, #36	@ 0x24
 8013376:	2200      	movs	r2, #0
 8013378:	801a      	strh	r2, [r3, #0]
 801337a:	4b32      	ldr	r3, [pc, #200]	@ (8013444 <USBD_CDC_DeInit+0xfc>)
 801337c:	781b      	ldrb	r3, [r3, #0]
 801337e:	4619      	mov	r1, r3
 8013380:	6878      	ldr	r0, [r7, #4]
 8013382:	f002 fac0 	bl	8015906 <USBD_LL_CloseEP>
 8013386:	4b2f      	ldr	r3, [pc, #188]	@ (8013444 <USBD_CDC_DeInit+0xfc>)
 8013388:	781b      	ldrb	r3, [r3, #0]
 801338a:	f003 020f 	and.w	r2, r3, #15
 801338e:	6879      	ldr	r1, [r7, #4]
 8013390:	4613      	mov	r3, r2
 8013392:	009b      	lsls	r3, r3, #2
 8013394:	4413      	add	r3, r2
 8013396:	009b      	lsls	r3, r3, #2
 8013398:	440b      	add	r3, r1
 801339a:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 801339e:	2200      	movs	r2, #0
 80133a0:	801a      	strh	r2, [r3, #0]
 80133a2:	4b29      	ldr	r3, [pc, #164]	@ (8013448 <USBD_CDC_DeInit+0x100>)
 80133a4:	781b      	ldrb	r3, [r3, #0]
 80133a6:	4619      	mov	r1, r3
 80133a8:	6878      	ldr	r0, [r7, #4]
 80133aa:	f002 faac 	bl	8015906 <USBD_LL_CloseEP>
 80133ae:	4b26      	ldr	r3, [pc, #152]	@ (8013448 <USBD_CDC_DeInit+0x100>)
 80133b0:	781b      	ldrb	r3, [r3, #0]
 80133b2:	f003 020f 	and.w	r2, r3, #15
 80133b6:	6879      	ldr	r1, [r7, #4]
 80133b8:	4613      	mov	r3, r2
 80133ba:	009b      	lsls	r3, r3, #2
 80133bc:	4413      	add	r3, r2
 80133be:	009b      	lsls	r3, r3, #2
 80133c0:	440b      	add	r3, r1
 80133c2:	3324      	adds	r3, #36	@ 0x24
 80133c4:	2200      	movs	r2, #0
 80133c6:	801a      	strh	r2, [r3, #0]
 80133c8:	4b1f      	ldr	r3, [pc, #124]	@ (8013448 <USBD_CDC_DeInit+0x100>)
 80133ca:	781b      	ldrb	r3, [r3, #0]
 80133cc:	f003 020f 	and.w	r2, r3, #15
 80133d0:	6879      	ldr	r1, [r7, #4]
 80133d2:	4613      	mov	r3, r2
 80133d4:	009b      	lsls	r3, r3, #2
 80133d6:	4413      	add	r3, r2
 80133d8:	009b      	lsls	r3, r3, #2
 80133da:	440b      	add	r3, r1
 80133dc:	3326      	adds	r3, #38	@ 0x26
 80133de:	2200      	movs	r2, #0
 80133e0:	801a      	strh	r2, [r3, #0]
 80133e2:	687b      	ldr	r3, [r7, #4]
 80133e4:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80133e8:	687b      	ldr	r3, [r7, #4]
 80133ea:	32b0      	adds	r2, #176	@ 0xb0
 80133ec:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80133f0:	2b00      	cmp	r3, #0
 80133f2:	d01f      	beq.n	8013434 <USBD_CDC_DeInit+0xec>
 80133f4:	687b      	ldr	r3, [r7, #4]
 80133f6:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80133fa:	687a      	ldr	r2, [r7, #4]
 80133fc:	33b0      	adds	r3, #176	@ 0xb0
 80133fe:	009b      	lsls	r3, r3, #2
 8013400:	4413      	add	r3, r2
 8013402:	685b      	ldr	r3, [r3, #4]
 8013404:	685b      	ldr	r3, [r3, #4]
 8013406:	4798      	blx	r3
 8013408:	687b      	ldr	r3, [r7, #4]
 801340a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801340e:	687b      	ldr	r3, [r7, #4]
 8013410:	32b0      	adds	r2, #176	@ 0xb0
 8013412:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013416:	4618      	mov	r0, r3
 8013418:	f002 fb80 	bl	8015b1c <USBD_static_free>
 801341c:	687b      	ldr	r3, [r7, #4]
 801341e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013422:	687b      	ldr	r3, [r7, #4]
 8013424:	32b0      	adds	r2, #176	@ 0xb0
 8013426:	2100      	movs	r1, #0
 8013428:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 801342c:	687b      	ldr	r3, [r7, #4]
 801342e:	2200      	movs	r2, #0
 8013430:	f8c3 22bc 	str.w	r2, [r3, #700]	@ 0x2bc
 8013434:	2300      	movs	r3, #0
 8013436:	4618      	mov	r0, r3
 8013438:	3708      	adds	r7, #8
 801343a:	46bd      	mov	sp, r7
 801343c:	bd80      	pop	{r7, pc}
 801343e:	bf00      	nop
 8013440:	24000097 	.word	0x24000097
 8013444:	24000098 	.word	0x24000098
 8013448:	24000099 	.word	0x24000099

0801344c <USBD_CDC_Setup>:
 801344c:	b580      	push	{r7, lr}
 801344e:	b086      	sub	sp, #24
 8013450:	af00      	add	r7, sp, #0
 8013452:	6078      	str	r0, [r7, #4]
 8013454:	6039      	str	r1, [r7, #0]
 8013456:	687b      	ldr	r3, [r7, #4]
 8013458:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801345c:	687b      	ldr	r3, [r7, #4]
 801345e:	32b0      	adds	r2, #176	@ 0xb0
 8013460:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013464:	613b      	str	r3, [r7, #16]
 8013466:	2300      	movs	r3, #0
 8013468:	737b      	strb	r3, [r7, #13]
 801346a:	2300      	movs	r3, #0
 801346c:	817b      	strh	r3, [r7, #10]
 801346e:	2300      	movs	r3, #0
 8013470:	75fb      	strb	r3, [r7, #23]
 8013472:	693b      	ldr	r3, [r7, #16]
 8013474:	2b00      	cmp	r3, #0
 8013476:	d101      	bne.n	801347c <USBD_CDC_Setup+0x30>
 8013478:	2303      	movs	r3, #3
 801347a:	e0bf      	b.n	80135fc <USBD_CDC_Setup+0x1b0>
 801347c:	683b      	ldr	r3, [r7, #0]
 801347e:	781b      	ldrb	r3, [r3, #0]
 8013480:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8013484:	2b00      	cmp	r3, #0
 8013486:	d050      	beq.n	801352a <USBD_CDC_Setup+0xde>
 8013488:	2b20      	cmp	r3, #32
 801348a:	f040 80af 	bne.w	80135ec <USBD_CDC_Setup+0x1a0>
 801348e:	683b      	ldr	r3, [r7, #0]
 8013490:	88db      	ldrh	r3, [r3, #6]
 8013492:	2b00      	cmp	r3, #0
 8013494:	d03a      	beq.n	801350c <USBD_CDC_Setup+0xc0>
 8013496:	683b      	ldr	r3, [r7, #0]
 8013498:	781b      	ldrb	r3, [r3, #0]
 801349a:	b25b      	sxtb	r3, r3
 801349c:	2b00      	cmp	r3, #0
 801349e:	da1b      	bge.n	80134d8 <USBD_CDC_Setup+0x8c>
 80134a0:	687b      	ldr	r3, [r7, #4]
 80134a2:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80134a6:	687a      	ldr	r2, [r7, #4]
 80134a8:	33b0      	adds	r3, #176	@ 0xb0
 80134aa:	009b      	lsls	r3, r3, #2
 80134ac:	4413      	add	r3, r2
 80134ae:	685b      	ldr	r3, [r3, #4]
 80134b0:	689b      	ldr	r3, [r3, #8]
 80134b2:	683a      	ldr	r2, [r7, #0]
 80134b4:	7850      	ldrb	r0, [r2, #1]
 80134b6:	6939      	ldr	r1, [r7, #16]
 80134b8:	683a      	ldr	r2, [r7, #0]
 80134ba:	88d2      	ldrh	r2, [r2, #6]
 80134bc:	4798      	blx	r3
 80134be:	683b      	ldr	r3, [r7, #0]
 80134c0:	88db      	ldrh	r3, [r3, #6]
 80134c2:	2b07      	cmp	r3, #7
 80134c4:	bf28      	it	cs
 80134c6:	2307      	movcs	r3, #7
 80134c8:	81fb      	strh	r3, [r7, #14]
 80134ca:	693b      	ldr	r3, [r7, #16]
 80134cc:	89fa      	ldrh	r2, [r7, #14]
 80134ce:	4619      	mov	r1, r3
 80134d0:	6878      	ldr	r0, [r7, #4]
 80134d2:	f001 fdbd 	bl	8015050 <USBD_CtlSendData>
 80134d6:	e090      	b.n	80135fa <USBD_CDC_Setup+0x1ae>
 80134d8:	683b      	ldr	r3, [r7, #0]
 80134da:	785a      	ldrb	r2, [r3, #1]
 80134dc:	693b      	ldr	r3, [r7, #16]
 80134de:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
 80134e2:	683b      	ldr	r3, [r7, #0]
 80134e4:	88db      	ldrh	r3, [r3, #6]
 80134e6:	2b3f      	cmp	r3, #63	@ 0x3f
 80134e8:	d803      	bhi.n	80134f2 <USBD_CDC_Setup+0xa6>
 80134ea:	683b      	ldr	r3, [r7, #0]
 80134ec:	88db      	ldrh	r3, [r3, #6]
 80134ee:	b2da      	uxtb	r2, r3
 80134f0:	e000      	b.n	80134f4 <USBD_CDC_Setup+0xa8>
 80134f2:	2240      	movs	r2, #64	@ 0x40
 80134f4:	693b      	ldr	r3, [r7, #16]
 80134f6:	f883 2201 	strb.w	r2, [r3, #513]	@ 0x201
 80134fa:	6939      	ldr	r1, [r7, #16]
 80134fc:	693b      	ldr	r3, [r7, #16]
 80134fe:	f893 3201 	ldrb.w	r3, [r3, #513]	@ 0x201
 8013502:	461a      	mov	r2, r3
 8013504:	6878      	ldr	r0, [r7, #4]
 8013506:	f001 fdcf 	bl	80150a8 <USBD_CtlPrepareRx>
 801350a:	e076      	b.n	80135fa <USBD_CDC_Setup+0x1ae>
 801350c:	687b      	ldr	r3, [r7, #4]
 801350e:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8013512:	687a      	ldr	r2, [r7, #4]
 8013514:	33b0      	adds	r3, #176	@ 0xb0
 8013516:	009b      	lsls	r3, r3, #2
 8013518:	4413      	add	r3, r2
 801351a:	685b      	ldr	r3, [r3, #4]
 801351c:	689b      	ldr	r3, [r3, #8]
 801351e:	683a      	ldr	r2, [r7, #0]
 8013520:	7850      	ldrb	r0, [r2, #1]
 8013522:	2200      	movs	r2, #0
 8013524:	6839      	ldr	r1, [r7, #0]
 8013526:	4798      	blx	r3
 8013528:	e067      	b.n	80135fa <USBD_CDC_Setup+0x1ae>
 801352a:	683b      	ldr	r3, [r7, #0]
 801352c:	785b      	ldrb	r3, [r3, #1]
 801352e:	2b0b      	cmp	r3, #11
 8013530:	d851      	bhi.n	80135d6 <USBD_CDC_Setup+0x18a>
 8013532:	a201      	add	r2, pc, #4	@ (adr r2, 8013538 <USBD_CDC_Setup+0xec>)
 8013534:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8013538:	08013569 	.word	0x08013569
 801353c:	080135e5 	.word	0x080135e5
 8013540:	080135d7 	.word	0x080135d7
 8013544:	080135d7 	.word	0x080135d7
 8013548:	080135d7 	.word	0x080135d7
 801354c:	080135d7 	.word	0x080135d7
 8013550:	080135d7 	.word	0x080135d7
 8013554:	080135d7 	.word	0x080135d7
 8013558:	080135d7 	.word	0x080135d7
 801355c:	080135d7 	.word	0x080135d7
 8013560:	08013593 	.word	0x08013593
 8013564:	080135bd 	.word	0x080135bd
 8013568:	687b      	ldr	r3, [r7, #4]
 801356a:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801356e:	b2db      	uxtb	r3, r3
 8013570:	2b03      	cmp	r3, #3
 8013572:	d107      	bne.n	8013584 <USBD_CDC_Setup+0x138>
 8013574:	f107 030a 	add.w	r3, r7, #10
 8013578:	2202      	movs	r2, #2
 801357a:	4619      	mov	r1, r3
 801357c:	6878      	ldr	r0, [r7, #4]
 801357e:	f001 fd67 	bl	8015050 <USBD_CtlSendData>
 8013582:	e032      	b.n	80135ea <USBD_CDC_Setup+0x19e>
 8013584:	6839      	ldr	r1, [r7, #0]
 8013586:	6878      	ldr	r0, [r7, #4]
 8013588:	f001 fce5 	bl	8014f56 <USBD_CtlError>
 801358c:	2303      	movs	r3, #3
 801358e:	75fb      	strb	r3, [r7, #23]
 8013590:	e02b      	b.n	80135ea <USBD_CDC_Setup+0x19e>
 8013592:	687b      	ldr	r3, [r7, #4]
 8013594:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8013598:	b2db      	uxtb	r3, r3
 801359a:	2b03      	cmp	r3, #3
 801359c:	d107      	bne.n	80135ae <USBD_CDC_Setup+0x162>
 801359e:	f107 030d 	add.w	r3, r7, #13
 80135a2:	2201      	movs	r2, #1
 80135a4:	4619      	mov	r1, r3
 80135a6:	6878      	ldr	r0, [r7, #4]
 80135a8:	f001 fd52 	bl	8015050 <USBD_CtlSendData>
 80135ac:	e01d      	b.n	80135ea <USBD_CDC_Setup+0x19e>
 80135ae:	6839      	ldr	r1, [r7, #0]
 80135b0:	6878      	ldr	r0, [r7, #4]
 80135b2:	f001 fcd0 	bl	8014f56 <USBD_CtlError>
 80135b6:	2303      	movs	r3, #3
 80135b8:	75fb      	strb	r3, [r7, #23]
 80135ba:	e016      	b.n	80135ea <USBD_CDC_Setup+0x19e>
 80135bc:	687b      	ldr	r3, [r7, #4]
 80135be:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80135c2:	b2db      	uxtb	r3, r3
 80135c4:	2b03      	cmp	r3, #3
 80135c6:	d00f      	beq.n	80135e8 <USBD_CDC_Setup+0x19c>
 80135c8:	6839      	ldr	r1, [r7, #0]
 80135ca:	6878      	ldr	r0, [r7, #4]
 80135cc:	f001 fcc3 	bl	8014f56 <USBD_CtlError>
 80135d0:	2303      	movs	r3, #3
 80135d2:	75fb      	strb	r3, [r7, #23]
 80135d4:	e008      	b.n	80135e8 <USBD_CDC_Setup+0x19c>
 80135d6:	6839      	ldr	r1, [r7, #0]
 80135d8:	6878      	ldr	r0, [r7, #4]
 80135da:	f001 fcbc 	bl	8014f56 <USBD_CtlError>
 80135de:	2303      	movs	r3, #3
 80135e0:	75fb      	strb	r3, [r7, #23]
 80135e2:	e002      	b.n	80135ea <USBD_CDC_Setup+0x19e>
 80135e4:	bf00      	nop
 80135e6:	e008      	b.n	80135fa <USBD_CDC_Setup+0x1ae>
 80135e8:	bf00      	nop
 80135ea:	e006      	b.n	80135fa <USBD_CDC_Setup+0x1ae>
 80135ec:	6839      	ldr	r1, [r7, #0]
 80135ee:	6878      	ldr	r0, [r7, #4]
 80135f0:	f001 fcb1 	bl	8014f56 <USBD_CtlError>
 80135f4:	2303      	movs	r3, #3
 80135f6:	75fb      	strb	r3, [r7, #23]
 80135f8:	bf00      	nop
 80135fa:	7dfb      	ldrb	r3, [r7, #23]
 80135fc:	4618      	mov	r0, r3
 80135fe:	3718      	adds	r7, #24
 8013600:	46bd      	mov	sp, r7
 8013602:	bd80      	pop	{r7, pc}

08013604 <USBD_CDC_DataIn>:
 8013604:	b580      	push	{r7, lr}
 8013606:	b084      	sub	sp, #16
 8013608:	af00      	add	r7, sp, #0
 801360a:	6078      	str	r0, [r7, #4]
 801360c:	460b      	mov	r3, r1
 801360e:	70fb      	strb	r3, [r7, #3]
 8013610:	687b      	ldr	r3, [r7, #4]
 8013612:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 8013616:	60fb      	str	r3, [r7, #12]
 8013618:	687b      	ldr	r3, [r7, #4]
 801361a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801361e:	687b      	ldr	r3, [r7, #4]
 8013620:	32b0      	adds	r2, #176	@ 0xb0
 8013622:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013626:	2b00      	cmp	r3, #0
 8013628:	d101      	bne.n	801362e <USBD_CDC_DataIn+0x2a>
 801362a:	2303      	movs	r3, #3
 801362c:	e065      	b.n	80136fa <USBD_CDC_DataIn+0xf6>
 801362e:	687b      	ldr	r3, [r7, #4]
 8013630:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013634:	687b      	ldr	r3, [r7, #4]
 8013636:	32b0      	adds	r2, #176	@ 0xb0
 8013638:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801363c:	60bb      	str	r3, [r7, #8]
 801363e:	78fb      	ldrb	r3, [r7, #3]
 8013640:	f003 020f 	and.w	r2, r3, #15
 8013644:	6879      	ldr	r1, [r7, #4]
 8013646:	4613      	mov	r3, r2
 8013648:	009b      	lsls	r3, r3, #2
 801364a:	4413      	add	r3, r2
 801364c:	009b      	lsls	r3, r3, #2
 801364e:	440b      	add	r3, r1
 8013650:	3318      	adds	r3, #24
 8013652:	681b      	ldr	r3, [r3, #0]
 8013654:	2b00      	cmp	r3, #0
 8013656:	d02f      	beq.n	80136b8 <USBD_CDC_DataIn+0xb4>
 8013658:	78fb      	ldrb	r3, [r7, #3]
 801365a:	f003 020f 	and.w	r2, r3, #15
 801365e:	6879      	ldr	r1, [r7, #4]
 8013660:	4613      	mov	r3, r2
 8013662:	009b      	lsls	r3, r3, #2
 8013664:	4413      	add	r3, r2
 8013666:	009b      	lsls	r3, r3, #2
 8013668:	440b      	add	r3, r1
 801366a:	3318      	adds	r3, #24
 801366c:	681a      	ldr	r2, [r3, #0]
 801366e:	78fb      	ldrb	r3, [r7, #3]
 8013670:	f003 010f 	and.w	r1, r3, #15
 8013674:	68f8      	ldr	r0, [r7, #12]
 8013676:	460b      	mov	r3, r1
 8013678:	00db      	lsls	r3, r3, #3
 801367a:	440b      	add	r3, r1
 801367c:	009b      	lsls	r3, r3, #2
 801367e:	4403      	add	r3, r0
 8013680:	331c      	adds	r3, #28
 8013682:	681b      	ldr	r3, [r3, #0]
 8013684:	fbb2 f1f3 	udiv	r1, r2, r3
 8013688:	fb01 f303 	mul.w	r3, r1, r3
 801368c:	1ad3      	subs	r3, r2, r3
 801368e:	2b00      	cmp	r3, #0
 8013690:	d112      	bne.n	80136b8 <USBD_CDC_DataIn+0xb4>
 8013692:	78fb      	ldrb	r3, [r7, #3]
 8013694:	f003 020f 	and.w	r2, r3, #15
 8013698:	6879      	ldr	r1, [r7, #4]
 801369a:	4613      	mov	r3, r2
 801369c:	009b      	lsls	r3, r3, #2
 801369e:	4413      	add	r3, r2
 80136a0:	009b      	lsls	r3, r3, #2
 80136a2:	440b      	add	r3, r1
 80136a4:	3318      	adds	r3, #24
 80136a6:	2200      	movs	r2, #0
 80136a8:	601a      	str	r2, [r3, #0]
 80136aa:	78f9      	ldrb	r1, [r7, #3]
 80136ac:	2300      	movs	r3, #0
 80136ae:	2200      	movs	r2, #0
 80136b0:	6878      	ldr	r0, [r7, #4]
 80136b2:	f002 f9d0 	bl	8015a56 <USBD_LL_Transmit>
 80136b6:	e01f      	b.n	80136f8 <USBD_CDC_DataIn+0xf4>
 80136b8:	68bb      	ldr	r3, [r7, #8]
 80136ba:	2200      	movs	r2, #0
 80136bc:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 80136c0:	687b      	ldr	r3, [r7, #4]
 80136c2:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80136c6:	687a      	ldr	r2, [r7, #4]
 80136c8:	33b0      	adds	r3, #176	@ 0xb0
 80136ca:	009b      	lsls	r3, r3, #2
 80136cc:	4413      	add	r3, r2
 80136ce:	685b      	ldr	r3, [r3, #4]
 80136d0:	691b      	ldr	r3, [r3, #16]
 80136d2:	2b00      	cmp	r3, #0
 80136d4:	d010      	beq.n	80136f8 <USBD_CDC_DataIn+0xf4>
 80136d6:	687b      	ldr	r3, [r7, #4]
 80136d8:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80136dc:	687a      	ldr	r2, [r7, #4]
 80136de:	33b0      	adds	r3, #176	@ 0xb0
 80136e0:	009b      	lsls	r3, r3, #2
 80136e2:	4413      	add	r3, r2
 80136e4:	685b      	ldr	r3, [r3, #4]
 80136e6:	691b      	ldr	r3, [r3, #16]
 80136e8:	68ba      	ldr	r2, [r7, #8]
 80136ea:	f8d2 0208 	ldr.w	r0, [r2, #520]	@ 0x208
 80136ee:	68ba      	ldr	r2, [r7, #8]
 80136f0:	f502 7104 	add.w	r1, r2, #528	@ 0x210
 80136f4:	78fa      	ldrb	r2, [r7, #3]
 80136f6:	4798      	blx	r3
 80136f8:	2300      	movs	r3, #0
 80136fa:	4618      	mov	r0, r3
 80136fc:	3710      	adds	r7, #16
 80136fe:	46bd      	mov	sp, r7
 8013700:	bd80      	pop	{r7, pc}

08013702 <USBD_CDC_DataOut>:
 8013702:	b580      	push	{r7, lr}
 8013704:	b084      	sub	sp, #16
 8013706:	af00      	add	r7, sp, #0
 8013708:	6078      	str	r0, [r7, #4]
 801370a:	460b      	mov	r3, r1
 801370c:	70fb      	strb	r3, [r7, #3]
 801370e:	687b      	ldr	r3, [r7, #4]
 8013710:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013714:	687b      	ldr	r3, [r7, #4]
 8013716:	32b0      	adds	r2, #176	@ 0xb0
 8013718:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801371c:	60fb      	str	r3, [r7, #12]
 801371e:	687b      	ldr	r3, [r7, #4]
 8013720:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013724:	687b      	ldr	r3, [r7, #4]
 8013726:	32b0      	adds	r2, #176	@ 0xb0
 8013728:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801372c:	2b00      	cmp	r3, #0
 801372e:	d101      	bne.n	8013734 <USBD_CDC_DataOut+0x32>
 8013730:	2303      	movs	r3, #3
 8013732:	e01a      	b.n	801376a <USBD_CDC_DataOut+0x68>
 8013734:	78fb      	ldrb	r3, [r7, #3]
 8013736:	4619      	mov	r1, r3
 8013738:	6878      	ldr	r0, [r7, #4]
 801373a:	f002 f9ce 	bl	8015ada <USBD_LL_GetRxDataSize>
 801373e:	4602      	mov	r2, r0
 8013740:	68fb      	ldr	r3, [r7, #12]
 8013742:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 8013746:	687b      	ldr	r3, [r7, #4]
 8013748:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 801374c:	687a      	ldr	r2, [r7, #4]
 801374e:	33b0      	adds	r3, #176	@ 0xb0
 8013750:	009b      	lsls	r3, r3, #2
 8013752:	4413      	add	r3, r2
 8013754:	685b      	ldr	r3, [r3, #4]
 8013756:	68db      	ldr	r3, [r3, #12]
 8013758:	68fa      	ldr	r2, [r7, #12]
 801375a:	f8d2 0204 	ldr.w	r0, [r2, #516]	@ 0x204
 801375e:	68fa      	ldr	r2, [r7, #12]
 8013760:	f502 7203 	add.w	r2, r2, #524	@ 0x20c
 8013764:	4611      	mov	r1, r2
 8013766:	4798      	blx	r3
 8013768:	2300      	movs	r3, #0
 801376a:	4618      	mov	r0, r3
 801376c:	3710      	adds	r7, #16
 801376e:	46bd      	mov	sp, r7
 8013770:	bd80      	pop	{r7, pc}

08013772 <USBD_CDC_EP0_RxReady>:
 8013772:	b580      	push	{r7, lr}
 8013774:	b084      	sub	sp, #16
 8013776:	af00      	add	r7, sp, #0
 8013778:	6078      	str	r0, [r7, #4]
 801377a:	687b      	ldr	r3, [r7, #4]
 801377c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013780:	687b      	ldr	r3, [r7, #4]
 8013782:	32b0      	adds	r2, #176	@ 0xb0
 8013784:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013788:	60fb      	str	r3, [r7, #12]
 801378a:	68fb      	ldr	r3, [r7, #12]
 801378c:	2b00      	cmp	r3, #0
 801378e:	d101      	bne.n	8013794 <USBD_CDC_EP0_RxReady+0x22>
 8013790:	2303      	movs	r3, #3
 8013792:	e024      	b.n	80137de <USBD_CDC_EP0_RxReady+0x6c>
 8013794:	687b      	ldr	r3, [r7, #4]
 8013796:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 801379a:	687a      	ldr	r2, [r7, #4]
 801379c:	33b0      	adds	r3, #176	@ 0xb0
 801379e:	009b      	lsls	r3, r3, #2
 80137a0:	4413      	add	r3, r2
 80137a2:	685b      	ldr	r3, [r3, #4]
 80137a4:	2b00      	cmp	r3, #0
 80137a6:	d019      	beq.n	80137dc <USBD_CDC_EP0_RxReady+0x6a>
 80137a8:	68fb      	ldr	r3, [r7, #12]
 80137aa:	f893 3200 	ldrb.w	r3, [r3, #512]	@ 0x200
 80137ae:	2bff      	cmp	r3, #255	@ 0xff
 80137b0:	d014      	beq.n	80137dc <USBD_CDC_EP0_RxReady+0x6a>
 80137b2:	687b      	ldr	r3, [r7, #4]
 80137b4:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80137b8:	687a      	ldr	r2, [r7, #4]
 80137ba:	33b0      	adds	r3, #176	@ 0xb0
 80137bc:	009b      	lsls	r3, r3, #2
 80137be:	4413      	add	r3, r2
 80137c0:	685b      	ldr	r3, [r3, #4]
 80137c2:	689b      	ldr	r3, [r3, #8]
 80137c4:	68fa      	ldr	r2, [r7, #12]
 80137c6:	f892 0200 	ldrb.w	r0, [r2, #512]	@ 0x200
 80137ca:	68f9      	ldr	r1, [r7, #12]
 80137cc:	68fa      	ldr	r2, [r7, #12]
 80137ce:	f892 2201 	ldrb.w	r2, [r2, #513]	@ 0x201
 80137d2:	4798      	blx	r3
 80137d4:	68fb      	ldr	r3, [r7, #12]
 80137d6:	22ff      	movs	r2, #255	@ 0xff
 80137d8:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
 80137dc:	2300      	movs	r3, #0
 80137de:	4618      	mov	r0, r3
 80137e0:	3710      	adds	r7, #16
 80137e2:	46bd      	mov	sp, r7
 80137e4:	bd80      	pop	{r7, pc}
	...

080137e8 <USBD_CDC_GetFSCfgDesc>:
 80137e8:	b580      	push	{r7, lr}
 80137ea:	b086      	sub	sp, #24
 80137ec:	af00      	add	r7, sp, #0
 80137ee:	6078      	str	r0, [r7, #4]
 80137f0:	2182      	movs	r1, #130	@ 0x82
 80137f2:	4818      	ldr	r0, [pc, #96]	@ (8013854 <USBD_CDC_GetFSCfgDesc+0x6c>)
 80137f4:	f000 fd4f 	bl	8014296 <USBD_GetEpDesc>
 80137f8:	6178      	str	r0, [r7, #20]
 80137fa:	2101      	movs	r1, #1
 80137fc:	4815      	ldr	r0, [pc, #84]	@ (8013854 <USBD_CDC_GetFSCfgDesc+0x6c>)
 80137fe:	f000 fd4a 	bl	8014296 <USBD_GetEpDesc>
 8013802:	6138      	str	r0, [r7, #16]
 8013804:	2181      	movs	r1, #129	@ 0x81
 8013806:	4813      	ldr	r0, [pc, #76]	@ (8013854 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8013808:	f000 fd45 	bl	8014296 <USBD_GetEpDesc>
 801380c:	60f8      	str	r0, [r7, #12]
 801380e:	697b      	ldr	r3, [r7, #20]
 8013810:	2b00      	cmp	r3, #0
 8013812:	d002      	beq.n	801381a <USBD_CDC_GetFSCfgDesc+0x32>
 8013814:	697b      	ldr	r3, [r7, #20]
 8013816:	2210      	movs	r2, #16
 8013818:	719a      	strb	r2, [r3, #6]
 801381a:	693b      	ldr	r3, [r7, #16]
 801381c:	2b00      	cmp	r3, #0
 801381e:	d006      	beq.n	801382e <USBD_CDC_GetFSCfgDesc+0x46>
 8013820:	693b      	ldr	r3, [r7, #16]
 8013822:	2200      	movs	r2, #0
 8013824:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8013828:	711a      	strb	r2, [r3, #4]
 801382a:	2200      	movs	r2, #0
 801382c:	715a      	strb	r2, [r3, #5]
 801382e:	68fb      	ldr	r3, [r7, #12]
 8013830:	2b00      	cmp	r3, #0
 8013832:	d006      	beq.n	8013842 <USBD_CDC_GetFSCfgDesc+0x5a>
 8013834:	68fb      	ldr	r3, [r7, #12]
 8013836:	2200      	movs	r2, #0
 8013838:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 801383c:	711a      	strb	r2, [r3, #4]
 801383e:	2200      	movs	r2, #0
 8013840:	715a      	strb	r2, [r3, #5]
 8013842:	687b      	ldr	r3, [r7, #4]
 8013844:	2243      	movs	r2, #67	@ 0x43
 8013846:	801a      	strh	r2, [r3, #0]
 8013848:	4b02      	ldr	r3, [pc, #8]	@ (8013854 <USBD_CDC_GetFSCfgDesc+0x6c>)
 801384a:	4618      	mov	r0, r3
 801384c:	3718      	adds	r7, #24
 801384e:	46bd      	mov	sp, r7
 8013850:	bd80      	pop	{r7, pc}
 8013852:	bf00      	nop
 8013854:	24000054 	.word	0x24000054

08013858 <USBD_CDC_GetHSCfgDesc>:
 8013858:	b580      	push	{r7, lr}
 801385a:	b086      	sub	sp, #24
 801385c:	af00      	add	r7, sp, #0
 801385e:	6078      	str	r0, [r7, #4]
 8013860:	2182      	movs	r1, #130	@ 0x82
 8013862:	4818      	ldr	r0, [pc, #96]	@ (80138c4 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8013864:	f000 fd17 	bl	8014296 <USBD_GetEpDesc>
 8013868:	6178      	str	r0, [r7, #20]
 801386a:	2101      	movs	r1, #1
 801386c:	4815      	ldr	r0, [pc, #84]	@ (80138c4 <USBD_CDC_GetHSCfgDesc+0x6c>)
 801386e:	f000 fd12 	bl	8014296 <USBD_GetEpDesc>
 8013872:	6138      	str	r0, [r7, #16]
 8013874:	2181      	movs	r1, #129	@ 0x81
 8013876:	4813      	ldr	r0, [pc, #76]	@ (80138c4 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8013878:	f000 fd0d 	bl	8014296 <USBD_GetEpDesc>
 801387c:	60f8      	str	r0, [r7, #12]
 801387e:	697b      	ldr	r3, [r7, #20]
 8013880:	2b00      	cmp	r3, #0
 8013882:	d002      	beq.n	801388a <USBD_CDC_GetHSCfgDesc+0x32>
 8013884:	697b      	ldr	r3, [r7, #20]
 8013886:	2210      	movs	r2, #16
 8013888:	719a      	strb	r2, [r3, #6]
 801388a:	693b      	ldr	r3, [r7, #16]
 801388c:	2b00      	cmp	r3, #0
 801388e:	d006      	beq.n	801389e <USBD_CDC_GetHSCfgDesc+0x46>
 8013890:	693b      	ldr	r3, [r7, #16]
 8013892:	2200      	movs	r2, #0
 8013894:	711a      	strb	r2, [r3, #4]
 8013896:	2200      	movs	r2, #0
 8013898:	f042 0202 	orr.w	r2, r2, #2
 801389c:	715a      	strb	r2, [r3, #5]
 801389e:	68fb      	ldr	r3, [r7, #12]
 80138a0:	2b00      	cmp	r3, #0
 80138a2:	d006      	beq.n	80138b2 <USBD_CDC_GetHSCfgDesc+0x5a>
 80138a4:	68fb      	ldr	r3, [r7, #12]
 80138a6:	2200      	movs	r2, #0
 80138a8:	711a      	strb	r2, [r3, #4]
 80138aa:	2200      	movs	r2, #0
 80138ac:	f042 0202 	orr.w	r2, r2, #2
 80138b0:	715a      	strb	r2, [r3, #5]
 80138b2:	687b      	ldr	r3, [r7, #4]
 80138b4:	2243      	movs	r2, #67	@ 0x43
 80138b6:	801a      	strh	r2, [r3, #0]
 80138b8:	4b02      	ldr	r3, [pc, #8]	@ (80138c4 <USBD_CDC_GetHSCfgDesc+0x6c>)
 80138ba:	4618      	mov	r0, r3
 80138bc:	3718      	adds	r7, #24
 80138be:	46bd      	mov	sp, r7
 80138c0:	bd80      	pop	{r7, pc}
 80138c2:	bf00      	nop
 80138c4:	24000054 	.word	0x24000054

080138c8 <USBD_CDC_GetOtherSpeedCfgDesc>:
 80138c8:	b580      	push	{r7, lr}
 80138ca:	b086      	sub	sp, #24
 80138cc:	af00      	add	r7, sp, #0
 80138ce:	6078      	str	r0, [r7, #4]
 80138d0:	2182      	movs	r1, #130	@ 0x82
 80138d2:	4818      	ldr	r0, [pc, #96]	@ (8013934 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 80138d4:	f000 fcdf 	bl	8014296 <USBD_GetEpDesc>
 80138d8:	6178      	str	r0, [r7, #20]
 80138da:	2101      	movs	r1, #1
 80138dc:	4815      	ldr	r0, [pc, #84]	@ (8013934 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 80138de:	f000 fcda 	bl	8014296 <USBD_GetEpDesc>
 80138e2:	6138      	str	r0, [r7, #16]
 80138e4:	2181      	movs	r1, #129	@ 0x81
 80138e6:	4813      	ldr	r0, [pc, #76]	@ (8013934 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 80138e8:	f000 fcd5 	bl	8014296 <USBD_GetEpDesc>
 80138ec:	60f8      	str	r0, [r7, #12]
 80138ee:	697b      	ldr	r3, [r7, #20]
 80138f0:	2b00      	cmp	r3, #0
 80138f2:	d002      	beq.n	80138fa <USBD_CDC_GetOtherSpeedCfgDesc+0x32>
 80138f4:	697b      	ldr	r3, [r7, #20]
 80138f6:	2210      	movs	r2, #16
 80138f8:	719a      	strb	r2, [r3, #6]
 80138fa:	693b      	ldr	r3, [r7, #16]
 80138fc:	2b00      	cmp	r3, #0
 80138fe:	d006      	beq.n	801390e <USBD_CDC_GetOtherSpeedCfgDesc+0x46>
 8013900:	693b      	ldr	r3, [r7, #16]
 8013902:	2200      	movs	r2, #0
 8013904:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8013908:	711a      	strb	r2, [r3, #4]
 801390a:	2200      	movs	r2, #0
 801390c:	715a      	strb	r2, [r3, #5]
 801390e:	68fb      	ldr	r3, [r7, #12]
 8013910:	2b00      	cmp	r3, #0
 8013912:	d006      	beq.n	8013922 <USBD_CDC_GetOtherSpeedCfgDesc+0x5a>
 8013914:	68fb      	ldr	r3, [r7, #12]
 8013916:	2200      	movs	r2, #0
 8013918:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 801391c:	711a      	strb	r2, [r3, #4]
 801391e:	2200      	movs	r2, #0
 8013920:	715a      	strb	r2, [r3, #5]
 8013922:	687b      	ldr	r3, [r7, #4]
 8013924:	2243      	movs	r2, #67	@ 0x43
 8013926:	801a      	strh	r2, [r3, #0]
 8013928:	4b02      	ldr	r3, [pc, #8]	@ (8013934 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 801392a:	4618      	mov	r0, r3
 801392c:	3718      	adds	r7, #24
 801392e:	46bd      	mov	sp, r7
 8013930:	bd80      	pop	{r7, pc}
 8013932:	bf00      	nop
 8013934:	24000054 	.word	0x24000054

08013938 <USBD_CDC_GetDeviceQualifierDescriptor>:
 8013938:	b480      	push	{r7}
 801393a:	b083      	sub	sp, #12
 801393c:	af00      	add	r7, sp, #0
 801393e:	6078      	str	r0, [r7, #4]
 8013940:	687b      	ldr	r3, [r7, #4]
 8013942:	220a      	movs	r2, #10
 8013944:	801a      	strh	r2, [r3, #0]
 8013946:	4b03      	ldr	r3, [pc, #12]	@ (8013954 <USBD_CDC_GetDeviceQualifierDescriptor+0x1c>)
 8013948:	4618      	mov	r0, r3
 801394a:	370c      	adds	r7, #12
 801394c:	46bd      	mov	sp, r7
 801394e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013952:	4770      	bx	lr
 8013954:	24000010 	.word	0x24000010

08013958 <USBD_CDC_RegisterInterface>:
 8013958:	b480      	push	{r7}
 801395a:	b083      	sub	sp, #12
 801395c:	af00      	add	r7, sp, #0
 801395e:	6078      	str	r0, [r7, #4]
 8013960:	6039      	str	r1, [r7, #0]
 8013962:	683b      	ldr	r3, [r7, #0]
 8013964:	2b00      	cmp	r3, #0
 8013966:	d101      	bne.n	801396c <USBD_CDC_RegisterInterface+0x14>
 8013968:	2303      	movs	r3, #3
 801396a:	e009      	b.n	8013980 <USBD_CDC_RegisterInterface+0x28>
 801396c:	687b      	ldr	r3, [r7, #4]
 801396e:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8013972:	687a      	ldr	r2, [r7, #4]
 8013974:	33b0      	adds	r3, #176	@ 0xb0
 8013976:	009b      	lsls	r3, r3, #2
 8013978:	4413      	add	r3, r2
 801397a:	683a      	ldr	r2, [r7, #0]
 801397c:	605a      	str	r2, [r3, #4]
 801397e:	2300      	movs	r3, #0
 8013980:	4618      	mov	r0, r3
 8013982:	370c      	adds	r7, #12
 8013984:	46bd      	mov	sp, r7
 8013986:	f85d 7b04 	ldr.w	r7, [sp], #4
 801398a:	4770      	bx	lr

0801398c <USBD_CDC_SetTxBuffer>:
 801398c:	b480      	push	{r7}
 801398e:	b087      	sub	sp, #28
 8013990:	af00      	add	r7, sp, #0
 8013992:	60f8      	str	r0, [r7, #12]
 8013994:	60b9      	str	r1, [r7, #8]
 8013996:	607a      	str	r2, [r7, #4]
 8013998:	68fb      	ldr	r3, [r7, #12]
 801399a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801399e:	68fb      	ldr	r3, [r7, #12]
 80139a0:	32b0      	adds	r2, #176	@ 0xb0
 80139a2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80139a6:	617b      	str	r3, [r7, #20]
 80139a8:	697b      	ldr	r3, [r7, #20]
 80139aa:	2b00      	cmp	r3, #0
 80139ac:	d101      	bne.n	80139b2 <USBD_CDC_SetTxBuffer+0x26>
 80139ae:	2303      	movs	r3, #3
 80139b0:	e008      	b.n	80139c4 <USBD_CDC_SetTxBuffer+0x38>
 80139b2:	697b      	ldr	r3, [r7, #20]
 80139b4:	68ba      	ldr	r2, [r7, #8]
 80139b6:	f8c3 2208 	str.w	r2, [r3, #520]	@ 0x208
 80139ba:	697b      	ldr	r3, [r7, #20]
 80139bc:	687a      	ldr	r2, [r7, #4]
 80139be:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
 80139c2:	2300      	movs	r3, #0
 80139c4:	4618      	mov	r0, r3
 80139c6:	371c      	adds	r7, #28
 80139c8:	46bd      	mov	sp, r7
 80139ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80139ce:	4770      	bx	lr

080139d0 <USBD_CDC_SetRxBuffer>:
 80139d0:	b480      	push	{r7}
 80139d2:	b085      	sub	sp, #20
 80139d4:	af00      	add	r7, sp, #0
 80139d6:	6078      	str	r0, [r7, #4]
 80139d8:	6039      	str	r1, [r7, #0]
 80139da:	687b      	ldr	r3, [r7, #4]
 80139dc:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80139e0:	687b      	ldr	r3, [r7, #4]
 80139e2:	32b0      	adds	r2, #176	@ 0xb0
 80139e4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80139e8:	60fb      	str	r3, [r7, #12]
 80139ea:	68fb      	ldr	r3, [r7, #12]
 80139ec:	2b00      	cmp	r3, #0
 80139ee:	d101      	bne.n	80139f4 <USBD_CDC_SetRxBuffer+0x24>
 80139f0:	2303      	movs	r3, #3
 80139f2:	e004      	b.n	80139fe <USBD_CDC_SetRxBuffer+0x2e>
 80139f4:	68fb      	ldr	r3, [r7, #12]
 80139f6:	683a      	ldr	r2, [r7, #0]
 80139f8:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 80139fc:	2300      	movs	r3, #0
 80139fe:	4618      	mov	r0, r3
 8013a00:	3714      	adds	r7, #20
 8013a02:	46bd      	mov	sp, r7
 8013a04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013a08:	4770      	bx	lr
	...

08013a0c <USBD_CDC_TransmitPacket>:
 8013a0c:	b580      	push	{r7, lr}
 8013a0e:	b084      	sub	sp, #16
 8013a10:	af00      	add	r7, sp, #0
 8013a12:	6078      	str	r0, [r7, #4]
 8013a14:	687b      	ldr	r3, [r7, #4]
 8013a16:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013a1a:	687b      	ldr	r3, [r7, #4]
 8013a1c:	32b0      	adds	r2, #176	@ 0xb0
 8013a1e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013a22:	60bb      	str	r3, [r7, #8]
 8013a24:	2301      	movs	r3, #1
 8013a26:	73fb      	strb	r3, [r7, #15]
 8013a28:	68bb      	ldr	r3, [r7, #8]
 8013a2a:	2b00      	cmp	r3, #0
 8013a2c:	d101      	bne.n	8013a32 <USBD_CDC_TransmitPacket+0x26>
 8013a2e:	2303      	movs	r3, #3
 8013a30:	e025      	b.n	8013a7e <USBD_CDC_TransmitPacket+0x72>
 8013a32:	68bb      	ldr	r3, [r7, #8]
 8013a34:	f8d3 3214 	ldr.w	r3, [r3, #532]	@ 0x214
 8013a38:	2b00      	cmp	r3, #0
 8013a3a:	d11f      	bne.n	8013a7c <USBD_CDC_TransmitPacket+0x70>
 8013a3c:	68bb      	ldr	r3, [r7, #8]
 8013a3e:	2201      	movs	r2, #1
 8013a40:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 8013a44:	4b10      	ldr	r3, [pc, #64]	@ (8013a88 <USBD_CDC_TransmitPacket+0x7c>)
 8013a46:	781b      	ldrb	r3, [r3, #0]
 8013a48:	f003 020f 	and.w	r2, r3, #15
 8013a4c:	68bb      	ldr	r3, [r7, #8]
 8013a4e:	f8d3 1210 	ldr.w	r1, [r3, #528]	@ 0x210
 8013a52:	6878      	ldr	r0, [r7, #4]
 8013a54:	4613      	mov	r3, r2
 8013a56:	009b      	lsls	r3, r3, #2
 8013a58:	4413      	add	r3, r2
 8013a5a:	009b      	lsls	r3, r3, #2
 8013a5c:	4403      	add	r3, r0
 8013a5e:	3318      	adds	r3, #24
 8013a60:	6019      	str	r1, [r3, #0]
 8013a62:	4b09      	ldr	r3, [pc, #36]	@ (8013a88 <USBD_CDC_TransmitPacket+0x7c>)
 8013a64:	7819      	ldrb	r1, [r3, #0]
 8013a66:	68bb      	ldr	r3, [r7, #8]
 8013a68:	f8d3 2208 	ldr.w	r2, [r3, #520]	@ 0x208
 8013a6c:	68bb      	ldr	r3, [r7, #8]
 8013a6e:	f8d3 3210 	ldr.w	r3, [r3, #528]	@ 0x210
 8013a72:	6878      	ldr	r0, [r7, #4]
 8013a74:	f001 ffef 	bl	8015a56 <USBD_LL_Transmit>
 8013a78:	2300      	movs	r3, #0
 8013a7a:	73fb      	strb	r3, [r7, #15]
 8013a7c:	7bfb      	ldrb	r3, [r7, #15]
 8013a7e:	4618      	mov	r0, r3
 8013a80:	3710      	adds	r7, #16
 8013a82:	46bd      	mov	sp, r7
 8013a84:	bd80      	pop	{r7, pc}
 8013a86:	bf00      	nop
 8013a88:	24000097 	.word	0x24000097

08013a8c <USBD_CDC_ReceivePacket>:
 8013a8c:	b580      	push	{r7, lr}
 8013a8e:	b084      	sub	sp, #16
 8013a90:	af00      	add	r7, sp, #0
 8013a92:	6078      	str	r0, [r7, #4]
 8013a94:	687b      	ldr	r3, [r7, #4]
 8013a96:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013a9a:	687b      	ldr	r3, [r7, #4]
 8013a9c:	32b0      	adds	r2, #176	@ 0xb0
 8013a9e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013aa2:	60fb      	str	r3, [r7, #12]
 8013aa4:	687b      	ldr	r3, [r7, #4]
 8013aa6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013aaa:	687b      	ldr	r3, [r7, #4]
 8013aac:	32b0      	adds	r2, #176	@ 0xb0
 8013aae:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013ab2:	2b00      	cmp	r3, #0
 8013ab4:	d101      	bne.n	8013aba <USBD_CDC_ReceivePacket+0x2e>
 8013ab6:	2303      	movs	r3, #3
 8013ab8:	e018      	b.n	8013aec <USBD_CDC_ReceivePacket+0x60>
 8013aba:	687b      	ldr	r3, [r7, #4]
 8013abc:	7c1b      	ldrb	r3, [r3, #16]
 8013abe:	2b00      	cmp	r3, #0
 8013ac0:	d10a      	bne.n	8013ad8 <USBD_CDC_ReceivePacket+0x4c>
 8013ac2:	4b0c      	ldr	r3, [pc, #48]	@ (8013af4 <USBD_CDC_ReceivePacket+0x68>)
 8013ac4:	7819      	ldrb	r1, [r3, #0]
 8013ac6:	68fb      	ldr	r3, [r7, #12]
 8013ac8:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8013acc:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8013ad0:	6878      	ldr	r0, [r7, #4]
 8013ad2:	f001 ffe1 	bl	8015a98 <USBD_LL_PrepareReceive>
 8013ad6:	e008      	b.n	8013aea <USBD_CDC_ReceivePacket+0x5e>
 8013ad8:	4b06      	ldr	r3, [pc, #24]	@ (8013af4 <USBD_CDC_ReceivePacket+0x68>)
 8013ada:	7819      	ldrb	r1, [r3, #0]
 8013adc:	68fb      	ldr	r3, [r7, #12]
 8013ade:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8013ae2:	2340      	movs	r3, #64	@ 0x40
 8013ae4:	6878      	ldr	r0, [r7, #4]
 8013ae6:	f001 ffd7 	bl	8015a98 <USBD_LL_PrepareReceive>
 8013aea:	2300      	movs	r3, #0
 8013aec:	4618      	mov	r0, r3
 8013aee:	3710      	adds	r7, #16
 8013af0:	46bd      	mov	sp, r7
 8013af2:	bd80      	pop	{r7, pc}
 8013af4:	24000098 	.word	0x24000098

08013af8 <USBD_Init>:
 8013af8:	b580      	push	{r7, lr}
 8013afa:	b086      	sub	sp, #24
 8013afc:	af00      	add	r7, sp, #0
 8013afe:	60f8      	str	r0, [r7, #12]
 8013b00:	60b9      	str	r1, [r7, #8]
 8013b02:	4613      	mov	r3, r2
 8013b04:	71fb      	strb	r3, [r7, #7]
 8013b06:	68fb      	ldr	r3, [r7, #12]
 8013b08:	2b00      	cmp	r3, #0
 8013b0a:	d101      	bne.n	8013b10 <USBD_Init+0x18>
 8013b0c:	2303      	movs	r3, #3
 8013b0e:	e01f      	b.n	8013b50 <USBD_Init+0x58>
 8013b10:	68fb      	ldr	r3, [r7, #12]
 8013b12:	2200      	movs	r2, #0
 8013b14:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
 8013b18:	68fb      	ldr	r3, [r7, #12]
 8013b1a:	2200      	movs	r2, #0
 8013b1c:	f8c3 22c4 	str.w	r2, [r3, #708]	@ 0x2c4
 8013b20:	68fb      	ldr	r3, [r7, #12]
 8013b22:	2200      	movs	r2, #0
 8013b24:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
 8013b28:	68bb      	ldr	r3, [r7, #8]
 8013b2a:	2b00      	cmp	r3, #0
 8013b2c:	d003      	beq.n	8013b36 <USBD_Init+0x3e>
 8013b2e:	68fb      	ldr	r3, [r7, #12]
 8013b30:	68ba      	ldr	r2, [r7, #8]
 8013b32:	f8c3 22b4 	str.w	r2, [r3, #692]	@ 0x2b4
 8013b36:	68fb      	ldr	r3, [r7, #12]
 8013b38:	2201      	movs	r2, #1
 8013b3a:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8013b3e:	68fb      	ldr	r3, [r7, #12]
 8013b40:	79fa      	ldrb	r2, [r7, #7]
 8013b42:	701a      	strb	r2, [r3, #0]
 8013b44:	68f8      	ldr	r0, [r7, #12]
 8013b46:	f001 fe4b 	bl	80157e0 <USBD_LL_Init>
 8013b4a:	4603      	mov	r3, r0
 8013b4c:	75fb      	strb	r3, [r7, #23]
 8013b4e:	7dfb      	ldrb	r3, [r7, #23]
 8013b50:	4618      	mov	r0, r3
 8013b52:	3718      	adds	r7, #24
 8013b54:	46bd      	mov	sp, r7
 8013b56:	bd80      	pop	{r7, pc}

08013b58 <USBD_RegisterClass>:
 8013b58:	b580      	push	{r7, lr}
 8013b5a:	b084      	sub	sp, #16
 8013b5c:	af00      	add	r7, sp, #0
 8013b5e:	6078      	str	r0, [r7, #4]
 8013b60:	6039      	str	r1, [r7, #0]
 8013b62:	2300      	movs	r3, #0
 8013b64:	81fb      	strh	r3, [r7, #14]
 8013b66:	683b      	ldr	r3, [r7, #0]
 8013b68:	2b00      	cmp	r3, #0
 8013b6a:	d101      	bne.n	8013b70 <USBD_RegisterClass+0x18>
 8013b6c:	2303      	movs	r3, #3
 8013b6e:	e025      	b.n	8013bbc <USBD_RegisterClass+0x64>
 8013b70:	687b      	ldr	r3, [r7, #4]
 8013b72:	683a      	ldr	r2, [r7, #0]
 8013b74:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
 8013b78:	687b      	ldr	r3, [r7, #4]
 8013b7a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013b7e:	687b      	ldr	r3, [r7, #4]
 8013b80:	32ae      	adds	r2, #174	@ 0xae
 8013b82:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013b86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013b88:	2b00      	cmp	r3, #0
 8013b8a:	d00f      	beq.n	8013bac <USBD_RegisterClass+0x54>
 8013b8c:	687b      	ldr	r3, [r7, #4]
 8013b8e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013b92:	687b      	ldr	r3, [r7, #4]
 8013b94:	32ae      	adds	r2, #174	@ 0xae
 8013b96:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013b9a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013b9c:	f107 020e 	add.w	r2, r7, #14
 8013ba0:	4610      	mov	r0, r2
 8013ba2:	4798      	blx	r3
 8013ba4:	4602      	mov	r2, r0
 8013ba6:	687b      	ldr	r3, [r7, #4]
 8013ba8:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
 8013bac:	687b      	ldr	r3, [r7, #4]
 8013bae:	f8d3 32d8 	ldr.w	r3, [r3, #728]	@ 0x2d8
 8013bb2:	1c5a      	adds	r2, r3, #1
 8013bb4:	687b      	ldr	r3, [r7, #4]
 8013bb6:	f8c3 22d8 	str.w	r2, [r3, #728]	@ 0x2d8
 8013bba:	2300      	movs	r3, #0
 8013bbc:	4618      	mov	r0, r3
 8013bbe:	3710      	adds	r7, #16
 8013bc0:	46bd      	mov	sp, r7
 8013bc2:	bd80      	pop	{r7, pc}

08013bc4 <USBD_Start>:
 8013bc4:	b580      	push	{r7, lr}
 8013bc6:	b082      	sub	sp, #8
 8013bc8:	af00      	add	r7, sp, #0
 8013bca:	6078      	str	r0, [r7, #4]
 8013bcc:	6878      	ldr	r0, [r7, #4]
 8013bce:	f001 fe59 	bl	8015884 <USBD_LL_Start>
 8013bd2:	4603      	mov	r3, r0
 8013bd4:	4618      	mov	r0, r3
 8013bd6:	3708      	adds	r7, #8
 8013bd8:	46bd      	mov	sp, r7
 8013bda:	bd80      	pop	{r7, pc}

08013bdc <USBD_RunTestMode>:
 8013bdc:	b480      	push	{r7}
 8013bde:	b083      	sub	sp, #12
 8013be0:	af00      	add	r7, sp, #0
 8013be2:	6078      	str	r0, [r7, #4]
 8013be4:	2300      	movs	r3, #0
 8013be6:	4618      	mov	r0, r3
 8013be8:	370c      	adds	r7, #12
 8013bea:	46bd      	mov	sp, r7
 8013bec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013bf0:	4770      	bx	lr

08013bf2 <USBD_SetClassConfig>:
 8013bf2:	b580      	push	{r7, lr}
 8013bf4:	b084      	sub	sp, #16
 8013bf6:	af00      	add	r7, sp, #0
 8013bf8:	6078      	str	r0, [r7, #4]
 8013bfa:	460b      	mov	r3, r1
 8013bfc:	70fb      	strb	r3, [r7, #3]
 8013bfe:	2300      	movs	r3, #0
 8013c00:	73fb      	strb	r3, [r7, #15]
 8013c02:	687b      	ldr	r3, [r7, #4]
 8013c04:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8013c08:	2b00      	cmp	r3, #0
 8013c0a:	d009      	beq.n	8013c20 <USBD_SetClassConfig+0x2e>
 8013c0c:	687b      	ldr	r3, [r7, #4]
 8013c0e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8013c12:	681b      	ldr	r3, [r3, #0]
 8013c14:	78fa      	ldrb	r2, [r7, #3]
 8013c16:	4611      	mov	r1, r2
 8013c18:	6878      	ldr	r0, [r7, #4]
 8013c1a:	4798      	blx	r3
 8013c1c:	4603      	mov	r3, r0
 8013c1e:	73fb      	strb	r3, [r7, #15]
 8013c20:	7bfb      	ldrb	r3, [r7, #15]
 8013c22:	4618      	mov	r0, r3
 8013c24:	3710      	adds	r7, #16
 8013c26:	46bd      	mov	sp, r7
 8013c28:	bd80      	pop	{r7, pc}

08013c2a <USBD_ClrClassConfig>:
 8013c2a:	b580      	push	{r7, lr}
 8013c2c:	b084      	sub	sp, #16
 8013c2e:	af00      	add	r7, sp, #0
 8013c30:	6078      	str	r0, [r7, #4]
 8013c32:	460b      	mov	r3, r1
 8013c34:	70fb      	strb	r3, [r7, #3]
 8013c36:	2300      	movs	r3, #0
 8013c38:	73fb      	strb	r3, [r7, #15]
 8013c3a:	687b      	ldr	r3, [r7, #4]
 8013c3c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8013c40:	685b      	ldr	r3, [r3, #4]
 8013c42:	78fa      	ldrb	r2, [r7, #3]
 8013c44:	4611      	mov	r1, r2
 8013c46:	6878      	ldr	r0, [r7, #4]
 8013c48:	4798      	blx	r3
 8013c4a:	4603      	mov	r3, r0
 8013c4c:	2b00      	cmp	r3, #0
 8013c4e:	d001      	beq.n	8013c54 <USBD_ClrClassConfig+0x2a>
 8013c50:	2303      	movs	r3, #3
 8013c52:	73fb      	strb	r3, [r7, #15]
 8013c54:	7bfb      	ldrb	r3, [r7, #15]
 8013c56:	4618      	mov	r0, r3
 8013c58:	3710      	adds	r7, #16
 8013c5a:	46bd      	mov	sp, r7
 8013c5c:	bd80      	pop	{r7, pc}

08013c5e <USBD_LL_SetupStage>:
 8013c5e:	b580      	push	{r7, lr}
 8013c60:	b084      	sub	sp, #16
 8013c62:	af00      	add	r7, sp, #0
 8013c64:	6078      	str	r0, [r7, #4]
 8013c66:	6039      	str	r1, [r7, #0]
 8013c68:	687b      	ldr	r3, [r7, #4]
 8013c6a:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8013c6e:	6839      	ldr	r1, [r7, #0]
 8013c70:	4618      	mov	r0, r3
 8013c72:	f001 f936 	bl	8014ee2 <USBD_ParseSetupRequest>
 8013c76:	687b      	ldr	r3, [r7, #4]
 8013c78:	2201      	movs	r2, #1
 8013c7a:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8013c7e:	687b      	ldr	r3, [r7, #4]
 8013c80:	f8b3 32b0 	ldrh.w	r3, [r3, #688]	@ 0x2b0
 8013c84:	461a      	mov	r2, r3
 8013c86:	687b      	ldr	r3, [r7, #4]
 8013c88:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298
 8013c8c:	687b      	ldr	r3, [r7, #4]
 8013c8e:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8013c92:	f003 031f 	and.w	r3, r3, #31
 8013c96:	2b02      	cmp	r3, #2
 8013c98:	d01a      	beq.n	8013cd0 <USBD_LL_SetupStage+0x72>
 8013c9a:	2b02      	cmp	r3, #2
 8013c9c:	d822      	bhi.n	8013ce4 <USBD_LL_SetupStage+0x86>
 8013c9e:	2b00      	cmp	r3, #0
 8013ca0:	d002      	beq.n	8013ca8 <USBD_LL_SetupStage+0x4a>
 8013ca2:	2b01      	cmp	r3, #1
 8013ca4:	d00a      	beq.n	8013cbc <USBD_LL_SetupStage+0x5e>
 8013ca6:	e01d      	b.n	8013ce4 <USBD_LL_SetupStage+0x86>
 8013ca8:	687b      	ldr	r3, [r7, #4]
 8013caa:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8013cae:	4619      	mov	r1, r3
 8013cb0:	6878      	ldr	r0, [r7, #4]
 8013cb2:	f000 fb63 	bl	801437c <USBD_StdDevReq>
 8013cb6:	4603      	mov	r3, r0
 8013cb8:	73fb      	strb	r3, [r7, #15]
 8013cba:	e020      	b.n	8013cfe <USBD_LL_SetupStage+0xa0>
 8013cbc:	687b      	ldr	r3, [r7, #4]
 8013cbe:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8013cc2:	4619      	mov	r1, r3
 8013cc4:	6878      	ldr	r0, [r7, #4]
 8013cc6:	f000 fbcb 	bl	8014460 <USBD_StdItfReq>
 8013cca:	4603      	mov	r3, r0
 8013ccc:	73fb      	strb	r3, [r7, #15]
 8013cce:	e016      	b.n	8013cfe <USBD_LL_SetupStage+0xa0>
 8013cd0:	687b      	ldr	r3, [r7, #4]
 8013cd2:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8013cd6:	4619      	mov	r1, r3
 8013cd8:	6878      	ldr	r0, [r7, #4]
 8013cda:	f000 fc2d 	bl	8014538 <USBD_StdEPReq>
 8013cde:	4603      	mov	r3, r0
 8013ce0:	73fb      	strb	r3, [r7, #15]
 8013ce2:	e00c      	b.n	8013cfe <USBD_LL_SetupStage+0xa0>
 8013ce4:	687b      	ldr	r3, [r7, #4]
 8013ce6:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8013cea:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 8013cee:	b2db      	uxtb	r3, r3
 8013cf0:	4619      	mov	r1, r3
 8013cf2:	6878      	ldr	r0, [r7, #4]
 8013cf4:	f001 fe26 	bl	8015944 <USBD_LL_StallEP>
 8013cf8:	4603      	mov	r3, r0
 8013cfa:	73fb      	strb	r3, [r7, #15]
 8013cfc:	bf00      	nop
 8013cfe:	7bfb      	ldrb	r3, [r7, #15]
 8013d00:	4618      	mov	r0, r3
 8013d02:	3710      	adds	r7, #16
 8013d04:	46bd      	mov	sp, r7
 8013d06:	bd80      	pop	{r7, pc}

08013d08 <USBD_LL_DataOutStage>:
 8013d08:	b580      	push	{r7, lr}
 8013d0a:	b086      	sub	sp, #24
 8013d0c:	af00      	add	r7, sp, #0
 8013d0e:	60f8      	str	r0, [r7, #12]
 8013d10:	460b      	mov	r3, r1
 8013d12:	607a      	str	r2, [r7, #4]
 8013d14:	72fb      	strb	r3, [r7, #11]
 8013d16:	2300      	movs	r3, #0
 8013d18:	75fb      	strb	r3, [r7, #23]
 8013d1a:	7afb      	ldrb	r3, [r7, #11]
 8013d1c:	2b00      	cmp	r3, #0
 8013d1e:	d16e      	bne.n	8013dfe <USBD_LL_DataOutStage+0xf6>
 8013d20:	68fb      	ldr	r3, [r7, #12]
 8013d22:	f503 73aa 	add.w	r3, r3, #340	@ 0x154
 8013d26:	613b      	str	r3, [r7, #16]
 8013d28:	68fb      	ldr	r3, [r7, #12]
 8013d2a:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 8013d2e:	2b03      	cmp	r3, #3
 8013d30:	f040 8098 	bne.w	8013e64 <USBD_LL_DataOutStage+0x15c>
 8013d34:	693b      	ldr	r3, [r7, #16]
 8013d36:	689a      	ldr	r2, [r3, #8]
 8013d38:	693b      	ldr	r3, [r7, #16]
 8013d3a:	68db      	ldr	r3, [r3, #12]
 8013d3c:	429a      	cmp	r2, r3
 8013d3e:	d913      	bls.n	8013d68 <USBD_LL_DataOutStage+0x60>
 8013d40:	693b      	ldr	r3, [r7, #16]
 8013d42:	689a      	ldr	r2, [r3, #8]
 8013d44:	693b      	ldr	r3, [r7, #16]
 8013d46:	68db      	ldr	r3, [r3, #12]
 8013d48:	1ad2      	subs	r2, r2, r3
 8013d4a:	693b      	ldr	r3, [r7, #16]
 8013d4c:	609a      	str	r2, [r3, #8]
 8013d4e:	693b      	ldr	r3, [r7, #16]
 8013d50:	68da      	ldr	r2, [r3, #12]
 8013d52:	693b      	ldr	r3, [r7, #16]
 8013d54:	689b      	ldr	r3, [r3, #8]
 8013d56:	4293      	cmp	r3, r2
 8013d58:	bf28      	it	cs
 8013d5a:	4613      	movcs	r3, r2
 8013d5c:	461a      	mov	r2, r3
 8013d5e:	6879      	ldr	r1, [r7, #4]
 8013d60:	68f8      	ldr	r0, [r7, #12]
 8013d62:	f001 f9be 	bl	80150e2 <USBD_CtlContinueRx>
 8013d66:	e07d      	b.n	8013e64 <USBD_LL_DataOutStage+0x15c>
 8013d68:	68fb      	ldr	r3, [r7, #12]
 8013d6a:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8013d6e:	f003 031f 	and.w	r3, r3, #31
 8013d72:	2b02      	cmp	r3, #2
 8013d74:	d014      	beq.n	8013da0 <USBD_LL_DataOutStage+0x98>
 8013d76:	2b02      	cmp	r3, #2
 8013d78:	d81d      	bhi.n	8013db6 <USBD_LL_DataOutStage+0xae>
 8013d7a:	2b00      	cmp	r3, #0
 8013d7c:	d002      	beq.n	8013d84 <USBD_LL_DataOutStage+0x7c>
 8013d7e:	2b01      	cmp	r3, #1
 8013d80:	d003      	beq.n	8013d8a <USBD_LL_DataOutStage+0x82>
 8013d82:	e018      	b.n	8013db6 <USBD_LL_DataOutStage+0xae>
 8013d84:	2300      	movs	r3, #0
 8013d86:	75bb      	strb	r3, [r7, #22]
 8013d88:	e018      	b.n	8013dbc <USBD_LL_DataOutStage+0xb4>
 8013d8a:	68fb      	ldr	r3, [r7, #12]
 8013d8c:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	@ 0x2ae
 8013d90:	b2db      	uxtb	r3, r3
 8013d92:	4619      	mov	r1, r3
 8013d94:	68f8      	ldr	r0, [r7, #12]
 8013d96:	f000 fa64 	bl	8014262 <USBD_CoreFindIF>
 8013d9a:	4603      	mov	r3, r0
 8013d9c:	75bb      	strb	r3, [r7, #22]
 8013d9e:	e00d      	b.n	8013dbc <USBD_LL_DataOutStage+0xb4>
 8013da0:	68fb      	ldr	r3, [r7, #12]
 8013da2:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	@ 0x2ae
 8013da6:	b2db      	uxtb	r3, r3
 8013da8:	4619      	mov	r1, r3
 8013daa:	68f8      	ldr	r0, [r7, #12]
 8013dac:	f000 fa66 	bl	801427c <USBD_CoreFindEP>
 8013db0:	4603      	mov	r3, r0
 8013db2:	75bb      	strb	r3, [r7, #22]
 8013db4:	e002      	b.n	8013dbc <USBD_LL_DataOutStage+0xb4>
 8013db6:	2300      	movs	r3, #0
 8013db8:	75bb      	strb	r3, [r7, #22]
 8013dba:	bf00      	nop
 8013dbc:	7dbb      	ldrb	r3, [r7, #22]
 8013dbe:	2b00      	cmp	r3, #0
 8013dc0:	d119      	bne.n	8013df6 <USBD_LL_DataOutStage+0xee>
 8013dc2:	68fb      	ldr	r3, [r7, #12]
 8013dc4:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8013dc8:	b2db      	uxtb	r3, r3
 8013dca:	2b03      	cmp	r3, #3
 8013dcc:	d113      	bne.n	8013df6 <USBD_LL_DataOutStage+0xee>
 8013dce:	7dba      	ldrb	r2, [r7, #22]
 8013dd0:	68fb      	ldr	r3, [r7, #12]
 8013dd2:	32ae      	adds	r2, #174	@ 0xae
 8013dd4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013dd8:	691b      	ldr	r3, [r3, #16]
 8013dda:	2b00      	cmp	r3, #0
 8013ddc:	d00b      	beq.n	8013df6 <USBD_LL_DataOutStage+0xee>
 8013dde:	7dba      	ldrb	r2, [r7, #22]
 8013de0:	68fb      	ldr	r3, [r7, #12]
 8013de2:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8013de6:	7dba      	ldrb	r2, [r7, #22]
 8013de8:	68fb      	ldr	r3, [r7, #12]
 8013dea:	32ae      	adds	r2, #174	@ 0xae
 8013dec:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013df0:	691b      	ldr	r3, [r3, #16]
 8013df2:	68f8      	ldr	r0, [r7, #12]
 8013df4:	4798      	blx	r3
 8013df6:	68f8      	ldr	r0, [r7, #12]
 8013df8:	f001 f984 	bl	8015104 <USBD_CtlSendStatus>
 8013dfc:	e032      	b.n	8013e64 <USBD_LL_DataOutStage+0x15c>
 8013dfe:	7afb      	ldrb	r3, [r7, #11]
 8013e00:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8013e04:	b2db      	uxtb	r3, r3
 8013e06:	4619      	mov	r1, r3
 8013e08:	68f8      	ldr	r0, [r7, #12]
 8013e0a:	f000 fa37 	bl	801427c <USBD_CoreFindEP>
 8013e0e:	4603      	mov	r3, r0
 8013e10:	75bb      	strb	r3, [r7, #22]
 8013e12:	7dbb      	ldrb	r3, [r7, #22]
 8013e14:	2bff      	cmp	r3, #255	@ 0xff
 8013e16:	d025      	beq.n	8013e64 <USBD_LL_DataOutStage+0x15c>
 8013e18:	7dbb      	ldrb	r3, [r7, #22]
 8013e1a:	2b00      	cmp	r3, #0
 8013e1c:	d122      	bne.n	8013e64 <USBD_LL_DataOutStage+0x15c>
 8013e1e:	68fb      	ldr	r3, [r7, #12]
 8013e20:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8013e24:	b2db      	uxtb	r3, r3
 8013e26:	2b03      	cmp	r3, #3
 8013e28:	d117      	bne.n	8013e5a <USBD_LL_DataOutStage+0x152>
 8013e2a:	7dba      	ldrb	r2, [r7, #22]
 8013e2c:	68fb      	ldr	r3, [r7, #12]
 8013e2e:	32ae      	adds	r2, #174	@ 0xae
 8013e30:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013e34:	699b      	ldr	r3, [r3, #24]
 8013e36:	2b00      	cmp	r3, #0
 8013e38:	d00f      	beq.n	8013e5a <USBD_LL_DataOutStage+0x152>
 8013e3a:	7dba      	ldrb	r2, [r7, #22]
 8013e3c:	68fb      	ldr	r3, [r7, #12]
 8013e3e:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8013e42:	7dba      	ldrb	r2, [r7, #22]
 8013e44:	68fb      	ldr	r3, [r7, #12]
 8013e46:	32ae      	adds	r2, #174	@ 0xae
 8013e48:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013e4c:	699b      	ldr	r3, [r3, #24]
 8013e4e:	7afa      	ldrb	r2, [r7, #11]
 8013e50:	4611      	mov	r1, r2
 8013e52:	68f8      	ldr	r0, [r7, #12]
 8013e54:	4798      	blx	r3
 8013e56:	4603      	mov	r3, r0
 8013e58:	75fb      	strb	r3, [r7, #23]
 8013e5a:	7dfb      	ldrb	r3, [r7, #23]
 8013e5c:	2b00      	cmp	r3, #0
 8013e5e:	d001      	beq.n	8013e64 <USBD_LL_DataOutStage+0x15c>
 8013e60:	7dfb      	ldrb	r3, [r7, #23]
 8013e62:	e000      	b.n	8013e66 <USBD_LL_DataOutStage+0x15e>
 8013e64:	2300      	movs	r3, #0
 8013e66:	4618      	mov	r0, r3
 8013e68:	3718      	adds	r7, #24
 8013e6a:	46bd      	mov	sp, r7
 8013e6c:	bd80      	pop	{r7, pc}

08013e6e <USBD_LL_DataInStage>:
 8013e6e:	b580      	push	{r7, lr}
 8013e70:	b086      	sub	sp, #24
 8013e72:	af00      	add	r7, sp, #0
 8013e74:	60f8      	str	r0, [r7, #12]
 8013e76:	460b      	mov	r3, r1
 8013e78:	607a      	str	r2, [r7, #4]
 8013e7a:	72fb      	strb	r3, [r7, #11]
 8013e7c:	7afb      	ldrb	r3, [r7, #11]
 8013e7e:	2b00      	cmp	r3, #0
 8013e80:	d16f      	bne.n	8013f62 <USBD_LL_DataInStage+0xf4>
 8013e82:	68fb      	ldr	r3, [r7, #12]
 8013e84:	3314      	adds	r3, #20
 8013e86:	613b      	str	r3, [r7, #16]
 8013e88:	68fb      	ldr	r3, [r7, #12]
 8013e8a:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 8013e8e:	2b02      	cmp	r3, #2
 8013e90:	d15a      	bne.n	8013f48 <USBD_LL_DataInStage+0xda>
 8013e92:	693b      	ldr	r3, [r7, #16]
 8013e94:	689a      	ldr	r2, [r3, #8]
 8013e96:	693b      	ldr	r3, [r7, #16]
 8013e98:	68db      	ldr	r3, [r3, #12]
 8013e9a:	429a      	cmp	r2, r3
 8013e9c:	d914      	bls.n	8013ec8 <USBD_LL_DataInStage+0x5a>
 8013e9e:	693b      	ldr	r3, [r7, #16]
 8013ea0:	689a      	ldr	r2, [r3, #8]
 8013ea2:	693b      	ldr	r3, [r7, #16]
 8013ea4:	68db      	ldr	r3, [r3, #12]
 8013ea6:	1ad2      	subs	r2, r2, r3
 8013ea8:	693b      	ldr	r3, [r7, #16]
 8013eaa:	609a      	str	r2, [r3, #8]
 8013eac:	693b      	ldr	r3, [r7, #16]
 8013eae:	689b      	ldr	r3, [r3, #8]
 8013eb0:	461a      	mov	r2, r3
 8013eb2:	6879      	ldr	r1, [r7, #4]
 8013eb4:	68f8      	ldr	r0, [r7, #12]
 8013eb6:	f001 f8e6 	bl	8015086 <USBD_CtlContinueSendData>
 8013eba:	2300      	movs	r3, #0
 8013ebc:	2200      	movs	r2, #0
 8013ebe:	2100      	movs	r1, #0
 8013ec0:	68f8      	ldr	r0, [r7, #12]
 8013ec2:	f001 fde9 	bl	8015a98 <USBD_LL_PrepareReceive>
 8013ec6:	e03f      	b.n	8013f48 <USBD_LL_DataInStage+0xda>
 8013ec8:	693b      	ldr	r3, [r7, #16]
 8013eca:	68da      	ldr	r2, [r3, #12]
 8013ecc:	693b      	ldr	r3, [r7, #16]
 8013ece:	689b      	ldr	r3, [r3, #8]
 8013ed0:	429a      	cmp	r2, r3
 8013ed2:	d11c      	bne.n	8013f0e <USBD_LL_DataInStage+0xa0>
 8013ed4:	693b      	ldr	r3, [r7, #16]
 8013ed6:	685a      	ldr	r2, [r3, #4]
 8013ed8:	693b      	ldr	r3, [r7, #16]
 8013eda:	68db      	ldr	r3, [r3, #12]
 8013edc:	429a      	cmp	r2, r3
 8013ede:	d316      	bcc.n	8013f0e <USBD_LL_DataInStage+0xa0>
 8013ee0:	693b      	ldr	r3, [r7, #16]
 8013ee2:	685a      	ldr	r2, [r3, #4]
 8013ee4:	68fb      	ldr	r3, [r7, #12]
 8013ee6:	f8d3 3298 	ldr.w	r3, [r3, #664]	@ 0x298
 8013eea:	429a      	cmp	r2, r3
 8013eec:	d20f      	bcs.n	8013f0e <USBD_LL_DataInStage+0xa0>
 8013eee:	2200      	movs	r2, #0
 8013ef0:	2100      	movs	r1, #0
 8013ef2:	68f8      	ldr	r0, [r7, #12]
 8013ef4:	f001 f8c7 	bl	8015086 <USBD_CtlContinueSendData>
 8013ef8:	68fb      	ldr	r3, [r7, #12]
 8013efa:	2200      	movs	r2, #0
 8013efc:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298
 8013f00:	2300      	movs	r3, #0
 8013f02:	2200      	movs	r2, #0
 8013f04:	2100      	movs	r1, #0
 8013f06:	68f8      	ldr	r0, [r7, #12]
 8013f08:	f001 fdc6 	bl	8015a98 <USBD_LL_PrepareReceive>
 8013f0c:	e01c      	b.n	8013f48 <USBD_LL_DataInStage+0xda>
 8013f0e:	68fb      	ldr	r3, [r7, #12]
 8013f10:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8013f14:	b2db      	uxtb	r3, r3
 8013f16:	2b03      	cmp	r3, #3
 8013f18:	d10f      	bne.n	8013f3a <USBD_LL_DataInStage+0xcc>
 8013f1a:	68fb      	ldr	r3, [r7, #12]
 8013f1c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8013f20:	68db      	ldr	r3, [r3, #12]
 8013f22:	2b00      	cmp	r3, #0
 8013f24:	d009      	beq.n	8013f3a <USBD_LL_DataInStage+0xcc>
 8013f26:	68fb      	ldr	r3, [r7, #12]
 8013f28:	2200      	movs	r2, #0
 8013f2a:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8013f2e:	68fb      	ldr	r3, [r7, #12]
 8013f30:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8013f34:	68db      	ldr	r3, [r3, #12]
 8013f36:	68f8      	ldr	r0, [r7, #12]
 8013f38:	4798      	blx	r3
 8013f3a:	2180      	movs	r1, #128	@ 0x80
 8013f3c:	68f8      	ldr	r0, [r7, #12]
 8013f3e:	f001 fd01 	bl	8015944 <USBD_LL_StallEP>
 8013f42:	68f8      	ldr	r0, [r7, #12]
 8013f44:	f001 f8f1 	bl	801512a <USBD_CtlReceiveStatus>
 8013f48:	68fb      	ldr	r3, [r7, #12]
 8013f4a:	f893 32a0 	ldrb.w	r3, [r3, #672]	@ 0x2a0
 8013f4e:	2b00      	cmp	r3, #0
 8013f50:	d03a      	beq.n	8013fc8 <USBD_LL_DataInStage+0x15a>
 8013f52:	68f8      	ldr	r0, [r7, #12]
 8013f54:	f7ff fe42 	bl	8013bdc <USBD_RunTestMode>
 8013f58:	68fb      	ldr	r3, [r7, #12]
 8013f5a:	2200      	movs	r2, #0
 8013f5c:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8013f60:	e032      	b.n	8013fc8 <USBD_LL_DataInStage+0x15a>
 8013f62:	7afb      	ldrb	r3, [r7, #11]
 8013f64:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8013f68:	b2db      	uxtb	r3, r3
 8013f6a:	4619      	mov	r1, r3
 8013f6c:	68f8      	ldr	r0, [r7, #12]
 8013f6e:	f000 f985 	bl	801427c <USBD_CoreFindEP>
 8013f72:	4603      	mov	r3, r0
 8013f74:	75fb      	strb	r3, [r7, #23]
 8013f76:	7dfb      	ldrb	r3, [r7, #23]
 8013f78:	2bff      	cmp	r3, #255	@ 0xff
 8013f7a:	d025      	beq.n	8013fc8 <USBD_LL_DataInStage+0x15a>
 8013f7c:	7dfb      	ldrb	r3, [r7, #23]
 8013f7e:	2b00      	cmp	r3, #0
 8013f80:	d122      	bne.n	8013fc8 <USBD_LL_DataInStage+0x15a>
 8013f82:	68fb      	ldr	r3, [r7, #12]
 8013f84:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8013f88:	b2db      	uxtb	r3, r3
 8013f8a:	2b03      	cmp	r3, #3
 8013f8c:	d11c      	bne.n	8013fc8 <USBD_LL_DataInStage+0x15a>
 8013f8e:	7dfa      	ldrb	r2, [r7, #23]
 8013f90:	68fb      	ldr	r3, [r7, #12]
 8013f92:	32ae      	adds	r2, #174	@ 0xae
 8013f94:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013f98:	695b      	ldr	r3, [r3, #20]
 8013f9a:	2b00      	cmp	r3, #0
 8013f9c:	d014      	beq.n	8013fc8 <USBD_LL_DataInStage+0x15a>
 8013f9e:	7dfa      	ldrb	r2, [r7, #23]
 8013fa0:	68fb      	ldr	r3, [r7, #12]
 8013fa2:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8013fa6:	7dfa      	ldrb	r2, [r7, #23]
 8013fa8:	68fb      	ldr	r3, [r7, #12]
 8013faa:	32ae      	adds	r2, #174	@ 0xae
 8013fac:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013fb0:	695b      	ldr	r3, [r3, #20]
 8013fb2:	7afa      	ldrb	r2, [r7, #11]
 8013fb4:	4611      	mov	r1, r2
 8013fb6:	68f8      	ldr	r0, [r7, #12]
 8013fb8:	4798      	blx	r3
 8013fba:	4603      	mov	r3, r0
 8013fbc:	75bb      	strb	r3, [r7, #22]
 8013fbe:	7dbb      	ldrb	r3, [r7, #22]
 8013fc0:	2b00      	cmp	r3, #0
 8013fc2:	d001      	beq.n	8013fc8 <USBD_LL_DataInStage+0x15a>
 8013fc4:	7dbb      	ldrb	r3, [r7, #22]
 8013fc6:	e000      	b.n	8013fca <USBD_LL_DataInStage+0x15c>
 8013fc8:	2300      	movs	r3, #0
 8013fca:	4618      	mov	r0, r3
 8013fcc:	3718      	adds	r7, #24
 8013fce:	46bd      	mov	sp, r7
 8013fd0:	bd80      	pop	{r7, pc}

08013fd2 <USBD_LL_Reset>:
 8013fd2:	b580      	push	{r7, lr}
 8013fd4:	b084      	sub	sp, #16
 8013fd6:	af00      	add	r7, sp, #0
 8013fd8:	6078      	str	r0, [r7, #4]
 8013fda:	2300      	movs	r3, #0
 8013fdc:	73fb      	strb	r3, [r7, #15]
 8013fde:	687b      	ldr	r3, [r7, #4]
 8013fe0:	2201      	movs	r2, #1
 8013fe2:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8013fe6:	687b      	ldr	r3, [r7, #4]
 8013fe8:	2200      	movs	r2, #0
 8013fea:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8013fee:	687b      	ldr	r3, [r7, #4]
 8013ff0:	2200      	movs	r2, #0
 8013ff2:	605a      	str	r2, [r3, #4]
 8013ff4:	687b      	ldr	r3, [r7, #4]
 8013ff6:	2200      	movs	r2, #0
 8013ff8:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 8013ffc:	687b      	ldr	r3, [r7, #4]
 8013ffe:	2200      	movs	r2, #0
 8014000:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8014004:	687b      	ldr	r3, [r7, #4]
 8014006:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 801400a:	2b00      	cmp	r3, #0
 801400c:	d014      	beq.n	8014038 <USBD_LL_Reset+0x66>
 801400e:	687b      	ldr	r3, [r7, #4]
 8014010:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014014:	685b      	ldr	r3, [r3, #4]
 8014016:	2b00      	cmp	r3, #0
 8014018:	d00e      	beq.n	8014038 <USBD_LL_Reset+0x66>
 801401a:	687b      	ldr	r3, [r7, #4]
 801401c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014020:	685b      	ldr	r3, [r3, #4]
 8014022:	687a      	ldr	r2, [r7, #4]
 8014024:	6852      	ldr	r2, [r2, #4]
 8014026:	b2d2      	uxtb	r2, r2
 8014028:	4611      	mov	r1, r2
 801402a:	6878      	ldr	r0, [r7, #4]
 801402c:	4798      	blx	r3
 801402e:	4603      	mov	r3, r0
 8014030:	2b00      	cmp	r3, #0
 8014032:	d001      	beq.n	8014038 <USBD_LL_Reset+0x66>
 8014034:	2303      	movs	r3, #3
 8014036:	73fb      	strb	r3, [r7, #15]
 8014038:	2340      	movs	r3, #64	@ 0x40
 801403a:	2200      	movs	r2, #0
 801403c:	2100      	movs	r1, #0
 801403e:	6878      	ldr	r0, [r7, #4]
 8014040:	f001 fc3b 	bl	80158ba <USBD_LL_OpenEP>
 8014044:	687b      	ldr	r3, [r7, #4]
 8014046:	2201      	movs	r2, #1
 8014048:	f8a3 2164 	strh.w	r2, [r3, #356]	@ 0x164
 801404c:	687b      	ldr	r3, [r7, #4]
 801404e:	2240      	movs	r2, #64	@ 0x40
 8014050:	f8c3 2160 	str.w	r2, [r3, #352]	@ 0x160
 8014054:	2340      	movs	r3, #64	@ 0x40
 8014056:	2200      	movs	r2, #0
 8014058:	2180      	movs	r1, #128	@ 0x80
 801405a:	6878      	ldr	r0, [r7, #4]
 801405c:	f001 fc2d 	bl	80158ba <USBD_LL_OpenEP>
 8014060:	687b      	ldr	r3, [r7, #4]
 8014062:	2201      	movs	r2, #1
 8014064:	849a      	strh	r2, [r3, #36]	@ 0x24
 8014066:	687b      	ldr	r3, [r7, #4]
 8014068:	2240      	movs	r2, #64	@ 0x40
 801406a:	621a      	str	r2, [r3, #32]
 801406c:	7bfb      	ldrb	r3, [r7, #15]
 801406e:	4618      	mov	r0, r3
 8014070:	3710      	adds	r7, #16
 8014072:	46bd      	mov	sp, r7
 8014074:	bd80      	pop	{r7, pc}

08014076 <USBD_LL_SetSpeed>:
 8014076:	b480      	push	{r7}
 8014078:	b083      	sub	sp, #12
 801407a:	af00      	add	r7, sp, #0
 801407c:	6078      	str	r0, [r7, #4]
 801407e:	460b      	mov	r3, r1
 8014080:	70fb      	strb	r3, [r7, #3]
 8014082:	687b      	ldr	r3, [r7, #4]
 8014084:	78fa      	ldrb	r2, [r7, #3]
 8014086:	741a      	strb	r2, [r3, #16]
 8014088:	2300      	movs	r3, #0
 801408a:	4618      	mov	r0, r3
 801408c:	370c      	adds	r7, #12
 801408e:	46bd      	mov	sp, r7
 8014090:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014094:	4770      	bx	lr

08014096 <USBD_LL_Suspend>:
 8014096:	b480      	push	{r7}
 8014098:	b083      	sub	sp, #12
 801409a:	af00      	add	r7, sp, #0
 801409c:	6078      	str	r0, [r7, #4]
 801409e:	687b      	ldr	r3, [r7, #4]
 80140a0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80140a4:	b2db      	uxtb	r3, r3
 80140a6:	2b04      	cmp	r3, #4
 80140a8:	d006      	beq.n	80140b8 <USBD_LL_Suspend+0x22>
 80140aa:	687b      	ldr	r3, [r7, #4]
 80140ac:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80140b0:	b2da      	uxtb	r2, r3
 80140b2:	687b      	ldr	r3, [r7, #4]
 80140b4:	f883 229d 	strb.w	r2, [r3, #669]	@ 0x29d
 80140b8:	687b      	ldr	r3, [r7, #4]
 80140ba:	2204      	movs	r2, #4
 80140bc:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 80140c0:	2300      	movs	r3, #0
 80140c2:	4618      	mov	r0, r3
 80140c4:	370c      	adds	r7, #12
 80140c6:	46bd      	mov	sp, r7
 80140c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80140cc:	4770      	bx	lr

080140ce <USBD_LL_Resume>:
 80140ce:	b480      	push	{r7}
 80140d0:	b083      	sub	sp, #12
 80140d2:	af00      	add	r7, sp, #0
 80140d4:	6078      	str	r0, [r7, #4]
 80140d6:	687b      	ldr	r3, [r7, #4]
 80140d8:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80140dc:	b2db      	uxtb	r3, r3
 80140de:	2b04      	cmp	r3, #4
 80140e0:	d106      	bne.n	80140f0 <USBD_LL_Resume+0x22>
 80140e2:	687b      	ldr	r3, [r7, #4]
 80140e4:	f893 329d 	ldrb.w	r3, [r3, #669]	@ 0x29d
 80140e8:	b2da      	uxtb	r2, r3
 80140ea:	687b      	ldr	r3, [r7, #4]
 80140ec:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 80140f0:	2300      	movs	r3, #0
 80140f2:	4618      	mov	r0, r3
 80140f4:	370c      	adds	r7, #12
 80140f6:	46bd      	mov	sp, r7
 80140f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80140fc:	4770      	bx	lr

080140fe <USBD_LL_SOF>:
 80140fe:	b580      	push	{r7, lr}
 8014100:	b082      	sub	sp, #8
 8014102:	af00      	add	r7, sp, #0
 8014104:	6078      	str	r0, [r7, #4]
 8014106:	687b      	ldr	r3, [r7, #4]
 8014108:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801410c:	b2db      	uxtb	r3, r3
 801410e:	2b03      	cmp	r3, #3
 8014110:	d110      	bne.n	8014134 <USBD_LL_SOF+0x36>
 8014112:	687b      	ldr	r3, [r7, #4]
 8014114:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014118:	2b00      	cmp	r3, #0
 801411a:	d00b      	beq.n	8014134 <USBD_LL_SOF+0x36>
 801411c:	687b      	ldr	r3, [r7, #4]
 801411e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014122:	69db      	ldr	r3, [r3, #28]
 8014124:	2b00      	cmp	r3, #0
 8014126:	d005      	beq.n	8014134 <USBD_LL_SOF+0x36>
 8014128:	687b      	ldr	r3, [r7, #4]
 801412a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 801412e:	69db      	ldr	r3, [r3, #28]
 8014130:	6878      	ldr	r0, [r7, #4]
 8014132:	4798      	blx	r3
 8014134:	2300      	movs	r3, #0
 8014136:	4618      	mov	r0, r3
 8014138:	3708      	adds	r7, #8
 801413a:	46bd      	mov	sp, r7
 801413c:	bd80      	pop	{r7, pc}

0801413e <USBD_LL_IsoINIncomplete>:
 801413e:	b580      	push	{r7, lr}
 8014140:	b082      	sub	sp, #8
 8014142:	af00      	add	r7, sp, #0
 8014144:	6078      	str	r0, [r7, #4]
 8014146:	460b      	mov	r3, r1
 8014148:	70fb      	strb	r3, [r7, #3]
 801414a:	687b      	ldr	r3, [r7, #4]
 801414c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8014150:	687b      	ldr	r3, [r7, #4]
 8014152:	32ae      	adds	r2, #174	@ 0xae
 8014154:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8014158:	2b00      	cmp	r3, #0
 801415a:	d101      	bne.n	8014160 <USBD_LL_IsoINIncomplete+0x22>
 801415c:	2303      	movs	r3, #3
 801415e:	e01c      	b.n	801419a <USBD_LL_IsoINIncomplete+0x5c>
 8014160:	687b      	ldr	r3, [r7, #4]
 8014162:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014166:	b2db      	uxtb	r3, r3
 8014168:	2b03      	cmp	r3, #3
 801416a:	d115      	bne.n	8014198 <USBD_LL_IsoINIncomplete+0x5a>
 801416c:	687b      	ldr	r3, [r7, #4]
 801416e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8014172:	687b      	ldr	r3, [r7, #4]
 8014174:	32ae      	adds	r2, #174	@ 0xae
 8014176:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801417a:	6a1b      	ldr	r3, [r3, #32]
 801417c:	2b00      	cmp	r3, #0
 801417e:	d00b      	beq.n	8014198 <USBD_LL_IsoINIncomplete+0x5a>
 8014180:	687b      	ldr	r3, [r7, #4]
 8014182:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8014186:	687b      	ldr	r3, [r7, #4]
 8014188:	32ae      	adds	r2, #174	@ 0xae
 801418a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801418e:	6a1b      	ldr	r3, [r3, #32]
 8014190:	78fa      	ldrb	r2, [r7, #3]
 8014192:	4611      	mov	r1, r2
 8014194:	6878      	ldr	r0, [r7, #4]
 8014196:	4798      	blx	r3
 8014198:	2300      	movs	r3, #0
 801419a:	4618      	mov	r0, r3
 801419c:	3708      	adds	r7, #8
 801419e:	46bd      	mov	sp, r7
 80141a0:	bd80      	pop	{r7, pc}

080141a2 <USBD_LL_IsoOUTIncomplete>:
 80141a2:	b580      	push	{r7, lr}
 80141a4:	b082      	sub	sp, #8
 80141a6:	af00      	add	r7, sp, #0
 80141a8:	6078      	str	r0, [r7, #4]
 80141aa:	460b      	mov	r3, r1
 80141ac:	70fb      	strb	r3, [r7, #3]
 80141ae:	687b      	ldr	r3, [r7, #4]
 80141b0:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80141b4:	687b      	ldr	r3, [r7, #4]
 80141b6:	32ae      	adds	r2, #174	@ 0xae
 80141b8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80141bc:	2b00      	cmp	r3, #0
 80141be:	d101      	bne.n	80141c4 <USBD_LL_IsoOUTIncomplete+0x22>
 80141c0:	2303      	movs	r3, #3
 80141c2:	e01c      	b.n	80141fe <USBD_LL_IsoOUTIncomplete+0x5c>
 80141c4:	687b      	ldr	r3, [r7, #4]
 80141c6:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80141ca:	b2db      	uxtb	r3, r3
 80141cc:	2b03      	cmp	r3, #3
 80141ce:	d115      	bne.n	80141fc <USBD_LL_IsoOUTIncomplete+0x5a>
 80141d0:	687b      	ldr	r3, [r7, #4]
 80141d2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80141d6:	687b      	ldr	r3, [r7, #4]
 80141d8:	32ae      	adds	r2, #174	@ 0xae
 80141da:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80141de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80141e0:	2b00      	cmp	r3, #0
 80141e2:	d00b      	beq.n	80141fc <USBD_LL_IsoOUTIncomplete+0x5a>
 80141e4:	687b      	ldr	r3, [r7, #4]
 80141e6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80141ea:	687b      	ldr	r3, [r7, #4]
 80141ec:	32ae      	adds	r2, #174	@ 0xae
 80141ee:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80141f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80141f4:	78fa      	ldrb	r2, [r7, #3]
 80141f6:	4611      	mov	r1, r2
 80141f8:	6878      	ldr	r0, [r7, #4]
 80141fa:	4798      	blx	r3
 80141fc:	2300      	movs	r3, #0
 80141fe:	4618      	mov	r0, r3
 8014200:	3708      	adds	r7, #8
 8014202:	46bd      	mov	sp, r7
 8014204:	bd80      	pop	{r7, pc}

08014206 <USBD_LL_DevConnected>:
 8014206:	b480      	push	{r7}
 8014208:	b083      	sub	sp, #12
 801420a:	af00      	add	r7, sp, #0
 801420c:	6078      	str	r0, [r7, #4]
 801420e:	2300      	movs	r3, #0
 8014210:	4618      	mov	r0, r3
 8014212:	370c      	adds	r7, #12
 8014214:	46bd      	mov	sp, r7
 8014216:	f85d 7b04 	ldr.w	r7, [sp], #4
 801421a:	4770      	bx	lr

0801421c <USBD_LL_DevDisconnected>:
 801421c:	b580      	push	{r7, lr}
 801421e:	b084      	sub	sp, #16
 8014220:	af00      	add	r7, sp, #0
 8014222:	6078      	str	r0, [r7, #4]
 8014224:	2300      	movs	r3, #0
 8014226:	73fb      	strb	r3, [r7, #15]
 8014228:	687b      	ldr	r3, [r7, #4]
 801422a:	2201      	movs	r2, #1
 801422c:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8014230:	687b      	ldr	r3, [r7, #4]
 8014232:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014236:	2b00      	cmp	r3, #0
 8014238:	d00e      	beq.n	8014258 <USBD_LL_DevDisconnected+0x3c>
 801423a:	687b      	ldr	r3, [r7, #4]
 801423c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014240:	685b      	ldr	r3, [r3, #4]
 8014242:	687a      	ldr	r2, [r7, #4]
 8014244:	6852      	ldr	r2, [r2, #4]
 8014246:	b2d2      	uxtb	r2, r2
 8014248:	4611      	mov	r1, r2
 801424a:	6878      	ldr	r0, [r7, #4]
 801424c:	4798      	blx	r3
 801424e:	4603      	mov	r3, r0
 8014250:	2b00      	cmp	r3, #0
 8014252:	d001      	beq.n	8014258 <USBD_LL_DevDisconnected+0x3c>
 8014254:	2303      	movs	r3, #3
 8014256:	73fb      	strb	r3, [r7, #15]
 8014258:	7bfb      	ldrb	r3, [r7, #15]
 801425a:	4618      	mov	r0, r3
 801425c:	3710      	adds	r7, #16
 801425e:	46bd      	mov	sp, r7
 8014260:	bd80      	pop	{r7, pc}

08014262 <USBD_CoreFindIF>:
 8014262:	b480      	push	{r7}
 8014264:	b083      	sub	sp, #12
 8014266:	af00      	add	r7, sp, #0
 8014268:	6078      	str	r0, [r7, #4]
 801426a:	460b      	mov	r3, r1
 801426c:	70fb      	strb	r3, [r7, #3]
 801426e:	2300      	movs	r3, #0
 8014270:	4618      	mov	r0, r3
 8014272:	370c      	adds	r7, #12
 8014274:	46bd      	mov	sp, r7
 8014276:	f85d 7b04 	ldr.w	r7, [sp], #4
 801427a:	4770      	bx	lr

0801427c <USBD_CoreFindEP>:
 801427c:	b480      	push	{r7}
 801427e:	b083      	sub	sp, #12
 8014280:	af00      	add	r7, sp, #0
 8014282:	6078      	str	r0, [r7, #4]
 8014284:	460b      	mov	r3, r1
 8014286:	70fb      	strb	r3, [r7, #3]
 8014288:	2300      	movs	r3, #0
 801428a:	4618      	mov	r0, r3
 801428c:	370c      	adds	r7, #12
 801428e:	46bd      	mov	sp, r7
 8014290:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014294:	4770      	bx	lr

08014296 <USBD_GetEpDesc>:
 8014296:	b580      	push	{r7, lr}
 8014298:	b086      	sub	sp, #24
 801429a:	af00      	add	r7, sp, #0
 801429c:	6078      	str	r0, [r7, #4]
 801429e:	460b      	mov	r3, r1
 80142a0:	70fb      	strb	r3, [r7, #3]
 80142a2:	687b      	ldr	r3, [r7, #4]
 80142a4:	617b      	str	r3, [r7, #20]
 80142a6:	687b      	ldr	r3, [r7, #4]
 80142a8:	60fb      	str	r3, [r7, #12]
 80142aa:	2300      	movs	r3, #0
 80142ac:	613b      	str	r3, [r7, #16]
 80142ae:	68fb      	ldr	r3, [r7, #12]
 80142b0:	885b      	ldrh	r3, [r3, #2]
 80142b2:	b29b      	uxth	r3, r3
 80142b4:	68fa      	ldr	r2, [r7, #12]
 80142b6:	7812      	ldrb	r2, [r2, #0]
 80142b8:	4293      	cmp	r3, r2
 80142ba:	d91f      	bls.n	80142fc <USBD_GetEpDesc+0x66>
 80142bc:	68fb      	ldr	r3, [r7, #12]
 80142be:	781b      	ldrb	r3, [r3, #0]
 80142c0:	817b      	strh	r3, [r7, #10]
 80142c2:	e013      	b.n	80142ec <USBD_GetEpDesc+0x56>
 80142c4:	f107 030a 	add.w	r3, r7, #10
 80142c8:	4619      	mov	r1, r3
 80142ca:	6978      	ldr	r0, [r7, #20]
 80142cc:	f000 f81b 	bl	8014306 <USBD_GetNextDesc>
 80142d0:	6178      	str	r0, [r7, #20]
 80142d2:	697b      	ldr	r3, [r7, #20]
 80142d4:	785b      	ldrb	r3, [r3, #1]
 80142d6:	2b05      	cmp	r3, #5
 80142d8:	d108      	bne.n	80142ec <USBD_GetEpDesc+0x56>
 80142da:	697b      	ldr	r3, [r7, #20]
 80142dc:	613b      	str	r3, [r7, #16]
 80142de:	693b      	ldr	r3, [r7, #16]
 80142e0:	789b      	ldrb	r3, [r3, #2]
 80142e2:	78fa      	ldrb	r2, [r7, #3]
 80142e4:	429a      	cmp	r2, r3
 80142e6:	d008      	beq.n	80142fa <USBD_GetEpDesc+0x64>
 80142e8:	2300      	movs	r3, #0
 80142ea:	613b      	str	r3, [r7, #16]
 80142ec:	68fb      	ldr	r3, [r7, #12]
 80142ee:	885b      	ldrh	r3, [r3, #2]
 80142f0:	b29a      	uxth	r2, r3
 80142f2:	897b      	ldrh	r3, [r7, #10]
 80142f4:	429a      	cmp	r2, r3
 80142f6:	d8e5      	bhi.n	80142c4 <USBD_GetEpDesc+0x2e>
 80142f8:	e000      	b.n	80142fc <USBD_GetEpDesc+0x66>
 80142fa:	bf00      	nop
 80142fc:	693b      	ldr	r3, [r7, #16]
 80142fe:	4618      	mov	r0, r3
 8014300:	3718      	adds	r7, #24
 8014302:	46bd      	mov	sp, r7
 8014304:	bd80      	pop	{r7, pc}

08014306 <USBD_GetNextDesc>:
 8014306:	b480      	push	{r7}
 8014308:	b085      	sub	sp, #20
 801430a:	af00      	add	r7, sp, #0
 801430c:	6078      	str	r0, [r7, #4]
 801430e:	6039      	str	r1, [r7, #0]
 8014310:	687b      	ldr	r3, [r7, #4]
 8014312:	60fb      	str	r3, [r7, #12]
 8014314:	683b      	ldr	r3, [r7, #0]
 8014316:	881b      	ldrh	r3, [r3, #0]
 8014318:	68fa      	ldr	r2, [r7, #12]
 801431a:	7812      	ldrb	r2, [r2, #0]
 801431c:	4413      	add	r3, r2
 801431e:	b29a      	uxth	r2, r3
 8014320:	683b      	ldr	r3, [r7, #0]
 8014322:	801a      	strh	r2, [r3, #0]
 8014324:	68fb      	ldr	r3, [r7, #12]
 8014326:	781b      	ldrb	r3, [r3, #0]
 8014328:	461a      	mov	r2, r3
 801432a:	687b      	ldr	r3, [r7, #4]
 801432c:	4413      	add	r3, r2
 801432e:	60fb      	str	r3, [r7, #12]
 8014330:	68fb      	ldr	r3, [r7, #12]
 8014332:	4618      	mov	r0, r3
 8014334:	3714      	adds	r7, #20
 8014336:	46bd      	mov	sp, r7
 8014338:	f85d 7b04 	ldr.w	r7, [sp], #4
 801433c:	4770      	bx	lr

0801433e <SWAPBYTE>:
 801433e:	b480      	push	{r7}
 8014340:	b087      	sub	sp, #28
 8014342:	af00      	add	r7, sp, #0
 8014344:	6078      	str	r0, [r7, #4]
 8014346:	687b      	ldr	r3, [r7, #4]
 8014348:	617b      	str	r3, [r7, #20]
 801434a:	697b      	ldr	r3, [r7, #20]
 801434c:	781b      	ldrb	r3, [r3, #0]
 801434e:	827b      	strh	r3, [r7, #18]
 8014350:	697b      	ldr	r3, [r7, #20]
 8014352:	3301      	adds	r3, #1
 8014354:	617b      	str	r3, [r7, #20]
 8014356:	697b      	ldr	r3, [r7, #20]
 8014358:	781b      	ldrb	r3, [r3, #0]
 801435a:	823b      	strh	r3, [r7, #16]
 801435c:	8a3b      	ldrh	r3, [r7, #16]
 801435e:	021b      	lsls	r3, r3, #8
 8014360:	b21a      	sxth	r2, r3
 8014362:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8014366:	4313      	orrs	r3, r2
 8014368:	b21b      	sxth	r3, r3
 801436a:	81fb      	strh	r3, [r7, #14]
 801436c:	89fb      	ldrh	r3, [r7, #14]
 801436e:	4618      	mov	r0, r3
 8014370:	371c      	adds	r7, #28
 8014372:	46bd      	mov	sp, r7
 8014374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014378:	4770      	bx	lr
	...

0801437c <USBD_StdDevReq>:
 801437c:	b580      	push	{r7, lr}
 801437e:	b084      	sub	sp, #16
 8014380:	af00      	add	r7, sp, #0
 8014382:	6078      	str	r0, [r7, #4]
 8014384:	6039      	str	r1, [r7, #0]
 8014386:	2300      	movs	r3, #0
 8014388:	73fb      	strb	r3, [r7, #15]
 801438a:	683b      	ldr	r3, [r7, #0]
 801438c:	781b      	ldrb	r3, [r3, #0]
 801438e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8014392:	2b40      	cmp	r3, #64	@ 0x40
 8014394:	d005      	beq.n	80143a2 <USBD_StdDevReq+0x26>
 8014396:	2b40      	cmp	r3, #64	@ 0x40
 8014398:	d857      	bhi.n	801444a <USBD_StdDevReq+0xce>
 801439a:	2b00      	cmp	r3, #0
 801439c:	d00f      	beq.n	80143be <USBD_StdDevReq+0x42>
 801439e:	2b20      	cmp	r3, #32
 80143a0:	d153      	bne.n	801444a <USBD_StdDevReq+0xce>
 80143a2:	687b      	ldr	r3, [r7, #4]
 80143a4:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80143a8:	687b      	ldr	r3, [r7, #4]
 80143aa:	32ae      	adds	r2, #174	@ 0xae
 80143ac:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80143b0:	689b      	ldr	r3, [r3, #8]
 80143b2:	6839      	ldr	r1, [r7, #0]
 80143b4:	6878      	ldr	r0, [r7, #4]
 80143b6:	4798      	blx	r3
 80143b8:	4603      	mov	r3, r0
 80143ba:	73fb      	strb	r3, [r7, #15]
 80143bc:	e04a      	b.n	8014454 <USBD_StdDevReq+0xd8>
 80143be:	683b      	ldr	r3, [r7, #0]
 80143c0:	785b      	ldrb	r3, [r3, #1]
 80143c2:	2b09      	cmp	r3, #9
 80143c4:	d83b      	bhi.n	801443e <USBD_StdDevReq+0xc2>
 80143c6:	a201      	add	r2, pc, #4	@ (adr r2, 80143cc <USBD_StdDevReq+0x50>)
 80143c8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80143cc:	08014421 	.word	0x08014421
 80143d0:	08014435 	.word	0x08014435
 80143d4:	0801443f 	.word	0x0801443f
 80143d8:	0801442b 	.word	0x0801442b
 80143dc:	0801443f 	.word	0x0801443f
 80143e0:	080143ff 	.word	0x080143ff
 80143e4:	080143f5 	.word	0x080143f5
 80143e8:	0801443f 	.word	0x0801443f
 80143ec:	08014417 	.word	0x08014417
 80143f0:	08014409 	.word	0x08014409
 80143f4:	6839      	ldr	r1, [r7, #0]
 80143f6:	6878      	ldr	r0, [r7, #4]
 80143f8:	f000 fa3c 	bl	8014874 <USBD_GetDescriptor>
 80143fc:	e024      	b.n	8014448 <USBD_StdDevReq+0xcc>
 80143fe:	6839      	ldr	r1, [r7, #0]
 8014400:	6878      	ldr	r0, [r7, #4]
 8014402:	f000 fbcb 	bl	8014b9c <USBD_SetAddress>
 8014406:	e01f      	b.n	8014448 <USBD_StdDevReq+0xcc>
 8014408:	6839      	ldr	r1, [r7, #0]
 801440a:	6878      	ldr	r0, [r7, #4]
 801440c:	f000 fc0a 	bl	8014c24 <USBD_SetConfig>
 8014410:	4603      	mov	r3, r0
 8014412:	73fb      	strb	r3, [r7, #15]
 8014414:	e018      	b.n	8014448 <USBD_StdDevReq+0xcc>
 8014416:	6839      	ldr	r1, [r7, #0]
 8014418:	6878      	ldr	r0, [r7, #4]
 801441a:	f000 fcad 	bl	8014d78 <USBD_GetConfig>
 801441e:	e013      	b.n	8014448 <USBD_StdDevReq+0xcc>
 8014420:	6839      	ldr	r1, [r7, #0]
 8014422:	6878      	ldr	r0, [r7, #4]
 8014424:	f000 fcde 	bl	8014de4 <USBD_GetStatus>
 8014428:	e00e      	b.n	8014448 <USBD_StdDevReq+0xcc>
 801442a:	6839      	ldr	r1, [r7, #0]
 801442c:	6878      	ldr	r0, [r7, #4]
 801442e:	f000 fd0d 	bl	8014e4c <USBD_SetFeature>
 8014432:	e009      	b.n	8014448 <USBD_StdDevReq+0xcc>
 8014434:	6839      	ldr	r1, [r7, #0]
 8014436:	6878      	ldr	r0, [r7, #4]
 8014438:	f000 fd31 	bl	8014e9e <USBD_ClrFeature>
 801443c:	e004      	b.n	8014448 <USBD_StdDevReq+0xcc>
 801443e:	6839      	ldr	r1, [r7, #0]
 8014440:	6878      	ldr	r0, [r7, #4]
 8014442:	f000 fd88 	bl	8014f56 <USBD_CtlError>
 8014446:	bf00      	nop
 8014448:	e004      	b.n	8014454 <USBD_StdDevReq+0xd8>
 801444a:	6839      	ldr	r1, [r7, #0]
 801444c:	6878      	ldr	r0, [r7, #4]
 801444e:	f000 fd82 	bl	8014f56 <USBD_CtlError>
 8014452:	bf00      	nop
 8014454:	7bfb      	ldrb	r3, [r7, #15]
 8014456:	4618      	mov	r0, r3
 8014458:	3710      	adds	r7, #16
 801445a:	46bd      	mov	sp, r7
 801445c:	bd80      	pop	{r7, pc}
 801445e:	bf00      	nop

08014460 <USBD_StdItfReq>:
 8014460:	b580      	push	{r7, lr}
 8014462:	b084      	sub	sp, #16
 8014464:	af00      	add	r7, sp, #0
 8014466:	6078      	str	r0, [r7, #4]
 8014468:	6039      	str	r1, [r7, #0]
 801446a:	2300      	movs	r3, #0
 801446c:	73fb      	strb	r3, [r7, #15]
 801446e:	683b      	ldr	r3, [r7, #0]
 8014470:	781b      	ldrb	r3, [r3, #0]
 8014472:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8014476:	2b40      	cmp	r3, #64	@ 0x40
 8014478:	d005      	beq.n	8014486 <USBD_StdItfReq+0x26>
 801447a:	2b40      	cmp	r3, #64	@ 0x40
 801447c:	d852      	bhi.n	8014524 <USBD_StdItfReq+0xc4>
 801447e:	2b00      	cmp	r3, #0
 8014480:	d001      	beq.n	8014486 <USBD_StdItfReq+0x26>
 8014482:	2b20      	cmp	r3, #32
 8014484:	d14e      	bne.n	8014524 <USBD_StdItfReq+0xc4>
 8014486:	687b      	ldr	r3, [r7, #4]
 8014488:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801448c:	b2db      	uxtb	r3, r3
 801448e:	3b01      	subs	r3, #1
 8014490:	2b02      	cmp	r3, #2
 8014492:	d840      	bhi.n	8014516 <USBD_StdItfReq+0xb6>
 8014494:	683b      	ldr	r3, [r7, #0]
 8014496:	889b      	ldrh	r3, [r3, #4]
 8014498:	b2db      	uxtb	r3, r3
 801449a:	2b01      	cmp	r3, #1
 801449c:	d836      	bhi.n	801450c <USBD_StdItfReq+0xac>
 801449e:	683b      	ldr	r3, [r7, #0]
 80144a0:	889b      	ldrh	r3, [r3, #4]
 80144a2:	b2db      	uxtb	r3, r3
 80144a4:	4619      	mov	r1, r3
 80144a6:	6878      	ldr	r0, [r7, #4]
 80144a8:	f7ff fedb 	bl	8014262 <USBD_CoreFindIF>
 80144ac:	4603      	mov	r3, r0
 80144ae:	73bb      	strb	r3, [r7, #14]
 80144b0:	7bbb      	ldrb	r3, [r7, #14]
 80144b2:	2bff      	cmp	r3, #255	@ 0xff
 80144b4:	d01d      	beq.n	80144f2 <USBD_StdItfReq+0x92>
 80144b6:	7bbb      	ldrb	r3, [r7, #14]
 80144b8:	2b00      	cmp	r3, #0
 80144ba:	d11a      	bne.n	80144f2 <USBD_StdItfReq+0x92>
 80144bc:	7bba      	ldrb	r2, [r7, #14]
 80144be:	687b      	ldr	r3, [r7, #4]
 80144c0:	32ae      	adds	r2, #174	@ 0xae
 80144c2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80144c6:	689b      	ldr	r3, [r3, #8]
 80144c8:	2b00      	cmp	r3, #0
 80144ca:	d00f      	beq.n	80144ec <USBD_StdItfReq+0x8c>
 80144cc:	7bba      	ldrb	r2, [r7, #14]
 80144ce:	687b      	ldr	r3, [r7, #4]
 80144d0:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 80144d4:	7bba      	ldrb	r2, [r7, #14]
 80144d6:	687b      	ldr	r3, [r7, #4]
 80144d8:	32ae      	adds	r2, #174	@ 0xae
 80144da:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80144de:	689b      	ldr	r3, [r3, #8]
 80144e0:	6839      	ldr	r1, [r7, #0]
 80144e2:	6878      	ldr	r0, [r7, #4]
 80144e4:	4798      	blx	r3
 80144e6:	4603      	mov	r3, r0
 80144e8:	73fb      	strb	r3, [r7, #15]
 80144ea:	e004      	b.n	80144f6 <USBD_StdItfReq+0x96>
 80144ec:	2303      	movs	r3, #3
 80144ee:	73fb      	strb	r3, [r7, #15]
 80144f0:	e001      	b.n	80144f6 <USBD_StdItfReq+0x96>
 80144f2:	2303      	movs	r3, #3
 80144f4:	73fb      	strb	r3, [r7, #15]
 80144f6:	683b      	ldr	r3, [r7, #0]
 80144f8:	88db      	ldrh	r3, [r3, #6]
 80144fa:	2b00      	cmp	r3, #0
 80144fc:	d110      	bne.n	8014520 <USBD_StdItfReq+0xc0>
 80144fe:	7bfb      	ldrb	r3, [r7, #15]
 8014500:	2b00      	cmp	r3, #0
 8014502:	d10d      	bne.n	8014520 <USBD_StdItfReq+0xc0>
 8014504:	6878      	ldr	r0, [r7, #4]
 8014506:	f000 fdfd 	bl	8015104 <USBD_CtlSendStatus>
 801450a:	e009      	b.n	8014520 <USBD_StdItfReq+0xc0>
 801450c:	6839      	ldr	r1, [r7, #0]
 801450e:	6878      	ldr	r0, [r7, #4]
 8014510:	f000 fd21 	bl	8014f56 <USBD_CtlError>
 8014514:	e004      	b.n	8014520 <USBD_StdItfReq+0xc0>
 8014516:	6839      	ldr	r1, [r7, #0]
 8014518:	6878      	ldr	r0, [r7, #4]
 801451a:	f000 fd1c 	bl	8014f56 <USBD_CtlError>
 801451e:	e000      	b.n	8014522 <USBD_StdItfReq+0xc2>
 8014520:	bf00      	nop
 8014522:	e004      	b.n	801452e <USBD_StdItfReq+0xce>
 8014524:	6839      	ldr	r1, [r7, #0]
 8014526:	6878      	ldr	r0, [r7, #4]
 8014528:	f000 fd15 	bl	8014f56 <USBD_CtlError>
 801452c:	bf00      	nop
 801452e:	7bfb      	ldrb	r3, [r7, #15]
 8014530:	4618      	mov	r0, r3
 8014532:	3710      	adds	r7, #16
 8014534:	46bd      	mov	sp, r7
 8014536:	bd80      	pop	{r7, pc}

08014538 <USBD_StdEPReq>:
 8014538:	b580      	push	{r7, lr}
 801453a:	b084      	sub	sp, #16
 801453c:	af00      	add	r7, sp, #0
 801453e:	6078      	str	r0, [r7, #4]
 8014540:	6039      	str	r1, [r7, #0]
 8014542:	2300      	movs	r3, #0
 8014544:	73fb      	strb	r3, [r7, #15]
 8014546:	683b      	ldr	r3, [r7, #0]
 8014548:	889b      	ldrh	r3, [r3, #4]
 801454a:	73bb      	strb	r3, [r7, #14]
 801454c:	683b      	ldr	r3, [r7, #0]
 801454e:	781b      	ldrb	r3, [r3, #0]
 8014550:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8014554:	2b40      	cmp	r3, #64	@ 0x40
 8014556:	d007      	beq.n	8014568 <USBD_StdEPReq+0x30>
 8014558:	2b40      	cmp	r3, #64	@ 0x40
 801455a:	f200 817f 	bhi.w	801485c <USBD_StdEPReq+0x324>
 801455e:	2b00      	cmp	r3, #0
 8014560:	d02a      	beq.n	80145b8 <USBD_StdEPReq+0x80>
 8014562:	2b20      	cmp	r3, #32
 8014564:	f040 817a 	bne.w	801485c <USBD_StdEPReq+0x324>
 8014568:	7bbb      	ldrb	r3, [r7, #14]
 801456a:	4619      	mov	r1, r3
 801456c:	6878      	ldr	r0, [r7, #4]
 801456e:	f7ff fe85 	bl	801427c <USBD_CoreFindEP>
 8014572:	4603      	mov	r3, r0
 8014574:	737b      	strb	r3, [r7, #13]
 8014576:	7b7b      	ldrb	r3, [r7, #13]
 8014578:	2bff      	cmp	r3, #255	@ 0xff
 801457a:	f000 8174 	beq.w	8014866 <USBD_StdEPReq+0x32e>
 801457e:	7b7b      	ldrb	r3, [r7, #13]
 8014580:	2b00      	cmp	r3, #0
 8014582:	f040 8170 	bne.w	8014866 <USBD_StdEPReq+0x32e>
 8014586:	7b7a      	ldrb	r2, [r7, #13]
 8014588:	687b      	ldr	r3, [r7, #4]
 801458a:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 801458e:	7b7a      	ldrb	r2, [r7, #13]
 8014590:	687b      	ldr	r3, [r7, #4]
 8014592:	32ae      	adds	r2, #174	@ 0xae
 8014594:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8014598:	689b      	ldr	r3, [r3, #8]
 801459a:	2b00      	cmp	r3, #0
 801459c:	f000 8163 	beq.w	8014866 <USBD_StdEPReq+0x32e>
 80145a0:	7b7a      	ldrb	r2, [r7, #13]
 80145a2:	687b      	ldr	r3, [r7, #4]
 80145a4:	32ae      	adds	r2, #174	@ 0xae
 80145a6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80145aa:	689b      	ldr	r3, [r3, #8]
 80145ac:	6839      	ldr	r1, [r7, #0]
 80145ae:	6878      	ldr	r0, [r7, #4]
 80145b0:	4798      	blx	r3
 80145b2:	4603      	mov	r3, r0
 80145b4:	73fb      	strb	r3, [r7, #15]
 80145b6:	e156      	b.n	8014866 <USBD_StdEPReq+0x32e>
 80145b8:	683b      	ldr	r3, [r7, #0]
 80145ba:	785b      	ldrb	r3, [r3, #1]
 80145bc:	2b03      	cmp	r3, #3
 80145be:	d008      	beq.n	80145d2 <USBD_StdEPReq+0x9a>
 80145c0:	2b03      	cmp	r3, #3
 80145c2:	f300 8145 	bgt.w	8014850 <USBD_StdEPReq+0x318>
 80145c6:	2b00      	cmp	r3, #0
 80145c8:	f000 809b 	beq.w	8014702 <USBD_StdEPReq+0x1ca>
 80145cc:	2b01      	cmp	r3, #1
 80145ce:	d03c      	beq.n	801464a <USBD_StdEPReq+0x112>
 80145d0:	e13e      	b.n	8014850 <USBD_StdEPReq+0x318>
 80145d2:	687b      	ldr	r3, [r7, #4]
 80145d4:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80145d8:	b2db      	uxtb	r3, r3
 80145da:	2b02      	cmp	r3, #2
 80145dc:	d002      	beq.n	80145e4 <USBD_StdEPReq+0xac>
 80145de:	2b03      	cmp	r3, #3
 80145e0:	d016      	beq.n	8014610 <USBD_StdEPReq+0xd8>
 80145e2:	e02c      	b.n	801463e <USBD_StdEPReq+0x106>
 80145e4:	7bbb      	ldrb	r3, [r7, #14]
 80145e6:	2b00      	cmp	r3, #0
 80145e8:	d00d      	beq.n	8014606 <USBD_StdEPReq+0xce>
 80145ea:	7bbb      	ldrb	r3, [r7, #14]
 80145ec:	2b80      	cmp	r3, #128	@ 0x80
 80145ee:	d00a      	beq.n	8014606 <USBD_StdEPReq+0xce>
 80145f0:	7bbb      	ldrb	r3, [r7, #14]
 80145f2:	4619      	mov	r1, r3
 80145f4:	6878      	ldr	r0, [r7, #4]
 80145f6:	f001 f9a5 	bl	8015944 <USBD_LL_StallEP>
 80145fa:	2180      	movs	r1, #128	@ 0x80
 80145fc:	6878      	ldr	r0, [r7, #4]
 80145fe:	f001 f9a1 	bl	8015944 <USBD_LL_StallEP>
 8014602:	bf00      	nop
 8014604:	e020      	b.n	8014648 <USBD_StdEPReq+0x110>
 8014606:	6839      	ldr	r1, [r7, #0]
 8014608:	6878      	ldr	r0, [r7, #4]
 801460a:	f000 fca4 	bl	8014f56 <USBD_CtlError>
 801460e:	e01b      	b.n	8014648 <USBD_StdEPReq+0x110>
 8014610:	683b      	ldr	r3, [r7, #0]
 8014612:	885b      	ldrh	r3, [r3, #2]
 8014614:	2b00      	cmp	r3, #0
 8014616:	d10e      	bne.n	8014636 <USBD_StdEPReq+0xfe>
 8014618:	7bbb      	ldrb	r3, [r7, #14]
 801461a:	2b00      	cmp	r3, #0
 801461c:	d00b      	beq.n	8014636 <USBD_StdEPReq+0xfe>
 801461e:	7bbb      	ldrb	r3, [r7, #14]
 8014620:	2b80      	cmp	r3, #128	@ 0x80
 8014622:	d008      	beq.n	8014636 <USBD_StdEPReq+0xfe>
 8014624:	683b      	ldr	r3, [r7, #0]
 8014626:	88db      	ldrh	r3, [r3, #6]
 8014628:	2b00      	cmp	r3, #0
 801462a:	d104      	bne.n	8014636 <USBD_StdEPReq+0xfe>
 801462c:	7bbb      	ldrb	r3, [r7, #14]
 801462e:	4619      	mov	r1, r3
 8014630:	6878      	ldr	r0, [r7, #4]
 8014632:	f001 f987 	bl	8015944 <USBD_LL_StallEP>
 8014636:	6878      	ldr	r0, [r7, #4]
 8014638:	f000 fd64 	bl	8015104 <USBD_CtlSendStatus>
 801463c:	e004      	b.n	8014648 <USBD_StdEPReq+0x110>
 801463e:	6839      	ldr	r1, [r7, #0]
 8014640:	6878      	ldr	r0, [r7, #4]
 8014642:	f000 fc88 	bl	8014f56 <USBD_CtlError>
 8014646:	bf00      	nop
 8014648:	e107      	b.n	801485a <USBD_StdEPReq+0x322>
 801464a:	687b      	ldr	r3, [r7, #4]
 801464c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014650:	b2db      	uxtb	r3, r3
 8014652:	2b02      	cmp	r3, #2
 8014654:	d002      	beq.n	801465c <USBD_StdEPReq+0x124>
 8014656:	2b03      	cmp	r3, #3
 8014658:	d016      	beq.n	8014688 <USBD_StdEPReq+0x150>
 801465a:	e04b      	b.n	80146f4 <USBD_StdEPReq+0x1bc>
 801465c:	7bbb      	ldrb	r3, [r7, #14]
 801465e:	2b00      	cmp	r3, #0
 8014660:	d00d      	beq.n	801467e <USBD_StdEPReq+0x146>
 8014662:	7bbb      	ldrb	r3, [r7, #14]
 8014664:	2b80      	cmp	r3, #128	@ 0x80
 8014666:	d00a      	beq.n	801467e <USBD_StdEPReq+0x146>
 8014668:	7bbb      	ldrb	r3, [r7, #14]
 801466a:	4619      	mov	r1, r3
 801466c:	6878      	ldr	r0, [r7, #4]
 801466e:	f001 f969 	bl	8015944 <USBD_LL_StallEP>
 8014672:	2180      	movs	r1, #128	@ 0x80
 8014674:	6878      	ldr	r0, [r7, #4]
 8014676:	f001 f965 	bl	8015944 <USBD_LL_StallEP>
 801467a:	bf00      	nop
 801467c:	e040      	b.n	8014700 <USBD_StdEPReq+0x1c8>
 801467e:	6839      	ldr	r1, [r7, #0]
 8014680:	6878      	ldr	r0, [r7, #4]
 8014682:	f000 fc68 	bl	8014f56 <USBD_CtlError>
 8014686:	e03b      	b.n	8014700 <USBD_StdEPReq+0x1c8>
 8014688:	683b      	ldr	r3, [r7, #0]
 801468a:	885b      	ldrh	r3, [r3, #2]
 801468c:	2b00      	cmp	r3, #0
 801468e:	d136      	bne.n	80146fe <USBD_StdEPReq+0x1c6>
 8014690:	7bbb      	ldrb	r3, [r7, #14]
 8014692:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8014696:	2b00      	cmp	r3, #0
 8014698:	d004      	beq.n	80146a4 <USBD_StdEPReq+0x16c>
 801469a:	7bbb      	ldrb	r3, [r7, #14]
 801469c:	4619      	mov	r1, r3
 801469e:	6878      	ldr	r0, [r7, #4]
 80146a0:	f001 f96f 	bl	8015982 <USBD_LL_ClearStallEP>
 80146a4:	6878      	ldr	r0, [r7, #4]
 80146a6:	f000 fd2d 	bl	8015104 <USBD_CtlSendStatus>
 80146aa:	7bbb      	ldrb	r3, [r7, #14]
 80146ac:	4619      	mov	r1, r3
 80146ae:	6878      	ldr	r0, [r7, #4]
 80146b0:	f7ff fde4 	bl	801427c <USBD_CoreFindEP>
 80146b4:	4603      	mov	r3, r0
 80146b6:	737b      	strb	r3, [r7, #13]
 80146b8:	7b7b      	ldrb	r3, [r7, #13]
 80146ba:	2bff      	cmp	r3, #255	@ 0xff
 80146bc:	d01f      	beq.n	80146fe <USBD_StdEPReq+0x1c6>
 80146be:	7b7b      	ldrb	r3, [r7, #13]
 80146c0:	2b00      	cmp	r3, #0
 80146c2:	d11c      	bne.n	80146fe <USBD_StdEPReq+0x1c6>
 80146c4:	7b7a      	ldrb	r2, [r7, #13]
 80146c6:	687b      	ldr	r3, [r7, #4]
 80146c8:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 80146cc:	7b7a      	ldrb	r2, [r7, #13]
 80146ce:	687b      	ldr	r3, [r7, #4]
 80146d0:	32ae      	adds	r2, #174	@ 0xae
 80146d2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80146d6:	689b      	ldr	r3, [r3, #8]
 80146d8:	2b00      	cmp	r3, #0
 80146da:	d010      	beq.n	80146fe <USBD_StdEPReq+0x1c6>
 80146dc:	7b7a      	ldrb	r2, [r7, #13]
 80146de:	687b      	ldr	r3, [r7, #4]
 80146e0:	32ae      	adds	r2, #174	@ 0xae
 80146e2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80146e6:	689b      	ldr	r3, [r3, #8]
 80146e8:	6839      	ldr	r1, [r7, #0]
 80146ea:	6878      	ldr	r0, [r7, #4]
 80146ec:	4798      	blx	r3
 80146ee:	4603      	mov	r3, r0
 80146f0:	73fb      	strb	r3, [r7, #15]
 80146f2:	e004      	b.n	80146fe <USBD_StdEPReq+0x1c6>
 80146f4:	6839      	ldr	r1, [r7, #0]
 80146f6:	6878      	ldr	r0, [r7, #4]
 80146f8:	f000 fc2d 	bl	8014f56 <USBD_CtlError>
 80146fc:	e000      	b.n	8014700 <USBD_StdEPReq+0x1c8>
 80146fe:	bf00      	nop
 8014700:	e0ab      	b.n	801485a <USBD_StdEPReq+0x322>
 8014702:	687b      	ldr	r3, [r7, #4]
 8014704:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014708:	b2db      	uxtb	r3, r3
 801470a:	2b02      	cmp	r3, #2
 801470c:	d002      	beq.n	8014714 <USBD_StdEPReq+0x1dc>
 801470e:	2b03      	cmp	r3, #3
 8014710:	d032      	beq.n	8014778 <USBD_StdEPReq+0x240>
 8014712:	e097      	b.n	8014844 <USBD_StdEPReq+0x30c>
 8014714:	7bbb      	ldrb	r3, [r7, #14]
 8014716:	2b00      	cmp	r3, #0
 8014718:	d007      	beq.n	801472a <USBD_StdEPReq+0x1f2>
 801471a:	7bbb      	ldrb	r3, [r7, #14]
 801471c:	2b80      	cmp	r3, #128	@ 0x80
 801471e:	d004      	beq.n	801472a <USBD_StdEPReq+0x1f2>
 8014720:	6839      	ldr	r1, [r7, #0]
 8014722:	6878      	ldr	r0, [r7, #4]
 8014724:	f000 fc17 	bl	8014f56 <USBD_CtlError>
 8014728:	e091      	b.n	801484e <USBD_StdEPReq+0x316>
 801472a:	f997 300e 	ldrsb.w	r3, [r7, #14]
 801472e:	2b00      	cmp	r3, #0
 8014730:	da0b      	bge.n	801474a <USBD_StdEPReq+0x212>
 8014732:	7bbb      	ldrb	r3, [r7, #14]
 8014734:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8014738:	4613      	mov	r3, r2
 801473a:	009b      	lsls	r3, r3, #2
 801473c:	4413      	add	r3, r2
 801473e:	009b      	lsls	r3, r3, #2
 8014740:	3310      	adds	r3, #16
 8014742:	687a      	ldr	r2, [r7, #4]
 8014744:	4413      	add	r3, r2
 8014746:	3304      	adds	r3, #4
 8014748:	e00b      	b.n	8014762 <USBD_StdEPReq+0x22a>
 801474a:	7bbb      	ldrb	r3, [r7, #14]
 801474c:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8014750:	4613      	mov	r3, r2
 8014752:	009b      	lsls	r3, r3, #2
 8014754:	4413      	add	r3, r2
 8014756:	009b      	lsls	r3, r3, #2
 8014758:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 801475c:	687a      	ldr	r2, [r7, #4]
 801475e:	4413      	add	r3, r2
 8014760:	3304      	adds	r3, #4
 8014762:	60bb      	str	r3, [r7, #8]
 8014764:	68bb      	ldr	r3, [r7, #8]
 8014766:	2200      	movs	r2, #0
 8014768:	601a      	str	r2, [r3, #0]
 801476a:	68bb      	ldr	r3, [r7, #8]
 801476c:	2202      	movs	r2, #2
 801476e:	4619      	mov	r1, r3
 8014770:	6878      	ldr	r0, [r7, #4]
 8014772:	f000 fc6d 	bl	8015050 <USBD_CtlSendData>
 8014776:	e06a      	b.n	801484e <USBD_StdEPReq+0x316>
 8014778:	f997 300e 	ldrsb.w	r3, [r7, #14]
 801477c:	2b00      	cmp	r3, #0
 801477e:	da11      	bge.n	80147a4 <USBD_StdEPReq+0x26c>
 8014780:	7bbb      	ldrb	r3, [r7, #14]
 8014782:	f003 020f 	and.w	r2, r3, #15
 8014786:	6879      	ldr	r1, [r7, #4]
 8014788:	4613      	mov	r3, r2
 801478a:	009b      	lsls	r3, r3, #2
 801478c:	4413      	add	r3, r2
 801478e:	009b      	lsls	r3, r3, #2
 8014790:	440b      	add	r3, r1
 8014792:	3324      	adds	r3, #36	@ 0x24
 8014794:	881b      	ldrh	r3, [r3, #0]
 8014796:	2b00      	cmp	r3, #0
 8014798:	d117      	bne.n	80147ca <USBD_StdEPReq+0x292>
 801479a:	6839      	ldr	r1, [r7, #0]
 801479c:	6878      	ldr	r0, [r7, #4]
 801479e:	f000 fbda 	bl	8014f56 <USBD_CtlError>
 80147a2:	e054      	b.n	801484e <USBD_StdEPReq+0x316>
 80147a4:	7bbb      	ldrb	r3, [r7, #14]
 80147a6:	f003 020f 	and.w	r2, r3, #15
 80147aa:	6879      	ldr	r1, [r7, #4]
 80147ac:	4613      	mov	r3, r2
 80147ae:	009b      	lsls	r3, r3, #2
 80147b0:	4413      	add	r3, r2
 80147b2:	009b      	lsls	r3, r3, #2
 80147b4:	440b      	add	r3, r1
 80147b6:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 80147ba:	881b      	ldrh	r3, [r3, #0]
 80147bc:	2b00      	cmp	r3, #0
 80147be:	d104      	bne.n	80147ca <USBD_StdEPReq+0x292>
 80147c0:	6839      	ldr	r1, [r7, #0]
 80147c2:	6878      	ldr	r0, [r7, #4]
 80147c4:	f000 fbc7 	bl	8014f56 <USBD_CtlError>
 80147c8:	e041      	b.n	801484e <USBD_StdEPReq+0x316>
 80147ca:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80147ce:	2b00      	cmp	r3, #0
 80147d0:	da0b      	bge.n	80147ea <USBD_StdEPReq+0x2b2>
 80147d2:	7bbb      	ldrb	r3, [r7, #14]
 80147d4:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80147d8:	4613      	mov	r3, r2
 80147da:	009b      	lsls	r3, r3, #2
 80147dc:	4413      	add	r3, r2
 80147de:	009b      	lsls	r3, r3, #2
 80147e0:	3310      	adds	r3, #16
 80147e2:	687a      	ldr	r2, [r7, #4]
 80147e4:	4413      	add	r3, r2
 80147e6:	3304      	adds	r3, #4
 80147e8:	e00b      	b.n	8014802 <USBD_StdEPReq+0x2ca>
 80147ea:	7bbb      	ldrb	r3, [r7, #14]
 80147ec:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80147f0:	4613      	mov	r3, r2
 80147f2:	009b      	lsls	r3, r3, #2
 80147f4:	4413      	add	r3, r2
 80147f6:	009b      	lsls	r3, r3, #2
 80147f8:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 80147fc:	687a      	ldr	r2, [r7, #4]
 80147fe:	4413      	add	r3, r2
 8014800:	3304      	adds	r3, #4
 8014802:	60bb      	str	r3, [r7, #8]
 8014804:	7bbb      	ldrb	r3, [r7, #14]
 8014806:	2b00      	cmp	r3, #0
 8014808:	d002      	beq.n	8014810 <USBD_StdEPReq+0x2d8>
 801480a:	7bbb      	ldrb	r3, [r7, #14]
 801480c:	2b80      	cmp	r3, #128	@ 0x80
 801480e:	d103      	bne.n	8014818 <USBD_StdEPReq+0x2e0>
 8014810:	68bb      	ldr	r3, [r7, #8]
 8014812:	2200      	movs	r2, #0
 8014814:	601a      	str	r2, [r3, #0]
 8014816:	e00e      	b.n	8014836 <USBD_StdEPReq+0x2fe>
 8014818:	7bbb      	ldrb	r3, [r7, #14]
 801481a:	4619      	mov	r1, r3
 801481c:	6878      	ldr	r0, [r7, #4]
 801481e:	f001 f8cf 	bl	80159c0 <USBD_LL_IsStallEP>
 8014822:	4603      	mov	r3, r0
 8014824:	2b00      	cmp	r3, #0
 8014826:	d003      	beq.n	8014830 <USBD_StdEPReq+0x2f8>
 8014828:	68bb      	ldr	r3, [r7, #8]
 801482a:	2201      	movs	r2, #1
 801482c:	601a      	str	r2, [r3, #0]
 801482e:	e002      	b.n	8014836 <USBD_StdEPReq+0x2fe>
 8014830:	68bb      	ldr	r3, [r7, #8]
 8014832:	2200      	movs	r2, #0
 8014834:	601a      	str	r2, [r3, #0]
 8014836:	68bb      	ldr	r3, [r7, #8]
 8014838:	2202      	movs	r2, #2
 801483a:	4619      	mov	r1, r3
 801483c:	6878      	ldr	r0, [r7, #4]
 801483e:	f000 fc07 	bl	8015050 <USBD_CtlSendData>
 8014842:	e004      	b.n	801484e <USBD_StdEPReq+0x316>
 8014844:	6839      	ldr	r1, [r7, #0]
 8014846:	6878      	ldr	r0, [r7, #4]
 8014848:	f000 fb85 	bl	8014f56 <USBD_CtlError>
 801484c:	bf00      	nop
 801484e:	e004      	b.n	801485a <USBD_StdEPReq+0x322>
 8014850:	6839      	ldr	r1, [r7, #0]
 8014852:	6878      	ldr	r0, [r7, #4]
 8014854:	f000 fb7f 	bl	8014f56 <USBD_CtlError>
 8014858:	bf00      	nop
 801485a:	e005      	b.n	8014868 <USBD_StdEPReq+0x330>
 801485c:	6839      	ldr	r1, [r7, #0]
 801485e:	6878      	ldr	r0, [r7, #4]
 8014860:	f000 fb79 	bl	8014f56 <USBD_CtlError>
 8014864:	e000      	b.n	8014868 <USBD_StdEPReq+0x330>
 8014866:	bf00      	nop
 8014868:	7bfb      	ldrb	r3, [r7, #15]
 801486a:	4618      	mov	r0, r3
 801486c:	3710      	adds	r7, #16
 801486e:	46bd      	mov	sp, r7
 8014870:	bd80      	pop	{r7, pc}
	...

08014874 <USBD_GetDescriptor>:
 8014874:	b580      	push	{r7, lr}
 8014876:	b084      	sub	sp, #16
 8014878:	af00      	add	r7, sp, #0
 801487a:	6078      	str	r0, [r7, #4]
 801487c:	6039      	str	r1, [r7, #0]
 801487e:	2300      	movs	r3, #0
 8014880:	813b      	strh	r3, [r7, #8]
 8014882:	2300      	movs	r3, #0
 8014884:	60fb      	str	r3, [r7, #12]
 8014886:	2300      	movs	r3, #0
 8014888:	72fb      	strb	r3, [r7, #11]
 801488a:	683b      	ldr	r3, [r7, #0]
 801488c:	885b      	ldrh	r3, [r3, #2]
 801488e:	0a1b      	lsrs	r3, r3, #8
 8014890:	b29b      	uxth	r3, r3
 8014892:	3b01      	subs	r3, #1
 8014894:	2b0e      	cmp	r3, #14
 8014896:	f200 8152 	bhi.w	8014b3e <USBD_GetDescriptor+0x2ca>
 801489a:	a201      	add	r2, pc, #4	@ (adr r2, 80148a0 <USBD_GetDescriptor+0x2c>)
 801489c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80148a0:	08014911 	.word	0x08014911
 80148a4:	08014929 	.word	0x08014929
 80148a8:	08014969 	.word	0x08014969
 80148ac:	08014b3f 	.word	0x08014b3f
 80148b0:	08014b3f 	.word	0x08014b3f
 80148b4:	08014adf 	.word	0x08014adf
 80148b8:	08014b0b 	.word	0x08014b0b
 80148bc:	08014b3f 	.word	0x08014b3f
 80148c0:	08014b3f 	.word	0x08014b3f
 80148c4:	08014b3f 	.word	0x08014b3f
 80148c8:	08014b3f 	.word	0x08014b3f
 80148cc:	08014b3f 	.word	0x08014b3f
 80148d0:	08014b3f 	.word	0x08014b3f
 80148d4:	08014b3f 	.word	0x08014b3f
 80148d8:	080148dd 	.word	0x080148dd
 80148dc:	687b      	ldr	r3, [r7, #4]
 80148de:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80148e2:	69db      	ldr	r3, [r3, #28]
 80148e4:	2b00      	cmp	r3, #0
 80148e6:	d00b      	beq.n	8014900 <USBD_GetDescriptor+0x8c>
 80148e8:	687b      	ldr	r3, [r7, #4]
 80148ea:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80148ee:	69db      	ldr	r3, [r3, #28]
 80148f0:	687a      	ldr	r2, [r7, #4]
 80148f2:	7c12      	ldrb	r2, [r2, #16]
 80148f4:	f107 0108 	add.w	r1, r7, #8
 80148f8:	4610      	mov	r0, r2
 80148fa:	4798      	blx	r3
 80148fc:	60f8      	str	r0, [r7, #12]
 80148fe:	e126      	b.n	8014b4e <USBD_GetDescriptor+0x2da>
 8014900:	6839      	ldr	r1, [r7, #0]
 8014902:	6878      	ldr	r0, [r7, #4]
 8014904:	f000 fb27 	bl	8014f56 <USBD_CtlError>
 8014908:	7afb      	ldrb	r3, [r7, #11]
 801490a:	3301      	adds	r3, #1
 801490c:	72fb      	strb	r3, [r7, #11]
 801490e:	e11e      	b.n	8014b4e <USBD_GetDescriptor+0x2da>
 8014910:	687b      	ldr	r3, [r7, #4]
 8014912:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014916:	681b      	ldr	r3, [r3, #0]
 8014918:	687a      	ldr	r2, [r7, #4]
 801491a:	7c12      	ldrb	r2, [r2, #16]
 801491c:	f107 0108 	add.w	r1, r7, #8
 8014920:	4610      	mov	r0, r2
 8014922:	4798      	blx	r3
 8014924:	60f8      	str	r0, [r7, #12]
 8014926:	e112      	b.n	8014b4e <USBD_GetDescriptor+0x2da>
 8014928:	687b      	ldr	r3, [r7, #4]
 801492a:	7c1b      	ldrb	r3, [r3, #16]
 801492c:	2b00      	cmp	r3, #0
 801492e:	d10d      	bne.n	801494c <USBD_GetDescriptor+0xd8>
 8014930:	687b      	ldr	r3, [r7, #4]
 8014932:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014936:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014938:	f107 0208 	add.w	r2, r7, #8
 801493c:	4610      	mov	r0, r2
 801493e:	4798      	blx	r3
 8014940:	60f8      	str	r0, [r7, #12]
 8014942:	68fb      	ldr	r3, [r7, #12]
 8014944:	3301      	adds	r3, #1
 8014946:	2202      	movs	r2, #2
 8014948:	701a      	strb	r2, [r3, #0]
 801494a:	e100      	b.n	8014b4e <USBD_GetDescriptor+0x2da>
 801494c:	687b      	ldr	r3, [r7, #4]
 801494e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014952:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014954:	f107 0208 	add.w	r2, r7, #8
 8014958:	4610      	mov	r0, r2
 801495a:	4798      	blx	r3
 801495c:	60f8      	str	r0, [r7, #12]
 801495e:	68fb      	ldr	r3, [r7, #12]
 8014960:	3301      	adds	r3, #1
 8014962:	2202      	movs	r2, #2
 8014964:	701a      	strb	r2, [r3, #0]
 8014966:	e0f2      	b.n	8014b4e <USBD_GetDescriptor+0x2da>
 8014968:	683b      	ldr	r3, [r7, #0]
 801496a:	885b      	ldrh	r3, [r3, #2]
 801496c:	b2db      	uxtb	r3, r3
 801496e:	2b05      	cmp	r3, #5
 8014970:	f200 80ac 	bhi.w	8014acc <USBD_GetDescriptor+0x258>
 8014974:	a201      	add	r2, pc, #4	@ (adr r2, 801497c <USBD_GetDescriptor+0x108>)
 8014976:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801497a:	bf00      	nop
 801497c:	08014995 	.word	0x08014995
 8014980:	080149c9 	.word	0x080149c9
 8014984:	080149fd 	.word	0x080149fd
 8014988:	08014a31 	.word	0x08014a31
 801498c:	08014a65 	.word	0x08014a65
 8014990:	08014a99 	.word	0x08014a99
 8014994:	687b      	ldr	r3, [r7, #4]
 8014996:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 801499a:	685b      	ldr	r3, [r3, #4]
 801499c:	2b00      	cmp	r3, #0
 801499e:	d00b      	beq.n	80149b8 <USBD_GetDescriptor+0x144>
 80149a0:	687b      	ldr	r3, [r7, #4]
 80149a2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80149a6:	685b      	ldr	r3, [r3, #4]
 80149a8:	687a      	ldr	r2, [r7, #4]
 80149aa:	7c12      	ldrb	r2, [r2, #16]
 80149ac:	f107 0108 	add.w	r1, r7, #8
 80149b0:	4610      	mov	r0, r2
 80149b2:	4798      	blx	r3
 80149b4:	60f8      	str	r0, [r7, #12]
 80149b6:	e091      	b.n	8014adc <USBD_GetDescriptor+0x268>
 80149b8:	6839      	ldr	r1, [r7, #0]
 80149ba:	6878      	ldr	r0, [r7, #4]
 80149bc:	f000 facb 	bl	8014f56 <USBD_CtlError>
 80149c0:	7afb      	ldrb	r3, [r7, #11]
 80149c2:	3301      	adds	r3, #1
 80149c4:	72fb      	strb	r3, [r7, #11]
 80149c6:	e089      	b.n	8014adc <USBD_GetDescriptor+0x268>
 80149c8:	687b      	ldr	r3, [r7, #4]
 80149ca:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80149ce:	689b      	ldr	r3, [r3, #8]
 80149d0:	2b00      	cmp	r3, #0
 80149d2:	d00b      	beq.n	80149ec <USBD_GetDescriptor+0x178>
 80149d4:	687b      	ldr	r3, [r7, #4]
 80149d6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80149da:	689b      	ldr	r3, [r3, #8]
 80149dc:	687a      	ldr	r2, [r7, #4]
 80149de:	7c12      	ldrb	r2, [r2, #16]
 80149e0:	f107 0108 	add.w	r1, r7, #8
 80149e4:	4610      	mov	r0, r2
 80149e6:	4798      	blx	r3
 80149e8:	60f8      	str	r0, [r7, #12]
 80149ea:	e077      	b.n	8014adc <USBD_GetDescriptor+0x268>
 80149ec:	6839      	ldr	r1, [r7, #0]
 80149ee:	6878      	ldr	r0, [r7, #4]
 80149f0:	f000 fab1 	bl	8014f56 <USBD_CtlError>
 80149f4:	7afb      	ldrb	r3, [r7, #11]
 80149f6:	3301      	adds	r3, #1
 80149f8:	72fb      	strb	r3, [r7, #11]
 80149fa:	e06f      	b.n	8014adc <USBD_GetDescriptor+0x268>
 80149fc:	687b      	ldr	r3, [r7, #4]
 80149fe:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014a02:	68db      	ldr	r3, [r3, #12]
 8014a04:	2b00      	cmp	r3, #0
 8014a06:	d00b      	beq.n	8014a20 <USBD_GetDescriptor+0x1ac>
 8014a08:	687b      	ldr	r3, [r7, #4]
 8014a0a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014a0e:	68db      	ldr	r3, [r3, #12]
 8014a10:	687a      	ldr	r2, [r7, #4]
 8014a12:	7c12      	ldrb	r2, [r2, #16]
 8014a14:	f107 0108 	add.w	r1, r7, #8
 8014a18:	4610      	mov	r0, r2
 8014a1a:	4798      	blx	r3
 8014a1c:	60f8      	str	r0, [r7, #12]
 8014a1e:	e05d      	b.n	8014adc <USBD_GetDescriptor+0x268>
 8014a20:	6839      	ldr	r1, [r7, #0]
 8014a22:	6878      	ldr	r0, [r7, #4]
 8014a24:	f000 fa97 	bl	8014f56 <USBD_CtlError>
 8014a28:	7afb      	ldrb	r3, [r7, #11]
 8014a2a:	3301      	adds	r3, #1
 8014a2c:	72fb      	strb	r3, [r7, #11]
 8014a2e:	e055      	b.n	8014adc <USBD_GetDescriptor+0x268>
 8014a30:	687b      	ldr	r3, [r7, #4]
 8014a32:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014a36:	691b      	ldr	r3, [r3, #16]
 8014a38:	2b00      	cmp	r3, #0
 8014a3a:	d00b      	beq.n	8014a54 <USBD_GetDescriptor+0x1e0>
 8014a3c:	687b      	ldr	r3, [r7, #4]
 8014a3e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014a42:	691b      	ldr	r3, [r3, #16]
 8014a44:	687a      	ldr	r2, [r7, #4]
 8014a46:	7c12      	ldrb	r2, [r2, #16]
 8014a48:	f107 0108 	add.w	r1, r7, #8
 8014a4c:	4610      	mov	r0, r2
 8014a4e:	4798      	blx	r3
 8014a50:	60f8      	str	r0, [r7, #12]
 8014a52:	e043      	b.n	8014adc <USBD_GetDescriptor+0x268>
 8014a54:	6839      	ldr	r1, [r7, #0]
 8014a56:	6878      	ldr	r0, [r7, #4]
 8014a58:	f000 fa7d 	bl	8014f56 <USBD_CtlError>
 8014a5c:	7afb      	ldrb	r3, [r7, #11]
 8014a5e:	3301      	adds	r3, #1
 8014a60:	72fb      	strb	r3, [r7, #11]
 8014a62:	e03b      	b.n	8014adc <USBD_GetDescriptor+0x268>
 8014a64:	687b      	ldr	r3, [r7, #4]
 8014a66:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014a6a:	695b      	ldr	r3, [r3, #20]
 8014a6c:	2b00      	cmp	r3, #0
 8014a6e:	d00b      	beq.n	8014a88 <USBD_GetDescriptor+0x214>
 8014a70:	687b      	ldr	r3, [r7, #4]
 8014a72:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014a76:	695b      	ldr	r3, [r3, #20]
 8014a78:	687a      	ldr	r2, [r7, #4]
 8014a7a:	7c12      	ldrb	r2, [r2, #16]
 8014a7c:	f107 0108 	add.w	r1, r7, #8
 8014a80:	4610      	mov	r0, r2
 8014a82:	4798      	blx	r3
 8014a84:	60f8      	str	r0, [r7, #12]
 8014a86:	e029      	b.n	8014adc <USBD_GetDescriptor+0x268>
 8014a88:	6839      	ldr	r1, [r7, #0]
 8014a8a:	6878      	ldr	r0, [r7, #4]
 8014a8c:	f000 fa63 	bl	8014f56 <USBD_CtlError>
 8014a90:	7afb      	ldrb	r3, [r7, #11]
 8014a92:	3301      	adds	r3, #1
 8014a94:	72fb      	strb	r3, [r7, #11]
 8014a96:	e021      	b.n	8014adc <USBD_GetDescriptor+0x268>
 8014a98:	687b      	ldr	r3, [r7, #4]
 8014a9a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014a9e:	699b      	ldr	r3, [r3, #24]
 8014aa0:	2b00      	cmp	r3, #0
 8014aa2:	d00b      	beq.n	8014abc <USBD_GetDescriptor+0x248>
 8014aa4:	687b      	ldr	r3, [r7, #4]
 8014aa6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014aaa:	699b      	ldr	r3, [r3, #24]
 8014aac:	687a      	ldr	r2, [r7, #4]
 8014aae:	7c12      	ldrb	r2, [r2, #16]
 8014ab0:	f107 0108 	add.w	r1, r7, #8
 8014ab4:	4610      	mov	r0, r2
 8014ab6:	4798      	blx	r3
 8014ab8:	60f8      	str	r0, [r7, #12]
 8014aba:	e00f      	b.n	8014adc <USBD_GetDescriptor+0x268>
 8014abc:	6839      	ldr	r1, [r7, #0]
 8014abe:	6878      	ldr	r0, [r7, #4]
 8014ac0:	f000 fa49 	bl	8014f56 <USBD_CtlError>
 8014ac4:	7afb      	ldrb	r3, [r7, #11]
 8014ac6:	3301      	adds	r3, #1
 8014ac8:	72fb      	strb	r3, [r7, #11]
 8014aca:	e007      	b.n	8014adc <USBD_GetDescriptor+0x268>
 8014acc:	6839      	ldr	r1, [r7, #0]
 8014ace:	6878      	ldr	r0, [r7, #4]
 8014ad0:	f000 fa41 	bl	8014f56 <USBD_CtlError>
 8014ad4:	7afb      	ldrb	r3, [r7, #11]
 8014ad6:	3301      	adds	r3, #1
 8014ad8:	72fb      	strb	r3, [r7, #11]
 8014ada:	bf00      	nop
 8014adc:	e037      	b.n	8014b4e <USBD_GetDescriptor+0x2da>
 8014ade:	687b      	ldr	r3, [r7, #4]
 8014ae0:	7c1b      	ldrb	r3, [r3, #16]
 8014ae2:	2b00      	cmp	r3, #0
 8014ae4:	d109      	bne.n	8014afa <USBD_GetDescriptor+0x286>
 8014ae6:	687b      	ldr	r3, [r7, #4]
 8014ae8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014aec:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8014aee:	f107 0208 	add.w	r2, r7, #8
 8014af2:	4610      	mov	r0, r2
 8014af4:	4798      	blx	r3
 8014af6:	60f8      	str	r0, [r7, #12]
 8014af8:	e029      	b.n	8014b4e <USBD_GetDescriptor+0x2da>
 8014afa:	6839      	ldr	r1, [r7, #0]
 8014afc:	6878      	ldr	r0, [r7, #4]
 8014afe:	f000 fa2a 	bl	8014f56 <USBD_CtlError>
 8014b02:	7afb      	ldrb	r3, [r7, #11]
 8014b04:	3301      	adds	r3, #1
 8014b06:	72fb      	strb	r3, [r7, #11]
 8014b08:	e021      	b.n	8014b4e <USBD_GetDescriptor+0x2da>
 8014b0a:	687b      	ldr	r3, [r7, #4]
 8014b0c:	7c1b      	ldrb	r3, [r3, #16]
 8014b0e:	2b00      	cmp	r3, #0
 8014b10:	d10d      	bne.n	8014b2e <USBD_GetDescriptor+0x2ba>
 8014b12:	687b      	ldr	r3, [r7, #4]
 8014b14:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014b18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8014b1a:	f107 0208 	add.w	r2, r7, #8
 8014b1e:	4610      	mov	r0, r2
 8014b20:	4798      	blx	r3
 8014b22:	60f8      	str	r0, [r7, #12]
 8014b24:	68fb      	ldr	r3, [r7, #12]
 8014b26:	3301      	adds	r3, #1
 8014b28:	2207      	movs	r2, #7
 8014b2a:	701a      	strb	r2, [r3, #0]
 8014b2c:	e00f      	b.n	8014b4e <USBD_GetDescriptor+0x2da>
 8014b2e:	6839      	ldr	r1, [r7, #0]
 8014b30:	6878      	ldr	r0, [r7, #4]
 8014b32:	f000 fa10 	bl	8014f56 <USBD_CtlError>
 8014b36:	7afb      	ldrb	r3, [r7, #11]
 8014b38:	3301      	adds	r3, #1
 8014b3a:	72fb      	strb	r3, [r7, #11]
 8014b3c:	e007      	b.n	8014b4e <USBD_GetDescriptor+0x2da>
 8014b3e:	6839      	ldr	r1, [r7, #0]
 8014b40:	6878      	ldr	r0, [r7, #4]
 8014b42:	f000 fa08 	bl	8014f56 <USBD_CtlError>
 8014b46:	7afb      	ldrb	r3, [r7, #11]
 8014b48:	3301      	adds	r3, #1
 8014b4a:	72fb      	strb	r3, [r7, #11]
 8014b4c:	bf00      	nop
 8014b4e:	7afb      	ldrb	r3, [r7, #11]
 8014b50:	2b00      	cmp	r3, #0
 8014b52:	d11e      	bne.n	8014b92 <USBD_GetDescriptor+0x31e>
 8014b54:	683b      	ldr	r3, [r7, #0]
 8014b56:	88db      	ldrh	r3, [r3, #6]
 8014b58:	2b00      	cmp	r3, #0
 8014b5a:	d016      	beq.n	8014b8a <USBD_GetDescriptor+0x316>
 8014b5c:	893b      	ldrh	r3, [r7, #8]
 8014b5e:	2b00      	cmp	r3, #0
 8014b60:	d00e      	beq.n	8014b80 <USBD_GetDescriptor+0x30c>
 8014b62:	683b      	ldr	r3, [r7, #0]
 8014b64:	88da      	ldrh	r2, [r3, #6]
 8014b66:	893b      	ldrh	r3, [r7, #8]
 8014b68:	4293      	cmp	r3, r2
 8014b6a:	bf28      	it	cs
 8014b6c:	4613      	movcs	r3, r2
 8014b6e:	b29b      	uxth	r3, r3
 8014b70:	813b      	strh	r3, [r7, #8]
 8014b72:	893b      	ldrh	r3, [r7, #8]
 8014b74:	461a      	mov	r2, r3
 8014b76:	68f9      	ldr	r1, [r7, #12]
 8014b78:	6878      	ldr	r0, [r7, #4]
 8014b7a:	f000 fa69 	bl	8015050 <USBD_CtlSendData>
 8014b7e:	e009      	b.n	8014b94 <USBD_GetDescriptor+0x320>
 8014b80:	6839      	ldr	r1, [r7, #0]
 8014b82:	6878      	ldr	r0, [r7, #4]
 8014b84:	f000 f9e7 	bl	8014f56 <USBD_CtlError>
 8014b88:	e004      	b.n	8014b94 <USBD_GetDescriptor+0x320>
 8014b8a:	6878      	ldr	r0, [r7, #4]
 8014b8c:	f000 faba 	bl	8015104 <USBD_CtlSendStatus>
 8014b90:	e000      	b.n	8014b94 <USBD_GetDescriptor+0x320>
 8014b92:	bf00      	nop
 8014b94:	3710      	adds	r7, #16
 8014b96:	46bd      	mov	sp, r7
 8014b98:	bd80      	pop	{r7, pc}
 8014b9a:	bf00      	nop

08014b9c <USBD_SetAddress>:
 8014b9c:	b580      	push	{r7, lr}
 8014b9e:	b084      	sub	sp, #16
 8014ba0:	af00      	add	r7, sp, #0
 8014ba2:	6078      	str	r0, [r7, #4]
 8014ba4:	6039      	str	r1, [r7, #0]
 8014ba6:	683b      	ldr	r3, [r7, #0]
 8014ba8:	889b      	ldrh	r3, [r3, #4]
 8014baa:	2b00      	cmp	r3, #0
 8014bac:	d131      	bne.n	8014c12 <USBD_SetAddress+0x76>
 8014bae:	683b      	ldr	r3, [r7, #0]
 8014bb0:	88db      	ldrh	r3, [r3, #6]
 8014bb2:	2b00      	cmp	r3, #0
 8014bb4:	d12d      	bne.n	8014c12 <USBD_SetAddress+0x76>
 8014bb6:	683b      	ldr	r3, [r7, #0]
 8014bb8:	885b      	ldrh	r3, [r3, #2]
 8014bba:	2b7f      	cmp	r3, #127	@ 0x7f
 8014bbc:	d829      	bhi.n	8014c12 <USBD_SetAddress+0x76>
 8014bbe:	683b      	ldr	r3, [r7, #0]
 8014bc0:	885b      	ldrh	r3, [r3, #2]
 8014bc2:	b2db      	uxtb	r3, r3
 8014bc4:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8014bc8:	73fb      	strb	r3, [r7, #15]
 8014bca:	687b      	ldr	r3, [r7, #4]
 8014bcc:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014bd0:	b2db      	uxtb	r3, r3
 8014bd2:	2b03      	cmp	r3, #3
 8014bd4:	d104      	bne.n	8014be0 <USBD_SetAddress+0x44>
 8014bd6:	6839      	ldr	r1, [r7, #0]
 8014bd8:	6878      	ldr	r0, [r7, #4]
 8014bda:	f000 f9bc 	bl	8014f56 <USBD_CtlError>
 8014bde:	e01d      	b.n	8014c1c <USBD_SetAddress+0x80>
 8014be0:	687b      	ldr	r3, [r7, #4]
 8014be2:	7bfa      	ldrb	r2, [r7, #15]
 8014be4:	f883 229e 	strb.w	r2, [r3, #670]	@ 0x29e
 8014be8:	7bfb      	ldrb	r3, [r7, #15]
 8014bea:	4619      	mov	r1, r3
 8014bec:	6878      	ldr	r0, [r7, #4]
 8014bee:	f000 ff13 	bl	8015a18 <USBD_LL_SetUSBAddress>
 8014bf2:	6878      	ldr	r0, [r7, #4]
 8014bf4:	f000 fa86 	bl	8015104 <USBD_CtlSendStatus>
 8014bf8:	7bfb      	ldrb	r3, [r7, #15]
 8014bfa:	2b00      	cmp	r3, #0
 8014bfc:	d004      	beq.n	8014c08 <USBD_SetAddress+0x6c>
 8014bfe:	687b      	ldr	r3, [r7, #4]
 8014c00:	2202      	movs	r2, #2
 8014c02:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8014c06:	e009      	b.n	8014c1c <USBD_SetAddress+0x80>
 8014c08:	687b      	ldr	r3, [r7, #4]
 8014c0a:	2201      	movs	r2, #1
 8014c0c:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8014c10:	e004      	b.n	8014c1c <USBD_SetAddress+0x80>
 8014c12:	6839      	ldr	r1, [r7, #0]
 8014c14:	6878      	ldr	r0, [r7, #4]
 8014c16:	f000 f99e 	bl	8014f56 <USBD_CtlError>
 8014c1a:	bf00      	nop
 8014c1c:	bf00      	nop
 8014c1e:	3710      	adds	r7, #16
 8014c20:	46bd      	mov	sp, r7
 8014c22:	bd80      	pop	{r7, pc}

08014c24 <USBD_SetConfig>:
 8014c24:	b580      	push	{r7, lr}
 8014c26:	b084      	sub	sp, #16
 8014c28:	af00      	add	r7, sp, #0
 8014c2a:	6078      	str	r0, [r7, #4]
 8014c2c:	6039      	str	r1, [r7, #0]
 8014c2e:	2300      	movs	r3, #0
 8014c30:	73fb      	strb	r3, [r7, #15]
 8014c32:	683b      	ldr	r3, [r7, #0]
 8014c34:	885b      	ldrh	r3, [r3, #2]
 8014c36:	b2da      	uxtb	r2, r3
 8014c38:	4b4e      	ldr	r3, [pc, #312]	@ (8014d74 <USBD_SetConfig+0x150>)
 8014c3a:	701a      	strb	r2, [r3, #0]
 8014c3c:	4b4d      	ldr	r3, [pc, #308]	@ (8014d74 <USBD_SetConfig+0x150>)
 8014c3e:	781b      	ldrb	r3, [r3, #0]
 8014c40:	2b01      	cmp	r3, #1
 8014c42:	d905      	bls.n	8014c50 <USBD_SetConfig+0x2c>
 8014c44:	6839      	ldr	r1, [r7, #0]
 8014c46:	6878      	ldr	r0, [r7, #4]
 8014c48:	f000 f985 	bl	8014f56 <USBD_CtlError>
 8014c4c:	2303      	movs	r3, #3
 8014c4e:	e08c      	b.n	8014d6a <USBD_SetConfig+0x146>
 8014c50:	687b      	ldr	r3, [r7, #4]
 8014c52:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014c56:	b2db      	uxtb	r3, r3
 8014c58:	2b02      	cmp	r3, #2
 8014c5a:	d002      	beq.n	8014c62 <USBD_SetConfig+0x3e>
 8014c5c:	2b03      	cmp	r3, #3
 8014c5e:	d029      	beq.n	8014cb4 <USBD_SetConfig+0x90>
 8014c60:	e075      	b.n	8014d4e <USBD_SetConfig+0x12a>
 8014c62:	4b44      	ldr	r3, [pc, #272]	@ (8014d74 <USBD_SetConfig+0x150>)
 8014c64:	781b      	ldrb	r3, [r3, #0]
 8014c66:	2b00      	cmp	r3, #0
 8014c68:	d020      	beq.n	8014cac <USBD_SetConfig+0x88>
 8014c6a:	4b42      	ldr	r3, [pc, #264]	@ (8014d74 <USBD_SetConfig+0x150>)
 8014c6c:	781b      	ldrb	r3, [r3, #0]
 8014c6e:	461a      	mov	r2, r3
 8014c70:	687b      	ldr	r3, [r7, #4]
 8014c72:	605a      	str	r2, [r3, #4]
 8014c74:	4b3f      	ldr	r3, [pc, #252]	@ (8014d74 <USBD_SetConfig+0x150>)
 8014c76:	781b      	ldrb	r3, [r3, #0]
 8014c78:	4619      	mov	r1, r3
 8014c7a:	6878      	ldr	r0, [r7, #4]
 8014c7c:	f7fe ffb9 	bl	8013bf2 <USBD_SetClassConfig>
 8014c80:	4603      	mov	r3, r0
 8014c82:	73fb      	strb	r3, [r7, #15]
 8014c84:	7bfb      	ldrb	r3, [r7, #15]
 8014c86:	2b00      	cmp	r3, #0
 8014c88:	d008      	beq.n	8014c9c <USBD_SetConfig+0x78>
 8014c8a:	6839      	ldr	r1, [r7, #0]
 8014c8c:	6878      	ldr	r0, [r7, #4]
 8014c8e:	f000 f962 	bl	8014f56 <USBD_CtlError>
 8014c92:	687b      	ldr	r3, [r7, #4]
 8014c94:	2202      	movs	r2, #2
 8014c96:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8014c9a:	e065      	b.n	8014d68 <USBD_SetConfig+0x144>
 8014c9c:	6878      	ldr	r0, [r7, #4]
 8014c9e:	f000 fa31 	bl	8015104 <USBD_CtlSendStatus>
 8014ca2:	687b      	ldr	r3, [r7, #4]
 8014ca4:	2203      	movs	r2, #3
 8014ca6:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8014caa:	e05d      	b.n	8014d68 <USBD_SetConfig+0x144>
 8014cac:	6878      	ldr	r0, [r7, #4]
 8014cae:	f000 fa29 	bl	8015104 <USBD_CtlSendStatus>
 8014cb2:	e059      	b.n	8014d68 <USBD_SetConfig+0x144>
 8014cb4:	4b2f      	ldr	r3, [pc, #188]	@ (8014d74 <USBD_SetConfig+0x150>)
 8014cb6:	781b      	ldrb	r3, [r3, #0]
 8014cb8:	2b00      	cmp	r3, #0
 8014cba:	d112      	bne.n	8014ce2 <USBD_SetConfig+0xbe>
 8014cbc:	687b      	ldr	r3, [r7, #4]
 8014cbe:	2202      	movs	r2, #2
 8014cc0:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8014cc4:	4b2b      	ldr	r3, [pc, #172]	@ (8014d74 <USBD_SetConfig+0x150>)
 8014cc6:	781b      	ldrb	r3, [r3, #0]
 8014cc8:	461a      	mov	r2, r3
 8014cca:	687b      	ldr	r3, [r7, #4]
 8014ccc:	605a      	str	r2, [r3, #4]
 8014cce:	4b29      	ldr	r3, [pc, #164]	@ (8014d74 <USBD_SetConfig+0x150>)
 8014cd0:	781b      	ldrb	r3, [r3, #0]
 8014cd2:	4619      	mov	r1, r3
 8014cd4:	6878      	ldr	r0, [r7, #4]
 8014cd6:	f7fe ffa8 	bl	8013c2a <USBD_ClrClassConfig>
 8014cda:	6878      	ldr	r0, [r7, #4]
 8014cdc:	f000 fa12 	bl	8015104 <USBD_CtlSendStatus>
 8014ce0:	e042      	b.n	8014d68 <USBD_SetConfig+0x144>
 8014ce2:	4b24      	ldr	r3, [pc, #144]	@ (8014d74 <USBD_SetConfig+0x150>)
 8014ce4:	781b      	ldrb	r3, [r3, #0]
 8014ce6:	461a      	mov	r2, r3
 8014ce8:	687b      	ldr	r3, [r7, #4]
 8014cea:	685b      	ldr	r3, [r3, #4]
 8014cec:	429a      	cmp	r2, r3
 8014cee:	d02a      	beq.n	8014d46 <USBD_SetConfig+0x122>
 8014cf0:	687b      	ldr	r3, [r7, #4]
 8014cf2:	685b      	ldr	r3, [r3, #4]
 8014cf4:	b2db      	uxtb	r3, r3
 8014cf6:	4619      	mov	r1, r3
 8014cf8:	6878      	ldr	r0, [r7, #4]
 8014cfa:	f7fe ff96 	bl	8013c2a <USBD_ClrClassConfig>
 8014cfe:	4b1d      	ldr	r3, [pc, #116]	@ (8014d74 <USBD_SetConfig+0x150>)
 8014d00:	781b      	ldrb	r3, [r3, #0]
 8014d02:	461a      	mov	r2, r3
 8014d04:	687b      	ldr	r3, [r7, #4]
 8014d06:	605a      	str	r2, [r3, #4]
 8014d08:	4b1a      	ldr	r3, [pc, #104]	@ (8014d74 <USBD_SetConfig+0x150>)
 8014d0a:	781b      	ldrb	r3, [r3, #0]
 8014d0c:	4619      	mov	r1, r3
 8014d0e:	6878      	ldr	r0, [r7, #4]
 8014d10:	f7fe ff6f 	bl	8013bf2 <USBD_SetClassConfig>
 8014d14:	4603      	mov	r3, r0
 8014d16:	73fb      	strb	r3, [r7, #15]
 8014d18:	7bfb      	ldrb	r3, [r7, #15]
 8014d1a:	2b00      	cmp	r3, #0
 8014d1c:	d00f      	beq.n	8014d3e <USBD_SetConfig+0x11a>
 8014d1e:	6839      	ldr	r1, [r7, #0]
 8014d20:	6878      	ldr	r0, [r7, #4]
 8014d22:	f000 f918 	bl	8014f56 <USBD_CtlError>
 8014d26:	687b      	ldr	r3, [r7, #4]
 8014d28:	685b      	ldr	r3, [r3, #4]
 8014d2a:	b2db      	uxtb	r3, r3
 8014d2c:	4619      	mov	r1, r3
 8014d2e:	6878      	ldr	r0, [r7, #4]
 8014d30:	f7fe ff7b 	bl	8013c2a <USBD_ClrClassConfig>
 8014d34:	687b      	ldr	r3, [r7, #4]
 8014d36:	2202      	movs	r2, #2
 8014d38:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8014d3c:	e014      	b.n	8014d68 <USBD_SetConfig+0x144>
 8014d3e:	6878      	ldr	r0, [r7, #4]
 8014d40:	f000 f9e0 	bl	8015104 <USBD_CtlSendStatus>
 8014d44:	e010      	b.n	8014d68 <USBD_SetConfig+0x144>
 8014d46:	6878      	ldr	r0, [r7, #4]
 8014d48:	f000 f9dc 	bl	8015104 <USBD_CtlSendStatus>
 8014d4c:	e00c      	b.n	8014d68 <USBD_SetConfig+0x144>
 8014d4e:	6839      	ldr	r1, [r7, #0]
 8014d50:	6878      	ldr	r0, [r7, #4]
 8014d52:	f000 f900 	bl	8014f56 <USBD_CtlError>
 8014d56:	4b07      	ldr	r3, [pc, #28]	@ (8014d74 <USBD_SetConfig+0x150>)
 8014d58:	781b      	ldrb	r3, [r3, #0]
 8014d5a:	4619      	mov	r1, r3
 8014d5c:	6878      	ldr	r0, [r7, #4]
 8014d5e:	f7fe ff64 	bl	8013c2a <USBD_ClrClassConfig>
 8014d62:	2303      	movs	r3, #3
 8014d64:	73fb      	strb	r3, [r7, #15]
 8014d66:	bf00      	nop
 8014d68:	7bfb      	ldrb	r3, [r7, #15]
 8014d6a:	4618      	mov	r0, r3
 8014d6c:	3710      	adds	r7, #16
 8014d6e:	46bd      	mov	sp, r7
 8014d70:	bd80      	pop	{r7, pc}
 8014d72:	bf00      	nop
 8014d74:	24004544 	.word	0x24004544

08014d78 <USBD_GetConfig>:
 8014d78:	b580      	push	{r7, lr}
 8014d7a:	b082      	sub	sp, #8
 8014d7c:	af00      	add	r7, sp, #0
 8014d7e:	6078      	str	r0, [r7, #4]
 8014d80:	6039      	str	r1, [r7, #0]
 8014d82:	683b      	ldr	r3, [r7, #0]
 8014d84:	88db      	ldrh	r3, [r3, #6]
 8014d86:	2b01      	cmp	r3, #1
 8014d88:	d004      	beq.n	8014d94 <USBD_GetConfig+0x1c>
 8014d8a:	6839      	ldr	r1, [r7, #0]
 8014d8c:	6878      	ldr	r0, [r7, #4]
 8014d8e:	f000 f8e2 	bl	8014f56 <USBD_CtlError>
 8014d92:	e023      	b.n	8014ddc <USBD_GetConfig+0x64>
 8014d94:	687b      	ldr	r3, [r7, #4]
 8014d96:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014d9a:	b2db      	uxtb	r3, r3
 8014d9c:	2b02      	cmp	r3, #2
 8014d9e:	dc02      	bgt.n	8014da6 <USBD_GetConfig+0x2e>
 8014da0:	2b00      	cmp	r3, #0
 8014da2:	dc03      	bgt.n	8014dac <USBD_GetConfig+0x34>
 8014da4:	e015      	b.n	8014dd2 <USBD_GetConfig+0x5a>
 8014da6:	2b03      	cmp	r3, #3
 8014da8:	d00b      	beq.n	8014dc2 <USBD_GetConfig+0x4a>
 8014daa:	e012      	b.n	8014dd2 <USBD_GetConfig+0x5a>
 8014dac:	687b      	ldr	r3, [r7, #4]
 8014dae:	2200      	movs	r2, #0
 8014db0:	609a      	str	r2, [r3, #8]
 8014db2:	687b      	ldr	r3, [r7, #4]
 8014db4:	3308      	adds	r3, #8
 8014db6:	2201      	movs	r2, #1
 8014db8:	4619      	mov	r1, r3
 8014dba:	6878      	ldr	r0, [r7, #4]
 8014dbc:	f000 f948 	bl	8015050 <USBD_CtlSendData>
 8014dc0:	e00c      	b.n	8014ddc <USBD_GetConfig+0x64>
 8014dc2:	687b      	ldr	r3, [r7, #4]
 8014dc4:	3304      	adds	r3, #4
 8014dc6:	2201      	movs	r2, #1
 8014dc8:	4619      	mov	r1, r3
 8014dca:	6878      	ldr	r0, [r7, #4]
 8014dcc:	f000 f940 	bl	8015050 <USBD_CtlSendData>
 8014dd0:	e004      	b.n	8014ddc <USBD_GetConfig+0x64>
 8014dd2:	6839      	ldr	r1, [r7, #0]
 8014dd4:	6878      	ldr	r0, [r7, #4]
 8014dd6:	f000 f8be 	bl	8014f56 <USBD_CtlError>
 8014dda:	bf00      	nop
 8014ddc:	bf00      	nop
 8014dde:	3708      	adds	r7, #8
 8014de0:	46bd      	mov	sp, r7
 8014de2:	bd80      	pop	{r7, pc}

08014de4 <USBD_GetStatus>:
 8014de4:	b580      	push	{r7, lr}
 8014de6:	b082      	sub	sp, #8
 8014de8:	af00      	add	r7, sp, #0
 8014dea:	6078      	str	r0, [r7, #4]
 8014dec:	6039      	str	r1, [r7, #0]
 8014dee:	687b      	ldr	r3, [r7, #4]
 8014df0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014df4:	b2db      	uxtb	r3, r3
 8014df6:	3b01      	subs	r3, #1
 8014df8:	2b02      	cmp	r3, #2
 8014dfa:	d81e      	bhi.n	8014e3a <USBD_GetStatus+0x56>
 8014dfc:	683b      	ldr	r3, [r7, #0]
 8014dfe:	88db      	ldrh	r3, [r3, #6]
 8014e00:	2b02      	cmp	r3, #2
 8014e02:	d004      	beq.n	8014e0e <USBD_GetStatus+0x2a>
 8014e04:	6839      	ldr	r1, [r7, #0]
 8014e06:	6878      	ldr	r0, [r7, #4]
 8014e08:	f000 f8a5 	bl	8014f56 <USBD_CtlError>
 8014e0c:	e01a      	b.n	8014e44 <USBD_GetStatus+0x60>
 8014e0e:	687b      	ldr	r3, [r7, #4]
 8014e10:	2201      	movs	r2, #1
 8014e12:	60da      	str	r2, [r3, #12]
 8014e14:	687b      	ldr	r3, [r7, #4]
 8014e16:	f8d3 32a4 	ldr.w	r3, [r3, #676]	@ 0x2a4
 8014e1a:	2b00      	cmp	r3, #0
 8014e1c:	d005      	beq.n	8014e2a <USBD_GetStatus+0x46>
 8014e1e:	687b      	ldr	r3, [r7, #4]
 8014e20:	68db      	ldr	r3, [r3, #12]
 8014e22:	f043 0202 	orr.w	r2, r3, #2
 8014e26:	687b      	ldr	r3, [r7, #4]
 8014e28:	60da      	str	r2, [r3, #12]
 8014e2a:	687b      	ldr	r3, [r7, #4]
 8014e2c:	330c      	adds	r3, #12
 8014e2e:	2202      	movs	r2, #2
 8014e30:	4619      	mov	r1, r3
 8014e32:	6878      	ldr	r0, [r7, #4]
 8014e34:	f000 f90c 	bl	8015050 <USBD_CtlSendData>
 8014e38:	e004      	b.n	8014e44 <USBD_GetStatus+0x60>
 8014e3a:	6839      	ldr	r1, [r7, #0]
 8014e3c:	6878      	ldr	r0, [r7, #4]
 8014e3e:	f000 f88a 	bl	8014f56 <USBD_CtlError>
 8014e42:	bf00      	nop
 8014e44:	bf00      	nop
 8014e46:	3708      	adds	r7, #8
 8014e48:	46bd      	mov	sp, r7
 8014e4a:	bd80      	pop	{r7, pc}

08014e4c <USBD_SetFeature>:
 8014e4c:	b580      	push	{r7, lr}
 8014e4e:	b082      	sub	sp, #8
 8014e50:	af00      	add	r7, sp, #0
 8014e52:	6078      	str	r0, [r7, #4]
 8014e54:	6039      	str	r1, [r7, #0]
 8014e56:	683b      	ldr	r3, [r7, #0]
 8014e58:	885b      	ldrh	r3, [r3, #2]
 8014e5a:	2b01      	cmp	r3, #1
 8014e5c:	d107      	bne.n	8014e6e <USBD_SetFeature+0x22>
 8014e5e:	687b      	ldr	r3, [r7, #4]
 8014e60:	2201      	movs	r2, #1
 8014e62:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 8014e66:	6878      	ldr	r0, [r7, #4]
 8014e68:	f000 f94c 	bl	8015104 <USBD_CtlSendStatus>
 8014e6c:	e013      	b.n	8014e96 <USBD_SetFeature+0x4a>
 8014e6e:	683b      	ldr	r3, [r7, #0]
 8014e70:	885b      	ldrh	r3, [r3, #2]
 8014e72:	2b02      	cmp	r3, #2
 8014e74:	d10b      	bne.n	8014e8e <USBD_SetFeature+0x42>
 8014e76:	683b      	ldr	r3, [r7, #0]
 8014e78:	889b      	ldrh	r3, [r3, #4]
 8014e7a:	0a1b      	lsrs	r3, r3, #8
 8014e7c:	b29b      	uxth	r3, r3
 8014e7e:	b2da      	uxtb	r2, r3
 8014e80:	687b      	ldr	r3, [r7, #4]
 8014e82:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8014e86:	6878      	ldr	r0, [r7, #4]
 8014e88:	f000 f93c 	bl	8015104 <USBD_CtlSendStatus>
 8014e8c:	e003      	b.n	8014e96 <USBD_SetFeature+0x4a>
 8014e8e:	6839      	ldr	r1, [r7, #0]
 8014e90:	6878      	ldr	r0, [r7, #4]
 8014e92:	f000 f860 	bl	8014f56 <USBD_CtlError>
 8014e96:	bf00      	nop
 8014e98:	3708      	adds	r7, #8
 8014e9a:	46bd      	mov	sp, r7
 8014e9c:	bd80      	pop	{r7, pc}

08014e9e <USBD_ClrFeature>:
 8014e9e:	b580      	push	{r7, lr}
 8014ea0:	b082      	sub	sp, #8
 8014ea2:	af00      	add	r7, sp, #0
 8014ea4:	6078      	str	r0, [r7, #4]
 8014ea6:	6039      	str	r1, [r7, #0]
 8014ea8:	687b      	ldr	r3, [r7, #4]
 8014eaa:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014eae:	b2db      	uxtb	r3, r3
 8014eb0:	3b01      	subs	r3, #1
 8014eb2:	2b02      	cmp	r3, #2
 8014eb4:	d80b      	bhi.n	8014ece <USBD_ClrFeature+0x30>
 8014eb6:	683b      	ldr	r3, [r7, #0]
 8014eb8:	885b      	ldrh	r3, [r3, #2]
 8014eba:	2b01      	cmp	r3, #1
 8014ebc:	d10c      	bne.n	8014ed8 <USBD_ClrFeature+0x3a>
 8014ebe:	687b      	ldr	r3, [r7, #4]
 8014ec0:	2200      	movs	r2, #0
 8014ec2:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 8014ec6:	6878      	ldr	r0, [r7, #4]
 8014ec8:	f000 f91c 	bl	8015104 <USBD_CtlSendStatus>
 8014ecc:	e004      	b.n	8014ed8 <USBD_ClrFeature+0x3a>
 8014ece:	6839      	ldr	r1, [r7, #0]
 8014ed0:	6878      	ldr	r0, [r7, #4]
 8014ed2:	f000 f840 	bl	8014f56 <USBD_CtlError>
 8014ed6:	e000      	b.n	8014eda <USBD_ClrFeature+0x3c>
 8014ed8:	bf00      	nop
 8014eda:	bf00      	nop
 8014edc:	3708      	adds	r7, #8
 8014ede:	46bd      	mov	sp, r7
 8014ee0:	bd80      	pop	{r7, pc}

08014ee2 <USBD_ParseSetupRequest>:
 8014ee2:	b580      	push	{r7, lr}
 8014ee4:	b084      	sub	sp, #16
 8014ee6:	af00      	add	r7, sp, #0
 8014ee8:	6078      	str	r0, [r7, #4]
 8014eea:	6039      	str	r1, [r7, #0]
 8014eec:	683b      	ldr	r3, [r7, #0]
 8014eee:	60fb      	str	r3, [r7, #12]
 8014ef0:	68fb      	ldr	r3, [r7, #12]
 8014ef2:	781a      	ldrb	r2, [r3, #0]
 8014ef4:	687b      	ldr	r3, [r7, #4]
 8014ef6:	701a      	strb	r2, [r3, #0]
 8014ef8:	68fb      	ldr	r3, [r7, #12]
 8014efa:	3301      	adds	r3, #1
 8014efc:	60fb      	str	r3, [r7, #12]
 8014efe:	68fb      	ldr	r3, [r7, #12]
 8014f00:	781a      	ldrb	r2, [r3, #0]
 8014f02:	687b      	ldr	r3, [r7, #4]
 8014f04:	705a      	strb	r2, [r3, #1]
 8014f06:	68fb      	ldr	r3, [r7, #12]
 8014f08:	3301      	adds	r3, #1
 8014f0a:	60fb      	str	r3, [r7, #12]
 8014f0c:	68f8      	ldr	r0, [r7, #12]
 8014f0e:	f7ff fa16 	bl	801433e <SWAPBYTE>
 8014f12:	4603      	mov	r3, r0
 8014f14:	461a      	mov	r2, r3
 8014f16:	687b      	ldr	r3, [r7, #4]
 8014f18:	805a      	strh	r2, [r3, #2]
 8014f1a:	68fb      	ldr	r3, [r7, #12]
 8014f1c:	3301      	adds	r3, #1
 8014f1e:	60fb      	str	r3, [r7, #12]
 8014f20:	68fb      	ldr	r3, [r7, #12]
 8014f22:	3301      	adds	r3, #1
 8014f24:	60fb      	str	r3, [r7, #12]
 8014f26:	68f8      	ldr	r0, [r7, #12]
 8014f28:	f7ff fa09 	bl	801433e <SWAPBYTE>
 8014f2c:	4603      	mov	r3, r0
 8014f2e:	461a      	mov	r2, r3
 8014f30:	687b      	ldr	r3, [r7, #4]
 8014f32:	809a      	strh	r2, [r3, #4]
 8014f34:	68fb      	ldr	r3, [r7, #12]
 8014f36:	3301      	adds	r3, #1
 8014f38:	60fb      	str	r3, [r7, #12]
 8014f3a:	68fb      	ldr	r3, [r7, #12]
 8014f3c:	3301      	adds	r3, #1
 8014f3e:	60fb      	str	r3, [r7, #12]
 8014f40:	68f8      	ldr	r0, [r7, #12]
 8014f42:	f7ff f9fc 	bl	801433e <SWAPBYTE>
 8014f46:	4603      	mov	r3, r0
 8014f48:	461a      	mov	r2, r3
 8014f4a:	687b      	ldr	r3, [r7, #4]
 8014f4c:	80da      	strh	r2, [r3, #6]
 8014f4e:	bf00      	nop
 8014f50:	3710      	adds	r7, #16
 8014f52:	46bd      	mov	sp, r7
 8014f54:	bd80      	pop	{r7, pc}

08014f56 <USBD_CtlError>:
 8014f56:	b580      	push	{r7, lr}
 8014f58:	b082      	sub	sp, #8
 8014f5a:	af00      	add	r7, sp, #0
 8014f5c:	6078      	str	r0, [r7, #4]
 8014f5e:	6039      	str	r1, [r7, #0]
 8014f60:	2180      	movs	r1, #128	@ 0x80
 8014f62:	6878      	ldr	r0, [r7, #4]
 8014f64:	f000 fcee 	bl	8015944 <USBD_LL_StallEP>
 8014f68:	2100      	movs	r1, #0
 8014f6a:	6878      	ldr	r0, [r7, #4]
 8014f6c:	f000 fcea 	bl	8015944 <USBD_LL_StallEP>
 8014f70:	bf00      	nop
 8014f72:	3708      	adds	r7, #8
 8014f74:	46bd      	mov	sp, r7
 8014f76:	bd80      	pop	{r7, pc}

08014f78 <USBD_GetString>:
 8014f78:	b580      	push	{r7, lr}
 8014f7a:	b086      	sub	sp, #24
 8014f7c:	af00      	add	r7, sp, #0
 8014f7e:	60f8      	str	r0, [r7, #12]
 8014f80:	60b9      	str	r1, [r7, #8]
 8014f82:	607a      	str	r2, [r7, #4]
 8014f84:	2300      	movs	r3, #0
 8014f86:	75fb      	strb	r3, [r7, #23]
 8014f88:	68fb      	ldr	r3, [r7, #12]
 8014f8a:	2b00      	cmp	r3, #0
 8014f8c:	d042      	beq.n	8015014 <USBD_GetString+0x9c>
 8014f8e:	68fb      	ldr	r3, [r7, #12]
 8014f90:	613b      	str	r3, [r7, #16]
 8014f92:	6938      	ldr	r0, [r7, #16]
 8014f94:	f000 f842 	bl	801501c <USBD_GetLen>
 8014f98:	4603      	mov	r3, r0
 8014f9a:	3301      	adds	r3, #1
 8014f9c:	005b      	lsls	r3, r3, #1
 8014f9e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8014fa2:	d808      	bhi.n	8014fb6 <USBD_GetString+0x3e>
 8014fa4:	6938      	ldr	r0, [r7, #16]
 8014fa6:	f000 f839 	bl	801501c <USBD_GetLen>
 8014faa:	4603      	mov	r3, r0
 8014fac:	3301      	adds	r3, #1
 8014fae:	b29b      	uxth	r3, r3
 8014fb0:	005b      	lsls	r3, r3, #1
 8014fb2:	b29a      	uxth	r2, r3
 8014fb4:	e001      	b.n	8014fba <USBD_GetString+0x42>
 8014fb6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8014fba:	687b      	ldr	r3, [r7, #4]
 8014fbc:	801a      	strh	r2, [r3, #0]
 8014fbe:	7dfb      	ldrb	r3, [r7, #23]
 8014fc0:	68ba      	ldr	r2, [r7, #8]
 8014fc2:	4413      	add	r3, r2
 8014fc4:	687a      	ldr	r2, [r7, #4]
 8014fc6:	7812      	ldrb	r2, [r2, #0]
 8014fc8:	701a      	strb	r2, [r3, #0]
 8014fca:	7dfb      	ldrb	r3, [r7, #23]
 8014fcc:	3301      	adds	r3, #1
 8014fce:	75fb      	strb	r3, [r7, #23]
 8014fd0:	7dfb      	ldrb	r3, [r7, #23]
 8014fd2:	68ba      	ldr	r2, [r7, #8]
 8014fd4:	4413      	add	r3, r2
 8014fd6:	2203      	movs	r2, #3
 8014fd8:	701a      	strb	r2, [r3, #0]
 8014fda:	7dfb      	ldrb	r3, [r7, #23]
 8014fdc:	3301      	adds	r3, #1
 8014fde:	75fb      	strb	r3, [r7, #23]
 8014fe0:	e013      	b.n	801500a <USBD_GetString+0x92>
 8014fe2:	7dfb      	ldrb	r3, [r7, #23]
 8014fe4:	68ba      	ldr	r2, [r7, #8]
 8014fe6:	4413      	add	r3, r2
 8014fe8:	693a      	ldr	r2, [r7, #16]
 8014fea:	7812      	ldrb	r2, [r2, #0]
 8014fec:	701a      	strb	r2, [r3, #0]
 8014fee:	693b      	ldr	r3, [r7, #16]
 8014ff0:	3301      	adds	r3, #1
 8014ff2:	613b      	str	r3, [r7, #16]
 8014ff4:	7dfb      	ldrb	r3, [r7, #23]
 8014ff6:	3301      	adds	r3, #1
 8014ff8:	75fb      	strb	r3, [r7, #23]
 8014ffa:	7dfb      	ldrb	r3, [r7, #23]
 8014ffc:	68ba      	ldr	r2, [r7, #8]
 8014ffe:	4413      	add	r3, r2
 8015000:	2200      	movs	r2, #0
 8015002:	701a      	strb	r2, [r3, #0]
 8015004:	7dfb      	ldrb	r3, [r7, #23]
 8015006:	3301      	adds	r3, #1
 8015008:	75fb      	strb	r3, [r7, #23]
 801500a:	693b      	ldr	r3, [r7, #16]
 801500c:	781b      	ldrb	r3, [r3, #0]
 801500e:	2b00      	cmp	r3, #0
 8015010:	d1e7      	bne.n	8014fe2 <USBD_GetString+0x6a>
 8015012:	e000      	b.n	8015016 <USBD_GetString+0x9e>
 8015014:	bf00      	nop
 8015016:	3718      	adds	r7, #24
 8015018:	46bd      	mov	sp, r7
 801501a:	bd80      	pop	{r7, pc}

0801501c <USBD_GetLen>:
 801501c:	b480      	push	{r7}
 801501e:	b085      	sub	sp, #20
 8015020:	af00      	add	r7, sp, #0
 8015022:	6078      	str	r0, [r7, #4]
 8015024:	2300      	movs	r3, #0
 8015026:	73fb      	strb	r3, [r7, #15]
 8015028:	687b      	ldr	r3, [r7, #4]
 801502a:	60bb      	str	r3, [r7, #8]
 801502c:	e005      	b.n	801503a <USBD_GetLen+0x1e>
 801502e:	7bfb      	ldrb	r3, [r7, #15]
 8015030:	3301      	adds	r3, #1
 8015032:	73fb      	strb	r3, [r7, #15]
 8015034:	68bb      	ldr	r3, [r7, #8]
 8015036:	3301      	adds	r3, #1
 8015038:	60bb      	str	r3, [r7, #8]
 801503a:	68bb      	ldr	r3, [r7, #8]
 801503c:	781b      	ldrb	r3, [r3, #0]
 801503e:	2b00      	cmp	r3, #0
 8015040:	d1f5      	bne.n	801502e <USBD_GetLen+0x12>
 8015042:	7bfb      	ldrb	r3, [r7, #15]
 8015044:	4618      	mov	r0, r3
 8015046:	3714      	adds	r7, #20
 8015048:	46bd      	mov	sp, r7
 801504a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801504e:	4770      	bx	lr

08015050 <USBD_CtlSendData>:
 8015050:	b580      	push	{r7, lr}
 8015052:	b084      	sub	sp, #16
 8015054:	af00      	add	r7, sp, #0
 8015056:	60f8      	str	r0, [r7, #12]
 8015058:	60b9      	str	r1, [r7, #8]
 801505a:	607a      	str	r2, [r7, #4]
 801505c:	68fb      	ldr	r3, [r7, #12]
 801505e:	2202      	movs	r2, #2
 8015060:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8015064:	68fb      	ldr	r3, [r7, #12]
 8015066:	687a      	ldr	r2, [r7, #4]
 8015068:	619a      	str	r2, [r3, #24]
 801506a:	68fb      	ldr	r3, [r7, #12]
 801506c:	687a      	ldr	r2, [r7, #4]
 801506e:	61da      	str	r2, [r3, #28]
 8015070:	687b      	ldr	r3, [r7, #4]
 8015072:	68ba      	ldr	r2, [r7, #8]
 8015074:	2100      	movs	r1, #0
 8015076:	68f8      	ldr	r0, [r7, #12]
 8015078:	f000 fced 	bl	8015a56 <USBD_LL_Transmit>
 801507c:	2300      	movs	r3, #0
 801507e:	4618      	mov	r0, r3
 8015080:	3710      	adds	r7, #16
 8015082:	46bd      	mov	sp, r7
 8015084:	bd80      	pop	{r7, pc}

08015086 <USBD_CtlContinueSendData>:
 8015086:	b580      	push	{r7, lr}
 8015088:	b084      	sub	sp, #16
 801508a:	af00      	add	r7, sp, #0
 801508c:	60f8      	str	r0, [r7, #12]
 801508e:	60b9      	str	r1, [r7, #8]
 8015090:	607a      	str	r2, [r7, #4]
 8015092:	687b      	ldr	r3, [r7, #4]
 8015094:	68ba      	ldr	r2, [r7, #8]
 8015096:	2100      	movs	r1, #0
 8015098:	68f8      	ldr	r0, [r7, #12]
 801509a:	f000 fcdc 	bl	8015a56 <USBD_LL_Transmit>
 801509e:	2300      	movs	r3, #0
 80150a0:	4618      	mov	r0, r3
 80150a2:	3710      	adds	r7, #16
 80150a4:	46bd      	mov	sp, r7
 80150a6:	bd80      	pop	{r7, pc}

080150a8 <USBD_CtlPrepareRx>:
 80150a8:	b580      	push	{r7, lr}
 80150aa:	b084      	sub	sp, #16
 80150ac:	af00      	add	r7, sp, #0
 80150ae:	60f8      	str	r0, [r7, #12]
 80150b0:	60b9      	str	r1, [r7, #8]
 80150b2:	607a      	str	r2, [r7, #4]
 80150b4:	68fb      	ldr	r3, [r7, #12]
 80150b6:	2203      	movs	r2, #3
 80150b8:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 80150bc:	68fb      	ldr	r3, [r7, #12]
 80150be:	687a      	ldr	r2, [r7, #4]
 80150c0:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
 80150c4:	68fb      	ldr	r3, [r7, #12]
 80150c6:	687a      	ldr	r2, [r7, #4]
 80150c8:	f8c3 215c 	str.w	r2, [r3, #348]	@ 0x15c
 80150cc:	687b      	ldr	r3, [r7, #4]
 80150ce:	68ba      	ldr	r2, [r7, #8]
 80150d0:	2100      	movs	r1, #0
 80150d2:	68f8      	ldr	r0, [r7, #12]
 80150d4:	f000 fce0 	bl	8015a98 <USBD_LL_PrepareReceive>
 80150d8:	2300      	movs	r3, #0
 80150da:	4618      	mov	r0, r3
 80150dc:	3710      	adds	r7, #16
 80150de:	46bd      	mov	sp, r7
 80150e0:	bd80      	pop	{r7, pc}

080150e2 <USBD_CtlContinueRx>:
 80150e2:	b580      	push	{r7, lr}
 80150e4:	b084      	sub	sp, #16
 80150e6:	af00      	add	r7, sp, #0
 80150e8:	60f8      	str	r0, [r7, #12]
 80150ea:	60b9      	str	r1, [r7, #8]
 80150ec:	607a      	str	r2, [r7, #4]
 80150ee:	687b      	ldr	r3, [r7, #4]
 80150f0:	68ba      	ldr	r2, [r7, #8]
 80150f2:	2100      	movs	r1, #0
 80150f4:	68f8      	ldr	r0, [r7, #12]
 80150f6:	f000 fccf 	bl	8015a98 <USBD_LL_PrepareReceive>
 80150fa:	2300      	movs	r3, #0
 80150fc:	4618      	mov	r0, r3
 80150fe:	3710      	adds	r7, #16
 8015100:	46bd      	mov	sp, r7
 8015102:	bd80      	pop	{r7, pc}

08015104 <USBD_CtlSendStatus>:
 8015104:	b580      	push	{r7, lr}
 8015106:	b082      	sub	sp, #8
 8015108:	af00      	add	r7, sp, #0
 801510a:	6078      	str	r0, [r7, #4]
 801510c:	687b      	ldr	r3, [r7, #4]
 801510e:	2204      	movs	r2, #4
 8015110:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8015114:	2300      	movs	r3, #0
 8015116:	2200      	movs	r2, #0
 8015118:	2100      	movs	r1, #0
 801511a:	6878      	ldr	r0, [r7, #4]
 801511c:	f000 fc9b 	bl	8015a56 <USBD_LL_Transmit>
 8015120:	2300      	movs	r3, #0
 8015122:	4618      	mov	r0, r3
 8015124:	3708      	adds	r7, #8
 8015126:	46bd      	mov	sp, r7
 8015128:	bd80      	pop	{r7, pc}

0801512a <USBD_CtlReceiveStatus>:
 801512a:	b580      	push	{r7, lr}
 801512c:	b082      	sub	sp, #8
 801512e:	af00      	add	r7, sp, #0
 8015130:	6078      	str	r0, [r7, #4]
 8015132:	687b      	ldr	r3, [r7, #4]
 8015134:	2205      	movs	r2, #5
 8015136:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 801513a:	2300      	movs	r3, #0
 801513c:	2200      	movs	r2, #0
 801513e:	2100      	movs	r1, #0
 8015140:	6878      	ldr	r0, [r7, #4]
 8015142:	f000 fca9 	bl	8015a98 <USBD_LL_PrepareReceive>
 8015146:	2300      	movs	r3, #0
 8015148:	4618      	mov	r0, r3
 801514a:	3708      	adds	r7, #8
 801514c:	46bd      	mov	sp, r7
 801514e:	bd80      	pop	{r7, pc}

08015150 <MX_USB_DEVICE_Init>:
 8015150:	b580      	push	{r7, lr}
 8015152:	af00      	add	r7, sp, #0
 8015154:	2201      	movs	r2, #1
 8015156:	4913      	ldr	r1, [pc, #76]	@ (80151a4 <MX_USB_DEVICE_Init+0x54>)
 8015158:	4813      	ldr	r0, [pc, #76]	@ (80151a8 <MX_USB_DEVICE_Init+0x58>)
 801515a:	f7fe fccd 	bl	8013af8 <USBD_Init>
 801515e:	4603      	mov	r3, r0
 8015160:	2b00      	cmp	r3, #0
 8015162:	d001      	beq.n	8015168 <MX_USB_DEVICE_Init+0x18>
 8015164:	f7ec fbc4 	bl	80018f0 <Error_Handler>
 8015168:	4910      	ldr	r1, [pc, #64]	@ (80151ac <MX_USB_DEVICE_Init+0x5c>)
 801516a:	480f      	ldr	r0, [pc, #60]	@ (80151a8 <MX_USB_DEVICE_Init+0x58>)
 801516c:	f7fe fcf4 	bl	8013b58 <USBD_RegisterClass>
 8015170:	4603      	mov	r3, r0
 8015172:	2b00      	cmp	r3, #0
 8015174:	d001      	beq.n	801517a <MX_USB_DEVICE_Init+0x2a>
 8015176:	f7ec fbbb 	bl	80018f0 <Error_Handler>
 801517a:	490d      	ldr	r1, [pc, #52]	@ (80151b0 <MX_USB_DEVICE_Init+0x60>)
 801517c:	480a      	ldr	r0, [pc, #40]	@ (80151a8 <MX_USB_DEVICE_Init+0x58>)
 801517e:	f7fe fbeb 	bl	8013958 <USBD_CDC_RegisterInterface>
 8015182:	4603      	mov	r3, r0
 8015184:	2b00      	cmp	r3, #0
 8015186:	d001      	beq.n	801518c <MX_USB_DEVICE_Init+0x3c>
 8015188:	f7ec fbb2 	bl	80018f0 <Error_Handler>
 801518c:	4806      	ldr	r0, [pc, #24]	@ (80151a8 <MX_USB_DEVICE_Init+0x58>)
 801518e:	f7fe fd19 	bl	8013bc4 <USBD_Start>
 8015192:	4603      	mov	r3, r0
 8015194:	2b00      	cmp	r3, #0
 8015196:	d001      	beq.n	801519c <MX_USB_DEVICE_Init+0x4c>
 8015198:	f7ec fbaa 	bl	80018f0 <Error_Handler>
 801519c:	f7f5 ff42 	bl	800b024 <HAL_PWREx_EnableUSBVoltageDetector>
 80151a0:	bf00      	nop
 80151a2:	bd80      	pop	{r7, pc}
 80151a4:	240000b0 	.word	0x240000b0
 80151a8:	24004548 	.word	0x24004548
 80151ac:	2400001c 	.word	0x2400001c
 80151b0:	2400009c 	.word	0x2400009c

080151b4 <CDC_Init_HS>:
 80151b4:	b580      	push	{r7, lr}
 80151b6:	af00      	add	r7, sp, #0
 80151b8:	2200      	movs	r2, #0
 80151ba:	4905      	ldr	r1, [pc, #20]	@ (80151d0 <CDC_Init_HS+0x1c>)
 80151bc:	4805      	ldr	r0, [pc, #20]	@ (80151d4 <CDC_Init_HS+0x20>)
 80151be:	f7fe fbe5 	bl	801398c <USBD_CDC_SetTxBuffer>
 80151c2:	4905      	ldr	r1, [pc, #20]	@ (80151d8 <CDC_Init_HS+0x24>)
 80151c4:	4803      	ldr	r0, [pc, #12]	@ (80151d4 <CDC_Init_HS+0x20>)
 80151c6:	f7fe fc03 	bl	80139d0 <USBD_CDC_SetRxBuffer>
 80151ca:	2300      	movs	r3, #0
 80151cc:	4618      	mov	r0, r3
 80151ce:	bd80      	pop	{r7, pc}
 80151d0:	24005024 	.word	0x24005024
 80151d4:	24004548 	.word	0x24004548
 80151d8:	24004824 	.word	0x24004824

080151dc <CDC_DeInit_HS>:
 80151dc:	b480      	push	{r7}
 80151de:	af00      	add	r7, sp, #0
 80151e0:	2300      	movs	r3, #0
 80151e2:	4618      	mov	r0, r3
 80151e4:	46bd      	mov	sp, r7
 80151e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80151ea:	4770      	bx	lr

080151ec <CDC_Control_HS>:
 80151ec:	b480      	push	{r7}
 80151ee:	b083      	sub	sp, #12
 80151f0:	af00      	add	r7, sp, #0
 80151f2:	4603      	mov	r3, r0
 80151f4:	6039      	str	r1, [r7, #0]
 80151f6:	71fb      	strb	r3, [r7, #7]
 80151f8:	4613      	mov	r3, r2
 80151fa:	80bb      	strh	r3, [r7, #4]
 80151fc:	79fb      	ldrb	r3, [r7, #7]
 80151fe:	2b23      	cmp	r3, #35	@ 0x23
 8015200:	d84a      	bhi.n	8015298 <CDC_Control_HS+0xac>
 8015202:	a201      	add	r2, pc, #4	@ (adr r2, 8015208 <CDC_Control_HS+0x1c>)
 8015204:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015208:	08015299 	.word	0x08015299
 801520c:	08015299 	.word	0x08015299
 8015210:	08015299 	.word	0x08015299
 8015214:	08015299 	.word	0x08015299
 8015218:	08015299 	.word	0x08015299
 801521c:	08015299 	.word	0x08015299
 8015220:	08015299 	.word	0x08015299
 8015224:	08015299 	.word	0x08015299
 8015228:	08015299 	.word	0x08015299
 801522c:	08015299 	.word	0x08015299
 8015230:	08015299 	.word	0x08015299
 8015234:	08015299 	.word	0x08015299
 8015238:	08015299 	.word	0x08015299
 801523c:	08015299 	.word	0x08015299
 8015240:	08015299 	.word	0x08015299
 8015244:	08015299 	.word	0x08015299
 8015248:	08015299 	.word	0x08015299
 801524c:	08015299 	.word	0x08015299
 8015250:	08015299 	.word	0x08015299
 8015254:	08015299 	.word	0x08015299
 8015258:	08015299 	.word	0x08015299
 801525c:	08015299 	.word	0x08015299
 8015260:	08015299 	.word	0x08015299
 8015264:	08015299 	.word	0x08015299
 8015268:	08015299 	.word	0x08015299
 801526c:	08015299 	.word	0x08015299
 8015270:	08015299 	.word	0x08015299
 8015274:	08015299 	.word	0x08015299
 8015278:	08015299 	.word	0x08015299
 801527c:	08015299 	.word	0x08015299
 8015280:	08015299 	.word	0x08015299
 8015284:	08015299 	.word	0x08015299
 8015288:	08015299 	.word	0x08015299
 801528c:	08015299 	.word	0x08015299
 8015290:	08015299 	.word	0x08015299
 8015294:	08015299 	.word	0x08015299
 8015298:	bf00      	nop
 801529a:	2300      	movs	r3, #0
 801529c:	4618      	mov	r0, r3
 801529e:	370c      	adds	r7, #12
 80152a0:	46bd      	mov	sp, r7
 80152a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80152a6:	4770      	bx	lr

080152a8 <CDC_Receive_HS>:
 80152a8:	b580      	push	{r7, lr}
 80152aa:	b082      	sub	sp, #8
 80152ac:	af00      	add	r7, sp, #0
 80152ae:	6078      	str	r0, [r7, #4]
 80152b0:	6039      	str	r1, [r7, #0]
 80152b2:	6879      	ldr	r1, [r7, #4]
 80152b4:	4808      	ldr	r0, [pc, #32]	@ (80152d8 <CDC_Receive_HS+0x30>)
 80152b6:	f7fe fb8b 	bl	80139d0 <USBD_CDC_SetRxBuffer>
 80152ba:	4807      	ldr	r0, [pc, #28]	@ (80152d8 <CDC_Receive_HS+0x30>)
 80152bc:	f7fe fbe6 	bl	8013a8c <USBD_CDC_ReceivePacket>
 80152c0:	683b      	ldr	r3, [r7, #0]
 80152c2:	681b      	ldr	r3, [r3, #0]
 80152c4:	461a      	mov	r2, r3
 80152c6:	6879      	ldr	r1, [r7, #4]
 80152c8:	4804      	ldr	r0, [pc, #16]	@ (80152dc <CDC_Receive_HS+0x34>)
 80152ca:	f7ee fa4d 	bl	8003768 <VibeCheckShell_PutInput>
 80152ce:	2300      	movs	r3, #0
 80152d0:	4618      	mov	r0, r3
 80152d2:	3708      	adds	r7, #8
 80152d4:	46bd      	mov	sp, r7
 80152d6:	bd80      	pop	{r7, pc}
 80152d8:	24004548 	.word	0x24004548
 80152dc:	24000988 	.word	0x24000988

080152e0 <CDC_Transmit_HS>:
 80152e0:	b580      	push	{r7, lr}
 80152e2:	b084      	sub	sp, #16
 80152e4:	af00      	add	r7, sp, #0
 80152e6:	6078      	str	r0, [r7, #4]
 80152e8:	460b      	mov	r3, r1
 80152ea:	807b      	strh	r3, [r7, #2]
 80152ec:	2300      	movs	r3, #0
 80152ee:	73fb      	strb	r3, [r7, #15]
 80152f0:	4b0d      	ldr	r3, [pc, #52]	@ (8015328 <CDC_Transmit_HS+0x48>)
 80152f2:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 80152f6:	60bb      	str	r3, [r7, #8]
 80152f8:	68bb      	ldr	r3, [r7, #8]
 80152fa:	f8d3 3214 	ldr.w	r3, [r3, #532]	@ 0x214
 80152fe:	2b00      	cmp	r3, #0
 8015300:	d001      	beq.n	8015306 <CDC_Transmit_HS+0x26>
 8015302:	2301      	movs	r3, #1
 8015304:	e00b      	b.n	801531e <CDC_Transmit_HS+0x3e>
 8015306:	887b      	ldrh	r3, [r7, #2]
 8015308:	461a      	mov	r2, r3
 801530a:	6879      	ldr	r1, [r7, #4]
 801530c:	4806      	ldr	r0, [pc, #24]	@ (8015328 <CDC_Transmit_HS+0x48>)
 801530e:	f7fe fb3d 	bl	801398c <USBD_CDC_SetTxBuffer>
 8015312:	4805      	ldr	r0, [pc, #20]	@ (8015328 <CDC_Transmit_HS+0x48>)
 8015314:	f7fe fb7a 	bl	8013a0c <USBD_CDC_TransmitPacket>
 8015318:	4603      	mov	r3, r0
 801531a:	73fb      	strb	r3, [r7, #15]
 801531c:	7bfb      	ldrb	r3, [r7, #15]
 801531e:	4618      	mov	r0, r3
 8015320:	3710      	adds	r7, #16
 8015322:	46bd      	mov	sp, r7
 8015324:	bd80      	pop	{r7, pc}
 8015326:	bf00      	nop
 8015328:	24004548 	.word	0x24004548

0801532c <CDC_TransmitCplt_HS>:
 801532c:	b480      	push	{r7}
 801532e:	b087      	sub	sp, #28
 8015330:	af00      	add	r7, sp, #0
 8015332:	60f8      	str	r0, [r7, #12]
 8015334:	60b9      	str	r1, [r7, #8]
 8015336:	4613      	mov	r3, r2
 8015338:	71fb      	strb	r3, [r7, #7]
 801533a:	2300      	movs	r3, #0
 801533c:	75fb      	strb	r3, [r7, #23]
 801533e:	f997 3017 	ldrsb.w	r3, [r7, #23]
 8015342:	4618      	mov	r0, r3
 8015344:	371c      	adds	r7, #28
 8015346:	46bd      	mov	sp, r7
 8015348:	f85d 7b04 	ldr.w	r7, [sp], #4
 801534c:	4770      	bx	lr
	...

08015350 <USBD_HS_DeviceDescriptor>:
 8015350:	b480      	push	{r7}
 8015352:	b083      	sub	sp, #12
 8015354:	af00      	add	r7, sp, #0
 8015356:	4603      	mov	r3, r0
 8015358:	6039      	str	r1, [r7, #0]
 801535a:	71fb      	strb	r3, [r7, #7]
 801535c:	683b      	ldr	r3, [r7, #0]
 801535e:	2212      	movs	r2, #18
 8015360:	801a      	strh	r2, [r3, #0]
 8015362:	4b03      	ldr	r3, [pc, #12]	@ (8015370 <USBD_HS_DeviceDescriptor+0x20>)
 8015364:	4618      	mov	r0, r3
 8015366:	370c      	adds	r7, #12
 8015368:	46bd      	mov	sp, r7
 801536a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801536e:	4770      	bx	lr
 8015370:	240000d0 	.word	0x240000d0

08015374 <USBD_HS_LangIDStrDescriptor>:
 8015374:	b480      	push	{r7}
 8015376:	b083      	sub	sp, #12
 8015378:	af00      	add	r7, sp, #0
 801537a:	4603      	mov	r3, r0
 801537c:	6039      	str	r1, [r7, #0]
 801537e:	71fb      	strb	r3, [r7, #7]
 8015380:	683b      	ldr	r3, [r7, #0]
 8015382:	2204      	movs	r2, #4
 8015384:	801a      	strh	r2, [r3, #0]
 8015386:	4b03      	ldr	r3, [pc, #12]	@ (8015394 <USBD_HS_LangIDStrDescriptor+0x20>)
 8015388:	4618      	mov	r0, r3
 801538a:	370c      	adds	r7, #12
 801538c:	46bd      	mov	sp, r7
 801538e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015392:	4770      	bx	lr
 8015394:	240000e4 	.word	0x240000e4

08015398 <USBD_HS_ProductStrDescriptor>:
 8015398:	b580      	push	{r7, lr}
 801539a:	b082      	sub	sp, #8
 801539c:	af00      	add	r7, sp, #0
 801539e:	4603      	mov	r3, r0
 80153a0:	6039      	str	r1, [r7, #0]
 80153a2:	71fb      	strb	r3, [r7, #7]
 80153a4:	79fb      	ldrb	r3, [r7, #7]
 80153a6:	2b00      	cmp	r3, #0
 80153a8:	d105      	bne.n	80153b6 <USBD_HS_ProductStrDescriptor+0x1e>
 80153aa:	683a      	ldr	r2, [r7, #0]
 80153ac:	4907      	ldr	r1, [pc, #28]	@ (80153cc <USBD_HS_ProductStrDescriptor+0x34>)
 80153ae:	4808      	ldr	r0, [pc, #32]	@ (80153d0 <USBD_HS_ProductStrDescriptor+0x38>)
 80153b0:	f7ff fde2 	bl	8014f78 <USBD_GetString>
 80153b4:	e004      	b.n	80153c0 <USBD_HS_ProductStrDescriptor+0x28>
 80153b6:	683a      	ldr	r2, [r7, #0]
 80153b8:	4904      	ldr	r1, [pc, #16]	@ (80153cc <USBD_HS_ProductStrDescriptor+0x34>)
 80153ba:	4805      	ldr	r0, [pc, #20]	@ (80153d0 <USBD_HS_ProductStrDescriptor+0x38>)
 80153bc:	f7ff fddc 	bl	8014f78 <USBD_GetString>
 80153c0:	4b02      	ldr	r3, [pc, #8]	@ (80153cc <USBD_HS_ProductStrDescriptor+0x34>)
 80153c2:	4618      	mov	r0, r3
 80153c4:	3708      	adds	r7, #8
 80153c6:	46bd      	mov	sp, r7
 80153c8:	bd80      	pop	{r7, pc}
 80153ca:	bf00      	nop
 80153cc:	24005824 	.word	0x24005824
 80153d0:	0801ab6c 	.word	0x0801ab6c

080153d4 <USBD_HS_ManufacturerStrDescriptor>:
 80153d4:	b580      	push	{r7, lr}
 80153d6:	b082      	sub	sp, #8
 80153d8:	af00      	add	r7, sp, #0
 80153da:	4603      	mov	r3, r0
 80153dc:	6039      	str	r1, [r7, #0]
 80153de:	71fb      	strb	r3, [r7, #7]
 80153e0:	683a      	ldr	r2, [r7, #0]
 80153e2:	4904      	ldr	r1, [pc, #16]	@ (80153f4 <USBD_HS_ManufacturerStrDescriptor+0x20>)
 80153e4:	4804      	ldr	r0, [pc, #16]	@ (80153f8 <USBD_HS_ManufacturerStrDescriptor+0x24>)
 80153e6:	f7ff fdc7 	bl	8014f78 <USBD_GetString>
 80153ea:	4b02      	ldr	r3, [pc, #8]	@ (80153f4 <USBD_HS_ManufacturerStrDescriptor+0x20>)
 80153ec:	4618      	mov	r0, r3
 80153ee:	3708      	adds	r7, #8
 80153f0:	46bd      	mov	sp, r7
 80153f2:	bd80      	pop	{r7, pc}
 80153f4:	24005824 	.word	0x24005824
 80153f8:	0801ab78 	.word	0x0801ab78

080153fc <USBD_HS_SerialStrDescriptor>:
 80153fc:	b580      	push	{r7, lr}
 80153fe:	b082      	sub	sp, #8
 8015400:	af00      	add	r7, sp, #0
 8015402:	4603      	mov	r3, r0
 8015404:	6039      	str	r1, [r7, #0]
 8015406:	71fb      	strb	r3, [r7, #7]
 8015408:	683b      	ldr	r3, [r7, #0]
 801540a:	221a      	movs	r2, #26
 801540c:	801a      	strh	r2, [r3, #0]
 801540e:	f000 f843 	bl	8015498 <Get_SerialNum>
 8015412:	4b02      	ldr	r3, [pc, #8]	@ (801541c <USBD_HS_SerialStrDescriptor+0x20>)
 8015414:	4618      	mov	r0, r3
 8015416:	3708      	adds	r7, #8
 8015418:	46bd      	mov	sp, r7
 801541a:	bd80      	pop	{r7, pc}
 801541c:	240000e8 	.word	0x240000e8

08015420 <USBD_HS_ConfigStrDescriptor>:
 8015420:	b580      	push	{r7, lr}
 8015422:	b082      	sub	sp, #8
 8015424:	af00      	add	r7, sp, #0
 8015426:	4603      	mov	r3, r0
 8015428:	6039      	str	r1, [r7, #0]
 801542a:	71fb      	strb	r3, [r7, #7]
 801542c:	79fb      	ldrb	r3, [r7, #7]
 801542e:	2b00      	cmp	r3, #0
 8015430:	d105      	bne.n	801543e <USBD_HS_ConfigStrDescriptor+0x1e>
 8015432:	683a      	ldr	r2, [r7, #0]
 8015434:	4907      	ldr	r1, [pc, #28]	@ (8015454 <USBD_HS_ConfigStrDescriptor+0x34>)
 8015436:	4808      	ldr	r0, [pc, #32]	@ (8015458 <USBD_HS_ConfigStrDescriptor+0x38>)
 8015438:	f7ff fd9e 	bl	8014f78 <USBD_GetString>
 801543c:	e004      	b.n	8015448 <USBD_HS_ConfigStrDescriptor+0x28>
 801543e:	683a      	ldr	r2, [r7, #0]
 8015440:	4904      	ldr	r1, [pc, #16]	@ (8015454 <USBD_HS_ConfigStrDescriptor+0x34>)
 8015442:	4805      	ldr	r0, [pc, #20]	@ (8015458 <USBD_HS_ConfigStrDescriptor+0x38>)
 8015444:	f7ff fd98 	bl	8014f78 <USBD_GetString>
 8015448:	4b02      	ldr	r3, [pc, #8]	@ (8015454 <USBD_HS_ConfigStrDescriptor+0x34>)
 801544a:	4618      	mov	r0, r3
 801544c:	3708      	adds	r7, #8
 801544e:	46bd      	mov	sp, r7
 8015450:	bd80      	pop	{r7, pc}
 8015452:	bf00      	nop
 8015454:	24005824 	.word	0x24005824
 8015458:	0801ab84 	.word	0x0801ab84

0801545c <USBD_HS_InterfaceStrDescriptor>:
 801545c:	b580      	push	{r7, lr}
 801545e:	b082      	sub	sp, #8
 8015460:	af00      	add	r7, sp, #0
 8015462:	4603      	mov	r3, r0
 8015464:	6039      	str	r1, [r7, #0]
 8015466:	71fb      	strb	r3, [r7, #7]
 8015468:	79fb      	ldrb	r3, [r7, #7]
 801546a:	2b00      	cmp	r3, #0
 801546c:	d105      	bne.n	801547a <USBD_HS_InterfaceStrDescriptor+0x1e>
 801546e:	683a      	ldr	r2, [r7, #0]
 8015470:	4907      	ldr	r1, [pc, #28]	@ (8015490 <USBD_HS_InterfaceStrDescriptor+0x34>)
 8015472:	4808      	ldr	r0, [pc, #32]	@ (8015494 <USBD_HS_InterfaceStrDescriptor+0x38>)
 8015474:	f7ff fd80 	bl	8014f78 <USBD_GetString>
 8015478:	e004      	b.n	8015484 <USBD_HS_InterfaceStrDescriptor+0x28>
 801547a:	683a      	ldr	r2, [r7, #0]
 801547c:	4904      	ldr	r1, [pc, #16]	@ (8015490 <USBD_HS_InterfaceStrDescriptor+0x34>)
 801547e:	4805      	ldr	r0, [pc, #20]	@ (8015494 <USBD_HS_InterfaceStrDescriptor+0x38>)
 8015480:	f7ff fd7a 	bl	8014f78 <USBD_GetString>
 8015484:	4b02      	ldr	r3, [pc, #8]	@ (8015490 <USBD_HS_InterfaceStrDescriptor+0x34>)
 8015486:	4618      	mov	r0, r3
 8015488:	3708      	adds	r7, #8
 801548a:	46bd      	mov	sp, r7
 801548c:	bd80      	pop	{r7, pc}
 801548e:	bf00      	nop
 8015490:	24005824 	.word	0x24005824
 8015494:	0801ab90 	.word	0x0801ab90

08015498 <Get_SerialNum>:
 8015498:	b580      	push	{r7, lr}
 801549a:	b084      	sub	sp, #16
 801549c:	af00      	add	r7, sp, #0
 801549e:	4b0f      	ldr	r3, [pc, #60]	@ (80154dc <Get_SerialNum+0x44>)
 80154a0:	681b      	ldr	r3, [r3, #0]
 80154a2:	60fb      	str	r3, [r7, #12]
 80154a4:	4b0e      	ldr	r3, [pc, #56]	@ (80154e0 <Get_SerialNum+0x48>)
 80154a6:	681b      	ldr	r3, [r3, #0]
 80154a8:	60bb      	str	r3, [r7, #8]
 80154aa:	4b0e      	ldr	r3, [pc, #56]	@ (80154e4 <Get_SerialNum+0x4c>)
 80154ac:	681b      	ldr	r3, [r3, #0]
 80154ae:	607b      	str	r3, [r7, #4]
 80154b0:	68fa      	ldr	r2, [r7, #12]
 80154b2:	687b      	ldr	r3, [r7, #4]
 80154b4:	4413      	add	r3, r2
 80154b6:	60fb      	str	r3, [r7, #12]
 80154b8:	68fb      	ldr	r3, [r7, #12]
 80154ba:	2b00      	cmp	r3, #0
 80154bc:	d009      	beq.n	80154d2 <Get_SerialNum+0x3a>
 80154be:	2208      	movs	r2, #8
 80154c0:	4909      	ldr	r1, [pc, #36]	@ (80154e8 <Get_SerialNum+0x50>)
 80154c2:	68f8      	ldr	r0, [r7, #12]
 80154c4:	f000 f814 	bl	80154f0 <IntToUnicode>
 80154c8:	2204      	movs	r2, #4
 80154ca:	4908      	ldr	r1, [pc, #32]	@ (80154ec <Get_SerialNum+0x54>)
 80154cc:	68b8      	ldr	r0, [r7, #8]
 80154ce:	f000 f80f 	bl	80154f0 <IntToUnicode>
 80154d2:	bf00      	nop
 80154d4:	3710      	adds	r7, #16
 80154d6:	46bd      	mov	sp, r7
 80154d8:	bd80      	pop	{r7, pc}
 80154da:	bf00      	nop
 80154dc:	1ff1e800 	.word	0x1ff1e800
 80154e0:	1ff1e804 	.word	0x1ff1e804
 80154e4:	1ff1e808 	.word	0x1ff1e808
 80154e8:	240000ea 	.word	0x240000ea
 80154ec:	240000fa 	.word	0x240000fa

080154f0 <IntToUnicode>:
 80154f0:	b480      	push	{r7}
 80154f2:	b087      	sub	sp, #28
 80154f4:	af00      	add	r7, sp, #0
 80154f6:	60f8      	str	r0, [r7, #12]
 80154f8:	60b9      	str	r1, [r7, #8]
 80154fa:	4613      	mov	r3, r2
 80154fc:	71fb      	strb	r3, [r7, #7]
 80154fe:	2300      	movs	r3, #0
 8015500:	75fb      	strb	r3, [r7, #23]
 8015502:	2300      	movs	r3, #0
 8015504:	75fb      	strb	r3, [r7, #23]
 8015506:	e027      	b.n	8015558 <IntToUnicode+0x68>
 8015508:	68fb      	ldr	r3, [r7, #12]
 801550a:	0f1b      	lsrs	r3, r3, #28
 801550c:	2b09      	cmp	r3, #9
 801550e:	d80b      	bhi.n	8015528 <IntToUnicode+0x38>
 8015510:	68fb      	ldr	r3, [r7, #12]
 8015512:	0f1b      	lsrs	r3, r3, #28
 8015514:	b2da      	uxtb	r2, r3
 8015516:	7dfb      	ldrb	r3, [r7, #23]
 8015518:	005b      	lsls	r3, r3, #1
 801551a:	4619      	mov	r1, r3
 801551c:	68bb      	ldr	r3, [r7, #8]
 801551e:	440b      	add	r3, r1
 8015520:	3230      	adds	r2, #48	@ 0x30
 8015522:	b2d2      	uxtb	r2, r2
 8015524:	701a      	strb	r2, [r3, #0]
 8015526:	e00a      	b.n	801553e <IntToUnicode+0x4e>
 8015528:	68fb      	ldr	r3, [r7, #12]
 801552a:	0f1b      	lsrs	r3, r3, #28
 801552c:	b2da      	uxtb	r2, r3
 801552e:	7dfb      	ldrb	r3, [r7, #23]
 8015530:	005b      	lsls	r3, r3, #1
 8015532:	4619      	mov	r1, r3
 8015534:	68bb      	ldr	r3, [r7, #8]
 8015536:	440b      	add	r3, r1
 8015538:	3237      	adds	r2, #55	@ 0x37
 801553a:	b2d2      	uxtb	r2, r2
 801553c:	701a      	strb	r2, [r3, #0]
 801553e:	68fb      	ldr	r3, [r7, #12]
 8015540:	011b      	lsls	r3, r3, #4
 8015542:	60fb      	str	r3, [r7, #12]
 8015544:	7dfb      	ldrb	r3, [r7, #23]
 8015546:	005b      	lsls	r3, r3, #1
 8015548:	3301      	adds	r3, #1
 801554a:	68ba      	ldr	r2, [r7, #8]
 801554c:	4413      	add	r3, r2
 801554e:	2200      	movs	r2, #0
 8015550:	701a      	strb	r2, [r3, #0]
 8015552:	7dfb      	ldrb	r3, [r7, #23]
 8015554:	3301      	adds	r3, #1
 8015556:	75fb      	strb	r3, [r7, #23]
 8015558:	7dfa      	ldrb	r2, [r7, #23]
 801555a:	79fb      	ldrb	r3, [r7, #7]
 801555c:	429a      	cmp	r2, r3
 801555e:	d3d3      	bcc.n	8015508 <IntToUnicode+0x18>
 8015560:	bf00      	nop
 8015562:	bf00      	nop
 8015564:	371c      	adds	r7, #28
 8015566:	46bd      	mov	sp, r7
 8015568:	f85d 7b04 	ldr.w	r7, [sp], #4
 801556c:	4770      	bx	lr
	...

08015570 <HAL_PCD_MspInit>:
 8015570:	b580      	push	{r7, lr}
 8015572:	b0b2      	sub	sp, #200	@ 0xc8
 8015574:	af00      	add	r7, sp, #0
 8015576:	6078      	str	r0, [r7, #4]
 8015578:	f107 0310 	add.w	r3, r7, #16
 801557c:	22b8      	movs	r2, #184	@ 0xb8
 801557e:	2100      	movs	r1, #0
 8015580:	4618      	mov	r0, r3
 8015582:	f001 fea6 	bl	80172d2 <memset>
 8015586:	687b      	ldr	r3, [r7, #4]
 8015588:	681b      	ldr	r3, [r3, #0]
 801558a:	4a1a      	ldr	r2, [pc, #104]	@ (80155f4 <HAL_PCD_MspInit+0x84>)
 801558c:	4293      	cmp	r3, r2
 801558e:	d12c      	bne.n	80155ea <HAL_PCD_MspInit+0x7a>
 8015590:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 8015594:	f04f 0300 	mov.w	r3, #0
 8015598:	e9c7 2304 	strd	r2, r3, [r7, #16]
 801559c:	f44f 1340 	mov.w	r3, #3145728	@ 0x300000
 80155a0:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80155a4:	f107 0310 	add.w	r3, r7, #16
 80155a8:	4618      	mov	r0, r3
 80155aa:	f7f6 fcb1 	bl	800bf10 <HAL_RCCEx_PeriphCLKConfig>
 80155ae:	4603      	mov	r3, r0
 80155b0:	2b00      	cmp	r3, #0
 80155b2:	d001      	beq.n	80155b8 <HAL_PCD_MspInit+0x48>
 80155b4:	f7ec f99c 	bl	80018f0 <Error_Handler>
 80155b8:	f7f5 fd34 	bl	800b024 <HAL_PWREx_EnableUSBVoltageDetector>
 80155bc:	4b0e      	ldr	r3, [pc, #56]	@ (80155f8 <HAL_PCD_MspInit+0x88>)
 80155be:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 80155c2:	4a0d      	ldr	r2, [pc, #52]	@ (80155f8 <HAL_PCD_MspInit+0x88>)
 80155c4:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80155c8:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 80155cc:	4b0a      	ldr	r3, [pc, #40]	@ (80155f8 <HAL_PCD_MspInit+0x88>)
 80155ce:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 80155d2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80155d6:	60fb      	str	r3, [r7, #12]
 80155d8:	68fb      	ldr	r3, [r7, #12]
 80155da:	2200      	movs	r2, #0
 80155dc:	2100      	movs	r1, #0
 80155de:	204d      	movs	r0, #77	@ 0x4d
 80155e0:	f7f1 fb01 	bl	8006be6 <HAL_NVIC_SetPriority>
 80155e4:	204d      	movs	r0, #77	@ 0x4d
 80155e6:	f7f1 fb18 	bl	8006c1a <HAL_NVIC_EnableIRQ>
 80155ea:	bf00      	nop
 80155ec:	37c8      	adds	r7, #200	@ 0xc8
 80155ee:	46bd      	mov	sp, r7
 80155f0:	bd80      	pop	{r7, pc}
 80155f2:	bf00      	nop
 80155f4:	40040000 	.word	0x40040000
 80155f8:	58024400 	.word	0x58024400

080155fc <HAL_PCD_SetupStageCallback>:
 80155fc:	b580      	push	{r7, lr}
 80155fe:	b082      	sub	sp, #8
 8015600:	af00      	add	r7, sp, #0
 8015602:	6078      	str	r0, [r7, #4]
 8015604:	687b      	ldr	r3, [r7, #4]
 8015606:	f8d3 24e0 	ldr.w	r2, [r3, #1248]	@ 0x4e0
 801560a:	687b      	ldr	r3, [r7, #4]
 801560c:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 8015610:	4619      	mov	r1, r3
 8015612:	4610      	mov	r0, r2
 8015614:	f7fe fb23 	bl	8013c5e <USBD_LL_SetupStage>
 8015618:	bf00      	nop
 801561a:	3708      	adds	r7, #8
 801561c:	46bd      	mov	sp, r7
 801561e:	bd80      	pop	{r7, pc}

08015620 <HAL_PCD_DataOutStageCallback>:
 8015620:	b580      	push	{r7, lr}
 8015622:	b082      	sub	sp, #8
 8015624:	af00      	add	r7, sp, #0
 8015626:	6078      	str	r0, [r7, #4]
 8015628:	460b      	mov	r3, r1
 801562a:	70fb      	strb	r3, [r7, #3]
 801562c:	687b      	ldr	r3, [r7, #4]
 801562e:	f8d3 04e0 	ldr.w	r0, [r3, #1248]	@ 0x4e0
 8015632:	78fa      	ldrb	r2, [r7, #3]
 8015634:	6879      	ldr	r1, [r7, #4]
 8015636:	4613      	mov	r3, r2
 8015638:	00db      	lsls	r3, r3, #3
 801563a:	4413      	add	r3, r2
 801563c:	009b      	lsls	r3, r3, #2
 801563e:	440b      	add	r3, r1
 8015640:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8015644:	681a      	ldr	r2, [r3, #0]
 8015646:	78fb      	ldrb	r3, [r7, #3]
 8015648:	4619      	mov	r1, r3
 801564a:	f7fe fb5d 	bl	8013d08 <USBD_LL_DataOutStage>
 801564e:	bf00      	nop
 8015650:	3708      	adds	r7, #8
 8015652:	46bd      	mov	sp, r7
 8015654:	bd80      	pop	{r7, pc}

08015656 <HAL_PCD_DataInStageCallback>:
 8015656:	b580      	push	{r7, lr}
 8015658:	b082      	sub	sp, #8
 801565a:	af00      	add	r7, sp, #0
 801565c:	6078      	str	r0, [r7, #4]
 801565e:	460b      	mov	r3, r1
 8015660:	70fb      	strb	r3, [r7, #3]
 8015662:	687b      	ldr	r3, [r7, #4]
 8015664:	f8d3 04e0 	ldr.w	r0, [r3, #1248]	@ 0x4e0
 8015668:	78fa      	ldrb	r2, [r7, #3]
 801566a:	6879      	ldr	r1, [r7, #4]
 801566c:	4613      	mov	r3, r2
 801566e:	00db      	lsls	r3, r3, #3
 8015670:	4413      	add	r3, r2
 8015672:	009b      	lsls	r3, r3, #2
 8015674:	440b      	add	r3, r1
 8015676:	3320      	adds	r3, #32
 8015678:	681a      	ldr	r2, [r3, #0]
 801567a:	78fb      	ldrb	r3, [r7, #3]
 801567c:	4619      	mov	r1, r3
 801567e:	f7fe fbf6 	bl	8013e6e <USBD_LL_DataInStage>
 8015682:	bf00      	nop
 8015684:	3708      	adds	r7, #8
 8015686:	46bd      	mov	sp, r7
 8015688:	bd80      	pop	{r7, pc}

0801568a <HAL_PCD_SOFCallback>:
 801568a:	b580      	push	{r7, lr}
 801568c:	b082      	sub	sp, #8
 801568e:	af00      	add	r7, sp, #0
 8015690:	6078      	str	r0, [r7, #4]
 8015692:	687b      	ldr	r3, [r7, #4]
 8015694:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 8015698:	4618      	mov	r0, r3
 801569a:	f7fe fd30 	bl	80140fe <USBD_LL_SOF>
 801569e:	bf00      	nop
 80156a0:	3708      	adds	r7, #8
 80156a2:	46bd      	mov	sp, r7
 80156a4:	bd80      	pop	{r7, pc}

080156a6 <HAL_PCD_ResetCallback>:
 80156a6:	b580      	push	{r7, lr}
 80156a8:	b084      	sub	sp, #16
 80156aa:	af00      	add	r7, sp, #0
 80156ac:	6078      	str	r0, [r7, #4]
 80156ae:	2301      	movs	r3, #1
 80156b0:	73fb      	strb	r3, [r7, #15]
 80156b2:	687b      	ldr	r3, [r7, #4]
 80156b4:	79db      	ldrb	r3, [r3, #7]
 80156b6:	2b00      	cmp	r3, #0
 80156b8:	d102      	bne.n	80156c0 <HAL_PCD_ResetCallback+0x1a>
 80156ba:	2300      	movs	r3, #0
 80156bc:	73fb      	strb	r3, [r7, #15]
 80156be:	e008      	b.n	80156d2 <HAL_PCD_ResetCallback+0x2c>
 80156c0:	687b      	ldr	r3, [r7, #4]
 80156c2:	79db      	ldrb	r3, [r3, #7]
 80156c4:	2b02      	cmp	r3, #2
 80156c6:	d102      	bne.n	80156ce <HAL_PCD_ResetCallback+0x28>
 80156c8:	2301      	movs	r3, #1
 80156ca:	73fb      	strb	r3, [r7, #15]
 80156cc:	e001      	b.n	80156d2 <HAL_PCD_ResetCallback+0x2c>
 80156ce:	f7ec f90f 	bl	80018f0 <Error_Handler>
 80156d2:	687b      	ldr	r3, [r7, #4]
 80156d4:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 80156d8:	7bfa      	ldrb	r2, [r7, #15]
 80156da:	4611      	mov	r1, r2
 80156dc:	4618      	mov	r0, r3
 80156de:	f7fe fcca 	bl	8014076 <USBD_LL_SetSpeed>
 80156e2:	687b      	ldr	r3, [r7, #4]
 80156e4:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 80156e8:	4618      	mov	r0, r3
 80156ea:	f7fe fc72 	bl	8013fd2 <USBD_LL_Reset>
 80156ee:	bf00      	nop
 80156f0:	3710      	adds	r7, #16
 80156f2:	46bd      	mov	sp, r7
 80156f4:	bd80      	pop	{r7, pc}
	...

080156f8 <HAL_PCD_SuspendCallback>:
 80156f8:	b580      	push	{r7, lr}
 80156fa:	b082      	sub	sp, #8
 80156fc:	af00      	add	r7, sp, #0
 80156fe:	6078      	str	r0, [r7, #4]
 8015700:	687b      	ldr	r3, [r7, #4]
 8015702:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 8015706:	4618      	mov	r0, r3
 8015708:	f7fe fcc5 	bl	8014096 <USBD_LL_Suspend>
 801570c:	687b      	ldr	r3, [r7, #4]
 801570e:	681b      	ldr	r3, [r3, #0]
 8015710:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8015714:	681b      	ldr	r3, [r3, #0]
 8015716:	687a      	ldr	r2, [r7, #4]
 8015718:	6812      	ldr	r2, [r2, #0]
 801571a:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 801571e:	f043 0301 	orr.w	r3, r3, #1
 8015722:	6013      	str	r3, [r2, #0]
 8015724:	687b      	ldr	r3, [r7, #4]
 8015726:	7adb      	ldrb	r3, [r3, #11]
 8015728:	2b00      	cmp	r3, #0
 801572a:	d005      	beq.n	8015738 <HAL_PCD_SuspendCallback+0x40>
 801572c:	4b04      	ldr	r3, [pc, #16]	@ (8015740 <HAL_PCD_SuspendCallback+0x48>)
 801572e:	691b      	ldr	r3, [r3, #16]
 8015730:	4a03      	ldr	r2, [pc, #12]	@ (8015740 <HAL_PCD_SuspendCallback+0x48>)
 8015732:	f043 0306 	orr.w	r3, r3, #6
 8015736:	6113      	str	r3, [r2, #16]
 8015738:	bf00      	nop
 801573a:	3708      	adds	r7, #8
 801573c:	46bd      	mov	sp, r7
 801573e:	bd80      	pop	{r7, pc}
 8015740:	e000ed00 	.word	0xe000ed00

08015744 <HAL_PCD_ResumeCallback>:
 8015744:	b580      	push	{r7, lr}
 8015746:	b082      	sub	sp, #8
 8015748:	af00      	add	r7, sp, #0
 801574a:	6078      	str	r0, [r7, #4]
 801574c:	687b      	ldr	r3, [r7, #4]
 801574e:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 8015752:	4618      	mov	r0, r3
 8015754:	f7fe fcbb 	bl	80140ce <USBD_LL_Resume>
 8015758:	bf00      	nop
 801575a:	3708      	adds	r7, #8
 801575c:	46bd      	mov	sp, r7
 801575e:	bd80      	pop	{r7, pc}

08015760 <HAL_PCD_ISOOUTIncompleteCallback>:
 8015760:	b580      	push	{r7, lr}
 8015762:	b082      	sub	sp, #8
 8015764:	af00      	add	r7, sp, #0
 8015766:	6078      	str	r0, [r7, #4]
 8015768:	460b      	mov	r3, r1
 801576a:	70fb      	strb	r3, [r7, #3]
 801576c:	687b      	ldr	r3, [r7, #4]
 801576e:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 8015772:	78fa      	ldrb	r2, [r7, #3]
 8015774:	4611      	mov	r1, r2
 8015776:	4618      	mov	r0, r3
 8015778:	f7fe fd13 	bl	80141a2 <USBD_LL_IsoOUTIncomplete>
 801577c:	bf00      	nop
 801577e:	3708      	adds	r7, #8
 8015780:	46bd      	mov	sp, r7
 8015782:	bd80      	pop	{r7, pc}

08015784 <HAL_PCD_ISOINIncompleteCallback>:
 8015784:	b580      	push	{r7, lr}
 8015786:	b082      	sub	sp, #8
 8015788:	af00      	add	r7, sp, #0
 801578a:	6078      	str	r0, [r7, #4]
 801578c:	460b      	mov	r3, r1
 801578e:	70fb      	strb	r3, [r7, #3]
 8015790:	687b      	ldr	r3, [r7, #4]
 8015792:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 8015796:	78fa      	ldrb	r2, [r7, #3]
 8015798:	4611      	mov	r1, r2
 801579a:	4618      	mov	r0, r3
 801579c:	f7fe fccf 	bl	801413e <USBD_LL_IsoINIncomplete>
 80157a0:	bf00      	nop
 80157a2:	3708      	adds	r7, #8
 80157a4:	46bd      	mov	sp, r7
 80157a6:	bd80      	pop	{r7, pc}

080157a8 <HAL_PCD_ConnectCallback>:
 80157a8:	b580      	push	{r7, lr}
 80157aa:	b082      	sub	sp, #8
 80157ac:	af00      	add	r7, sp, #0
 80157ae:	6078      	str	r0, [r7, #4]
 80157b0:	687b      	ldr	r3, [r7, #4]
 80157b2:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 80157b6:	4618      	mov	r0, r3
 80157b8:	f7fe fd25 	bl	8014206 <USBD_LL_DevConnected>
 80157bc:	bf00      	nop
 80157be:	3708      	adds	r7, #8
 80157c0:	46bd      	mov	sp, r7
 80157c2:	bd80      	pop	{r7, pc}

080157c4 <HAL_PCD_DisconnectCallback>:
 80157c4:	b580      	push	{r7, lr}
 80157c6:	b082      	sub	sp, #8
 80157c8:	af00      	add	r7, sp, #0
 80157ca:	6078      	str	r0, [r7, #4]
 80157cc:	687b      	ldr	r3, [r7, #4]
 80157ce:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 80157d2:	4618      	mov	r0, r3
 80157d4:	f7fe fd22 	bl	801421c <USBD_LL_DevDisconnected>
 80157d8:	bf00      	nop
 80157da:	3708      	adds	r7, #8
 80157dc:	46bd      	mov	sp, r7
 80157de:	bd80      	pop	{r7, pc}

080157e0 <USBD_LL_Init>:
 80157e0:	b580      	push	{r7, lr}
 80157e2:	b082      	sub	sp, #8
 80157e4:	af00      	add	r7, sp, #0
 80157e6:	6078      	str	r0, [r7, #4]
 80157e8:	687b      	ldr	r3, [r7, #4]
 80157ea:	781b      	ldrb	r3, [r3, #0]
 80157ec:	2b01      	cmp	r3, #1
 80157ee:	d140      	bne.n	8015872 <USBD_LL_Init+0x92>
 80157f0:	4a22      	ldr	r2, [pc, #136]	@ (801587c <USBD_LL_Init+0x9c>)
 80157f2:	687b      	ldr	r3, [r7, #4]
 80157f4:	f8c2 34e0 	str.w	r3, [r2, #1248]	@ 0x4e0
 80157f8:	687b      	ldr	r3, [r7, #4]
 80157fa:	4a20      	ldr	r2, [pc, #128]	@ (801587c <USBD_LL_Init+0x9c>)
 80157fc:	f8c3 22c8 	str.w	r2, [r3, #712]	@ 0x2c8
 8015800:	4b1e      	ldr	r3, [pc, #120]	@ (801587c <USBD_LL_Init+0x9c>)
 8015802:	4a1f      	ldr	r2, [pc, #124]	@ (8015880 <USBD_LL_Init+0xa0>)
 8015804:	601a      	str	r2, [r3, #0]
 8015806:	4b1d      	ldr	r3, [pc, #116]	@ (801587c <USBD_LL_Init+0x9c>)
 8015808:	2209      	movs	r2, #9
 801580a:	711a      	strb	r2, [r3, #4]
 801580c:	4b1b      	ldr	r3, [pc, #108]	@ (801587c <USBD_LL_Init+0x9c>)
 801580e:	2202      	movs	r2, #2
 8015810:	71da      	strb	r2, [r3, #7]
 8015812:	4b1a      	ldr	r3, [pc, #104]	@ (801587c <USBD_LL_Init+0x9c>)
 8015814:	2200      	movs	r2, #0
 8015816:	719a      	strb	r2, [r3, #6]
 8015818:	4b18      	ldr	r3, [pc, #96]	@ (801587c <USBD_LL_Init+0x9c>)
 801581a:	2202      	movs	r2, #2
 801581c:	725a      	strb	r2, [r3, #9]
 801581e:	4b17      	ldr	r3, [pc, #92]	@ (801587c <USBD_LL_Init+0x9c>)
 8015820:	2200      	movs	r2, #0
 8015822:	729a      	strb	r2, [r3, #10]
 8015824:	4b15      	ldr	r3, [pc, #84]	@ (801587c <USBD_LL_Init+0x9c>)
 8015826:	2200      	movs	r2, #0
 8015828:	72da      	strb	r2, [r3, #11]
 801582a:	4b14      	ldr	r3, [pc, #80]	@ (801587c <USBD_LL_Init+0x9c>)
 801582c:	2200      	movs	r2, #0
 801582e:	731a      	strb	r2, [r3, #12]
 8015830:	4b12      	ldr	r3, [pc, #72]	@ (801587c <USBD_LL_Init+0x9c>)
 8015832:	2200      	movs	r2, #0
 8015834:	739a      	strb	r2, [r3, #14]
 8015836:	4b11      	ldr	r3, [pc, #68]	@ (801587c <USBD_LL_Init+0x9c>)
 8015838:	2200      	movs	r2, #0
 801583a:	73da      	strb	r2, [r3, #15]
 801583c:	4b0f      	ldr	r3, [pc, #60]	@ (801587c <USBD_LL_Init+0x9c>)
 801583e:	2200      	movs	r2, #0
 8015840:	741a      	strb	r2, [r3, #16]
 8015842:	480e      	ldr	r0, [pc, #56]	@ (801587c <USBD_LL_Init+0x9c>)
 8015844:	f7f4 f915 	bl	8009a72 <HAL_PCD_Init>
 8015848:	4603      	mov	r3, r0
 801584a:	2b00      	cmp	r3, #0
 801584c:	d001      	beq.n	8015852 <USBD_LL_Init+0x72>
 801584e:	f7ec f84f 	bl	80018f0 <Error_Handler>
 8015852:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8015856:	4809      	ldr	r0, [pc, #36]	@ (801587c <USBD_LL_Init+0x9c>)
 8015858:	f7f5 fb69 	bl	800af2e <HAL_PCDEx_SetRxFiFo>
 801585c:	2280      	movs	r2, #128	@ 0x80
 801585e:	2100      	movs	r1, #0
 8015860:	4806      	ldr	r0, [pc, #24]	@ (801587c <USBD_LL_Init+0x9c>)
 8015862:	f7f5 fb1d 	bl	800aea0 <HAL_PCDEx_SetTxFiFo>
 8015866:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 801586a:	2101      	movs	r1, #1
 801586c:	4803      	ldr	r0, [pc, #12]	@ (801587c <USBD_LL_Init+0x9c>)
 801586e:	f7f5 fb17 	bl	800aea0 <HAL_PCDEx_SetTxFiFo>
 8015872:	2300      	movs	r3, #0
 8015874:	4618      	mov	r0, r3
 8015876:	3708      	adds	r7, #8
 8015878:	46bd      	mov	sp, r7
 801587a:	bd80      	pop	{r7, pc}
 801587c:	24005a24 	.word	0x24005a24
 8015880:	40040000 	.word	0x40040000

08015884 <USBD_LL_Start>:
 8015884:	b580      	push	{r7, lr}
 8015886:	b084      	sub	sp, #16
 8015888:	af00      	add	r7, sp, #0
 801588a:	6078      	str	r0, [r7, #4]
 801588c:	2300      	movs	r3, #0
 801588e:	73fb      	strb	r3, [r7, #15]
 8015890:	2300      	movs	r3, #0
 8015892:	73bb      	strb	r3, [r7, #14]
 8015894:	687b      	ldr	r3, [r7, #4]
 8015896:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801589a:	4618      	mov	r0, r3
 801589c:	f7f4 f9f5 	bl	8009c8a <HAL_PCD_Start>
 80158a0:	4603      	mov	r3, r0
 80158a2:	73fb      	strb	r3, [r7, #15]
 80158a4:	7bfb      	ldrb	r3, [r7, #15]
 80158a6:	4618      	mov	r0, r3
 80158a8:	f000 f942 	bl	8015b30 <USBD_Get_USB_Status>
 80158ac:	4603      	mov	r3, r0
 80158ae:	73bb      	strb	r3, [r7, #14]
 80158b0:	7bbb      	ldrb	r3, [r7, #14]
 80158b2:	4618      	mov	r0, r3
 80158b4:	3710      	adds	r7, #16
 80158b6:	46bd      	mov	sp, r7
 80158b8:	bd80      	pop	{r7, pc}

080158ba <USBD_LL_OpenEP>:
 80158ba:	b580      	push	{r7, lr}
 80158bc:	b084      	sub	sp, #16
 80158be:	af00      	add	r7, sp, #0
 80158c0:	6078      	str	r0, [r7, #4]
 80158c2:	4608      	mov	r0, r1
 80158c4:	4611      	mov	r1, r2
 80158c6:	461a      	mov	r2, r3
 80158c8:	4603      	mov	r3, r0
 80158ca:	70fb      	strb	r3, [r7, #3]
 80158cc:	460b      	mov	r3, r1
 80158ce:	70bb      	strb	r3, [r7, #2]
 80158d0:	4613      	mov	r3, r2
 80158d2:	803b      	strh	r3, [r7, #0]
 80158d4:	2300      	movs	r3, #0
 80158d6:	73fb      	strb	r3, [r7, #15]
 80158d8:	2300      	movs	r3, #0
 80158da:	73bb      	strb	r3, [r7, #14]
 80158dc:	687b      	ldr	r3, [r7, #4]
 80158de:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 80158e2:	78bb      	ldrb	r3, [r7, #2]
 80158e4:	883a      	ldrh	r2, [r7, #0]
 80158e6:	78f9      	ldrb	r1, [r7, #3]
 80158e8:	f7f4 fef6 	bl	800a6d8 <HAL_PCD_EP_Open>
 80158ec:	4603      	mov	r3, r0
 80158ee:	73fb      	strb	r3, [r7, #15]
 80158f0:	7bfb      	ldrb	r3, [r7, #15]
 80158f2:	4618      	mov	r0, r3
 80158f4:	f000 f91c 	bl	8015b30 <USBD_Get_USB_Status>
 80158f8:	4603      	mov	r3, r0
 80158fa:	73bb      	strb	r3, [r7, #14]
 80158fc:	7bbb      	ldrb	r3, [r7, #14]
 80158fe:	4618      	mov	r0, r3
 8015900:	3710      	adds	r7, #16
 8015902:	46bd      	mov	sp, r7
 8015904:	bd80      	pop	{r7, pc}

08015906 <USBD_LL_CloseEP>:
 8015906:	b580      	push	{r7, lr}
 8015908:	b084      	sub	sp, #16
 801590a:	af00      	add	r7, sp, #0
 801590c:	6078      	str	r0, [r7, #4]
 801590e:	460b      	mov	r3, r1
 8015910:	70fb      	strb	r3, [r7, #3]
 8015912:	2300      	movs	r3, #0
 8015914:	73fb      	strb	r3, [r7, #15]
 8015916:	2300      	movs	r3, #0
 8015918:	73bb      	strb	r3, [r7, #14]
 801591a:	687b      	ldr	r3, [r7, #4]
 801591c:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 8015920:	78fa      	ldrb	r2, [r7, #3]
 8015922:	4611      	mov	r1, r2
 8015924:	4618      	mov	r0, r3
 8015926:	f7f4 ff3f 	bl	800a7a8 <HAL_PCD_EP_Close>
 801592a:	4603      	mov	r3, r0
 801592c:	73fb      	strb	r3, [r7, #15]
 801592e:	7bfb      	ldrb	r3, [r7, #15]
 8015930:	4618      	mov	r0, r3
 8015932:	f000 f8fd 	bl	8015b30 <USBD_Get_USB_Status>
 8015936:	4603      	mov	r3, r0
 8015938:	73bb      	strb	r3, [r7, #14]
 801593a:	7bbb      	ldrb	r3, [r7, #14]
 801593c:	4618      	mov	r0, r3
 801593e:	3710      	adds	r7, #16
 8015940:	46bd      	mov	sp, r7
 8015942:	bd80      	pop	{r7, pc}

08015944 <USBD_LL_StallEP>:
 8015944:	b580      	push	{r7, lr}
 8015946:	b084      	sub	sp, #16
 8015948:	af00      	add	r7, sp, #0
 801594a:	6078      	str	r0, [r7, #4]
 801594c:	460b      	mov	r3, r1
 801594e:	70fb      	strb	r3, [r7, #3]
 8015950:	2300      	movs	r3, #0
 8015952:	73fb      	strb	r3, [r7, #15]
 8015954:	2300      	movs	r3, #0
 8015956:	73bb      	strb	r3, [r7, #14]
 8015958:	687b      	ldr	r3, [r7, #4]
 801595a:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801595e:	78fa      	ldrb	r2, [r7, #3]
 8015960:	4611      	mov	r1, r2
 8015962:	4618      	mov	r0, r3
 8015964:	f7f4 fff7 	bl	800a956 <HAL_PCD_EP_SetStall>
 8015968:	4603      	mov	r3, r0
 801596a:	73fb      	strb	r3, [r7, #15]
 801596c:	7bfb      	ldrb	r3, [r7, #15]
 801596e:	4618      	mov	r0, r3
 8015970:	f000 f8de 	bl	8015b30 <USBD_Get_USB_Status>
 8015974:	4603      	mov	r3, r0
 8015976:	73bb      	strb	r3, [r7, #14]
 8015978:	7bbb      	ldrb	r3, [r7, #14]
 801597a:	4618      	mov	r0, r3
 801597c:	3710      	adds	r7, #16
 801597e:	46bd      	mov	sp, r7
 8015980:	bd80      	pop	{r7, pc}

08015982 <USBD_LL_ClearStallEP>:
 8015982:	b580      	push	{r7, lr}
 8015984:	b084      	sub	sp, #16
 8015986:	af00      	add	r7, sp, #0
 8015988:	6078      	str	r0, [r7, #4]
 801598a:	460b      	mov	r3, r1
 801598c:	70fb      	strb	r3, [r7, #3]
 801598e:	2300      	movs	r3, #0
 8015990:	73fb      	strb	r3, [r7, #15]
 8015992:	2300      	movs	r3, #0
 8015994:	73bb      	strb	r3, [r7, #14]
 8015996:	687b      	ldr	r3, [r7, #4]
 8015998:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801599c:	78fa      	ldrb	r2, [r7, #3]
 801599e:	4611      	mov	r1, r2
 80159a0:	4618      	mov	r0, r3
 80159a2:	f7f5 f83b 	bl	800aa1c <HAL_PCD_EP_ClrStall>
 80159a6:	4603      	mov	r3, r0
 80159a8:	73fb      	strb	r3, [r7, #15]
 80159aa:	7bfb      	ldrb	r3, [r7, #15]
 80159ac:	4618      	mov	r0, r3
 80159ae:	f000 f8bf 	bl	8015b30 <USBD_Get_USB_Status>
 80159b2:	4603      	mov	r3, r0
 80159b4:	73bb      	strb	r3, [r7, #14]
 80159b6:	7bbb      	ldrb	r3, [r7, #14]
 80159b8:	4618      	mov	r0, r3
 80159ba:	3710      	adds	r7, #16
 80159bc:	46bd      	mov	sp, r7
 80159be:	bd80      	pop	{r7, pc}

080159c0 <USBD_LL_IsStallEP>:
 80159c0:	b480      	push	{r7}
 80159c2:	b085      	sub	sp, #20
 80159c4:	af00      	add	r7, sp, #0
 80159c6:	6078      	str	r0, [r7, #4]
 80159c8:	460b      	mov	r3, r1
 80159ca:	70fb      	strb	r3, [r7, #3]
 80159cc:	687b      	ldr	r3, [r7, #4]
 80159ce:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 80159d2:	60fb      	str	r3, [r7, #12]
 80159d4:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80159d8:	2b00      	cmp	r3, #0
 80159da:	da0b      	bge.n	80159f4 <USBD_LL_IsStallEP+0x34>
 80159dc:	78fb      	ldrb	r3, [r7, #3]
 80159de:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80159e2:	68f9      	ldr	r1, [r7, #12]
 80159e4:	4613      	mov	r3, r2
 80159e6:	00db      	lsls	r3, r3, #3
 80159e8:	4413      	add	r3, r2
 80159ea:	009b      	lsls	r3, r3, #2
 80159ec:	440b      	add	r3, r1
 80159ee:	3316      	adds	r3, #22
 80159f0:	781b      	ldrb	r3, [r3, #0]
 80159f2:	e00b      	b.n	8015a0c <USBD_LL_IsStallEP+0x4c>
 80159f4:	78fb      	ldrb	r3, [r7, #3]
 80159f6:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80159fa:	68f9      	ldr	r1, [r7, #12]
 80159fc:	4613      	mov	r3, r2
 80159fe:	00db      	lsls	r3, r3, #3
 8015a00:	4413      	add	r3, r2
 8015a02:	009b      	lsls	r3, r3, #2
 8015a04:	440b      	add	r3, r1
 8015a06:	f203 2356 	addw	r3, r3, #598	@ 0x256
 8015a0a:	781b      	ldrb	r3, [r3, #0]
 8015a0c:	4618      	mov	r0, r3
 8015a0e:	3714      	adds	r7, #20
 8015a10:	46bd      	mov	sp, r7
 8015a12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015a16:	4770      	bx	lr

08015a18 <USBD_LL_SetUSBAddress>:
 8015a18:	b580      	push	{r7, lr}
 8015a1a:	b084      	sub	sp, #16
 8015a1c:	af00      	add	r7, sp, #0
 8015a1e:	6078      	str	r0, [r7, #4]
 8015a20:	460b      	mov	r3, r1
 8015a22:	70fb      	strb	r3, [r7, #3]
 8015a24:	2300      	movs	r3, #0
 8015a26:	73fb      	strb	r3, [r7, #15]
 8015a28:	2300      	movs	r3, #0
 8015a2a:	73bb      	strb	r3, [r7, #14]
 8015a2c:	687b      	ldr	r3, [r7, #4]
 8015a2e:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 8015a32:	78fa      	ldrb	r2, [r7, #3]
 8015a34:	4611      	mov	r1, r2
 8015a36:	4618      	mov	r0, r3
 8015a38:	f7f4 fe2a 	bl	800a690 <HAL_PCD_SetAddress>
 8015a3c:	4603      	mov	r3, r0
 8015a3e:	73fb      	strb	r3, [r7, #15]
 8015a40:	7bfb      	ldrb	r3, [r7, #15]
 8015a42:	4618      	mov	r0, r3
 8015a44:	f000 f874 	bl	8015b30 <USBD_Get_USB_Status>
 8015a48:	4603      	mov	r3, r0
 8015a4a:	73bb      	strb	r3, [r7, #14]
 8015a4c:	7bbb      	ldrb	r3, [r7, #14]
 8015a4e:	4618      	mov	r0, r3
 8015a50:	3710      	adds	r7, #16
 8015a52:	46bd      	mov	sp, r7
 8015a54:	bd80      	pop	{r7, pc}

08015a56 <USBD_LL_Transmit>:
 8015a56:	b580      	push	{r7, lr}
 8015a58:	b086      	sub	sp, #24
 8015a5a:	af00      	add	r7, sp, #0
 8015a5c:	60f8      	str	r0, [r7, #12]
 8015a5e:	607a      	str	r2, [r7, #4]
 8015a60:	603b      	str	r3, [r7, #0]
 8015a62:	460b      	mov	r3, r1
 8015a64:	72fb      	strb	r3, [r7, #11]
 8015a66:	2300      	movs	r3, #0
 8015a68:	75fb      	strb	r3, [r7, #23]
 8015a6a:	2300      	movs	r3, #0
 8015a6c:	75bb      	strb	r3, [r7, #22]
 8015a6e:	68fb      	ldr	r3, [r7, #12]
 8015a70:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 8015a74:	7af9      	ldrb	r1, [r7, #11]
 8015a76:	683b      	ldr	r3, [r7, #0]
 8015a78:	687a      	ldr	r2, [r7, #4]
 8015a7a:	f7f4 ff32 	bl	800a8e2 <HAL_PCD_EP_Transmit>
 8015a7e:	4603      	mov	r3, r0
 8015a80:	75fb      	strb	r3, [r7, #23]
 8015a82:	7dfb      	ldrb	r3, [r7, #23]
 8015a84:	4618      	mov	r0, r3
 8015a86:	f000 f853 	bl	8015b30 <USBD_Get_USB_Status>
 8015a8a:	4603      	mov	r3, r0
 8015a8c:	75bb      	strb	r3, [r7, #22]
 8015a8e:	7dbb      	ldrb	r3, [r7, #22]
 8015a90:	4618      	mov	r0, r3
 8015a92:	3718      	adds	r7, #24
 8015a94:	46bd      	mov	sp, r7
 8015a96:	bd80      	pop	{r7, pc}

08015a98 <USBD_LL_PrepareReceive>:
 8015a98:	b580      	push	{r7, lr}
 8015a9a:	b086      	sub	sp, #24
 8015a9c:	af00      	add	r7, sp, #0
 8015a9e:	60f8      	str	r0, [r7, #12]
 8015aa0:	607a      	str	r2, [r7, #4]
 8015aa2:	603b      	str	r3, [r7, #0]
 8015aa4:	460b      	mov	r3, r1
 8015aa6:	72fb      	strb	r3, [r7, #11]
 8015aa8:	2300      	movs	r3, #0
 8015aaa:	75fb      	strb	r3, [r7, #23]
 8015aac:	2300      	movs	r3, #0
 8015aae:	75bb      	strb	r3, [r7, #22]
 8015ab0:	68fb      	ldr	r3, [r7, #12]
 8015ab2:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 8015ab6:	7af9      	ldrb	r1, [r7, #11]
 8015ab8:	683b      	ldr	r3, [r7, #0]
 8015aba:	687a      	ldr	r2, [r7, #4]
 8015abc:	f7f4 febe 	bl	800a83c <HAL_PCD_EP_Receive>
 8015ac0:	4603      	mov	r3, r0
 8015ac2:	75fb      	strb	r3, [r7, #23]
 8015ac4:	7dfb      	ldrb	r3, [r7, #23]
 8015ac6:	4618      	mov	r0, r3
 8015ac8:	f000 f832 	bl	8015b30 <USBD_Get_USB_Status>
 8015acc:	4603      	mov	r3, r0
 8015ace:	75bb      	strb	r3, [r7, #22]
 8015ad0:	7dbb      	ldrb	r3, [r7, #22]
 8015ad2:	4618      	mov	r0, r3
 8015ad4:	3718      	adds	r7, #24
 8015ad6:	46bd      	mov	sp, r7
 8015ad8:	bd80      	pop	{r7, pc}

08015ada <USBD_LL_GetRxDataSize>:
 8015ada:	b580      	push	{r7, lr}
 8015adc:	b082      	sub	sp, #8
 8015ade:	af00      	add	r7, sp, #0
 8015ae0:	6078      	str	r0, [r7, #4]
 8015ae2:	460b      	mov	r3, r1
 8015ae4:	70fb      	strb	r3, [r7, #3]
 8015ae6:	687b      	ldr	r3, [r7, #4]
 8015ae8:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 8015aec:	78fa      	ldrb	r2, [r7, #3]
 8015aee:	4611      	mov	r1, r2
 8015af0:	4618      	mov	r0, r3
 8015af2:	f7f4 fede 	bl	800a8b2 <HAL_PCD_EP_GetRxCount>
 8015af6:	4603      	mov	r3, r0
 8015af8:	4618      	mov	r0, r3
 8015afa:	3708      	adds	r7, #8
 8015afc:	46bd      	mov	sp, r7
 8015afe:	bd80      	pop	{r7, pc}

08015b00 <USBD_static_malloc>:
 8015b00:	b480      	push	{r7}
 8015b02:	b083      	sub	sp, #12
 8015b04:	af00      	add	r7, sp, #0
 8015b06:	6078      	str	r0, [r7, #4]
 8015b08:	4b03      	ldr	r3, [pc, #12]	@ (8015b18 <USBD_static_malloc+0x18>)
 8015b0a:	4618      	mov	r0, r3
 8015b0c:	370c      	adds	r7, #12
 8015b0e:	46bd      	mov	sp, r7
 8015b10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b14:	4770      	bx	lr
 8015b16:	bf00      	nop
 8015b18:	24005f08 	.word	0x24005f08

08015b1c <USBD_static_free>:
 8015b1c:	b480      	push	{r7}
 8015b1e:	b083      	sub	sp, #12
 8015b20:	af00      	add	r7, sp, #0
 8015b22:	6078      	str	r0, [r7, #4]
 8015b24:	bf00      	nop
 8015b26:	370c      	adds	r7, #12
 8015b28:	46bd      	mov	sp, r7
 8015b2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b2e:	4770      	bx	lr

08015b30 <USBD_Get_USB_Status>:
 8015b30:	b480      	push	{r7}
 8015b32:	b085      	sub	sp, #20
 8015b34:	af00      	add	r7, sp, #0
 8015b36:	4603      	mov	r3, r0
 8015b38:	71fb      	strb	r3, [r7, #7]
 8015b3a:	2300      	movs	r3, #0
 8015b3c:	73fb      	strb	r3, [r7, #15]
 8015b3e:	79fb      	ldrb	r3, [r7, #7]
 8015b40:	2b03      	cmp	r3, #3
 8015b42:	d817      	bhi.n	8015b74 <USBD_Get_USB_Status+0x44>
 8015b44:	a201      	add	r2, pc, #4	@ (adr r2, 8015b4c <USBD_Get_USB_Status+0x1c>)
 8015b46:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015b4a:	bf00      	nop
 8015b4c:	08015b5d 	.word	0x08015b5d
 8015b50:	08015b63 	.word	0x08015b63
 8015b54:	08015b69 	.word	0x08015b69
 8015b58:	08015b6f 	.word	0x08015b6f
 8015b5c:	2300      	movs	r3, #0
 8015b5e:	73fb      	strb	r3, [r7, #15]
 8015b60:	e00b      	b.n	8015b7a <USBD_Get_USB_Status+0x4a>
 8015b62:	2303      	movs	r3, #3
 8015b64:	73fb      	strb	r3, [r7, #15]
 8015b66:	e008      	b.n	8015b7a <USBD_Get_USB_Status+0x4a>
 8015b68:	2301      	movs	r3, #1
 8015b6a:	73fb      	strb	r3, [r7, #15]
 8015b6c:	e005      	b.n	8015b7a <USBD_Get_USB_Status+0x4a>
 8015b6e:	2303      	movs	r3, #3
 8015b70:	73fb      	strb	r3, [r7, #15]
 8015b72:	e002      	b.n	8015b7a <USBD_Get_USB_Status+0x4a>
 8015b74:	2303      	movs	r3, #3
 8015b76:	73fb      	strb	r3, [r7, #15]
 8015b78:	bf00      	nop
 8015b7a:	7bfb      	ldrb	r3, [r7, #15]
 8015b7c:	4618      	mov	r0, r3
 8015b7e:	3714      	adds	r7, #20
 8015b80:	46bd      	mov	sp, r7
 8015b82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b86:	4770      	bx	lr

08015b88 <atof>:
 8015b88:	2100      	movs	r1, #0
 8015b8a:	f000 bdb7 	b.w	80166fc <strtod>

08015b8e <atoi>:
 8015b8e:	220a      	movs	r2, #10
 8015b90:	2100      	movs	r1, #0
 8015b92:	f000 be39 	b.w	8016808 <strtol>

08015b96 <sulp>:
 8015b96:	b570      	push	{r4, r5, r6, lr}
 8015b98:	4604      	mov	r4, r0
 8015b9a:	460d      	mov	r5, r1
 8015b9c:	4616      	mov	r6, r2
 8015b9e:	ec45 4b10 	vmov	d0, r4, r5
 8015ba2:	f003 f9eb 	bl	8018f7c <__ulp>
 8015ba6:	b17e      	cbz	r6, 8015bc8 <sulp+0x32>
 8015ba8:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8015bac:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8015bb0:	2b00      	cmp	r3, #0
 8015bb2:	dd09      	ble.n	8015bc8 <sulp+0x32>
 8015bb4:	051b      	lsls	r3, r3, #20
 8015bb6:	f103 517f 	add.w	r1, r3, #1069547520	@ 0x3fc00000
 8015bba:	2000      	movs	r0, #0
 8015bbc:	f501 1140 	add.w	r1, r1, #3145728	@ 0x300000
 8015bc0:	ec41 0b17 	vmov	d7, r0, r1
 8015bc4:	ee20 0b07 	vmul.f64	d0, d0, d7
 8015bc8:	bd70      	pop	{r4, r5, r6, pc}
 8015bca:	0000      	movs	r0, r0
 8015bcc:	0000      	movs	r0, r0
	...

08015bd0 <_strtod_l>:
 8015bd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015bd4:	ed2d 8b0a 	vpush	{d8-d12}
 8015bd8:	b097      	sub	sp, #92	@ 0x5c
 8015bda:	4688      	mov	r8, r1
 8015bdc:	920e      	str	r2, [sp, #56]	@ 0x38
 8015bde:	2200      	movs	r2, #0
 8015be0:	9212      	str	r2, [sp, #72]	@ 0x48
 8015be2:	9005      	str	r0, [sp, #20]
 8015be4:	f04f 0a00 	mov.w	sl, #0
 8015be8:	f04f 0b00 	mov.w	fp, #0
 8015bec:	460a      	mov	r2, r1
 8015bee:	9211      	str	r2, [sp, #68]	@ 0x44
 8015bf0:	7811      	ldrb	r1, [r2, #0]
 8015bf2:	292b      	cmp	r1, #43	@ 0x2b
 8015bf4:	d04c      	beq.n	8015c90 <_strtod_l+0xc0>
 8015bf6:	d839      	bhi.n	8015c6c <_strtod_l+0x9c>
 8015bf8:	290d      	cmp	r1, #13
 8015bfa:	d833      	bhi.n	8015c64 <_strtod_l+0x94>
 8015bfc:	2908      	cmp	r1, #8
 8015bfe:	d833      	bhi.n	8015c68 <_strtod_l+0x98>
 8015c00:	2900      	cmp	r1, #0
 8015c02:	d03c      	beq.n	8015c7e <_strtod_l+0xae>
 8015c04:	2200      	movs	r2, #0
 8015c06:	9208      	str	r2, [sp, #32]
 8015c08:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8015c0a:	782a      	ldrb	r2, [r5, #0]
 8015c0c:	2a30      	cmp	r2, #48	@ 0x30
 8015c0e:	f040 80b5 	bne.w	8015d7c <_strtod_l+0x1ac>
 8015c12:	786a      	ldrb	r2, [r5, #1]
 8015c14:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8015c18:	2a58      	cmp	r2, #88	@ 0x58
 8015c1a:	d170      	bne.n	8015cfe <_strtod_l+0x12e>
 8015c1c:	9302      	str	r3, [sp, #8]
 8015c1e:	9b08      	ldr	r3, [sp, #32]
 8015c20:	9301      	str	r3, [sp, #4]
 8015c22:	ab12      	add	r3, sp, #72	@ 0x48
 8015c24:	9300      	str	r3, [sp, #0]
 8015c26:	4a8b      	ldr	r2, [pc, #556]	@ (8015e54 <_strtod_l+0x284>)
 8015c28:	9805      	ldr	r0, [sp, #20]
 8015c2a:	ab13      	add	r3, sp, #76	@ 0x4c
 8015c2c:	a911      	add	r1, sp, #68	@ 0x44
 8015c2e:	f002 fa97 	bl	8018160 <__gethex>
 8015c32:	f010 060f 	ands.w	r6, r0, #15
 8015c36:	4604      	mov	r4, r0
 8015c38:	d005      	beq.n	8015c46 <_strtod_l+0x76>
 8015c3a:	2e06      	cmp	r6, #6
 8015c3c:	d12a      	bne.n	8015c94 <_strtod_l+0xc4>
 8015c3e:	3501      	adds	r5, #1
 8015c40:	2300      	movs	r3, #0
 8015c42:	9511      	str	r5, [sp, #68]	@ 0x44
 8015c44:	9308      	str	r3, [sp, #32]
 8015c46:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015c48:	2b00      	cmp	r3, #0
 8015c4a:	f040 852f 	bne.w	80166ac <_strtod_l+0xadc>
 8015c4e:	9b08      	ldr	r3, [sp, #32]
 8015c50:	ec4b ab10 	vmov	d0, sl, fp
 8015c54:	b1cb      	cbz	r3, 8015c8a <_strtod_l+0xba>
 8015c56:	eeb1 0b40 	vneg.f64	d0, d0
 8015c5a:	b017      	add	sp, #92	@ 0x5c
 8015c5c:	ecbd 8b0a 	vpop	{d8-d12}
 8015c60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c64:	2920      	cmp	r1, #32
 8015c66:	d1cd      	bne.n	8015c04 <_strtod_l+0x34>
 8015c68:	3201      	adds	r2, #1
 8015c6a:	e7c0      	b.n	8015bee <_strtod_l+0x1e>
 8015c6c:	292d      	cmp	r1, #45	@ 0x2d
 8015c6e:	d1c9      	bne.n	8015c04 <_strtod_l+0x34>
 8015c70:	2101      	movs	r1, #1
 8015c72:	9108      	str	r1, [sp, #32]
 8015c74:	1c51      	adds	r1, r2, #1
 8015c76:	9111      	str	r1, [sp, #68]	@ 0x44
 8015c78:	7852      	ldrb	r2, [r2, #1]
 8015c7a:	2a00      	cmp	r2, #0
 8015c7c:	d1c4      	bne.n	8015c08 <_strtod_l+0x38>
 8015c7e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015c80:	f8cd 8044 	str.w	r8, [sp, #68]	@ 0x44
 8015c84:	2b00      	cmp	r3, #0
 8015c86:	f040 850f 	bne.w	80166a8 <_strtod_l+0xad8>
 8015c8a:	ec4b ab10 	vmov	d0, sl, fp
 8015c8e:	e7e4      	b.n	8015c5a <_strtod_l+0x8a>
 8015c90:	2100      	movs	r1, #0
 8015c92:	e7ee      	b.n	8015c72 <_strtod_l+0xa2>
 8015c94:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015c96:	b13a      	cbz	r2, 8015ca8 <_strtod_l+0xd8>
 8015c98:	2135      	movs	r1, #53	@ 0x35
 8015c9a:	a814      	add	r0, sp, #80	@ 0x50
 8015c9c:	f003 fa65 	bl	801916a <__copybits>
 8015ca0:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8015ca2:	9805      	ldr	r0, [sp, #20]
 8015ca4:	f002 fe36 	bl	8018914 <_Bfree>
 8015ca8:	1e73      	subs	r3, r6, #1
 8015caa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015cac:	2b04      	cmp	r3, #4
 8015cae:	d806      	bhi.n	8015cbe <_strtod_l+0xee>
 8015cb0:	e8df f003 	tbb	[pc, r3]
 8015cb4:	201d0314 	.word	0x201d0314
 8015cb8:	14          	.byte	0x14
 8015cb9:	00          	.byte	0x00
 8015cba:	e9dd ab14 	ldrd	sl, fp, [sp, #80]	@ 0x50
 8015cbe:	05e3      	lsls	r3, r4, #23
 8015cc0:	bf48      	it	mi
 8015cc2:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8015cc6:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8015cca:	0d1b      	lsrs	r3, r3, #20
 8015ccc:	051b      	lsls	r3, r3, #20
 8015cce:	2b00      	cmp	r3, #0
 8015cd0:	d1b9      	bne.n	8015c46 <_strtod_l+0x76>
 8015cd2:	f001 fb6f 	bl	80173b4 <__errno>
 8015cd6:	2322      	movs	r3, #34	@ 0x22
 8015cd8:	6003      	str	r3, [r0, #0]
 8015cda:	e7b4      	b.n	8015c46 <_strtod_l+0x76>
 8015cdc:	e9dd a314 	ldrd	sl, r3, [sp, #80]	@ 0x50
 8015ce0:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8015ce4:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8015ce8:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8015cec:	e7e7      	b.n	8015cbe <_strtod_l+0xee>
 8015cee:	f8df b16c 	ldr.w	fp, [pc, #364]	@ 8015e5c <_strtod_l+0x28c>
 8015cf2:	e7e4      	b.n	8015cbe <_strtod_l+0xee>
 8015cf4:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8015cf8:	f04f 3aff 	mov.w	sl, #4294967295
 8015cfc:	e7df      	b.n	8015cbe <_strtod_l+0xee>
 8015cfe:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015d00:	1c5a      	adds	r2, r3, #1
 8015d02:	9211      	str	r2, [sp, #68]	@ 0x44
 8015d04:	785b      	ldrb	r3, [r3, #1]
 8015d06:	2b30      	cmp	r3, #48	@ 0x30
 8015d08:	d0f9      	beq.n	8015cfe <_strtod_l+0x12e>
 8015d0a:	2b00      	cmp	r3, #0
 8015d0c:	d09b      	beq.n	8015c46 <_strtod_l+0x76>
 8015d0e:	2301      	movs	r3, #1
 8015d10:	2600      	movs	r6, #0
 8015d12:	9307      	str	r3, [sp, #28]
 8015d14:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015d16:	930a      	str	r3, [sp, #40]	@ 0x28
 8015d18:	46b1      	mov	r9, r6
 8015d1a:	4635      	mov	r5, r6
 8015d1c:	220a      	movs	r2, #10
 8015d1e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015d20:	7804      	ldrb	r4, [r0, #0]
 8015d22:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8015d26:	b2d9      	uxtb	r1, r3
 8015d28:	2909      	cmp	r1, #9
 8015d2a:	d929      	bls.n	8015d80 <_strtod_l+0x1b0>
 8015d2c:	494a      	ldr	r1, [pc, #296]	@ (8015e58 <_strtod_l+0x288>)
 8015d2e:	2201      	movs	r2, #1
 8015d30:	f001 fae4 	bl	80172fc <strncmp>
 8015d34:	b378      	cbz	r0, 8015d96 <_strtod_l+0x1c6>
 8015d36:	2000      	movs	r0, #0
 8015d38:	4622      	mov	r2, r4
 8015d3a:	462b      	mov	r3, r5
 8015d3c:	4607      	mov	r7, r0
 8015d3e:	9006      	str	r0, [sp, #24]
 8015d40:	2a65      	cmp	r2, #101	@ 0x65
 8015d42:	d001      	beq.n	8015d48 <_strtod_l+0x178>
 8015d44:	2a45      	cmp	r2, #69	@ 0x45
 8015d46:	d117      	bne.n	8015d78 <_strtod_l+0x1a8>
 8015d48:	b91b      	cbnz	r3, 8015d52 <_strtod_l+0x182>
 8015d4a:	9b07      	ldr	r3, [sp, #28]
 8015d4c:	4303      	orrs	r3, r0
 8015d4e:	d096      	beq.n	8015c7e <_strtod_l+0xae>
 8015d50:	2300      	movs	r3, #0
 8015d52:	f8dd 8044 	ldr.w	r8, [sp, #68]	@ 0x44
 8015d56:	f108 0201 	add.w	r2, r8, #1
 8015d5a:	9211      	str	r2, [sp, #68]	@ 0x44
 8015d5c:	f898 2001 	ldrb.w	r2, [r8, #1]
 8015d60:	2a2b      	cmp	r2, #43	@ 0x2b
 8015d62:	d06b      	beq.n	8015e3c <_strtod_l+0x26c>
 8015d64:	2a2d      	cmp	r2, #45	@ 0x2d
 8015d66:	d071      	beq.n	8015e4c <_strtod_l+0x27c>
 8015d68:	f04f 0e00 	mov.w	lr, #0
 8015d6c:	f1a2 0430 	sub.w	r4, r2, #48	@ 0x30
 8015d70:	2c09      	cmp	r4, #9
 8015d72:	d979      	bls.n	8015e68 <_strtod_l+0x298>
 8015d74:	f8cd 8044 	str.w	r8, [sp, #68]	@ 0x44
 8015d78:	2400      	movs	r4, #0
 8015d7a:	e094      	b.n	8015ea6 <_strtod_l+0x2d6>
 8015d7c:	2300      	movs	r3, #0
 8015d7e:	e7c7      	b.n	8015d10 <_strtod_l+0x140>
 8015d80:	2d08      	cmp	r5, #8
 8015d82:	f100 0001 	add.w	r0, r0, #1
 8015d86:	bfd4      	ite	le
 8015d88:	fb02 3909 	mlale	r9, r2, r9, r3
 8015d8c:	fb02 3606 	mlagt	r6, r2, r6, r3
 8015d90:	3501      	adds	r5, #1
 8015d92:	9011      	str	r0, [sp, #68]	@ 0x44
 8015d94:	e7c3      	b.n	8015d1e <_strtod_l+0x14e>
 8015d96:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015d98:	1c5a      	adds	r2, r3, #1
 8015d9a:	9211      	str	r2, [sp, #68]	@ 0x44
 8015d9c:	785a      	ldrb	r2, [r3, #1]
 8015d9e:	b375      	cbz	r5, 8015dfe <_strtod_l+0x22e>
 8015da0:	4607      	mov	r7, r0
 8015da2:	462b      	mov	r3, r5
 8015da4:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 8015da8:	2909      	cmp	r1, #9
 8015daa:	d913      	bls.n	8015dd4 <_strtod_l+0x204>
 8015dac:	2101      	movs	r1, #1
 8015dae:	9106      	str	r1, [sp, #24]
 8015db0:	e7c6      	b.n	8015d40 <_strtod_l+0x170>
 8015db2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015db4:	1c5a      	adds	r2, r3, #1
 8015db6:	9211      	str	r2, [sp, #68]	@ 0x44
 8015db8:	785a      	ldrb	r2, [r3, #1]
 8015dba:	3001      	adds	r0, #1
 8015dbc:	2a30      	cmp	r2, #48	@ 0x30
 8015dbe:	d0f8      	beq.n	8015db2 <_strtod_l+0x1e2>
 8015dc0:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8015dc4:	2b08      	cmp	r3, #8
 8015dc6:	f200 8476 	bhi.w	80166b6 <_strtod_l+0xae6>
 8015dca:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015dcc:	930a      	str	r3, [sp, #40]	@ 0x28
 8015dce:	4607      	mov	r7, r0
 8015dd0:	2000      	movs	r0, #0
 8015dd2:	4603      	mov	r3, r0
 8015dd4:	3a30      	subs	r2, #48	@ 0x30
 8015dd6:	f100 0101 	add.w	r1, r0, #1
 8015dda:	d023      	beq.n	8015e24 <_strtod_l+0x254>
 8015ddc:	440f      	add	r7, r1
 8015dde:	eb00 0c03 	add.w	ip, r0, r3
 8015de2:	4619      	mov	r1, r3
 8015de4:	240a      	movs	r4, #10
 8015de6:	4561      	cmp	r1, ip
 8015de8:	d10b      	bne.n	8015e02 <_strtod_l+0x232>
 8015dea:	1c5c      	adds	r4, r3, #1
 8015dec:	4403      	add	r3, r0
 8015dee:	2b08      	cmp	r3, #8
 8015df0:	4404      	add	r4, r0
 8015df2:	dc11      	bgt.n	8015e18 <_strtod_l+0x248>
 8015df4:	230a      	movs	r3, #10
 8015df6:	fb03 2909 	mla	r9, r3, r9, r2
 8015dfa:	2100      	movs	r1, #0
 8015dfc:	e013      	b.n	8015e26 <_strtod_l+0x256>
 8015dfe:	4628      	mov	r0, r5
 8015e00:	e7dc      	b.n	8015dbc <_strtod_l+0x1ec>
 8015e02:	2908      	cmp	r1, #8
 8015e04:	f101 0101 	add.w	r1, r1, #1
 8015e08:	dc02      	bgt.n	8015e10 <_strtod_l+0x240>
 8015e0a:	fb04 f909 	mul.w	r9, r4, r9
 8015e0e:	e7ea      	b.n	8015de6 <_strtod_l+0x216>
 8015e10:	2910      	cmp	r1, #16
 8015e12:	bfd8      	it	le
 8015e14:	4366      	mulle	r6, r4
 8015e16:	e7e6      	b.n	8015de6 <_strtod_l+0x216>
 8015e18:	2b0f      	cmp	r3, #15
 8015e1a:	dcee      	bgt.n	8015dfa <_strtod_l+0x22a>
 8015e1c:	230a      	movs	r3, #10
 8015e1e:	fb03 2606 	mla	r6, r3, r6, r2
 8015e22:	e7ea      	b.n	8015dfa <_strtod_l+0x22a>
 8015e24:	461c      	mov	r4, r3
 8015e26:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015e28:	1c5a      	adds	r2, r3, #1
 8015e2a:	9211      	str	r2, [sp, #68]	@ 0x44
 8015e2c:	785a      	ldrb	r2, [r3, #1]
 8015e2e:	4608      	mov	r0, r1
 8015e30:	4623      	mov	r3, r4
 8015e32:	e7b7      	b.n	8015da4 <_strtod_l+0x1d4>
 8015e34:	2301      	movs	r3, #1
 8015e36:	2700      	movs	r7, #0
 8015e38:	9306      	str	r3, [sp, #24]
 8015e3a:	e786      	b.n	8015d4a <_strtod_l+0x17a>
 8015e3c:	f04f 0e00 	mov.w	lr, #0
 8015e40:	f108 0202 	add.w	r2, r8, #2
 8015e44:	9211      	str	r2, [sp, #68]	@ 0x44
 8015e46:	f898 2002 	ldrb.w	r2, [r8, #2]
 8015e4a:	e78f      	b.n	8015d6c <_strtod_l+0x19c>
 8015e4c:	f04f 0e01 	mov.w	lr, #1
 8015e50:	e7f6      	b.n	8015e40 <_strtod_l+0x270>
 8015e52:	bf00      	nop
 8015e54:	0801b09c 	.word	0x0801b09c
 8015e58:	0801b084 	.word	0x0801b084
 8015e5c:	7ff00000 	.word	0x7ff00000
 8015e60:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015e62:	1c54      	adds	r4, r2, #1
 8015e64:	9411      	str	r4, [sp, #68]	@ 0x44
 8015e66:	7852      	ldrb	r2, [r2, #1]
 8015e68:	2a30      	cmp	r2, #48	@ 0x30
 8015e6a:	d0f9      	beq.n	8015e60 <_strtod_l+0x290>
 8015e6c:	f1a2 0431 	sub.w	r4, r2, #49	@ 0x31
 8015e70:	2c08      	cmp	r4, #8
 8015e72:	d881      	bhi.n	8015d78 <_strtod_l+0x1a8>
 8015e74:	f1a2 0c30 	sub.w	ip, r2, #48	@ 0x30
 8015e78:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015e7a:	9209      	str	r2, [sp, #36]	@ 0x24
 8015e7c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015e7e:	1c51      	adds	r1, r2, #1
 8015e80:	9111      	str	r1, [sp, #68]	@ 0x44
 8015e82:	7852      	ldrb	r2, [r2, #1]
 8015e84:	f1a2 0430 	sub.w	r4, r2, #48	@ 0x30
 8015e88:	2c09      	cmp	r4, #9
 8015e8a:	d938      	bls.n	8015efe <_strtod_l+0x32e>
 8015e8c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8015e8e:	1b0c      	subs	r4, r1, r4
 8015e90:	2c08      	cmp	r4, #8
 8015e92:	f644 641f 	movw	r4, #19999	@ 0x4e1f
 8015e96:	dc02      	bgt.n	8015e9e <_strtod_l+0x2ce>
 8015e98:	4564      	cmp	r4, ip
 8015e9a:	bfa8      	it	ge
 8015e9c:	4664      	movge	r4, ip
 8015e9e:	f1be 0f00 	cmp.w	lr, #0
 8015ea2:	d000      	beq.n	8015ea6 <_strtod_l+0x2d6>
 8015ea4:	4264      	negs	r4, r4
 8015ea6:	2b00      	cmp	r3, #0
 8015ea8:	d14e      	bne.n	8015f48 <_strtod_l+0x378>
 8015eaa:	9b07      	ldr	r3, [sp, #28]
 8015eac:	4318      	orrs	r0, r3
 8015eae:	f47f aeca 	bne.w	8015c46 <_strtod_l+0x76>
 8015eb2:	9b06      	ldr	r3, [sp, #24]
 8015eb4:	2b00      	cmp	r3, #0
 8015eb6:	f47f aee2 	bne.w	8015c7e <_strtod_l+0xae>
 8015eba:	2a69      	cmp	r2, #105	@ 0x69
 8015ebc:	d027      	beq.n	8015f0e <_strtod_l+0x33e>
 8015ebe:	dc24      	bgt.n	8015f0a <_strtod_l+0x33a>
 8015ec0:	2a49      	cmp	r2, #73	@ 0x49
 8015ec2:	d024      	beq.n	8015f0e <_strtod_l+0x33e>
 8015ec4:	2a4e      	cmp	r2, #78	@ 0x4e
 8015ec6:	f47f aeda 	bne.w	8015c7e <_strtod_l+0xae>
 8015eca:	4997      	ldr	r1, [pc, #604]	@ (8016128 <_strtod_l+0x558>)
 8015ecc:	a811      	add	r0, sp, #68	@ 0x44
 8015ece:	f002 fb69 	bl	80185a4 <__match>
 8015ed2:	2800      	cmp	r0, #0
 8015ed4:	f43f aed3 	beq.w	8015c7e <_strtod_l+0xae>
 8015ed8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015eda:	781b      	ldrb	r3, [r3, #0]
 8015edc:	2b28      	cmp	r3, #40	@ 0x28
 8015ede:	d12d      	bne.n	8015f3c <_strtod_l+0x36c>
 8015ee0:	4992      	ldr	r1, [pc, #584]	@ (801612c <_strtod_l+0x55c>)
 8015ee2:	aa14      	add	r2, sp, #80	@ 0x50
 8015ee4:	a811      	add	r0, sp, #68	@ 0x44
 8015ee6:	f002 fb71 	bl	80185cc <__hexnan>
 8015eea:	2805      	cmp	r0, #5
 8015eec:	d126      	bne.n	8015f3c <_strtod_l+0x36c>
 8015eee:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8015ef0:	f8dd a050 	ldr.w	sl, [sp, #80]	@ 0x50
 8015ef4:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8015ef8:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 8015efc:	e6a3      	b.n	8015c46 <_strtod_l+0x76>
 8015efe:	240a      	movs	r4, #10
 8015f00:	fb04 2c0c 	mla	ip, r4, ip, r2
 8015f04:	f1ac 0c30 	sub.w	ip, ip, #48	@ 0x30
 8015f08:	e7b8      	b.n	8015e7c <_strtod_l+0x2ac>
 8015f0a:	2a6e      	cmp	r2, #110	@ 0x6e
 8015f0c:	e7db      	b.n	8015ec6 <_strtod_l+0x2f6>
 8015f0e:	4988      	ldr	r1, [pc, #544]	@ (8016130 <_strtod_l+0x560>)
 8015f10:	a811      	add	r0, sp, #68	@ 0x44
 8015f12:	f002 fb47 	bl	80185a4 <__match>
 8015f16:	2800      	cmp	r0, #0
 8015f18:	f43f aeb1 	beq.w	8015c7e <_strtod_l+0xae>
 8015f1c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015f1e:	4985      	ldr	r1, [pc, #532]	@ (8016134 <_strtod_l+0x564>)
 8015f20:	3b01      	subs	r3, #1
 8015f22:	a811      	add	r0, sp, #68	@ 0x44
 8015f24:	9311      	str	r3, [sp, #68]	@ 0x44
 8015f26:	f002 fb3d 	bl	80185a4 <__match>
 8015f2a:	b910      	cbnz	r0, 8015f32 <_strtod_l+0x362>
 8015f2c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015f2e:	3301      	adds	r3, #1
 8015f30:	9311      	str	r3, [sp, #68]	@ 0x44
 8015f32:	f8df b214 	ldr.w	fp, [pc, #532]	@ 8016148 <_strtod_l+0x578>
 8015f36:	f04f 0a00 	mov.w	sl, #0
 8015f3a:	e684      	b.n	8015c46 <_strtod_l+0x76>
 8015f3c:	487e      	ldr	r0, [pc, #504]	@ (8016138 <_strtod_l+0x568>)
 8015f3e:	f001 fa77 	bl	8017430 <nan>
 8015f42:	ec5b ab10 	vmov	sl, fp, d0
 8015f46:	e67e      	b.n	8015c46 <_strtod_l+0x76>
 8015f48:	ee07 9a90 	vmov	s15, r9
 8015f4c:	1be2      	subs	r2, r4, r7
 8015f4e:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8015f52:	2d00      	cmp	r5, #0
 8015f54:	bf08      	it	eq
 8015f56:	461d      	moveq	r5, r3
 8015f58:	2b10      	cmp	r3, #16
 8015f5a:	9209      	str	r2, [sp, #36]	@ 0x24
 8015f5c:	461a      	mov	r2, r3
 8015f5e:	bfa8      	it	ge
 8015f60:	2210      	movge	r2, #16
 8015f62:	2b09      	cmp	r3, #9
 8015f64:	ec5b ab17 	vmov	sl, fp, d7
 8015f68:	dc15      	bgt.n	8015f96 <_strtod_l+0x3c6>
 8015f6a:	1be1      	subs	r1, r4, r7
 8015f6c:	2900      	cmp	r1, #0
 8015f6e:	f43f ae6a 	beq.w	8015c46 <_strtod_l+0x76>
 8015f72:	eba4 0107 	sub.w	r1, r4, r7
 8015f76:	dd72      	ble.n	801605e <_strtod_l+0x48e>
 8015f78:	2916      	cmp	r1, #22
 8015f7a:	dc59      	bgt.n	8016030 <_strtod_l+0x460>
 8015f7c:	4b6f      	ldr	r3, [pc, #444]	@ (801613c <_strtod_l+0x56c>)
 8015f7e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8015f80:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8015f84:	ed93 7b00 	vldr	d7, [r3]
 8015f88:	ec4b ab16 	vmov	d6, sl, fp
 8015f8c:	ee27 7b06 	vmul.f64	d7, d7, d6
 8015f90:	ec5b ab17 	vmov	sl, fp, d7
 8015f94:	e657      	b.n	8015c46 <_strtod_l+0x76>
 8015f96:	4969      	ldr	r1, [pc, #420]	@ (801613c <_strtod_l+0x56c>)
 8015f98:	eb01 01c2 	add.w	r1, r1, r2, lsl #3
 8015f9c:	ed11 5b12 	vldr	d5, [r1, #-72]	@ 0xffffffb8
 8015fa0:	ee06 6a90 	vmov	s13, r6
 8015fa4:	2b0f      	cmp	r3, #15
 8015fa6:	eeb8 6b66 	vcvt.f64.u32	d6, s13
 8015faa:	eea7 6b05 	vfma.f64	d6, d7, d5
 8015fae:	ec5b ab16 	vmov	sl, fp, d6
 8015fb2:	ddda      	ble.n	8015f6a <_strtod_l+0x39a>
 8015fb4:	1a9a      	subs	r2, r3, r2
 8015fb6:	1be1      	subs	r1, r4, r7
 8015fb8:	440a      	add	r2, r1
 8015fba:	2a00      	cmp	r2, #0
 8015fbc:	f340 8094 	ble.w	80160e8 <_strtod_l+0x518>
 8015fc0:	f012 000f 	ands.w	r0, r2, #15
 8015fc4:	d00a      	beq.n	8015fdc <_strtod_l+0x40c>
 8015fc6:	495d      	ldr	r1, [pc, #372]	@ (801613c <_strtod_l+0x56c>)
 8015fc8:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
 8015fcc:	ed91 7b00 	vldr	d7, [r1]
 8015fd0:	ec4b ab16 	vmov	d6, sl, fp
 8015fd4:	ee27 7b06 	vmul.f64	d7, d7, d6
 8015fd8:	ec5b ab17 	vmov	sl, fp, d7
 8015fdc:	f032 020f 	bics.w	r2, r2, #15
 8015fe0:	d073      	beq.n	80160ca <_strtod_l+0x4fa>
 8015fe2:	f5b2 7f9a 	cmp.w	r2, #308	@ 0x134
 8015fe6:	dd47      	ble.n	8016078 <_strtod_l+0x4a8>
 8015fe8:	2400      	movs	r4, #0
 8015fea:	4625      	mov	r5, r4
 8015fec:	9407      	str	r4, [sp, #28]
 8015fee:	4626      	mov	r6, r4
 8015ff0:	9a05      	ldr	r2, [sp, #20]
 8015ff2:	f8df b154 	ldr.w	fp, [pc, #340]	@ 8016148 <_strtod_l+0x578>
 8015ff6:	2322      	movs	r3, #34	@ 0x22
 8015ff8:	6013      	str	r3, [r2, #0]
 8015ffa:	f04f 0a00 	mov.w	sl, #0
 8015ffe:	9b07      	ldr	r3, [sp, #28]
 8016000:	2b00      	cmp	r3, #0
 8016002:	f43f ae20 	beq.w	8015c46 <_strtod_l+0x76>
 8016006:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8016008:	9805      	ldr	r0, [sp, #20]
 801600a:	f002 fc83 	bl	8018914 <_Bfree>
 801600e:	9805      	ldr	r0, [sp, #20]
 8016010:	4631      	mov	r1, r6
 8016012:	f002 fc7f 	bl	8018914 <_Bfree>
 8016016:	9805      	ldr	r0, [sp, #20]
 8016018:	4629      	mov	r1, r5
 801601a:	f002 fc7b 	bl	8018914 <_Bfree>
 801601e:	9907      	ldr	r1, [sp, #28]
 8016020:	9805      	ldr	r0, [sp, #20]
 8016022:	f002 fc77 	bl	8018914 <_Bfree>
 8016026:	9805      	ldr	r0, [sp, #20]
 8016028:	4621      	mov	r1, r4
 801602a:	f002 fc73 	bl	8018914 <_Bfree>
 801602e:	e60a      	b.n	8015c46 <_strtod_l+0x76>
 8016030:	f1c3 0125 	rsb	r1, r3, #37	@ 0x25
 8016034:	1be0      	subs	r0, r4, r7
 8016036:	4281      	cmp	r1, r0
 8016038:	dbbc      	blt.n	8015fb4 <_strtod_l+0x3e4>
 801603a:	4a40      	ldr	r2, [pc, #256]	@ (801613c <_strtod_l+0x56c>)
 801603c:	f1c3 030f 	rsb	r3, r3, #15
 8016040:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8016044:	ed91 7b00 	vldr	d7, [r1]
 8016048:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801604a:	ec4b ab16 	vmov	d6, sl, fp
 801604e:	1acb      	subs	r3, r1, r3
 8016050:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8016054:	ee27 7b06 	vmul.f64	d7, d7, d6
 8016058:	ed92 6b00 	vldr	d6, [r2]
 801605c:	e796      	b.n	8015f8c <_strtod_l+0x3bc>
 801605e:	3116      	adds	r1, #22
 8016060:	dba8      	blt.n	8015fb4 <_strtod_l+0x3e4>
 8016062:	4b36      	ldr	r3, [pc, #216]	@ (801613c <_strtod_l+0x56c>)
 8016064:	1b3c      	subs	r4, r7, r4
 8016066:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 801606a:	ed94 7b00 	vldr	d7, [r4]
 801606e:	ec4b ab16 	vmov	d6, sl, fp
 8016072:	ee86 7b07 	vdiv.f64	d7, d6, d7
 8016076:	e78b      	b.n	8015f90 <_strtod_l+0x3c0>
 8016078:	2000      	movs	r0, #0
 801607a:	ec4b ab17 	vmov	d7, sl, fp
 801607e:	4e30      	ldr	r6, [pc, #192]	@ (8016140 <_strtod_l+0x570>)
 8016080:	1112      	asrs	r2, r2, #4
 8016082:	4601      	mov	r1, r0
 8016084:	2a01      	cmp	r2, #1
 8016086:	dc23      	bgt.n	80160d0 <_strtod_l+0x500>
 8016088:	b108      	cbz	r0, 801608e <_strtod_l+0x4be>
 801608a:	ec5b ab17 	vmov	sl, fp, d7
 801608e:	4a2c      	ldr	r2, [pc, #176]	@ (8016140 <_strtod_l+0x570>)
 8016090:	482c      	ldr	r0, [pc, #176]	@ (8016144 <_strtod_l+0x574>)
 8016092:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 8016096:	ed92 7b00 	vldr	d7, [r2]
 801609a:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 801609e:	ec4b ab16 	vmov	d6, sl, fp
 80160a2:	4a29      	ldr	r2, [pc, #164]	@ (8016148 <_strtod_l+0x578>)
 80160a4:	ee27 7b06 	vmul.f64	d7, d7, d6
 80160a8:	ee17 1a90 	vmov	r1, s15
 80160ac:	400a      	ands	r2, r1
 80160ae:	4282      	cmp	r2, r0
 80160b0:	ec5b ab17 	vmov	sl, fp, d7
 80160b4:	d898      	bhi.n	8015fe8 <_strtod_l+0x418>
 80160b6:	f5a0 1080 	sub.w	r0, r0, #1048576	@ 0x100000
 80160ba:	4282      	cmp	r2, r0
 80160bc:	bf86      	itte	hi
 80160be:	f8df b08c 	ldrhi.w	fp, [pc, #140]	@ 801614c <_strtod_l+0x57c>
 80160c2:	f04f 3aff 	movhi.w	sl, #4294967295
 80160c6:	f101 7b54 	addls.w	fp, r1, #55574528	@ 0x3500000
 80160ca:	2200      	movs	r2, #0
 80160cc:	9206      	str	r2, [sp, #24]
 80160ce:	e076      	b.n	80161be <_strtod_l+0x5ee>
 80160d0:	f012 0f01 	tst.w	r2, #1
 80160d4:	d004      	beq.n	80160e0 <_strtod_l+0x510>
 80160d6:	ed96 6b00 	vldr	d6, [r6]
 80160da:	2001      	movs	r0, #1
 80160dc:	ee27 7b06 	vmul.f64	d7, d7, d6
 80160e0:	3101      	adds	r1, #1
 80160e2:	1052      	asrs	r2, r2, #1
 80160e4:	3608      	adds	r6, #8
 80160e6:	e7cd      	b.n	8016084 <_strtod_l+0x4b4>
 80160e8:	d0ef      	beq.n	80160ca <_strtod_l+0x4fa>
 80160ea:	4252      	negs	r2, r2
 80160ec:	f012 000f 	ands.w	r0, r2, #15
 80160f0:	d00a      	beq.n	8016108 <_strtod_l+0x538>
 80160f2:	4912      	ldr	r1, [pc, #72]	@ (801613c <_strtod_l+0x56c>)
 80160f4:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
 80160f8:	ed91 7b00 	vldr	d7, [r1]
 80160fc:	ec4b ab16 	vmov	d6, sl, fp
 8016100:	ee86 7b07 	vdiv.f64	d7, d6, d7
 8016104:	ec5b ab17 	vmov	sl, fp, d7
 8016108:	1112      	asrs	r2, r2, #4
 801610a:	d0de      	beq.n	80160ca <_strtod_l+0x4fa>
 801610c:	2a1f      	cmp	r2, #31
 801610e:	dd1f      	ble.n	8016150 <_strtod_l+0x580>
 8016110:	2400      	movs	r4, #0
 8016112:	4625      	mov	r5, r4
 8016114:	9407      	str	r4, [sp, #28]
 8016116:	4626      	mov	r6, r4
 8016118:	9a05      	ldr	r2, [sp, #20]
 801611a:	2322      	movs	r3, #34	@ 0x22
 801611c:	f04f 0a00 	mov.w	sl, #0
 8016120:	f04f 0b00 	mov.w	fp, #0
 8016124:	6013      	str	r3, [r2, #0]
 8016126:	e76a      	b.n	8015ffe <_strtod_l+0x42e>
 8016128:	0801b1e6 	.word	0x0801b1e6
 801612c:	0801b088 	.word	0x0801b088
 8016130:	0801b1de 	.word	0x0801b1de
 8016134:	0801b218 	.word	0x0801b218
 8016138:	0801b4a4 	.word	0x0801b4a4
 801613c:	0801b390 	.word	0x0801b390
 8016140:	0801b368 	.word	0x0801b368
 8016144:	7ca00000 	.word	0x7ca00000
 8016148:	7ff00000 	.word	0x7ff00000
 801614c:	7fefffff 	.word	0x7fefffff
 8016150:	f012 0110 	ands.w	r1, r2, #16
 8016154:	bf18      	it	ne
 8016156:	216a      	movne	r1, #106	@ 0x6a
 8016158:	9106      	str	r1, [sp, #24]
 801615a:	ec4b ab17 	vmov	d7, sl, fp
 801615e:	49b0      	ldr	r1, [pc, #704]	@ (8016420 <_strtod_l+0x850>)
 8016160:	2000      	movs	r0, #0
 8016162:	07d6      	lsls	r6, r2, #31
 8016164:	d504      	bpl.n	8016170 <_strtod_l+0x5a0>
 8016166:	ed91 6b00 	vldr	d6, [r1]
 801616a:	2001      	movs	r0, #1
 801616c:	ee27 7b06 	vmul.f64	d7, d7, d6
 8016170:	1052      	asrs	r2, r2, #1
 8016172:	f101 0108 	add.w	r1, r1, #8
 8016176:	d1f4      	bne.n	8016162 <_strtod_l+0x592>
 8016178:	b108      	cbz	r0, 801617e <_strtod_l+0x5ae>
 801617a:	ec5b ab17 	vmov	sl, fp, d7
 801617e:	9a06      	ldr	r2, [sp, #24]
 8016180:	b1b2      	cbz	r2, 80161b0 <_strtod_l+0x5e0>
 8016182:	f3cb 510a 	ubfx	r1, fp, #20, #11
 8016186:	f1c1 026b 	rsb	r2, r1, #107	@ 0x6b
 801618a:	2a00      	cmp	r2, #0
 801618c:	4658      	mov	r0, fp
 801618e:	dd0f      	ble.n	80161b0 <_strtod_l+0x5e0>
 8016190:	2a1f      	cmp	r2, #31
 8016192:	dd55      	ble.n	8016240 <_strtod_l+0x670>
 8016194:	2a34      	cmp	r2, #52	@ 0x34
 8016196:	bfde      	ittt	le
 8016198:	f04f 32ff 	movle.w	r2, #4294967295
 801619c:	f1c1 014b 	rsble	r1, r1, #75	@ 0x4b
 80161a0:	408a      	lslle	r2, r1
 80161a2:	f04f 0a00 	mov.w	sl, #0
 80161a6:	bfcc      	ite	gt
 80161a8:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 80161ac:	ea02 0b00 	andle.w	fp, r2, r0
 80161b0:	ec4b ab17 	vmov	d7, sl, fp
 80161b4:	eeb5 7b40 	vcmp.f64	d7, #0.0
 80161b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80161bc:	d0a8      	beq.n	8016110 <_strtod_l+0x540>
 80161be:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80161c0:	9805      	ldr	r0, [sp, #20]
 80161c2:	f8cd 9000 	str.w	r9, [sp]
 80161c6:	462a      	mov	r2, r5
 80161c8:	f002 fc0c 	bl	80189e4 <__s2b>
 80161cc:	9007      	str	r0, [sp, #28]
 80161ce:	2800      	cmp	r0, #0
 80161d0:	f43f af0a 	beq.w	8015fe8 <_strtod_l+0x418>
 80161d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80161d6:	1b3f      	subs	r7, r7, r4
 80161d8:	2b00      	cmp	r3, #0
 80161da:	bfb4      	ite	lt
 80161dc:	463b      	movlt	r3, r7
 80161de:	2300      	movge	r3, #0
 80161e0:	930a      	str	r3, [sp, #40]	@ 0x28
 80161e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80161e4:	ed9f bb8a 	vldr	d11, [pc, #552]	@ 8016410 <_strtod_l+0x840>
 80161e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80161ec:	2400      	movs	r4, #0
 80161ee:	930d      	str	r3, [sp, #52]	@ 0x34
 80161f0:	4625      	mov	r5, r4
 80161f2:	9b07      	ldr	r3, [sp, #28]
 80161f4:	9805      	ldr	r0, [sp, #20]
 80161f6:	6859      	ldr	r1, [r3, #4]
 80161f8:	f002 fb4c 	bl	8018894 <_Balloc>
 80161fc:	4606      	mov	r6, r0
 80161fe:	2800      	cmp	r0, #0
 8016200:	f43f aef6 	beq.w	8015ff0 <_strtod_l+0x420>
 8016204:	9b07      	ldr	r3, [sp, #28]
 8016206:	691a      	ldr	r2, [r3, #16]
 8016208:	ec4b ab19 	vmov	d9, sl, fp
 801620c:	3202      	adds	r2, #2
 801620e:	f103 010c 	add.w	r1, r3, #12
 8016212:	0092      	lsls	r2, r2, #2
 8016214:	300c      	adds	r0, #12
 8016216:	f001 f8fa 	bl	801740e <memcpy>
 801621a:	eeb0 0b49 	vmov.f64	d0, d9
 801621e:	9805      	ldr	r0, [sp, #20]
 8016220:	aa14      	add	r2, sp, #80	@ 0x50
 8016222:	a913      	add	r1, sp, #76	@ 0x4c
 8016224:	f002 ff1a 	bl	801905c <__d2b>
 8016228:	9012      	str	r0, [sp, #72]	@ 0x48
 801622a:	2800      	cmp	r0, #0
 801622c:	f43f aee0 	beq.w	8015ff0 <_strtod_l+0x420>
 8016230:	9805      	ldr	r0, [sp, #20]
 8016232:	2101      	movs	r1, #1
 8016234:	f002 fc6c 	bl	8018b10 <__i2b>
 8016238:	4605      	mov	r5, r0
 801623a:	b940      	cbnz	r0, 801624e <_strtod_l+0x67e>
 801623c:	2500      	movs	r5, #0
 801623e:	e6d7      	b.n	8015ff0 <_strtod_l+0x420>
 8016240:	f04f 31ff 	mov.w	r1, #4294967295
 8016244:	fa01 f202 	lsl.w	r2, r1, r2
 8016248:	ea02 0a0a 	and.w	sl, r2, sl
 801624c:	e7b0      	b.n	80161b0 <_strtod_l+0x5e0>
 801624e:	9f13      	ldr	r7, [sp, #76]	@ 0x4c
 8016250:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016252:	2f00      	cmp	r7, #0
 8016254:	bfab      	itete	ge
 8016256:	9b0a      	ldrge	r3, [sp, #40]	@ 0x28
 8016258:	9b0d      	ldrlt	r3, [sp, #52]	@ 0x34
 801625a:	f8dd 8034 	ldrge.w	r8, [sp, #52]	@ 0x34
 801625e:	f8dd 9028 	ldrlt.w	r9, [sp, #40]	@ 0x28
 8016262:	bfac      	ite	ge
 8016264:	eb07 0903 	addge.w	r9, r7, r3
 8016268:	eba3 0807 	sublt.w	r8, r3, r7
 801626c:	9b06      	ldr	r3, [sp, #24]
 801626e:	1aff      	subs	r7, r7, r3
 8016270:	4417      	add	r7, r2
 8016272:	f1c2 0336 	rsb	r3, r2, #54	@ 0x36
 8016276:	4a6b      	ldr	r2, [pc, #428]	@ (8016424 <_strtod_l+0x854>)
 8016278:	3f01      	subs	r7, #1
 801627a:	4297      	cmp	r7, r2
 801627c:	da51      	bge.n	8016322 <_strtod_l+0x752>
 801627e:	1bd1      	subs	r1, r2, r7
 8016280:	291f      	cmp	r1, #31
 8016282:	eba3 0301 	sub.w	r3, r3, r1
 8016286:	f04f 0201 	mov.w	r2, #1
 801628a:	dc3e      	bgt.n	801630a <_strtod_l+0x73a>
 801628c:	408a      	lsls	r2, r1
 801628e:	920c      	str	r2, [sp, #48]	@ 0x30
 8016290:	2200      	movs	r2, #0
 8016292:	920b      	str	r2, [sp, #44]	@ 0x2c
 8016294:	eb09 0703 	add.w	r7, r9, r3
 8016298:	4498      	add	r8, r3
 801629a:	9b06      	ldr	r3, [sp, #24]
 801629c:	45b9      	cmp	r9, r7
 801629e:	4498      	add	r8, r3
 80162a0:	464b      	mov	r3, r9
 80162a2:	bfa8      	it	ge
 80162a4:	463b      	movge	r3, r7
 80162a6:	4543      	cmp	r3, r8
 80162a8:	bfa8      	it	ge
 80162aa:	4643      	movge	r3, r8
 80162ac:	2b00      	cmp	r3, #0
 80162ae:	bfc2      	ittt	gt
 80162b0:	1aff      	subgt	r7, r7, r3
 80162b2:	eba8 0803 	subgt.w	r8, r8, r3
 80162b6:	eba9 0903 	subgt.w	r9, r9, r3
 80162ba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80162bc:	2b00      	cmp	r3, #0
 80162be:	dd16      	ble.n	80162ee <_strtod_l+0x71e>
 80162c0:	4629      	mov	r1, r5
 80162c2:	9805      	ldr	r0, [sp, #20]
 80162c4:	461a      	mov	r2, r3
 80162c6:	f002 fce3 	bl	8018c90 <__pow5mult>
 80162ca:	4605      	mov	r5, r0
 80162cc:	2800      	cmp	r0, #0
 80162ce:	d0b5      	beq.n	801623c <_strtod_l+0x66c>
 80162d0:	4601      	mov	r1, r0
 80162d2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80162d4:	9805      	ldr	r0, [sp, #20]
 80162d6:	f002 fc31 	bl	8018b3c <__multiply>
 80162da:	900f      	str	r0, [sp, #60]	@ 0x3c
 80162dc:	2800      	cmp	r0, #0
 80162de:	f43f ae87 	beq.w	8015ff0 <_strtod_l+0x420>
 80162e2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80162e4:	9805      	ldr	r0, [sp, #20]
 80162e6:	f002 fb15 	bl	8018914 <_Bfree>
 80162ea:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80162ec:	9312      	str	r3, [sp, #72]	@ 0x48
 80162ee:	2f00      	cmp	r7, #0
 80162f0:	dc1b      	bgt.n	801632a <_strtod_l+0x75a>
 80162f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80162f4:	2b00      	cmp	r3, #0
 80162f6:	dd21      	ble.n	801633c <_strtod_l+0x76c>
 80162f8:	4631      	mov	r1, r6
 80162fa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80162fc:	9805      	ldr	r0, [sp, #20]
 80162fe:	f002 fcc7 	bl	8018c90 <__pow5mult>
 8016302:	4606      	mov	r6, r0
 8016304:	b9d0      	cbnz	r0, 801633c <_strtod_l+0x76c>
 8016306:	2600      	movs	r6, #0
 8016308:	e672      	b.n	8015ff0 <_strtod_l+0x420>
 801630a:	f1c7 477f 	rsb	r7, r7, #4278190080	@ 0xff000000
 801630e:	f507 077f 	add.w	r7, r7, #16711680	@ 0xff0000
 8016312:	f507 477b 	add.w	r7, r7, #64256	@ 0xfb00
 8016316:	37e2      	adds	r7, #226	@ 0xe2
 8016318:	fa02 f107 	lsl.w	r1, r2, r7
 801631c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801631e:	920c      	str	r2, [sp, #48]	@ 0x30
 8016320:	e7b8      	b.n	8016294 <_strtod_l+0x6c4>
 8016322:	2200      	movs	r2, #0
 8016324:	920b      	str	r2, [sp, #44]	@ 0x2c
 8016326:	2201      	movs	r2, #1
 8016328:	e7f9      	b.n	801631e <_strtod_l+0x74e>
 801632a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801632c:	9805      	ldr	r0, [sp, #20]
 801632e:	463a      	mov	r2, r7
 8016330:	f002 fd08 	bl	8018d44 <__lshift>
 8016334:	9012      	str	r0, [sp, #72]	@ 0x48
 8016336:	2800      	cmp	r0, #0
 8016338:	d1db      	bne.n	80162f2 <_strtod_l+0x722>
 801633a:	e659      	b.n	8015ff0 <_strtod_l+0x420>
 801633c:	f1b8 0f00 	cmp.w	r8, #0
 8016340:	dd07      	ble.n	8016352 <_strtod_l+0x782>
 8016342:	4631      	mov	r1, r6
 8016344:	9805      	ldr	r0, [sp, #20]
 8016346:	4642      	mov	r2, r8
 8016348:	f002 fcfc 	bl	8018d44 <__lshift>
 801634c:	4606      	mov	r6, r0
 801634e:	2800      	cmp	r0, #0
 8016350:	d0d9      	beq.n	8016306 <_strtod_l+0x736>
 8016352:	f1b9 0f00 	cmp.w	r9, #0
 8016356:	dd08      	ble.n	801636a <_strtod_l+0x79a>
 8016358:	4629      	mov	r1, r5
 801635a:	9805      	ldr	r0, [sp, #20]
 801635c:	464a      	mov	r2, r9
 801635e:	f002 fcf1 	bl	8018d44 <__lshift>
 8016362:	4605      	mov	r5, r0
 8016364:	2800      	cmp	r0, #0
 8016366:	f43f ae43 	beq.w	8015ff0 <_strtod_l+0x420>
 801636a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801636c:	9805      	ldr	r0, [sp, #20]
 801636e:	4632      	mov	r2, r6
 8016370:	f002 fd70 	bl	8018e54 <__mdiff>
 8016374:	4604      	mov	r4, r0
 8016376:	2800      	cmp	r0, #0
 8016378:	f43f ae3a 	beq.w	8015ff0 <_strtod_l+0x420>
 801637c:	2300      	movs	r3, #0
 801637e:	f8d0 800c 	ldr.w	r8, [r0, #12]
 8016382:	60c3      	str	r3, [r0, #12]
 8016384:	4629      	mov	r1, r5
 8016386:	f002 fd49 	bl	8018e1c <__mcmp>
 801638a:	2800      	cmp	r0, #0
 801638c:	da4e      	bge.n	801642c <_strtod_l+0x85c>
 801638e:	ea58 080a 	orrs.w	r8, r8, sl
 8016392:	d174      	bne.n	801647e <_strtod_l+0x8ae>
 8016394:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8016398:	2b00      	cmp	r3, #0
 801639a:	d170      	bne.n	801647e <_strtod_l+0x8ae>
 801639c:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80163a0:	0d1b      	lsrs	r3, r3, #20
 80163a2:	051b      	lsls	r3, r3, #20
 80163a4:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 80163a8:	d969      	bls.n	801647e <_strtod_l+0x8ae>
 80163aa:	6963      	ldr	r3, [r4, #20]
 80163ac:	b913      	cbnz	r3, 80163b4 <_strtod_l+0x7e4>
 80163ae:	6923      	ldr	r3, [r4, #16]
 80163b0:	2b01      	cmp	r3, #1
 80163b2:	dd64      	ble.n	801647e <_strtod_l+0x8ae>
 80163b4:	4621      	mov	r1, r4
 80163b6:	2201      	movs	r2, #1
 80163b8:	9805      	ldr	r0, [sp, #20]
 80163ba:	f002 fcc3 	bl	8018d44 <__lshift>
 80163be:	4629      	mov	r1, r5
 80163c0:	4604      	mov	r4, r0
 80163c2:	f002 fd2b 	bl	8018e1c <__mcmp>
 80163c6:	2800      	cmp	r0, #0
 80163c8:	dd59      	ble.n	801647e <_strtod_l+0x8ae>
 80163ca:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80163ce:	9a06      	ldr	r2, [sp, #24]
 80163d0:	0d1b      	lsrs	r3, r3, #20
 80163d2:	051b      	lsls	r3, r3, #20
 80163d4:	2a00      	cmp	r2, #0
 80163d6:	d070      	beq.n	80164ba <_strtod_l+0x8ea>
 80163d8:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 80163dc:	d86d      	bhi.n	80164ba <_strtod_l+0x8ea>
 80163de:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 80163e2:	f67f ae99 	bls.w	8016118 <_strtod_l+0x548>
 80163e6:	ed9f 7b0c 	vldr	d7, [pc, #48]	@ 8016418 <_strtod_l+0x848>
 80163ea:	ec4b ab16 	vmov	d6, sl, fp
 80163ee:	4b0e      	ldr	r3, [pc, #56]	@ (8016428 <_strtod_l+0x858>)
 80163f0:	ee26 7b07 	vmul.f64	d7, d6, d7
 80163f4:	ee17 2a90 	vmov	r2, s15
 80163f8:	4013      	ands	r3, r2
 80163fa:	ec5b ab17 	vmov	sl, fp, d7
 80163fe:	2b00      	cmp	r3, #0
 8016400:	f47f ae01 	bne.w	8016006 <_strtod_l+0x436>
 8016404:	9a05      	ldr	r2, [sp, #20]
 8016406:	2322      	movs	r3, #34	@ 0x22
 8016408:	6013      	str	r3, [r2, #0]
 801640a:	e5fc      	b.n	8016006 <_strtod_l+0x436>
 801640c:	f3af 8000 	nop.w
 8016410:	ffc00000 	.word	0xffc00000
 8016414:	41dfffff 	.word	0x41dfffff
 8016418:	00000000 	.word	0x00000000
 801641c:	39500000 	.word	0x39500000
 8016420:	0801b0b0 	.word	0x0801b0b0
 8016424:	fffffc02 	.word	0xfffffc02
 8016428:	7ff00000 	.word	0x7ff00000
 801642c:	46d9      	mov	r9, fp
 801642e:	d15d      	bne.n	80164ec <_strtod_l+0x91c>
 8016430:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8016434:	f1b8 0f00 	cmp.w	r8, #0
 8016438:	d02a      	beq.n	8016490 <_strtod_l+0x8c0>
 801643a:	4aab      	ldr	r2, [pc, #684]	@ (80166e8 <_strtod_l+0xb18>)
 801643c:	4293      	cmp	r3, r2
 801643e:	d12a      	bne.n	8016496 <_strtod_l+0x8c6>
 8016440:	9b06      	ldr	r3, [sp, #24]
 8016442:	4652      	mov	r2, sl
 8016444:	b1fb      	cbz	r3, 8016486 <_strtod_l+0x8b6>
 8016446:	4ba9      	ldr	r3, [pc, #676]	@ (80166ec <_strtod_l+0xb1c>)
 8016448:	ea0b 0303 	and.w	r3, fp, r3
 801644c:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 8016450:	f04f 31ff 	mov.w	r1, #4294967295
 8016454:	d81a      	bhi.n	801648c <_strtod_l+0x8bc>
 8016456:	0d1b      	lsrs	r3, r3, #20
 8016458:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 801645c:	fa01 f303 	lsl.w	r3, r1, r3
 8016460:	429a      	cmp	r2, r3
 8016462:	d118      	bne.n	8016496 <_strtod_l+0x8c6>
 8016464:	4ba2      	ldr	r3, [pc, #648]	@ (80166f0 <_strtod_l+0xb20>)
 8016466:	4599      	cmp	r9, r3
 8016468:	d102      	bne.n	8016470 <_strtod_l+0x8a0>
 801646a:	3201      	adds	r2, #1
 801646c:	f43f adc0 	beq.w	8015ff0 <_strtod_l+0x420>
 8016470:	4b9e      	ldr	r3, [pc, #632]	@ (80166ec <_strtod_l+0xb1c>)
 8016472:	ea09 0303 	and.w	r3, r9, r3
 8016476:	f503 1b80 	add.w	fp, r3, #1048576	@ 0x100000
 801647a:	f04f 0a00 	mov.w	sl, #0
 801647e:	9b06      	ldr	r3, [sp, #24]
 8016480:	2b00      	cmp	r3, #0
 8016482:	d1b0      	bne.n	80163e6 <_strtod_l+0x816>
 8016484:	e5bf      	b.n	8016006 <_strtod_l+0x436>
 8016486:	f04f 33ff 	mov.w	r3, #4294967295
 801648a:	e7e9      	b.n	8016460 <_strtod_l+0x890>
 801648c:	460b      	mov	r3, r1
 801648e:	e7e7      	b.n	8016460 <_strtod_l+0x890>
 8016490:	ea53 030a 	orrs.w	r3, r3, sl
 8016494:	d099      	beq.n	80163ca <_strtod_l+0x7fa>
 8016496:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016498:	b1c3      	cbz	r3, 80164cc <_strtod_l+0x8fc>
 801649a:	ea13 0f09 	tst.w	r3, r9
 801649e:	d0ee      	beq.n	801647e <_strtod_l+0x8ae>
 80164a0:	9a06      	ldr	r2, [sp, #24]
 80164a2:	4650      	mov	r0, sl
 80164a4:	4659      	mov	r1, fp
 80164a6:	f1b8 0f00 	cmp.w	r8, #0
 80164aa:	d013      	beq.n	80164d4 <_strtod_l+0x904>
 80164ac:	f7ff fb73 	bl	8015b96 <sulp>
 80164b0:	ee39 7b00 	vadd.f64	d7, d9, d0
 80164b4:	ec5b ab17 	vmov	sl, fp, d7
 80164b8:	e7e1      	b.n	801647e <_strtod_l+0x8ae>
 80164ba:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 80164be:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 80164c2:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 80164c6:	f04f 3aff 	mov.w	sl, #4294967295
 80164ca:	e7d8      	b.n	801647e <_strtod_l+0x8ae>
 80164cc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80164ce:	ea13 0f0a 	tst.w	r3, sl
 80164d2:	e7e4      	b.n	801649e <_strtod_l+0x8ce>
 80164d4:	f7ff fb5f 	bl	8015b96 <sulp>
 80164d8:	ee39 0b40 	vsub.f64	d0, d9, d0
 80164dc:	eeb5 0b40 	vcmp.f64	d0, #0.0
 80164e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80164e4:	ec5b ab10 	vmov	sl, fp, d0
 80164e8:	d1c9      	bne.n	801647e <_strtod_l+0x8ae>
 80164ea:	e615      	b.n	8016118 <_strtod_l+0x548>
 80164ec:	4629      	mov	r1, r5
 80164ee:	4620      	mov	r0, r4
 80164f0:	f002 fe0c 	bl	801910c <__ratio>
 80164f4:	eeb0 7b00 	vmov.f64	d7, #0	@ 0x40000000  2.0
 80164f8:	eeb4 0bc7 	vcmpe.f64	d0, d7
 80164fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016500:	d85d      	bhi.n	80165be <_strtod_l+0x9ee>
 8016502:	f1b8 0f00 	cmp.w	r8, #0
 8016506:	d164      	bne.n	80165d2 <_strtod_l+0xa02>
 8016508:	f1ba 0f00 	cmp.w	sl, #0
 801650c:	d14b      	bne.n	80165a6 <_strtod_l+0x9d6>
 801650e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8016512:	eeb7 8b00 	vmov.f64	d8, #112	@ 0x3f800000  1.0
 8016516:	2b00      	cmp	r3, #0
 8016518:	d160      	bne.n	80165dc <_strtod_l+0xa0c>
 801651a:	eeb4 0bc8 	vcmpe.f64	d0, d8
 801651e:	eeb6 8b00 	vmov.f64	d8, #96	@ 0x3f000000  0.5
 8016522:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016526:	d401      	bmi.n	801652c <_strtod_l+0x95c>
 8016528:	ee20 8b08 	vmul.f64	d8, d0, d8
 801652c:	eeb1 ab48 	vneg.f64	d10, d8
 8016530:	486e      	ldr	r0, [pc, #440]	@ (80166ec <_strtod_l+0xb1c>)
 8016532:	4970      	ldr	r1, [pc, #448]	@ (80166f4 <_strtod_l+0xb24>)
 8016534:	ea09 0700 	and.w	r7, r9, r0
 8016538:	428f      	cmp	r7, r1
 801653a:	ec53 2b1a 	vmov	r2, r3, d10
 801653e:	d17d      	bne.n	801663c <_strtod_l+0xa6c>
 8016540:	f1a9 7b54 	sub.w	fp, r9, #55574528	@ 0x3500000
 8016544:	ec4b ab1c 	vmov	d12, sl, fp
 8016548:	eeb0 0b4c 	vmov.f64	d0, d12
 801654c:	f002 fd16 	bl	8018f7c <__ulp>
 8016550:	4866      	ldr	r0, [pc, #408]	@ (80166ec <_strtod_l+0xb1c>)
 8016552:	eea0 cb0a 	vfma.f64	d12, d0, d10
 8016556:	ee1c 3a90 	vmov	r3, s25
 801655a:	4a67      	ldr	r2, [pc, #412]	@ (80166f8 <_strtod_l+0xb28>)
 801655c:	ea03 0100 	and.w	r1, r3, r0
 8016560:	4291      	cmp	r1, r2
 8016562:	ec5b ab1c 	vmov	sl, fp, d12
 8016566:	d93c      	bls.n	80165e2 <_strtod_l+0xa12>
 8016568:	ee19 2a90 	vmov	r2, s19
 801656c:	4b60      	ldr	r3, [pc, #384]	@ (80166f0 <_strtod_l+0xb20>)
 801656e:	429a      	cmp	r2, r3
 8016570:	d104      	bne.n	801657c <_strtod_l+0x9ac>
 8016572:	ee19 3a10 	vmov	r3, s18
 8016576:	3301      	adds	r3, #1
 8016578:	f43f ad3a 	beq.w	8015ff0 <_strtod_l+0x420>
 801657c:	f8df b170 	ldr.w	fp, [pc, #368]	@ 80166f0 <_strtod_l+0xb20>
 8016580:	f04f 3aff 	mov.w	sl, #4294967295
 8016584:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8016586:	9805      	ldr	r0, [sp, #20]
 8016588:	f002 f9c4 	bl	8018914 <_Bfree>
 801658c:	9805      	ldr	r0, [sp, #20]
 801658e:	4631      	mov	r1, r6
 8016590:	f002 f9c0 	bl	8018914 <_Bfree>
 8016594:	9805      	ldr	r0, [sp, #20]
 8016596:	4629      	mov	r1, r5
 8016598:	f002 f9bc 	bl	8018914 <_Bfree>
 801659c:	9805      	ldr	r0, [sp, #20]
 801659e:	4621      	mov	r1, r4
 80165a0:	f002 f9b8 	bl	8018914 <_Bfree>
 80165a4:	e625      	b.n	80161f2 <_strtod_l+0x622>
 80165a6:	f1ba 0f01 	cmp.w	sl, #1
 80165aa:	d103      	bne.n	80165b4 <_strtod_l+0x9e4>
 80165ac:	f1bb 0f00 	cmp.w	fp, #0
 80165b0:	f43f adb2 	beq.w	8016118 <_strtod_l+0x548>
 80165b4:	eebf ab00 	vmov.f64	d10, #240	@ 0xbf800000 -1.0
 80165b8:	eeb7 8b00 	vmov.f64	d8, #112	@ 0x3f800000  1.0
 80165bc:	e7b8      	b.n	8016530 <_strtod_l+0x960>
 80165be:	eeb6 8b00 	vmov.f64	d8, #96	@ 0x3f000000  0.5
 80165c2:	ee20 8b08 	vmul.f64	d8, d0, d8
 80165c6:	f1b8 0f00 	cmp.w	r8, #0
 80165ca:	d0af      	beq.n	801652c <_strtod_l+0x95c>
 80165cc:	eeb0 ab48 	vmov.f64	d10, d8
 80165d0:	e7ae      	b.n	8016530 <_strtod_l+0x960>
 80165d2:	eeb7 ab00 	vmov.f64	d10, #112	@ 0x3f800000  1.0
 80165d6:	eeb0 8b4a 	vmov.f64	d8, d10
 80165da:	e7a9      	b.n	8016530 <_strtod_l+0x960>
 80165dc:	eebf ab00 	vmov.f64	d10, #240	@ 0xbf800000 -1.0
 80165e0:	e7a6      	b.n	8016530 <_strtod_l+0x960>
 80165e2:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 80165e6:	9b06      	ldr	r3, [sp, #24]
 80165e8:	46d9      	mov	r9, fp
 80165ea:	2b00      	cmp	r3, #0
 80165ec:	d1ca      	bne.n	8016584 <_strtod_l+0x9b4>
 80165ee:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80165f2:	0d1b      	lsrs	r3, r3, #20
 80165f4:	051b      	lsls	r3, r3, #20
 80165f6:	429f      	cmp	r7, r3
 80165f8:	d1c4      	bne.n	8016584 <_strtod_l+0x9b4>
 80165fa:	ec51 0b18 	vmov	r0, r1, d8
 80165fe:	f7ea f8c3 	bl	8000788 <__aeabi_d2lz>
 8016602:	f7ea f87b 	bl	80006fc <__aeabi_l2d>
 8016606:	f3cb 0913 	ubfx	r9, fp, #0, #20
 801660a:	ec41 0b17 	vmov	d7, r0, r1
 801660e:	ea49 090a 	orr.w	r9, r9, sl
 8016612:	ea59 0908 	orrs.w	r9, r9, r8
 8016616:	ee38 8b47 	vsub.f64	d8, d8, d7
 801661a:	d03c      	beq.n	8016696 <_strtod_l+0xac6>
 801661c:	ed9f 7b2c 	vldr	d7, [pc, #176]	@ 80166d0 <_strtod_l+0xb00>
 8016620:	eeb4 8bc7 	vcmpe.f64	d8, d7
 8016624:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016628:	f53f aced 	bmi.w	8016006 <_strtod_l+0x436>
 801662c:	ed9f 7b2a 	vldr	d7, [pc, #168]	@ 80166d8 <_strtod_l+0xb08>
 8016630:	eeb4 8bc7 	vcmpe.f64	d8, d7
 8016634:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016638:	dda4      	ble.n	8016584 <_strtod_l+0x9b4>
 801663a:	e4e4      	b.n	8016006 <_strtod_l+0x436>
 801663c:	9906      	ldr	r1, [sp, #24]
 801663e:	b1e1      	cbz	r1, 801667a <_strtod_l+0xaaa>
 8016640:	f1b7 6fd4 	cmp.w	r7, #111149056	@ 0x6a00000
 8016644:	d819      	bhi.n	801667a <_strtod_l+0xaaa>
 8016646:	eeb4 8bcb 	vcmpe.f64	d8, d11
 801664a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801664e:	d811      	bhi.n	8016674 <_strtod_l+0xaa4>
 8016650:	eebc 8bc8 	vcvt.u32.f64	s16, d8
 8016654:	ee18 3a10 	vmov	r3, s16
 8016658:	2b01      	cmp	r3, #1
 801665a:	bf38      	it	cc
 801665c:	2301      	movcc	r3, #1
 801665e:	ee08 3a10 	vmov	s16, r3
 8016662:	eeb8 8b48 	vcvt.f64.u32	d8, s16
 8016666:	f1b8 0f00 	cmp.w	r8, #0
 801666a:	d111      	bne.n	8016690 <_strtod_l+0xac0>
 801666c:	eeb1 7b48 	vneg.f64	d7, d8
 8016670:	ec53 2b17 	vmov	r2, r3, d7
 8016674:	f103 61d6 	add.w	r1, r3, #112197632	@ 0x6b00000
 8016678:	1bcb      	subs	r3, r1, r7
 801667a:	eeb0 0b49 	vmov.f64	d0, d9
 801667e:	ec43 2b1a 	vmov	d10, r2, r3
 8016682:	f002 fc7b 	bl	8018f7c <__ulp>
 8016686:	eeaa 9b00 	vfma.f64	d9, d10, d0
 801668a:	ec5b ab19 	vmov	sl, fp, d9
 801668e:	e7aa      	b.n	80165e6 <_strtod_l+0xa16>
 8016690:	eeb0 7b48 	vmov.f64	d7, d8
 8016694:	e7ec      	b.n	8016670 <_strtod_l+0xaa0>
 8016696:	ed9f 7b12 	vldr	d7, [pc, #72]	@ 80166e0 <_strtod_l+0xb10>
 801669a:	eeb4 8bc7 	vcmpe.f64	d8, d7
 801669e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80166a2:	f57f af6f 	bpl.w	8016584 <_strtod_l+0x9b4>
 80166a6:	e4ae      	b.n	8016006 <_strtod_l+0x436>
 80166a8:	2300      	movs	r3, #0
 80166aa:	9308      	str	r3, [sp, #32]
 80166ac:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80166ae:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80166b0:	6013      	str	r3, [r2, #0]
 80166b2:	f7ff bacc 	b.w	8015c4e <_strtod_l+0x7e>
 80166b6:	2a65      	cmp	r2, #101	@ 0x65
 80166b8:	f43f abbc 	beq.w	8015e34 <_strtod_l+0x264>
 80166bc:	2a45      	cmp	r2, #69	@ 0x45
 80166be:	f43f abb9 	beq.w	8015e34 <_strtod_l+0x264>
 80166c2:	2301      	movs	r3, #1
 80166c4:	9306      	str	r3, [sp, #24]
 80166c6:	f7ff bbf0 	b.w	8015eaa <_strtod_l+0x2da>
 80166ca:	bf00      	nop
 80166cc:	f3af 8000 	nop.w
 80166d0:	94a03595 	.word	0x94a03595
 80166d4:	3fdfffff 	.word	0x3fdfffff
 80166d8:	35afe535 	.word	0x35afe535
 80166dc:	3fe00000 	.word	0x3fe00000
 80166e0:	94a03595 	.word	0x94a03595
 80166e4:	3fcfffff 	.word	0x3fcfffff
 80166e8:	000fffff 	.word	0x000fffff
 80166ec:	7ff00000 	.word	0x7ff00000
 80166f0:	7fefffff 	.word	0x7fefffff
 80166f4:	7fe00000 	.word	0x7fe00000
 80166f8:	7c9fffff 	.word	0x7c9fffff

080166fc <strtod>:
 80166fc:	460a      	mov	r2, r1
 80166fe:	4601      	mov	r1, r0
 8016700:	4802      	ldr	r0, [pc, #8]	@ (801670c <strtod+0x10>)
 8016702:	4b03      	ldr	r3, [pc, #12]	@ (8016710 <strtod+0x14>)
 8016704:	6800      	ldr	r0, [r0, #0]
 8016706:	f7ff ba63 	b.w	8015bd0 <_strtod_l>
 801670a:	bf00      	nop
 801670c:	2400027c 	.word	0x2400027c
 8016710:	24000110 	.word	0x24000110

08016714 <_strtol_l.constprop.0>:
 8016714:	2b24      	cmp	r3, #36	@ 0x24
 8016716:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801671a:	4686      	mov	lr, r0
 801671c:	4690      	mov	r8, r2
 801671e:	d801      	bhi.n	8016724 <_strtol_l.constprop.0+0x10>
 8016720:	2b01      	cmp	r3, #1
 8016722:	d106      	bne.n	8016732 <_strtol_l.constprop.0+0x1e>
 8016724:	f000 fe46 	bl	80173b4 <__errno>
 8016728:	2316      	movs	r3, #22
 801672a:	6003      	str	r3, [r0, #0]
 801672c:	2000      	movs	r0, #0
 801672e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016732:	4834      	ldr	r0, [pc, #208]	@ (8016804 <_strtol_l.constprop.0+0xf0>)
 8016734:	460d      	mov	r5, r1
 8016736:	462a      	mov	r2, r5
 8016738:	f815 4b01 	ldrb.w	r4, [r5], #1
 801673c:	5d06      	ldrb	r6, [r0, r4]
 801673e:	f016 0608 	ands.w	r6, r6, #8
 8016742:	d1f8      	bne.n	8016736 <_strtol_l.constprop.0+0x22>
 8016744:	2c2d      	cmp	r4, #45	@ 0x2d
 8016746:	d12d      	bne.n	80167a4 <_strtol_l.constprop.0+0x90>
 8016748:	782c      	ldrb	r4, [r5, #0]
 801674a:	2601      	movs	r6, #1
 801674c:	1c95      	adds	r5, r2, #2
 801674e:	f033 0210 	bics.w	r2, r3, #16
 8016752:	d109      	bne.n	8016768 <_strtol_l.constprop.0+0x54>
 8016754:	2c30      	cmp	r4, #48	@ 0x30
 8016756:	d12a      	bne.n	80167ae <_strtol_l.constprop.0+0x9a>
 8016758:	782a      	ldrb	r2, [r5, #0]
 801675a:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 801675e:	2a58      	cmp	r2, #88	@ 0x58
 8016760:	d125      	bne.n	80167ae <_strtol_l.constprop.0+0x9a>
 8016762:	786c      	ldrb	r4, [r5, #1]
 8016764:	2310      	movs	r3, #16
 8016766:	3502      	adds	r5, #2
 8016768:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 801676c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8016770:	2200      	movs	r2, #0
 8016772:	fbbc f9f3 	udiv	r9, ip, r3
 8016776:	4610      	mov	r0, r2
 8016778:	fb03 ca19 	mls	sl, r3, r9, ip
 801677c:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8016780:	2f09      	cmp	r7, #9
 8016782:	d81b      	bhi.n	80167bc <_strtol_l.constprop.0+0xa8>
 8016784:	463c      	mov	r4, r7
 8016786:	42a3      	cmp	r3, r4
 8016788:	dd27      	ble.n	80167da <_strtol_l.constprop.0+0xc6>
 801678a:	1c57      	adds	r7, r2, #1
 801678c:	d007      	beq.n	801679e <_strtol_l.constprop.0+0x8a>
 801678e:	4581      	cmp	r9, r0
 8016790:	d320      	bcc.n	80167d4 <_strtol_l.constprop.0+0xc0>
 8016792:	d101      	bne.n	8016798 <_strtol_l.constprop.0+0x84>
 8016794:	45a2      	cmp	sl, r4
 8016796:	db1d      	blt.n	80167d4 <_strtol_l.constprop.0+0xc0>
 8016798:	fb00 4003 	mla	r0, r0, r3, r4
 801679c:	2201      	movs	r2, #1
 801679e:	f815 4b01 	ldrb.w	r4, [r5], #1
 80167a2:	e7eb      	b.n	801677c <_strtol_l.constprop.0+0x68>
 80167a4:	2c2b      	cmp	r4, #43	@ 0x2b
 80167a6:	bf04      	itt	eq
 80167a8:	782c      	ldrbeq	r4, [r5, #0]
 80167aa:	1c95      	addeq	r5, r2, #2
 80167ac:	e7cf      	b.n	801674e <_strtol_l.constprop.0+0x3a>
 80167ae:	2b00      	cmp	r3, #0
 80167b0:	d1da      	bne.n	8016768 <_strtol_l.constprop.0+0x54>
 80167b2:	2c30      	cmp	r4, #48	@ 0x30
 80167b4:	bf0c      	ite	eq
 80167b6:	2308      	moveq	r3, #8
 80167b8:	230a      	movne	r3, #10
 80167ba:	e7d5      	b.n	8016768 <_strtol_l.constprop.0+0x54>
 80167bc:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 80167c0:	2f19      	cmp	r7, #25
 80167c2:	d801      	bhi.n	80167c8 <_strtol_l.constprop.0+0xb4>
 80167c4:	3c37      	subs	r4, #55	@ 0x37
 80167c6:	e7de      	b.n	8016786 <_strtol_l.constprop.0+0x72>
 80167c8:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 80167cc:	2f19      	cmp	r7, #25
 80167ce:	d804      	bhi.n	80167da <_strtol_l.constprop.0+0xc6>
 80167d0:	3c57      	subs	r4, #87	@ 0x57
 80167d2:	e7d8      	b.n	8016786 <_strtol_l.constprop.0+0x72>
 80167d4:	f04f 32ff 	mov.w	r2, #4294967295
 80167d8:	e7e1      	b.n	801679e <_strtol_l.constprop.0+0x8a>
 80167da:	1c53      	adds	r3, r2, #1
 80167dc:	d108      	bne.n	80167f0 <_strtol_l.constprop.0+0xdc>
 80167de:	2322      	movs	r3, #34	@ 0x22
 80167e0:	f8ce 3000 	str.w	r3, [lr]
 80167e4:	4660      	mov	r0, ip
 80167e6:	f1b8 0f00 	cmp.w	r8, #0
 80167ea:	d0a0      	beq.n	801672e <_strtol_l.constprop.0+0x1a>
 80167ec:	1e69      	subs	r1, r5, #1
 80167ee:	e006      	b.n	80167fe <_strtol_l.constprop.0+0xea>
 80167f0:	b106      	cbz	r6, 80167f4 <_strtol_l.constprop.0+0xe0>
 80167f2:	4240      	negs	r0, r0
 80167f4:	f1b8 0f00 	cmp.w	r8, #0
 80167f8:	d099      	beq.n	801672e <_strtol_l.constprop.0+0x1a>
 80167fa:	2a00      	cmp	r2, #0
 80167fc:	d1f6      	bne.n	80167ec <_strtol_l.constprop.0+0xd8>
 80167fe:	f8c8 1000 	str.w	r1, [r8]
 8016802:	e794      	b.n	801672e <_strtol_l.constprop.0+0x1a>
 8016804:	0801b0d9 	.word	0x0801b0d9

08016808 <strtol>:
 8016808:	4613      	mov	r3, r2
 801680a:	460a      	mov	r2, r1
 801680c:	4601      	mov	r1, r0
 801680e:	4802      	ldr	r0, [pc, #8]	@ (8016818 <strtol+0x10>)
 8016810:	6800      	ldr	r0, [r0, #0]
 8016812:	f7ff bf7f 	b.w	8016714 <_strtol_l.constprop.0>
 8016816:	bf00      	nop
 8016818:	2400027c 	.word	0x2400027c

0801681c <__cvt>:
 801681c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801681e:	ed2d 8b02 	vpush	{d8}
 8016822:	eeb0 8b40 	vmov.f64	d8, d0
 8016826:	b085      	sub	sp, #20
 8016828:	4617      	mov	r7, r2
 801682a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801682c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801682e:	ee18 2a90 	vmov	r2, s17
 8016832:	f025 0520 	bic.w	r5, r5, #32
 8016836:	2a00      	cmp	r2, #0
 8016838:	bfb6      	itet	lt
 801683a:	222d      	movlt	r2, #45	@ 0x2d
 801683c:	2200      	movge	r2, #0
 801683e:	eeb1 8b40 	vneglt.f64	d8, d0
 8016842:	2d46      	cmp	r5, #70	@ 0x46
 8016844:	460c      	mov	r4, r1
 8016846:	701a      	strb	r2, [r3, #0]
 8016848:	d004      	beq.n	8016854 <__cvt+0x38>
 801684a:	2d45      	cmp	r5, #69	@ 0x45
 801684c:	d100      	bne.n	8016850 <__cvt+0x34>
 801684e:	3401      	adds	r4, #1
 8016850:	2102      	movs	r1, #2
 8016852:	e000      	b.n	8016856 <__cvt+0x3a>
 8016854:	2103      	movs	r1, #3
 8016856:	ab03      	add	r3, sp, #12
 8016858:	9301      	str	r3, [sp, #4]
 801685a:	ab02      	add	r3, sp, #8
 801685c:	9300      	str	r3, [sp, #0]
 801685e:	4622      	mov	r2, r4
 8016860:	4633      	mov	r3, r6
 8016862:	eeb0 0b48 	vmov.f64	d0, d8
 8016866:	f000 fe73 	bl	8017550 <_dtoa_r>
 801686a:	2d47      	cmp	r5, #71	@ 0x47
 801686c:	d114      	bne.n	8016898 <__cvt+0x7c>
 801686e:	07fb      	lsls	r3, r7, #31
 8016870:	d50a      	bpl.n	8016888 <__cvt+0x6c>
 8016872:	1902      	adds	r2, r0, r4
 8016874:	eeb5 8b40 	vcmp.f64	d8, #0.0
 8016878:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801687c:	bf08      	it	eq
 801687e:	9203      	streq	r2, [sp, #12]
 8016880:	2130      	movs	r1, #48	@ 0x30
 8016882:	9b03      	ldr	r3, [sp, #12]
 8016884:	4293      	cmp	r3, r2
 8016886:	d319      	bcc.n	80168bc <__cvt+0xa0>
 8016888:	9b03      	ldr	r3, [sp, #12]
 801688a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801688c:	1a1b      	subs	r3, r3, r0
 801688e:	6013      	str	r3, [r2, #0]
 8016890:	b005      	add	sp, #20
 8016892:	ecbd 8b02 	vpop	{d8}
 8016896:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016898:	2d46      	cmp	r5, #70	@ 0x46
 801689a:	eb00 0204 	add.w	r2, r0, r4
 801689e:	d1e9      	bne.n	8016874 <__cvt+0x58>
 80168a0:	7803      	ldrb	r3, [r0, #0]
 80168a2:	2b30      	cmp	r3, #48	@ 0x30
 80168a4:	d107      	bne.n	80168b6 <__cvt+0x9a>
 80168a6:	eeb5 8b40 	vcmp.f64	d8, #0.0
 80168aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168ae:	bf1c      	itt	ne
 80168b0:	f1c4 0401 	rsbne	r4, r4, #1
 80168b4:	6034      	strne	r4, [r6, #0]
 80168b6:	6833      	ldr	r3, [r6, #0]
 80168b8:	441a      	add	r2, r3
 80168ba:	e7db      	b.n	8016874 <__cvt+0x58>
 80168bc:	1c5c      	adds	r4, r3, #1
 80168be:	9403      	str	r4, [sp, #12]
 80168c0:	7019      	strb	r1, [r3, #0]
 80168c2:	e7de      	b.n	8016882 <__cvt+0x66>

080168c4 <__exponent>:
 80168c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80168c6:	2900      	cmp	r1, #0
 80168c8:	bfba      	itte	lt
 80168ca:	4249      	neglt	r1, r1
 80168cc:	232d      	movlt	r3, #45	@ 0x2d
 80168ce:	232b      	movge	r3, #43	@ 0x2b
 80168d0:	2909      	cmp	r1, #9
 80168d2:	7002      	strb	r2, [r0, #0]
 80168d4:	7043      	strb	r3, [r0, #1]
 80168d6:	dd29      	ble.n	801692c <__exponent+0x68>
 80168d8:	f10d 0307 	add.w	r3, sp, #7
 80168dc:	461d      	mov	r5, r3
 80168de:	270a      	movs	r7, #10
 80168e0:	461a      	mov	r2, r3
 80168e2:	fbb1 f6f7 	udiv	r6, r1, r7
 80168e6:	fb07 1416 	mls	r4, r7, r6, r1
 80168ea:	3430      	adds	r4, #48	@ 0x30
 80168ec:	f802 4c01 	strb.w	r4, [r2, #-1]
 80168f0:	460c      	mov	r4, r1
 80168f2:	2c63      	cmp	r4, #99	@ 0x63
 80168f4:	f103 33ff 	add.w	r3, r3, #4294967295
 80168f8:	4631      	mov	r1, r6
 80168fa:	dcf1      	bgt.n	80168e0 <__exponent+0x1c>
 80168fc:	3130      	adds	r1, #48	@ 0x30
 80168fe:	1e94      	subs	r4, r2, #2
 8016900:	f803 1c01 	strb.w	r1, [r3, #-1]
 8016904:	1c41      	adds	r1, r0, #1
 8016906:	4623      	mov	r3, r4
 8016908:	42ab      	cmp	r3, r5
 801690a:	d30a      	bcc.n	8016922 <__exponent+0x5e>
 801690c:	f10d 0309 	add.w	r3, sp, #9
 8016910:	1a9b      	subs	r3, r3, r2
 8016912:	42ac      	cmp	r4, r5
 8016914:	bf88      	it	hi
 8016916:	2300      	movhi	r3, #0
 8016918:	3302      	adds	r3, #2
 801691a:	4403      	add	r3, r0
 801691c:	1a18      	subs	r0, r3, r0
 801691e:	b003      	add	sp, #12
 8016920:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016922:	f813 6b01 	ldrb.w	r6, [r3], #1
 8016926:	f801 6f01 	strb.w	r6, [r1, #1]!
 801692a:	e7ed      	b.n	8016908 <__exponent+0x44>
 801692c:	2330      	movs	r3, #48	@ 0x30
 801692e:	3130      	adds	r1, #48	@ 0x30
 8016930:	7083      	strb	r3, [r0, #2]
 8016932:	70c1      	strb	r1, [r0, #3]
 8016934:	1d03      	adds	r3, r0, #4
 8016936:	e7f1      	b.n	801691c <__exponent+0x58>

08016938 <_printf_float>:
 8016938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801693c:	b08d      	sub	sp, #52	@ 0x34
 801693e:	460c      	mov	r4, r1
 8016940:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8016944:	4616      	mov	r6, r2
 8016946:	461f      	mov	r7, r3
 8016948:	4605      	mov	r5, r0
 801694a:	f000 fce9 	bl	8017320 <_localeconv_r>
 801694e:	f8d0 b000 	ldr.w	fp, [r0]
 8016952:	4658      	mov	r0, fp
 8016954:	f7e9 fd3c 	bl	80003d0 <strlen>
 8016958:	2300      	movs	r3, #0
 801695a:	930a      	str	r3, [sp, #40]	@ 0x28
 801695c:	f8d8 3000 	ldr.w	r3, [r8]
 8016960:	f894 9018 	ldrb.w	r9, [r4, #24]
 8016964:	6822      	ldr	r2, [r4, #0]
 8016966:	9005      	str	r0, [sp, #20]
 8016968:	3307      	adds	r3, #7
 801696a:	f023 0307 	bic.w	r3, r3, #7
 801696e:	f103 0108 	add.w	r1, r3, #8
 8016972:	f8c8 1000 	str.w	r1, [r8]
 8016976:	ed93 0b00 	vldr	d0, [r3]
 801697a:	ed9f 6b97 	vldr	d6, [pc, #604]	@ 8016bd8 <_printf_float+0x2a0>
 801697e:	eeb0 7bc0 	vabs.f64	d7, d0
 8016982:	eeb4 7b46 	vcmp.f64	d7, d6
 8016986:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801698a:	ed84 0b12 	vstr	d0, [r4, #72]	@ 0x48
 801698e:	dd24      	ble.n	80169da <_printf_float+0xa2>
 8016990:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
 8016994:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016998:	d502      	bpl.n	80169a0 <_printf_float+0x68>
 801699a:	232d      	movs	r3, #45	@ 0x2d
 801699c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80169a0:	498f      	ldr	r1, [pc, #572]	@ (8016be0 <_printf_float+0x2a8>)
 80169a2:	4b90      	ldr	r3, [pc, #576]	@ (8016be4 <_printf_float+0x2ac>)
 80169a4:	f1b9 0f47 	cmp.w	r9, #71	@ 0x47
 80169a8:	bf94      	ite	ls
 80169aa:	4688      	movls	r8, r1
 80169ac:	4698      	movhi	r8, r3
 80169ae:	f022 0204 	bic.w	r2, r2, #4
 80169b2:	2303      	movs	r3, #3
 80169b4:	6123      	str	r3, [r4, #16]
 80169b6:	6022      	str	r2, [r4, #0]
 80169b8:	f04f 0a00 	mov.w	sl, #0
 80169bc:	9700      	str	r7, [sp, #0]
 80169be:	4633      	mov	r3, r6
 80169c0:	aa0b      	add	r2, sp, #44	@ 0x2c
 80169c2:	4621      	mov	r1, r4
 80169c4:	4628      	mov	r0, r5
 80169c6:	f000 f9d1 	bl	8016d6c <_printf_common>
 80169ca:	3001      	adds	r0, #1
 80169cc:	f040 8089 	bne.w	8016ae2 <_printf_float+0x1aa>
 80169d0:	f04f 30ff 	mov.w	r0, #4294967295
 80169d4:	b00d      	add	sp, #52	@ 0x34
 80169d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80169da:	eeb4 0b40 	vcmp.f64	d0, d0
 80169de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169e2:	d709      	bvc.n	80169f8 <_printf_float+0xc0>
 80169e4:	ee10 3a90 	vmov	r3, s1
 80169e8:	2b00      	cmp	r3, #0
 80169ea:	bfbc      	itt	lt
 80169ec:	232d      	movlt	r3, #45	@ 0x2d
 80169ee:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80169f2:	497d      	ldr	r1, [pc, #500]	@ (8016be8 <_printf_float+0x2b0>)
 80169f4:	4b7d      	ldr	r3, [pc, #500]	@ (8016bec <_printf_float+0x2b4>)
 80169f6:	e7d5      	b.n	80169a4 <_printf_float+0x6c>
 80169f8:	6863      	ldr	r3, [r4, #4]
 80169fa:	1c59      	adds	r1, r3, #1
 80169fc:	f009 0adf 	and.w	sl, r9, #223	@ 0xdf
 8016a00:	d139      	bne.n	8016a76 <_printf_float+0x13e>
 8016a02:	2306      	movs	r3, #6
 8016a04:	6063      	str	r3, [r4, #4]
 8016a06:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8016a0a:	2300      	movs	r3, #0
 8016a0c:	6022      	str	r2, [r4, #0]
 8016a0e:	9303      	str	r3, [sp, #12]
 8016a10:	ab0a      	add	r3, sp, #40	@ 0x28
 8016a12:	e9cd 9301 	strd	r9, r3, [sp, #4]
 8016a16:	ab09      	add	r3, sp, #36	@ 0x24
 8016a18:	9300      	str	r3, [sp, #0]
 8016a1a:	6861      	ldr	r1, [r4, #4]
 8016a1c:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8016a20:	4628      	mov	r0, r5
 8016a22:	f7ff fefb 	bl	801681c <__cvt>
 8016a26:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8016a2a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016a2c:	4680      	mov	r8, r0
 8016a2e:	d129      	bne.n	8016a84 <_printf_float+0x14c>
 8016a30:	1cc8      	adds	r0, r1, #3
 8016a32:	db02      	blt.n	8016a3a <_printf_float+0x102>
 8016a34:	6863      	ldr	r3, [r4, #4]
 8016a36:	4299      	cmp	r1, r3
 8016a38:	dd41      	ble.n	8016abe <_printf_float+0x186>
 8016a3a:	f1a9 0902 	sub.w	r9, r9, #2
 8016a3e:	fa5f f989 	uxtb.w	r9, r9
 8016a42:	3901      	subs	r1, #1
 8016a44:	464a      	mov	r2, r9
 8016a46:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8016a4a:	9109      	str	r1, [sp, #36]	@ 0x24
 8016a4c:	f7ff ff3a 	bl	80168c4 <__exponent>
 8016a50:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8016a52:	1813      	adds	r3, r2, r0
 8016a54:	2a01      	cmp	r2, #1
 8016a56:	4682      	mov	sl, r0
 8016a58:	6123      	str	r3, [r4, #16]
 8016a5a:	dc02      	bgt.n	8016a62 <_printf_float+0x12a>
 8016a5c:	6822      	ldr	r2, [r4, #0]
 8016a5e:	07d2      	lsls	r2, r2, #31
 8016a60:	d501      	bpl.n	8016a66 <_printf_float+0x12e>
 8016a62:	3301      	adds	r3, #1
 8016a64:	6123      	str	r3, [r4, #16]
 8016a66:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8016a6a:	2b00      	cmp	r3, #0
 8016a6c:	d0a6      	beq.n	80169bc <_printf_float+0x84>
 8016a6e:	232d      	movs	r3, #45	@ 0x2d
 8016a70:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8016a74:	e7a2      	b.n	80169bc <_printf_float+0x84>
 8016a76:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8016a7a:	d1c4      	bne.n	8016a06 <_printf_float+0xce>
 8016a7c:	2b00      	cmp	r3, #0
 8016a7e:	d1c2      	bne.n	8016a06 <_printf_float+0xce>
 8016a80:	2301      	movs	r3, #1
 8016a82:	e7bf      	b.n	8016a04 <_printf_float+0xcc>
 8016a84:	f1b9 0f65 	cmp.w	r9, #101	@ 0x65
 8016a88:	d9db      	bls.n	8016a42 <_printf_float+0x10a>
 8016a8a:	f1b9 0f66 	cmp.w	r9, #102	@ 0x66
 8016a8e:	d118      	bne.n	8016ac2 <_printf_float+0x18a>
 8016a90:	2900      	cmp	r1, #0
 8016a92:	6863      	ldr	r3, [r4, #4]
 8016a94:	dd0b      	ble.n	8016aae <_printf_float+0x176>
 8016a96:	6121      	str	r1, [r4, #16]
 8016a98:	b913      	cbnz	r3, 8016aa0 <_printf_float+0x168>
 8016a9a:	6822      	ldr	r2, [r4, #0]
 8016a9c:	07d0      	lsls	r0, r2, #31
 8016a9e:	d502      	bpl.n	8016aa6 <_printf_float+0x16e>
 8016aa0:	3301      	adds	r3, #1
 8016aa2:	440b      	add	r3, r1
 8016aa4:	6123      	str	r3, [r4, #16]
 8016aa6:	65a1      	str	r1, [r4, #88]	@ 0x58
 8016aa8:	f04f 0a00 	mov.w	sl, #0
 8016aac:	e7db      	b.n	8016a66 <_printf_float+0x12e>
 8016aae:	b913      	cbnz	r3, 8016ab6 <_printf_float+0x17e>
 8016ab0:	6822      	ldr	r2, [r4, #0]
 8016ab2:	07d2      	lsls	r2, r2, #31
 8016ab4:	d501      	bpl.n	8016aba <_printf_float+0x182>
 8016ab6:	3302      	adds	r3, #2
 8016ab8:	e7f4      	b.n	8016aa4 <_printf_float+0x16c>
 8016aba:	2301      	movs	r3, #1
 8016abc:	e7f2      	b.n	8016aa4 <_printf_float+0x16c>
 8016abe:	f04f 0967 	mov.w	r9, #103	@ 0x67
 8016ac2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016ac4:	4299      	cmp	r1, r3
 8016ac6:	db05      	blt.n	8016ad4 <_printf_float+0x19c>
 8016ac8:	6823      	ldr	r3, [r4, #0]
 8016aca:	6121      	str	r1, [r4, #16]
 8016acc:	07d8      	lsls	r0, r3, #31
 8016ace:	d5ea      	bpl.n	8016aa6 <_printf_float+0x16e>
 8016ad0:	1c4b      	adds	r3, r1, #1
 8016ad2:	e7e7      	b.n	8016aa4 <_printf_float+0x16c>
 8016ad4:	2900      	cmp	r1, #0
 8016ad6:	bfd4      	ite	le
 8016ad8:	f1c1 0202 	rsble	r2, r1, #2
 8016adc:	2201      	movgt	r2, #1
 8016ade:	4413      	add	r3, r2
 8016ae0:	e7e0      	b.n	8016aa4 <_printf_float+0x16c>
 8016ae2:	6823      	ldr	r3, [r4, #0]
 8016ae4:	055a      	lsls	r2, r3, #21
 8016ae6:	d407      	bmi.n	8016af8 <_printf_float+0x1c0>
 8016ae8:	6923      	ldr	r3, [r4, #16]
 8016aea:	4642      	mov	r2, r8
 8016aec:	4631      	mov	r1, r6
 8016aee:	4628      	mov	r0, r5
 8016af0:	47b8      	blx	r7
 8016af2:	3001      	adds	r0, #1
 8016af4:	d12a      	bne.n	8016b4c <_printf_float+0x214>
 8016af6:	e76b      	b.n	80169d0 <_printf_float+0x98>
 8016af8:	f1b9 0f65 	cmp.w	r9, #101	@ 0x65
 8016afc:	f240 80e0 	bls.w	8016cc0 <_printf_float+0x388>
 8016b00:	ed94 7b12 	vldr	d7, [r4, #72]	@ 0x48
 8016b04:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8016b08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b0c:	d133      	bne.n	8016b76 <_printf_float+0x23e>
 8016b0e:	4a38      	ldr	r2, [pc, #224]	@ (8016bf0 <_printf_float+0x2b8>)
 8016b10:	2301      	movs	r3, #1
 8016b12:	4631      	mov	r1, r6
 8016b14:	4628      	mov	r0, r5
 8016b16:	47b8      	blx	r7
 8016b18:	3001      	adds	r0, #1
 8016b1a:	f43f af59 	beq.w	80169d0 <_printf_float+0x98>
 8016b1e:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8016b22:	4543      	cmp	r3, r8
 8016b24:	db02      	blt.n	8016b2c <_printf_float+0x1f4>
 8016b26:	6823      	ldr	r3, [r4, #0]
 8016b28:	07d8      	lsls	r0, r3, #31
 8016b2a:	d50f      	bpl.n	8016b4c <_printf_float+0x214>
 8016b2c:	9b05      	ldr	r3, [sp, #20]
 8016b2e:	465a      	mov	r2, fp
 8016b30:	4631      	mov	r1, r6
 8016b32:	4628      	mov	r0, r5
 8016b34:	47b8      	blx	r7
 8016b36:	3001      	adds	r0, #1
 8016b38:	f43f af4a 	beq.w	80169d0 <_printf_float+0x98>
 8016b3c:	f04f 0900 	mov.w	r9, #0
 8016b40:	f108 38ff 	add.w	r8, r8, #4294967295
 8016b44:	f104 0a1a 	add.w	sl, r4, #26
 8016b48:	45c8      	cmp	r8, r9
 8016b4a:	dc09      	bgt.n	8016b60 <_printf_float+0x228>
 8016b4c:	6823      	ldr	r3, [r4, #0]
 8016b4e:	079b      	lsls	r3, r3, #30
 8016b50:	f100 8107 	bmi.w	8016d62 <_printf_float+0x42a>
 8016b54:	68e0      	ldr	r0, [r4, #12]
 8016b56:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016b58:	4298      	cmp	r0, r3
 8016b5a:	bfb8      	it	lt
 8016b5c:	4618      	movlt	r0, r3
 8016b5e:	e739      	b.n	80169d4 <_printf_float+0x9c>
 8016b60:	2301      	movs	r3, #1
 8016b62:	4652      	mov	r2, sl
 8016b64:	4631      	mov	r1, r6
 8016b66:	4628      	mov	r0, r5
 8016b68:	47b8      	blx	r7
 8016b6a:	3001      	adds	r0, #1
 8016b6c:	f43f af30 	beq.w	80169d0 <_printf_float+0x98>
 8016b70:	f109 0901 	add.w	r9, r9, #1
 8016b74:	e7e8      	b.n	8016b48 <_printf_float+0x210>
 8016b76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016b78:	2b00      	cmp	r3, #0
 8016b7a:	dc3b      	bgt.n	8016bf4 <_printf_float+0x2bc>
 8016b7c:	4a1c      	ldr	r2, [pc, #112]	@ (8016bf0 <_printf_float+0x2b8>)
 8016b7e:	2301      	movs	r3, #1
 8016b80:	4631      	mov	r1, r6
 8016b82:	4628      	mov	r0, r5
 8016b84:	47b8      	blx	r7
 8016b86:	3001      	adds	r0, #1
 8016b88:	f43f af22 	beq.w	80169d0 <_printf_float+0x98>
 8016b8c:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8016b90:	ea59 0303 	orrs.w	r3, r9, r3
 8016b94:	d102      	bne.n	8016b9c <_printf_float+0x264>
 8016b96:	6823      	ldr	r3, [r4, #0]
 8016b98:	07d9      	lsls	r1, r3, #31
 8016b9a:	d5d7      	bpl.n	8016b4c <_printf_float+0x214>
 8016b9c:	9b05      	ldr	r3, [sp, #20]
 8016b9e:	465a      	mov	r2, fp
 8016ba0:	4631      	mov	r1, r6
 8016ba2:	4628      	mov	r0, r5
 8016ba4:	47b8      	blx	r7
 8016ba6:	3001      	adds	r0, #1
 8016ba8:	f43f af12 	beq.w	80169d0 <_printf_float+0x98>
 8016bac:	f04f 0a00 	mov.w	sl, #0
 8016bb0:	f104 0b1a 	add.w	fp, r4, #26
 8016bb4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016bb6:	425b      	negs	r3, r3
 8016bb8:	4553      	cmp	r3, sl
 8016bba:	dc01      	bgt.n	8016bc0 <_printf_float+0x288>
 8016bbc:	464b      	mov	r3, r9
 8016bbe:	e794      	b.n	8016aea <_printf_float+0x1b2>
 8016bc0:	2301      	movs	r3, #1
 8016bc2:	465a      	mov	r2, fp
 8016bc4:	4631      	mov	r1, r6
 8016bc6:	4628      	mov	r0, r5
 8016bc8:	47b8      	blx	r7
 8016bca:	3001      	adds	r0, #1
 8016bcc:	f43f af00 	beq.w	80169d0 <_printf_float+0x98>
 8016bd0:	f10a 0a01 	add.w	sl, sl, #1
 8016bd4:	e7ee      	b.n	8016bb4 <_printf_float+0x27c>
 8016bd6:	bf00      	nop
 8016bd8:	ffffffff 	.word	0xffffffff
 8016bdc:	7fefffff 	.word	0x7fefffff
 8016be0:	0801b1d9 	.word	0x0801b1d9
 8016be4:	0801b1dd 	.word	0x0801b1dd
 8016be8:	0801b1e1 	.word	0x0801b1e1
 8016bec:	0801b1e5 	.word	0x0801b1e5
 8016bf0:	0801b1e9 	.word	0x0801b1e9
 8016bf4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8016bf6:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8016bfa:	4553      	cmp	r3, sl
 8016bfc:	bfa8      	it	ge
 8016bfe:	4653      	movge	r3, sl
 8016c00:	2b00      	cmp	r3, #0
 8016c02:	4699      	mov	r9, r3
 8016c04:	dc37      	bgt.n	8016c76 <_printf_float+0x33e>
 8016c06:	2300      	movs	r3, #0
 8016c08:	9307      	str	r3, [sp, #28]
 8016c0a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8016c0e:	f104 021a 	add.w	r2, r4, #26
 8016c12:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8016c14:	9907      	ldr	r1, [sp, #28]
 8016c16:	9306      	str	r3, [sp, #24]
 8016c18:	eba3 0309 	sub.w	r3, r3, r9
 8016c1c:	428b      	cmp	r3, r1
 8016c1e:	dc31      	bgt.n	8016c84 <_printf_float+0x34c>
 8016c20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016c22:	459a      	cmp	sl, r3
 8016c24:	dc3b      	bgt.n	8016c9e <_printf_float+0x366>
 8016c26:	6823      	ldr	r3, [r4, #0]
 8016c28:	07da      	lsls	r2, r3, #31
 8016c2a:	d438      	bmi.n	8016c9e <_printf_float+0x366>
 8016c2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016c2e:	ebaa 0903 	sub.w	r9, sl, r3
 8016c32:	9b06      	ldr	r3, [sp, #24]
 8016c34:	ebaa 0303 	sub.w	r3, sl, r3
 8016c38:	4599      	cmp	r9, r3
 8016c3a:	bfa8      	it	ge
 8016c3c:	4699      	movge	r9, r3
 8016c3e:	f1b9 0f00 	cmp.w	r9, #0
 8016c42:	dc34      	bgt.n	8016cae <_printf_float+0x376>
 8016c44:	f04f 0800 	mov.w	r8, #0
 8016c48:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8016c4c:	f104 0b1a 	add.w	fp, r4, #26
 8016c50:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016c52:	ebaa 0303 	sub.w	r3, sl, r3
 8016c56:	eba3 0309 	sub.w	r3, r3, r9
 8016c5a:	4543      	cmp	r3, r8
 8016c5c:	f77f af76 	ble.w	8016b4c <_printf_float+0x214>
 8016c60:	2301      	movs	r3, #1
 8016c62:	465a      	mov	r2, fp
 8016c64:	4631      	mov	r1, r6
 8016c66:	4628      	mov	r0, r5
 8016c68:	47b8      	blx	r7
 8016c6a:	3001      	adds	r0, #1
 8016c6c:	f43f aeb0 	beq.w	80169d0 <_printf_float+0x98>
 8016c70:	f108 0801 	add.w	r8, r8, #1
 8016c74:	e7ec      	b.n	8016c50 <_printf_float+0x318>
 8016c76:	4642      	mov	r2, r8
 8016c78:	4631      	mov	r1, r6
 8016c7a:	4628      	mov	r0, r5
 8016c7c:	47b8      	blx	r7
 8016c7e:	3001      	adds	r0, #1
 8016c80:	d1c1      	bne.n	8016c06 <_printf_float+0x2ce>
 8016c82:	e6a5      	b.n	80169d0 <_printf_float+0x98>
 8016c84:	2301      	movs	r3, #1
 8016c86:	4631      	mov	r1, r6
 8016c88:	4628      	mov	r0, r5
 8016c8a:	9206      	str	r2, [sp, #24]
 8016c8c:	47b8      	blx	r7
 8016c8e:	3001      	adds	r0, #1
 8016c90:	f43f ae9e 	beq.w	80169d0 <_printf_float+0x98>
 8016c94:	9b07      	ldr	r3, [sp, #28]
 8016c96:	9a06      	ldr	r2, [sp, #24]
 8016c98:	3301      	adds	r3, #1
 8016c9a:	9307      	str	r3, [sp, #28]
 8016c9c:	e7b9      	b.n	8016c12 <_printf_float+0x2da>
 8016c9e:	9b05      	ldr	r3, [sp, #20]
 8016ca0:	465a      	mov	r2, fp
 8016ca2:	4631      	mov	r1, r6
 8016ca4:	4628      	mov	r0, r5
 8016ca6:	47b8      	blx	r7
 8016ca8:	3001      	adds	r0, #1
 8016caa:	d1bf      	bne.n	8016c2c <_printf_float+0x2f4>
 8016cac:	e690      	b.n	80169d0 <_printf_float+0x98>
 8016cae:	9a06      	ldr	r2, [sp, #24]
 8016cb0:	464b      	mov	r3, r9
 8016cb2:	4442      	add	r2, r8
 8016cb4:	4631      	mov	r1, r6
 8016cb6:	4628      	mov	r0, r5
 8016cb8:	47b8      	blx	r7
 8016cba:	3001      	adds	r0, #1
 8016cbc:	d1c2      	bne.n	8016c44 <_printf_float+0x30c>
 8016cbe:	e687      	b.n	80169d0 <_printf_float+0x98>
 8016cc0:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8016cc4:	f1b9 0f01 	cmp.w	r9, #1
 8016cc8:	dc01      	bgt.n	8016cce <_printf_float+0x396>
 8016cca:	07db      	lsls	r3, r3, #31
 8016ccc:	d536      	bpl.n	8016d3c <_printf_float+0x404>
 8016cce:	2301      	movs	r3, #1
 8016cd0:	4642      	mov	r2, r8
 8016cd2:	4631      	mov	r1, r6
 8016cd4:	4628      	mov	r0, r5
 8016cd6:	47b8      	blx	r7
 8016cd8:	3001      	adds	r0, #1
 8016cda:	f43f ae79 	beq.w	80169d0 <_printf_float+0x98>
 8016cde:	9b05      	ldr	r3, [sp, #20]
 8016ce0:	465a      	mov	r2, fp
 8016ce2:	4631      	mov	r1, r6
 8016ce4:	4628      	mov	r0, r5
 8016ce6:	47b8      	blx	r7
 8016ce8:	3001      	adds	r0, #1
 8016cea:	f43f ae71 	beq.w	80169d0 <_printf_float+0x98>
 8016cee:	ed94 7b12 	vldr	d7, [r4, #72]	@ 0x48
 8016cf2:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8016cf6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cfa:	f109 39ff 	add.w	r9, r9, #4294967295
 8016cfe:	d018      	beq.n	8016d32 <_printf_float+0x3fa>
 8016d00:	464b      	mov	r3, r9
 8016d02:	f108 0201 	add.w	r2, r8, #1
 8016d06:	4631      	mov	r1, r6
 8016d08:	4628      	mov	r0, r5
 8016d0a:	47b8      	blx	r7
 8016d0c:	3001      	adds	r0, #1
 8016d0e:	d10c      	bne.n	8016d2a <_printf_float+0x3f2>
 8016d10:	e65e      	b.n	80169d0 <_printf_float+0x98>
 8016d12:	2301      	movs	r3, #1
 8016d14:	465a      	mov	r2, fp
 8016d16:	4631      	mov	r1, r6
 8016d18:	4628      	mov	r0, r5
 8016d1a:	47b8      	blx	r7
 8016d1c:	3001      	adds	r0, #1
 8016d1e:	f43f ae57 	beq.w	80169d0 <_printf_float+0x98>
 8016d22:	f108 0801 	add.w	r8, r8, #1
 8016d26:	45c8      	cmp	r8, r9
 8016d28:	dbf3      	blt.n	8016d12 <_printf_float+0x3da>
 8016d2a:	4653      	mov	r3, sl
 8016d2c:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8016d30:	e6dc      	b.n	8016aec <_printf_float+0x1b4>
 8016d32:	f04f 0800 	mov.w	r8, #0
 8016d36:	f104 0b1a 	add.w	fp, r4, #26
 8016d3a:	e7f4      	b.n	8016d26 <_printf_float+0x3ee>
 8016d3c:	2301      	movs	r3, #1
 8016d3e:	4642      	mov	r2, r8
 8016d40:	e7e1      	b.n	8016d06 <_printf_float+0x3ce>
 8016d42:	2301      	movs	r3, #1
 8016d44:	464a      	mov	r2, r9
 8016d46:	4631      	mov	r1, r6
 8016d48:	4628      	mov	r0, r5
 8016d4a:	47b8      	blx	r7
 8016d4c:	3001      	adds	r0, #1
 8016d4e:	f43f ae3f 	beq.w	80169d0 <_printf_float+0x98>
 8016d52:	f108 0801 	add.w	r8, r8, #1
 8016d56:	68e3      	ldr	r3, [r4, #12]
 8016d58:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8016d5a:	1a5b      	subs	r3, r3, r1
 8016d5c:	4543      	cmp	r3, r8
 8016d5e:	dcf0      	bgt.n	8016d42 <_printf_float+0x40a>
 8016d60:	e6f8      	b.n	8016b54 <_printf_float+0x21c>
 8016d62:	f04f 0800 	mov.w	r8, #0
 8016d66:	f104 0919 	add.w	r9, r4, #25
 8016d6a:	e7f4      	b.n	8016d56 <_printf_float+0x41e>

08016d6c <_printf_common>:
 8016d6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016d70:	4616      	mov	r6, r2
 8016d72:	4698      	mov	r8, r3
 8016d74:	688a      	ldr	r2, [r1, #8]
 8016d76:	690b      	ldr	r3, [r1, #16]
 8016d78:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8016d7c:	4293      	cmp	r3, r2
 8016d7e:	bfb8      	it	lt
 8016d80:	4613      	movlt	r3, r2
 8016d82:	6033      	str	r3, [r6, #0]
 8016d84:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8016d88:	4607      	mov	r7, r0
 8016d8a:	460c      	mov	r4, r1
 8016d8c:	b10a      	cbz	r2, 8016d92 <_printf_common+0x26>
 8016d8e:	3301      	adds	r3, #1
 8016d90:	6033      	str	r3, [r6, #0]
 8016d92:	6823      	ldr	r3, [r4, #0]
 8016d94:	0699      	lsls	r1, r3, #26
 8016d96:	bf42      	ittt	mi
 8016d98:	6833      	ldrmi	r3, [r6, #0]
 8016d9a:	3302      	addmi	r3, #2
 8016d9c:	6033      	strmi	r3, [r6, #0]
 8016d9e:	6825      	ldr	r5, [r4, #0]
 8016da0:	f015 0506 	ands.w	r5, r5, #6
 8016da4:	d106      	bne.n	8016db4 <_printf_common+0x48>
 8016da6:	f104 0a19 	add.w	sl, r4, #25
 8016daa:	68e3      	ldr	r3, [r4, #12]
 8016dac:	6832      	ldr	r2, [r6, #0]
 8016dae:	1a9b      	subs	r3, r3, r2
 8016db0:	42ab      	cmp	r3, r5
 8016db2:	dc26      	bgt.n	8016e02 <_printf_common+0x96>
 8016db4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8016db8:	6822      	ldr	r2, [r4, #0]
 8016dba:	3b00      	subs	r3, #0
 8016dbc:	bf18      	it	ne
 8016dbe:	2301      	movne	r3, #1
 8016dc0:	0692      	lsls	r2, r2, #26
 8016dc2:	d42b      	bmi.n	8016e1c <_printf_common+0xb0>
 8016dc4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8016dc8:	4641      	mov	r1, r8
 8016dca:	4638      	mov	r0, r7
 8016dcc:	47c8      	blx	r9
 8016dce:	3001      	adds	r0, #1
 8016dd0:	d01e      	beq.n	8016e10 <_printf_common+0xa4>
 8016dd2:	6823      	ldr	r3, [r4, #0]
 8016dd4:	6922      	ldr	r2, [r4, #16]
 8016dd6:	f003 0306 	and.w	r3, r3, #6
 8016dda:	2b04      	cmp	r3, #4
 8016ddc:	bf02      	ittt	eq
 8016dde:	68e5      	ldreq	r5, [r4, #12]
 8016de0:	6833      	ldreq	r3, [r6, #0]
 8016de2:	1aed      	subeq	r5, r5, r3
 8016de4:	68a3      	ldr	r3, [r4, #8]
 8016de6:	bf0c      	ite	eq
 8016de8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8016dec:	2500      	movne	r5, #0
 8016dee:	4293      	cmp	r3, r2
 8016df0:	bfc4      	itt	gt
 8016df2:	1a9b      	subgt	r3, r3, r2
 8016df4:	18ed      	addgt	r5, r5, r3
 8016df6:	2600      	movs	r6, #0
 8016df8:	341a      	adds	r4, #26
 8016dfa:	42b5      	cmp	r5, r6
 8016dfc:	d11a      	bne.n	8016e34 <_printf_common+0xc8>
 8016dfe:	2000      	movs	r0, #0
 8016e00:	e008      	b.n	8016e14 <_printf_common+0xa8>
 8016e02:	2301      	movs	r3, #1
 8016e04:	4652      	mov	r2, sl
 8016e06:	4641      	mov	r1, r8
 8016e08:	4638      	mov	r0, r7
 8016e0a:	47c8      	blx	r9
 8016e0c:	3001      	adds	r0, #1
 8016e0e:	d103      	bne.n	8016e18 <_printf_common+0xac>
 8016e10:	f04f 30ff 	mov.w	r0, #4294967295
 8016e14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016e18:	3501      	adds	r5, #1
 8016e1a:	e7c6      	b.n	8016daa <_printf_common+0x3e>
 8016e1c:	18e1      	adds	r1, r4, r3
 8016e1e:	1c5a      	adds	r2, r3, #1
 8016e20:	2030      	movs	r0, #48	@ 0x30
 8016e22:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8016e26:	4422      	add	r2, r4
 8016e28:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8016e2c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8016e30:	3302      	adds	r3, #2
 8016e32:	e7c7      	b.n	8016dc4 <_printf_common+0x58>
 8016e34:	2301      	movs	r3, #1
 8016e36:	4622      	mov	r2, r4
 8016e38:	4641      	mov	r1, r8
 8016e3a:	4638      	mov	r0, r7
 8016e3c:	47c8      	blx	r9
 8016e3e:	3001      	adds	r0, #1
 8016e40:	d0e6      	beq.n	8016e10 <_printf_common+0xa4>
 8016e42:	3601      	adds	r6, #1
 8016e44:	e7d9      	b.n	8016dfa <_printf_common+0x8e>
	...

08016e48 <_printf_i>:
 8016e48:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8016e4c:	7e0f      	ldrb	r7, [r1, #24]
 8016e4e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8016e50:	2f78      	cmp	r7, #120	@ 0x78
 8016e52:	4691      	mov	r9, r2
 8016e54:	4680      	mov	r8, r0
 8016e56:	460c      	mov	r4, r1
 8016e58:	469a      	mov	sl, r3
 8016e5a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8016e5e:	d807      	bhi.n	8016e70 <_printf_i+0x28>
 8016e60:	2f62      	cmp	r7, #98	@ 0x62
 8016e62:	d80a      	bhi.n	8016e7a <_printf_i+0x32>
 8016e64:	2f00      	cmp	r7, #0
 8016e66:	f000 80d2 	beq.w	801700e <_printf_i+0x1c6>
 8016e6a:	2f58      	cmp	r7, #88	@ 0x58
 8016e6c:	f000 80b9 	beq.w	8016fe2 <_printf_i+0x19a>
 8016e70:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8016e74:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8016e78:	e03a      	b.n	8016ef0 <_printf_i+0xa8>
 8016e7a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8016e7e:	2b15      	cmp	r3, #21
 8016e80:	d8f6      	bhi.n	8016e70 <_printf_i+0x28>
 8016e82:	a101      	add	r1, pc, #4	@ (adr r1, 8016e88 <_printf_i+0x40>)
 8016e84:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8016e88:	08016ee1 	.word	0x08016ee1
 8016e8c:	08016ef5 	.word	0x08016ef5
 8016e90:	08016e71 	.word	0x08016e71
 8016e94:	08016e71 	.word	0x08016e71
 8016e98:	08016e71 	.word	0x08016e71
 8016e9c:	08016e71 	.word	0x08016e71
 8016ea0:	08016ef5 	.word	0x08016ef5
 8016ea4:	08016e71 	.word	0x08016e71
 8016ea8:	08016e71 	.word	0x08016e71
 8016eac:	08016e71 	.word	0x08016e71
 8016eb0:	08016e71 	.word	0x08016e71
 8016eb4:	08016ff5 	.word	0x08016ff5
 8016eb8:	08016f1f 	.word	0x08016f1f
 8016ebc:	08016faf 	.word	0x08016faf
 8016ec0:	08016e71 	.word	0x08016e71
 8016ec4:	08016e71 	.word	0x08016e71
 8016ec8:	08017017 	.word	0x08017017
 8016ecc:	08016e71 	.word	0x08016e71
 8016ed0:	08016f1f 	.word	0x08016f1f
 8016ed4:	08016e71 	.word	0x08016e71
 8016ed8:	08016e71 	.word	0x08016e71
 8016edc:	08016fb7 	.word	0x08016fb7
 8016ee0:	6833      	ldr	r3, [r6, #0]
 8016ee2:	1d1a      	adds	r2, r3, #4
 8016ee4:	681b      	ldr	r3, [r3, #0]
 8016ee6:	6032      	str	r2, [r6, #0]
 8016ee8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8016eec:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8016ef0:	2301      	movs	r3, #1
 8016ef2:	e09d      	b.n	8017030 <_printf_i+0x1e8>
 8016ef4:	6833      	ldr	r3, [r6, #0]
 8016ef6:	6820      	ldr	r0, [r4, #0]
 8016ef8:	1d19      	adds	r1, r3, #4
 8016efa:	6031      	str	r1, [r6, #0]
 8016efc:	0606      	lsls	r6, r0, #24
 8016efe:	d501      	bpl.n	8016f04 <_printf_i+0xbc>
 8016f00:	681d      	ldr	r5, [r3, #0]
 8016f02:	e003      	b.n	8016f0c <_printf_i+0xc4>
 8016f04:	0645      	lsls	r5, r0, #25
 8016f06:	d5fb      	bpl.n	8016f00 <_printf_i+0xb8>
 8016f08:	f9b3 5000 	ldrsh.w	r5, [r3]
 8016f0c:	2d00      	cmp	r5, #0
 8016f0e:	da03      	bge.n	8016f18 <_printf_i+0xd0>
 8016f10:	232d      	movs	r3, #45	@ 0x2d
 8016f12:	426d      	negs	r5, r5
 8016f14:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8016f18:	4859      	ldr	r0, [pc, #356]	@ (8017080 <_printf_i+0x238>)
 8016f1a:	230a      	movs	r3, #10
 8016f1c:	e011      	b.n	8016f42 <_printf_i+0xfa>
 8016f1e:	6821      	ldr	r1, [r4, #0]
 8016f20:	6833      	ldr	r3, [r6, #0]
 8016f22:	0608      	lsls	r0, r1, #24
 8016f24:	f853 5b04 	ldr.w	r5, [r3], #4
 8016f28:	d402      	bmi.n	8016f30 <_printf_i+0xe8>
 8016f2a:	0649      	lsls	r1, r1, #25
 8016f2c:	bf48      	it	mi
 8016f2e:	b2ad      	uxthmi	r5, r5
 8016f30:	2f6f      	cmp	r7, #111	@ 0x6f
 8016f32:	4853      	ldr	r0, [pc, #332]	@ (8017080 <_printf_i+0x238>)
 8016f34:	6033      	str	r3, [r6, #0]
 8016f36:	bf14      	ite	ne
 8016f38:	230a      	movne	r3, #10
 8016f3a:	2308      	moveq	r3, #8
 8016f3c:	2100      	movs	r1, #0
 8016f3e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8016f42:	6866      	ldr	r6, [r4, #4]
 8016f44:	60a6      	str	r6, [r4, #8]
 8016f46:	2e00      	cmp	r6, #0
 8016f48:	bfa2      	ittt	ge
 8016f4a:	6821      	ldrge	r1, [r4, #0]
 8016f4c:	f021 0104 	bicge.w	r1, r1, #4
 8016f50:	6021      	strge	r1, [r4, #0]
 8016f52:	b90d      	cbnz	r5, 8016f58 <_printf_i+0x110>
 8016f54:	2e00      	cmp	r6, #0
 8016f56:	d04b      	beq.n	8016ff0 <_printf_i+0x1a8>
 8016f58:	4616      	mov	r6, r2
 8016f5a:	fbb5 f1f3 	udiv	r1, r5, r3
 8016f5e:	fb03 5711 	mls	r7, r3, r1, r5
 8016f62:	5dc7      	ldrb	r7, [r0, r7]
 8016f64:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8016f68:	462f      	mov	r7, r5
 8016f6a:	42bb      	cmp	r3, r7
 8016f6c:	460d      	mov	r5, r1
 8016f6e:	d9f4      	bls.n	8016f5a <_printf_i+0x112>
 8016f70:	2b08      	cmp	r3, #8
 8016f72:	d10b      	bne.n	8016f8c <_printf_i+0x144>
 8016f74:	6823      	ldr	r3, [r4, #0]
 8016f76:	07df      	lsls	r7, r3, #31
 8016f78:	d508      	bpl.n	8016f8c <_printf_i+0x144>
 8016f7a:	6923      	ldr	r3, [r4, #16]
 8016f7c:	6861      	ldr	r1, [r4, #4]
 8016f7e:	4299      	cmp	r1, r3
 8016f80:	bfde      	ittt	le
 8016f82:	2330      	movle	r3, #48	@ 0x30
 8016f84:	f806 3c01 	strble.w	r3, [r6, #-1]
 8016f88:	f106 36ff 	addle.w	r6, r6, #4294967295
 8016f8c:	1b92      	subs	r2, r2, r6
 8016f8e:	6122      	str	r2, [r4, #16]
 8016f90:	f8cd a000 	str.w	sl, [sp]
 8016f94:	464b      	mov	r3, r9
 8016f96:	aa03      	add	r2, sp, #12
 8016f98:	4621      	mov	r1, r4
 8016f9a:	4640      	mov	r0, r8
 8016f9c:	f7ff fee6 	bl	8016d6c <_printf_common>
 8016fa0:	3001      	adds	r0, #1
 8016fa2:	d14a      	bne.n	801703a <_printf_i+0x1f2>
 8016fa4:	f04f 30ff 	mov.w	r0, #4294967295
 8016fa8:	b004      	add	sp, #16
 8016faa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016fae:	6823      	ldr	r3, [r4, #0]
 8016fb0:	f043 0320 	orr.w	r3, r3, #32
 8016fb4:	6023      	str	r3, [r4, #0]
 8016fb6:	4833      	ldr	r0, [pc, #204]	@ (8017084 <_printf_i+0x23c>)
 8016fb8:	2778      	movs	r7, #120	@ 0x78
 8016fba:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8016fbe:	6823      	ldr	r3, [r4, #0]
 8016fc0:	6831      	ldr	r1, [r6, #0]
 8016fc2:	061f      	lsls	r7, r3, #24
 8016fc4:	f851 5b04 	ldr.w	r5, [r1], #4
 8016fc8:	d402      	bmi.n	8016fd0 <_printf_i+0x188>
 8016fca:	065f      	lsls	r7, r3, #25
 8016fcc:	bf48      	it	mi
 8016fce:	b2ad      	uxthmi	r5, r5
 8016fd0:	6031      	str	r1, [r6, #0]
 8016fd2:	07d9      	lsls	r1, r3, #31
 8016fd4:	bf44      	itt	mi
 8016fd6:	f043 0320 	orrmi.w	r3, r3, #32
 8016fda:	6023      	strmi	r3, [r4, #0]
 8016fdc:	b11d      	cbz	r5, 8016fe6 <_printf_i+0x19e>
 8016fde:	2310      	movs	r3, #16
 8016fe0:	e7ac      	b.n	8016f3c <_printf_i+0xf4>
 8016fe2:	4827      	ldr	r0, [pc, #156]	@ (8017080 <_printf_i+0x238>)
 8016fe4:	e7e9      	b.n	8016fba <_printf_i+0x172>
 8016fe6:	6823      	ldr	r3, [r4, #0]
 8016fe8:	f023 0320 	bic.w	r3, r3, #32
 8016fec:	6023      	str	r3, [r4, #0]
 8016fee:	e7f6      	b.n	8016fde <_printf_i+0x196>
 8016ff0:	4616      	mov	r6, r2
 8016ff2:	e7bd      	b.n	8016f70 <_printf_i+0x128>
 8016ff4:	6833      	ldr	r3, [r6, #0]
 8016ff6:	6825      	ldr	r5, [r4, #0]
 8016ff8:	6961      	ldr	r1, [r4, #20]
 8016ffa:	1d18      	adds	r0, r3, #4
 8016ffc:	6030      	str	r0, [r6, #0]
 8016ffe:	062e      	lsls	r6, r5, #24
 8017000:	681b      	ldr	r3, [r3, #0]
 8017002:	d501      	bpl.n	8017008 <_printf_i+0x1c0>
 8017004:	6019      	str	r1, [r3, #0]
 8017006:	e002      	b.n	801700e <_printf_i+0x1c6>
 8017008:	0668      	lsls	r0, r5, #25
 801700a:	d5fb      	bpl.n	8017004 <_printf_i+0x1bc>
 801700c:	8019      	strh	r1, [r3, #0]
 801700e:	2300      	movs	r3, #0
 8017010:	6123      	str	r3, [r4, #16]
 8017012:	4616      	mov	r6, r2
 8017014:	e7bc      	b.n	8016f90 <_printf_i+0x148>
 8017016:	6833      	ldr	r3, [r6, #0]
 8017018:	1d1a      	adds	r2, r3, #4
 801701a:	6032      	str	r2, [r6, #0]
 801701c:	681e      	ldr	r6, [r3, #0]
 801701e:	6862      	ldr	r2, [r4, #4]
 8017020:	2100      	movs	r1, #0
 8017022:	4630      	mov	r0, r6
 8017024:	f7e9 f984 	bl	8000330 <memchr>
 8017028:	b108      	cbz	r0, 801702e <_printf_i+0x1e6>
 801702a:	1b80      	subs	r0, r0, r6
 801702c:	6060      	str	r0, [r4, #4]
 801702e:	6863      	ldr	r3, [r4, #4]
 8017030:	6123      	str	r3, [r4, #16]
 8017032:	2300      	movs	r3, #0
 8017034:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8017038:	e7aa      	b.n	8016f90 <_printf_i+0x148>
 801703a:	6923      	ldr	r3, [r4, #16]
 801703c:	4632      	mov	r2, r6
 801703e:	4649      	mov	r1, r9
 8017040:	4640      	mov	r0, r8
 8017042:	47d0      	blx	sl
 8017044:	3001      	adds	r0, #1
 8017046:	d0ad      	beq.n	8016fa4 <_printf_i+0x15c>
 8017048:	6823      	ldr	r3, [r4, #0]
 801704a:	079b      	lsls	r3, r3, #30
 801704c:	d413      	bmi.n	8017076 <_printf_i+0x22e>
 801704e:	68e0      	ldr	r0, [r4, #12]
 8017050:	9b03      	ldr	r3, [sp, #12]
 8017052:	4298      	cmp	r0, r3
 8017054:	bfb8      	it	lt
 8017056:	4618      	movlt	r0, r3
 8017058:	e7a6      	b.n	8016fa8 <_printf_i+0x160>
 801705a:	2301      	movs	r3, #1
 801705c:	4632      	mov	r2, r6
 801705e:	4649      	mov	r1, r9
 8017060:	4640      	mov	r0, r8
 8017062:	47d0      	blx	sl
 8017064:	3001      	adds	r0, #1
 8017066:	d09d      	beq.n	8016fa4 <_printf_i+0x15c>
 8017068:	3501      	adds	r5, #1
 801706a:	68e3      	ldr	r3, [r4, #12]
 801706c:	9903      	ldr	r1, [sp, #12]
 801706e:	1a5b      	subs	r3, r3, r1
 8017070:	42ab      	cmp	r3, r5
 8017072:	dcf2      	bgt.n	801705a <_printf_i+0x212>
 8017074:	e7eb      	b.n	801704e <_printf_i+0x206>
 8017076:	2500      	movs	r5, #0
 8017078:	f104 0619 	add.w	r6, r4, #25
 801707c:	e7f5      	b.n	801706a <_printf_i+0x222>
 801707e:	bf00      	nop
 8017080:	0801b1eb 	.word	0x0801b1eb
 8017084:	0801b1fc 	.word	0x0801b1fc

08017088 <std>:
 8017088:	2300      	movs	r3, #0
 801708a:	b510      	push	{r4, lr}
 801708c:	4604      	mov	r4, r0
 801708e:	e9c0 3300 	strd	r3, r3, [r0]
 8017092:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8017096:	6083      	str	r3, [r0, #8]
 8017098:	8181      	strh	r1, [r0, #12]
 801709a:	6643      	str	r3, [r0, #100]	@ 0x64
 801709c:	81c2      	strh	r2, [r0, #14]
 801709e:	6183      	str	r3, [r0, #24]
 80170a0:	4619      	mov	r1, r3
 80170a2:	2208      	movs	r2, #8
 80170a4:	305c      	adds	r0, #92	@ 0x5c
 80170a6:	f000 f914 	bl	80172d2 <memset>
 80170aa:	4b0d      	ldr	r3, [pc, #52]	@ (80170e0 <std+0x58>)
 80170ac:	6263      	str	r3, [r4, #36]	@ 0x24
 80170ae:	4b0d      	ldr	r3, [pc, #52]	@ (80170e4 <std+0x5c>)
 80170b0:	62a3      	str	r3, [r4, #40]	@ 0x28
 80170b2:	4b0d      	ldr	r3, [pc, #52]	@ (80170e8 <std+0x60>)
 80170b4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80170b6:	4b0d      	ldr	r3, [pc, #52]	@ (80170ec <std+0x64>)
 80170b8:	6323      	str	r3, [r4, #48]	@ 0x30
 80170ba:	4b0d      	ldr	r3, [pc, #52]	@ (80170f0 <std+0x68>)
 80170bc:	6224      	str	r4, [r4, #32]
 80170be:	429c      	cmp	r4, r3
 80170c0:	d006      	beq.n	80170d0 <std+0x48>
 80170c2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80170c6:	4294      	cmp	r4, r2
 80170c8:	d002      	beq.n	80170d0 <std+0x48>
 80170ca:	33d0      	adds	r3, #208	@ 0xd0
 80170cc:	429c      	cmp	r4, r3
 80170ce:	d105      	bne.n	80170dc <std+0x54>
 80170d0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80170d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80170d8:	f000 b996 	b.w	8017408 <__retarget_lock_init_recursive>
 80170dc:	bd10      	pop	{r4, pc}
 80170de:	bf00      	nop
 80170e0:	0801724d 	.word	0x0801724d
 80170e4:	0801726f 	.word	0x0801726f
 80170e8:	080172a7 	.word	0x080172a7
 80170ec:	080172cb 	.word	0x080172cb
 80170f0:	24006128 	.word	0x24006128

080170f4 <stdio_exit_handler>:
 80170f4:	4a02      	ldr	r2, [pc, #8]	@ (8017100 <stdio_exit_handler+0xc>)
 80170f6:	4903      	ldr	r1, [pc, #12]	@ (8017104 <stdio_exit_handler+0x10>)
 80170f8:	4803      	ldr	r0, [pc, #12]	@ (8017108 <stdio_exit_handler+0x14>)
 80170fa:	f000 b869 	b.w	80171d0 <_fwalk_sglue>
 80170fe:	bf00      	nop
 8017100:	24000104 	.word	0x24000104
 8017104:	080195c5 	.word	0x080195c5
 8017108:	24000280 	.word	0x24000280

0801710c <cleanup_stdio>:
 801710c:	6841      	ldr	r1, [r0, #4]
 801710e:	4b0c      	ldr	r3, [pc, #48]	@ (8017140 <cleanup_stdio+0x34>)
 8017110:	4299      	cmp	r1, r3
 8017112:	b510      	push	{r4, lr}
 8017114:	4604      	mov	r4, r0
 8017116:	d001      	beq.n	801711c <cleanup_stdio+0x10>
 8017118:	f002 fa54 	bl	80195c4 <_fflush_r>
 801711c:	68a1      	ldr	r1, [r4, #8]
 801711e:	4b09      	ldr	r3, [pc, #36]	@ (8017144 <cleanup_stdio+0x38>)
 8017120:	4299      	cmp	r1, r3
 8017122:	d002      	beq.n	801712a <cleanup_stdio+0x1e>
 8017124:	4620      	mov	r0, r4
 8017126:	f002 fa4d 	bl	80195c4 <_fflush_r>
 801712a:	68e1      	ldr	r1, [r4, #12]
 801712c:	4b06      	ldr	r3, [pc, #24]	@ (8017148 <cleanup_stdio+0x3c>)
 801712e:	4299      	cmp	r1, r3
 8017130:	d004      	beq.n	801713c <cleanup_stdio+0x30>
 8017132:	4620      	mov	r0, r4
 8017134:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017138:	f002 ba44 	b.w	80195c4 <_fflush_r>
 801713c:	bd10      	pop	{r4, pc}
 801713e:	bf00      	nop
 8017140:	24006128 	.word	0x24006128
 8017144:	24006190 	.word	0x24006190
 8017148:	240061f8 	.word	0x240061f8

0801714c <global_stdio_init.part.0>:
 801714c:	b510      	push	{r4, lr}
 801714e:	4b0b      	ldr	r3, [pc, #44]	@ (801717c <global_stdio_init.part.0+0x30>)
 8017150:	4c0b      	ldr	r4, [pc, #44]	@ (8017180 <global_stdio_init.part.0+0x34>)
 8017152:	4a0c      	ldr	r2, [pc, #48]	@ (8017184 <global_stdio_init.part.0+0x38>)
 8017154:	601a      	str	r2, [r3, #0]
 8017156:	4620      	mov	r0, r4
 8017158:	2200      	movs	r2, #0
 801715a:	2104      	movs	r1, #4
 801715c:	f7ff ff94 	bl	8017088 <std>
 8017160:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8017164:	2201      	movs	r2, #1
 8017166:	2109      	movs	r1, #9
 8017168:	f7ff ff8e 	bl	8017088 <std>
 801716c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8017170:	2202      	movs	r2, #2
 8017172:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017176:	2112      	movs	r1, #18
 8017178:	f7ff bf86 	b.w	8017088 <std>
 801717c:	24006260 	.word	0x24006260
 8017180:	24006128 	.word	0x24006128
 8017184:	080170f5 	.word	0x080170f5

08017188 <__sfp_lock_acquire>:
 8017188:	4801      	ldr	r0, [pc, #4]	@ (8017190 <__sfp_lock_acquire+0x8>)
 801718a:	f000 b93e 	b.w	801740a <__retarget_lock_acquire_recursive>
 801718e:	bf00      	nop
 8017190:	24006269 	.word	0x24006269

08017194 <__sfp_lock_release>:
 8017194:	4801      	ldr	r0, [pc, #4]	@ (801719c <__sfp_lock_release+0x8>)
 8017196:	f000 b939 	b.w	801740c <__retarget_lock_release_recursive>
 801719a:	bf00      	nop
 801719c:	24006269 	.word	0x24006269

080171a0 <__sinit>:
 80171a0:	b510      	push	{r4, lr}
 80171a2:	4604      	mov	r4, r0
 80171a4:	f7ff fff0 	bl	8017188 <__sfp_lock_acquire>
 80171a8:	6a23      	ldr	r3, [r4, #32]
 80171aa:	b11b      	cbz	r3, 80171b4 <__sinit+0x14>
 80171ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80171b0:	f7ff bff0 	b.w	8017194 <__sfp_lock_release>
 80171b4:	4b04      	ldr	r3, [pc, #16]	@ (80171c8 <__sinit+0x28>)
 80171b6:	6223      	str	r3, [r4, #32]
 80171b8:	4b04      	ldr	r3, [pc, #16]	@ (80171cc <__sinit+0x2c>)
 80171ba:	681b      	ldr	r3, [r3, #0]
 80171bc:	2b00      	cmp	r3, #0
 80171be:	d1f5      	bne.n	80171ac <__sinit+0xc>
 80171c0:	f7ff ffc4 	bl	801714c <global_stdio_init.part.0>
 80171c4:	e7f2      	b.n	80171ac <__sinit+0xc>
 80171c6:	bf00      	nop
 80171c8:	0801710d 	.word	0x0801710d
 80171cc:	24006260 	.word	0x24006260

080171d0 <_fwalk_sglue>:
 80171d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80171d4:	4607      	mov	r7, r0
 80171d6:	4688      	mov	r8, r1
 80171d8:	4614      	mov	r4, r2
 80171da:	2600      	movs	r6, #0
 80171dc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80171e0:	f1b9 0901 	subs.w	r9, r9, #1
 80171e4:	d505      	bpl.n	80171f2 <_fwalk_sglue+0x22>
 80171e6:	6824      	ldr	r4, [r4, #0]
 80171e8:	2c00      	cmp	r4, #0
 80171ea:	d1f7      	bne.n	80171dc <_fwalk_sglue+0xc>
 80171ec:	4630      	mov	r0, r6
 80171ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80171f2:	89ab      	ldrh	r3, [r5, #12]
 80171f4:	2b01      	cmp	r3, #1
 80171f6:	d907      	bls.n	8017208 <_fwalk_sglue+0x38>
 80171f8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80171fc:	3301      	adds	r3, #1
 80171fe:	d003      	beq.n	8017208 <_fwalk_sglue+0x38>
 8017200:	4629      	mov	r1, r5
 8017202:	4638      	mov	r0, r7
 8017204:	47c0      	blx	r8
 8017206:	4306      	orrs	r6, r0
 8017208:	3568      	adds	r5, #104	@ 0x68
 801720a:	e7e9      	b.n	80171e0 <_fwalk_sglue+0x10>

0801720c <siprintf>:
 801720c:	b40e      	push	{r1, r2, r3}
 801720e:	b500      	push	{lr}
 8017210:	b09c      	sub	sp, #112	@ 0x70
 8017212:	ab1d      	add	r3, sp, #116	@ 0x74
 8017214:	9002      	str	r0, [sp, #8]
 8017216:	9006      	str	r0, [sp, #24]
 8017218:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 801721c:	4809      	ldr	r0, [pc, #36]	@ (8017244 <siprintf+0x38>)
 801721e:	9107      	str	r1, [sp, #28]
 8017220:	9104      	str	r1, [sp, #16]
 8017222:	4909      	ldr	r1, [pc, #36]	@ (8017248 <siprintf+0x3c>)
 8017224:	f853 2b04 	ldr.w	r2, [r3], #4
 8017228:	9105      	str	r1, [sp, #20]
 801722a:	6800      	ldr	r0, [r0, #0]
 801722c:	9301      	str	r3, [sp, #4]
 801722e:	a902      	add	r1, sp, #8
 8017230:	f002 f848 	bl	80192c4 <_svfiprintf_r>
 8017234:	9b02      	ldr	r3, [sp, #8]
 8017236:	2200      	movs	r2, #0
 8017238:	701a      	strb	r2, [r3, #0]
 801723a:	b01c      	add	sp, #112	@ 0x70
 801723c:	f85d eb04 	ldr.w	lr, [sp], #4
 8017240:	b003      	add	sp, #12
 8017242:	4770      	bx	lr
 8017244:	2400027c 	.word	0x2400027c
 8017248:	ffff0208 	.word	0xffff0208

0801724c <__sread>:
 801724c:	b510      	push	{r4, lr}
 801724e:	460c      	mov	r4, r1
 8017250:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8017254:	f000 f88a 	bl	801736c <_read_r>
 8017258:	2800      	cmp	r0, #0
 801725a:	bfab      	itete	ge
 801725c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 801725e:	89a3      	ldrhlt	r3, [r4, #12]
 8017260:	181b      	addge	r3, r3, r0
 8017262:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8017266:	bfac      	ite	ge
 8017268:	6563      	strge	r3, [r4, #84]	@ 0x54
 801726a:	81a3      	strhlt	r3, [r4, #12]
 801726c:	bd10      	pop	{r4, pc}

0801726e <__swrite>:
 801726e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017272:	461f      	mov	r7, r3
 8017274:	898b      	ldrh	r3, [r1, #12]
 8017276:	05db      	lsls	r3, r3, #23
 8017278:	4605      	mov	r5, r0
 801727a:	460c      	mov	r4, r1
 801727c:	4616      	mov	r6, r2
 801727e:	d505      	bpl.n	801728c <__swrite+0x1e>
 8017280:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8017284:	2302      	movs	r3, #2
 8017286:	2200      	movs	r2, #0
 8017288:	f000 f85e 	bl	8017348 <_lseek_r>
 801728c:	89a3      	ldrh	r3, [r4, #12]
 801728e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8017292:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8017296:	81a3      	strh	r3, [r4, #12]
 8017298:	4632      	mov	r2, r6
 801729a:	463b      	mov	r3, r7
 801729c:	4628      	mov	r0, r5
 801729e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80172a2:	f000 b875 	b.w	8017390 <_write_r>

080172a6 <__sseek>:
 80172a6:	b510      	push	{r4, lr}
 80172a8:	460c      	mov	r4, r1
 80172aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80172ae:	f000 f84b 	bl	8017348 <_lseek_r>
 80172b2:	1c43      	adds	r3, r0, #1
 80172b4:	89a3      	ldrh	r3, [r4, #12]
 80172b6:	bf15      	itete	ne
 80172b8:	6560      	strne	r0, [r4, #84]	@ 0x54
 80172ba:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80172be:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80172c2:	81a3      	strheq	r3, [r4, #12]
 80172c4:	bf18      	it	ne
 80172c6:	81a3      	strhne	r3, [r4, #12]
 80172c8:	bd10      	pop	{r4, pc}

080172ca <__sclose>:
 80172ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80172ce:	f000 b82b 	b.w	8017328 <_close_r>

080172d2 <memset>:
 80172d2:	4402      	add	r2, r0
 80172d4:	4603      	mov	r3, r0
 80172d6:	4293      	cmp	r3, r2
 80172d8:	d100      	bne.n	80172dc <memset+0xa>
 80172da:	4770      	bx	lr
 80172dc:	f803 1b01 	strb.w	r1, [r3], #1
 80172e0:	e7f9      	b.n	80172d6 <memset+0x4>

080172e2 <strchr>:
 80172e2:	b2c9      	uxtb	r1, r1
 80172e4:	4603      	mov	r3, r0
 80172e6:	4618      	mov	r0, r3
 80172e8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80172ec:	b112      	cbz	r2, 80172f4 <strchr+0x12>
 80172ee:	428a      	cmp	r2, r1
 80172f0:	d1f9      	bne.n	80172e6 <strchr+0x4>
 80172f2:	4770      	bx	lr
 80172f4:	2900      	cmp	r1, #0
 80172f6:	bf18      	it	ne
 80172f8:	2000      	movne	r0, #0
 80172fa:	4770      	bx	lr

080172fc <strncmp>:
 80172fc:	b510      	push	{r4, lr}
 80172fe:	b16a      	cbz	r2, 801731c <strncmp+0x20>
 8017300:	3901      	subs	r1, #1
 8017302:	1884      	adds	r4, r0, r2
 8017304:	f810 2b01 	ldrb.w	r2, [r0], #1
 8017308:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 801730c:	429a      	cmp	r2, r3
 801730e:	d103      	bne.n	8017318 <strncmp+0x1c>
 8017310:	42a0      	cmp	r0, r4
 8017312:	d001      	beq.n	8017318 <strncmp+0x1c>
 8017314:	2a00      	cmp	r2, #0
 8017316:	d1f5      	bne.n	8017304 <strncmp+0x8>
 8017318:	1ad0      	subs	r0, r2, r3
 801731a:	bd10      	pop	{r4, pc}
 801731c:	4610      	mov	r0, r2
 801731e:	e7fc      	b.n	801731a <strncmp+0x1e>

08017320 <_localeconv_r>:
 8017320:	4800      	ldr	r0, [pc, #0]	@ (8017324 <_localeconv_r+0x4>)
 8017322:	4770      	bx	lr
 8017324:	24000200 	.word	0x24000200

08017328 <_close_r>:
 8017328:	b538      	push	{r3, r4, r5, lr}
 801732a:	4d06      	ldr	r5, [pc, #24]	@ (8017344 <_close_r+0x1c>)
 801732c:	2300      	movs	r3, #0
 801732e:	4604      	mov	r4, r0
 8017330:	4608      	mov	r0, r1
 8017332:	602b      	str	r3, [r5, #0]
 8017334:	f7eb f8c8 	bl	80024c8 <_close>
 8017338:	1c43      	adds	r3, r0, #1
 801733a:	d102      	bne.n	8017342 <_close_r+0x1a>
 801733c:	682b      	ldr	r3, [r5, #0]
 801733e:	b103      	cbz	r3, 8017342 <_close_r+0x1a>
 8017340:	6023      	str	r3, [r4, #0]
 8017342:	bd38      	pop	{r3, r4, r5, pc}
 8017344:	24006264 	.word	0x24006264

08017348 <_lseek_r>:
 8017348:	b538      	push	{r3, r4, r5, lr}
 801734a:	4d07      	ldr	r5, [pc, #28]	@ (8017368 <_lseek_r+0x20>)
 801734c:	4604      	mov	r4, r0
 801734e:	4608      	mov	r0, r1
 8017350:	4611      	mov	r1, r2
 8017352:	2200      	movs	r2, #0
 8017354:	602a      	str	r2, [r5, #0]
 8017356:	461a      	mov	r2, r3
 8017358:	f7eb f8dd 	bl	8002516 <_lseek>
 801735c:	1c43      	adds	r3, r0, #1
 801735e:	d102      	bne.n	8017366 <_lseek_r+0x1e>
 8017360:	682b      	ldr	r3, [r5, #0]
 8017362:	b103      	cbz	r3, 8017366 <_lseek_r+0x1e>
 8017364:	6023      	str	r3, [r4, #0]
 8017366:	bd38      	pop	{r3, r4, r5, pc}
 8017368:	24006264 	.word	0x24006264

0801736c <_read_r>:
 801736c:	b538      	push	{r3, r4, r5, lr}
 801736e:	4d07      	ldr	r5, [pc, #28]	@ (801738c <_read_r+0x20>)
 8017370:	4604      	mov	r4, r0
 8017372:	4608      	mov	r0, r1
 8017374:	4611      	mov	r1, r2
 8017376:	2200      	movs	r2, #0
 8017378:	602a      	str	r2, [r5, #0]
 801737a:	461a      	mov	r2, r3
 801737c:	f7eb f86b 	bl	8002456 <_read>
 8017380:	1c43      	adds	r3, r0, #1
 8017382:	d102      	bne.n	801738a <_read_r+0x1e>
 8017384:	682b      	ldr	r3, [r5, #0]
 8017386:	b103      	cbz	r3, 801738a <_read_r+0x1e>
 8017388:	6023      	str	r3, [r4, #0]
 801738a:	bd38      	pop	{r3, r4, r5, pc}
 801738c:	24006264 	.word	0x24006264

08017390 <_write_r>:
 8017390:	b538      	push	{r3, r4, r5, lr}
 8017392:	4d07      	ldr	r5, [pc, #28]	@ (80173b0 <_write_r+0x20>)
 8017394:	4604      	mov	r4, r0
 8017396:	4608      	mov	r0, r1
 8017398:	4611      	mov	r1, r2
 801739a:	2200      	movs	r2, #0
 801739c:	602a      	str	r2, [r5, #0]
 801739e:	461a      	mov	r2, r3
 80173a0:	f7eb f876 	bl	8002490 <_write>
 80173a4:	1c43      	adds	r3, r0, #1
 80173a6:	d102      	bne.n	80173ae <_write_r+0x1e>
 80173a8:	682b      	ldr	r3, [r5, #0]
 80173aa:	b103      	cbz	r3, 80173ae <_write_r+0x1e>
 80173ac:	6023      	str	r3, [r4, #0]
 80173ae:	bd38      	pop	{r3, r4, r5, pc}
 80173b0:	24006264 	.word	0x24006264

080173b4 <__errno>:
 80173b4:	4b01      	ldr	r3, [pc, #4]	@ (80173bc <__errno+0x8>)
 80173b6:	6818      	ldr	r0, [r3, #0]
 80173b8:	4770      	bx	lr
 80173ba:	bf00      	nop
 80173bc:	2400027c 	.word	0x2400027c

080173c0 <__libc_init_array>:
 80173c0:	b570      	push	{r4, r5, r6, lr}
 80173c2:	4d0d      	ldr	r5, [pc, #52]	@ (80173f8 <__libc_init_array+0x38>)
 80173c4:	4c0d      	ldr	r4, [pc, #52]	@ (80173fc <__libc_init_array+0x3c>)
 80173c6:	1b64      	subs	r4, r4, r5
 80173c8:	10a4      	asrs	r4, r4, #2
 80173ca:	2600      	movs	r6, #0
 80173cc:	42a6      	cmp	r6, r4
 80173ce:	d109      	bne.n	80173e4 <__libc_init_array+0x24>
 80173d0:	4d0b      	ldr	r5, [pc, #44]	@ (8017400 <__libc_init_array+0x40>)
 80173d2:	4c0c      	ldr	r4, [pc, #48]	@ (8017404 <__libc_init_array+0x44>)
 80173d4:	f003 fb18 	bl	801aa08 <_init>
 80173d8:	1b64      	subs	r4, r4, r5
 80173da:	10a4      	asrs	r4, r4, #2
 80173dc:	2600      	movs	r6, #0
 80173de:	42a6      	cmp	r6, r4
 80173e0:	d105      	bne.n	80173ee <__libc_init_array+0x2e>
 80173e2:	bd70      	pop	{r4, r5, r6, pc}
 80173e4:	f855 3b04 	ldr.w	r3, [r5], #4
 80173e8:	4798      	blx	r3
 80173ea:	3601      	adds	r6, #1
 80173ec:	e7ee      	b.n	80173cc <__libc_init_array+0xc>
 80173ee:	f855 3b04 	ldr.w	r3, [r5], #4
 80173f2:	4798      	blx	r3
 80173f4:	3601      	adds	r6, #1
 80173f6:	e7f2      	b.n	80173de <__libc_init_array+0x1e>
 80173f8:	0801b7c8 	.word	0x0801b7c8
 80173fc:	0801b7c8 	.word	0x0801b7c8
 8017400:	0801b7c8 	.word	0x0801b7c8
 8017404:	0801b7cc 	.word	0x0801b7cc

08017408 <__retarget_lock_init_recursive>:
 8017408:	4770      	bx	lr

0801740a <__retarget_lock_acquire_recursive>:
 801740a:	4770      	bx	lr

0801740c <__retarget_lock_release_recursive>:
 801740c:	4770      	bx	lr

0801740e <memcpy>:
 801740e:	440a      	add	r2, r1
 8017410:	4291      	cmp	r1, r2
 8017412:	f100 33ff 	add.w	r3, r0, #4294967295
 8017416:	d100      	bne.n	801741a <memcpy+0xc>
 8017418:	4770      	bx	lr
 801741a:	b510      	push	{r4, lr}
 801741c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8017420:	f803 4f01 	strb.w	r4, [r3, #1]!
 8017424:	4291      	cmp	r1, r2
 8017426:	d1f9      	bne.n	801741c <memcpy+0xe>
 8017428:	bd10      	pop	{r4, pc}
 801742a:	0000      	movs	r0, r0
 801742c:	0000      	movs	r0, r0
	...

08017430 <nan>:
 8017430:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 8017438 <nan+0x8>
 8017434:	4770      	bx	lr
 8017436:	bf00      	nop
 8017438:	00000000 	.word	0x00000000
 801743c:	7ff80000 	.word	0x7ff80000

08017440 <quorem>:
 8017440:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017444:	6903      	ldr	r3, [r0, #16]
 8017446:	690c      	ldr	r4, [r1, #16]
 8017448:	42a3      	cmp	r3, r4
 801744a:	4607      	mov	r7, r0
 801744c:	db7e      	blt.n	801754c <quorem+0x10c>
 801744e:	3c01      	subs	r4, #1
 8017450:	f101 0814 	add.w	r8, r1, #20
 8017454:	00a3      	lsls	r3, r4, #2
 8017456:	f100 0514 	add.w	r5, r0, #20
 801745a:	9300      	str	r3, [sp, #0]
 801745c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8017460:	9301      	str	r3, [sp, #4]
 8017462:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8017466:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801746a:	3301      	adds	r3, #1
 801746c:	429a      	cmp	r2, r3
 801746e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8017472:	fbb2 f6f3 	udiv	r6, r2, r3
 8017476:	d32e      	bcc.n	80174d6 <quorem+0x96>
 8017478:	f04f 0a00 	mov.w	sl, #0
 801747c:	46c4      	mov	ip, r8
 801747e:	46ae      	mov	lr, r5
 8017480:	46d3      	mov	fp, sl
 8017482:	f85c 3b04 	ldr.w	r3, [ip], #4
 8017486:	b298      	uxth	r0, r3
 8017488:	fb06 a000 	mla	r0, r6, r0, sl
 801748c:	0c02      	lsrs	r2, r0, #16
 801748e:	0c1b      	lsrs	r3, r3, #16
 8017490:	fb06 2303 	mla	r3, r6, r3, r2
 8017494:	f8de 2000 	ldr.w	r2, [lr]
 8017498:	b280      	uxth	r0, r0
 801749a:	b292      	uxth	r2, r2
 801749c:	1a12      	subs	r2, r2, r0
 801749e:	445a      	add	r2, fp
 80174a0:	f8de 0000 	ldr.w	r0, [lr]
 80174a4:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80174a8:	b29b      	uxth	r3, r3
 80174aa:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80174ae:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80174b2:	b292      	uxth	r2, r2
 80174b4:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80174b8:	45e1      	cmp	r9, ip
 80174ba:	f84e 2b04 	str.w	r2, [lr], #4
 80174be:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80174c2:	d2de      	bcs.n	8017482 <quorem+0x42>
 80174c4:	9b00      	ldr	r3, [sp, #0]
 80174c6:	58eb      	ldr	r3, [r5, r3]
 80174c8:	b92b      	cbnz	r3, 80174d6 <quorem+0x96>
 80174ca:	9b01      	ldr	r3, [sp, #4]
 80174cc:	3b04      	subs	r3, #4
 80174ce:	429d      	cmp	r5, r3
 80174d0:	461a      	mov	r2, r3
 80174d2:	d32f      	bcc.n	8017534 <quorem+0xf4>
 80174d4:	613c      	str	r4, [r7, #16]
 80174d6:	4638      	mov	r0, r7
 80174d8:	f001 fca0 	bl	8018e1c <__mcmp>
 80174dc:	2800      	cmp	r0, #0
 80174de:	db25      	blt.n	801752c <quorem+0xec>
 80174e0:	4629      	mov	r1, r5
 80174e2:	2000      	movs	r0, #0
 80174e4:	f858 2b04 	ldr.w	r2, [r8], #4
 80174e8:	f8d1 c000 	ldr.w	ip, [r1]
 80174ec:	fa1f fe82 	uxth.w	lr, r2
 80174f0:	fa1f f38c 	uxth.w	r3, ip
 80174f4:	eba3 030e 	sub.w	r3, r3, lr
 80174f8:	4403      	add	r3, r0
 80174fa:	0c12      	lsrs	r2, r2, #16
 80174fc:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8017500:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8017504:	b29b      	uxth	r3, r3
 8017506:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801750a:	45c1      	cmp	r9, r8
 801750c:	f841 3b04 	str.w	r3, [r1], #4
 8017510:	ea4f 4022 	mov.w	r0, r2, asr #16
 8017514:	d2e6      	bcs.n	80174e4 <quorem+0xa4>
 8017516:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801751a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801751e:	b922      	cbnz	r2, 801752a <quorem+0xea>
 8017520:	3b04      	subs	r3, #4
 8017522:	429d      	cmp	r5, r3
 8017524:	461a      	mov	r2, r3
 8017526:	d30b      	bcc.n	8017540 <quorem+0x100>
 8017528:	613c      	str	r4, [r7, #16]
 801752a:	3601      	adds	r6, #1
 801752c:	4630      	mov	r0, r6
 801752e:	b003      	add	sp, #12
 8017530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017534:	6812      	ldr	r2, [r2, #0]
 8017536:	3b04      	subs	r3, #4
 8017538:	2a00      	cmp	r2, #0
 801753a:	d1cb      	bne.n	80174d4 <quorem+0x94>
 801753c:	3c01      	subs	r4, #1
 801753e:	e7c6      	b.n	80174ce <quorem+0x8e>
 8017540:	6812      	ldr	r2, [r2, #0]
 8017542:	3b04      	subs	r3, #4
 8017544:	2a00      	cmp	r2, #0
 8017546:	d1ef      	bne.n	8017528 <quorem+0xe8>
 8017548:	3c01      	subs	r4, #1
 801754a:	e7ea      	b.n	8017522 <quorem+0xe2>
 801754c:	2000      	movs	r0, #0
 801754e:	e7ee      	b.n	801752e <quorem+0xee>

08017550 <_dtoa_r>:
 8017550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017554:	ed2d 8b02 	vpush	{d8}
 8017558:	69c7      	ldr	r7, [r0, #28]
 801755a:	b091      	sub	sp, #68	@ 0x44
 801755c:	ed8d 0b02 	vstr	d0, [sp, #8]
 8017560:	ec55 4b10 	vmov	r4, r5, d0
 8017564:	9e1c      	ldr	r6, [sp, #112]	@ 0x70
 8017566:	9107      	str	r1, [sp, #28]
 8017568:	4681      	mov	r9, r0
 801756a:	9209      	str	r2, [sp, #36]	@ 0x24
 801756c:	930d      	str	r3, [sp, #52]	@ 0x34
 801756e:	b97f      	cbnz	r7, 8017590 <_dtoa_r+0x40>
 8017570:	2010      	movs	r0, #16
 8017572:	f001 f8c7 	bl	8018704 <malloc>
 8017576:	4602      	mov	r2, r0
 8017578:	f8c9 001c 	str.w	r0, [r9, #28]
 801757c:	b920      	cbnz	r0, 8017588 <_dtoa_r+0x38>
 801757e:	4ba0      	ldr	r3, [pc, #640]	@ (8017800 <_dtoa_r+0x2b0>)
 8017580:	21ef      	movs	r1, #239	@ 0xef
 8017582:	48a0      	ldr	r0, [pc, #640]	@ (8017804 <_dtoa_r+0x2b4>)
 8017584:	f002 f870 	bl	8019668 <__assert_func>
 8017588:	e9c0 7701 	strd	r7, r7, [r0, #4]
 801758c:	6007      	str	r7, [r0, #0]
 801758e:	60c7      	str	r7, [r0, #12]
 8017590:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8017594:	6819      	ldr	r1, [r3, #0]
 8017596:	b159      	cbz	r1, 80175b0 <_dtoa_r+0x60>
 8017598:	685a      	ldr	r2, [r3, #4]
 801759a:	604a      	str	r2, [r1, #4]
 801759c:	2301      	movs	r3, #1
 801759e:	4093      	lsls	r3, r2
 80175a0:	608b      	str	r3, [r1, #8]
 80175a2:	4648      	mov	r0, r9
 80175a4:	f001 f9b6 	bl	8018914 <_Bfree>
 80175a8:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80175ac:	2200      	movs	r2, #0
 80175ae:	601a      	str	r2, [r3, #0]
 80175b0:	1e2b      	subs	r3, r5, #0
 80175b2:	bfbb      	ittet	lt
 80175b4:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80175b8:	9303      	strlt	r3, [sp, #12]
 80175ba:	2300      	movge	r3, #0
 80175bc:	2201      	movlt	r2, #1
 80175be:	bfac      	ite	ge
 80175c0:	6033      	strge	r3, [r6, #0]
 80175c2:	6032      	strlt	r2, [r6, #0]
 80175c4:	4b90      	ldr	r3, [pc, #576]	@ (8017808 <_dtoa_r+0x2b8>)
 80175c6:	9e03      	ldr	r6, [sp, #12]
 80175c8:	43b3      	bics	r3, r6
 80175ca:	d110      	bne.n	80175ee <_dtoa_r+0x9e>
 80175cc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80175ce:	f242 730f 	movw	r3, #9999	@ 0x270f
 80175d2:	6013      	str	r3, [r2, #0]
 80175d4:	f3c6 0313 	ubfx	r3, r6, #0, #20
 80175d8:	4323      	orrs	r3, r4
 80175da:	f000 84de 	beq.w	8017f9a <_dtoa_r+0xa4a>
 80175de:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80175e0:	4f8a      	ldr	r7, [pc, #552]	@ (801780c <_dtoa_r+0x2bc>)
 80175e2:	2b00      	cmp	r3, #0
 80175e4:	f000 84e0 	beq.w	8017fa8 <_dtoa_r+0xa58>
 80175e8:	1cfb      	adds	r3, r7, #3
 80175ea:	f000 bcdb 	b.w	8017fa4 <_dtoa_r+0xa54>
 80175ee:	ed9d 8b02 	vldr	d8, [sp, #8]
 80175f2:	eeb5 8b40 	vcmp.f64	d8, #0.0
 80175f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175fa:	d10a      	bne.n	8017612 <_dtoa_r+0xc2>
 80175fc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80175fe:	2301      	movs	r3, #1
 8017600:	6013      	str	r3, [r2, #0]
 8017602:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8017604:	b113      	cbz	r3, 801760c <_dtoa_r+0xbc>
 8017606:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8017608:	4b81      	ldr	r3, [pc, #516]	@ (8017810 <_dtoa_r+0x2c0>)
 801760a:	6013      	str	r3, [r2, #0]
 801760c:	4f81      	ldr	r7, [pc, #516]	@ (8017814 <_dtoa_r+0x2c4>)
 801760e:	f000 bccb 	b.w	8017fa8 <_dtoa_r+0xa58>
 8017612:	aa0e      	add	r2, sp, #56	@ 0x38
 8017614:	a90f      	add	r1, sp, #60	@ 0x3c
 8017616:	4648      	mov	r0, r9
 8017618:	eeb0 0b48 	vmov.f64	d0, d8
 801761c:	f001 fd1e 	bl	801905c <__d2b>
 8017620:	f3c6 530a 	ubfx	r3, r6, #20, #11
 8017624:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8017626:	9001      	str	r0, [sp, #4]
 8017628:	2b00      	cmp	r3, #0
 801762a:	d045      	beq.n	80176b8 <_dtoa_r+0x168>
 801762c:	eeb0 7b48 	vmov.f64	d7, d8
 8017630:	ee18 1a90 	vmov	r1, s17
 8017634:	f3c1 0113 	ubfx	r1, r1, #0, #20
 8017638:	f041 517f 	orr.w	r1, r1, #1069547520	@ 0x3fc00000
 801763c:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 8017640:	f2a3 33ff 	subw	r3, r3, #1023	@ 0x3ff
 8017644:	2500      	movs	r5, #0
 8017646:	ee07 1a90 	vmov	s15, r1
 801764a:	eeb7 6b08 	vmov.f64	d6, #120	@ 0x3fc00000  1.5
 801764e:	ed9f 5b66 	vldr	d5, [pc, #408]	@ 80177e8 <_dtoa_r+0x298>
 8017652:	ee37 7b46 	vsub.f64	d7, d7, d6
 8017656:	ed9f 6b66 	vldr	d6, [pc, #408]	@ 80177f0 <_dtoa_r+0x2a0>
 801765a:	eea7 6b05 	vfma.f64	d6, d7, d5
 801765e:	ed9f 5b66 	vldr	d5, [pc, #408]	@ 80177f8 <_dtoa_r+0x2a8>
 8017662:	ee07 3a90 	vmov	s15, r3
 8017666:	eeb8 4be7 	vcvt.f64.s32	d4, s15
 801766a:	eeb0 7b46 	vmov.f64	d7, d6
 801766e:	eea4 7b05 	vfma.f64	d7, d4, d5
 8017672:	eefd 6bc7 	vcvt.s32.f64	s13, d7
 8017676:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 801767a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801767e:	ee16 8a90 	vmov	r8, s13
 8017682:	d508      	bpl.n	8017696 <_dtoa_r+0x146>
 8017684:	eeb8 6be6 	vcvt.f64.s32	d6, s13
 8017688:	eeb4 6b47 	vcmp.f64	d6, d7
 801768c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017690:	bf18      	it	ne
 8017692:	f108 38ff 	addne.w	r8, r8, #4294967295
 8017696:	f1b8 0f16 	cmp.w	r8, #22
 801769a:	d82b      	bhi.n	80176f4 <_dtoa_r+0x1a4>
 801769c:	495e      	ldr	r1, [pc, #376]	@ (8017818 <_dtoa_r+0x2c8>)
 801769e:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
 80176a2:	ed91 7b00 	vldr	d7, [r1]
 80176a6:	eeb4 8bc7 	vcmpe.f64	d8, d7
 80176aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176ae:	d501      	bpl.n	80176b4 <_dtoa_r+0x164>
 80176b0:	f108 38ff 	add.w	r8, r8, #4294967295
 80176b4:	2100      	movs	r1, #0
 80176b6:	e01e      	b.n	80176f6 <_dtoa_r+0x1a6>
 80176b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80176ba:	4413      	add	r3, r2
 80176bc:	f203 4132 	addw	r1, r3, #1074	@ 0x432
 80176c0:	2920      	cmp	r1, #32
 80176c2:	bfc1      	itttt	gt
 80176c4:	f1c1 0140 	rsbgt	r1, r1, #64	@ 0x40
 80176c8:	408e      	lslgt	r6, r1
 80176ca:	f203 4112 	addwgt	r1, r3, #1042	@ 0x412
 80176ce:	fa24 f101 	lsrgt.w	r1, r4, r1
 80176d2:	bfd6      	itet	le
 80176d4:	f1c1 0120 	rsble	r1, r1, #32
 80176d8:	4331      	orrgt	r1, r6
 80176da:	fa04 f101 	lslle.w	r1, r4, r1
 80176de:	ee07 1a90 	vmov	s15, r1
 80176e2:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80176e6:	3b01      	subs	r3, #1
 80176e8:	ee17 1a90 	vmov	r1, s15
 80176ec:	2501      	movs	r5, #1
 80176ee:	f1a1 71f8 	sub.w	r1, r1, #32505856	@ 0x1f00000
 80176f2:	e7a8      	b.n	8017646 <_dtoa_r+0xf6>
 80176f4:	2101      	movs	r1, #1
 80176f6:	1ad2      	subs	r2, r2, r3
 80176f8:	1e53      	subs	r3, r2, #1
 80176fa:	9306      	str	r3, [sp, #24]
 80176fc:	bf45      	ittet	mi
 80176fe:	f1c2 0301 	rsbmi	r3, r2, #1
 8017702:	9305      	strmi	r3, [sp, #20]
 8017704:	2300      	movpl	r3, #0
 8017706:	2300      	movmi	r3, #0
 8017708:	bf4c      	ite	mi
 801770a:	9306      	strmi	r3, [sp, #24]
 801770c:	9305      	strpl	r3, [sp, #20]
 801770e:	f1b8 0f00 	cmp.w	r8, #0
 8017712:	910c      	str	r1, [sp, #48]	@ 0x30
 8017714:	db18      	blt.n	8017748 <_dtoa_r+0x1f8>
 8017716:	9b06      	ldr	r3, [sp, #24]
 8017718:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 801771c:	4443      	add	r3, r8
 801771e:	9306      	str	r3, [sp, #24]
 8017720:	2300      	movs	r3, #0
 8017722:	9a07      	ldr	r2, [sp, #28]
 8017724:	2a09      	cmp	r2, #9
 8017726:	d849      	bhi.n	80177bc <_dtoa_r+0x26c>
 8017728:	2a05      	cmp	r2, #5
 801772a:	bfc4      	itt	gt
 801772c:	3a04      	subgt	r2, #4
 801772e:	9207      	strgt	r2, [sp, #28]
 8017730:	9a07      	ldr	r2, [sp, #28]
 8017732:	f1a2 0202 	sub.w	r2, r2, #2
 8017736:	bfcc      	ite	gt
 8017738:	2400      	movgt	r4, #0
 801773a:	2401      	movle	r4, #1
 801773c:	2a03      	cmp	r2, #3
 801773e:	d848      	bhi.n	80177d2 <_dtoa_r+0x282>
 8017740:	e8df f002 	tbb	[pc, r2]
 8017744:	3a2c2e0b 	.word	0x3a2c2e0b
 8017748:	9b05      	ldr	r3, [sp, #20]
 801774a:	2200      	movs	r2, #0
 801774c:	eba3 0308 	sub.w	r3, r3, r8
 8017750:	9305      	str	r3, [sp, #20]
 8017752:	920a      	str	r2, [sp, #40]	@ 0x28
 8017754:	f1c8 0300 	rsb	r3, r8, #0
 8017758:	e7e3      	b.n	8017722 <_dtoa_r+0x1d2>
 801775a:	2200      	movs	r2, #0
 801775c:	9208      	str	r2, [sp, #32]
 801775e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017760:	2a00      	cmp	r2, #0
 8017762:	dc39      	bgt.n	80177d8 <_dtoa_r+0x288>
 8017764:	f04f 0b01 	mov.w	fp, #1
 8017768:	46da      	mov	sl, fp
 801776a:	465a      	mov	r2, fp
 801776c:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 8017770:	f8d9 701c 	ldr.w	r7, [r9, #28]
 8017774:	2100      	movs	r1, #0
 8017776:	2004      	movs	r0, #4
 8017778:	f100 0614 	add.w	r6, r0, #20
 801777c:	4296      	cmp	r6, r2
 801777e:	d930      	bls.n	80177e2 <_dtoa_r+0x292>
 8017780:	6079      	str	r1, [r7, #4]
 8017782:	4648      	mov	r0, r9
 8017784:	9304      	str	r3, [sp, #16]
 8017786:	f001 f885 	bl	8018894 <_Balloc>
 801778a:	9b04      	ldr	r3, [sp, #16]
 801778c:	4607      	mov	r7, r0
 801778e:	2800      	cmp	r0, #0
 8017790:	d146      	bne.n	8017820 <_dtoa_r+0x2d0>
 8017792:	4b22      	ldr	r3, [pc, #136]	@ (801781c <_dtoa_r+0x2cc>)
 8017794:	4602      	mov	r2, r0
 8017796:	f240 11af 	movw	r1, #431	@ 0x1af
 801779a:	e6f2      	b.n	8017582 <_dtoa_r+0x32>
 801779c:	2201      	movs	r2, #1
 801779e:	e7dd      	b.n	801775c <_dtoa_r+0x20c>
 80177a0:	2200      	movs	r2, #0
 80177a2:	9208      	str	r2, [sp, #32]
 80177a4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80177a6:	eb08 0b02 	add.w	fp, r8, r2
 80177aa:	f10b 0a01 	add.w	sl, fp, #1
 80177ae:	4652      	mov	r2, sl
 80177b0:	2a01      	cmp	r2, #1
 80177b2:	bfb8      	it	lt
 80177b4:	2201      	movlt	r2, #1
 80177b6:	e7db      	b.n	8017770 <_dtoa_r+0x220>
 80177b8:	2201      	movs	r2, #1
 80177ba:	e7f2      	b.n	80177a2 <_dtoa_r+0x252>
 80177bc:	2401      	movs	r4, #1
 80177be:	2200      	movs	r2, #0
 80177c0:	e9cd 2407 	strd	r2, r4, [sp, #28]
 80177c4:	f04f 3bff 	mov.w	fp, #4294967295
 80177c8:	2100      	movs	r1, #0
 80177ca:	46da      	mov	sl, fp
 80177cc:	2212      	movs	r2, #18
 80177ce:	9109      	str	r1, [sp, #36]	@ 0x24
 80177d0:	e7ce      	b.n	8017770 <_dtoa_r+0x220>
 80177d2:	2201      	movs	r2, #1
 80177d4:	9208      	str	r2, [sp, #32]
 80177d6:	e7f5      	b.n	80177c4 <_dtoa_r+0x274>
 80177d8:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80177dc:	46da      	mov	sl, fp
 80177de:	465a      	mov	r2, fp
 80177e0:	e7c6      	b.n	8017770 <_dtoa_r+0x220>
 80177e2:	3101      	adds	r1, #1
 80177e4:	0040      	lsls	r0, r0, #1
 80177e6:	e7c7      	b.n	8017778 <_dtoa_r+0x228>
 80177e8:	636f4361 	.word	0x636f4361
 80177ec:	3fd287a7 	.word	0x3fd287a7
 80177f0:	8b60c8b3 	.word	0x8b60c8b3
 80177f4:	3fc68a28 	.word	0x3fc68a28
 80177f8:	509f79fb 	.word	0x509f79fb
 80177fc:	3fd34413 	.word	0x3fd34413
 8017800:	0801b222 	.word	0x0801b222
 8017804:	0801b239 	.word	0x0801b239
 8017808:	7ff00000 	.word	0x7ff00000
 801780c:	0801b21e 	.word	0x0801b21e
 8017810:	0801b1ea 	.word	0x0801b1ea
 8017814:	0801b1e9 	.word	0x0801b1e9
 8017818:	0801b390 	.word	0x0801b390
 801781c:	0801b291 	.word	0x0801b291
 8017820:	f8d9 201c 	ldr.w	r2, [r9, #28]
 8017824:	f1ba 0f0e 	cmp.w	sl, #14
 8017828:	6010      	str	r0, [r2, #0]
 801782a:	d86f      	bhi.n	801790c <_dtoa_r+0x3bc>
 801782c:	2c00      	cmp	r4, #0
 801782e:	d06d      	beq.n	801790c <_dtoa_r+0x3bc>
 8017830:	f1b8 0f00 	cmp.w	r8, #0
 8017834:	f340 80c2 	ble.w	80179bc <_dtoa_r+0x46c>
 8017838:	4aca      	ldr	r2, [pc, #808]	@ (8017b64 <_dtoa_r+0x614>)
 801783a:	f008 010f 	and.w	r1, r8, #15
 801783e:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 8017842:	f418 7f80 	tst.w	r8, #256	@ 0x100
 8017846:	ed92 7b00 	vldr	d7, [r2]
 801784a:	ea4f 1128 	mov.w	r1, r8, asr #4
 801784e:	f000 80a9 	beq.w	80179a4 <_dtoa_r+0x454>
 8017852:	4ac5      	ldr	r2, [pc, #788]	@ (8017b68 <_dtoa_r+0x618>)
 8017854:	ed92 6b08 	vldr	d6, [r2, #32]
 8017858:	ee88 6b06 	vdiv.f64	d6, d8, d6
 801785c:	ed8d 6b02 	vstr	d6, [sp, #8]
 8017860:	f001 010f 	and.w	r1, r1, #15
 8017864:	2203      	movs	r2, #3
 8017866:	48c0      	ldr	r0, [pc, #768]	@ (8017b68 <_dtoa_r+0x618>)
 8017868:	2900      	cmp	r1, #0
 801786a:	f040 809d 	bne.w	80179a8 <_dtoa_r+0x458>
 801786e:	ed9d 6b02 	vldr	d6, [sp, #8]
 8017872:	ee86 7b07 	vdiv.f64	d7, d6, d7
 8017876:	ed8d 7b02 	vstr	d7, [sp, #8]
 801787a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801787c:	ed9d 7b02 	vldr	d7, [sp, #8]
 8017880:	2900      	cmp	r1, #0
 8017882:	f000 80c1 	beq.w	8017a08 <_dtoa_r+0x4b8>
 8017886:	eeb7 6b00 	vmov.f64	d6, #112	@ 0x3f800000  1.0
 801788a:	eeb4 7bc6 	vcmpe.f64	d7, d6
 801788e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017892:	f140 80b9 	bpl.w	8017a08 <_dtoa_r+0x4b8>
 8017896:	f1ba 0f00 	cmp.w	sl, #0
 801789a:	f000 80b5 	beq.w	8017a08 <_dtoa_r+0x4b8>
 801789e:	f1bb 0f00 	cmp.w	fp, #0
 80178a2:	dd31      	ble.n	8017908 <_dtoa_r+0x3b8>
 80178a4:	eeb2 6b04 	vmov.f64	d6, #36	@ 0x41200000  10.0
 80178a8:	ee27 7b06 	vmul.f64	d7, d7, d6
 80178ac:	ed8d 7b02 	vstr	d7, [sp, #8]
 80178b0:	f108 31ff 	add.w	r1, r8, #4294967295
 80178b4:	9104      	str	r1, [sp, #16]
 80178b6:	3201      	adds	r2, #1
 80178b8:	465c      	mov	r4, fp
 80178ba:	ed9d 6b02 	vldr	d6, [sp, #8]
 80178be:	eeb1 5b0c 	vmov.f64	d5, #28	@ 0x40e00000  7.0
 80178c2:	ee07 2a90 	vmov	s15, r2
 80178c6:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 80178ca:	eea7 5b06 	vfma.f64	d5, d7, d6
 80178ce:	ee15 2a90 	vmov	r2, s11
 80178d2:	ec51 0b15 	vmov	r0, r1, d5
 80178d6:	f1a2 7150 	sub.w	r1, r2, #54525952	@ 0x3400000
 80178da:	2c00      	cmp	r4, #0
 80178dc:	f040 8098 	bne.w	8017a10 <_dtoa_r+0x4c0>
 80178e0:	eeb1 7b04 	vmov.f64	d7, #20	@ 0x40a00000  5.0
 80178e4:	ee36 6b47 	vsub.f64	d6, d6, d7
 80178e8:	ec41 0b17 	vmov	d7, r0, r1
 80178ec:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80178f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80178f4:	f300 8261 	bgt.w	8017dba <_dtoa_r+0x86a>
 80178f8:	eeb1 7b47 	vneg.f64	d7, d7
 80178fc:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8017900:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017904:	f100 80f5 	bmi.w	8017af2 <_dtoa_r+0x5a2>
 8017908:	ed8d 8b02 	vstr	d8, [sp, #8]
 801790c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801790e:	2a00      	cmp	r2, #0
 8017910:	f2c0 812c 	blt.w	8017b6c <_dtoa_r+0x61c>
 8017914:	f1b8 0f0e 	cmp.w	r8, #14
 8017918:	f300 8128 	bgt.w	8017b6c <_dtoa_r+0x61c>
 801791c:	4b91      	ldr	r3, [pc, #580]	@ (8017b64 <_dtoa_r+0x614>)
 801791e:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8017922:	ed93 6b00 	vldr	d6, [r3]
 8017926:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017928:	2b00      	cmp	r3, #0
 801792a:	da03      	bge.n	8017934 <_dtoa_r+0x3e4>
 801792c:	f1ba 0f00 	cmp.w	sl, #0
 8017930:	f340 80d2 	ble.w	8017ad8 <_dtoa_r+0x588>
 8017934:	eeb2 4b04 	vmov.f64	d4, #36	@ 0x41200000  10.0
 8017938:	ed9d 7b02 	vldr	d7, [sp, #8]
 801793c:	463e      	mov	r6, r7
 801793e:	ee87 5b06 	vdiv.f64	d5, d7, d6
 8017942:	eebd 5bc5 	vcvt.s32.f64	s10, d5
 8017946:	ee15 3a10 	vmov	r3, s10
 801794a:	3330      	adds	r3, #48	@ 0x30
 801794c:	f806 3b01 	strb.w	r3, [r6], #1
 8017950:	1bf3      	subs	r3, r6, r7
 8017952:	459a      	cmp	sl, r3
 8017954:	eeb8 3bc5 	vcvt.f64.s32	d3, s10
 8017958:	eea3 7b46 	vfms.f64	d7, d3, d6
 801795c:	f040 80f8 	bne.w	8017b50 <_dtoa_r+0x600>
 8017960:	ee37 7b07 	vadd.f64	d7, d7, d7
 8017964:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8017968:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801796c:	f300 80dd 	bgt.w	8017b2a <_dtoa_r+0x5da>
 8017970:	eeb4 7b46 	vcmp.f64	d7, d6
 8017974:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017978:	d104      	bne.n	8017984 <_dtoa_r+0x434>
 801797a:	ee15 3a10 	vmov	r3, s10
 801797e:	07db      	lsls	r3, r3, #31
 8017980:	f100 80d3 	bmi.w	8017b2a <_dtoa_r+0x5da>
 8017984:	9901      	ldr	r1, [sp, #4]
 8017986:	4648      	mov	r0, r9
 8017988:	f000 ffc4 	bl	8018914 <_Bfree>
 801798c:	2300      	movs	r3, #0
 801798e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017990:	7033      	strb	r3, [r6, #0]
 8017992:	f108 0301 	add.w	r3, r8, #1
 8017996:	6013      	str	r3, [r2, #0]
 8017998:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801799a:	2b00      	cmp	r3, #0
 801799c:	f000 8304 	beq.w	8017fa8 <_dtoa_r+0xa58>
 80179a0:	601e      	str	r6, [r3, #0]
 80179a2:	e301      	b.n	8017fa8 <_dtoa_r+0xa58>
 80179a4:	2202      	movs	r2, #2
 80179a6:	e75e      	b.n	8017866 <_dtoa_r+0x316>
 80179a8:	07cc      	lsls	r4, r1, #31
 80179aa:	d504      	bpl.n	80179b6 <_dtoa_r+0x466>
 80179ac:	ed90 6b00 	vldr	d6, [r0]
 80179b0:	3201      	adds	r2, #1
 80179b2:	ee27 7b06 	vmul.f64	d7, d7, d6
 80179b6:	1049      	asrs	r1, r1, #1
 80179b8:	3008      	adds	r0, #8
 80179ba:	e755      	b.n	8017868 <_dtoa_r+0x318>
 80179bc:	d022      	beq.n	8017a04 <_dtoa_r+0x4b4>
 80179be:	f1c8 0100 	rsb	r1, r8, #0
 80179c2:	4a68      	ldr	r2, [pc, #416]	@ (8017b64 <_dtoa_r+0x614>)
 80179c4:	f001 000f 	and.w	r0, r1, #15
 80179c8:	eb02 02c0 	add.w	r2, r2, r0, lsl #3
 80179cc:	ed92 7b00 	vldr	d7, [r2]
 80179d0:	ee28 7b07 	vmul.f64	d7, d8, d7
 80179d4:	ed8d 7b02 	vstr	d7, [sp, #8]
 80179d8:	4863      	ldr	r0, [pc, #396]	@ (8017b68 <_dtoa_r+0x618>)
 80179da:	1109      	asrs	r1, r1, #4
 80179dc:	2400      	movs	r4, #0
 80179de:	2202      	movs	r2, #2
 80179e0:	b929      	cbnz	r1, 80179ee <_dtoa_r+0x49e>
 80179e2:	2c00      	cmp	r4, #0
 80179e4:	f43f af49 	beq.w	801787a <_dtoa_r+0x32a>
 80179e8:	ed8d 7b02 	vstr	d7, [sp, #8]
 80179ec:	e745      	b.n	801787a <_dtoa_r+0x32a>
 80179ee:	07ce      	lsls	r6, r1, #31
 80179f0:	d505      	bpl.n	80179fe <_dtoa_r+0x4ae>
 80179f2:	ed90 6b00 	vldr	d6, [r0]
 80179f6:	3201      	adds	r2, #1
 80179f8:	2401      	movs	r4, #1
 80179fa:	ee27 7b06 	vmul.f64	d7, d7, d6
 80179fe:	1049      	asrs	r1, r1, #1
 8017a00:	3008      	adds	r0, #8
 8017a02:	e7ed      	b.n	80179e0 <_dtoa_r+0x490>
 8017a04:	2202      	movs	r2, #2
 8017a06:	e738      	b.n	801787a <_dtoa_r+0x32a>
 8017a08:	f8cd 8010 	str.w	r8, [sp, #16]
 8017a0c:	4654      	mov	r4, sl
 8017a0e:	e754      	b.n	80178ba <_dtoa_r+0x36a>
 8017a10:	4a54      	ldr	r2, [pc, #336]	@ (8017b64 <_dtoa_r+0x614>)
 8017a12:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 8017a16:	ed12 4b02 	vldr	d4, [r2, #-8]
 8017a1a:	9a08      	ldr	r2, [sp, #32]
 8017a1c:	ec41 0b17 	vmov	d7, r0, r1
 8017a20:	443c      	add	r4, r7
 8017a22:	b34a      	cbz	r2, 8017a78 <_dtoa_r+0x528>
 8017a24:	eeb6 3b00 	vmov.f64	d3, #96	@ 0x3f000000  0.5
 8017a28:	eeb7 2b00 	vmov.f64	d2, #112	@ 0x3f800000  1.0
 8017a2c:	463e      	mov	r6, r7
 8017a2e:	ee83 5b04 	vdiv.f64	d5, d3, d4
 8017a32:	eeb2 3b04 	vmov.f64	d3, #36	@ 0x41200000  10.0
 8017a36:	ee35 7b47 	vsub.f64	d7, d5, d7
 8017a3a:	eefd 4bc6 	vcvt.s32.f64	s9, d6
 8017a3e:	ee14 2a90 	vmov	r2, s9
 8017a42:	eeb8 5be4 	vcvt.f64.s32	d5, s9
 8017a46:	3230      	adds	r2, #48	@ 0x30
 8017a48:	ee36 6b45 	vsub.f64	d6, d6, d5
 8017a4c:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8017a50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017a54:	f806 2b01 	strb.w	r2, [r6], #1
 8017a58:	d438      	bmi.n	8017acc <_dtoa_r+0x57c>
 8017a5a:	ee32 5b46 	vsub.f64	d5, d2, d6
 8017a5e:	eeb4 5bc7 	vcmpe.f64	d5, d7
 8017a62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017a66:	d462      	bmi.n	8017b2e <_dtoa_r+0x5de>
 8017a68:	42a6      	cmp	r6, r4
 8017a6a:	f43f af4d 	beq.w	8017908 <_dtoa_r+0x3b8>
 8017a6e:	ee27 7b03 	vmul.f64	d7, d7, d3
 8017a72:	ee26 6b03 	vmul.f64	d6, d6, d3
 8017a76:	e7e0      	b.n	8017a3a <_dtoa_r+0x4ea>
 8017a78:	4621      	mov	r1, r4
 8017a7a:	463e      	mov	r6, r7
 8017a7c:	ee27 7b04 	vmul.f64	d7, d7, d4
 8017a80:	eeb2 3b04 	vmov.f64	d3, #36	@ 0x41200000  10.0
 8017a84:	eefd 4bc6 	vcvt.s32.f64	s9, d6
 8017a88:	ee14 2a90 	vmov	r2, s9
 8017a8c:	3230      	adds	r2, #48	@ 0x30
 8017a8e:	f806 2b01 	strb.w	r2, [r6], #1
 8017a92:	42a6      	cmp	r6, r4
 8017a94:	eeb8 5be4 	vcvt.f64.s32	d5, s9
 8017a98:	ee36 6b45 	vsub.f64	d6, d6, d5
 8017a9c:	d119      	bne.n	8017ad2 <_dtoa_r+0x582>
 8017a9e:	eeb6 5b00 	vmov.f64	d5, #96	@ 0x3f000000  0.5
 8017aa2:	ee37 4b05 	vadd.f64	d4, d7, d5
 8017aa6:	eeb4 6bc4 	vcmpe.f64	d6, d4
 8017aaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017aae:	dc3e      	bgt.n	8017b2e <_dtoa_r+0x5de>
 8017ab0:	ee35 5b47 	vsub.f64	d5, d5, d7
 8017ab4:	eeb4 6bc5 	vcmpe.f64	d6, d5
 8017ab8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017abc:	f57f af24 	bpl.w	8017908 <_dtoa_r+0x3b8>
 8017ac0:	460e      	mov	r6, r1
 8017ac2:	3901      	subs	r1, #1
 8017ac4:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8017ac8:	2b30      	cmp	r3, #48	@ 0x30
 8017aca:	d0f9      	beq.n	8017ac0 <_dtoa_r+0x570>
 8017acc:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8017ad0:	e758      	b.n	8017984 <_dtoa_r+0x434>
 8017ad2:	ee26 6b03 	vmul.f64	d6, d6, d3
 8017ad6:	e7d5      	b.n	8017a84 <_dtoa_r+0x534>
 8017ad8:	d10b      	bne.n	8017af2 <_dtoa_r+0x5a2>
 8017ada:	eeb1 7b04 	vmov.f64	d7, #20	@ 0x40a00000  5.0
 8017ade:	ee26 6b07 	vmul.f64	d6, d6, d7
 8017ae2:	ed9d 7b02 	vldr	d7, [sp, #8]
 8017ae6:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8017aea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017aee:	f2c0 8161 	blt.w	8017db4 <_dtoa_r+0x864>
 8017af2:	2400      	movs	r4, #0
 8017af4:	4625      	mov	r5, r4
 8017af6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017af8:	43db      	mvns	r3, r3
 8017afa:	9304      	str	r3, [sp, #16]
 8017afc:	463e      	mov	r6, r7
 8017afe:	f04f 0800 	mov.w	r8, #0
 8017b02:	4621      	mov	r1, r4
 8017b04:	4648      	mov	r0, r9
 8017b06:	f000 ff05 	bl	8018914 <_Bfree>
 8017b0a:	2d00      	cmp	r5, #0
 8017b0c:	d0de      	beq.n	8017acc <_dtoa_r+0x57c>
 8017b0e:	f1b8 0f00 	cmp.w	r8, #0
 8017b12:	d005      	beq.n	8017b20 <_dtoa_r+0x5d0>
 8017b14:	45a8      	cmp	r8, r5
 8017b16:	d003      	beq.n	8017b20 <_dtoa_r+0x5d0>
 8017b18:	4641      	mov	r1, r8
 8017b1a:	4648      	mov	r0, r9
 8017b1c:	f000 fefa 	bl	8018914 <_Bfree>
 8017b20:	4629      	mov	r1, r5
 8017b22:	4648      	mov	r0, r9
 8017b24:	f000 fef6 	bl	8018914 <_Bfree>
 8017b28:	e7d0      	b.n	8017acc <_dtoa_r+0x57c>
 8017b2a:	f8cd 8010 	str.w	r8, [sp, #16]
 8017b2e:	4633      	mov	r3, r6
 8017b30:	461e      	mov	r6, r3
 8017b32:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8017b36:	2a39      	cmp	r2, #57	@ 0x39
 8017b38:	d106      	bne.n	8017b48 <_dtoa_r+0x5f8>
 8017b3a:	429f      	cmp	r7, r3
 8017b3c:	d1f8      	bne.n	8017b30 <_dtoa_r+0x5e0>
 8017b3e:	9a04      	ldr	r2, [sp, #16]
 8017b40:	3201      	adds	r2, #1
 8017b42:	9204      	str	r2, [sp, #16]
 8017b44:	2230      	movs	r2, #48	@ 0x30
 8017b46:	703a      	strb	r2, [r7, #0]
 8017b48:	781a      	ldrb	r2, [r3, #0]
 8017b4a:	3201      	adds	r2, #1
 8017b4c:	701a      	strb	r2, [r3, #0]
 8017b4e:	e7bd      	b.n	8017acc <_dtoa_r+0x57c>
 8017b50:	ee27 7b04 	vmul.f64	d7, d7, d4
 8017b54:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8017b58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b5c:	f47f aeef 	bne.w	801793e <_dtoa_r+0x3ee>
 8017b60:	e710      	b.n	8017984 <_dtoa_r+0x434>
 8017b62:	bf00      	nop
 8017b64:	0801b390 	.word	0x0801b390
 8017b68:	0801b368 	.word	0x0801b368
 8017b6c:	9908      	ldr	r1, [sp, #32]
 8017b6e:	2900      	cmp	r1, #0
 8017b70:	f000 80e3 	beq.w	8017d3a <_dtoa_r+0x7ea>
 8017b74:	9907      	ldr	r1, [sp, #28]
 8017b76:	2901      	cmp	r1, #1
 8017b78:	f300 80c8 	bgt.w	8017d0c <_dtoa_r+0x7bc>
 8017b7c:	2d00      	cmp	r5, #0
 8017b7e:	f000 80c1 	beq.w	8017d04 <_dtoa_r+0x7b4>
 8017b82:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8017b86:	9e05      	ldr	r6, [sp, #20]
 8017b88:	461c      	mov	r4, r3
 8017b8a:	9304      	str	r3, [sp, #16]
 8017b8c:	9b05      	ldr	r3, [sp, #20]
 8017b8e:	4413      	add	r3, r2
 8017b90:	9305      	str	r3, [sp, #20]
 8017b92:	9b06      	ldr	r3, [sp, #24]
 8017b94:	2101      	movs	r1, #1
 8017b96:	4413      	add	r3, r2
 8017b98:	4648      	mov	r0, r9
 8017b9a:	9306      	str	r3, [sp, #24]
 8017b9c:	f000 ffb8 	bl	8018b10 <__i2b>
 8017ba0:	9b04      	ldr	r3, [sp, #16]
 8017ba2:	4605      	mov	r5, r0
 8017ba4:	b166      	cbz	r6, 8017bc0 <_dtoa_r+0x670>
 8017ba6:	9a06      	ldr	r2, [sp, #24]
 8017ba8:	2a00      	cmp	r2, #0
 8017baa:	dd09      	ble.n	8017bc0 <_dtoa_r+0x670>
 8017bac:	42b2      	cmp	r2, r6
 8017bae:	9905      	ldr	r1, [sp, #20]
 8017bb0:	bfa8      	it	ge
 8017bb2:	4632      	movge	r2, r6
 8017bb4:	1a89      	subs	r1, r1, r2
 8017bb6:	9105      	str	r1, [sp, #20]
 8017bb8:	9906      	ldr	r1, [sp, #24]
 8017bba:	1ab6      	subs	r6, r6, r2
 8017bbc:	1a8a      	subs	r2, r1, r2
 8017bbe:	9206      	str	r2, [sp, #24]
 8017bc0:	b1fb      	cbz	r3, 8017c02 <_dtoa_r+0x6b2>
 8017bc2:	9a08      	ldr	r2, [sp, #32]
 8017bc4:	2a00      	cmp	r2, #0
 8017bc6:	f000 80bc 	beq.w	8017d42 <_dtoa_r+0x7f2>
 8017bca:	b19c      	cbz	r4, 8017bf4 <_dtoa_r+0x6a4>
 8017bcc:	4629      	mov	r1, r5
 8017bce:	4622      	mov	r2, r4
 8017bd0:	4648      	mov	r0, r9
 8017bd2:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017bd4:	f001 f85c 	bl	8018c90 <__pow5mult>
 8017bd8:	9a01      	ldr	r2, [sp, #4]
 8017bda:	4601      	mov	r1, r0
 8017bdc:	4605      	mov	r5, r0
 8017bde:	4648      	mov	r0, r9
 8017be0:	f000 ffac 	bl	8018b3c <__multiply>
 8017be4:	9901      	ldr	r1, [sp, #4]
 8017be6:	9004      	str	r0, [sp, #16]
 8017be8:	4648      	mov	r0, r9
 8017bea:	f000 fe93 	bl	8018914 <_Bfree>
 8017bee:	9a04      	ldr	r2, [sp, #16]
 8017bf0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017bf2:	9201      	str	r2, [sp, #4]
 8017bf4:	1b1a      	subs	r2, r3, r4
 8017bf6:	d004      	beq.n	8017c02 <_dtoa_r+0x6b2>
 8017bf8:	9901      	ldr	r1, [sp, #4]
 8017bfa:	4648      	mov	r0, r9
 8017bfc:	f001 f848 	bl	8018c90 <__pow5mult>
 8017c00:	9001      	str	r0, [sp, #4]
 8017c02:	2101      	movs	r1, #1
 8017c04:	4648      	mov	r0, r9
 8017c06:	f000 ff83 	bl	8018b10 <__i2b>
 8017c0a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017c0c:	4604      	mov	r4, r0
 8017c0e:	2b00      	cmp	r3, #0
 8017c10:	f000 81d0 	beq.w	8017fb4 <_dtoa_r+0xa64>
 8017c14:	461a      	mov	r2, r3
 8017c16:	4601      	mov	r1, r0
 8017c18:	4648      	mov	r0, r9
 8017c1a:	f001 f839 	bl	8018c90 <__pow5mult>
 8017c1e:	9b07      	ldr	r3, [sp, #28]
 8017c20:	2b01      	cmp	r3, #1
 8017c22:	4604      	mov	r4, r0
 8017c24:	f300 8095 	bgt.w	8017d52 <_dtoa_r+0x802>
 8017c28:	9b02      	ldr	r3, [sp, #8]
 8017c2a:	2b00      	cmp	r3, #0
 8017c2c:	f040 808b 	bne.w	8017d46 <_dtoa_r+0x7f6>
 8017c30:	9b03      	ldr	r3, [sp, #12]
 8017c32:	f3c3 0213 	ubfx	r2, r3, #0, #20
 8017c36:	2a00      	cmp	r2, #0
 8017c38:	f040 8087 	bne.w	8017d4a <_dtoa_r+0x7fa>
 8017c3c:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8017c40:	0d12      	lsrs	r2, r2, #20
 8017c42:	0512      	lsls	r2, r2, #20
 8017c44:	2a00      	cmp	r2, #0
 8017c46:	f000 8082 	beq.w	8017d4e <_dtoa_r+0x7fe>
 8017c4a:	9b05      	ldr	r3, [sp, #20]
 8017c4c:	3301      	adds	r3, #1
 8017c4e:	9305      	str	r3, [sp, #20]
 8017c50:	9b06      	ldr	r3, [sp, #24]
 8017c52:	3301      	adds	r3, #1
 8017c54:	9306      	str	r3, [sp, #24]
 8017c56:	2301      	movs	r3, #1
 8017c58:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017c5a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017c5c:	2b00      	cmp	r3, #0
 8017c5e:	f000 81af 	beq.w	8017fc0 <_dtoa_r+0xa70>
 8017c62:	6922      	ldr	r2, [r4, #16]
 8017c64:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8017c68:	6910      	ldr	r0, [r2, #16]
 8017c6a:	f000 ff05 	bl	8018a78 <__hi0bits>
 8017c6e:	f1c0 0020 	rsb	r0, r0, #32
 8017c72:	9b06      	ldr	r3, [sp, #24]
 8017c74:	4418      	add	r0, r3
 8017c76:	f010 001f 	ands.w	r0, r0, #31
 8017c7a:	d076      	beq.n	8017d6a <_dtoa_r+0x81a>
 8017c7c:	f1c0 0220 	rsb	r2, r0, #32
 8017c80:	2a04      	cmp	r2, #4
 8017c82:	dd69      	ble.n	8017d58 <_dtoa_r+0x808>
 8017c84:	9b05      	ldr	r3, [sp, #20]
 8017c86:	f1c0 001c 	rsb	r0, r0, #28
 8017c8a:	4403      	add	r3, r0
 8017c8c:	9305      	str	r3, [sp, #20]
 8017c8e:	9b06      	ldr	r3, [sp, #24]
 8017c90:	4406      	add	r6, r0
 8017c92:	4403      	add	r3, r0
 8017c94:	9306      	str	r3, [sp, #24]
 8017c96:	9b05      	ldr	r3, [sp, #20]
 8017c98:	2b00      	cmp	r3, #0
 8017c9a:	dd05      	ble.n	8017ca8 <_dtoa_r+0x758>
 8017c9c:	9901      	ldr	r1, [sp, #4]
 8017c9e:	461a      	mov	r2, r3
 8017ca0:	4648      	mov	r0, r9
 8017ca2:	f001 f84f 	bl	8018d44 <__lshift>
 8017ca6:	9001      	str	r0, [sp, #4]
 8017ca8:	9b06      	ldr	r3, [sp, #24]
 8017caa:	2b00      	cmp	r3, #0
 8017cac:	dd05      	ble.n	8017cba <_dtoa_r+0x76a>
 8017cae:	4621      	mov	r1, r4
 8017cb0:	461a      	mov	r2, r3
 8017cb2:	4648      	mov	r0, r9
 8017cb4:	f001 f846 	bl	8018d44 <__lshift>
 8017cb8:	4604      	mov	r4, r0
 8017cba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017cbc:	2b00      	cmp	r3, #0
 8017cbe:	d056      	beq.n	8017d6e <_dtoa_r+0x81e>
 8017cc0:	9801      	ldr	r0, [sp, #4]
 8017cc2:	4621      	mov	r1, r4
 8017cc4:	f001 f8aa 	bl	8018e1c <__mcmp>
 8017cc8:	2800      	cmp	r0, #0
 8017cca:	da50      	bge.n	8017d6e <_dtoa_r+0x81e>
 8017ccc:	f108 33ff 	add.w	r3, r8, #4294967295
 8017cd0:	9304      	str	r3, [sp, #16]
 8017cd2:	9901      	ldr	r1, [sp, #4]
 8017cd4:	2300      	movs	r3, #0
 8017cd6:	220a      	movs	r2, #10
 8017cd8:	4648      	mov	r0, r9
 8017cda:	f000 fe3d 	bl	8018958 <__multadd>
 8017cde:	9b08      	ldr	r3, [sp, #32]
 8017ce0:	9001      	str	r0, [sp, #4]
 8017ce2:	2b00      	cmp	r3, #0
 8017ce4:	f000 816e 	beq.w	8017fc4 <_dtoa_r+0xa74>
 8017ce8:	4629      	mov	r1, r5
 8017cea:	2300      	movs	r3, #0
 8017cec:	220a      	movs	r2, #10
 8017cee:	4648      	mov	r0, r9
 8017cf0:	f000 fe32 	bl	8018958 <__multadd>
 8017cf4:	f1bb 0f00 	cmp.w	fp, #0
 8017cf8:	4605      	mov	r5, r0
 8017cfa:	dc64      	bgt.n	8017dc6 <_dtoa_r+0x876>
 8017cfc:	9b07      	ldr	r3, [sp, #28]
 8017cfe:	2b02      	cmp	r3, #2
 8017d00:	dc3e      	bgt.n	8017d80 <_dtoa_r+0x830>
 8017d02:	e060      	b.n	8017dc6 <_dtoa_r+0x876>
 8017d04:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8017d06:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 8017d0a:	e73c      	b.n	8017b86 <_dtoa_r+0x636>
 8017d0c:	f10a 34ff 	add.w	r4, sl, #4294967295
 8017d10:	42a3      	cmp	r3, r4
 8017d12:	bfbf      	itttt	lt
 8017d14:	1ae2      	sublt	r2, r4, r3
 8017d16:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8017d18:	189b      	addlt	r3, r3, r2
 8017d1a:	930a      	strlt	r3, [sp, #40]	@ 0x28
 8017d1c:	bfae      	itee	ge
 8017d1e:	1b1c      	subge	r4, r3, r4
 8017d20:	4623      	movlt	r3, r4
 8017d22:	2400      	movlt	r4, #0
 8017d24:	f1ba 0f00 	cmp.w	sl, #0
 8017d28:	bfb5      	itete	lt
 8017d2a:	9a05      	ldrlt	r2, [sp, #20]
 8017d2c:	9e05      	ldrge	r6, [sp, #20]
 8017d2e:	eba2 060a 	sublt.w	r6, r2, sl
 8017d32:	4652      	movge	r2, sl
 8017d34:	bfb8      	it	lt
 8017d36:	2200      	movlt	r2, #0
 8017d38:	e727      	b.n	8017b8a <_dtoa_r+0x63a>
 8017d3a:	9e05      	ldr	r6, [sp, #20]
 8017d3c:	9d08      	ldr	r5, [sp, #32]
 8017d3e:	461c      	mov	r4, r3
 8017d40:	e730      	b.n	8017ba4 <_dtoa_r+0x654>
 8017d42:	461a      	mov	r2, r3
 8017d44:	e758      	b.n	8017bf8 <_dtoa_r+0x6a8>
 8017d46:	2300      	movs	r3, #0
 8017d48:	e786      	b.n	8017c58 <_dtoa_r+0x708>
 8017d4a:	9b02      	ldr	r3, [sp, #8]
 8017d4c:	e784      	b.n	8017c58 <_dtoa_r+0x708>
 8017d4e:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017d50:	e783      	b.n	8017c5a <_dtoa_r+0x70a>
 8017d52:	2300      	movs	r3, #0
 8017d54:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017d56:	e784      	b.n	8017c62 <_dtoa_r+0x712>
 8017d58:	d09d      	beq.n	8017c96 <_dtoa_r+0x746>
 8017d5a:	9b05      	ldr	r3, [sp, #20]
 8017d5c:	321c      	adds	r2, #28
 8017d5e:	4413      	add	r3, r2
 8017d60:	9305      	str	r3, [sp, #20]
 8017d62:	9b06      	ldr	r3, [sp, #24]
 8017d64:	4416      	add	r6, r2
 8017d66:	4413      	add	r3, r2
 8017d68:	e794      	b.n	8017c94 <_dtoa_r+0x744>
 8017d6a:	4602      	mov	r2, r0
 8017d6c:	e7f5      	b.n	8017d5a <_dtoa_r+0x80a>
 8017d6e:	f1ba 0f00 	cmp.w	sl, #0
 8017d72:	f8cd 8010 	str.w	r8, [sp, #16]
 8017d76:	46d3      	mov	fp, sl
 8017d78:	dc21      	bgt.n	8017dbe <_dtoa_r+0x86e>
 8017d7a:	9b07      	ldr	r3, [sp, #28]
 8017d7c:	2b02      	cmp	r3, #2
 8017d7e:	dd1e      	ble.n	8017dbe <_dtoa_r+0x86e>
 8017d80:	f1bb 0f00 	cmp.w	fp, #0
 8017d84:	f47f aeb7 	bne.w	8017af6 <_dtoa_r+0x5a6>
 8017d88:	4621      	mov	r1, r4
 8017d8a:	465b      	mov	r3, fp
 8017d8c:	2205      	movs	r2, #5
 8017d8e:	4648      	mov	r0, r9
 8017d90:	f000 fde2 	bl	8018958 <__multadd>
 8017d94:	4601      	mov	r1, r0
 8017d96:	4604      	mov	r4, r0
 8017d98:	9801      	ldr	r0, [sp, #4]
 8017d9a:	f001 f83f 	bl	8018e1c <__mcmp>
 8017d9e:	2800      	cmp	r0, #0
 8017da0:	f77f aea9 	ble.w	8017af6 <_dtoa_r+0x5a6>
 8017da4:	463e      	mov	r6, r7
 8017da6:	2331      	movs	r3, #49	@ 0x31
 8017da8:	f806 3b01 	strb.w	r3, [r6], #1
 8017dac:	9b04      	ldr	r3, [sp, #16]
 8017dae:	3301      	adds	r3, #1
 8017db0:	9304      	str	r3, [sp, #16]
 8017db2:	e6a4      	b.n	8017afe <_dtoa_r+0x5ae>
 8017db4:	f8cd 8010 	str.w	r8, [sp, #16]
 8017db8:	4654      	mov	r4, sl
 8017dba:	4625      	mov	r5, r4
 8017dbc:	e7f2      	b.n	8017da4 <_dtoa_r+0x854>
 8017dbe:	9b08      	ldr	r3, [sp, #32]
 8017dc0:	2b00      	cmp	r3, #0
 8017dc2:	f000 8103 	beq.w	8017fcc <_dtoa_r+0xa7c>
 8017dc6:	2e00      	cmp	r6, #0
 8017dc8:	dd05      	ble.n	8017dd6 <_dtoa_r+0x886>
 8017dca:	4629      	mov	r1, r5
 8017dcc:	4632      	mov	r2, r6
 8017dce:	4648      	mov	r0, r9
 8017dd0:	f000 ffb8 	bl	8018d44 <__lshift>
 8017dd4:	4605      	mov	r5, r0
 8017dd6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017dd8:	2b00      	cmp	r3, #0
 8017dda:	d058      	beq.n	8017e8e <_dtoa_r+0x93e>
 8017ddc:	6869      	ldr	r1, [r5, #4]
 8017dde:	4648      	mov	r0, r9
 8017de0:	f000 fd58 	bl	8018894 <_Balloc>
 8017de4:	4606      	mov	r6, r0
 8017de6:	b928      	cbnz	r0, 8017df4 <_dtoa_r+0x8a4>
 8017de8:	4b82      	ldr	r3, [pc, #520]	@ (8017ff4 <_dtoa_r+0xaa4>)
 8017dea:	4602      	mov	r2, r0
 8017dec:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8017df0:	f7ff bbc7 	b.w	8017582 <_dtoa_r+0x32>
 8017df4:	692a      	ldr	r2, [r5, #16]
 8017df6:	3202      	adds	r2, #2
 8017df8:	0092      	lsls	r2, r2, #2
 8017dfa:	f105 010c 	add.w	r1, r5, #12
 8017dfe:	300c      	adds	r0, #12
 8017e00:	f7ff fb05 	bl	801740e <memcpy>
 8017e04:	2201      	movs	r2, #1
 8017e06:	4631      	mov	r1, r6
 8017e08:	4648      	mov	r0, r9
 8017e0a:	f000 ff9b 	bl	8018d44 <__lshift>
 8017e0e:	1c7b      	adds	r3, r7, #1
 8017e10:	9305      	str	r3, [sp, #20]
 8017e12:	eb07 030b 	add.w	r3, r7, fp
 8017e16:	9309      	str	r3, [sp, #36]	@ 0x24
 8017e18:	9b02      	ldr	r3, [sp, #8]
 8017e1a:	f003 0301 	and.w	r3, r3, #1
 8017e1e:	46a8      	mov	r8, r5
 8017e20:	9308      	str	r3, [sp, #32]
 8017e22:	4605      	mov	r5, r0
 8017e24:	9b05      	ldr	r3, [sp, #20]
 8017e26:	9801      	ldr	r0, [sp, #4]
 8017e28:	4621      	mov	r1, r4
 8017e2a:	f103 3bff 	add.w	fp, r3, #4294967295
 8017e2e:	f7ff fb07 	bl	8017440 <quorem>
 8017e32:	4641      	mov	r1, r8
 8017e34:	9002      	str	r0, [sp, #8]
 8017e36:	f100 0a30 	add.w	sl, r0, #48	@ 0x30
 8017e3a:	9801      	ldr	r0, [sp, #4]
 8017e3c:	f000 ffee 	bl	8018e1c <__mcmp>
 8017e40:	462a      	mov	r2, r5
 8017e42:	9006      	str	r0, [sp, #24]
 8017e44:	4621      	mov	r1, r4
 8017e46:	4648      	mov	r0, r9
 8017e48:	f001 f804 	bl	8018e54 <__mdiff>
 8017e4c:	68c2      	ldr	r2, [r0, #12]
 8017e4e:	4606      	mov	r6, r0
 8017e50:	b9fa      	cbnz	r2, 8017e92 <_dtoa_r+0x942>
 8017e52:	4601      	mov	r1, r0
 8017e54:	9801      	ldr	r0, [sp, #4]
 8017e56:	f000 ffe1 	bl	8018e1c <__mcmp>
 8017e5a:	4602      	mov	r2, r0
 8017e5c:	4631      	mov	r1, r6
 8017e5e:	4648      	mov	r0, r9
 8017e60:	920a      	str	r2, [sp, #40]	@ 0x28
 8017e62:	f000 fd57 	bl	8018914 <_Bfree>
 8017e66:	9b07      	ldr	r3, [sp, #28]
 8017e68:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017e6a:	9e05      	ldr	r6, [sp, #20]
 8017e6c:	ea43 0102 	orr.w	r1, r3, r2
 8017e70:	9b08      	ldr	r3, [sp, #32]
 8017e72:	4319      	orrs	r1, r3
 8017e74:	d10f      	bne.n	8017e96 <_dtoa_r+0x946>
 8017e76:	f1ba 0f39 	cmp.w	sl, #57	@ 0x39
 8017e7a:	d028      	beq.n	8017ece <_dtoa_r+0x97e>
 8017e7c:	9b06      	ldr	r3, [sp, #24]
 8017e7e:	2b00      	cmp	r3, #0
 8017e80:	dd02      	ble.n	8017e88 <_dtoa_r+0x938>
 8017e82:	9b02      	ldr	r3, [sp, #8]
 8017e84:	f103 0a31 	add.w	sl, r3, #49	@ 0x31
 8017e88:	f88b a000 	strb.w	sl, [fp]
 8017e8c:	e639      	b.n	8017b02 <_dtoa_r+0x5b2>
 8017e8e:	4628      	mov	r0, r5
 8017e90:	e7bd      	b.n	8017e0e <_dtoa_r+0x8be>
 8017e92:	2201      	movs	r2, #1
 8017e94:	e7e2      	b.n	8017e5c <_dtoa_r+0x90c>
 8017e96:	9b06      	ldr	r3, [sp, #24]
 8017e98:	2b00      	cmp	r3, #0
 8017e9a:	db04      	blt.n	8017ea6 <_dtoa_r+0x956>
 8017e9c:	9907      	ldr	r1, [sp, #28]
 8017e9e:	430b      	orrs	r3, r1
 8017ea0:	9908      	ldr	r1, [sp, #32]
 8017ea2:	430b      	orrs	r3, r1
 8017ea4:	d120      	bne.n	8017ee8 <_dtoa_r+0x998>
 8017ea6:	2a00      	cmp	r2, #0
 8017ea8:	ddee      	ble.n	8017e88 <_dtoa_r+0x938>
 8017eaa:	9901      	ldr	r1, [sp, #4]
 8017eac:	2201      	movs	r2, #1
 8017eae:	4648      	mov	r0, r9
 8017eb0:	f000 ff48 	bl	8018d44 <__lshift>
 8017eb4:	4621      	mov	r1, r4
 8017eb6:	9001      	str	r0, [sp, #4]
 8017eb8:	f000 ffb0 	bl	8018e1c <__mcmp>
 8017ebc:	2800      	cmp	r0, #0
 8017ebe:	dc03      	bgt.n	8017ec8 <_dtoa_r+0x978>
 8017ec0:	d1e2      	bne.n	8017e88 <_dtoa_r+0x938>
 8017ec2:	f01a 0f01 	tst.w	sl, #1
 8017ec6:	d0df      	beq.n	8017e88 <_dtoa_r+0x938>
 8017ec8:	f1ba 0f39 	cmp.w	sl, #57	@ 0x39
 8017ecc:	d1d9      	bne.n	8017e82 <_dtoa_r+0x932>
 8017ece:	2339      	movs	r3, #57	@ 0x39
 8017ed0:	f88b 3000 	strb.w	r3, [fp]
 8017ed4:	4633      	mov	r3, r6
 8017ed6:	461e      	mov	r6, r3
 8017ed8:	3b01      	subs	r3, #1
 8017eda:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8017ede:	2a39      	cmp	r2, #57	@ 0x39
 8017ee0:	d053      	beq.n	8017f8a <_dtoa_r+0xa3a>
 8017ee2:	3201      	adds	r2, #1
 8017ee4:	701a      	strb	r2, [r3, #0]
 8017ee6:	e60c      	b.n	8017b02 <_dtoa_r+0x5b2>
 8017ee8:	2a00      	cmp	r2, #0
 8017eea:	dd07      	ble.n	8017efc <_dtoa_r+0x9ac>
 8017eec:	f1ba 0f39 	cmp.w	sl, #57	@ 0x39
 8017ef0:	d0ed      	beq.n	8017ece <_dtoa_r+0x97e>
 8017ef2:	f10a 0301 	add.w	r3, sl, #1
 8017ef6:	f88b 3000 	strb.w	r3, [fp]
 8017efa:	e602      	b.n	8017b02 <_dtoa_r+0x5b2>
 8017efc:	9b05      	ldr	r3, [sp, #20]
 8017efe:	9a05      	ldr	r2, [sp, #20]
 8017f00:	f803 ac01 	strb.w	sl, [r3, #-1]
 8017f04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017f06:	4293      	cmp	r3, r2
 8017f08:	d029      	beq.n	8017f5e <_dtoa_r+0xa0e>
 8017f0a:	9901      	ldr	r1, [sp, #4]
 8017f0c:	2300      	movs	r3, #0
 8017f0e:	220a      	movs	r2, #10
 8017f10:	4648      	mov	r0, r9
 8017f12:	f000 fd21 	bl	8018958 <__multadd>
 8017f16:	45a8      	cmp	r8, r5
 8017f18:	9001      	str	r0, [sp, #4]
 8017f1a:	f04f 0300 	mov.w	r3, #0
 8017f1e:	f04f 020a 	mov.w	r2, #10
 8017f22:	4641      	mov	r1, r8
 8017f24:	4648      	mov	r0, r9
 8017f26:	d107      	bne.n	8017f38 <_dtoa_r+0x9e8>
 8017f28:	f000 fd16 	bl	8018958 <__multadd>
 8017f2c:	4680      	mov	r8, r0
 8017f2e:	4605      	mov	r5, r0
 8017f30:	9b05      	ldr	r3, [sp, #20]
 8017f32:	3301      	adds	r3, #1
 8017f34:	9305      	str	r3, [sp, #20]
 8017f36:	e775      	b.n	8017e24 <_dtoa_r+0x8d4>
 8017f38:	f000 fd0e 	bl	8018958 <__multadd>
 8017f3c:	4629      	mov	r1, r5
 8017f3e:	4680      	mov	r8, r0
 8017f40:	2300      	movs	r3, #0
 8017f42:	220a      	movs	r2, #10
 8017f44:	4648      	mov	r0, r9
 8017f46:	f000 fd07 	bl	8018958 <__multadd>
 8017f4a:	4605      	mov	r5, r0
 8017f4c:	e7f0      	b.n	8017f30 <_dtoa_r+0x9e0>
 8017f4e:	f1bb 0f00 	cmp.w	fp, #0
 8017f52:	bfcc      	ite	gt
 8017f54:	465e      	movgt	r6, fp
 8017f56:	2601      	movle	r6, #1
 8017f58:	443e      	add	r6, r7
 8017f5a:	f04f 0800 	mov.w	r8, #0
 8017f5e:	9901      	ldr	r1, [sp, #4]
 8017f60:	2201      	movs	r2, #1
 8017f62:	4648      	mov	r0, r9
 8017f64:	f000 feee 	bl	8018d44 <__lshift>
 8017f68:	4621      	mov	r1, r4
 8017f6a:	9001      	str	r0, [sp, #4]
 8017f6c:	f000 ff56 	bl	8018e1c <__mcmp>
 8017f70:	2800      	cmp	r0, #0
 8017f72:	dcaf      	bgt.n	8017ed4 <_dtoa_r+0x984>
 8017f74:	d102      	bne.n	8017f7c <_dtoa_r+0xa2c>
 8017f76:	f01a 0f01 	tst.w	sl, #1
 8017f7a:	d1ab      	bne.n	8017ed4 <_dtoa_r+0x984>
 8017f7c:	4633      	mov	r3, r6
 8017f7e:	461e      	mov	r6, r3
 8017f80:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8017f84:	2a30      	cmp	r2, #48	@ 0x30
 8017f86:	d0fa      	beq.n	8017f7e <_dtoa_r+0xa2e>
 8017f88:	e5bb      	b.n	8017b02 <_dtoa_r+0x5b2>
 8017f8a:	429f      	cmp	r7, r3
 8017f8c:	d1a3      	bne.n	8017ed6 <_dtoa_r+0x986>
 8017f8e:	9b04      	ldr	r3, [sp, #16]
 8017f90:	3301      	adds	r3, #1
 8017f92:	9304      	str	r3, [sp, #16]
 8017f94:	2331      	movs	r3, #49	@ 0x31
 8017f96:	703b      	strb	r3, [r7, #0]
 8017f98:	e5b3      	b.n	8017b02 <_dtoa_r+0x5b2>
 8017f9a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8017f9c:	4f16      	ldr	r7, [pc, #88]	@ (8017ff8 <_dtoa_r+0xaa8>)
 8017f9e:	b11b      	cbz	r3, 8017fa8 <_dtoa_r+0xa58>
 8017fa0:	f107 0308 	add.w	r3, r7, #8
 8017fa4:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8017fa6:	6013      	str	r3, [r2, #0]
 8017fa8:	4638      	mov	r0, r7
 8017faa:	b011      	add	sp, #68	@ 0x44
 8017fac:	ecbd 8b02 	vpop	{d8}
 8017fb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017fb4:	9b07      	ldr	r3, [sp, #28]
 8017fb6:	2b01      	cmp	r3, #1
 8017fb8:	f77f ae36 	ble.w	8017c28 <_dtoa_r+0x6d8>
 8017fbc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017fbe:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017fc0:	2001      	movs	r0, #1
 8017fc2:	e656      	b.n	8017c72 <_dtoa_r+0x722>
 8017fc4:	f1bb 0f00 	cmp.w	fp, #0
 8017fc8:	f77f aed7 	ble.w	8017d7a <_dtoa_r+0x82a>
 8017fcc:	463e      	mov	r6, r7
 8017fce:	9801      	ldr	r0, [sp, #4]
 8017fd0:	4621      	mov	r1, r4
 8017fd2:	f7ff fa35 	bl	8017440 <quorem>
 8017fd6:	f100 0a30 	add.w	sl, r0, #48	@ 0x30
 8017fda:	f806 ab01 	strb.w	sl, [r6], #1
 8017fde:	1bf2      	subs	r2, r6, r7
 8017fe0:	4593      	cmp	fp, r2
 8017fe2:	ddb4      	ble.n	8017f4e <_dtoa_r+0x9fe>
 8017fe4:	9901      	ldr	r1, [sp, #4]
 8017fe6:	2300      	movs	r3, #0
 8017fe8:	220a      	movs	r2, #10
 8017fea:	4648      	mov	r0, r9
 8017fec:	f000 fcb4 	bl	8018958 <__multadd>
 8017ff0:	9001      	str	r0, [sp, #4]
 8017ff2:	e7ec      	b.n	8017fce <_dtoa_r+0xa7e>
 8017ff4:	0801b291 	.word	0x0801b291
 8017ff8:	0801b215 	.word	0x0801b215

08017ffc <_free_r>:
 8017ffc:	b538      	push	{r3, r4, r5, lr}
 8017ffe:	4605      	mov	r5, r0
 8018000:	2900      	cmp	r1, #0
 8018002:	d041      	beq.n	8018088 <_free_r+0x8c>
 8018004:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8018008:	1f0c      	subs	r4, r1, #4
 801800a:	2b00      	cmp	r3, #0
 801800c:	bfb8      	it	lt
 801800e:	18e4      	addlt	r4, r4, r3
 8018010:	f000 fc34 	bl	801887c <__malloc_lock>
 8018014:	4a1d      	ldr	r2, [pc, #116]	@ (801808c <_free_r+0x90>)
 8018016:	6813      	ldr	r3, [r2, #0]
 8018018:	b933      	cbnz	r3, 8018028 <_free_r+0x2c>
 801801a:	6063      	str	r3, [r4, #4]
 801801c:	6014      	str	r4, [r2, #0]
 801801e:	4628      	mov	r0, r5
 8018020:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8018024:	f000 bc30 	b.w	8018888 <__malloc_unlock>
 8018028:	42a3      	cmp	r3, r4
 801802a:	d908      	bls.n	801803e <_free_r+0x42>
 801802c:	6820      	ldr	r0, [r4, #0]
 801802e:	1821      	adds	r1, r4, r0
 8018030:	428b      	cmp	r3, r1
 8018032:	bf01      	itttt	eq
 8018034:	6819      	ldreq	r1, [r3, #0]
 8018036:	685b      	ldreq	r3, [r3, #4]
 8018038:	1809      	addeq	r1, r1, r0
 801803a:	6021      	streq	r1, [r4, #0]
 801803c:	e7ed      	b.n	801801a <_free_r+0x1e>
 801803e:	461a      	mov	r2, r3
 8018040:	685b      	ldr	r3, [r3, #4]
 8018042:	b10b      	cbz	r3, 8018048 <_free_r+0x4c>
 8018044:	42a3      	cmp	r3, r4
 8018046:	d9fa      	bls.n	801803e <_free_r+0x42>
 8018048:	6811      	ldr	r1, [r2, #0]
 801804a:	1850      	adds	r0, r2, r1
 801804c:	42a0      	cmp	r0, r4
 801804e:	d10b      	bne.n	8018068 <_free_r+0x6c>
 8018050:	6820      	ldr	r0, [r4, #0]
 8018052:	4401      	add	r1, r0
 8018054:	1850      	adds	r0, r2, r1
 8018056:	4283      	cmp	r3, r0
 8018058:	6011      	str	r1, [r2, #0]
 801805a:	d1e0      	bne.n	801801e <_free_r+0x22>
 801805c:	6818      	ldr	r0, [r3, #0]
 801805e:	685b      	ldr	r3, [r3, #4]
 8018060:	6053      	str	r3, [r2, #4]
 8018062:	4408      	add	r0, r1
 8018064:	6010      	str	r0, [r2, #0]
 8018066:	e7da      	b.n	801801e <_free_r+0x22>
 8018068:	d902      	bls.n	8018070 <_free_r+0x74>
 801806a:	230c      	movs	r3, #12
 801806c:	602b      	str	r3, [r5, #0]
 801806e:	e7d6      	b.n	801801e <_free_r+0x22>
 8018070:	6820      	ldr	r0, [r4, #0]
 8018072:	1821      	adds	r1, r4, r0
 8018074:	428b      	cmp	r3, r1
 8018076:	bf04      	itt	eq
 8018078:	6819      	ldreq	r1, [r3, #0]
 801807a:	685b      	ldreq	r3, [r3, #4]
 801807c:	6063      	str	r3, [r4, #4]
 801807e:	bf04      	itt	eq
 8018080:	1809      	addeq	r1, r1, r0
 8018082:	6021      	streq	r1, [r4, #0]
 8018084:	6054      	str	r4, [r2, #4]
 8018086:	e7ca      	b.n	801801e <_free_r+0x22>
 8018088:	bd38      	pop	{r3, r4, r5, pc}
 801808a:	bf00      	nop
 801808c:	24006270 	.word	0x24006270

08018090 <rshift>:
 8018090:	6903      	ldr	r3, [r0, #16]
 8018092:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8018096:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801809a:	ea4f 1261 	mov.w	r2, r1, asr #5
 801809e:	f100 0414 	add.w	r4, r0, #20
 80180a2:	dd45      	ble.n	8018130 <rshift+0xa0>
 80180a4:	f011 011f 	ands.w	r1, r1, #31
 80180a8:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80180ac:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80180b0:	d10c      	bne.n	80180cc <rshift+0x3c>
 80180b2:	f100 0710 	add.w	r7, r0, #16
 80180b6:	4629      	mov	r1, r5
 80180b8:	42b1      	cmp	r1, r6
 80180ba:	d334      	bcc.n	8018126 <rshift+0x96>
 80180bc:	1a9b      	subs	r3, r3, r2
 80180be:	009b      	lsls	r3, r3, #2
 80180c0:	1eea      	subs	r2, r5, #3
 80180c2:	4296      	cmp	r6, r2
 80180c4:	bf38      	it	cc
 80180c6:	2300      	movcc	r3, #0
 80180c8:	4423      	add	r3, r4
 80180ca:	e015      	b.n	80180f8 <rshift+0x68>
 80180cc:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80180d0:	f1c1 0820 	rsb	r8, r1, #32
 80180d4:	40cf      	lsrs	r7, r1
 80180d6:	f105 0e04 	add.w	lr, r5, #4
 80180da:	46a1      	mov	r9, r4
 80180dc:	4576      	cmp	r6, lr
 80180de:	46f4      	mov	ip, lr
 80180e0:	d815      	bhi.n	801810e <rshift+0x7e>
 80180e2:	1a9a      	subs	r2, r3, r2
 80180e4:	0092      	lsls	r2, r2, #2
 80180e6:	3a04      	subs	r2, #4
 80180e8:	3501      	adds	r5, #1
 80180ea:	42ae      	cmp	r6, r5
 80180ec:	bf38      	it	cc
 80180ee:	2200      	movcc	r2, #0
 80180f0:	18a3      	adds	r3, r4, r2
 80180f2:	50a7      	str	r7, [r4, r2]
 80180f4:	b107      	cbz	r7, 80180f8 <rshift+0x68>
 80180f6:	3304      	adds	r3, #4
 80180f8:	1b1a      	subs	r2, r3, r4
 80180fa:	42a3      	cmp	r3, r4
 80180fc:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8018100:	bf08      	it	eq
 8018102:	2300      	moveq	r3, #0
 8018104:	6102      	str	r2, [r0, #16]
 8018106:	bf08      	it	eq
 8018108:	6143      	streq	r3, [r0, #20]
 801810a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801810e:	f8dc c000 	ldr.w	ip, [ip]
 8018112:	fa0c fc08 	lsl.w	ip, ip, r8
 8018116:	ea4c 0707 	orr.w	r7, ip, r7
 801811a:	f849 7b04 	str.w	r7, [r9], #4
 801811e:	f85e 7b04 	ldr.w	r7, [lr], #4
 8018122:	40cf      	lsrs	r7, r1
 8018124:	e7da      	b.n	80180dc <rshift+0x4c>
 8018126:	f851 cb04 	ldr.w	ip, [r1], #4
 801812a:	f847 cf04 	str.w	ip, [r7, #4]!
 801812e:	e7c3      	b.n	80180b8 <rshift+0x28>
 8018130:	4623      	mov	r3, r4
 8018132:	e7e1      	b.n	80180f8 <rshift+0x68>

08018134 <__hexdig_fun>:
 8018134:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 8018138:	2b09      	cmp	r3, #9
 801813a:	d802      	bhi.n	8018142 <__hexdig_fun+0xe>
 801813c:	3820      	subs	r0, #32
 801813e:	b2c0      	uxtb	r0, r0
 8018140:	4770      	bx	lr
 8018142:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 8018146:	2b05      	cmp	r3, #5
 8018148:	d801      	bhi.n	801814e <__hexdig_fun+0x1a>
 801814a:	3847      	subs	r0, #71	@ 0x47
 801814c:	e7f7      	b.n	801813e <__hexdig_fun+0xa>
 801814e:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8018152:	2b05      	cmp	r3, #5
 8018154:	d801      	bhi.n	801815a <__hexdig_fun+0x26>
 8018156:	3827      	subs	r0, #39	@ 0x27
 8018158:	e7f1      	b.n	801813e <__hexdig_fun+0xa>
 801815a:	2000      	movs	r0, #0
 801815c:	4770      	bx	lr
	...

08018160 <__gethex>:
 8018160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018164:	b085      	sub	sp, #20
 8018166:	468a      	mov	sl, r1
 8018168:	9302      	str	r3, [sp, #8]
 801816a:	680b      	ldr	r3, [r1, #0]
 801816c:	9001      	str	r0, [sp, #4]
 801816e:	4690      	mov	r8, r2
 8018170:	1c9c      	adds	r4, r3, #2
 8018172:	46a1      	mov	r9, r4
 8018174:	f814 0b01 	ldrb.w	r0, [r4], #1
 8018178:	2830      	cmp	r0, #48	@ 0x30
 801817a:	d0fa      	beq.n	8018172 <__gethex+0x12>
 801817c:	eba9 0303 	sub.w	r3, r9, r3
 8018180:	f1a3 0b02 	sub.w	fp, r3, #2
 8018184:	f7ff ffd6 	bl	8018134 <__hexdig_fun>
 8018188:	4605      	mov	r5, r0
 801818a:	2800      	cmp	r0, #0
 801818c:	d168      	bne.n	8018260 <__gethex+0x100>
 801818e:	49a0      	ldr	r1, [pc, #640]	@ (8018410 <__gethex+0x2b0>)
 8018190:	2201      	movs	r2, #1
 8018192:	4648      	mov	r0, r9
 8018194:	f7ff f8b2 	bl	80172fc <strncmp>
 8018198:	4607      	mov	r7, r0
 801819a:	2800      	cmp	r0, #0
 801819c:	d167      	bne.n	801826e <__gethex+0x10e>
 801819e:	f899 0001 	ldrb.w	r0, [r9, #1]
 80181a2:	4626      	mov	r6, r4
 80181a4:	f7ff ffc6 	bl	8018134 <__hexdig_fun>
 80181a8:	2800      	cmp	r0, #0
 80181aa:	d062      	beq.n	8018272 <__gethex+0x112>
 80181ac:	4623      	mov	r3, r4
 80181ae:	7818      	ldrb	r0, [r3, #0]
 80181b0:	2830      	cmp	r0, #48	@ 0x30
 80181b2:	4699      	mov	r9, r3
 80181b4:	f103 0301 	add.w	r3, r3, #1
 80181b8:	d0f9      	beq.n	80181ae <__gethex+0x4e>
 80181ba:	f7ff ffbb 	bl	8018134 <__hexdig_fun>
 80181be:	fab0 f580 	clz	r5, r0
 80181c2:	096d      	lsrs	r5, r5, #5
 80181c4:	f04f 0b01 	mov.w	fp, #1
 80181c8:	464a      	mov	r2, r9
 80181ca:	4616      	mov	r6, r2
 80181cc:	3201      	adds	r2, #1
 80181ce:	7830      	ldrb	r0, [r6, #0]
 80181d0:	f7ff ffb0 	bl	8018134 <__hexdig_fun>
 80181d4:	2800      	cmp	r0, #0
 80181d6:	d1f8      	bne.n	80181ca <__gethex+0x6a>
 80181d8:	498d      	ldr	r1, [pc, #564]	@ (8018410 <__gethex+0x2b0>)
 80181da:	2201      	movs	r2, #1
 80181dc:	4630      	mov	r0, r6
 80181de:	f7ff f88d 	bl	80172fc <strncmp>
 80181e2:	2800      	cmp	r0, #0
 80181e4:	d13f      	bne.n	8018266 <__gethex+0x106>
 80181e6:	b944      	cbnz	r4, 80181fa <__gethex+0x9a>
 80181e8:	1c74      	adds	r4, r6, #1
 80181ea:	4622      	mov	r2, r4
 80181ec:	4616      	mov	r6, r2
 80181ee:	3201      	adds	r2, #1
 80181f0:	7830      	ldrb	r0, [r6, #0]
 80181f2:	f7ff ff9f 	bl	8018134 <__hexdig_fun>
 80181f6:	2800      	cmp	r0, #0
 80181f8:	d1f8      	bne.n	80181ec <__gethex+0x8c>
 80181fa:	1ba4      	subs	r4, r4, r6
 80181fc:	00a7      	lsls	r7, r4, #2
 80181fe:	7833      	ldrb	r3, [r6, #0]
 8018200:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 8018204:	2b50      	cmp	r3, #80	@ 0x50
 8018206:	d13e      	bne.n	8018286 <__gethex+0x126>
 8018208:	7873      	ldrb	r3, [r6, #1]
 801820a:	2b2b      	cmp	r3, #43	@ 0x2b
 801820c:	d033      	beq.n	8018276 <__gethex+0x116>
 801820e:	2b2d      	cmp	r3, #45	@ 0x2d
 8018210:	d034      	beq.n	801827c <__gethex+0x11c>
 8018212:	1c71      	adds	r1, r6, #1
 8018214:	2400      	movs	r4, #0
 8018216:	7808      	ldrb	r0, [r1, #0]
 8018218:	f7ff ff8c 	bl	8018134 <__hexdig_fun>
 801821c:	1e43      	subs	r3, r0, #1
 801821e:	b2db      	uxtb	r3, r3
 8018220:	2b18      	cmp	r3, #24
 8018222:	d830      	bhi.n	8018286 <__gethex+0x126>
 8018224:	f1a0 0210 	sub.w	r2, r0, #16
 8018228:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 801822c:	f7ff ff82 	bl	8018134 <__hexdig_fun>
 8018230:	f100 3cff 	add.w	ip, r0, #4294967295
 8018234:	fa5f fc8c 	uxtb.w	ip, ip
 8018238:	f1bc 0f18 	cmp.w	ip, #24
 801823c:	f04f 030a 	mov.w	r3, #10
 8018240:	d91e      	bls.n	8018280 <__gethex+0x120>
 8018242:	b104      	cbz	r4, 8018246 <__gethex+0xe6>
 8018244:	4252      	negs	r2, r2
 8018246:	4417      	add	r7, r2
 8018248:	f8ca 1000 	str.w	r1, [sl]
 801824c:	b1ed      	cbz	r5, 801828a <__gethex+0x12a>
 801824e:	f1bb 0f00 	cmp.w	fp, #0
 8018252:	bf0c      	ite	eq
 8018254:	2506      	moveq	r5, #6
 8018256:	2500      	movne	r5, #0
 8018258:	4628      	mov	r0, r5
 801825a:	b005      	add	sp, #20
 801825c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018260:	2500      	movs	r5, #0
 8018262:	462c      	mov	r4, r5
 8018264:	e7b0      	b.n	80181c8 <__gethex+0x68>
 8018266:	2c00      	cmp	r4, #0
 8018268:	d1c7      	bne.n	80181fa <__gethex+0x9a>
 801826a:	4627      	mov	r7, r4
 801826c:	e7c7      	b.n	80181fe <__gethex+0x9e>
 801826e:	464e      	mov	r6, r9
 8018270:	462f      	mov	r7, r5
 8018272:	2501      	movs	r5, #1
 8018274:	e7c3      	b.n	80181fe <__gethex+0x9e>
 8018276:	2400      	movs	r4, #0
 8018278:	1cb1      	adds	r1, r6, #2
 801827a:	e7cc      	b.n	8018216 <__gethex+0xb6>
 801827c:	2401      	movs	r4, #1
 801827e:	e7fb      	b.n	8018278 <__gethex+0x118>
 8018280:	fb03 0002 	mla	r0, r3, r2, r0
 8018284:	e7ce      	b.n	8018224 <__gethex+0xc4>
 8018286:	4631      	mov	r1, r6
 8018288:	e7de      	b.n	8018248 <__gethex+0xe8>
 801828a:	eba6 0309 	sub.w	r3, r6, r9
 801828e:	3b01      	subs	r3, #1
 8018290:	4629      	mov	r1, r5
 8018292:	2b07      	cmp	r3, #7
 8018294:	dc0a      	bgt.n	80182ac <__gethex+0x14c>
 8018296:	9801      	ldr	r0, [sp, #4]
 8018298:	f000 fafc 	bl	8018894 <_Balloc>
 801829c:	4604      	mov	r4, r0
 801829e:	b940      	cbnz	r0, 80182b2 <__gethex+0x152>
 80182a0:	4b5c      	ldr	r3, [pc, #368]	@ (8018414 <__gethex+0x2b4>)
 80182a2:	4602      	mov	r2, r0
 80182a4:	21e4      	movs	r1, #228	@ 0xe4
 80182a6:	485c      	ldr	r0, [pc, #368]	@ (8018418 <__gethex+0x2b8>)
 80182a8:	f001 f9de 	bl	8019668 <__assert_func>
 80182ac:	3101      	adds	r1, #1
 80182ae:	105b      	asrs	r3, r3, #1
 80182b0:	e7ef      	b.n	8018292 <__gethex+0x132>
 80182b2:	f100 0a14 	add.w	sl, r0, #20
 80182b6:	2300      	movs	r3, #0
 80182b8:	4655      	mov	r5, sl
 80182ba:	469b      	mov	fp, r3
 80182bc:	45b1      	cmp	r9, r6
 80182be:	d337      	bcc.n	8018330 <__gethex+0x1d0>
 80182c0:	f845 bb04 	str.w	fp, [r5], #4
 80182c4:	eba5 050a 	sub.w	r5, r5, sl
 80182c8:	10ad      	asrs	r5, r5, #2
 80182ca:	6125      	str	r5, [r4, #16]
 80182cc:	4658      	mov	r0, fp
 80182ce:	f000 fbd3 	bl	8018a78 <__hi0bits>
 80182d2:	016d      	lsls	r5, r5, #5
 80182d4:	f8d8 6000 	ldr.w	r6, [r8]
 80182d8:	1a2d      	subs	r5, r5, r0
 80182da:	42b5      	cmp	r5, r6
 80182dc:	dd54      	ble.n	8018388 <__gethex+0x228>
 80182de:	1bad      	subs	r5, r5, r6
 80182e0:	4629      	mov	r1, r5
 80182e2:	4620      	mov	r0, r4
 80182e4:	f000 ff64 	bl	80191b0 <__any_on>
 80182e8:	4681      	mov	r9, r0
 80182ea:	b178      	cbz	r0, 801830c <__gethex+0x1ac>
 80182ec:	1e6b      	subs	r3, r5, #1
 80182ee:	1159      	asrs	r1, r3, #5
 80182f0:	f003 021f 	and.w	r2, r3, #31
 80182f4:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 80182f8:	f04f 0901 	mov.w	r9, #1
 80182fc:	fa09 f202 	lsl.w	r2, r9, r2
 8018300:	420a      	tst	r2, r1
 8018302:	d003      	beq.n	801830c <__gethex+0x1ac>
 8018304:	454b      	cmp	r3, r9
 8018306:	dc36      	bgt.n	8018376 <__gethex+0x216>
 8018308:	f04f 0902 	mov.w	r9, #2
 801830c:	4629      	mov	r1, r5
 801830e:	4620      	mov	r0, r4
 8018310:	f7ff febe 	bl	8018090 <rshift>
 8018314:	442f      	add	r7, r5
 8018316:	f8d8 3008 	ldr.w	r3, [r8, #8]
 801831a:	42bb      	cmp	r3, r7
 801831c:	da42      	bge.n	80183a4 <__gethex+0x244>
 801831e:	9801      	ldr	r0, [sp, #4]
 8018320:	4621      	mov	r1, r4
 8018322:	f000 faf7 	bl	8018914 <_Bfree>
 8018326:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8018328:	2300      	movs	r3, #0
 801832a:	6013      	str	r3, [r2, #0]
 801832c:	25a3      	movs	r5, #163	@ 0xa3
 801832e:	e793      	b.n	8018258 <__gethex+0xf8>
 8018330:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8018334:	2a2e      	cmp	r2, #46	@ 0x2e
 8018336:	d012      	beq.n	801835e <__gethex+0x1fe>
 8018338:	2b20      	cmp	r3, #32
 801833a:	d104      	bne.n	8018346 <__gethex+0x1e6>
 801833c:	f845 bb04 	str.w	fp, [r5], #4
 8018340:	f04f 0b00 	mov.w	fp, #0
 8018344:	465b      	mov	r3, fp
 8018346:	7830      	ldrb	r0, [r6, #0]
 8018348:	9303      	str	r3, [sp, #12]
 801834a:	f7ff fef3 	bl	8018134 <__hexdig_fun>
 801834e:	9b03      	ldr	r3, [sp, #12]
 8018350:	f000 000f 	and.w	r0, r0, #15
 8018354:	4098      	lsls	r0, r3
 8018356:	ea4b 0b00 	orr.w	fp, fp, r0
 801835a:	3304      	adds	r3, #4
 801835c:	e7ae      	b.n	80182bc <__gethex+0x15c>
 801835e:	45b1      	cmp	r9, r6
 8018360:	d8ea      	bhi.n	8018338 <__gethex+0x1d8>
 8018362:	492b      	ldr	r1, [pc, #172]	@ (8018410 <__gethex+0x2b0>)
 8018364:	9303      	str	r3, [sp, #12]
 8018366:	2201      	movs	r2, #1
 8018368:	4630      	mov	r0, r6
 801836a:	f7fe ffc7 	bl	80172fc <strncmp>
 801836e:	9b03      	ldr	r3, [sp, #12]
 8018370:	2800      	cmp	r0, #0
 8018372:	d1e1      	bne.n	8018338 <__gethex+0x1d8>
 8018374:	e7a2      	b.n	80182bc <__gethex+0x15c>
 8018376:	1ea9      	subs	r1, r5, #2
 8018378:	4620      	mov	r0, r4
 801837a:	f000 ff19 	bl	80191b0 <__any_on>
 801837e:	2800      	cmp	r0, #0
 8018380:	d0c2      	beq.n	8018308 <__gethex+0x1a8>
 8018382:	f04f 0903 	mov.w	r9, #3
 8018386:	e7c1      	b.n	801830c <__gethex+0x1ac>
 8018388:	da09      	bge.n	801839e <__gethex+0x23e>
 801838a:	1b75      	subs	r5, r6, r5
 801838c:	4621      	mov	r1, r4
 801838e:	9801      	ldr	r0, [sp, #4]
 8018390:	462a      	mov	r2, r5
 8018392:	f000 fcd7 	bl	8018d44 <__lshift>
 8018396:	1b7f      	subs	r7, r7, r5
 8018398:	4604      	mov	r4, r0
 801839a:	f100 0a14 	add.w	sl, r0, #20
 801839e:	f04f 0900 	mov.w	r9, #0
 80183a2:	e7b8      	b.n	8018316 <__gethex+0x1b6>
 80183a4:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80183a8:	42bd      	cmp	r5, r7
 80183aa:	dd6f      	ble.n	801848c <__gethex+0x32c>
 80183ac:	1bed      	subs	r5, r5, r7
 80183ae:	42ae      	cmp	r6, r5
 80183b0:	dc34      	bgt.n	801841c <__gethex+0x2bc>
 80183b2:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80183b6:	2b02      	cmp	r3, #2
 80183b8:	d022      	beq.n	8018400 <__gethex+0x2a0>
 80183ba:	2b03      	cmp	r3, #3
 80183bc:	d024      	beq.n	8018408 <__gethex+0x2a8>
 80183be:	2b01      	cmp	r3, #1
 80183c0:	d115      	bne.n	80183ee <__gethex+0x28e>
 80183c2:	42ae      	cmp	r6, r5
 80183c4:	d113      	bne.n	80183ee <__gethex+0x28e>
 80183c6:	2e01      	cmp	r6, #1
 80183c8:	d10b      	bne.n	80183e2 <__gethex+0x282>
 80183ca:	9a02      	ldr	r2, [sp, #8]
 80183cc:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80183d0:	6013      	str	r3, [r2, #0]
 80183d2:	2301      	movs	r3, #1
 80183d4:	6123      	str	r3, [r4, #16]
 80183d6:	f8ca 3000 	str.w	r3, [sl]
 80183da:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80183dc:	2562      	movs	r5, #98	@ 0x62
 80183de:	601c      	str	r4, [r3, #0]
 80183e0:	e73a      	b.n	8018258 <__gethex+0xf8>
 80183e2:	1e71      	subs	r1, r6, #1
 80183e4:	4620      	mov	r0, r4
 80183e6:	f000 fee3 	bl	80191b0 <__any_on>
 80183ea:	2800      	cmp	r0, #0
 80183ec:	d1ed      	bne.n	80183ca <__gethex+0x26a>
 80183ee:	9801      	ldr	r0, [sp, #4]
 80183f0:	4621      	mov	r1, r4
 80183f2:	f000 fa8f 	bl	8018914 <_Bfree>
 80183f6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80183f8:	2300      	movs	r3, #0
 80183fa:	6013      	str	r3, [r2, #0]
 80183fc:	2550      	movs	r5, #80	@ 0x50
 80183fe:	e72b      	b.n	8018258 <__gethex+0xf8>
 8018400:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8018402:	2b00      	cmp	r3, #0
 8018404:	d1f3      	bne.n	80183ee <__gethex+0x28e>
 8018406:	e7e0      	b.n	80183ca <__gethex+0x26a>
 8018408:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801840a:	2b00      	cmp	r3, #0
 801840c:	d1dd      	bne.n	80183ca <__gethex+0x26a>
 801840e:	e7ee      	b.n	80183ee <__gethex+0x28e>
 8018410:	0801b084 	.word	0x0801b084
 8018414:	0801b291 	.word	0x0801b291
 8018418:	0801b2a2 	.word	0x0801b2a2
 801841c:	1e6f      	subs	r7, r5, #1
 801841e:	f1b9 0f00 	cmp.w	r9, #0
 8018422:	d130      	bne.n	8018486 <__gethex+0x326>
 8018424:	b127      	cbz	r7, 8018430 <__gethex+0x2d0>
 8018426:	4639      	mov	r1, r7
 8018428:	4620      	mov	r0, r4
 801842a:	f000 fec1 	bl	80191b0 <__any_on>
 801842e:	4681      	mov	r9, r0
 8018430:	117a      	asrs	r2, r7, #5
 8018432:	2301      	movs	r3, #1
 8018434:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8018438:	f007 071f 	and.w	r7, r7, #31
 801843c:	40bb      	lsls	r3, r7
 801843e:	4213      	tst	r3, r2
 8018440:	4629      	mov	r1, r5
 8018442:	4620      	mov	r0, r4
 8018444:	bf18      	it	ne
 8018446:	f049 0902 	orrne.w	r9, r9, #2
 801844a:	f7ff fe21 	bl	8018090 <rshift>
 801844e:	f8d8 7004 	ldr.w	r7, [r8, #4]
 8018452:	1b76      	subs	r6, r6, r5
 8018454:	2502      	movs	r5, #2
 8018456:	f1b9 0f00 	cmp.w	r9, #0
 801845a:	d047      	beq.n	80184ec <__gethex+0x38c>
 801845c:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8018460:	2b02      	cmp	r3, #2
 8018462:	d015      	beq.n	8018490 <__gethex+0x330>
 8018464:	2b03      	cmp	r3, #3
 8018466:	d017      	beq.n	8018498 <__gethex+0x338>
 8018468:	2b01      	cmp	r3, #1
 801846a:	d109      	bne.n	8018480 <__gethex+0x320>
 801846c:	f019 0f02 	tst.w	r9, #2
 8018470:	d006      	beq.n	8018480 <__gethex+0x320>
 8018472:	f8da 3000 	ldr.w	r3, [sl]
 8018476:	ea49 0903 	orr.w	r9, r9, r3
 801847a:	f019 0f01 	tst.w	r9, #1
 801847e:	d10e      	bne.n	801849e <__gethex+0x33e>
 8018480:	f045 0510 	orr.w	r5, r5, #16
 8018484:	e032      	b.n	80184ec <__gethex+0x38c>
 8018486:	f04f 0901 	mov.w	r9, #1
 801848a:	e7d1      	b.n	8018430 <__gethex+0x2d0>
 801848c:	2501      	movs	r5, #1
 801848e:	e7e2      	b.n	8018456 <__gethex+0x2f6>
 8018490:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8018492:	f1c3 0301 	rsb	r3, r3, #1
 8018496:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018498:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801849a:	2b00      	cmp	r3, #0
 801849c:	d0f0      	beq.n	8018480 <__gethex+0x320>
 801849e:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80184a2:	f104 0314 	add.w	r3, r4, #20
 80184a6:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 80184aa:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 80184ae:	f04f 0c00 	mov.w	ip, #0
 80184b2:	4618      	mov	r0, r3
 80184b4:	f853 2b04 	ldr.w	r2, [r3], #4
 80184b8:	f1b2 3fff 	cmp.w	r2, #4294967295
 80184bc:	d01b      	beq.n	80184f6 <__gethex+0x396>
 80184be:	3201      	adds	r2, #1
 80184c0:	6002      	str	r2, [r0, #0]
 80184c2:	2d02      	cmp	r5, #2
 80184c4:	f104 0314 	add.w	r3, r4, #20
 80184c8:	d13c      	bne.n	8018544 <__gethex+0x3e4>
 80184ca:	f8d8 2000 	ldr.w	r2, [r8]
 80184ce:	3a01      	subs	r2, #1
 80184d0:	42b2      	cmp	r2, r6
 80184d2:	d109      	bne.n	80184e8 <__gethex+0x388>
 80184d4:	1171      	asrs	r1, r6, #5
 80184d6:	2201      	movs	r2, #1
 80184d8:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80184dc:	f006 061f 	and.w	r6, r6, #31
 80184e0:	fa02 f606 	lsl.w	r6, r2, r6
 80184e4:	421e      	tst	r6, r3
 80184e6:	d13a      	bne.n	801855e <__gethex+0x3fe>
 80184e8:	f045 0520 	orr.w	r5, r5, #32
 80184ec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80184ee:	601c      	str	r4, [r3, #0]
 80184f0:	9b02      	ldr	r3, [sp, #8]
 80184f2:	601f      	str	r7, [r3, #0]
 80184f4:	e6b0      	b.n	8018258 <__gethex+0xf8>
 80184f6:	4299      	cmp	r1, r3
 80184f8:	f843 cc04 	str.w	ip, [r3, #-4]
 80184fc:	d8d9      	bhi.n	80184b2 <__gethex+0x352>
 80184fe:	68a3      	ldr	r3, [r4, #8]
 8018500:	459b      	cmp	fp, r3
 8018502:	db17      	blt.n	8018534 <__gethex+0x3d4>
 8018504:	6861      	ldr	r1, [r4, #4]
 8018506:	9801      	ldr	r0, [sp, #4]
 8018508:	3101      	adds	r1, #1
 801850a:	f000 f9c3 	bl	8018894 <_Balloc>
 801850e:	4681      	mov	r9, r0
 8018510:	b918      	cbnz	r0, 801851a <__gethex+0x3ba>
 8018512:	4b1a      	ldr	r3, [pc, #104]	@ (801857c <__gethex+0x41c>)
 8018514:	4602      	mov	r2, r0
 8018516:	2184      	movs	r1, #132	@ 0x84
 8018518:	e6c5      	b.n	80182a6 <__gethex+0x146>
 801851a:	6922      	ldr	r2, [r4, #16]
 801851c:	3202      	adds	r2, #2
 801851e:	f104 010c 	add.w	r1, r4, #12
 8018522:	0092      	lsls	r2, r2, #2
 8018524:	300c      	adds	r0, #12
 8018526:	f7fe ff72 	bl	801740e <memcpy>
 801852a:	4621      	mov	r1, r4
 801852c:	9801      	ldr	r0, [sp, #4]
 801852e:	f000 f9f1 	bl	8018914 <_Bfree>
 8018532:	464c      	mov	r4, r9
 8018534:	6923      	ldr	r3, [r4, #16]
 8018536:	1c5a      	adds	r2, r3, #1
 8018538:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 801853c:	6122      	str	r2, [r4, #16]
 801853e:	2201      	movs	r2, #1
 8018540:	615a      	str	r2, [r3, #20]
 8018542:	e7be      	b.n	80184c2 <__gethex+0x362>
 8018544:	6922      	ldr	r2, [r4, #16]
 8018546:	455a      	cmp	r2, fp
 8018548:	dd0b      	ble.n	8018562 <__gethex+0x402>
 801854a:	2101      	movs	r1, #1
 801854c:	4620      	mov	r0, r4
 801854e:	f7ff fd9f 	bl	8018090 <rshift>
 8018552:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8018556:	3701      	adds	r7, #1
 8018558:	42bb      	cmp	r3, r7
 801855a:	f6ff aee0 	blt.w	801831e <__gethex+0x1be>
 801855e:	2501      	movs	r5, #1
 8018560:	e7c2      	b.n	80184e8 <__gethex+0x388>
 8018562:	f016 061f 	ands.w	r6, r6, #31
 8018566:	d0fa      	beq.n	801855e <__gethex+0x3fe>
 8018568:	4453      	add	r3, sl
 801856a:	f1c6 0620 	rsb	r6, r6, #32
 801856e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8018572:	f000 fa81 	bl	8018a78 <__hi0bits>
 8018576:	42b0      	cmp	r0, r6
 8018578:	dbe7      	blt.n	801854a <__gethex+0x3ea>
 801857a:	e7f0      	b.n	801855e <__gethex+0x3fe>
 801857c:	0801b291 	.word	0x0801b291

08018580 <L_shift>:
 8018580:	f1c2 0208 	rsb	r2, r2, #8
 8018584:	0092      	lsls	r2, r2, #2
 8018586:	b570      	push	{r4, r5, r6, lr}
 8018588:	f1c2 0620 	rsb	r6, r2, #32
 801858c:	6843      	ldr	r3, [r0, #4]
 801858e:	6804      	ldr	r4, [r0, #0]
 8018590:	fa03 f506 	lsl.w	r5, r3, r6
 8018594:	432c      	orrs	r4, r5
 8018596:	40d3      	lsrs	r3, r2
 8018598:	6004      	str	r4, [r0, #0]
 801859a:	f840 3f04 	str.w	r3, [r0, #4]!
 801859e:	4288      	cmp	r0, r1
 80185a0:	d3f4      	bcc.n	801858c <L_shift+0xc>
 80185a2:	bd70      	pop	{r4, r5, r6, pc}

080185a4 <__match>:
 80185a4:	b530      	push	{r4, r5, lr}
 80185a6:	6803      	ldr	r3, [r0, #0]
 80185a8:	3301      	adds	r3, #1
 80185aa:	f811 4b01 	ldrb.w	r4, [r1], #1
 80185ae:	b914      	cbnz	r4, 80185b6 <__match+0x12>
 80185b0:	6003      	str	r3, [r0, #0]
 80185b2:	2001      	movs	r0, #1
 80185b4:	bd30      	pop	{r4, r5, pc}
 80185b6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80185ba:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 80185be:	2d19      	cmp	r5, #25
 80185c0:	bf98      	it	ls
 80185c2:	3220      	addls	r2, #32
 80185c4:	42a2      	cmp	r2, r4
 80185c6:	d0f0      	beq.n	80185aa <__match+0x6>
 80185c8:	2000      	movs	r0, #0
 80185ca:	e7f3      	b.n	80185b4 <__match+0x10>

080185cc <__hexnan>:
 80185cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80185d0:	680b      	ldr	r3, [r1, #0]
 80185d2:	6801      	ldr	r1, [r0, #0]
 80185d4:	115e      	asrs	r6, r3, #5
 80185d6:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80185da:	f013 031f 	ands.w	r3, r3, #31
 80185de:	b087      	sub	sp, #28
 80185e0:	bf18      	it	ne
 80185e2:	3604      	addne	r6, #4
 80185e4:	2500      	movs	r5, #0
 80185e6:	1f37      	subs	r7, r6, #4
 80185e8:	4682      	mov	sl, r0
 80185ea:	4690      	mov	r8, r2
 80185ec:	9301      	str	r3, [sp, #4]
 80185ee:	f846 5c04 	str.w	r5, [r6, #-4]
 80185f2:	46b9      	mov	r9, r7
 80185f4:	463c      	mov	r4, r7
 80185f6:	9502      	str	r5, [sp, #8]
 80185f8:	46ab      	mov	fp, r5
 80185fa:	784a      	ldrb	r2, [r1, #1]
 80185fc:	1c4b      	adds	r3, r1, #1
 80185fe:	9303      	str	r3, [sp, #12]
 8018600:	b342      	cbz	r2, 8018654 <__hexnan+0x88>
 8018602:	4610      	mov	r0, r2
 8018604:	9105      	str	r1, [sp, #20]
 8018606:	9204      	str	r2, [sp, #16]
 8018608:	f7ff fd94 	bl	8018134 <__hexdig_fun>
 801860c:	2800      	cmp	r0, #0
 801860e:	d151      	bne.n	80186b4 <__hexnan+0xe8>
 8018610:	9a04      	ldr	r2, [sp, #16]
 8018612:	9905      	ldr	r1, [sp, #20]
 8018614:	2a20      	cmp	r2, #32
 8018616:	d818      	bhi.n	801864a <__hexnan+0x7e>
 8018618:	9b02      	ldr	r3, [sp, #8]
 801861a:	459b      	cmp	fp, r3
 801861c:	dd13      	ble.n	8018646 <__hexnan+0x7a>
 801861e:	454c      	cmp	r4, r9
 8018620:	d206      	bcs.n	8018630 <__hexnan+0x64>
 8018622:	2d07      	cmp	r5, #7
 8018624:	dc04      	bgt.n	8018630 <__hexnan+0x64>
 8018626:	462a      	mov	r2, r5
 8018628:	4649      	mov	r1, r9
 801862a:	4620      	mov	r0, r4
 801862c:	f7ff ffa8 	bl	8018580 <L_shift>
 8018630:	4544      	cmp	r4, r8
 8018632:	d952      	bls.n	80186da <__hexnan+0x10e>
 8018634:	2300      	movs	r3, #0
 8018636:	f1a4 0904 	sub.w	r9, r4, #4
 801863a:	f844 3c04 	str.w	r3, [r4, #-4]
 801863e:	f8cd b008 	str.w	fp, [sp, #8]
 8018642:	464c      	mov	r4, r9
 8018644:	461d      	mov	r5, r3
 8018646:	9903      	ldr	r1, [sp, #12]
 8018648:	e7d7      	b.n	80185fa <__hexnan+0x2e>
 801864a:	2a29      	cmp	r2, #41	@ 0x29
 801864c:	d157      	bne.n	80186fe <__hexnan+0x132>
 801864e:	3102      	adds	r1, #2
 8018650:	f8ca 1000 	str.w	r1, [sl]
 8018654:	f1bb 0f00 	cmp.w	fp, #0
 8018658:	d051      	beq.n	80186fe <__hexnan+0x132>
 801865a:	454c      	cmp	r4, r9
 801865c:	d206      	bcs.n	801866c <__hexnan+0xa0>
 801865e:	2d07      	cmp	r5, #7
 8018660:	dc04      	bgt.n	801866c <__hexnan+0xa0>
 8018662:	462a      	mov	r2, r5
 8018664:	4649      	mov	r1, r9
 8018666:	4620      	mov	r0, r4
 8018668:	f7ff ff8a 	bl	8018580 <L_shift>
 801866c:	4544      	cmp	r4, r8
 801866e:	d936      	bls.n	80186de <__hexnan+0x112>
 8018670:	f1a8 0204 	sub.w	r2, r8, #4
 8018674:	4623      	mov	r3, r4
 8018676:	f853 1b04 	ldr.w	r1, [r3], #4
 801867a:	f842 1f04 	str.w	r1, [r2, #4]!
 801867e:	429f      	cmp	r7, r3
 8018680:	d2f9      	bcs.n	8018676 <__hexnan+0xaa>
 8018682:	1b3b      	subs	r3, r7, r4
 8018684:	f023 0303 	bic.w	r3, r3, #3
 8018688:	3304      	adds	r3, #4
 801868a:	3401      	adds	r4, #1
 801868c:	3e03      	subs	r6, #3
 801868e:	42b4      	cmp	r4, r6
 8018690:	bf88      	it	hi
 8018692:	2304      	movhi	r3, #4
 8018694:	4443      	add	r3, r8
 8018696:	2200      	movs	r2, #0
 8018698:	f843 2b04 	str.w	r2, [r3], #4
 801869c:	429f      	cmp	r7, r3
 801869e:	d2fb      	bcs.n	8018698 <__hexnan+0xcc>
 80186a0:	683b      	ldr	r3, [r7, #0]
 80186a2:	b91b      	cbnz	r3, 80186ac <__hexnan+0xe0>
 80186a4:	4547      	cmp	r7, r8
 80186a6:	d128      	bne.n	80186fa <__hexnan+0x12e>
 80186a8:	2301      	movs	r3, #1
 80186aa:	603b      	str	r3, [r7, #0]
 80186ac:	2005      	movs	r0, #5
 80186ae:	b007      	add	sp, #28
 80186b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80186b4:	3501      	adds	r5, #1
 80186b6:	2d08      	cmp	r5, #8
 80186b8:	f10b 0b01 	add.w	fp, fp, #1
 80186bc:	dd06      	ble.n	80186cc <__hexnan+0x100>
 80186be:	4544      	cmp	r4, r8
 80186c0:	d9c1      	bls.n	8018646 <__hexnan+0x7a>
 80186c2:	2300      	movs	r3, #0
 80186c4:	f844 3c04 	str.w	r3, [r4, #-4]
 80186c8:	2501      	movs	r5, #1
 80186ca:	3c04      	subs	r4, #4
 80186cc:	6822      	ldr	r2, [r4, #0]
 80186ce:	f000 000f 	and.w	r0, r0, #15
 80186d2:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 80186d6:	6020      	str	r0, [r4, #0]
 80186d8:	e7b5      	b.n	8018646 <__hexnan+0x7a>
 80186da:	2508      	movs	r5, #8
 80186dc:	e7b3      	b.n	8018646 <__hexnan+0x7a>
 80186de:	9b01      	ldr	r3, [sp, #4]
 80186e0:	2b00      	cmp	r3, #0
 80186e2:	d0dd      	beq.n	80186a0 <__hexnan+0xd4>
 80186e4:	f1c3 0320 	rsb	r3, r3, #32
 80186e8:	f04f 32ff 	mov.w	r2, #4294967295
 80186ec:	40da      	lsrs	r2, r3
 80186ee:	f856 3c04 	ldr.w	r3, [r6, #-4]
 80186f2:	4013      	ands	r3, r2
 80186f4:	f846 3c04 	str.w	r3, [r6, #-4]
 80186f8:	e7d2      	b.n	80186a0 <__hexnan+0xd4>
 80186fa:	3f04      	subs	r7, #4
 80186fc:	e7d0      	b.n	80186a0 <__hexnan+0xd4>
 80186fe:	2004      	movs	r0, #4
 8018700:	e7d5      	b.n	80186ae <__hexnan+0xe2>
	...

08018704 <malloc>:
 8018704:	4b02      	ldr	r3, [pc, #8]	@ (8018710 <malloc+0xc>)
 8018706:	4601      	mov	r1, r0
 8018708:	6818      	ldr	r0, [r3, #0]
 801870a:	f000 b825 	b.w	8018758 <_malloc_r>
 801870e:	bf00      	nop
 8018710:	2400027c 	.word	0x2400027c

08018714 <sbrk_aligned>:
 8018714:	b570      	push	{r4, r5, r6, lr}
 8018716:	4e0f      	ldr	r6, [pc, #60]	@ (8018754 <sbrk_aligned+0x40>)
 8018718:	460c      	mov	r4, r1
 801871a:	6831      	ldr	r1, [r6, #0]
 801871c:	4605      	mov	r5, r0
 801871e:	b911      	cbnz	r1, 8018726 <sbrk_aligned+0x12>
 8018720:	f000 ff92 	bl	8019648 <_sbrk_r>
 8018724:	6030      	str	r0, [r6, #0]
 8018726:	4621      	mov	r1, r4
 8018728:	4628      	mov	r0, r5
 801872a:	f000 ff8d 	bl	8019648 <_sbrk_r>
 801872e:	1c43      	adds	r3, r0, #1
 8018730:	d103      	bne.n	801873a <sbrk_aligned+0x26>
 8018732:	f04f 34ff 	mov.w	r4, #4294967295
 8018736:	4620      	mov	r0, r4
 8018738:	bd70      	pop	{r4, r5, r6, pc}
 801873a:	1cc4      	adds	r4, r0, #3
 801873c:	f024 0403 	bic.w	r4, r4, #3
 8018740:	42a0      	cmp	r0, r4
 8018742:	d0f8      	beq.n	8018736 <sbrk_aligned+0x22>
 8018744:	1a21      	subs	r1, r4, r0
 8018746:	4628      	mov	r0, r5
 8018748:	f000 ff7e 	bl	8019648 <_sbrk_r>
 801874c:	3001      	adds	r0, #1
 801874e:	d1f2      	bne.n	8018736 <sbrk_aligned+0x22>
 8018750:	e7ef      	b.n	8018732 <sbrk_aligned+0x1e>
 8018752:	bf00      	nop
 8018754:	2400626c 	.word	0x2400626c

08018758 <_malloc_r>:
 8018758:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801875c:	1ccd      	adds	r5, r1, #3
 801875e:	f025 0503 	bic.w	r5, r5, #3
 8018762:	3508      	adds	r5, #8
 8018764:	2d0c      	cmp	r5, #12
 8018766:	bf38      	it	cc
 8018768:	250c      	movcc	r5, #12
 801876a:	2d00      	cmp	r5, #0
 801876c:	4606      	mov	r6, r0
 801876e:	db01      	blt.n	8018774 <_malloc_r+0x1c>
 8018770:	42a9      	cmp	r1, r5
 8018772:	d904      	bls.n	801877e <_malloc_r+0x26>
 8018774:	230c      	movs	r3, #12
 8018776:	6033      	str	r3, [r6, #0]
 8018778:	2000      	movs	r0, #0
 801877a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801877e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8018854 <_malloc_r+0xfc>
 8018782:	f000 f87b 	bl	801887c <__malloc_lock>
 8018786:	f8d8 3000 	ldr.w	r3, [r8]
 801878a:	461c      	mov	r4, r3
 801878c:	bb44      	cbnz	r4, 80187e0 <_malloc_r+0x88>
 801878e:	4629      	mov	r1, r5
 8018790:	4630      	mov	r0, r6
 8018792:	f7ff ffbf 	bl	8018714 <sbrk_aligned>
 8018796:	1c43      	adds	r3, r0, #1
 8018798:	4604      	mov	r4, r0
 801879a:	d158      	bne.n	801884e <_malloc_r+0xf6>
 801879c:	f8d8 4000 	ldr.w	r4, [r8]
 80187a0:	4627      	mov	r7, r4
 80187a2:	2f00      	cmp	r7, #0
 80187a4:	d143      	bne.n	801882e <_malloc_r+0xd6>
 80187a6:	2c00      	cmp	r4, #0
 80187a8:	d04b      	beq.n	8018842 <_malloc_r+0xea>
 80187aa:	6823      	ldr	r3, [r4, #0]
 80187ac:	4639      	mov	r1, r7
 80187ae:	4630      	mov	r0, r6
 80187b0:	eb04 0903 	add.w	r9, r4, r3
 80187b4:	f000 ff48 	bl	8019648 <_sbrk_r>
 80187b8:	4581      	cmp	r9, r0
 80187ba:	d142      	bne.n	8018842 <_malloc_r+0xea>
 80187bc:	6821      	ldr	r1, [r4, #0]
 80187be:	1a6d      	subs	r5, r5, r1
 80187c0:	4629      	mov	r1, r5
 80187c2:	4630      	mov	r0, r6
 80187c4:	f7ff ffa6 	bl	8018714 <sbrk_aligned>
 80187c8:	3001      	adds	r0, #1
 80187ca:	d03a      	beq.n	8018842 <_malloc_r+0xea>
 80187cc:	6823      	ldr	r3, [r4, #0]
 80187ce:	442b      	add	r3, r5
 80187d0:	6023      	str	r3, [r4, #0]
 80187d2:	f8d8 3000 	ldr.w	r3, [r8]
 80187d6:	685a      	ldr	r2, [r3, #4]
 80187d8:	bb62      	cbnz	r2, 8018834 <_malloc_r+0xdc>
 80187da:	f8c8 7000 	str.w	r7, [r8]
 80187de:	e00f      	b.n	8018800 <_malloc_r+0xa8>
 80187e0:	6822      	ldr	r2, [r4, #0]
 80187e2:	1b52      	subs	r2, r2, r5
 80187e4:	d420      	bmi.n	8018828 <_malloc_r+0xd0>
 80187e6:	2a0b      	cmp	r2, #11
 80187e8:	d917      	bls.n	801881a <_malloc_r+0xc2>
 80187ea:	1961      	adds	r1, r4, r5
 80187ec:	42a3      	cmp	r3, r4
 80187ee:	6025      	str	r5, [r4, #0]
 80187f0:	bf18      	it	ne
 80187f2:	6059      	strne	r1, [r3, #4]
 80187f4:	6863      	ldr	r3, [r4, #4]
 80187f6:	bf08      	it	eq
 80187f8:	f8c8 1000 	streq.w	r1, [r8]
 80187fc:	5162      	str	r2, [r4, r5]
 80187fe:	604b      	str	r3, [r1, #4]
 8018800:	4630      	mov	r0, r6
 8018802:	f000 f841 	bl	8018888 <__malloc_unlock>
 8018806:	f104 000b 	add.w	r0, r4, #11
 801880a:	1d23      	adds	r3, r4, #4
 801880c:	f020 0007 	bic.w	r0, r0, #7
 8018810:	1ac2      	subs	r2, r0, r3
 8018812:	bf1c      	itt	ne
 8018814:	1a1b      	subne	r3, r3, r0
 8018816:	50a3      	strne	r3, [r4, r2]
 8018818:	e7af      	b.n	801877a <_malloc_r+0x22>
 801881a:	6862      	ldr	r2, [r4, #4]
 801881c:	42a3      	cmp	r3, r4
 801881e:	bf0c      	ite	eq
 8018820:	f8c8 2000 	streq.w	r2, [r8]
 8018824:	605a      	strne	r2, [r3, #4]
 8018826:	e7eb      	b.n	8018800 <_malloc_r+0xa8>
 8018828:	4623      	mov	r3, r4
 801882a:	6864      	ldr	r4, [r4, #4]
 801882c:	e7ae      	b.n	801878c <_malloc_r+0x34>
 801882e:	463c      	mov	r4, r7
 8018830:	687f      	ldr	r7, [r7, #4]
 8018832:	e7b6      	b.n	80187a2 <_malloc_r+0x4a>
 8018834:	461a      	mov	r2, r3
 8018836:	685b      	ldr	r3, [r3, #4]
 8018838:	42a3      	cmp	r3, r4
 801883a:	d1fb      	bne.n	8018834 <_malloc_r+0xdc>
 801883c:	2300      	movs	r3, #0
 801883e:	6053      	str	r3, [r2, #4]
 8018840:	e7de      	b.n	8018800 <_malloc_r+0xa8>
 8018842:	230c      	movs	r3, #12
 8018844:	6033      	str	r3, [r6, #0]
 8018846:	4630      	mov	r0, r6
 8018848:	f000 f81e 	bl	8018888 <__malloc_unlock>
 801884c:	e794      	b.n	8018778 <_malloc_r+0x20>
 801884e:	6005      	str	r5, [r0, #0]
 8018850:	e7d6      	b.n	8018800 <_malloc_r+0xa8>
 8018852:	bf00      	nop
 8018854:	24006270 	.word	0x24006270

08018858 <__ascii_mbtowc>:
 8018858:	b082      	sub	sp, #8
 801885a:	b901      	cbnz	r1, 801885e <__ascii_mbtowc+0x6>
 801885c:	a901      	add	r1, sp, #4
 801885e:	b142      	cbz	r2, 8018872 <__ascii_mbtowc+0x1a>
 8018860:	b14b      	cbz	r3, 8018876 <__ascii_mbtowc+0x1e>
 8018862:	7813      	ldrb	r3, [r2, #0]
 8018864:	600b      	str	r3, [r1, #0]
 8018866:	7812      	ldrb	r2, [r2, #0]
 8018868:	1e10      	subs	r0, r2, #0
 801886a:	bf18      	it	ne
 801886c:	2001      	movne	r0, #1
 801886e:	b002      	add	sp, #8
 8018870:	4770      	bx	lr
 8018872:	4610      	mov	r0, r2
 8018874:	e7fb      	b.n	801886e <__ascii_mbtowc+0x16>
 8018876:	f06f 0001 	mvn.w	r0, #1
 801887a:	e7f8      	b.n	801886e <__ascii_mbtowc+0x16>

0801887c <__malloc_lock>:
 801887c:	4801      	ldr	r0, [pc, #4]	@ (8018884 <__malloc_lock+0x8>)
 801887e:	f7fe bdc4 	b.w	801740a <__retarget_lock_acquire_recursive>
 8018882:	bf00      	nop
 8018884:	24006268 	.word	0x24006268

08018888 <__malloc_unlock>:
 8018888:	4801      	ldr	r0, [pc, #4]	@ (8018890 <__malloc_unlock+0x8>)
 801888a:	f7fe bdbf 	b.w	801740c <__retarget_lock_release_recursive>
 801888e:	bf00      	nop
 8018890:	24006268 	.word	0x24006268

08018894 <_Balloc>:
 8018894:	b570      	push	{r4, r5, r6, lr}
 8018896:	69c6      	ldr	r6, [r0, #28]
 8018898:	4604      	mov	r4, r0
 801889a:	460d      	mov	r5, r1
 801889c:	b976      	cbnz	r6, 80188bc <_Balloc+0x28>
 801889e:	2010      	movs	r0, #16
 80188a0:	f7ff ff30 	bl	8018704 <malloc>
 80188a4:	4602      	mov	r2, r0
 80188a6:	61e0      	str	r0, [r4, #28]
 80188a8:	b920      	cbnz	r0, 80188b4 <_Balloc+0x20>
 80188aa:	4b18      	ldr	r3, [pc, #96]	@ (801890c <_Balloc+0x78>)
 80188ac:	4818      	ldr	r0, [pc, #96]	@ (8018910 <_Balloc+0x7c>)
 80188ae:	216b      	movs	r1, #107	@ 0x6b
 80188b0:	f000 feda 	bl	8019668 <__assert_func>
 80188b4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80188b8:	6006      	str	r6, [r0, #0]
 80188ba:	60c6      	str	r6, [r0, #12]
 80188bc:	69e6      	ldr	r6, [r4, #28]
 80188be:	68f3      	ldr	r3, [r6, #12]
 80188c0:	b183      	cbz	r3, 80188e4 <_Balloc+0x50>
 80188c2:	69e3      	ldr	r3, [r4, #28]
 80188c4:	68db      	ldr	r3, [r3, #12]
 80188c6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80188ca:	b9b8      	cbnz	r0, 80188fc <_Balloc+0x68>
 80188cc:	2101      	movs	r1, #1
 80188ce:	fa01 f605 	lsl.w	r6, r1, r5
 80188d2:	1d72      	adds	r2, r6, #5
 80188d4:	0092      	lsls	r2, r2, #2
 80188d6:	4620      	mov	r0, r4
 80188d8:	f000 fee4 	bl	80196a4 <_calloc_r>
 80188dc:	b160      	cbz	r0, 80188f8 <_Balloc+0x64>
 80188de:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80188e2:	e00e      	b.n	8018902 <_Balloc+0x6e>
 80188e4:	2221      	movs	r2, #33	@ 0x21
 80188e6:	2104      	movs	r1, #4
 80188e8:	4620      	mov	r0, r4
 80188ea:	f000 fedb 	bl	80196a4 <_calloc_r>
 80188ee:	69e3      	ldr	r3, [r4, #28]
 80188f0:	60f0      	str	r0, [r6, #12]
 80188f2:	68db      	ldr	r3, [r3, #12]
 80188f4:	2b00      	cmp	r3, #0
 80188f6:	d1e4      	bne.n	80188c2 <_Balloc+0x2e>
 80188f8:	2000      	movs	r0, #0
 80188fa:	bd70      	pop	{r4, r5, r6, pc}
 80188fc:	6802      	ldr	r2, [r0, #0]
 80188fe:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8018902:	2300      	movs	r3, #0
 8018904:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8018908:	e7f7      	b.n	80188fa <_Balloc+0x66>
 801890a:	bf00      	nop
 801890c:	0801b222 	.word	0x0801b222
 8018910:	0801b302 	.word	0x0801b302

08018914 <_Bfree>:
 8018914:	b570      	push	{r4, r5, r6, lr}
 8018916:	69c6      	ldr	r6, [r0, #28]
 8018918:	4605      	mov	r5, r0
 801891a:	460c      	mov	r4, r1
 801891c:	b976      	cbnz	r6, 801893c <_Bfree+0x28>
 801891e:	2010      	movs	r0, #16
 8018920:	f7ff fef0 	bl	8018704 <malloc>
 8018924:	4602      	mov	r2, r0
 8018926:	61e8      	str	r0, [r5, #28]
 8018928:	b920      	cbnz	r0, 8018934 <_Bfree+0x20>
 801892a:	4b09      	ldr	r3, [pc, #36]	@ (8018950 <_Bfree+0x3c>)
 801892c:	4809      	ldr	r0, [pc, #36]	@ (8018954 <_Bfree+0x40>)
 801892e:	218f      	movs	r1, #143	@ 0x8f
 8018930:	f000 fe9a 	bl	8019668 <__assert_func>
 8018934:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8018938:	6006      	str	r6, [r0, #0]
 801893a:	60c6      	str	r6, [r0, #12]
 801893c:	b13c      	cbz	r4, 801894e <_Bfree+0x3a>
 801893e:	69eb      	ldr	r3, [r5, #28]
 8018940:	6862      	ldr	r2, [r4, #4]
 8018942:	68db      	ldr	r3, [r3, #12]
 8018944:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8018948:	6021      	str	r1, [r4, #0]
 801894a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 801894e:	bd70      	pop	{r4, r5, r6, pc}
 8018950:	0801b222 	.word	0x0801b222
 8018954:	0801b302 	.word	0x0801b302

08018958 <__multadd>:
 8018958:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801895c:	690d      	ldr	r5, [r1, #16]
 801895e:	4607      	mov	r7, r0
 8018960:	460c      	mov	r4, r1
 8018962:	461e      	mov	r6, r3
 8018964:	f101 0c14 	add.w	ip, r1, #20
 8018968:	2000      	movs	r0, #0
 801896a:	f8dc 3000 	ldr.w	r3, [ip]
 801896e:	b299      	uxth	r1, r3
 8018970:	fb02 6101 	mla	r1, r2, r1, r6
 8018974:	0c1e      	lsrs	r6, r3, #16
 8018976:	0c0b      	lsrs	r3, r1, #16
 8018978:	fb02 3306 	mla	r3, r2, r6, r3
 801897c:	b289      	uxth	r1, r1
 801897e:	3001      	adds	r0, #1
 8018980:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8018984:	4285      	cmp	r5, r0
 8018986:	f84c 1b04 	str.w	r1, [ip], #4
 801898a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 801898e:	dcec      	bgt.n	801896a <__multadd+0x12>
 8018990:	b30e      	cbz	r6, 80189d6 <__multadd+0x7e>
 8018992:	68a3      	ldr	r3, [r4, #8]
 8018994:	42ab      	cmp	r3, r5
 8018996:	dc19      	bgt.n	80189cc <__multadd+0x74>
 8018998:	6861      	ldr	r1, [r4, #4]
 801899a:	4638      	mov	r0, r7
 801899c:	3101      	adds	r1, #1
 801899e:	f7ff ff79 	bl	8018894 <_Balloc>
 80189a2:	4680      	mov	r8, r0
 80189a4:	b928      	cbnz	r0, 80189b2 <__multadd+0x5a>
 80189a6:	4602      	mov	r2, r0
 80189a8:	4b0c      	ldr	r3, [pc, #48]	@ (80189dc <__multadd+0x84>)
 80189aa:	480d      	ldr	r0, [pc, #52]	@ (80189e0 <__multadd+0x88>)
 80189ac:	21ba      	movs	r1, #186	@ 0xba
 80189ae:	f000 fe5b 	bl	8019668 <__assert_func>
 80189b2:	6922      	ldr	r2, [r4, #16]
 80189b4:	3202      	adds	r2, #2
 80189b6:	f104 010c 	add.w	r1, r4, #12
 80189ba:	0092      	lsls	r2, r2, #2
 80189bc:	300c      	adds	r0, #12
 80189be:	f7fe fd26 	bl	801740e <memcpy>
 80189c2:	4621      	mov	r1, r4
 80189c4:	4638      	mov	r0, r7
 80189c6:	f7ff ffa5 	bl	8018914 <_Bfree>
 80189ca:	4644      	mov	r4, r8
 80189cc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80189d0:	3501      	adds	r5, #1
 80189d2:	615e      	str	r6, [r3, #20]
 80189d4:	6125      	str	r5, [r4, #16]
 80189d6:	4620      	mov	r0, r4
 80189d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80189dc:	0801b291 	.word	0x0801b291
 80189e0:	0801b302 	.word	0x0801b302

080189e4 <__s2b>:
 80189e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80189e8:	460c      	mov	r4, r1
 80189ea:	4615      	mov	r5, r2
 80189ec:	461f      	mov	r7, r3
 80189ee:	2209      	movs	r2, #9
 80189f0:	3308      	adds	r3, #8
 80189f2:	4606      	mov	r6, r0
 80189f4:	fb93 f3f2 	sdiv	r3, r3, r2
 80189f8:	2100      	movs	r1, #0
 80189fa:	2201      	movs	r2, #1
 80189fc:	429a      	cmp	r2, r3
 80189fe:	db09      	blt.n	8018a14 <__s2b+0x30>
 8018a00:	4630      	mov	r0, r6
 8018a02:	f7ff ff47 	bl	8018894 <_Balloc>
 8018a06:	b940      	cbnz	r0, 8018a1a <__s2b+0x36>
 8018a08:	4602      	mov	r2, r0
 8018a0a:	4b19      	ldr	r3, [pc, #100]	@ (8018a70 <__s2b+0x8c>)
 8018a0c:	4819      	ldr	r0, [pc, #100]	@ (8018a74 <__s2b+0x90>)
 8018a0e:	21d3      	movs	r1, #211	@ 0xd3
 8018a10:	f000 fe2a 	bl	8019668 <__assert_func>
 8018a14:	0052      	lsls	r2, r2, #1
 8018a16:	3101      	adds	r1, #1
 8018a18:	e7f0      	b.n	80189fc <__s2b+0x18>
 8018a1a:	9b08      	ldr	r3, [sp, #32]
 8018a1c:	6143      	str	r3, [r0, #20]
 8018a1e:	2d09      	cmp	r5, #9
 8018a20:	f04f 0301 	mov.w	r3, #1
 8018a24:	6103      	str	r3, [r0, #16]
 8018a26:	dd16      	ble.n	8018a56 <__s2b+0x72>
 8018a28:	f104 0909 	add.w	r9, r4, #9
 8018a2c:	46c8      	mov	r8, r9
 8018a2e:	442c      	add	r4, r5
 8018a30:	f818 3b01 	ldrb.w	r3, [r8], #1
 8018a34:	4601      	mov	r1, r0
 8018a36:	3b30      	subs	r3, #48	@ 0x30
 8018a38:	220a      	movs	r2, #10
 8018a3a:	4630      	mov	r0, r6
 8018a3c:	f7ff ff8c 	bl	8018958 <__multadd>
 8018a40:	45a0      	cmp	r8, r4
 8018a42:	d1f5      	bne.n	8018a30 <__s2b+0x4c>
 8018a44:	f1a5 0408 	sub.w	r4, r5, #8
 8018a48:	444c      	add	r4, r9
 8018a4a:	1b2d      	subs	r5, r5, r4
 8018a4c:	1963      	adds	r3, r4, r5
 8018a4e:	42bb      	cmp	r3, r7
 8018a50:	db04      	blt.n	8018a5c <__s2b+0x78>
 8018a52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018a56:	340a      	adds	r4, #10
 8018a58:	2509      	movs	r5, #9
 8018a5a:	e7f6      	b.n	8018a4a <__s2b+0x66>
 8018a5c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018a60:	4601      	mov	r1, r0
 8018a62:	3b30      	subs	r3, #48	@ 0x30
 8018a64:	220a      	movs	r2, #10
 8018a66:	4630      	mov	r0, r6
 8018a68:	f7ff ff76 	bl	8018958 <__multadd>
 8018a6c:	e7ee      	b.n	8018a4c <__s2b+0x68>
 8018a6e:	bf00      	nop
 8018a70:	0801b291 	.word	0x0801b291
 8018a74:	0801b302 	.word	0x0801b302

08018a78 <__hi0bits>:
 8018a78:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8018a7c:	4603      	mov	r3, r0
 8018a7e:	bf36      	itet	cc
 8018a80:	0403      	lslcc	r3, r0, #16
 8018a82:	2000      	movcs	r0, #0
 8018a84:	2010      	movcc	r0, #16
 8018a86:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8018a8a:	bf3c      	itt	cc
 8018a8c:	021b      	lslcc	r3, r3, #8
 8018a8e:	3008      	addcc	r0, #8
 8018a90:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8018a94:	bf3c      	itt	cc
 8018a96:	011b      	lslcc	r3, r3, #4
 8018a98:	3004      	addcc	r0, #4
 8018a9a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8018a9e:	bf3c      	itt	cc
 8018aa0:	009b      	lslcc	r3, r3, #2
 8018aa2:	3002      	addcc	r0, #2
 8018aa4:	2b00      	cmp	r3, #0
 8018aa6:	db05      	blt.n	8018ab4 <__hi0bits+0x3c>
 8018aa8:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8018aac:	f100 0001 	add.w	r0, r0, #1
 8018ab0:	bf08      	it	eq
 8018ab2:	2020      	moveq	r0, #32
 8018ab4:	4770      	bx	lr

08018ab6 <__lo0bits>:
 8018ab6:	6803      	ldr	r3, [r0, #0]
 8018ab8:	4602      	mov	r2, r0
 8018aba:	f013 0007 	ands.w	r0, r3, #7
 8018abe:	d00b      	beq.n	8018ad8 <__lo0bits+0x22>
 8018ac0:	07d9      	lsls	r1, r3, #31
 8018ac2:	d421      	bmi.n	8018b08 <__lo0bits+0x52>
 8018ac4:	0798      	lsls	r0, r3, #30
 8018ac6:	bf49      	itett	mi
 8018ac8:	085b      	lsrmi	r3, r3, #1
 8018aca:	089b      	lsrpl	r3, r3, #2
 8018acc:	2001      	movmi	r0, #1
 8018ace:	6013      	strmi	r3, [r2, #0]
 8018ad0:	bf5c      	itt	pl
 8018ad2:	6013      	strpl	r3, [r2, #0]
 8018ad4:	2002      	movpl	r0, #2
 8018ad6:	4770      	bx	lr
 8018ad8:	b299      	uxth	r1, r3
 8018ada:	b909      	cbnz	r1, 8018ae0 <__lo0bits+0x2a>
 8018adc:	0c1b      	lsrs	r3, r3, #16
 8018ade:	2010      	movs	r0, #16
 8018ae0:	b2d9      	uxtb	r1, r3
 8018ae2:	b909      	cbnz	r1, 8018ae8 <__lo0bits+0x32>
 8018ae4:	3008      	adds	r0, #8
 8018ae6:	0a1b      	lsrs	r3, r3, #8
 8018ae8:	0719      	lsls	r1, r3, #28
 8018aea:	bf04      	itt	eq
 8018aec:	091b      	lsreq	r3, r3, #4
 8018aee:	3004      	addeq	r0, #4
 8018af0:	0799      	lsls	r1, r3, #30
 8018af2:	bf04      	itt	eq
 8018af4:	089b      	lsreq	r3, r3, #2
 8018af6:	3002      	addeq	r0, #2
 8018af8:	07d9      	lsls	r1, r3, #31
 8018afa:	d403      	bmi.n	8018b04 <__lo0bits+0x4e>
 8018afc:	085b      	lsrs	r3, r3, #1
 8018afe:	f100 0001 	add.w	r0, r0, #1
 8018b02:	d003      	beq.n	8018b0c <__lo0bits+0x56>
 8018b04:	6013      	str	r3, [r2, #0]
 8018b06:	4770      	bx	lr
 8018b08:	2000      	movs	r0, #0
 8018b0a:	4770      	bx	lr
 8018b0c:	2020      	movs	r0, #32
 8018b0e:	4770      	bx	lr

08018b10 <__i2b>:
 8018b10:	b510      	push	{r4, lr}
 8018b12:	460c      	mov	r4, r1
 8018b14:	2101      	movs	r1, #1
 8018b16:	f7ff febd 	bl	8018894 <_Balloc>
 8018b1a:	4602      	mov	r2, r0
 8018b1c:	b928      	cbnz	r0, 8018b2a <__i2b+0x1a>
 8018b1e:	4b05      	ldr	r3, [pc, #20]	@ (8018b34 <__i2b+0x24>)
 8018b20:	4805      	ldr	r0, [pc, #20]	@ (8018b38 <__i2b+0x28>)
 8018b22:	f240 1145 	movw	r1, #325	@ 0x145
 8018b26:	f000 fd9f 	bl	8019668 <__assert_func>
 8018b2a:	2301      	movs	r3, #1
 8018b2c:	6144      	str	r4, [r0, #20]
 8018b2e:	6103      	str	r3, [r0, #16]
 8018b30:	bd10      	pop	{r4, pc}
 8018b32:	bf00      	nop
 8018b34:	0801b291 	.word	0x0801b291
 8018b38:	0801b302 	.word	0x0801b302

08018b3c <__multiply>:
 8018b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b40:	4614      	mov	r4, r2
 8018b42:	690a      	ldr	r2, [r1, #16]
 8018b44:	6923      	ldr	r3, [r4, #16]
 8018b46:	429a      	cmp	r2, r3
 8018b48:	bfa8      	it	ge
 8018b4a:	4623      	movge	r3, r4
 8018b4c:	460f      	mov	r7, r1
 8018b4e:	bfa4      	itt	ge
 8018b50:	460c      	movge	r4, r1
 8018b52:	461f      	movge	r7, r3
 8018b54:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8018b58:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8018b5c:	68a3      	ldr	r3, [r4, #8]
 8018b5e:	6861      	ldr	r1, [r4, #4]
 8018b60:	eb0a 0609 	add.w	r6, sl, r9
 8018b64:	42b3      	cmp	r3, r6
 8018b66:	b085      	sub	sp, #20
 8018b68:	bfb8      	it	lt
 8018b6a:	3101      	addlt	r1, #1
 8018b6c:	f7ff fe92 	bl	8018894 <_Balloc>
 8018b70:	b930      	cbnz	r0, 8018b80 <__multiply+0x44>
 8018b72:	4602      	mov	r2, r0
 8018b74:	4b44      	ldr	r3, [pc, #272]	@ (8018c88 <__multiply+0x14c>)
 8018b76:	4845      	ldr	r0, [pc, #276]	@ (8018c8c <__multiply+0x150>)
 8018b78:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8018b7c:	f000 fd74 	bl	8019668 <__assert_func>
 8018b80:	f100 0514 	add.w	r5, r0, #20
 8018b84:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8018b88:	462b      	mov	r3, r5
 8018b8a:	2200      	movs	r2, #0
 8018b8c:	4543      	cmp	r3, r8
 8018b8e:	d321      	bcc.n	8018bd4 <__multiply+0x98>
 8018b90:	f107 0114 	add.w	r1, r7, #20
 8018b94:	f104 0214 	add.w	r2, r4, #20
 8018b98:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8018b9c:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8018ba0:	9302      	str	r3, [sp, #8]
 8018ba2:	1b13      	subs	r3, r2, r4
 8018ba4:	3b15      	subs	r3, #21
 8018ba6:	f023 0303 	bic.w	r3, r3, #3
 8018baa:	3304      	adds	r3, #4
 8018bac:	f104 0715 	add.w	r7, r4, #21
 8018bb0:	42ba      	cmp	r2, r7
 8018bb2:	bf38      	it	cc
 8018bb4:	2304      	movcc	r3, #4
 8018bb6:	9301      	str	r3, [sp, #4]
 8018bb8:	9b02      	ldr	r3, [sp, #8]
 8018bba:	9103      	str	r1, [sp, #12]
 8018bbc:	428b      	cmp	r3, r1
 8018bbe:	d80c      	bhi.n	8018bda <__multiply+0x9e>
 8018bc0:	2e00      	cmp	r6, #0
 8018bc2:	dd03      	ble.n	8018bcc <__multiply+0x90>
 8018bc4:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8018bc8:	2b00      	cmp	r3, #0
 8018bca:	d05b      	beq.n	8018c84 <__multiply+0x148>
 8018bcc:	6106      	str	r6, [r0, #16]
 8018bce:	b005      	add	sp, #20
 8018bd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018bd4:	f843 2b04 	str.w	r2, [r3], #4
 8018bd8:	e7d8      	b.n	8018b8c <__multiply+0x50>
 8018bda:	f8b1 a000 	ldrh.w	sl, [r1]
 8018bde:	f1ba 0f00 	cmp.w	sl, #0
 8018be2:	d024      	beq.n	8018c2e <__multiply+0xf2>
 8018be4:	f104 0e14 	add.w	lr, r4, #20
 8018be8:	46a9      	mov	r9, r5
 8018bea:	f04f 0c00 	mov.w	ip, #0
 8018bee:	f85e 7b04 	ldr.w	r7, [lr], #4
 8018bf2:	f8d9 3000 	ldr.w	r3, [r9]
 8018bf6:	fa1f fb87 	uxth.w	fp, r7
 8018bfa:	b29b      	uxth	r3, r3
 8018bfc:	fb0a 330b 	mla	r3, sl, fp, r3
 8018c00:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 8018c04:	f8d9 7000 	ldr.w	r7, [r9]
 8018c08:	4463      	add	r3, ip
 8018c0a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8018c0e:	fb0a c70b 	mla	r7, sl, fp, ip
 8018c12:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8018c16:	b29b      	uxth	r3, r3
 8018c18:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8018c1c:	4572      	cmp	r2, lr
 8018c1e:	f849 3b04 	str.w	r3, [r9], #4
 8018c22:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8018c26:	d8e2      	bhi.n	8018bee <__multiply+0xb2>
 8018c28:	9b01      	ldr	r3, [sp, #4]
 8018c2a:	f845 c003 	str.w	ip, [r5, r3]
 8018c2e:	9b03      	ldr	r3, [sp, #12]
 8018c30:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8018c34:	3104      	adds	r1, #4
 8018c36:	f1b9 0f00 	cmp.w	r9, #0
 8018c3a:	d021      	beq.n	8018c80 <__multiply+0x144>
 8018c3c:	682b      	ldr	r3, [r5, #0]
 8018c3e:	f104 0c14 	add.w	ip, r4, #20
 8018c42:	46ae      	mov	lr, r5
 8018c44:	f04f 0a00 	mov.w	sl, #0
 8018c48:	f8bc b000 	ldrh.w	fp, [ip]
 8018c4c:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8018c50:	fb09 770b 	mla	r7, r9, fp, r7
 8018c54:	4457      	add	r7, sl
 8018c56:	b29b      	uxth	r3, r3
 8018c58:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8018c5c:	f84e 3b04 	str.w	r3, [lr], #4
 8018c60:	f85c 3b04 	ldr.w	r3, [ip], #4
 8018c64:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8018c68:	f8be 3000 	ldrh.w	r3, [lr]
 8018c6c:	fb09 330a 	mla	r3, r9, sl, r3
 8018c70:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8018c74:	4562      	cmp	r2, ip
 8018c76:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8018c7a:	d8e5      	bhi.n	8018c48 <__multiply+0x10c>
 8018c7c:	9f01      	ldr	r7, [sp, #4]
 8018c7e:	51eb      	str	r3, [r5, r7]
 8018c80:	3504      	adds	r5, #4
 8018c82:	e799      	b.n	8018bb8 <__multiply+0x7c>
 8018c84:	3e01      	subs	r6, #1
 8018c86:	e79b      	b.n	8018bc0 <__multiply+0x84>
 8018c88:	0801b291 	.word	0x0801b291
 8018c8c:	0801b302 	.word	0x0801b302

08018c90 <__pow5mult>:
 8018c90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018c94:	4615      	mov	r5, r2
 8018c96:	f012 0203 	ands.w	r2, r2, #3
 8018c9a:	4607      	mov	r7, r0
 8018c9c:	460e      	mov	r6, r1
 8018c9e:	d007      	beq.n	8018cb0 <__pow5mult+0x20>
 8018ca0:	4c25      	ldr	r4, [pc, #148]	@ (8018d38 <__pow5mult+0xa8>)
 8018ca2:	3a01      	subs	r2, #1
 8018ca4:	2300      	movs	r3, #0
 8018ca6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8018caa:	f7ff fe55 	bl	8018958 <__multadd>
 8018cae:	4606      	mov	r6, r0
 8018cb0:	10ad      	asrs	r5, r5, #2
 8018cb2:	d03d      	beq.n	8018d30 <__pow5mult+0xa0>
 8018cb4:	69fc      	ldr	r4, [r7, #28]
 8018cb6:	b97c      	cbnz	r4, 8018cd8 <__pow5mult+0x48>
 8018cb8:	2010      	movs	r0, #16
 8018cba:	f7ff fd23 	bl	8018704 <malloc>
 8018cbe:	4602      	mov	r2, r0
 8018cc0:	61f8      	str	r0, [r7, #28]
 8018cc2:	b928      	cbnz	r0, 8018cd0 <__pow5mult+0x40>
 8018cc4:	4b1d      	ldr	r3, [pc, #116]	@ (8018d3c <__pow5mult+0xac>)
 8018cc6:	481e      	ldr	r0, [pc, #120]	@ (8018d40 <__pow5mult+0xb0>)
 8018cc8:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8018ccc:	f000 fccc 	bl	8019668 <__assert_func>
 8018cd0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8018cd4:	6004      	str	r4, [r0, #0]
 8018cd6:	60c4      	str	r4, [r0, #12]
 8018cd8:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8018cdc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8018ce0:	b94c      	cbnz	r4, 8018cf6 <__pow5mult+0x66>
 8018ce2:	f240 2171 	movw	r1, #625	@ 0x271
 8018ce6:	4638      	mov	r0, r7
 8018ce8:	f7ff ff12 	bl	8018b10 <__i2b>
 8018cec:	2300      	movs	r3, #0
 8018cee:	f8c8 0008 	str.w	r0, [r8, #8]
 8018cf2:	4604      	mov	r4, r0
 8018cf4:	6003      	str	r3, [r0, #0]
 8018cf6:	f04f 0900 	mov.w	r9, #0
 8018cfa:	07eb      	lsls	r3, r5, #31
 8018cfc:	d50a      	bpl.n	8018d14 <__pow5mult+0x84>
 8018cfe:	4631      	mov	r1, r6
 8018d00:	4622      	mov	r2, r4
 8018d02:	4638      	mov	r0, r7
 8018d04:	f7ff ff1a 	bl	8018b3c <__multiply>
 8018d08:	4631      	mov	r1, r6
 8018d0a:	4680      	mov	r8, r0
 8018d0c:	4638      	mov	r0, r7
 8018d0e:	f7ff fe01 	bl	8018914 <_Bfree>
 8018d12:	4646      	mov	r6, r8
 8018d14:	106d      	asrs	r5, r5, #1
 8018d16:	d00b      	beq.n	8018d30 <__pow5mult+0xa0>
 8018d18:	6820      	ldr	r0, [r4, #0]
 8018d1a:	b938      	cbnz	r0, 8018d2c <__pow5mult+0x9c>
 8018d1c:	4622      	mov	r2, r4
 8018d1e:	4621      	mov	r1, r4
 8018d20:	4638      	mov	r0, r7
 8018d22:	f7ff ff0b 	bl	8018b3c <__multiply>
 8018d26:	6020      	str	r0, [r4, #0]
 8018d28:	f8c0 9000 	str.w	r9, [r0]
 8018d2c:	4604      	mov	r4, r0
 8018d2e:	e7e4      	b.n	8018cfa <__pow5mult+0x6a>
 8018d30:	4630      	mov	r0, r6
 8018d32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018d36:	bf00      	nop
 8018d38:	0801b35c 	.word	0x0801b35c
 8018d3c:	0801b222 	.word	0x0801b222
 8018d40:	0801b302 	.word	0x0801b302

08018d44 <__lshift>:
 8018d44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018d48:	460c      	mov	r4, r1
 8018d4a:	6849      	ldr	r1, [r1, #4]
 8018d4c:	6923      	ldr	r3, [r4, #16]
 8018d4e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8018d52:	68a3      	ldr	r3, [r4, #8]
 8018d54:	4607      	mov	r7, r0
 8018d56:	4691      	mov	r9, r2
 8018d58:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8018d5c:	f108 0601 	add.w	r6, r8, #1
 8018d60:	42b3      	cmp	r3, r6
 8018d62:	db0b      	blt.n	8018d7c <__lshift+0x38>
 8018d64:	4638      	mov	r0, r7
 8018d66:	f7ff fd95 	bl	8018894 <_Balloc>
 8018d6a:	4605      	mov	r5, r0
 8018d6c:	b948      	cbnz	r0, 8018d82 <__lshift+0x3e>
 8018d6e:	4602      	mov	r2, r0
 8018d70:	4b28      	ldr	r3, [pc, #160]	@ (8018e14 <__lshift+0xd0>)
 8018d72:	4829      	ldr	r0, [pc, #164]	@ (8018e18 <__lshift+0xd4>)
 8018d74:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8018d78:	f000 fc76 	bl	8019668 <__assert_func>
 8018d7c:	3101      	adds	r1, #1
 8018d7e:	005b      	lsls	r3, r3, #1
 8018d80:	e7ee      	b.n	8018d60 <__lshift+0x1c>
 8018d82:	2300      	movs	r3, #0
 8018d84:	f100 0114 	add.w	r1, r0, #20
 8018d88:	f100 0210 	add.w	r2, r0, #16
 8018d8c:	4618      	mov	r0, r3
 8018d8e:	4553      	cmp	r3, sl
 8018d90:	db33      	blt.n	8018dfa <__lshift+0xb6>
 8018d92:	6920      	ldr	r0, [r4, #16]
 8018d94:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8018d98:	f104 0314 	add.w	r3, r4, #20
 8018d9c:	f019 091f 	ands.w	r9, r9, #31
 8018da0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8018da4:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8018da8:	d02b      	beq.n	8018e02 <__lshift+0xbe>
 8018daa:	f1c9 0e20 	rsb	lr, r9, #32
 8018dae:	468a      	mov	sl, r1
 8018db0:	2200      	movs	r2, #0
 8018db2:	6818      	ldr	r0, [r3, #0]
 8018db4:	fa00 f009 	lsl.w	r0, r0, r9
 8018db8:	4310      	orrs	r0, r2
 8018dba:	f84a 0b04 	str.w	r0, [sl], #4
 8018dbe:	f853 2b04 	ldr.w	r2, [r3], #4
 8018dc2:	459c      	cmp	ip, r3
 8018dc4:	fa22 f20e 	lsr.w	r2, r2, lr
 8018dc8:	d8f3      	bhi.n	8018db2 <__lshift+0x6e>
 8018dca:	ebac 0304 	sub.w	r3, ip, r4
 8018dce:	3b15      	subs	r3, #21
 8018dd0:	f023 0303 	bic.w	r3, r3, #3
 8018dd4:	3304      	adds	r3, #4
 8018dd6:	f104 0015 	add.w	r0, r4, #21
 8018dda:	4584      	cmp	ip, r0
 8018ddc:	bf38      	it	cc
 8018dde:	2304      	movcc	r3, #4
 8018de0:	50ca      	str	r2, [r1, r3]
 8018de2:	b10a      	cbz	r2, 8018de8 <__lshift+0xa4>
 8018de4:	f108 0602 	add.w	r6, r8, #2
 8018de8:	3e01      	subs	r6, #1
 8018dea:	4638      	mov	r0, r7
 8018dec:	612e      	str	r6, [r5, #16]
 8018dee:	4621      	mov	r1, r4
 8018df0:	f7ff fd90 	bl	8018914 <_Bfree>
 8018df4:	4628      	mov	r0, r5
 8018df6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018dfa:	f842 0f04 	str.w	r0, [r2, #4]!
 8018dfe:	3301      	adds	r3, #1
 8018e00:	e7c5      	b.n	8018d8e <__lshift+0x4a>
 8018e02:	3904      	subs	r1, #4
 8018e04:	f853 2b04 	ldr.w	r2, [r3], #4
 8018e08:	f841 2f04 	str.w	r2, [r1, #4]!
 8018e0c:	459c      	cmp	ip, r3
 8018e0e:	d8f9      	bhi.n	8018e04 <__lshift+0xc0>
 8018e10:	e7ea      	b.n	8018de8 <__lshift+0xa4>
 8018e12:	bf00      	nop
 8018e14:	0801b291 	.word	0x0801b291
 8018e18:	0801b302 	.word	0x0801b302

08018e1c <__mcmp>:
 8018e1c:	690a      	ldr	r2, [r1, #16]
 8018e1e:	4603      	mov	r3, r0
 8018e20:	6900      	ldr	r0, [r0, #16]
 8018e22:	1a80      	subs	r0, r0, r2
 8018e24:	b530      	push	{r4, r5, lr}
 8018e26:	d10e      	bne.n	8018e46 <__mcmp+0x2a>
 8018e28:	3314      	adds	r3, #20
 8018e2a:	3114      	adds	r1, #20
 8018e2c:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8018e30:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8018e34:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8018e38:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8018e3c:	4295      	cmp	r5, r2
 8018e3e:	d003      	beq.n	8018e48 <__mcmp+0x2c>
 8018e40:	d205      	bcs.n	8018e4e <__mcmp+0x32>
 8018e42:	f04f 30ff 	mov.w	r0, #4294967295
 8018e46:	bd30      	pop	{r4, r5, pc}
 8018e48:	42a3      	cmp	r3, r4
 8018e4a:	d3f3      	bcc.n	8018e34 <__mcmp+0x18>
 8018e4c:	e7fb      	b.n	8018e46 <__mcmp+0x2a>
 8018e4e:	2001      	movs	r0, #1
 8018e50:	e7f9      	b.n	8018e46 <__mcmp+0x2a>
	...

08018e54 <__mdiff>:
 8018e54:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e58:	4689      	mov	r9, r1
 8018e5a:	4606      	mov	r6, r0
 8018e5c:	4611      	mov	r1, r2
 8018e5e:	4648      	mov	r0, r9
 8018e60:	4614      	mov	r4, r2
 8018e62:	f7ff ffdb 	bl	8018e1c <__mcmp>
 8018e66:	1e05      	subs	r5, r0, #0
 8018e68:	d112      	bne.n	8018e90 <__mdiff+0x3c>
 8018e6a:	4629      	mov	r1, r5
 8018e6c:	4630      	mov	r0, r6
 8018e6e:	f7ff fd11 	bl	8018894 <_Balloc>
 8018e72:	4602      	mov	r2, r0
 8018e74:	b928      	cbnz	r0, 8018e82 <__mdiff+0x2e>
 8018e76:	4b3f      	ldr	r3, [pc, #252]	@ (8018f74 <__mdiff+0x120>)
 8018e78:	f240 2137 	movw	r1, #567	@ 0x237
 8018e7c:	483e      	ldr	r0, [pc, #248]	@ (8018f78 <__mdiff+0x124>)
 8018e7e:	f000 fbf3 	bl	8019668 <__assert_func>
 8018e82:	2301      	movs	r3, #1
 8018e84:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8018e88:	4610      	mov	r0, r2
 8018e8a:	b003      	add	sp, #12
 8018e8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018e90:	bfbc      	itt	lt
 8018e92:	464b      	movlt	r3, r9
 8018e94:	46a1      	movlt	r9, r4
 8018e96:	4630      	mov	r0, r6
 8018e98:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8018e9c:	bfba      	itte	lt
 8018e9e:	461c      	movlt	r4, r3
 8018ea0:	2501      	movlt	r5, #1
 8018ea2:	2500      	movge	r5, #0
 8018ea4:	f7ff fcf6 	bl	8018894 <_Balloc>
 8018ea8:	4602      	mov	r2, r0
 8018eaa:	b918      	cbnz	r0, 8018eb4 <__mdiff+0x60>
 8018eac:	4b31      	ldr	r3, [pc, #196]	@ (8018f74 <__mdiff+0x120>)
 8018eae:	f240 2145 	movw	r1, #581	@ 0x245
 8018eb2:	e7e3      	b.n	8018e7c <__mdiff+0x28>
 8018eb4:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8018eb8:	6926      	ldr	r6, [r4, #16]
 8018eba:	60c5      	str	r5, [r0, #12]
 8018ebc:	f109 0310 	add.w	r3, r9, #16
 8018ec0:	f109 0514 	add.w	r5, r9, #20
 8018ec4:	f104 0e14 	add.w	lr, r4, #20
 8018ec8:	f100 0b14 	add.w	fp, r0, #20
 8018ecc:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8018ed0:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8018ed4:	9301      	str	r3, [sp, #4]
 8018ed6:	46d9      	mov	r9, fp
 8018ed8:	f04f 0c00 	mov.w	ip, #0
 8018edc:	9b01      	ldr	r3, [sp, #4]
 8018ede:	f85e 0b04 	ldr.w	r0, [lr], #4
 8018ee2:	f853 af04 	ldr.w	sl, [r3, #4]!
 8018ee6:	9301      	str	r3, [sp, #4]
 8018ee8:	fa1f f38a 	uxth.w	r3, sl
 8018eec:	4619      	mov	r1, r3
 8018eee:	b283      	uxth	r3, r0
 8018ef0:	1acb      	subs	r3, r1, r3
 8018ef2:	0c00      	lsrs	r0, r0, #16
 8018ef4:	4463      	add	r3, ip
 8018ef6:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8018efa:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8018efe:	b29b      	uxth	r3, r3
 8018f00:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8018f04:	4576      	cmp	r6, lr
 8018f06:	f849 3b04 	str.w	r3, [r9], #4
 8018f0a:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8018f0e:	d8e5      	bhi.n	8018edc <__mdiff+0x88>
 8018f10:	1b33      	subs	r3, r6, r4
 8018f12:	3b15      	subs	r3, #21
 8018f14:	f023 0303 	bic.w	r3, r3, #3
 8018f18:	3415      	adds	r4, #21
 8018f1a:	3304      	adds	r3, #4
 8018f1c:	42a6      	cmp	r6, r4
 8018f1e:	bf38      	it	cc
 8018f20:	2304      	movcc	r3, #4
 8018f22:	441d      	add	r5, r3
 8018f24:	445b      	add	r3, fp
 8018f26:	461e      	mov	r6, r3
 8018f28:	462c      	mov	r4, r5
 8018f2a:	4544      	cmp	r4, r8
 8018f2c:	d30e      	bcc.n	8018f4c <__mdiff+0xf8>
 8018f2e:	f108 0103 	add.w	r1, r8, #3
 8018f32:	1b49      	subs	r1, r1, r5
 8018f34:	f021 0103 	bic.w	r1, r1, #3
 8018f38:	3d03      	subs	r5, #3
 8018f3a:	45a8      	cmp	r8, r5
 8018f3c:	bf38      	it	cc
 8018f3e:	2100      	movcc	r1, #0
 8018f40:	440b      	add	r3, r1
 8018f42:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8018f46:	b191      	cbz	r1, 8018f6e <__mdiff+0x11a>
 8018f48:	6117      	str	r7, [r2, #16]
 8018f4a:	e79d      	b.n	8018e88 <__mdiff+0x34>
 8018f4c:	f854 1b04 	ldr.w	r1, [r4], #4
 8018f50:	46e6      	mov	lr, ip
 8018f52:	0c08      	lsrs	r0, r1, #16
 8018f54:	fa1c fc81 	uxtah	ip, ip, r1
 8018f58:	4471      	add	r1, lr
 8018f5a:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8018f5e:	b289      	uxth	r1, r1
 8018f60:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8018f64:	f846 1b04 	str.w	r1, [r6], #4
 8018f68:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8018f6c:	e7dd      	b.n	8018f2a <__mdiff+0xd6>
 8018f6e:	3f01      	subs	r7, #1
 8018f70:	e7e7      	b.n	8018f42 <__mdiff+0xee>
 8018f72:	bf00      	nop
 8018f74:	0801b291 	.word	0x0801b291
 8018f78:	0801b302 	.word	0x0801b302

08018f7c <__ulp>:
 8018f7c:	b082      	sub	sp, #8
 8018f7e:	ed8d 0b00 	vstr	d0, [sp]
 8018f82:	9a01      	ldr	r2, [sp, #4]
 8018f84:	4b0f      	ldr	r3, [pc, #60]	@ (8018fc4 <__ulp+0x48>)
 8018f86:	4013      	ands	r3, r2
 8018f88:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8018f8c:	2b00      	cmp	r3, #0
 8018f8e:	dc08      	bgt.n	8018fa2 <__ulp+0x26>
 8018f90:	425b      	negs	r3, r3
 8018f92:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 8018f96:	ea4f 5223 	mov.w	r2, r3, asr #20
 8018f9a:	da04      	bge.n	8018fa6 <__ulp+0x2a>
 8018f9c:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8018fa0:	4113      	asrs	r3, r2
 8018fa2:	2200      	movs	r2, #0
 8018fa4:	e008      	b.n	8018fb8 <__ulp+0x3c>
 8018fa6:	f1a2 0314 	sub.w	r3, r2, #20
 8018faa:	2b1e      	cmp	r3, #30
 8018fac:	bfda      	itte	le
 8018fae:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 8018fb2:	40da      	lsrle	r2, r3
 8018fb4:	2201      	movgt	r2, #1
 8018fb6:	2300      	movs	r3, #0
 8018fb8:	4619      	mov	r1, r3
 8018fba:	4610      	mov	r0, r2
 8018fbc:	ec41 0b10 	vmov	d0, r0, r1
 8018fc0:	b002      	add	sp, #8
 8018fc2:	4770      	bx	lr
 8018fc4:	7ff00000 	.word	0x7ff00000

08018fc8 <__b2d>:
 8018fc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018fcc:	6906      	ldr	r6, [r0, #16]
 8018fce:	f100 0814 	add.w	r8, r0, #20
 8018fd2:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8018fd6:	1f37      	subs	r7, r6, #4
 8018fd8:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8018fdc:	4610      	mov	r0, r2
 8018fde:	f7ff fd4b 	bl	8018a78 <__hi0bits>
 8018fe2:	f1c0 0320 	rsb	r3, r0, #32
 8018fe6:	280a      	cmp	r0, #10
 8018fe8:	600b      	str	r3, [r1, #0]
 8018fea:	491b      	ldr	r1, [pc, #108]	@ (8019058 <__b2d+0x90>)
 8018fec:	dc15      	bgt.n	801901a <__b2d+0x52>
 8018fee:	f1c0 0c0b 	rsb	ip, r0, #11
 8018ff2:	fa22 f30c 	lsr.w	r3, r2, ip
 8018ff6:	45b8      	cmp	r8, r7
 8018ff8:	ea43 0501 	orr.w	r5, r3, r1
 8018ffc:	bf34      	ite	cc
 8018ffe:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8019002:	2300      	movcs	r3, #0
 8019004:	3015      	adds	r0, #21
 8019006:	fa02 f000 	lsl.w	r0, r2, r0
 801900a:	fa23 f30c 	lsr.w	r3, r3, ip
 801900e:	4303      	orrs	r3, r0
 8019010:	461c      	mov	r4, r3
 8019012:	ec45 4b10 	vmov	d0, r4, r5
 8019016:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801901a:	45b8      	cmp	r8, r7
 801901c:	bf3a      	itte	cc
 801901e:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8019022:	f1a6 0708 	subcc.w	r7, r6, #8
 8019026:	2300      	movcs	r3, #0
 8019028:	380b      	subs	r0, #11
 801902a:	d012      	beq.n	8019052 <__b2d+0x8a>
 801902c:	f1c0 0120 	rsb	r1, r0, #32
 8019030:	fa23 f401 	lsr.w	r4, r3, r1
 8019034:	4082      	lsls	r2, r0
 8019036:	4322      	orrs	r2, r4
 8019038:	4547      	cmp	r7, r8
 801903a:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 801903e:	bf8c      	ite	hi
 8019040:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 8019044:	2200      	movls	r2, #0
 8019046:	4083      	lsls	r3, r0
 8019048:	40ca      	lsrs	r2, r1
 801904a:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 801904e:	4313      	orrs	r3, r2
 8019050:	e7de      	b.n	8019010 <__b2d+0x48>
 8019052:	ea42 0501 	orr.w	r5, r2, r1
 8019056:	e7db      	b.n	8019010 <__b2d+0x48>
 8019058:	3ff00000 	.word	0x3ff00000

0801905c <__d2b>:
 801905c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8019060:	460f      	mov	r7, r1
 8019062:	2101      	movs	r1, #1
 8019064:	ec59 8b10 	vmov	r8, r9, d0
 8019068:	4616      	mov	r6, r2
 801906a:	f7ff fc13 	bl	8018894 <_Balloc>
 801906e:	4604      	mov	r4, r0
 8019070:	b930      	cbnz	r0, 8019080 <__d2b+0x24>
 8019072:	4602      	mov	r2, r0
 8019074:	4b23      	ldr	r3, [pc, #140]	@ (8019104 <__d2b+0xa8>)
 8019076:	4824      	ldr	r0, [pc, #144]	@ (8019108 <__d2b+0xac>)
 8019078:	f240 310f 	movw	r1, #783	@ 0x30f
 801907c:	f000 faf4 	bl	8019668 <__assert_func>
 8019080:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8019084:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8019088:	b10d      	cbz	r5, 801908e <__d2b+0x32>
 801908a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 801908e:	9301      	str	r3, [sp, #4]
 8019090:	f1b8 0300 	subs.w	r3, r8, #0
 8019094:	d023      	beq.n	80190de <__d2b+0x82>
 8019096:	4668      	mov	r0, sp
 8019098:	9300      	str	r3, [sp, #0]
 801909a:	f7ff fd0c 	bl	8018ab6 <__lo0bits>
 801909e:	e9dd 1200 	ldrd	r1, r2, [sp]
 80190a2:	b1d0      	cbz	r0, 80190da <__d2b+0x7e>
 80190a4:	f1c0 0320 	rsb	r3, r0, #32
 80190a8:	fa02 f303 	lsl.w	r3, r2, r3
 80190ac:	430b      	orrs	r3, r1
 80190ae:	40c2      	lsrs	r2, r0
 80190b0:	6163      	str	r3, [r4, #20]
 80190b2:	9201      	str	r2, [sp, #4]
 80190b4:	9b01      	ldr	r3, [sp, #4]
 80190b6:	61a3      	str	r3, [r4, #24]
 80190b8:	2b00      	cmp	r3, #0
 80190ba:	bf0c      	ite	eq
 80190bc:	2201      	moveq	r2, #1
 80190be:	2202      	movne	r2, #2
 80190c0:	6122      	str	r2, [r4, #16]
 80190c2:	b1a5      	cbz	r5, 80190ee <__d2b+0x92>
 80190c4:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80190c8:	4405      	add	r5, r0
 80190ca:	603d      	str	r5, [r7, #0]
 80190cc:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80190d0:	6030      	str	r0, [r6, #0]
 80190d2:	4620      	mov	r0, r4
 80190d4:	b003      	add	sp, #12
 80190d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80190da:	6161      	str	r1, [r4, #20]
 80190dc:	e7ea      	b.n	80190b4 <__d2b+0x58>
 80190de:	a801      	add	r0, sp, #4
 80190e0:	f7ff fce9 	bl	8018ab6 <__lo0bits>
 80190e4:	9b01      	ldr	r3, [sp, #4]
 80190e6:	6163      	str	r3, [r4, #20]
 80190e8:	3020      	adds	r0, #32
 80190ea:	2201      	movs	r2, #1
 80190ec:	e7e8      	b.n	80190c0 <__d2b+0x64>
 80190ee:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80190f2:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80190f6:	6038      	str	r0, [r7, #0]
 80190f8:	6918      	ldr	r0, [r3, #16]
 80190fa:	f7ff fcbd 	bl	8018a78 <__hi0bits>
 80190fe:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8019102:	e7e5      	b.n	80190d0 <__d2b+0x74>
 8019104:	0801b291 	.word	0x0801b291
 8019108:	0801b302 	.word	0x0801b302

0801910c <__ratio>:
 801910c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019110:	4688      	mov	r8, r1
 8019112:	4669      	mov	r1, sp
 8019114:	4681      	mov	r9, r0
 8019116:	f7ff ff57 	bl	8018fc8 <__b2d>
 801911a:	a901      	add	r1, sp, #4
 801911c:	4640      	mov	r0, r8
 801911e:	ec55 4b10 	vmov	r4, r5, d0
 8019122:	f7ff ff51 	bl	8018fc8 <__b2d>
 8019126:	f8d8 3010 	ldr.w	r3, [r8, #16]
 801912a:	f8d9 2010 	ldr.w	r2, [r9, #16]
 801912e:	1ad2      	subs	r2, r2, r3
 8019130:	e9dd 3100 	ldrd	r3, r1, [sp]
 8019134:	1a5b      	subs	r3, r3, r1
 8019136:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 801913a:	ec57 6b10 	vmov	r6, r7, d0
 801913e:	2b00      	cmp	r3, #0
 8019140:	bfd6      	itet	le
 8019142:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8019146:	462a      	movgt	r2, r5
 8019148:	463a      	movle	r2, r7
 801914a:	46ab      	mov	fp, r5
 801914c:	46a2      	mov	sl, r4
 801914e:	bfce      	itee	gt
 8019150:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 8019154:	eb02 5303 	addle.w	r3, r2, r3, lsl #20
 8019158:	ee00 3a90 	vmovle	s1, r3
 801915c:	ec4b ab17 	vmov	d7, sl, fp
 8019160:	ee87 0b00 	vdiv.f64	d0, d7, d0
 8019164:	b003      	add	sp, #12
 8019166:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801916a <__copybits>:
 801916a:	3901      	subs	r1, #1
 801916c:	b570      	push	{r4, r5, r6, lr}
 801916e:	1149      	asrs	r1, r1, #5
 8019170:	6914      	ldr	r4, [r2, #16]
 8019172:	3101      	adds	r1, #1
 8019174:	f102 0314 	add.w	r3, r2, #20
 8019178:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 801917c:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8019180:	1f05      	subs	r5, r0, #4
 8019182:	42a3      	cmp	r3, r4
 8019184:	d30c      	bcc.n	80191a0 <__copybits+0x36>
 8019186:	1aa3      	subs	r3, r4, r2
 8019188:	3b11      	subs	r3, #17
 801918a:	f023 0303 	bic.w	r3, r3, #3
 801918e:	3211      	adds	r2, #17
 8019190:	42a2      	cmp	r2, r4
 8019192:	bf88      	it	hi
 8019194:	2300      	movhi	r3, #0
 8019196:	4418      	add	r0, r3
 8019198:	2300      	movs	r3, #0
 801919a:	4288      	cmp	r0, r1
 801919c:	d305      	bcc.n	80191aa <__copybits+0x40>
 801919e:	bd70      	pop	{r4, r5, r6, pc}
 80191a0:	f853 6b04 	ldr.w	r6, [r3], #4
 80191a4:	f845 6f04 	str.w	r6, [r5, #4]!
 80191a8:	e7eb      	b.n	8019182 <__copybits+0x18>
 80191aa:	f840 3b04 	str.w	r3, [r0], #4
 80191ae:	e7f4      	b.n	801919a <__copybits+0x30>

080191b0 <__any_on>:
 80191b0:	f100 0214 	add.w	r2, r0, #20
 80191b4:	6900      	ldr	r0, [r0, #16]
 80191b6:	114b      	asrs	r3, r1, #5
 80191b8:	4298      	cmp	r0, r3
 80191ba:	b510      	push	{r4, lr}
 80191bc:	db11      	blt.n	80191e2 <__any_on+0x32>
 80191be:	dd0a      	ble.n	80191d6 <__any_on+0x26>
 80191c0:	f011 011f 	ands.w	r1, r1, #31
 80191c4:	d007      	beq.n	80191d6 <__any_on+0x26>
 80191c6:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80191ca:	fa24 f001 	lsr.w	r0, r4, r1
 80191ce:	fa00 f101 	lsl.w	r1, r0, r1
 80191d2:	428c      	cmp	r4, r1
 80191d4:	d10b      	bne.n	80191ee <__any_on+0x3e>
 80191d6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80191da:	4293      	cmp	r3, r2
 80191dc:	d803      	bhi.n	80191e6 <__any_on+0x36>
 80191de:	2000      	movs	r0, #0
 80191e0:	bd10      	pop	{r4, pc}
 80191e2:	4603      	mov	r3, r0
 80191e4:	e7f7      	b.n	80191d6 <__any_on+0x26>
 80191e6:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80191ea:	2900      	cmp	r1, #0
 80191ec:	d0f5      	beq.n	80191da <__any_on+0x2a>
 80191ee:	2001      	movs	r0, #1
 80191f0:	e7f6      	b.n	80191e0 <__any_on+0x30>

080191f2 <__ascii_wctomb>:
 80191f2:	4603      	mov	r3, r0
 80191f4:	4608      	mov	r0, r1
 80191f6:	b141      	cbz	r1, 801920a <__ascii_wctomb+0x18>
 80191f8:	2aff      	cmp	r2, #255	@ 0xff
 80191fa:	d904      	bls.n	8019206 <__ascii_wctomb+0x14>
 80191fc:	228a      	movs	r2, #138	@ 0x8a
 80191fe:	601a      	str	r2, [r3, #0]
 8019200:	f04f 30ff 	mov.w	r0, #4294967295
 8019204:	4770      	bx	lr
 8019206:	700a      	strb	r2, [r1, #0]
 8019208:	2001      	movs	r0, #1
 801920a:	4770      	bx	lr

0801920c <__ssputs_r>:
 801920c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019210:	688e      	ldr	r6, [r1, #8]
 8019212:	461f      	mov	r7, r3
 8019214:	42be      	cmp	r6, r7
 8019216:	680b      	ldr	r3, [r1, #0]
 8019218:	4682      	mov	sl, r0
 801921a:	460c      	mov	r4, r1
 801921c:	4690      	mov	r8, r2
 801921e:	d82d      	bhi.n	801927c <__ssputs_r+0x70>
 8019220:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8019224:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8019228:	d026      	beq.n	8019278 <__ssputs_r+0x6c>
 801922a:	6965      	ldr	r5, [r4, #20]
 801922c:	6909      	ldr	r1, [r1, #16]
 801922e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019232:	eba3 0901 	sub.w	r9, r3, r1
 8019236:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 801923a:	1c7b      	adds	r3, r7, #1
 801923c:	444b      	add	r3, r9
 801923e:	106d      	asrs	r5, r5, #1
 8019240:	429d      	cmp	r5, r3
 8019242:	bf38      	it	cc
 8019244:	461d      	movcc	r5, r3
 8019246:	0553      	lsls	r3, r2, #21
 8019248:	d527      	bpl.n	801929a <__ssputs_r+0x8e>
 801924a:	4629      	mov	r1, r5
 801924c:	f7ff fa84 	bl	8018758 <_malloc_r>
 8019250:	4606      	mov	r6, r0
 8019252:	b360      	cbz	r0, 80192ae <__ssputs_r+0xa2>
 8019254:	6921      	ldr	r1, [r4, #16]
 8019256:	464a      	mov	r2, r9
 8019258:	f7fe f8d9 	bl	801740e <memcpy>
 801925c:	89a3      	ldrh	r3, [r4, #12]
 801925e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8019262:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8019266:	81a3      	strh	r3, [r4, #12]
 8019268:	6126      	str	r6, [r4, #16]
 801926a:	6165      	str	r5, [r4, #20]
 801926c:	444e      	add	r6, r9
 801926e:	eba5 0509 	sub.w	r5, r5, r9
 8019272:	6026      	str	r6, [r4, #0]
 8019274:	60a5      	str	r5, [r4, #8]
 8019276:	463e      	mov	r6, r7
 8019278:	42be      	cmp	r6, r7
 801927a:	d900      	bls.n	801927e <__ssputs_r+0x72>
 801927c:	463e      	mov	r6, r7
 801927e:	6820      	ldr	r0, [r4, #0]
 8019280:	4632      	mov	r2, r6
 8019282:	4641      	mov	r1, r8
 8019284:	f000 f9c6 	bl	8019614 <memmove>
 8019288:	68a3      	ldr	r3, [r4, #8]
 801928a:	1b9b      	subs	r3, r3, r6
 801928c:	60a3      	str	r3, [r4, #8]
 801928e:	6823      	ldr	r3, [r4, #0]
 8019290:	4433      	add	r3, r6
 8019292:	6023      	str	r3, [r4, #0]
 8019294:	2000      	movs	r0, #0
 8019296:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801929a:	462a      	mov	r2, r5
 801929c:	f000 fa16 	bl	80196cc <_realloc_r>
 80192a0:	4606      	mov	r6, r0
 80192a2:	2800      	cmp	r0, #0
 80192a4:	d1e0      	bne.n	8019268 <__ssputs_r+0x5c>
 80192a6:	6921      	ldr	r1, [r4, #16]
 80192a8:	4650      	mov	r0, sl
 80192aa:	f7fe fea7 	bl	8017ffc <_free_r>
 80192ae:	230c      	movs	r3, #12
 80192b0:	f8ca 3000 	str.w	r3, [sl]
 80192b4:	89a3      	ldrh	r3, [r4, #12]
 80192b6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80192ba:	81a3      	strh	r3, [r4, #12]
 80192bc:	f04f 30ff 	mov.w	r0, #4294967295
 80192c0:	e7e9      	b.n	8019296 <__ssputs_r+0x8a>
	...

080192c4 <_svfiprintf_r>:
 80192c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192c8:	4698      	mov	r8, r3
 80192ca:	898b      	ldrh	r3, [r1, #12]
 80192cc:	061b      	lsls	r3, r3, #24
 80192ce:	b09d      	sub	sp, #116	@ 0x74
 80192d0:	4607      	mov	r7, r0
 80192d2:	460d      	mov	r5, r1
 80192d4:	4614      	mov	r4, r2
 80192d6:	d510      	bpl.n	80192fa <_svfiprintf_r+0x36>
 80192d8:	690b      	ldr	r3, [r1, #16]
 80192da:	b973      	cbnz	r3, 80192fa <_svfiprintf_r+0x36>
 80192dc:	2140      	movs	r1, #64	@ 0x40
 80192de:	f7ff fa3b 	bl	8018758 <_malloc_r>
 80192e2:	6028      	str	r0, [r5, #0]
 80192e4:	6128      	str	r0, [r5, #16]
 80192e6:	b930      	cbnz	r0, 80192f6 <_svfiprintf_r+0x32>
 80192e8:	230c      	movs	r3, #12
 80192ea:	603b      	str	r3, [r7, #0]
 80192ec:	f04f 30ff 	mov.w	r0, #4294967295
 80192f0:	b01d      	add	sp, #116	@ 0x74
 80192f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80192f6:	2340      	movs	r3, #64	@ 0x40
 80192f8:	616b      	str	r3, [r5, #20]
 80192fa:	2300      	movs	r3, #0
 80192fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80192fe:	2320      	movs	r3, #32
 8019300:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8019304:	f8cd 800c 	str.w	r8, [sp, #12]
 8019308:	2330      	movs	r3, #48	@ 0x30
 801930a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80194a8 <_svfiprintf_r+0x1e4>
 801930e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8019312:	f04f 0901 	mov.w	r9, #1
 8019316:	4623      	mov	r3, r4
 8019318:	469a      	mov	sl, r3
 801931a:	f813 2b01 	ldrb.w	r2, [r3], #1
 801931e:	b10a      	cbz	r2, 8019324 <_svfiprintf_r+0x60>
 8019320:	2a25      	cmp	r2, #37	@ 0x25
 8019322:	d1f9      	bne.n	8019318 <_svfiprintf_r+0x54>
 8019324:	ebba 0b04 	subs.w	fp, sl, r4
 8019328:	d00b      	beq.n	8019342 <_svfiprintf_r+0x7e>
 801932a:	465b      	mov	r3, fp
 801932c:	4622      	mov	r2, r4
 801932e:	4629      	mov	r1, r5
 8019330:	4638      	mov	r0, r7
 8019332:	f7ff ff6b 	bl	801920c <__ssputs_r>
 8019336:	3001      	adds	r0, #1
 8019338:	f000 80a7 	beq.w	801948a <_svfiprintf_r+0x1c6>
 801933c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801933e:	445a      	add	r2, fp
 8019340:	9209      	str	r2, [sp, #36]	@ 0x24
 8019342:	f89a 3000 	ldrb.w	r3, [sl]
 8019346:	2b00      	cmp	r3, #0
 8019348:	f000 809f 	beq.w	801948a <_svfiprintf_r+0x1c6>
 801934c:	2300      	movs	r3, #0
 801934e:	f04f 32ff 	mov.w	r2, #4294967295
 8019352:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8019356:	f10a 0a01 	add.w	sl, sl, #1
 801935a:	9304      	str	r3, [sp, #16]
 801935c:	9307      	str	r3, [sp, #28]
 801935e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8019362:	931a      	str	r3, [sp, #104]	@ 0x68
 8019364:	4654      	mov	r4, sl
 8019366:	2205      	movs	r2, #5
 8019368:	f814 1b01 	ldrb.w	r1, [r4], #1
 801936c:	484e      	ldr	r0, [pc, #312]	@ (80194a8 <_svfiprintf_r+0x1e4>)
 801936e:	f7e6 ffdf 	bl	8000330 <memchr>
 8019372:	9a04      	ldr	r2, [sp, #16]
 8019374:	b9d8      	cbnz	r0, 80193ae <_svfiprintf_r+0xea>
 8019376:	06d0      	lsls	r0, r2, #27
 8019378:	bf44      	itt	mi
 801937a:	2320      	movmi	r3, #32
 801937c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8019380:	0711      	lsls	r1, r2, #28
 8019382:	bf44      	itt	mi
 8019384:	232b      	movmi	r3, #43	@ 0x2b
 8019386:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801938a:	f89a 3000 	ldrb.w	r3, [sl]
 801938e:	2b2a      	cmp	r3, #42	@ 0x2a
 8019390:	d015      	beq.n	80193be <_svfiprintf_r+0xfa>
 8019392:	9a07      	ldr	r2, [sp, #28]
 8019394:	4654      	mov	r4, sl
 8019396:	2000      	movs	r0, #0
 8019398:	f04f 0c0a 	mov.w	ip, #10
 801939c:	4621      	mov	r1, r4
 801939e:	f811 3b01 	ldrb.w	r3, [r1], #1
 80193a2:	3b30      	subs	r3, #48	@ 0x30
 80193a4:	2b09      	cmp	r3, #9
 80193a6:	d94b      	bls.n	8019440 <_svfiprintf_r+0x17c>
 80193a8:	b1b0      	cbz	r0, 80193d8 <_svfiprintf_r+0x114>
 80193aa:	9207      	str	r2, [sp, #28]
 80193ac:	e014      	b.n	80193d8 <_svfiprintf_r+0x114>
 80193ae:	eba0 0308 	sub.w	r3, r0, r8
 80193b2:	fa09 f303 	lsl.w	r3, r9, r3
 80193b6:	4313      	orrs	r3, r2
 80193b8:	9304      	str	r3, [sp, #16]
 80193ba:	46a2      	mov	sl, r4
 80193bc:	e7d2      	b.n	8019364 <_svfiprintf_r+0xa0>
 80193be:	9b03      	ldr	r3, [sp, #12]
 80193c0:	1d19      	adds	r1, r3, #4
 80193c2:	681b      	ldr	r3, [r3, #0]
 80193c4:	9103      	str	r1, [sp, #12]
 80193c6:	2b00      	cmp	r3, #0
 80193c8:	bfbb      	ittet	lt
 80193ca:	425b      	neglt	r3, r3
 80193cc:	f042 0202 	orrlt.w	r2, r2, #2
 80193d0:	9307      	strge	r3, [sp, #28]
 80193d2:	9307      	strlt	r3, [sp, #28]
 80193d4:	bfb8      	it	lt
 80193d6:	9204      	strlt	r2, [sp, #16]
 80193d8:	7823      	ldrb	r3, [r4, #0]
 80193da:	2b2e      	cmp	r3, #46	@ 0x2e
 80193dc:	d10a      	bne.n	80193f4 <_svfiprintf_r+0x130>
 80193de:	7863      	ldrb	r3, [r4, #1]
 80193e0:	2b2a      	cmp	r3, #42	@ 0x2a
 80193e2:	d132      	bne.n	801944a <_svfiprintf_r+0x186>
 80193e4:	9b03      	ldr	r3, [sp, #12]
 80193e6:	1d1a      	adds	r2, r3, #4
 80193e8:	681b      	ldr	r3, [r3, #0]
 80193ea:	9203      	str	r2, [sp, #12]
 80193ec:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80193f0:	3402      	adds	r4, #2
 80193f2:	9305      	str	r3, [sp, #20]
 80193f4:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 80194b8 <_svfiprintf_r+0x1f4>
 80193f8:	7821      	ldrb	r1, [r4, #0]
 80193fa:	2203      	movs	r2, #3
 80193fc:	4650      	mov	r0, sl
 80193fe:	f7e6 ff97 	bl	8000330 <memchr>
 8019402:	b138      	cbz	r0, 8019414 <_svfiprintf_r+0x150>
 8019404:	9b04      	ldr	r3, [sp, #16]
 8019406:	eba0 000a 	sub.w	r0, r0, sl
 801940a:	2240      	movs	r2, #64	@ 0x40
 801940c:	4082      	lsls	r2, r0
 801940e:	4313      	orrs	r3, r2
 8019410:	3401      	adds	r4, #1
 8019412:	9304      	str	r3, [sp, #16]
 8019414:	f814 1b01 	ldrb.w	r1, [r4], #1
 8019418:	4824      	ldr	r0, [pc, #144]	@ (80194ac <_svfiprintf_r+0x1e8>)
 801941a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 801941e:	2206      	movs	r2, #6
 8019420:	f7e6 ff86 	bl	8000330 <memchr>
 8019424:	2800      	cmp	r0, #0
 8019426:	d036      	beq.n	8019496 <_svfiprintf_r+0x1d2>
 8019428:	4b21      	ldr	r3, [pc, #132]	@ (80194b0 <_svfiprintf_r+0x1ec>)
 801942a:	bb1b      	cbnz	r3, 8019474 <_svfiprintf_r+0x1b0>
 801942c:	9b03      	ldr	r3, [sp, #12]
 801942e:	3307      	adds	r3, #7
 8019430:	f023 0307 	bic.w	r3, r3, #7
 8019434:	3308      	adds	r3, #8
 8019436:	9303      	str	r3, [sp, #12]
 8019438:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801943a:	4433      	add	r3, r6
 801943c:	9309      	str	r3, [sp, #36]	@ 0x24
 801943e:	e76a      	b.n	8019316 <_svfiprintf_r+0x52>
 8019440:	fb0c 3202 	mla	r2, ip, r2, r3
 8019444:	460c      	mov	r4, r1
 8019446:	2001      	movs	r0, #1
 8019448:	e7a8      	b.n	801939c <_svfiprintf_r+0xd8>
 801944a:	2300      	movs	r3, #0
 801944c:	3401      	adds	r4, #1
 801944e:	9305      	str	r3, [sp, #20]
 8019450:	4619      	mov	r1, r3
 8019452:	f04f 0c0a 	mov.w	ip, #10
 8019456:	4620      	mov	r0, r4
 8019458:	f810 2b01 	ldrb.w	r2, [r0], #1
 801945c:	3a30      	subs	r2, #48	@ 0x30
 801945e:	2a09      	cmp	r2, #9
 8019460:	d903      	bls.n	801946a <_svfiprintf_r+0x1a6>
 8019462:	2b00      	cmp	r3, #0
 8019464:	d0c6      	beq.n	80193f4 <_svfiprintf_r+0x130>
 8019466:	9105      	str	r1, [sp, #20]
 8019468:	e7c4      	b.n	80193f4 <_svfiprintf_r+0x130>
 801946a:	fb0c 2101 	mla	r1, ip, r1, r2
 801946e:	4604      	mov	r4, r0
 8019470:	2301      	movs	r3, #1
 8019472:	e7f0      	b.n	8019456 <_svfiprintf_r+0x192>
 8019474:	ab03      	add	r3, sp, #12
 8019476:	9300      	str	r3, [sp, #0]
 8019478:	462a      	mov	r2, r5
 801947a:	4b0e      	ldr	r3, [pc, #56]	@ (80194b4 <_svfiprintf_r+0x1f0>)
 801947c:	a904      	add	r1, sp, #16
 801947e:	4638      	mov	r0, r7
 8019480:	f7fd fa5a 	bl	8016938 <_printf_float>
 8019484:	1c42      	adds	r2, r0, #1
 8019486:	4606      	mov	r6, r0
 8019488:	d1d6      	bne.n	8019438 <_svfiprintf_r+0x174>
 801948a:	89ab      	ldrh	r3, [r5, #12]
 801948c:	065b      	lsls	r3, r3, #25
 801948e:	f53f af2d 	bmi.w	80192ec <_svfiprintf_r+0x28>
 8019492:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8019494:	e72c      	b.n	80192f0 <_svfiprintf_r+0x2c>
 8019496:	ab03      	add	r3, sp, #12
 8019498:	9300      	str	r3, [sp, #0]
 801949a:	462a      	mov	r2, r5
 801949c:	4b05      	ldr	r3, [pc, #20]	@ (80194b4 <_svfiprintf_r+0x1f0>)
 801949e:	a904      	add	r1, sp, #16
 80194a0:	4638      	mov	r0, r7
 80194a2:	f7fd fcd1 	bl	8016e48 <_printf_i>
 80194a6:	e7ed      	b.n	8019484 <_svfiprintf_r+0x1c0>
 80194a8:	0801b458 	.word	0x0801b458
 80194ac:	0801b462 	.word	0x0801b462
 80194b0:	08016939 	.word	0x08016939
 80194b4:	0801920d 	.word	0x0801920d
 80194b8:	0801b45e 	.word	0x0801b45e

080194bc <__sflush_r>:
 80194bc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80194c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80194c4:	0716      	lsls	r6, r2, #28
 80194c6:	4605      	mov	r5, r0
 80194c8:	460c      	mov	r4, r1
 80194ca:	d454      	bmi.n	8019576 <__sflush_r+0xba>
 80194cc:	684b      	ldr	r3, [r1, #4]
 80194ce:	2b00      	cmp	r3, #0
 80194d0:	dc02      	bgt.n	80194d8 <__sflush_r+0x1c>
 80194d2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80194d4:	2b00      	cmp	r3, #0
 80194d6:	dd48      	ble.n	801956a <__sflush_r+0xae>
 80194d8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80194da:	2e00      	cmp	r6, #0
 80194dc:	d045      	beq.n	801956a <__sflush_r+0xae>
 80194de:	2300      	movs	r3, #0
 80194e0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80194e4:	682f      	ldr	r7, [r5, #0]
 80194e6:	6a21      	ldr	r1, [r4, #32]
 80194e8:	602b      	str	r3, [r5, #0]
 80194ea:	d030      	beq.n	801954e <__sflush_r+0x92>
 80194ec:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80194ee:	89a3      	ldrh	r3, [r4, #12]
 80194f0:	0759      	lsls	r1, r3, #29
 80194f2:	d505      	bpl.n	8019500 <__sflush_r+0x44>
 80194f4:	6863      	ldr	r3, [r4, #4]
 80194f6:	1ad2      	subs	r2, r2, r3
 80194f8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80194fa:	b10b      	cbz	r3, 8019500 <__sflush_r+0x44>
 80194fc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80194fe:	1ad2      	subs	r2, r2, r3
 8019500:	2300      	movs	r3, #0
 8019502:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8019504:	6a21      	ldr	r1, [r4, #32]
 8019506:	4628      	mov	r0, r5
 8019508:	47b0      	blx	r6
 801950a:	1c43      	adds	r3, r0, #1
 801950c:	89a3      	ldrh	r3, [r4, #12]
 801950e:	d106      	bne.n	801951e <__sflush_r+0x62>
 8019510:	6829      	ldr	r1, [r5, #0]
 8019512:	291d      	cmp	r1, #29
 8019514:	d82b      	bhi.n	801956e <__sflush_r+0xb2>
 8019516:	4a2a      	ldr	r2, [pc, #168]	@ (80195c0 <__sflush_r+0x104>)
 8019518:	410a      	asrs	r2, r1
 801951a:	07d6      	lsls	r6, r2, #31
 801951c:	d427      	bmi.n	801956e <__sflush_r+0xb2>
 801951e:	2200      	movs	r2, #0
 8019520:	6062      	str	r2, [r4, #4]
 8019522:	04d9      	lsls	r1, r3, #19
 8019524:	6922      	ldr	r2, [r4, #16]
 8019526:	6022      	str	r2, [r4, #0]
 8019528:	d504      	bpl.n	8019534 <__sflush_r+0x78>
 801952a:	1c42      	adds	r2, r0, #1
 801952c:	d101      	bne.n	8019532 <__sflush_r+0x76>
 801952e:	682b      	ldr	r3, [r5, #0]
 8019530:	b903      	cbnz	r3, 8019534 <__sflush_r+0x78>
 8019532:	6560      	str	r0, [r4, #84]	@ 0x54
 8019534:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8019536:	602f      	str	r7, [r5, #0]
 8019538:	b1b9      	cbz	r1, 801956a <__sflush_r+0xae>
 801953a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 801953e:	4299      	cmp	r1, r3
 8019540:	d002      	beq.n	8019548 <__sflush_r+0x8c>
 8019542:	4628      	mov	r0, r5
 8019544:	f7fe fd5a 	bl	8017ffc <_free_r>
 8019548:	2300      	movs	r3, #0
 801954a:	6363      	str	r3, [r4, #52]	@ 0x34
 801954c:	e00d      	b.n	801956a <__sflush_r+0xae>
 801954e:	2301      	movs	r3, #1
 8019550:	4628      	mov	r0, r5
 8019552:	47b0      	blx	r6
 8019554:	4602      	mov	r2, r0
 8019556:	1c50      	adds	r0, r2, #1
 8019558:	d1c9      	bne.n	80194ee <__sflush_r+0x32>
 801955a:	682b      	ldr	r3, [r5, #0]
 801955c:	2b00      	cmp	r3, #0
 801955e:	d0c6      	beq.n	80194ee <__sflush_r+0x32>
 8019560:	2b1d      	cmp	r3, #29
 8019562:	d001      	beq.n	8019568 <__sflush_r+0xac>
 8019564:	2b16      	cmp	r3, #22
 8019566:	d11e      	bne.n	80195a6 <__sflush_r+0xea>
 8019568:	602f      	str	r7, [r5, #0]
 801956a:	2000      	movs	r0, #0
 801956c:	e022      	b.n	80195b4 <__sflush_r+0xf8>
 801956e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8019572:	b21b      	sxth	r3, r3
 8019574:	e01b      	b.n	80195ae <__sflush_r+0xf2>
 8019576:	690f      	ldr	r7, [r1, #16]
 8019578:	2f00      	cmp	r7, #0
 801957a:	d0f6      	beq.n	801956a <__sflush_r+0xae>
 801957c:	0793      	lsls	r3, r2, #30
 801957e:	680e      	ldr	r6, [r1, #0]
 8019580:	bf08      	it	eq
 8019582:	694b      	ldreq	r3, [r1, #20]
 8019584:	600f      	str	r7, [r1, #0]
 8019586:	bf18      	it	ne
 8019588:	2300      	movne	r3, #0
 801958a:	eba6 0807 	sub.w	r8, r6, r7
 801958e:	608b      	str	r3, [r1, #8]
 8019590:	f1b8 0f00 	cmp.w	r8, #0
 8019594:	dde9      	ble.n	801956a <__sflush_r+0xae>
 8019596:	6a21      	ldr	r1, [r4, #32]
 8019598:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 801959a:	4643      	mov	r3, r8
 801959c:	463a      	mov	r2, r7
 801959e:	4628      	mov	r0, r5
 80195a0:	47b0      	blx	r6
 80195a2:	2800      	cmp	r0, #0
 80195a4:	dc08      	bgt.n	80195b8 <__sflush_r+0xfc>
 80195a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80195aa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80195ae:	81a3      	strh	r3, [r4, #12]
 80195b0:	f04f 30ff 	mov.w	r0, #4294967295
 80195b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80195b8:	4407      	add	r7, r0
 80195ba:	eba8 0800 	sub.w	r8, r8, r0
 80195be:	e7e7      	b.n	8019590 <__sflush_r+0xd4>
 80195c0:	dfbffffe 	.word	0xdfbffffe

080195c4 <_fflush_r>:
 80195c4:	b538      	push	{r3, r4, r5, lr}
 80195c6:	690b      	ldr	r3, [r1, #16]
 80195c8:	4605      	mov	r5, r0
 80195ca:	460c      	mov	r4, r1
 80195cc:	b913      	cbnz	r3, 80195d4 <_fflush_r+0x10>
 80195ce:	2500      	movs	r5, #0
 80195d0:	4628      	mov	r0, r5
 80195d2:	bd38      	pop	{r3, r4, r5, pc}
 80195d4:	b118      	cbz	r0, 80195de <_fflush_r+0x1a>
 80195d6:	6a03      	ldr	r3, [r0, #32]
 80195d8:	b90b      	cbnz	r3, 80195de <_fflush_r+0x1a>
 80195da:	f7fd fde1 	bl	80171a0 <__sinit>
 80195de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80195e2:	2b00      	cmp	r3, #0
 80195e4:	d0f3      	beq.n	80195ce <_fflush_r+0xa>
 80195e6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80195e8:	07d0      	lsls	r0, r2, #31
 80195ea:	d404      	bmi.n	80195f6 <_fflush_r+0x32>
 80195ec:	0599      	lsls	r1, r3, #22
 80195ee:	d402      	bmi.n	80195f6 <_fflush_r+0x32>
 80195f0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80195f2:	f7fd ff0a 	bl	801740a <__retarget_lock_acquire_recursive>
 80195f6:	4628      	mov	r0, r5
 80195f8:	4621      	mov	r1, r4
 80195fa:	f7ff ff5f 	bl	80194bc <__sflush_r>
 80195fe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8019600:	07da      	lsls	r2, r3, #31
 8019602:	4605      	mov	r5, r0
 8019604:	d4e4      	bmi.n	80195d0 <_fflush_r+0xc>
 8019606:	89a3      	ldrh	r3, [r4, #12]
 8019608:	059b      	lsls	r3, r3, #22
 801960a:	d4e1      	bmi.n	80195d0 <_fflush_r+0xc>
 801960c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801960e:	f7fd fefd 	bl	801740c <__retarget_lock_release_recursive>
 8019612:	e7dd      	b.n	80195d0 <_fflush_r+0xc>

08019614 <memmove>:
 8019614:	4288      	cmp	r0, r1
 8019616:	b510      	push	{r4, lr}
 8019618:	eb01 0402 	add.w	r4, r1, r2
 801961c:	d902      	bls.n	8019624 <memmove+0x10>
 801961e:	4284      	cmp	r4, r0
 8019620:	4623      	mov	r3, r4
 8019622:	d807      	bhi.n	8019634 <memmove+0x20>
 8019624:	1e43      	subs	r3, r0, #1
 8019626:	42a1      	cmp	r1, r4
 8019628:	d008      	beq.n	801963c <memmove+0x28>
 801962a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801962e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8019632:	e7f8      	b.n	8019626 <memmove+0x12>
 8019634:	4402      	add	r2, r0
 8019636:	4601      	mov	r1, r0
 8019638:	428a      	cmp	r2, r1
 801963a:	d100      	bne.n	801963e <memmove+0x2a>
 801963c:	bd10      	pop	{r4, pc}
 801963e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8019642:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8019646:	e7f7      	b.n	8019638 <memmove+0x24>

08019648 <_sbrk_r>:
 8019648:	b538      	push	{r3, r4, r5, lr}
 801964a:	4d06      	ldr	r5, [pc, #24]	@ (8019664 <_sbrk_r+0x1c>)
 801964c:	2300      	movs	r3, #0
 801964e:	4604      	mov	r4, r0
 8019650:	4608      	mov	r0, r1
 8019652:	602b      	str	r3, [r5, #0]
 8019654:	f7e8 ff6c 	bl	8002530 <_sbrk>
 8019658:	1c43      	adds	r3, r0, #1
 801965a:	d102      	bne.n	8019662 <_sbrk_r+0x1a>
 801965c:	682b      	ldr	r3, [r5, #0]
 801965e:	b103      	cbz	r3, 8019662 <_sbrk_r+0x1a>
 8019660:	6023      	str	r3, [r4, #0]
 8019662:	bd38      	pop	{r3, r4, r5, pc}
 8019664:	24006264 	.word	0x24006264

08019668 <__assert_func>:
 8019668:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801966a:	4614      	mov	r4, r2
 801966c:	461a      	mov	r2, r3
 801966e:	4b09      	ldr	r3, [pc, #36]	@ (8019694 <__assert_func+0x2c>)
 8019670:	681b      	ldr	r3, [r3, #0]
 8019672:	4605      	mov	r5, r0
 8019674:	68d8      	ldr	r0, [r3, #12]
 8019676:	b954      	cbnz	r4, 801968e <__assert_func+0x26>
 8019678:	4b07      	ldr	r3, [pc, #28]	@ (8019698 <__assert_func+0x30>)
 801967a:	461c      	mov	r4, r3
 801967c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8019680:	9100      	str	r1, [sp, #0]
 8019682:	462b      	mov	r3, r5
 8019684:	4905      	ldr	r1, [pc, #20]	@ (801969c <__assert_func+0x34>)
 8019686:	f000 f84f 	bl	8019728 <fiprintf>
 801968a:	f000 f85f 	bl	801974c <abort>
 801968e:	4b04      	ldr	r3, [pc, #16]	@ (80196a0 <__assert_func+0x38>)
 8019690:	e7f4      	b.n	801967c <__assert_func+0x14>
 8019692:	bf00      	nop
 8019694:	2400027c 	.word	0x2400027c
 8019698:	0801b4a4 	.word	0x0801b4a4
 801969c:	0801b476 	.word	0x0801b476
 80196a0:	0801b469 	.word	0x0801b469

080196a4 <_calloc_r>:
 80196a4:	b570      	push	{r4, r5, r6, lr}
 80196a6:	fba1 5402 	umull	r5, r4, r1, r2
 80196aa:	b93c      	cbnz	r4, 80196bc <_calloc_r+0x18>
 80196ac:	4629      	mov	r1, r5
 80196ae:	f7ff f853 	bl	8018758 <_malloc_r>
 80196b2:	4606      	mov	r6, r0
 80196b4:	b928      	cbnz	r0, 80196c2 <_calloc_r+0x1e>
 80196b6:	2600      	movs	r6, #0
 80196b8:	4630      	mov	r0, r6
 80196ba:	bd70      	pop	{r4, r5, r6, pc}
 80196bc:	220c      	movs	r2, #12
 80196be:	6002      	str	r2, [r0, #0]
 80196c0:	e7f9      	b.n	80196b6 <_calloc_r+0x12>
 80196c2:	462a      	mov	r2, r5
 80196c4:	4621      	mov	r1, r4
 80196c6:	f7fd fe04 	bl	80172d2 <memset>
 80196ca:	e7f5      	b.n	80196b8 <_calloc_r+0x14>

080196cc <_realloc_r>:
 80196cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80196d0:	4680      	mov	r8, r0
 80196d2:	4615      	mov	r5, r2
 80196d4:	460c      	mov	r4, r1
 80196d6:	b921      	cbnz	r1, 80196e2 <_realloc_r+0x16>
 80196d8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80196dc:	4611      	mov	r1, r2
 80196de:	f7ff b83b 	b.w	8018758 <_malloc_r>
 80196e2:	b92a      	cbnz	r2, 80196f0 <_realloc_r+0x24>
 80196e4:	f7fe fc8a 	bl	8017ffc <_free_r>
 80196e8:	2400      	movs	r4, #0
 80196ea:	4620      	mov	r0, r4
 80196ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80196f0:	f000 f833 	bl	801975a <_malloc_usable_size_r>
 80196f4:	4285      	cmp	r5, r0
 80196f6:	4606      	mov	r6, r0
 80196f8:	d802      	bhi.n	8019700 <_realloc_r+0x34>
 80196fa:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 80196fe:	d8f4      	bhi.n	80196ea <_realloc_r+0x1e>
 8019700:	4629      	mov	r1, r5
 8019702:	4640      	mov	r0, r8
 8019704:	f7ff f828 	bl	8018758 <_malloc_r>
 8019708:	4607      	mov	r7, r0
 801970a:	2800      	cmp	r0, #0
 801970c:	d0ec      	beq.n	80196e8 <_realloc_r+0x1c>
 801970e:	42b5      	cmp	r5, r6
 8019710:	462a      	mov	r2, r5
 8019712:	4621      	mov	r1, r4
 8019714:	bf28      	it	cs
 8019716:	4632      	movcs	r2, r6
 8019718:	f7fd fe79 	bl	801740e <memcpy>
 801971c:	4621      	mov	r1, r4
 801971e:	4640      	mov	r0, r8
 8019720:	f7fe fc6c 	bl	8017ffc <_free_r>
 8019724:	463c      	mov	r4, r7
 8019726:	e7e0      	b.n	80196ea <_realloc_r+0x1e>

08019728 <fiprintf>:
 8019728:	b40e      	push	{r1, r2, r3}
 801972a:	b503      	push	{r0, r1, lr}
 801972c:	4601      	mov	r1, r0
 801972e:	ab03      	add	r3, sp, #12
 8019730:	4805      	ldr	r0, [pc, #20]	@ (8019748 <fiprintf+0x20>)
 8019732:	f853 2b04 	ldr.w	r2, [r3], #4
 8019736:	6800      	ldr	r0, [r0, #0]
 8019738:	9301      	str	r3, [sp, #4]
 801973a:	f000 f83f 	bl	80197bc <_vfiprintf_r>
 801973e:	b002      	add	sp, #8
 8019740:	f85d eb04 	ldr.w	lr, [sp], #4
 8019744:	b003      	add	sp, #12
 8019746:	4770      	bx	lr
 8019748:	2400027c 	.word	0x2400027c

0801974c <abort>:
 801974c:	b508      	push	{r3, lr}
 801974e:	2006      	movs	r0, #6
 8019750:	f000 fa08 	bl	8019b64 <raise>
 8019754:	2001      	movs	r0, #1
 8019756:	f7e8 fe73 	bl	8002440 <_exit>

0801975a <_malloc_usable_size_r>:
 801975a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801975e:	1f18      	subs	r0, r3, #4
 8019760:	2b00      	cmp	r3, #0
 8019762:	bfbc      	itt	lt
 8019764:	580b      	ldrlt	r3, [r1, r0]
 8019766:	18c0      	addlt	r0, r0, r3
 8019768:	4770      	bx	lr

0801976a <__sfputc_r>:
 801976a:	6893      	ldr	r3, [r2, #8]
 801976c:	3b01      	subs	r3, #1
 801976e:	2b00      	cmp	r3, #0
 8019770:	b410      	push	{r4}
 8019772:	6093      	str	r3, [r2, #8]
 8019774:	da08      	bge.n	8019788 <__sfputc_r+0x1e>
 8019776:	6994      	ldr	r4, [r2, #24]
 8019778:	42a3      	cmp	r3, r4
 801977a:	db01      	blt.n	8019780 <__sfputc_r+0x16>
 801977c:	290a      	cmp	r1, #10
 801977e:	d103      	bne.n	8019788 <__sfputc_r+0x1e>
 8019780:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019784:	f000 b932 	b.w	80199ec <__swbuf_r>
 8019788:	6813      	ldr	r3, [r2, #0]
 801978a:	1c58      	adds	r0, r3, #1
 801978c:	6010      	str	r0, [r2, #0]
 801978e:	7019      	strb	r1, [r3, #0]
 8019790:	4608      	mov	r0, r1
 8019792:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019796:	4770      	bx	lr

08019798 <__sfputs_r>:
 8019798:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801979a:	4606      	mov	r6, r0
 801979c:	460f      	mov	r7, r1
 801979e:	4614      	mov	r4, r2
 80197a0:	18d5      	adds	r5, r2, r3
 80197a2:	42ac      	cmp	r4, r5
 80197a4:	d101      	bne.n	80197aa <__sfputs_r+0x12>
 80197a6:	2000      	movs	r0, #0
 80197a8:	e007      	b.n	80197ba <__sfputs_r+0x22>
 80197aa:	f814 1b01 	ldrb.w	r1, [r4], #1
 80197ae:	463a      	mov	r2, r7
 80197b0:	4630      	mov	r0, r6
 80197b2:	f7ff ffda 	bl	801976a <__sfputc_r>
 80197b6:	1c43      	adds	r3, r0, #1
 80197b8:	d1f3      	bne.n	80197a2 <__sfputs_r+0xa>
 80197ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080197bc <_vfiprintf_r>:
 80197bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197c0:	460d      	mov	r5, r1
 80197c2:	b09d      	sub	sp, #116	@ 0x74
 80197c4:	4614      	mov	r4, r2
 80197c6:	4698      	mov	r8, r3
 80197c8:	4606      	mov	r6, r0
 80197ca:	b118      	cbz	r0, 80197d4 <_vfiprintf_r+0x18>
 80197cc:	6a03      	ldr	r3, [r0, #32]
 80197ce:	b90b      	cbnz	r3, 80197d4 <_vfiprintf_r+0x18>
 80197d0:	f7fd fce6 	bl	80171a0 <__sinit>
 80197d4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80197d6:	07d9      	lsls	r1, r3, #31
 80197d8:	d405      	bmi.n	80197e6 <_vfiprintf_r+0x2a>
 80197da:	89ab      	ldrh	r3, [r5, #12]
 80197dc:	059a      	lsls	r2, r3, #22
 80197de:	d402      	bmi.n	80197e6 <_vfiprintf_r+0x2a>
 80197e0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80197e2:	f7fd fe12 	bl	801740a <__retarget_lock_acquire_recursive>
 80197e6:	89ab      	ldrh	r3, [r5, #12]
 80197e8:	071b      	lsls	r3, r3, #28
 80197ea:	d501      	bpl.n	80197f0 <_vfiprintf_r+0x34>
 80197ec:	692b      	ldr	r3, [r5, #16]
 80197ee:	b99b      	cbnz	r3, 8019818 <_vfiprintf_r+0x5c>
 80197f0:	4629      	mov	r1, r5
 80197f2:	4630      	mov	r0, r6
 80197f4:	f000 f938 	bl	8019a68 <__swsetup_r>
 80197f8:	b170      	cbz	r0, 8019818 <_vfiprintf_r+0x5c>
 80197fa:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80197fc:	07dc      	lsls	r4, r3, #31
 80197fe:	d504      	bpl.n	801980a <_vfiprintf_r+0x4e>
 8019800:	f04f 30ff 	mov.w	r0, #4294967295
 8019804:	b01d      	add	sp, #116	@ 0x74
 8019806:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801980a:	89ab      	ldrh	r3, [r5, #12]
 801980c:	0598      	lsls	r0, r3, #22
 801980e:	d4f7      	bmi.n	8019800 <_vfiprintf_r+0x44>
 8019810:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8019812:	f7fd fdfb 	bl	801740c <__retarget_lock_release_recursive>
 8019816:	e7f3      	b.n	8019800 <_vfiprintf_r+0x44>
 8019818:	2300      	movs	r3, #0
 801981a:	9309      	str	r3, [sp, #36]	@ 0x24
 801981c:	2320      	movs	r3, #32
 801981e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8019822:	f8cd 800c 	str.w	r8, [sp, #12]
 8019826:	2330      	movs	r3, #48	@ 0x30
 8019828:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80199d8 <_vfiprintf_r+0x21c>
 801982c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8019830:	f04f 0901 	mov.w	r9, #1
 8019834:	4623      	mov	r3, r4
 8019836:	469a      	mov	sl, r3
 8019838:	f813 2b01 	ldrb.w	r2, [r3], #1
 801983c:	b10a      	cbz	r2, 8019842 <_vfiprintf_r+0x86>
 801983e:	2a25      	cmp	r2, #37	@ 0x25
 8019840:	d1f9      	bne.n	8019836 <_vfiprintf_r+0x7a>
 8019842:	ebba 0b04 	subs.w	fp, sl, r4
 8019846:	d00b      	beq.n	8019860 <_vfiprintf_r+0xa4>
 8019848:	465b      	mov	r3, fp
 801984a:	4622      	mov	r2, r4
 801984c:	4629      	mov	r1, r5
 801984e:	4630      	mov	r0, r6
 8019850:	f7ff ffa2 	bl	8019798 <__sfputs_r>
 8019854:	3001      	adds	r0, #1
 8019856:	f000 80a7 	beq.w	80199a8 <_vfiprintf_r+0x1ec>
 801985a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801985c:	445a      	add	r2, fp
 801985e:	9209      	str	r2, [sp, #36]	@ 0x24
 8019860:	f89a 3000 	ldrb.w	r3, [sl]
 8019864:	2b00      	cmp	r3, #0
 8019866:	f000 809f 	beq.w	80199a8 <_vfiprintf_r+0x1ec>
 801986a:	2300      	movs	r3, #0
 801986c:	f04f 32ff 	mov.w	r2, #4294967295
 8019870:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8019874:	f10a 0a01 	add.w	sl, sl, #1
 8019878:	9304      	str	r3, [sp, #16]
 801987a:	9307      	str	r3, [sp, #28]
 801987c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8019880:	931a      	str	r3, [sp, #104]	@ 0x68
 8019882:	4654      	mov	r4, sl
 8019884:	2205      	movs	r2, #5
 8019886:	f814 1b01 	ldrb.w	r1, [r4], #1
 801988a:	4853      	ldr	r0, [pc, #332]	@ (80199d8 <_vfiprintf_r+0x21c>)
 801988c:	f7e6 fd50 	bl	8000330 <memchr>
 8019890:	9a04      	ldr	r2, [sp, #16]
 8019892:	b9d8      	cbnz	r0, 80198cc <_vfiprintf_r+0x110>
 8019894:	06d1      	lsls	r1, r2, #27
 8019896:	bf44      	itt	mi
 8019898:	2320      	movmi	r3, #32
 801989a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801989e:	0713      	lsls	r3, r2, #28
 80198a0:	bf44      	itt	mi
 80198a2:	232b      	movmi	r3, #43	@ 0x2b
 80198a4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80198a8:	f89a 3000 	ldrb.w	r3, [sl]
 80198ac:	2b2a      	cmp	r3, #42	@ 0x2a
 80198ae:	d015      	beq.n	80198dc <_vfiprintf_r+0x120>
 80198b0:	9a07      	ldr	r2, [sp, #28]
 80198b2:	4654      	mov	r4, sl
 80198b4:	2000      	movs	r0, #0
 80198b6:	f04f 0c0a 	mov.w	ip, #10
 80198ba:	4621      	mov	r1, r4
 80198bc:	f811 3b01 	ldrb.w	r3, [r1], #1
 80198c0:	3b30      	subs	r3, #48	@ 0x30
 80198c2:	2b09      	cmp	r3, #9
 80198c4:	d94b      	bls.n	801995e <_vfiprintf_r+0x1a2>
 80198c6:	b1b0      	cbz	r0, 80198f6 <_vfiprintf_r+0x13a>
 80198c8:	9207      	str	r2, [sp, #28]
 80198ca:	e014      	b.n	80198f6 <_vfiprintf_r+0x13a>
 80198cc:	eba0 0308 	sub.w	r3, r0, r8
 80198d0:	fa09 f303 	lsl.w	r3, r9, r3
 80198d4:	4313      	orrs	r3, r2
 80198d6:	9304      	str	r3, [sp, #16]
 80198d8:	46a2      	mov	sl, r4
 80198da:	e7d2      	b.n	8019882 <_vfiprintf_r+0xc6>
 80198dc:	9b03      	ldr	r3, [sp, #12]
 80198de:	1d19      	adds	r1, r3, #4
 80198e0:	681b      	ldr	r3, [r3, #0]
 80198e2:	9103      	str	r1, [sp, #12]
 80198e4:	2b00      	cmp	r3, #0
 80198e6:	bfbb      	ittet	lt
 80198e8:	425b      	neglt	r3, r3
 80198ea:	f042 0202 	orrlt.w	r2, r2, #2
 80198ee:	9307      	strge	r3, [sp, #28]
 80198f0:	9307      	strlt	r3, [sp, #28]
 80198f2:	bfb8      	it	lt
 80198f4:	9204      	strlt	r2, [sp, #16]
 80198f6:	7823      	ldrb	r3, [r4, #0]
 80198f8:	2b2e      	cmp	r3, #46	@ 0x2e
 80198fa:	d10a      	bne.n	8019912 <_vfiprintf_r+0x156>
 80198fc:	7863      	ldrb	r3, [r4, #1]
 80198fe:	2b2a      	cmp	r3, #42	@ 0x2a
 8019900:	d132      	bne.n	8019968 <_vfiprintf_r+0x1ac>
 8019902:	9b03      	ldr	r3, [sp, #12]
 8019904:	1d1a      	adds	r2, r3, #4
 8019906:	681b      	ldr	r3, [r3, #0]
 8019908:	9203      	str	r2, [sp, #12]
 801990a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 801990e:	3402      	adds	r4, #2
 8019910:	9305      	str	r3, [sp, #20]
 8019912:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80199e8 <_vfiprintf_r+0x22c>
 8019916:	7821      	ldrb	r1, [r4, #0]
 8019918:	2203      	movs	r2, #3
 801991a:	4650      	mov	r0, sl
 801991c:	f7e6 fd08 	bl	8000330 <memchr>
 8019920:	b138      	cbz	r0, 8019932 <_vfiprintf_r+0x176>
 8019922:	9b04      	ldr	r3, [sp, #16]
 8019924:	eba0 000a 	sub.w	r0, r0, sl
 8019928:	2240      	movs	r2, #64	@ 0x40
 801992a:	4082      	lsls	r2, r0
 801992c:	4313      	orrs	r3, r2
 801992e:	3401      	adds	r4, #1
 8019930:	9304      	str	r3, [sp, #16]
 8019932:	f814 1b01 	ldrb.w	r1, [r4], #1
 8019936:	4829      	ldr	r0, [pc, #164]	@ (80199dc <_vfiprintf_r+0x220>)
 8019938:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 801993c:	2206      	movs	r2, #6
 801993e:	f7e6 fcf7 	bl	8000330 <memchr>
 8019942:	2800      	cmp	r0, #0
 8019944:	d03f      	beq.n	80199c6 <_vfiprintf_r+0x20a>
 8019946:	4b26      	ldr	r3, [pc, #152]	@ (80199e0 <_vfiprintf_r+0x224>)
 8019948:	bb1b      	cbnz	r3, 8019992 <_vfiprintf_r+0x1d6>
 801994a:	9b03      	ldr	r3, [sp, #12]
 801994c:	3307      	adds	r3, #7
 801994e:	f023 0307 	bic.w	r3, r3, #7
 8019952:	3308      	adds	r3, #8
 8019954:	9303      	str	r3, [sp, #12]
 8019956:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019958:	443b      	add	r3, r7
 801995a:	9309      	str	r3, [sp, #36]	@ 0x24
 801995c:	e76a      	b.n	8019834 <_vfiprintf_r+0x78>
 801995e:	fb0c 3202 	mla	r2, ip, r2, r3
 8019962:	460c      	mov	r4, r1
 8019964:	2001      	movs	r0, #1
 8019966:	e7a8      	b.n	80198ba <_vfiprintf_r+0xfe>
 8019968:	2300      	movs	r3, #0
 801996a:	3401      	adds	r4, #1
 801996c:	9305      	str	r3, [sp, #20]
 801996e:	4619      	mov	r1, r3
 8019970:	f04f 0c0a 	mov.w	ip, #10
 8019974:	4620      	mov	r0, r4
 8019976:	f810 2b01 	ldrb.w	r2, [r0], #1
 801997a:	3a30      	subs	r2, #48	@ 0x30
 801997c:	2a09      	cmp	r2, #9
 801997e:	d903      	bls.n	8019988 <_vfiprintf_r+0x1cc>
 8019980:	2b00      	cmp	r3, #0
 8019982:	d0c6      	beq.n	8019912 <_vfiprintf_r+0x156>
 8019984:	9105      	str	r1, [sp, #20]
 8019986:	e7c4      	b.n	8019912 <_vfiprintf_r+0x156>
 8019988:	fb0c 2101 	mla	r1, ip, r1, r2
 801998c:	4604      	mov	r4, r0
 801998e:	2301      	movs	r3, #1
 8019990:	e7f0      	b.n	8019974 <_vfiprintf_r+0x1b8>
 8019992:	ab03      	add	r3, sp, #12
 8019994:	9300      	str	r3, [sp, #0]
 8019996:	462a      	mov	r2, r5
 8019998:	4b12      	ldr	r3, [pc, #72]	@ (80199e4 <_vfiprintf_r+0x228>)
 801999a:	a904      	add	r1, sp, #16
 801999c:	4630      	mov	r0, r6
 801999e:	f7fc ffcb 	bl	8016938 <_printf_float>
 80199a2:	4607      	mov	r7, r0
 80199a4:	1c78      	adds	r0, r7, #1
 80199a6:	d1d6      	bne.n	8019956 <_vfiprintf_r+0x19a>
 80199a8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80199aa:	07d9      	lsls	r1, r3, #31
 80199ac:	d405      	bmi.n	80199ba <_vfiprintf_r+0x1fe>
 80199ae:	89ab      	ldrh	r3, [r5, #12]
 80199b0:	059a      	lsls	r2, r3, #22
 80199b2:	d402      	bmi.n	80199ba <_vfiprintf_r+0x1fe>
 80199b4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80199b6:	f7fd fd29 	bl	801740c <__retarget_lock_release_recursive>
 80199ba:	89ab      	ldrh	r3, [r5, #12]
 80199bc:	065b      	lsls	r3, r3, #25
 80199be:	f53f af1f 	bmi.w	8019800 <_vfiprintf_r+0x44>
 80199c2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80199c4:	e71e      	b.n	8019804 <_vfiprintf_r+0x48>
 80199c6:	ab03      	add	r3, sp, #12
 80199c8:	9300      	str	r3, [sp, #0]
 80199ca:	462a      	mov	r2, r5
 80199cc:	4b05      	ldr	r3, [pc, #20]	@ (80199e4 <_vfiprintf_r+0x228>)
 80199ce:	a904      	add	r1, sp, #16
 80199d0:	4630      	mov	r0, r6
 80199d2:	f7fd fa39 	bl	8016e48 <_printf_i>
 80199d6:	e7e4      	b.n	80199a2 <_vfiprintf_r+0x1e6>
 80199d8:	0801b458 	.word	0x0801b458
 80199dc:	0801b462 	.word	0x0801b462
 80199e0:	08016939 	.word	0x08016939
 80199e4:	08019799 	.word	0x08019799
 80199e8:	0801b45e 	.word	0x0801b45e

080199ec <__swbuf_r>:
 80199ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80199ee:	460e      	mov	r6, r1
 80199f0:	4614      	mov	r4, r2
 80199f2:	4605      	mov	r5, r0
 80199f4:	b118      	cbz	r0, 80199fe <__swbuf_r+0x12>
 80199f6:	6a03      	ldr	r3, [r0, #32]
 80199f8:	b90b      	cbnz	r3, 80199fe <__swbuf_r+0x12>
 80199fa:	f7fd fbd1 	bl	80171a0 <__sinit>
 80199fe:	69a3      	ldr	r3, [r4, #24]
 8019a00:	60a3      	str	r3, [r4, #8]
 8019a02:	89a3      	ldrh	r3, [r4, #12]
 8019a04:	071a      	lsls	r2, r3, #28
 8019a06:	d501      	bpl.n	8019a0c <__swbuf_r+0x20>
 8019a08:	6923      	ldr	r3, [r4, #16]
 8019a0a:	b943      	cbnz	r3, 8019a1e <__swbuf_r+0x32>
 8019a0c:	4621      	mov	r1, r4
 8019a0e:	4628      	mov	r0, r5
 8019a10:	f000 f82a 	bl	8019a68 <__swsetup_r>
 8019a14:	b118      	cbz	r0, 8019a1e <__swbuf_r+0x32>
 8019a16:	f04f 37ff 	mov.w	r7, #4294967295
 8019a1a:	4638      	mov	r0, r7
 8019a1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019a1e:	6823      	ldr	r3, [r4, #0]
 8019a20:	6922      	ldr	r2, [r4, #16]
 8019a22:	1a98      	subs	r0, r3, r2
 8019a24:	6963      	ldr	r3, [r4, #20]
 8019a26:	b2f6      	uxtb	r6, r6
 8019a28:	4283      	cmp	r3, r0
 8019a2a:	4637      	mov	r7, r6
 8019a2c:	dc05      	bgt.n	8019a3a <__swbuf_r+0x4e>
 8019a2e:	4621      	mov	r1, r4
 8019a30:	4628      	mov	r0, r5
 8019a32:	f7ff fdc7 	bl	80195c4 <_fflush_r>
 8019a36:	2800      	cmp	r0, #0
 8019a38:	d1ed      	bne.n	8019a16 <__swbuf_r+0x2a>
 8019a3a:	68a3      	ldr	r3, [r4, #8]
 8019a3c:	3b01      	subs	r3, #1
 8019a3e:	60a3      	str	r3, [r4, #8]
 8019a40:	6823      	ldr	r3, [r4, #0]
 8019a42:	1c5a      	adds	r2, r3, #1
 8019a44:	6022      	str	r2, [r4, #0]
 8019a46:	701e      	strb	r6, [r3, #0]
 8019a48:	6962      	ldr	r2, [r4, #20]
 8019a4a:	1c43      	adds	r3, r0, #1
 8019a4c:	429a      	cmp	r2, r3
 8019a4e:	d004      	beq.n	8019a5a <__swbuf_r+0x6e>
 8019a50:	89a3      	ldrh	r3, [r4, #12]
 8019a52:	07db      	lsls	r3, r3, #31
 8019a54:	d5e1      	bpl.n	8019a1a <__swbuf_r+0x2e>
 8019a56:	2e0a      	cmp	r6, #10
 8019a58:	d1df      	bne.n	8019a1a <__swbuf_r+0x2e>
 8019a5a:	4621      	mov	r1, r4
 8019a5c:	4628      	mov	r0, r5
 8019a5e:	f7ff fdb1 	bl	80195c4 <_fflush_r>
 8019a62:	2800      	cmp	r0, #0
 8019a64:	d0d9      	beq.n	8019a1a <__swbuf_r+0x2e>
 8019a66:	e7d6      	b.n	8019a16 <__swbuf_r+0x2a>

08019a68 <__swsetup_r>:
 8019a68:	b538      	push	{r3, r4, r5, lr}
 8019a6a:	4b29      	ldr	r3, [pc, #164]	@ (8019b10 <__swsetup_r+0xa8>)
 8019a6c:	4605      	mov	r5, r0
 8019a6e:	6818      	ldr	r0, [r3, #0]
 8019a70:	460c      	mov	r4, r1
 8019a72:	b118      	cbz	r0, 8019a7c <__swsetup_r+0x14>
 8019a74:	6a03      	ldr	r3, [r0, #32]
 8019a76:	b90b      	cbnz	r3, 8019a7c <__swsetup_r+0x14>
 8019a78:	f7fd fb92 	bl	80171a0 <__sinit>
 8019a7c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8019a80:	0719      	lsls	r1, r3, #28
 8019a82:	d422      	bmi.n	8019aca <__swsetup_r+0x62>
 8019a84:	06da      	lsls	r2, r3, #27
 8019a86:	d407      	bmi.n	8019a98 <__swsetup_r+0x30>
 8019a88:	2209      	movs	r2, #9
 8019a8a:	602a      	str	r2, [r5, #0]
 8019a8c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8019a90:	81a3      	strh	r3, [r4, #12]
 8019a92:	f04f 30ff 	mov.w	r0, #4294967295
 8019a96:	e033      	b.n	8019b00 <__swsetup_r+0x98>
 8019a98:	0758      	lsls	r0, r3, #29
 8019a9a:	d512      	bpl.n	8019ac2 <__swsetup_r+0x5a>
 8019a9c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8019a9e:	b141      	cbz	r1, 8019ab2 <__swsetup_r+0x4a>
 8019aa0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8019aa4:	4299      	cmp	r1, r3
 8019aa6:	d002      	beq.n	8019aae <__swsetup_r+0x46>
 8019aa8:	4628      	mov	r0, r5
 8019aaa:	f7fe faa7 	bl	8017ffc <_free_r>
 8019aae:	2300      	movs	r3, #0
 8019ab0:	6363      	str	r3, [r4, #52]	@ 0x34
 8019ab2:	89a3      	ldrh	r3, [r4, #12]
 8019ab4:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8019ab8:	81a3      	strh	r3, [r4, #12]
 8019aba:	2300      	movs	r3, #0
 8019abc:	6063      	str	r3, [r4, #4]
 8019abe:	6923      	ldr	r3, [r4, #16]
 8019ac0:	6023      	str	r3, [r4, #0]
 8019ac2:	89a3      	ldrh	r3, [r4, #12]
 8019ac4:	f043 0308 	orr.w	r3, r3, #8
 8019ac8:	81a3      	strh	r3, [r4, #12]
 8019aca:	6923      	ldr	r3, [r4, #16]
 8019acc:	b94b      	cbnz	r3, 8019ae2 <__swsetup_r+0x7a>
 8019ace:	89a3      	ldrh	r3, [r4, #12]
 8019ad0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8019ad4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8019ad8:	d003      	beq.n	8019ae2 <__swsetup_r+0x7a>
 8019ada:	4621      	mov	r1, r4
 8019adc:	4628      	mov	r0, r5
 8019ade:	f000 f883 	bl	8019be8 <__smakebuf_r>
 8019ae2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8019ae6:	f013 0201 	ands.w	r2, r3, #1
 8019aea:	d00a      	beq.n	8019b02 <__swsetup_r+0x9a>
 8019aec:	2200      	movs	r2, #0
 8019aee:	60a2      	str	r2, [r4, #8]
 8019af0:	6962      	ldr	r2, [r4, #20]
 8019af2:	4252      	negs	r2, r2
 8019af4:	61a2      	str	r2, [r4, #24]
 8019af6:	6922      	ldr	r2, [r4, #16]
 8019af8:	b942      	cbnz	r2, 8019b0c <__swsetup_r+0xa4>
 8019afa:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8019afe:	d1c5      	bne.n	8019a8c <__swsetup_r+0x24>
 8019b00:	bd38      	pop	{r3, r4, r5, pc}
 8019b02:	0799      	lsls	r1, r3, #30
 8019b04:	bf58      	it	pl
 8019b06:	6962      	ldrpl	r2, [r4, #20]
 8019b08:	60a2      	str	r2, [r4, #8]
 8019b0a:	e7f4      	b.n	8019af6 <__swsetup_r+0x8e>
 8019b0c:	2000      	movs	r0, #0
 8019b0e:	e7f7      	b.n	8019b00 <__swsetup_r+0x98>
 8019b10:	2400027c 	.word	0x2400027c

08019b14 <_raise_r>:
 8019b14:	291f      	cmp	r1, #31
 8019b16:	b538      	push	{r3, r4, r5, lr}
 8019b18:	4605      	mov	r5, r0
 8019b1a:	460c      	mov	r4, r1
 8019b1c:	d904      	bls.n	8019b28 <_raise_r+0x14>
 8019b1e:	2316      	movs	r3, #22
 8019b20:	6003      	str	r3, [r0, #0]
 8019b22:	f04f 30ff 	mov.w	r0, #4294967295
 8019b26:	bd38      	pop	{r3, r4, r5, pc}
 8019b28:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8019b2a:	b112      	cbz	r2, 8019b32 <_raise_r+0x1e>
 8019b2c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8019b30:	b94b      	cbnz	r3, 8019b46 <_raise_r+0x32>
 8019b32:	4628      	mov	r0, r5
 8019b34:	f000 f830 	bl	8019b98 <_getpid_r>
 8019b38:	4622      	mov	r2, r4
 8019b3a:	4601      	mov	r1, r0
 8019b3c:	4628      	mov	r0, r5
 8019b3e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8019b42:	f000 b817 	b.w	8019b74 <_kill_r>
 8019b46:	2b01      	cmp	r3, #1
 8019b48:	d00a      	beq.n	8019b60 <_raise_r+0x4c>
 8019b4a:	1c59      	adds	r1, r3, #1
 8019b4c:	d103      	bne.n	8019b56 <_raise_r+0x42>
 8019b4e:	2316      	movs	r3, #22
 8019b50:	6003      	str	r3, [r0, #0]
 8019b52:	2001      	movs	r0, #1
 8019b54:	e7e7      	b.n	8019b26 <_raise_r+0x12>
 8019b56:	2100      	movs	r1, #0
 8019b58:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8019b5c:	4620      	mov	r0, r4
 8019b5e:	4798      	blx	r3
 8019b60:	2000      	movs	r0, #0
 8019b62:	e7e0      	b.n	8019b26 <_raise_r+0x12>

08019b64 <raise>:
 8019b64:	4b02      	ldr	r3, [pc, #8]	@ (8019b70 <raise+0xc>)
 8019b66:	4601      	mov	r1, r0
 8019b68:	6818      	ldr	r0, [r3, #0]
 8019b6a:	f7ff bfd3 	b.w	8019b14 <_raise_r>
 8019b6e:	bf00      	nop
 8019b70:	2400027c 	.word	0x2400027c

08019b74 <_kill_r>:
 8019b74:	b538      	push	{r3, r4, r5, lr}
 8019b76:	4d07      	ldr	r5, [pc, #28]	@ (8019b94 <_kill_r+0x20>)
 8019b78:	2300      	movs	r3, #0
 8019b7a:	4604      	mov	r4, r0
 8019b7c:	4608      	mov	r0, r1
 8019b7e:	4611      	mov	r1, r2
 8019b80:	602b      	str	r3, [r5, #0]
 8019b82:	f7e8 fc4d 	bl	8002420 <_kill>
 8019b86:	1c43      	adds	r3, r0, #1
 8019b88:	d102      	bne.n	8019b90 <_kill_r+0x1c>
 8019b8a:	682b      	ldr	r3, [r5, #0]
 8019b8c:	b103      	cbz	r3, 8019b90 <_kill_r+0x1c>
 8019b8e:	6023      	str	r3, [r4, #0]
 8019b90:	bd38      	pop	{r3, r4, r5, pc}
 8019b92:	bf00      	nop
 8019b94:	24006264 	.word	0x24006264

08019b98 <_getpid_r>:
 8019b98:	f7e8 bc3a 	b.w	8002410 <_getpid>

08019b9c <__swhatbuf_r>:
 8019b9c:	b570      	push	{r4, r5, r6, lr}
 8019b9e:	460c      	mov	r4, r1
 8019ba0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8019ba4:	2900      	cmp	r1, #0
 8019ba6:	b096      	sub	sp, #88	@ 0x58
 8019ba8:	4615      	mov	r5, r2
 8019baa:	461e      	mov	r6, r3
 8019bac:	da0d      	bge.n	8019bca <__swhatbuf_r+0x2e>
 8019bae:	89a3      	ldrh	r3, [r4, #12]
 8019bb0:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8019bb4:	f04f 0100 	mov.w	r1, #0
 8019bb8:	bf14      	ite	ne
 8019bba:	2340      	movne	r3, #64	@ 0x40
 8019bbc:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8019bc0:	2000      	movs	r0, #0
 8019bc2:	6031      	str	r1, [r6, #0]
 8019bc4:	602b      	str	r3, [r5, #0]
 8019bc6:	b016      	add	sp, #88	@ 0x58
 8019bc8:	bd70      	pop	{r4, r5, r6, pc}
 8019bca:	466a      	mov	r2, sp
 8019bcc:	f000 f848 	bl	8019c60 <_fstat_r>
 8019bd0:	2800      	cmp	r0, #0
 8019bd2:	dbec      	blt.n	8019bae <__swhatbuf_r+0x12>
 8019bd4:	9901      	ldr	r1, [sp, #4]
 8019bd6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8019bda:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8019bde:	4259      	negs	r1, r3
 8019be0:	4159      	adcs	r1, r3
 8019be2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8019be6:	e7eb      	b.n	8019bc0 <__swhatbuf_r+0x24>

08019be8 <__smakebuf_r>:
 8019be8:	898b      	ldrh	r3, [r1, #12]
 8019bea:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8019bec:	079d      	lsls	r5, r3, #30
 8019bee:	4606      	mov	r6, r0
 8019bf0:	460c      	mov	r4, r1
 8019bf2:	d507      	bpl.n	8019c04 <__smakebuf_r+0x1c>
 8019bf4:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8019bf8:	6023      	str	r3, [r4, #0]
 8019bfa:	6123      	str	r3, [r4, #16]
 8019bfc:	2301      	movs	r3, #1
 8019bfe:	6163      	str	r3, [r4, #20]
 8019c00:	b003      	add	sp, #12
 8019c02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019c04:	ab01      	add	r3, sp, #4
 8019c06:	466a      	mov	r2, sp
 8019c08:	f7ff ffc8 	bl	8019b9c <__swhatbuf_r>
 8019c0c:	9f00      	ldr	r7, [sp, #0]
 8019c0e:	4605      	mov	r5, r0
 8019c10:	4639      	mov	r1, r7
 8019c12:	4630      	mov	r0, r6
 8019c14:	f7fe fda0 	bl	8018758 <_malloc_r>
 8019c18:	b948      	cbnz	r0, 8019c2e <__smakebuf_r+0x46>
 8019c1a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8019c1e:	059a      	lsls	r2, r3, #22
 8019c20:	d4ee      	bmi.n	8019c00 <__smakebuf_r+0x18>
 8019c22:	f023 0303 	bic.w	r3, r3, #3
 8019c26:	f043 0302 	orr.w	r3, r3, #2
 8019c2a:	81a3      	strh	r3, [r4, #12]
 8019c2c:	e7e2      	b.n	8019bf4 <__smakebuf_r+0xc>
 8019c2e:	89a3      	ldrh	r3, [r4, #12]
 8019c30:	6020      	str	r0, [r4, #0]
 8019c32:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8019c36:	81a3      	strh	r3, [r4, #12]
 8019c38:	9b01      	ldr	r3, [sp, #4]
 8019c3a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8019c3e:	b15b      	cbz	r3, 8019c58 <__smakebuf_r+0x70>
 8019c40:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8019c44:	4630      	mov	r0, r6
 8019c46:	f000 f81d 	bl	8019c84 <_isatty_r>
 8019c4a:	b128      	cbz	r0, 8019c58 <__smakebuf_r+0x70>
 8019c4c:	89a3      	ldrh	r3, [r4, #12]
 8019c4e:	f023 0303 	bic.w	r3, r3, #3
 8019c52:	f043 0301 	orr.w	r3, r3, #1
 8019c56:	81a3      	strh	r3, [r4, #12]
 8019c58:	89a3      	ldrh	r3, [r4, #12]
 8019c5a:	431d      	orrs	r5, r3
 8019c5c:	81a5      	strh	r5, [r4, #12]
 8019c5e:	e7cf      	b.n	8019c00 <__smakebuf_r+0x18>

08019c60 <_fstat_r>:
 8019c60:	b538      	push	{r3, r4, r5, lr}
 8019c62:	4d07      	ldr	r5, [pc, #28]	@ (8019c80 <_fstat_r+0x20>)
 8019c64:	2300      	movs	r3, #0
 8019c66:	4604      	mov	r4, r0
 8019c68:	4608      	mov	r0, r1
 8019c6a:	4611      	mov	r1, r2
 8019c6c:	602b      	str	r3, [r5, #0]
 8019c6e:	f7e8 fc37 	bl	80024e0 <_fstat>
 8019c72:	1c43      	adds	r3, r0, #1
 8019c74:	d102      	bne.n	8019c7c <_fstat_r+0x1c>
 8019c76:	682b      	ldr	r3, [r5, #0]
 8019c78:	b103      	cbz	r3, 8019c7c <_fstat_r+0x1c>
 8019c7a:	6023      	str	r3, [r4, #0]
 8019c7c:	bd38      	pop	{r3, r4, r5, pc}
 8019c7e:	bf00      	nop
 8019c80:	24006264 	.word	0x24006264

08019c84 <_isatty_r>:
 8019c84:	b538      	push	{r3, r4, r5, lr}
 8019c86:	4d06      	ldr	r5, [pc, #24]	@ (8019ca0 <_isatty_r+0x1c>)
 8019c88:	2300      	movs	r3, #0
 8019c8a:	4604      	mov	r4, r0
 8019c8c:	4608      	mov	r0, r1
 8019c8e:	602b      	str	r3, [r5, #0]
 8019c90:	f7e8 fc36 	bl	8002500 <_isatty>
 8019c94:	1c43      	adds	r3, r0, #1
 8019c96:	d102      	bne.n	8019c9e <_isatty_r+0x1a>
 8019c98:	682b      	ldr	r3, [r5, #0]
 8019c9a:	b103      	cbz	r3, 8019c9e <_isatty_r+0x1a>
 8019c9c:	6023      	str	r3, [r4, #0]
 8019c9e:	bd38      	pop	{r3, r4, r5, pc}
 8019ca0:	24006264 	.word	0x24006264
 8019ca4:	00000000 	.word	0x00000000

08019ca8 <sin>:
 8019ca8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8019caa:	eeb0 7b40 	vmov.f64	d7, d0
 8019cae:	ee17 3a90 	vmov	r3, s15
 8019cb2:	4a21      	ldr	r2, [pc, #132]	@ (8019d38 <sin+0x90>)
 8019cb4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8019cb8:	4293      	cmp	r3, r2
 8019cba:	d807      	bhi.n	8019ccc <sin+0x24>
 8019cbc:	ed9f 1b1c 	vldr	d1, [pc, #112]	@ 8019d30 <sin+0x88>
 8019cc0:	2000      	movs	r0, #0
 8019cc2:	b005      	add	sp, #20
 8019cc4:	f85d eb04 	ldr.w	lr, [sp], #4
 8019cc8:	f000 b986 	b.w	8019fd8 <__kernel_sin>
 8019ccc:	4a1b      	ldr	r2, [pc, #108]	@ (8019d3c <sin+0x94>)
 8019cce:	4293      	cmp	r3, r2
 8019cd0:	d904      	bls.n	8019cdc <sin+0x34>
 8019cd2:	ee30 0b40 	vsub.f64	d0, d0, d0
 8019cd6:	b005      	add	sp, #20
 8019cd8:	f85d fb04 	ldr.w	pc, [sp], #4
 8019cdc:	4668      	mov	r0, sp
 8019cde:	f000 f9d3 	bl	801a088 <__ieee754_rem_pio2>
 8019ce2:	f000 0003 	and.w	r0, r0, #3
 8019ce6:	2801      	cmp	r0, #1
 8019ce8:	d00a      	beq.n	8019d00 <sin+0x58>
 8019cea:	2802      	cmp	r0, #2
 8019cec:	d00f      	beq.n	8019d0e <sin+0x66>
 8019cee:	b9c0      	cbnz	r0, 8019d22 <sin+0x7a>
 8019cf0:	ed9d 1b02 	vldr	d1, [sp, #8]
 8019cf4:	ed9d 0b00 	vldr	d0, [sp]
 8019cf8:	2001      	movs	r0, #1
 8019cfa:	f000 f96d 	bl	8019fd8 <__kernel_sin>
 8019cfe:	e7ea      	b.n	8019cd6 <sin+0x2e>
 8019d00:	ed9d 1b02 	vldr	d1, [sp, #8]
 8019d04:	ed9d 0b00 	vldr	d0, [sp]
 8019d08:	f000 f8fe 	bl	8019f08 <__kernel_cos>
 8019d0c:	e7e3      	b.n	8019cd6 <sin+0x2e>
 8019d0e:	ed9d 1b02 	vldr	d1, [sp, #8]
 8019d12:	ed9d 0b00 	vldr	d0, [sp]
 8019d16:	2001      	movs	r0, #1
 8019d18:	f000 f95e 	bl	8019fd8 <__kernel_sin>
 8019d1c:	eeb1 0b40 	vneg.f64	d0, d0
 8019d20:	e7d9      	b.n	8019cd6 <sin+0x2e>
 8019d22:	ed9d 1b02 	vldr	d1, [sp, #8]
 8019d26:	ed9d 0b00 	vldr	d0, [sp]
 8019d2a:	f000 f8ed 	bl	8019f08 <__kernel_cos>
 8019d2e:	e7f5      	b.n	8019d1c <sin+0x74>
	...
 8019d38:	3fe921fb 	.word	0x3fe921fb
 8019d3c:	7fefffff 	.word	0x7fefffff

08019d40 <sinf_poly>:
 8019d40:	07cb      	lsls	r3, r1, #31
 8019d42:	d412      	bmi.n	8019d6a <sinf_poly+0x2a>
 8019d44:	ee21 5b00 	vmul.f64	d5, d1, d0
 8019d48:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
 8019d4c:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
 8019d50:	eea6 7b01 	vfma.f64	d7, d6, d1
 8019d54:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
 8019d58:	ee21 1b05 	vmul.f64	d1, d1, d5
 8019d5c:	eea6 0b05 	vfma.f64	d0, d6, d5
 8019d60:	eea7 0b01 	vfma.f64	d0, d7, d1
 8019d64:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
 8019d68:	4770      	bx	lr
 8019d6a:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
 8019d6e:	ee21 5b01 	vmul.f64	d5, d1, d1
 8019d72:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
 8019d76:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
 8019d7a:	eea1 7b06 	vfma.f64	d7, d1, d6
 8019d7e:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
 8019d82:	eea1 0b06 	vfma.f64	d0, d1, d6
 8019d86:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
 8019d8a:	ee21 1b05 	vmul.f64	d1, d1, d5
 8019d8e:	eea5 0b06 	vfma.f64	d0, d5, d6
 8019d92:	e7e5      	b.n	8019d60 <sinf_poly+0x20>
 8019d94:	0000      	movs	r0, r0
	...

08019d98 <sinf>:
 8019d98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8019d9a:	ee10 4a10 	vmov	r4, s0
 8019d9e:	f3c4 530a 	ubfx	r3, r4, #20, #11
 8019da2:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
 8019da6:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
 8019daa:	eef0 7a40 	vmov.f32	s15, s0
 8019dae:	ea4f 5214 	mov.w	r2, r4, lsr #20
 8019db2:	d218      	bcs.n	8019de6 <sinf+0x4e>
 8019db4:	ee26 1b06 	vmul.f64	d1, d6, d6
 8019db8:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
 8019dbc:	d20a      	bcs.n	8019dd4 <sinf+0x3c>
 8019dbe:	f412 6fff 	tst.w	r2, #2040	@ 0x7f8
 8019dc2:	d103      	bne.n	8019dcc <sinf+0x34>
 8019dc4:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
 8019dc8:	ed8d 1a01 	vstr	s2, [sp, #4]
 8019dcc:	eeb0 0a67 	vmov.f32	s0, s15
 8019dd0:	b003      	add	sp, #12
 8019dd2:	bd30      	pop	{r4, r5, pc}
 8019dd4:	483a      	ldr	r0, [pc, #232]	@ (8019ec0 <sinf+0x128>)
 8019dd6:	eeb0 0b46 	vmov.f64	d0, d6
 8019dda:	2100      	movs	r1, #0
 8019ddc:	b003      	add	sp, #12
 8019dde:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8019de2:	f7ff bfad 	b.w	8019d40 <sinf_poly>
 8019de6:	f240 422e 	movw	r2, #1070	@ 0x42e
 8019dea:	4293      	cmp	r3, r2
 8019dec:	d824      	bhi.n	8019e38 <sinf+0xa0>
 8019dee:	4b34      	ldr	r3, [pc, #208]	@ (8019ec0 <sinf+0x128>)
 8019df0:	ed93 7b08 	vldr	d7, [r3, #32]
 8019df4:	ee26 7b07 	vmul.f64	d7, d6, d7
 8019df8:	eefd 7bc7 	vcvt.s32.f64	s15, d7
 8019dfc:	f103 0070 	add.w	r0, r3, #112	@ 0x70
 8019e00:	ee17 1a90 	vmov	r1, s15
 8019e04:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
 8019e08:	1609      	asrs	r1, r1, #24
 8019e0a:	ee07 1a90 	vmov	s15, r1
 8019e0e:	f001 0203 	and.w	r2, r1, #3
 8019e12:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 8019e16:	eeb8 5be7 	vcvt.f64.s32	d5, s15
 8019e1a:	ed92 0b00 	vldr	d0, [r2]
 8019e1e:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
 8019e22:	f011 0f02 	tst.w	r1, #2
 8019e26:	eea5 6b47 	vfms.f64	d6, d5, d7
 8019e2a:	bf08      	it	eq
 8019e2c:	4618      	moveq	r0, r3
 8019e2e:	ee26 1b06 	vmul.f64	d1, d6, d6
 8019e32:	ee20 0b06 	vmul.f64	d0, d0, d6
 8019e36:	e7d1      	b.n	8019ddc <sinf+0x44>
 8019e38:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
 8019e3c:	d237      	bcs.n	8019eae <sinf+0x116>
 8019e3e:	4921      	ldr	r1, [pc, #132]	@ (8019ec4 <sinf+0x12c>)
 8019e40:	f3c4 6083 	ubfx	r0, r4, #26, #4
 8019e44:	eb01 0280 	add.w	r2, r1, r0, lsl #2
 8019e48:	f3c4 0316 	ubfx	r3, r4, #0, #23
 8019e4c:	f3c4 55c2 	ubfx	r5, r4, #23, #3
 8019e50:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8019e54:	6a10      	ldr	r0, [r2, #32]
 8019e56:	6912      	ldr	r2, [r2, #16]
 8019e58:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8019e5c:	40ab      	lsls	r3, r5
 8019e5e:	fba0 5003 	umull	r5, r0, r0, r3
 8019e62:	4359      	muls	r1, r3
 8019e64:	fbe3 0102 	umlal	r0, r1, r3, r2
 8019e68:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
 8019e6c:	0f9d      	lsrs	r5, r3, #30
 8019e6e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8019e72:	1ac9      	subs	r1, r1, r3
 8019e74:	f7e6 fc42 	bl	80006fc <__aeabi_l2d>
 8019e78:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
 8019e7c:	4b10      	ldr	r3, [pc, #64]	@ (8019ec0 <sinf+0x128>)
 8019e7e:	f004 0203 	and.w	r2, r4, #3
 8019e82:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 8019e86:	ed9f 6b0c 	vldr	d6, [pc, #48]	@ 8019eb8 <sinf+0x120>
 8019e8a:	ed92 0b00 	vldr	d0, [r2]
 8019e8e:	ec41 0b17 	vmov	d7, r0, r1
 8019e92:	f014 0f02 	tst.w	r4, #2
 8019e96:	ee27 7b06 	vmul.f64	d7, d7, d6
 8019e9a:	f103 0070 	add.w	r0, r3, #112	@ 0x70
 8019e9e:	4629      	mov	r1, r5
 8019ea0:	bf08      	it	eq
 8019ea2:	4618      	moveq	r0, r3
 8019ea4:	ee27 1b07 	vmul.f64	d1, d7, d7
 8019ea8:	ee20 0b07 	vmul.f64	d0, d0, d7
 8019eac:	e796      	b.n	8019ddc <sinf+0x44>
 8019eae:	b003      	add	sp, #12
 8019eb0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8019eb4:	f000 b816 	b.w	8019ee4 <__math_invalidf>
 8019eb8:	54442d18 	.word	0x54442d18
 8019ebc:	3c1921fb 	.word	0x3c1921fb
 8019ec0:	0801b508 	.word	0x0801b508
 8019ec4:	0801b4a8 	.word	0x0801b4a8

08019ec8 <with_errnof>:
 8019ec8:	b510      	push	{r4, lr}
 8019eca:	ed2d 8b02 	vpush	{d8}
 8019ece:	eeb0 8a40 	vmov.f32	s16, s0
 8019ed2:	4604      	mov	r4, r0
 8019ed4:	f7fd fa6e 	bl	80173b4 <__errno>
 8019ed8:	eeb0 0a48 	vmov.f32	s0, s16
 8019edc:	ecbd 8b02 	vpop	{d8}
 8019ee0:	6004      	str	r4, [r0, #0]
 8019ee2:	bd10      	pop	{r4, pc}

08019ee4 <__math_invalidf>:
 8019ee4:	eef0 7a40 	vmov.f32	s15, s0
 8019ee8:	ee30 7a40 	vsub.f32	s14, s0, s0
 8019eec:	eef4 7a67 	vcmp.f32	s15, s15
 8019ef0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ef4:	ee87 0a07 	vdiv.f32	s0, s14, s14
 8019ef8:	d602      	bvs.n	8019f00 <__math_invalidf+0x1c>
 8019efa:	2021      	movs	r0, #33	@ 0x21
 8019efc:	f7ff bfe4 	b.w	8019ec8 <with_errnof>
 8019f00:	4770      	bx	lr
 8019f02:	0000      	movs	r0, r0
 8019f04:	0000      	movs	r0, r0
	...

08019f08 <__kernel_cos>:
 8019f08:	eeb0 5b40 	vmov.f64	d5, d0
 8019f0c:	ee15 1a90 	vmov	r1, s11
 8019f10:	eeb7 0b00 	vmov.f64	d0, #112	@ 0x3f800000  1.0
 8019f14:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8019f18:	f1b1 5f79 	cmp.w	r1, #1044381696	@ 0x3e400000
 8019f1c:	d204      	bcs.n	8019f28 <__kernel_cos+0x20>
 8019f1e:	eefd 7bc5 	vcvt.s32.f64	s15, d5
 8019f22:	ee17 3a90 	vmov	r3, s15
 8019f26:	b343      	cbz	r3, 8019f7a <__kernel_cos+0x72>
 8019f28:	ee25 6b05 	vmul.f64	d6, d5, d5
 8019f2c:	ee21 1b45 	vnmul.f64	d1, d1, d5
 8019f30:	ed9f 7b1b 	vldr	d7, [pc, #108]	@ 8019fa0 <__kernel_cos+0x98>
 8019f34:	ed9f 4b1c 	vldr	d4, [pc, #112]	@ 8019fa8 <__kernel_cos+0xa0>
 8019f38:	eea6 4b07 	vfma.f64	d4, d6, d7
 8019f3c:	ed9f 7b1c 	vldr	d7, [pc, #112]	@ 8019fb0 <__kernel_cos+0xa8>
 8019f40:	eea4 7b06 	vfma.f64	d7, d4, d6
 8019f44:	ed9f 4b1c 	vldr	d4, [pc, #112]	@ 8019fb8 <__kernel_cos+0xb0>
 8019f48:	eea7 4b06 	vfma.f64	d4, d7, d6
 8019f4c:	ed9f 7b1c 	vldr	d7, [pc, #112]	@ 8019fc0 <__kernel_cos+0xb8>
 8019f50:	4b1f      	ldr	r3, [pc, #124]	@ (8019fd0 <__kernel_cos+0xc8>)
 8019f52:	eea4 7b06 	vfma.f64	d7, d4, d6
 8019f56:	ed9f 4b1c 	vldr	d4, [pc, #112]	@ 8019fc8 <__kernel_cos+0xc0>
 8019f5a:	4299      	cmp	r1, r3
 8019f5c:	eea7 4b06 	vfma.f64	d4, d7, d6
 8019f60:	eeb6 7b00 	vmov.f64	d7, #96	@ 0x3f000000  0.5
 8019f64:	ee24 4b06 	vmul.f64	d4, d4, d6
 8019f68:	ee26 7b07 	vmul.f64	d7, d6, d7
 8019f6c:	eea6 1b04 	vfma.f64	d1, d6, d4
 8019f70:	d804      	bhi.n	8019f7c <__kernel_cos+0x74>
 8019f72:	ee37 7b41 	vsub.f64	d7, d7, d1
 8019f76:	ee30 0b47 	vsub.f64	d0, d0, d7
 8019f7a:	4770      	bx	lr
 8019f7c:	4b15      	ldr	r3, [pc, #84]	@ (8019fd4 <__kernel_cos+0xcc>)
 8019f7e:	4299      	cmp	r1, r3
 8019f80:	d809      	bhi.n	8019f96 <__kernel_cos+0x8e>
 8019f82:	2200      	movs	r2, #0
 8019f84:	f5a1 1300 	sub.w	r3, r1, #2097152	@ 0x200000
 8019f88:	ec43 2b16 	vmov	d6, r2, r3
 8019f8c:	ee30 0b46 	vsub.f64	d0, d0, d6
 8019f90:	ee37 7b46 	vsub.f64	d7, d7, d6
 8019f94:	e7ed      	b.n	8019f72 <__kernel_cos+0x6a>
 8019f96:	eeb5 6b02 	vmov.f64	d6, #82	@ 0x3e900000  0.2812500
 8019f9a:	e7f7      	b.n	8019f8c <__kernel_cos+0x84>
 8019f9c:	f3af 8000 	nop.w
 8019fa0:	be8838d4 	.word	0xbe8838d4
 8019fa4:	bda8fae9 	.word	0xbda8fae9
 8019fa8:	bdb4b1c4 	.word	0xbdb4b1c4
 8019fac:	3e21ee9e 	.word	0x3e21ee9e
 8019fb0:	809c52ad 	.word	0x809c52ad
 8019fb4:	be927e4f 	.word	0xbe927e4f
 8019fb8:	19cb1590 	.word	0x19cb1590
 8019fbc:	3efa01a0 	.word	0x3efa01a0
 8019fc0:	16c15177 	.word	0x16c15177
 8019fc4:	bf56c16c 	.word	0xbf56c16c
 8019fc8:	5555554c 	.word	0x5555554c
 8019fcc:	3fa55555 	.word	0x3fa55555
 8019fd0:	3fd33332 	.word	0x3fd33332
 8019fd4:	3fe90000 	.word	0x3fe90000

08019fd8 <__kernel_sin>:
 8019fd8:	ee10 3a90 	vmov	r3, s1
 8019fdc:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8019fe0:	f1b3 5f79 	cmp.w	r3, #1044381696	@ 0x3e400000
 8019fe4:	d204      	bcs.n	8019ff0 <__kernel_sin+0x18>
 8019fe6:	eefd 7bc0 	vcvt.s32.f64	s15, d0
 8019fea:	ee17 3a90 	vmov	r3, s15
 8019fee:	b35b      	cbz	r3, 801a048 <__kernel_sin+0x70>
 8019ff0:	ee20 6b00 	vmul.f64	d6, d0, d0
 8019ff4:	ee20 5b06 	vmul.f64	d5, d0, d6
 8019ff8:	ed9f 7b15 	vldr	d7, [pc, #84]	@ 801a050 <__kernel_sin+0x78>
 8019ffc:	ed9f 4b16 	vldr	d4, [pc, #88]	@ 801a058 <__kernel_sin+0x80>
 801a000:	eea6 4b07 	vfma.f64	d4, d6, d7
 801a004:	ed9f 7b16 	vldr	d7, [pc, #88]	@ 801a060 <__kernel_sin+0x88>
 801a008:	eea4 7b06 	vfma.f64	d7, d4, d6
 801a00c:	ed9f 4b16 	vldr	d4, [pc, #88]	@ 801a068 <__kernel_sin+0x90>
 801a010:	eea7 4b06 	vfma.f64	d4, d7, d6
 801a014:	ed9f 7b16 	vldr	d7, [pc, #88]	@ 801a070 <__kernel_sin+0x98>
 801a018:	eea4 7b06 	vfma.f64	d7, d4, d6
 801a01c:	b930      	cbnz	r0, 801a02c <__kernel_sin+0x54>
 801a01e:	ed9f 4b16 	vldr	d4, [pc, #88]	@ 801a078 <__kernel_sin+0xa0>
 801a022:	eea6 4b07 	vfma.f64	d4, d6, d7
 801a026:	eea4 0b05 	vfma.f64	d0, d4, d5
 801a02a:	4770      	bx	lr
 801a02c:	ee27 7b45 	vnmul.f64	d7, d7, d5
 801a030:	eeb6 4b00 	vmov.f64	d4, #96	@ 0x3f000000  0.5
 801a034:	eea1 7b04 	vfma.f64	d7, d1, d4
 801a038:	ee97 1b06 	vfnms.f64	d1, d7, d6
 801a03c:	ed9f 7b10 	vldr	d7, [pc, #64]	@ 801a080 <__kernel_sin+0xa8>
 801a040:	eea5 1b07 	vfma.f64	d1, d5, d7
 801a044:	ee30 0b41 	vsub.f64	d0, d0, d1
 801a048:	4770      	bx	lr
 801a04a:	bf00      	nop
 801a04c:	f3af 8000 	nop.w
 801a050:	5acfd57c 	.word	0x5acfd57c
 801a054:	3de5d93a 	.word	0x3de5d93a
 801a058:	8a2b9ceb 	.word	0x8a2b9ceb
 801a05c:	be5ae5e6 	.word	0xbe5ae5e6
 801a060:	57b1fe7d 	.word	0x57b1fe7d
 801a064:	3ec71de3 	.word	0x3ec71de3
 801a068:	19c161d5 	.word	0x19c161d5
 801a06c:	bf2a01a0 	.word	0xbf2a01a0
 801a070:	1110f8a6 	.word	0x1110f8a6
 801a074:	3f811111 	.word	0x3f811111
 801a078:	55555549 	.word	0x55555549
 801a07c:	bfc55555 	.word	0xbfc55555
 801a080:	55555549 	.word	0x55555549
 801a084:	3fc55555 	.word	0x3fc55555

0801a088 <__ieee754_rem_pio2>:
 801a088:	b570      	push	{r4, r5, r6, lr}
 801a08a:	eeb0 7b40 	vmov.f64	d7, d0
 801a08e:	ee17 5a90 	vmov	r5, s15
 801a092:	4b99      	ldr	r3, [pc, #612]	@ (801a2f8 <__ieee754_rem_pio2+0x270>)
 801a094:	f025 4600 	bic.w	r6, r5, #2147483648	@ 0x80000000
 801a098:	429e      	cmp	r6, r3
 801a09a:	b088      	sub	sp, #32
 801a09c:	4604      	mov	r4, r0
 801a09e:	d807      	bhi.n	801a0b0 <__ieee754_rem_pio2+0x28>
 801a0a0:	2200      	movs	r2, #0
 801a0a2:	2300      	movs	r3, #0
 801a0a4:	ed84 0b00 	vstr	d0, [r4]
 801a0a8:	e9c0 2302 	strd	r2, r3, [r0, #8]
 801a0ac:	2000      	movs	r0, #0
 801a0ae:	e01b      	b.n	801a0e8 <__ieee754_rem_pio2+0x60>
 801a0b0:	4b92      	ldr	r3, [pc, #584]	@ (801a2fc <__ieee754_rem_pio2+0x274>)
 801a0b2:	429e      	cmp	r6, r3
 801a0b4:	d83b      	bhi.n	801a12e <__ieee754_rem_pio2+0xa6>
 801a0b6:	f5a3 231b 	sub.w	r3, r3, #634880	@ 0x9b000
 801a0ba:	2d00      	cmp	r5, #0
 801a0bc:	ed9f 6b7e 	vldr	d6, [pc, #504]	@ 801a2b8 <__ieee754_rem_pio2+0x230>
 801a0c0:	f5a3 63f0 	sub.w	r3, r3, #1920	@ 0x780
 801a0c4:	dd19      	ble.n	801a0fa <__ieee754_rem_pio2+0x72>
 801a0c6:	ee30 7b46 	vsub.f64	d7, d0, d6
 801a0ca:	429e      	cmp	r6, r3
 801a0cc:	d00e      	beq.n	801a0ec <__ieee754_rem_pio2+0x64>
 801a0ce:	ed9f 5b7c 	vldr	d5, [pc, #496]	@ 801a2c0 <__ieee754_rem_pio2+0x238>
 801a0d2:	ee37 6b45 	vsub.f64	d6, d7, d5
 801a0d6:	ee37 7b46 	vsub.f64	d7, d7, d6
 801a0da:	ed84 6b00 	vstr	d6, [r4]
 801a0de:	ee37 7b45 	vsub.f64	d7, d7, d5
 801a0e2:	ed84 7b02 	vstr	d7, [r4, #8]
 801a0e6:	2001      	movs	r0, #1
 801a0e8:	b008      	add	sp, #32
 801a0ea:	bd70      	pop	{r4, r5, r6, pc}
 801a0ec:	ed9f 6b76 	vldr	d6, [pc, #472]	@ 801a2c8 <__ieee754_rem_pio2+0x240>
 801a0f0:	ed9f 5b77 	vldr	d5, [pc, #476]	@ 801a2d0 <__ieee754_rem_pio2+0x248>
 801a0f4:	ee37 7b46 	vsub.f64	d7, d7, d6
 801a0f8:	e7eb      	b.n	801a0d2 <__ieee754_rem_pio2+0x4a>
 801a0fa:	429e      	cmp	r6, r3
 801a0fc:	ee30 7b06 	vadd.f64	d7, d0, d6
 801a100:	d00e      	beq.n	801a120 <__ieee754_rem_pio2+0x98>
 801a102:	ed9f 5b6f 	vldr	d5, [pc, #444]	@ 801a2c0 <__ieee754_rem_pio2+0x238>
 801a106:	ee37 6b05 	vadd.f64	d6, d7, d5
 801a10a:	ee37 7b46 	vsub.f64	d7, d7, d6
 801a10e:	ed84 6b00 	vstr	d6, [r4]
 801a112:	ee37 7b05 	vadd.f64	d7, d7, d5
 801a116:	f04f 30ff 	mov.w	r0, #4294967295
 801a11a:	ed84 7b02 	vstr	d7, [r4, #8]
 801a11e:	e7e3      	b.n	801a0e8 <__ieee754_rem_pio2+0x60>
 801a120:	ed9f 6b69 	vldr	d6, [pc, #420]	@ 801a2c8 <__ieee754_rem_pio2+0x240>
 801a124:	ed9f 5b6a 	vldr	d5, [pc, #424]	@ 801a2d0 <__ieee754_rem_pio2+0x248>
 801a128:	ee37 7b06 	vadd.f64	d7, d7, d6
 801a12c:	e7eb      	b.n	801a106 <__ieee754_rem_pio2+0x7e>
 801a12e:	4b74      	ldr	r3, [pc, #464]	@ (801a300 <__ieee754_rem_pio2+0x278>)
 801a130:	429e      	cmp	r6, r3
 801a132:	d870      	bhi.n	801a216 <__ieee754_rem_pio2+0x18e>
 801a134:	f000 f8ec 	bl	801a310 <fabs>
 801a138:	eeb6 7b00 	vmov.f64	d7, #96	@ 0x3f000000  0.5
 801a13c:	ed9f 6b66 	vldr	d6, [pc, #408]	@ 801a2d8 <__ieee754_rem_pio2+0x250>
 801a140:	eea0 7b06 	vfma.f64	d7, d0, d6
 801a144:	eefd 7bc7 	vcvt.s32.f64	s15, d7
 801a148:	eeb8 5be7 	vcvt.f64.s32	d5, s15
 801a14c:	ee17 0a90 	vmov	r0, s15
 801a150:	eeb1 4b45 	vneg.f64	d4, d5
 801a154:	ed9f 7b58 	vldr	d7, [pc, #352]	@ 801a2b8 <__ieee754_rem_pio2+0x230>
 801a158:	eea5 0b47 	vfms.f64	d0, d5, d7
 801a15c:	ed9f 7b58 	vldr	d7, [pc, #352]	@ 801a2c0 <__ieee754_rem_pio2+0x238>
 801a160:	281f      	cmp	r0, #31
 801a162:	ee25 7b07 	vmul.f64	d7, d5, d7
 801a166:	ee30 6b47 	vsub.f64	d6, d0, d7
 801a16a:	dc05      	bgt.n	801a178 <__ieee754_rem_pio2+0xf0>
 801a16c:	4b65      	ldr	r3, [pc, #404]	@ (801a304 <__ieee754_rem_pio2+0x27c>)
 801a16e:	1e42      	subs	r2, r0, #1
 801a170:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a174:	42b3      	cmp	r3, r6
 801a176:	d109      	bne.n	801a18c <__ieee754_rem_pio2+0x104>
 801a178:	ee16 3a90 	vmov	r3, s13
 801a17c:	f3c3 530a 	ubfx	r3, r3, #20, #11
 801a180:	ebc3 5316 	rsb	r3, r3, r6, lsr #20
 801a184:	2b10      	cmp	r3, #16
 801a186:	ea4f 5226 	mov.w	r2, r6, asr #20
 801a18a:	dc02      	bgt.n	801a192 <__ieee754_rem_pio2+0x10a>
 801a18c:	ed84 6b00 	vstr	d6, [r4]
 801a190:	e01a      	b.n	801a1c8 <__ieee754_rem_pio2+0x140>
 801a192:	ed9f 3b4d 	vldr	d3, [pc, #308]	@ 801a2c8 <__ieee754_rem_pio2+0x240>
 801a196:	eeb0 6b40 	vmov.f64	d6, d0
 801a19a:	eea4 6b03 	vfma.f64	d6, d4, d3
 801a19e:	ee30 7b46 	vsub.f64	d7, d0, d6
 801a1a2:	eea4 7b03 	vfma.f64	d7, d4, d3
 801a1a6:	ed9f 3b4a 	vldr	d3, [pc, #296]	@ 801a2d0 <__ieee754_rem_pio2+0x248>
 801a1aa:	ee95 7b03 	vfnms.f64	d7, d5, d3
 801a1ae:	ee36 3b47 	vsub.f64	d3, d6, d7
 801a1b2:	ee13 3a90 	vmov	r3, s7
 801a1b6:	f3c3 530a 	ubfx	r3, r3, #20, #11
 801a1ba:	1ad3      	subs	r3, r2, r3
 801a1bc:	2b31      	cmp	r3, #49	@ 0x31
 801a1be:	dc17      	bgt.n	801a1f0 <__ieee754_rem_pio2+0x168>
 801a1c0:	eeb0 0b46 	vmov.f64	d0, d6
 801a1c4:	ed84 3b00 	vstr	d3, [r4]
 801a1c8:	ed94 6b00 	vldr	d6, [r4]
 801a1cc:	2d00      	cmp	r5, #0
 801a1ce:	ee30 0b46 	vsub.f64	d0, d0, d6
 801a1d2:	ee30 0b47 	vsub.f64	d0, d0, d7
 801a1d6:	ed84 0b02 	vstr	d0, [r4, #8]
 801a1da:	da85      	bge.n	801a0e8 <__ieee754_rem_pio2+0x60>
 801a1dc:	eeb1 6b46 	vneg.f64	d6, d6
 801a1e0:	eeb1 0b40 	vneg.f64	d0, d0
 801a1e4:	ed84 6b00 	vstr	d6, [r4]
 801a1e8:	ed84 0b02 	vstr	d0, [r4, #8]
 801a1ec:	4240      	negs	r0, r0
 801a1ee:	e77b      	b.n	801a0e8 <__ieee754_rem_pio2+0x60>
 801a1f0:	ed9f 7b3b 	vldr	d7, [pc, #236]	@ 801a2e0 <__ieee754_rem_pio2+0x258>
 801a1f4:	eeb0 0b46 	vmov.f64	d0, d6
 801a1f8:	eea4 0b07 	vfma.f64	d0, d4, d7
 801a1fc:	ee36 6b40 	vsub.f64	d6, d6, d0
 801a200:	eea4 6b07 	vfma.f64	d6, d4, d7
 801a204:	ed9f 4b38 	vldr	d4, [pc, #224]	@ 801a2e8 <__ieee754_rem_pio2+0x260>
 801a208:	eeb0 7b46 	vmov.f64	d7, d6
 801a20c:	ee95 7b04 	vfnms.f64	d7, d5, d4
 801a210:	ee30 6b47 	vsub.f64	d6, d0, d7
 801a214:	e7ba      	b.n	801a18c <__ieee754_rem_pio2+0x104>
 801a216:	4b3c      	ldr	r3, [pc, #240]	@ (801a308 <__ieee754_rem_pio2+0x280>)
 801a218:	429e      	cmp	r6, r3
 801a21a:	d906      	bls.n	801a22a <__ieee754_rem_pio2+0x1a2>
 801a21c:	ee30 7b40 	vsub.f64	d7, d0, d0
 801a220:	ed80 7b02 	vstr	d7, [r0, #8]
 801a224:	ed80 7b00 	vstr	d7, [r0]
 801a228:	e740      	b.n	801a0ac <__ieee754_rem_pio2+0x24>
 801a22a:	ee10 3a10 	vmov	r3, s0
 801a22e:	1532      	asrs	r2, r6, #20
 801a230:	f2a2 4216 	subw	r2, r2, #1046	@ 0x416
 801a234:	4618      	mov	r0, r3
 801a236:	eba6 5102 	sub.w	r1, r6, r2, lsl #20
 801a23a:	ec41 0b17 	vmov	d7, r0, r1
 801a23e:	eebd 6bc7 	vcvt.s32.f64	s12, d7
 801a242:	ed9f 5b2b 	vldr	d5, [pc, #172]	@ 801a2f0 <__ieee754_rem_pio2+0x268>
 801a246:	eeb8 6bc6 	vcvt.f64.s32	d6, s12
 801a24a:	ee37 7b46 	vsub.f64	d7, d7, d6
 801a24e:	ed8d 6b02 	vstr	d6, [sp, #8]
 801a252:	ee27 7b05 	vmul.f64	d7, d7, d5
 801a256:	eebd 6bc7 	vcvt.s32.f64	s12, d7
 801a25a:	a808      	add	r0, sp, #32
 801a25c:	eeb8 6bc6 	vcvt.f64.s32	d6, s12
 801a260:	ee37 7b46 	vsub.f64	d7, d7, d6
 801a264:	ed8d 6b04 	vstr	d6, [sp, #16]
 801a268:	ee27 7b05 	vmul.f64	d7, d7, d5
 801a26c:	ed8d 7b06 	vstr	d7, [sp, #24]
 801a270:	2103      	movs	r1, #3
 801a272:	ed30 7b02 	vldmdb	r0!, {d7}
 801a276:	eeb5 7b40 	vcmp.f64	d7, #0.0
 801a27a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a27e:	460b      	mov	r3, r1
 801a280:	f101 31ff 	add.w	r1, r1, #4294967295
 801a284:	d0f5      	beq.n	801a272 <__ieee754_rem_pio2+0x1ea>
 801a286:	4921      	ldr	r1, [pc, #132]	@ (801a30c <__ieee754_rem_pio2+0x284>)
 801a288:	9101      	str	r1, [sp, #4]
 801a28a:	2102      	movs	r1, #2
 801a28c:	9100      	str	r1, [sp, #0]
 801a28e:	a802      	add	r0, sp, #8
 801a290:	4621      	mov	r1, r4
 801a292:	f000 f845 	bl	801a320 <__kernel_rem_pio2>
 801a296:	2d00      	cmp	r5, #0
 801a298:	f6bf af26 	bge.w	801a0e8 <__ieee754_rem_pio2+0x60>
 801a29c:	ed94 7b00 	vldr	d7, [r4]
 801a2a0:	eeb1 7b47 	vneg.f64	d7, d7
 801a2a4:	ed84 7b00 	vstr	d7, [r4]
 801a2a8:	ed94 7b02 	vldr	d7, [r4, #8]
 801a2ac:	eeb1 7b47 	vneg.f64	d7, d7
 801a2b0:	ed84 7b02 	vstr	d7, [r4, #8]
 801a2b4:	e79a      	b.n	801a1ec <__ieee754_rem_pio2+0x164>
 801a2b6:	bf00      	nop
 801a2b8:	54400000 	.word	0x54400000
 801a2bc:	3ff921fb 	.word	0x3ff921fb
 801a2c0:	1a626331 	.word	0x1a626331
 801a2c4:	3dd0b461 	.word	0x3dd0b461
 801a2c8:	1a600000 	.word	0x1a600000
 801a2cc:	3dd0b461 	.word	0x3dd0b461
 801a2d0:	2e037073 	.word	0x2e037073
 801a2d4:	3ba3198a 	.word	0x3ba3198a
 801a2d8:	6dc9c883 	.word	0x6dc9c883
 801a2dc:	3fe45f30 	.word	0x3fe45f30
 801a2e0:	2e000000 	.word	0x2e000000
 801a2e4:	3ba3198a 	.word	0x3ba3198a
 801a2e8:	252049c1 	.word	0x252049c1
 801a2ec:	397b839a 	.word	0x397b839a
 801a2f0:	00000000 	.word	0x00000000
 801a2f4:	41700000 	.word	0x41700000
 801a2f8:	3fe921fb 	.word	0x3fe921fb
 801a2fc:	4002d97b 	.word	0x4002d97b
 801a300:	413921fb 	.word	0x413921fb
 801a304:	0801b5e8 	.word	0x0801b5e8
 801a308:	7fefffff 	.word	0x7fefffff
 801a30c:	0801b668 	.word	0x0801b668

0801a310 <fabs>:
 801a310:	ec51 0b10 	vmov	r0, r1, d0
 801a314:	4602      	mov	r2, r0
 801a316:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 801a31a:	ec43 2b10 	vmov	d0, r2, r3
 801a31e:	4770      	bx	lr

0801a320 <__kernel_rem_pio2>:
 801a320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a324:	ed2d 8b06 	vpush	{d8-d10}
 801a328:	f5ad 7d13 	sub.w	sp, sp, #588	@ 0x24c
 801a32c:	469b      	mov	fp, r3
 801a32e:	9001      	str	r0, [sp, #4]
 801a330:	4bbb      	ldr	r3, [pc, #748]	@ (801a620 <__kernel_rem_pio2+0x300>)
 801a332:	98a2      	ldr	r0, [sp, #648]	@ 0x288
 801a334:	f8dd 828c 	ldr.w	r8, [sp, #652]	@ 0x28c
 801a338:	f853 9020 	ldr.w	r9, [r3, r0, lsl #2]
 801a33c:	f112 0f14 	cmn.w	r2, #20
 801a340:	bfa8      	it	ge
 801a342:	1ed3      	subge	r3, r2, #3
 801a344:	f10b 3aff 	add.w	sl, fp, #4294967295
 801a348:	bfb8      	it	lt
 801a34a:	2300      	movlt	r3, #0
 801a34c:	f06f 0517 	mvn.w	r5, #23
 801a350:	ed9f 6bad 	vldr	d6, [pc, #692]	@ 801a608 <__kernel_rem_pio2+0x2e8>
 801a354:	bfa4      	itt	ge
 801a356:	2018      	movge	r0, #24
 801a358:	fb93 f3f0 	sdivge	r3, r3, r0
 801a35c:	fb03 5505 	mla	r5, r3, r5, r5
 801a360:	eba3 040a 	sub.w	r4, r3, sl
 801a364:	4415      	add	r5, r2
 801a366:	460f      	mov	r7, r1
 801a368:	eb09 060a 	add.w	r6, r9, sl
 801a36c:	a81a      	add	r0, sp, #104	@ 0x68
 801a36e:	eb08 0c84 	add.w	ip, r8, r4, lsl #2
 801a372:	2200      	movs	r2, #0
 801a374:	42b2      	cmp	r2, r6
 801a376:	dd0e      	ble.n	801a396 <__kernel_rem_pio2+0x76>
 801a378:	aa1a      	add	r2, sp, #104	@ 0x68
 801a37a:	eb02 02cb 	add.w	r2, r2, fp, lsl #3
 801a37e:	f50d 7ed4 	add.w	lr, sp, #424	@ 0x1a8
 801a382:	2600      	movs	r6, #0
 801a384:	454e      	cmp	r6, r9
 801a386:	dc25      	bgt.n	801a3d4 <__kernel_rem_pio2+0xb4>
 801a388:	ed9f 7b9f 	vldr	d7, [pc, #636]	@ 801a608 <__kernel_rem_pio2+0x2e8>
 801a38c:	f8dd c004 	ldr.w	ip, [sp, #4]
 801a390:	4614      	mov	r4, r2
 801a392:	2000      	movs	r0, #0
 801a394:	e015      	b.n	801a3c2 <__kernel_rem_pio2+0xa2>
 801a396:	42d4      	cmn	r4, r2
 801a398:	d409      	bmi.n	801a3ae <__kernel_rem_pio2+0x8e>
 801a39a:	f85c 1022 	ldr.w	r1, [ip, r2, lsl #2]
 801a39e:	ee07 1a90 	vmov	s15, r1
 801a3a2:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 801a3a6:	eca0 7b02 	vstmia	r0!, {d7}
 801a3aa:	3201      	adds	r2, #1
 801a3ac:	e7e2      	b.n	801a374 <__kernel_rem_pio2+0x54>
 801a3ae:	eeb0 7b46 	vmov.f64	d7, d6
 801a3b2:	e7f8      	b.n	801a3a6 <__kernel_rem_pio2+0x86>
 801a3b4:	ecbc 5b02 	vldmia	ip!, {d5}
 801a3b8:	ed94 6b00 	vldr	d6, [r4]
 801a3bc:	3001      	adds	r0, #1
 801a3be:	eea5 7b06 	vfma.f64	d7, d5, d6
 801a3c2:	4550      	cmp	r0, sl
 801a3c4:	f1a4 0408 	sub.w	r4, r4, #8
 801a3c8:	ddf4      	ble.n	801a3b4 <__kernel_rem_pio2+0x94>
 801a3ca:	ecae 7b02 	vstmia	lr!, {d7}
 801a3ce:	3601      	adds	r6, #1
 801a3d0:	3208      	adds	r2, #8
 801a3d2:	e7d7      	b.n	801a384 <__kernel_rem_pio2+0x64>
 801a3d4:	aa06      	add	r2, sp, #24
 801a3d6:	ed9f 9b8e 	vldr	d9, [pc, #568]	@ 801a610 <__kernel_rem_pio2+0x2f0>
 801a3da:	ed9f ab8f 	vldr	d10, [pc, #572]	@ 801a618 <__kernel_rem_pio2+0x2f8>
 801a3de:	eb02 0289 	add.w	r2, r2, r9, lsl #2
 801a3e2:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 801a3e6:	9203      	str	r2, [sp, #12]
 801a3e8:	9302      	str	r3, [sp, #8]
 801a3ea:	464c      	mov	r4, r9
 801a3ec:	00e3      	lsls	r3, r4, #3
 801a3ee:	9304      	str	r3, [sp, #16]
 801a3f0:	ab92      	add	r3, sp, #584	@ 0x248
 801a3f2:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801a3f6:	ed13 0b28 	vldr	d0, [r3, #-160]	@ 0xffffff60
 801a3fa:	aa6a      	add	r2, sp, #424	@ 0x1a8
 801a3fc:	ab06      	add	r3, sp, #24
 801a3fe:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 801a402:	461e      	mov	r6, r3
 801a404:	4620      	mov	r0, r4
 801a406:	2800      	cmp	r0, #0
 801a408:	f1a2 0208 	sub.w	r2, r2, #8
 801a40c:	dc4a      	bgt.n	801a4a4 <__kernel_rem_pio2+0x184>
 801a40e:	4628      	mov	r0, r5
 801a410:	9305      	str	r3, [sp, #20]
 801a412:	f000 fa01 	bl	801a818 <scalbn>
 801a416:	eeb0 8b40 	vmov.f64	d8, d0
 801a41a:	eeb4 0b00 	vmov.f64	d0, #64	@ 0x3e000000  0.125
 801a41e:	ee28 0b00 	vmul.f64	d0, d8, d0
 801a422:	f000 fa79 	bl	801a918 <floor>
 801a426:	eeb2 7b00 	vmov.f64	d7, #32	@ 0x41000000  8.0
 801a42a:	eea0 8b47 	vfms.f64	d8, d0, d7
 801a42e:	eefd 7bc8 	vcvt.s32.f64	s15, d8
 801a432:	2d00      	cmp	r5, #0
 801a434:	ee17 8a90 	vmov	r8, s15
 801a438:	9b05      	ldr	r3, [sp, #20]
 801a43a:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 801a43e:	ee38 8b47 	vsub.f64	d8, d8, d7
 801a442:	dd41      	ble.n	801a4c8 <__kernel_rem_pio2+0x1a8>
 801a444:	1e60      	subs	r0, r4, #1
 801a446:	aa06      	add	r2, sp, #24
 801a448:	f1c5 0c18 	rsb	ip, r5, #24
 801a44c:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
 801a450:	fa46 f20c 	asr.w	r2, r6, ip
 801a454:	4490      	add	r8, r2
 801a456:	fa02 f20c 	lsl.w	r2, r2, ip
 801a45a:	1ab6      	subs	r6, r6, r2
 801a45c:	aa06      	add	r2, sp, #24
 801a45e:	f842 6020 	str.w	r6, [r2, r0, lsl #2]
 801a462:	f1c5 0217 	rsb	r2, r5, #23
 801a466:	4116      	asrs	r6, r2
 801a468:	2e00      	cmp	r6, #0
 801a46a:	dd3c      	ble.n	801a4e6 <__kernel_rem_pio2+0x1c6>
 801a46c:	f04f 0c00 	mov.w	ip, #0
 801a470:	f108 0801 	add.w	r8, r8, #1
 801a474:	4660      	mov	r0, ip
 801a476:	f06f 4e7f 	mvn.w	lr, #4278190080	@ 0xff000000
 801a47a:	4564      	cmp	r4, ip
 801a47c:	dc66      	bgt.n	801a54c <__kernel_rem_pio2+0x22c>
 801a47e:	2d00      	cmp	r5, #0
 801a480:	dd03      	ble.n	801a48a <__kernel_rem_pio2+0x16a>
 801a482:	2d01      	cmp	r5, #1
 801a484:	d072      	beq.n	801a56c <__kernel_rem_pio2+0x24c>
 801a486:	2d02      	cmp	r5, #2
 801a488:	d07a      	beq.n	801a580 <__kernel_rem_pio2+0x260>
 801a48a:	2e02      	cmp	r6, #2
 801a48c:	d12b      	bne.n	801a4e6 <__kernel_rem_pio2+0x1c6>
 801a48e:	eeb7 0b00 	vmov.f64	d0, #112	@ 0x3f800000  1.0
 801a492:	ee30 8b48 	vsub.f64	d8, d0, d8
 801a496:	b330      	cbz	r0, 801a4e6 <__kernel_rem_pio2+0x1c6>
 801a498:	4628      	mov	r0, r5
 801a49a:	f000 f9bd 	bl	801a818 <scalbn>
 801a49e:	ee38 8b40 	vsub.f64	d8, d8, d0
 801a4a2:	e020      	b.n	801a4e6 <__kernel_rem_pio2+0x1c6>
 801a4a4:	ee20 7b09 	vmul.f64	d7, d0, d9
 801a4a8:	eebd 7bc7 	vcvt.s32.f64	s14, d7
 801a4ac:	3801      	subs	r0, #1
 801a4ae:	eeb8 7bc7 	vcvt.f64.s32	d7, s14
 801a4b2:	eea7 0b4a 	vfms.f64	d0, d7, d10
 801a4b6:	eebd 0bc0 	vcvt.s32.f64	s0, d0
 801a4ba:	eca6 0a01 	vstmia	r6!, {s0}
 801a4be:	ed92 0b00 	vldr	d0, [r2]
 801a4c2:	ee37 0b00 	vadd.f64	d0, d7, d0
 801a4c6:	e79e      	b.n	801a406 <__kernel_rem_pio2+0xe6>
 801a4c8:	d105      	bne.n	801a4d6 <__kernel_rem_pio2+0x1b6>
 801a4ca:	1e62      	subs	r2, r4, #1
 801a4cc:	a906      	add	r1, sp, #24
 801a4ce:	f851 6022 	ldr.w	r6, [r1, r2, lsl #2]
 801a4d2:	15f6      	asrs	r6, r6, #23
 801a4d4:	e7c8      	b.n	801a468 <__kernel_rem_pio2+0x148>
 801a4d6:	eeb6 7b00 	vmov.f64	d7, #96	@ 0x3f000000  0.5
 801a4da:	eeb4 8bc7 	vcmpe.f64	d8, d7
 801a4de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4e2:	da31      	bge.n	801a548 <__kernel_rem_pio2+0x228>
 801a4e4:	2600      	movs	r6, #0
 801a4e6:	eeb5 8b40 	vcmp.f64	d8, #0.0
 801a4ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4ee:	f040 809b 	bne.w	801a628 <__kernel_rem_pio2+0x308>
 801a4f2:	1e62      	subs	r2, r4, #1
 801a4f4:	2000      	movs	r0, #0
 801a4f6:	454a      	cmp	r2, r9
 801a4f8:	da49      	bge.n	801a58e <__kernel_rem_pio2+0x26e>
 801a4fa:	2800      	cmp	r0, #0
 801a4fc:	d062      	beq.n	801a5c4 <__kernel_rem_pio2+0x2a4>
 801a4fe:	3c01      	subs	r4, #1
 801a500:	ab06      	add	r3, sp, #24
 801a502:	3d18      	subs	r5, #24
 801a504:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 801a508:	2b00      	cmp	r3, #0
 801a50a:	d0f8      	beq.n	801a4fe <__kernel_rem_pio2+0x1de>
 801a50c:	eeb7 0b00 	vmov.f64	d0, #112	@ 0x3f800000  1.0
 801a510:	4628      	mov	r0, r5
 801a512:	f000 f981 	bl	801a818 <scalbn>
 801a516:	ed9f 6b3e 	vldr	d6, [pc, #248]	@ 801a610 <__kernel_rem_pio2+0x2f0>
 801a51a:	1c62      	adds	r2, r4, #1
 801a51c:	a96a      	add	r1, sp, #424	@ 0x1a8
 801a51e:	00d3      	lsls	r3, r2, #3
 801a520:	eb01 01c2 	add.w	r1, r1, r2, lsl #3
 801a524:	4622      	mov	r2, r4
 801a526:	2a00      	cmp	r2, #0
 801a528:	f280 80a8 	bge.w	801a67c <__kernel_rem_pio2+0x35c>
 801a52c:	4622      	mov	r2, r4
 801a52e:	2a00      	cmp	r2, #0
 801a530:	f2c0 80c6 	blt.w	801a6c0 <__kernel_rem_pio2+0x3a0>
 801a534:	a96a      	add	r1, sp, #424	@ 0x1a8
 801a536:	eb01 05c2 	add.w	r5, r1, r2, lsl #3
 801a53a:	ed9f 7b33 	vldr	d7, [pc, #204]	@ 801a608 <__kernel_rem_pio2+0x2e8>
 801a53e:	f8df c0e4 	ldr.w	ip, [pc, #228]	@ 801a624 <__kernel_rem_pio2+0x304>
 801a542:	2000      	movs	r0, #0
 801a544:	1aa1      	subs	r1, r4, r2
 801a546:	e0b0      	b.n	801a6aa <__kernel_rem_pio2+0x38a>
 801a548:	2602      	movs	r6, #2
 801a54a:	e78f      	b.n	801a46c <__kernel_rem_pio2+0x14c>
 801a54c:	f853 2b04 	ldr.w	r2, [r3], #4
 801a550:	b948      	cbnz	r0, 801a566 <__kernel_rem_pio2+0x246>
 801a552:	b122      	cbz	r2, 801a55e <__kernel_rem_pio2+0x23e>
 801a554:	f1c2 7280 	rsb	r2, r2, #16777216	@ 0x1000000
 801a558:	f843 2c04 	str.w	r2, [r3, #-4]
 801a55c:	2201      	movs	r2, #1
 801a55e:	f10c 0c01 	add.w	ip, ip, #1
 801a562:	4610      	mov	r0, r2
 801a564:	e789      	b.n	801a47a <__kernel_rem_pio2+0x15a>
 801a566:	ebae 0202 	sub.w	r2, lr, r2
 801a56a:	e7f5      	b.n	801a558 <__kernel_rem_pio2+0x238>
 801a56c:	1e62      	subs	r2, r4, #1
 801a56e:	ab06      	add	r3, sp, #24
 801a570:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a574:	f3c3 0316 	ubfx	r3, r3, #0, #23
 801a578:	a906      	add	r1, sp, #24
 801a57a:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 801a57e:	e784      	b.n	801a48a <__kernel_rem_pio2+0x16a>
 801a580:	1e62      	subs	r2, r4, #1
 801a582:	ab06      	add	r3, sp, #24
 801a584:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a588:	f3c3 0315 	ubfx	r3, r3, #0, #22
 801a58c:	e7f4      	b.n	801a578 <__kernel_rem_pio2+0x258>
 801a58e:	ab06      	add	r3, sp, #24
 801a590:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a594:	3a01      	subs	r2, #1
 801a596:	4318      	orrs	r0, r3
 801a598:	e7ad      	b.n	801a4f6 <__kernel_rem_pio2+0x1d6>
 801a59a:	3301      	adds	r3, #1
 801a59c:	f852 0d04 	ldr.w	r0, [r2, #-4]!
 801a5a0:	2800      	cmp	r0, #0
 801a5a2:	d0fa      	beq.n	801a59a <__kernel_rem_pio2+0x27a>
 801a5a4:	9a04      	ldr	r2, [sp, #16]
 801a5a6:	f502 7212 	add.w	r2, r2, #584	@ 0x248
 801a5aa:	446a      	add	r2, sp
 801a5ac:	eb04 000b 	add.w	r0, r4, fp
 801a5b0:	a91a      	add	r1, sp, #104	@ 0x68
 801a5b2:	1c66      	adds	r6, r4, #1
 801a5b4:	3a98      	subs	r2, #152	@ 0x98
 801a5b6:	eb01 00c0 	add.w	r0, r1, r0, lsl #3
 801a5ba:	4423      	add	r3, r4
 801a5bc:	42b3      	cmp	r3, r6
 801a5be:	da04      	bge.n	801a5ca <__kernel_rem_pio2+0x2aa>
 801a5c0:	461c      	mov	r4, r3
 801a5c2:	e713      	b.n	801a3ec <__kernel_rem_pio2+0xcc>
 801a5c4:	9a03      	ldr	r2, [sp, #12]
 801a5c6:	2301      	movs	r3, #1
 801a5c8:	e7e8      	b.n	801a59c <__kernel_rem_pio2+0x27c>
 801a5ca:	9902      	ldr	r1, [sp, #8]
 801a5cc:	f8dd c004 	ldr.w	ip, [sp, #4]
 801a5d0:	f851 1026 	ldr.w	r1, [r1, r6, lsl #2]
 801a5d4:	9104      	str	r1, [sp, #16]
 801a5d6:	ee07 1a90 	vmov	s15, r1
 801a5da:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 801a5de:	2400      	movs	r4, #0
 801a5e0:	eca0 7b02 	vstmia	r0!, {d7}
 801a5e4:	ed9f 7b08 	vldr	d7, [pc, #32]	@ 801a608 <__kernel_rem_pio2+0x2e8>
 801a5e8:	4686      	mov	lr, r0
 801a5ea:	4554      	cmp	r4, sl
 801a5ec:	dd03      	ble.n	801a5f6 <__kernel_rem_pio2+0x2d6>
 801a5ee:	eca2 7b02 	vstmia	r2!, {d7}
 801a5f2:	3601      	adds	r6, #1
 801a5f4:	e7e2      	b.n	801a5bc <__kernel_rem_pio2+0x29c>
 801a5f6:	ecbc 5b02 	vldmia	ip!, {d5}
 801a5fa:	ed3e 6b02 	vldmdb	lr!, {d6}
 801a5fe:	3401      	adds	r4, #1
 801a600:	eea5 7b06 	vfma.f64	d7, d5, d6
 801a604:	e7f1      	b.n	801a5ea <__kernel_rem_pio2+0x2ca>
 801a606:	bf00      	nop
	...
 801a614:	3e700000 	.word	0x3e700000
 801a618:	00000000 	.word	0x00000000
 801a61c:	41700000 	.word	0x41700000
 801a620:	0801b7b0 	.word	0x0801b7b0
 801a624:	0801b770 	.word	0x0801b770
 801a628:	4268      	negs	r0, r5
 801a62a:	eeb0 0b48 	vmov.f64	d0, d8
 801a62e:	f000 f8f3 	bl	801a818 <scalbn>
 801a632:	ed9f 6b73 	vldr	d6, [pc, #460]	@ 801a800 <__kernel_rem_pio2+0x4e0>
 801a636:	eeb4 0bc6 	vcmpe.f64	d0, d6
 801a63a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a63e:	db17      	blt.n	801a670 <__kernel_rem_pio2+0x350>
 801a640:	ed9f 7b71 	vldr	d7, [pc, #452]	@ 801a808 <__kernel_rem_pio2+0x4e8>
 801a644:	ee20 7b07 	vmul.f64	d7, d0, d7
 801a648:	eebd 7bc7 	vcvt.s32.f64	s14, d7
 801a64c:	aa06      	add	r2, sp, #24
 801a64e:	eeb8 5bc7 	vcvt.f64.s32	d5, s14
 801a652:	eea5 0b46 	vfms.f64	d0, d5, d6
 801a656:	eebd 0bc0 	vcvt.s32.f64	s0, d0
 801a65a:	3518      	adds	r5, #24
 801a65c:	ee10 3a10 	vmov	r3, s0
 801a660:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 801a664:	ee17 3a10 	vmov	r3, s14
 801a668:	3401      	adds	r4, #1
 801a66a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 801a66e:	e74d      	b.n	801a50c <__kernel_rem_pio2+0x1ec>
 801a670:	eebd 0bc0 	vcvt.s32.f64	s0, d0
 801a674:	aa06      	add	r2, sp, #24
 801a676:	ee10 3a10 	vmov	r3, s0
 801a67a:	e7f6      	b.n	801a66a <__kernel_rem_pio2+0x34a>
 801a67c:	a806      	add	r0, sp, #24
 801a67e:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 801a682:	9001      	str	r0, [sp, #4]
 801a684:	ee07 0a90 	vmov	s15, r0
 801a688:	3a01      	subs	r2, #1
 801a68a:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 801a68e:	ee27 7b00 	vmul.f64	d7, d7, d0
 801a692:	ee20 0b06 	vmul.f64	d0, d0, d6
 801a696:	ed21 7b02 	vstmdb	r1!, {d7}
 801a69a:	e744      	b.n	801a526 <__kernel_rem_pio2+0x206>
 801a69c:	ecbc 5b02 	vldmia	ip!, {d5}
 801a6a0:	ecb5 6b02 	vldmia	r5!, {d6}
 801a6a4:	3001      	adds	r0, #1
 801a6a6:	eea5 7b06 	vfma.f64	d7, d5, d6
 801a6aa:	4548      	cmp	r0, r9
 801a6ac:	dc01      	bgt.n	801a6b2 <__kernel_rem_pio2+0x392>
 801a6ae:	4281      	cmp	r1, r0
 801a6b0:	daf4      	bge.n	801a69c <__kernel_rem_pio2+0x37c>
 801a6b2:	a842      	add	r0, sp, #264	@ 0x108
 801a6b4:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801a6b8:	ed81 7b00 	vstr	d7, [r1]
 801a6bc:	3a01      	subs	r2, #1
 801a6be:	e736      	b.n	801a52e <__kernel_rem_pio2+0x20e>
 801a6c0:	9aa2      	ldr	r2, [sp, #648]	@ 0x288
 801a6c2:	2a02      	cmp	r2, #2
 801a6c4:	dc0a      	bgt.n	801a6dc <__kernel_rem_pio2+0x3bc>
 801a6c6:	2a00      	cmp	r2, #0
 801a6c8:	dc2d      	bgt.n	801a726 <__kernel_rem_pio2+0x406>
 801a6ca:	d046      	beq.n	801a75a <__kernel_rem_pio2+0x43a>
 801a6cc:	f008 0007 	and.w	r0, r8, #7
 801a6d0:	f50d 7d13 	add.w	sp, sp, #588	@ 0x24c
 801a6d4:	ecbd 8b06 	vpop	{d8-d10}
 801a6d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a6dc:	9aa2      	ldr	r2, [sp, #648]	@ 0x288
 801a6de:	2a03      	cmp	r2, #3
 801a6e0:	d1f4      	bne.n	801a6cc <__kernel_rem_pio2+0x3ac>
 801a6e2:	a942      	add	r1, sp, #264	@ 0x108
 801a6e4:	f1a3 0208 	sub.w	r2, r3, #8
 801a6e8:	440a      	add	r2, r1
 801a6ea:	4611      	mov	r1, r2
 801a6ec:	4620      	mov	r0, r4
 801a6ee:	2800      	cmp	r0, #0
 801a6f0:	f1a1 0108 	sub.w	r1, r1, #8
 801a6f4:	dc52      	bgt.n	801a79c <__kernel_rem_pio2+0x47c>
 801a6f6:	4621      	mov	r1, r4
 801a6f8:	2901      	cmp	r1, #1
 801a6fa:	f1a2 0208 	sub.w	r2, r2, #8
 801a6fe:	dc5d      	bgt.n	801a7bc <__kernel_rem_pio2+0x49c>
 801a700:	ed9f 7b43 	vldr	d7, [pc, #268]	@ 801a810 <__kernel_rem_pio2+0x4f0>
 801a704:	aa42      	add	r2, sp, #264	@ 0x108
 801a706:	4413      	add	r3, r2
 801a708:	2c01      	cmp	r4, #1
 801a70a:	dc67      	bgt.n	801a7dc <__kernel_rem_pio2+0x4bc>
 801a70c:	ed9d 5b42 	vldr	d5, [sp, #264]	@ 0x108
 801a710:	ed9d 6b44 	vldr	d6, [sp, #272]	@ 0x110
 801a714:	2e00      	cmp	r6, #0
 801a716:	d167      	bne.n	801a7e8 <__kernel_rem_pio2+0x4c8>
 801a718:	ed87 5b00 	vstr	d5, [r7]
 801a71c:	ed87 6b02 	vstr	d6, [r7, #8]
 801a720:	ed87 7b04 	vstr	d7, [r7, #16]
 801a724:	e7d2      	b.n	801a6cc <__kernel_rem_pio2+0x3ac>
 801a726:	ed9f 6b3a 	vldr	d6, [pc, #232]	@ 801a810 <__kernel_rem_pio2+0x4f0>
 801a72a:	aa42      	add	r2, sp, #264	@ 0x108
 801a72c:	4413      	add	r3, r2
 801a72e:	4622      	mov	r2, r4
 801a730:	2a00      	cmp	r2, #0
 801a732:	da24      	bge.n	801a77e <__kernel_rem_pio2+0x45e>
 801a734:	b34e      	cbz	r6, 801a78a <__kernel_rem_pio2+0x46a>
 801a736:	eeb1 7b46 	vneg.f64	d7, d6
 801a73a:	ed87 7b00 	vstr	d7, [r7]
 801a73e:	ed9d 7b42 	vldr	d7, [sp, #264]	@ 0x108
 801a742:	aa44      	add	r2, sp, #272	@ 0x110
 801a744:	2301      	movs	r3, #1
 801a746:	ee37 7b46 	vsub.f64	d7, d7, d6
 801a74a:	429c      	cmp	r4, r3
 801a74c:	da20      	bge.n	801a790 <__kernel_rem_pio2+0x470>
 801a74e:	b10e      	cbz	r6, 801a754 <__kernel_rem_pio2+0x434>
 801a750:	eeb1 7b47 	vneg.f64	d7, d7
 801a754:	ed87 7b02 	vstr	d7, [r7, #8]
 801a758:	e7b8      	b.n	801a6cc <__kernel_rem_pio2+0x3ac>
 801a75a:	ed9f 7b2d 	vldr	d7, [pc, #180]	@ 801a810 <__kernel_rem_pio2+0x4f0>
 801a75e:	aa42      	add	r2, sp, #264	@ 0x108
 801a760:	4413      	add	r3, r2
 801a762:	2c00      	cmp	r4, #0
 801a764:	da05      	bge.n	801a772 <__kernel_rem_pio2+0x452>
 801a766:	b10e      	cbz	r6, 801a76c <__kernel_rem_pio2+0x44c>
 801a768:	eeb1 7b47 	vneg.f64	d7, d7
 801a76c:	ed87 7b00 	vstr	d7, [r7]
 801a770:	e7ac      	b.n	801a6cc <__kernel_rem_pio2+0x3ac>
 801a772:	ed33 6b02 	vldmdb	r3!, {d6}
 801a776:	3c01      	subs	r4, #1
 801a778:	ee37 7b06 	vadd.f64	d7, d7, d6
 801a77c:	e7f1      	b.n	801a762 <__kernel_rem_pio2+0x442>
 801a77e:	ed33 7b02 	vldmdb	r3!, {d7}
 801a782:	3a01      	subs	r2, #1
 801a784:	ee36 6b07 	vadd.f64	d6, d6, d7
 801a788:	e7d2      	b.n	801a730 <__kernel_rem_pio2+0x410>
 801a78a:	eeb0 7b46 	vmov.f64	d7, d6
 801a78e:	e7d4      	b.n	801a73a <__kernel_rem_pio2+0x41a>
 801a790:	ecb2 6b02 	vldmia	r2!, {d6}
 801a794:	3301      	adds	r3, #1
 801a796:	ee37 7b06 	vadd.f64	d7, d7, d6
 801a79a:	e7d6      	b.n	801a74a <__kernel_rem_pio2+0x42a>
 801a79c:	ed91 7b00 	vldr	d7, [r1]
 801a7a0:	ed91 5b02 	vldr	d5, [r1, #8]
 801a7a4:	3801      	subs	r0, #1
 801a7a6:	ee37 6b05 	vadd.f64	d6, d7, d5
 801a7aa:	ee37 7b46 	vsub.f64	d7, d7, d6
 801a7ae:	ed81 6b00 	vstr	d6, [r1]
 801a7b2:	ee37 7b05 	vadd.f64	d7, d7, d5
 801a7b6:	ed81 7b02 	vstr	d7, [r1, #8]
 801a7ba:	e798      	b.n	801a6ee <__kernel_rem_pio2+0x3ce>
 801a7bc:	ed92 7b00 	vldr	d7, [r2]
 801a7c0:	ed92 5b02 	vldr	d5, [r2, #8]
 801a7c4:	3901      	subs	r1, #1
 801a7c6:	ee37 6b05 	vadd.f64	d6, d7, d5
 801a7ca:	ee37 7b46 	vsub.f64	d7, d7, d6
 801a7ce:	ed82 6b00 	vstr	d6, [r2]
 801a7d2:	ee37 7b05 	vadd.f64	d7, d7, d5
 801a7d6:	ed82 7b02 	vstr	d7, [r2, #8]
 801a7da:	e78d      	b.n	801a6f8 <__kernel_rem_pio2+0x3d8>
 801a7dc:	ed33 6b02 	vldmdb	r3!, {d6}
 801a7e0:	3c01      	subs	r4, #1
 801a7e2:	ee37 7b06 	vadd.f64	d7, d7, d6
 801a7e6:	e78f      	b.n	801a708 <__kernel_rem_pio2+0x3e8>
 801a7e8:	eeb1 5b45 	vneg.f64	d5, d5
 801a7ec:	eeb1 6b46 	vneg.f64	d6, d6
 801a7f0:	ed87 5b00 	vstr	d5, [r7]
 801a7f4:	eeb1 7b47 	vneg.f64	d7, d7
 801a7f8:	ed87 6b02 	vstr	d6, [r7, #8]
 801a7fc:	e790      	b.n	801a720 <__kernel_rem_pio2+0x400>
 801a7fe:	bf00      	nop
 801a800:	00000000 	.word	0x00000000
 801a804:	41700000 	.word	0x41700000
 801a808:	00000000 	.word	0x00000000
 801a80c:	3e700000 	.word	0x3e700000
	...

0801a818 <scalbn>:
 801a818:	ee10 1a90 	vmov	r1, s1
 801a81c:	f3c1 530a 	ubfx	r3, r1, #20, #11
 801a820:	b98b      	cbnz	r3, 801a846 <scalbn+0x2e>
 801a822:	ee10 3a10 	vmov	r3, s0
 801a826:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 801a82a:	4319      	orrs	r1, r3
 801a82c:	d00a      	beq.n	801a844 <scalbn+0x2c>
 801a82e:	ed9f 7b2c 	vldr	d7, [pc, #176]	@ 801a8e0 <scalbn+0xc8>
 801a832:	4b37      	ldr	r3, [pc, #220]	@ (801a910 <scalbn+0xf8>)
 801a834:	ee20 0b07 	vmul.f64	d0, d0, d7
 801a838:	4298      	cmp	r0, r3
 801a83a:	da0b      	bge.n	801a854 <scalbn+0x3c>
 801a83c:	ed9f 7b2a 	vldr	d7, [pc, #168]	@ 801a8e8 <scalbn+0xd0>
 801a840:	ee20 0b07 	vmul.f64	d0, d0, d7
 801a844:	4770      	bx	lr
 801a846:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 801a84a:	4293      	cmp	r3, r2
 801a84c:	d107      	bne.n	801a85e <scalbn+0x46>
 801a84e:	ee30 0b00 	vadd.f64	d0, d0, d0
 801a852:	4770      	bx	lr
 801a854:	ee10 1a90 	vmov	r1, s1
 801a858:	f3c1 530a 	ubfx	r3, r1, #20, #11
 801a85c:	3b36      	subs	r3, #54	@ 0x36
 801a85e:	f24c 3250 	movw	r2, #50000	@ 0xc350
 801a862:	4290      	cmp	r0, r2
 801a864:	dd0d      	ble.n	801a882 <scalbn+0x6a>
 801a866:	ed9f 7b22 	vldr	d7, [pc, #136]	@ 801a8f0 <scalbn+0xd8>
 801a86a:	ee10 3a90 	vmov	r3, s1
 801a86e:	eeb0 6b47 	vmov.f64	d6, d7
 801a872:	ed9f 5b21 	vldr	d5, [pc, #132]	@ 801a8f8 <scalbn+0xe0>
 801a876:	2b00      	cmp	r3, #0
 801a878:	fe27 7b05 	vselge.f64	d7, d7, d5
 801a87c:	ee27 0b06 	vmul.f64	d0, d7, d6
 801a880:	4770      	bx	lr
 801a882:	4418      	add	r0, r3
 801a884:	f240 73fe 	movw	r3, #2046	@ 0x7fe
 801a888:	4298      	cmp	r0, r3
 801a88a:	dcec      	bgt.n	801a866 <scalbn+0x4e>
 801a88c:	2800      	cmp	r0, #0
 801a88e:	dd0a      	ble.n	801a8a6 <scalbn+0x8e>
 801a890:	f021 41ff 	bic.w	r1, r1, #2139095040	@ 0x7f800000
 801a894:	ec53 2b10 	vmov	r2, r3, d0
 801a898:	f421 01e0 	bic.w	r1, r1, #7340032	@ 0x700000
 801a89c:	ea41 5300 	orr.w	r3, r1, r0, lsl #20
 801a8a0:	ec43 2b10 	vmov	d0, r2, r3
 801a8a4:	4770      	bx	lr
 801a8a6:	f110 0f35 	cmn.w	r0, #53	@ 0x35
 801a8aa:	da09      	bge.n	801a8c0 <scalbn+0xa8>
 801a8ac:	ed9f 7b0e 	vldr	d7, [pc, #56]	@ 801a8e8 <scalbn+0xd0>
 801a8b0:	ee10 3a90 	vmov	r3, s1
 801a8b4:	eeb0 6b47 	vmov.f64	d6, d7
 801a8b8:	ed9f 5b11 	vldr	d5, [pc, #68]	@ 801a900 <scalbn+0xe8>
 801a8bc:	2b00      	cmp	r3, #0
 801a8be:	e7db      	b.n	801a878 <scalbn+0x60>
 801a8c0:	f021 41ff 	bic.w	r1, r1, #2139095040	@ 0x7f800000
 801a8c4:	ec53 2b10 	vmov	r2, r3, d0
 801a8c8:	3036      	adds	r0, #54	@ 0x36
 801a8ca:	f421 01e0 	bic.w	r1, r1, #7340032	@ 0x700000
 801a8ce:	ea41 5300 	orr.w	r3, r1, r0, lsl #20
 801a8d2:	ed9f 7b0d 	vldr	d7, [pc, #52]	@ 801a908 <scalbn+0xf0>
 801a8d6:	ec43 2b10 	vmov	d0, r2, r3
 801a8da:	e7b1      	b.n	801a840 <scalbn+0x28>
 801a8dc:	f3af 8000 	nop.w
 801a8e0:	00000000 	.word	0x00000000
 801a8e4:	43500000 	.word	0x43500000
 801a8e8:	c2f8f359 	.word	0xc2f8f359
 801a8ec:	01a56e1f 	.word	0x01a56e1f
 801a8f0:	8800759c 	.word	0x8800759c
 801a8f4:	7e37e43c 	.word	0x7e37e43c
 801a8f8:	8800759c 	.word	0x8800759c
 801a8fc:	fe37e43c 	.word	0xfe37e43c
 801a900:	c2f8f359 	.word	0xc2f8f359
 801a904:	81a56e1f 	.word	0x81a56e1f
 801a908:	00000000 	.word	0x00000000
 801a90c:	3c900000 	.word	0x3c900000
 801a910:	ffff3cb0 	.word	0xffff3cb0
 801a914:	00000000 	.word	0x00000000

0801a918 <floor>:
 801a918:	ee10 3a90 	vmov	r3, s1
 801a91c:	f3c3 500a 	ubfx	r0, r3, #20, #11
 801a920:	ee10 2a10 	vmov	r2, s0
 801a924:	f2a0 31ff 	subw	r1, r0, #1023	@ 0x3ff
 801a928:	2913      	cmp	r1, #19
 801a92a:	b530      	push	{r4, r5, lr}
 801a92c:	4615      	mov	r5, r2
 801a92e:	dc33      	bgt.n	801a998 <floor+0x80>
 801a930:	2900      	cmp	r1, #0
 801a932:	da18      	bge.n	801a966 <floor+0x4e>
 801a934:	ed9f 7b30 	vldr	d7, [pc, #192]	@ 801a9f8 <floor+0xe0>
 801a938:	ee30 0b07 	vadd.f64	d0, d0, d7
 801a93c:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
 801a940:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a944:	dd0a      	ble.n	801a95c <floor+0x44>
 801a946:	2b00      	cmp	r3, #0
 801a948:	da50      	bge.n	801a9ec <floor+0xd4>
 801a94a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 801a94e:	4313      	orrs	r3, r2
 801a950:	2200      	movs	r2, #0
 801a952:	4293      	cmp	r3, r2
 801a954:	4b2a      	ldr	r3, [pc, #168]	@ (801aa00 <floor+0xe8>)
 801a956:	bf08      	it	eq
 801a958:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 801a95c:	4619      	mov	r1, r3
 801a95e:	4610      	mov	r0, r2
 801a960:	ec41 0b10 	vmov	d0, r0, r1
 801a964:	e01f      	b.n	801a9a6 <floor+0x8e>
 801a966:	4827      	ldr	r0, [pc, #156]	@ (801aa04 <floor+0xec>)
 801a968:	4108      	asrs	r0, r1
 801a96a:	ea03 0400 	and.w	r4, r3, r0
 801a96e:	4314      	orrs	r4, r2
 801a970:	d019      	beq.n	801a9a6 <floor+0x8e>
 801a972:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 801a9f8 <floor+0xe0>
 801a976:	ee30 0b07 	vadd.f64	d0, d0, d7
 801a97a:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
 801a97e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a982:	ddeb      	ble.n	801a95c <floor+0x44>
 801a984:	2b00      	cmp	r3, #0
 801a986:	bfbe      	ittt	lt
 801a988:	f44f 1280 	movlt.w	r2, #1048576	@ 0x100000
 801a98c:	410a      	asrlt	r2, r1
 801a98e:	189b      	addlt	r3, r3, r2
 801a990:	ea23 0300 	bic.w	r3, r3, r0
 801a994:	2200      	movs	r2, #0
 801a996:	e7e1      	b.n	801a95c <floor+0x44>
 801a998:	2933      	cmp	r1, #51	@ 0x33
 801a99a:	dd05      	ble.n	801a9a8 <floor+0x90>
 801a99c:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 801a9a0:	d101      	bne.n	801a9a6 <floor+0x8e>
 801a9a2:	ee30 0b00 	vadd.f64	d0, d0, d0
 801a9a6:	bd30      	pop	{r4, r5, pc}
 801a9a8:	f2a0 4413 	subw	r4, r0, #1043	@ 0x413
 801a9ac:	f04f 30ff 	mov.w	r0, #4294967295
 801a9b0:	40e0      	lsrs	r0, r4
 801a9b2:	4210      	tst	r0, r2
 801a9b4:	d0f7      	beq.n	801a9a6 <floor+0x8e>
 801a9b6:	ed9f 7b10 	vldr	d7, [pc, #64]	@ 801a9f8 <floor+0xe0>
 801a9ba:	ee30 0b07 	vadd.f64	d0, d0, d7
 801a9be:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
 801a9c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9c6:	ddc9      	ble.n	801a95c <floor+0x44>
 801a9c8:	2b00      	cmp	r3, #0
 801a9ca:	da02      	bge.n	801a9d2 <floor+0xba>
 801a9cc:	2914      	cmp	r1, #20
 801a9ce:	d103      	bne.n	801a9d8 <floor+0xc0>
 801a9d0:	3301      	adds	r3, #1
 801a9d2:	ea22 0200 	bic.w	r2, r2, r0
 801a9d6:	e7c1      	b.n	801a95c <floor+0x44>
 801a9d8:	2401      	movs	r4, #1
 801a9da:	f1c1 0134 	rsb	r1, r1, #52	@ 0x34
 801a9de:	fa04 f101 	lsl.w	r1, r4, r1
 801a9e2:	440a      	add	r2, r1
 801a9e4:	42aa      	cmp	r2, r5
 801a9e6:	bf38      	it	cc
 801a9e8:	191b      	addcc	r3, r3, r4
 801a9ea:	e7f2      	b.n	801a9d2 <floor+0xba>
 801a9ec:	2200      	movs	r2, #0
 801a9ee:	4613      	mov	r3, r2
 801a9f0:	e7b4      	b.n	801a95c <floor+0x44>
 801a9f2:	bf00      	nop
 801a9f4:	f3af 8000 	nop.w
 801a9f8:	8800759c 	.word	0x8800759c
 801a9fc:	7e37e43c 	.word	0x7e37e43c
 801aa00:	bff00000 	.word	0xbff00000
 801aa04:	000fffff 	.word	0x000fffff

0801aa08 <_init>:
 801aa08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801aa0a:	bf00      	nop
 801aa0c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801aa0e:	bc08      	pop	{r3}
 801aa10:	469e      	mov	lr, r3
 801aa12:	4770      	bx	lr

0801aa14 <_fini>:
 801aa14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801aa16:	bf00      	nop
 801aa18:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801aa1a:	bc08      	pop	{r3}
 801aa1c:	469e      	mov	lr, r3
 801aa1e:	4770      	bx	lr
