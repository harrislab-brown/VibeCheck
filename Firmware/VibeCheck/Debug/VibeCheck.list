
VibeCheck.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000002cc  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001a758  080002d0  080002d0  000012d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000da0  0801aa28  0801aa28  0001ba28  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  0801b7c8  0801b7c8  0001c7c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  0801b7d0  0801b7d0  0001c7d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .fini_array   00000004  0801b7d4  0801b7d4  0001c7d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .data         000002cc  24000000  0801b7d8  0001d000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00005fa8  240002cc  0801baa4  0001d2cc  2**2
                  ALLOC
  8 ._user_heap_stack 00000604  24006274  0801baa4  0001e274  2**0
                  ALLOC
  9 .ARM.attributes 0000002e  00000000  00000000  0001d2cc  2**0
                  CONTENTS, READONLY
 10 .debug_info   00035d79  00000000  00000000  0001d2fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 00006c71  00000000  00000000  00053073  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 00002758  00000000  00000000  00059ce8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_rnglists 00001e85  00000000  00000000  0005c440  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_macro  0000b574  00000000  00000000  0005e2c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line   0003b197  00000000  00000000  00069839  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str    001720dd  00000000  00000000  000a49d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .comment      00000043  00000000  00000000  00216aad  2**0
                  CONTENTS, READONLY
 18 .debug_frame  0000bdf8  00000000  00000000  00216af0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000072  00000000  00000000  002228e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002d0 <__do_global_dtors_aux>:
 80002d0:	b510      	push	{r4, lr}
 80002d2:	4c05      	ldr	r4, [pc, #20]	@ (80002e8 <__do_global_dtors_aux+0x18>)
 80002d4:	7823      	ldrb	r3, [r4, #0]
 80002d6:	b933      	cbnz	r3, 80002e6 <__do_global_dtors_aux+0x16>
 80002d8:	4b04      	ldr	r3, [pc, #16]	@ (80002ec <__do_global_dtors_aux+0x1c>)
 80002da:	b113      	cbz	r3, 80002e2 <__do_global_dtors_aux+0x12>
 80002dc:	4804      	ldr	r0, [pc, #16]	@ (80002f0 <__do_global_dtors_aux+0x20>)
 80002de:	f3af 8000 	nop.w
 80002e2:	2301      	movs	r3, #1
 80002e4:	7023      	strb	r3, [r4, #0]
 80002e6:	bd10      	pop	{r4, pc}
 80002e8:	240002cc 	.word	0x240002cc
 80002ec:	00000000 	.word	0x00000000
 80002f0:	0801aa10 	.word	0x0801aa10

080002f4 <frame_dummy>:
 80002f4:	b508      	push	{r3, lr}
 80002f6:	4b03      	ldr	r3, [pc, #12]	@ (8000304 <frame_dummy+0x10>)
 80002f8:	b11b      	cbz	r3, 8000302 <frame_dummy+0xe>
 80002fa:	4903      	ldr	r1, [pc, #12]	@ (8000308 <frame_dummy+0x14>)
 80002fc:	4803      	ldr	r0, [pc, #12]	@ (800030c <frame_dummy+0x18>)
 80002fe:	f3af 8000 	nop.w
 8000302:	bd08      	pop	{r3, pc}
 8000304:	00000000 	.word	0x00000000
 8000308:	240002d0 	.word	0x240002d0
 800030c:	0801aa10 	.word	0x0801aa10

08000310 <strcmp>:
 8000310:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000314:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000318:	2a01      	cmp	r2, #1
 800031a:	bf28      	it	cs
 800031c:	429a      	cmpcs	r2, r3
 800031e:	d0f7      	beq.n	8000310 <strcmp>
 8000320:	1ad0      	subs	r0, r2, r3
 8000322:	4770      	bx	lr
	...

08000330 <memchr>:
 8000330:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000334:	2a10      	cmp	r2, #16
 8000336:	db2b      	blt.n	8000390 <memchr+0x60>
 8000338:	f010 0f07 	tst.w	r0, #7
 800033c:	d008      	beq.n	8000350 <memchr+0x20>
 800033e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000342:	3a01      	subs	r2, #1
 8000344:	428b      	cmp	r3, r1
 8000346:	d02d      	beq.n	80003a4 <memchr+0x74>
 8000348:	f010 0f07 	tst.w	r0, #7
 800034c:	b342      	cbz	r2, 80003a0 <memchr+0x70>
 800034e:	d1f6      	bne.n	800033e <memchr+0xe>
 8000350:	b4f0      	push	{r4, r5, r6, r7}
 8000352:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000356:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800035a:	f022 0407 	bic.w	r4, r2, #7
 800035e:	f07f 0700 	mvns.w	r7, #0
 8000362:	2300      	movs	r3, #0
 8000364:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000368:	3c08      	subs	r4, #8
 800036a:	ea85 0501 	eor.w	r5, r5, r1
 800036e:	ea86 0601 	eor.w	r6, r6, r1
 8000372:	fa85 f547 	uadd8	r5, r5, r7
 8000376:	faa3 f587 	sel	r5, r3, r7
 800037a:	fa86 f647 	uadd8	r6, r6, r7
 800037e:	faa5 f687 	sel	r6, r5, r7
 8000382:	b98e      	cbnz	r6, 80003a8 <memchr+0x78>
 8000384:	d1ee      	bne.n	8000364 <memchr+0x34>
 8000386:	bcf0      	pop	{r4, r5, r6, r7}
 8000388:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800038c:	f002 0207 	and.w	r2, r2, #7
 8000390:	b132      	cbz	r2, 80003a0 <memchr+0x70>
 8000392:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000396:	3a01      	subs	r2, #1
 8000398:	ea83 0301 	eor.w	r3, r3, r1
 800039c:	b113      	cbz	r3, 80003a4 <memchr+0x74>
 800039e:	d1f8      	bne.n	8000392 <memchr+0x62>
 80003a0:	2000      	movs	r0, #0
 80003a2:	4770      	bx	lr
 80003a4:	3801      	subs	r0, #1
 80003a6:	4770      	bx	lr
 80003a8:	2d00      	cmp	r5, #0
 80003aa:	bf06      	itte	eq
 80003ac:	4635      	moveq	r5, r6
 80003ae:	3803      	subeq	r0, #3
 80003b0:	3807      	subne	r0, #7
 80003b2:	f015 0f01 	tst.w	r5, #1
 80003b6:	d107      	bne.n	80003c8 <memchr+0x98>
 80003b8:	3001      	adds	r0, #1
 80003ba:	f415 7f80 	tst.w	r5, #256	@ 0x100
 80003be:	bf02      	ittt	eq
 80003c0:	3001      	addeq	r0, #1
 80003c2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80003c6:	3001      	addeq	r0, #1
 80003c8:	bcf0      	pop	{r4, r5, r6, r7}
 80003ca:	3801      	subs	r0, #1
 80003cc:	4770      	bx	lr
 80003ce:	bf00      	nop

080003d0 <strlen>:
 80003d0:	4603      	mov	r3, r0
 80003d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80003d6:	2a00      	cmp	r2, #0
 80003d8:	d1fb      	bne.n	80003d2 <strlen+0x2>
 80003da:	1a18      	subs	r0, r3, r0
 80003dc:	3801      	subs	r0, #1
 80003de:	4770      	bx	lr

080003e0 <__aeabi_drsub>:
 80003e0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80003e4:	e002      	b.n	80003ec <__adddf3>
 80003e6:	bf00      	nop

080003e8 <__aeabi_dsub>:
 80003e8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080003ec <__adddf3>:
 80003ec:	b530      	push	{r4, r5, lr}
 80003ee:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80003f2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80003f6:	ea94 0f05 	teq	r4, r5
 80003fa:	bf08      	it	eq
 80003fc:	ea90 0f02 	teqeq	r0, r2
 8000400:	bf1f      	itttt	ne
 8000402:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000406:	ea55 0c02 	orrsne.w	ip, r5, r2
 800040a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800040e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000412:	f000 80e2 	beq.w	80005da <__adddf3+0x1ee>
 8000416:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800041a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800041e:	bfb8      	it	lt
 8000420:	426d      	neglt	r5, r5
 8000422:	dd0c      	ble.n	800043e <__adddf3+0x52>
 8000424:	442c      	add	r4, r5
 8000426:	ea80 0202 	eor.w	r2, r0, r2
 800042a:	ea81 0303 	eor.w	r3, r1, r3
 800042e:	ea82 0000 	eor.w	r0, r2, r0
 8000432:	ea83 0101 	eor.w	r1, r3, r1
 8000436:	ea80 0202 	eor.w	r2, r0, r2
 800043a:	ea81 0303 	eor.w	r3, r1, r3
 800043e:	2d36      	cmp	r5, #54	@ 0x36
 8000440:	bf88      	it	hi
 8000442:	bd30      	pophi	{r4, r5, pc}
 8000444:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000448:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800044c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000450:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000454:	d002      	beq.n	800045c <__adddf3+0x70>
 8000456:	4240      	negs	r0, r0
 8000458:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800045c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000460:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000464:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000468:	d002      	beq.n	8000470 <__adddf3+0x84>
 800046a:	4252      	negs	r2, r2
 800046c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000470:	ea94 0f05 	teq	r4, r5
 8000474:	f000 80a7 	beq.w	80005c6 <__adddf3+0x1da>
 8000478:	f1a4 0401 	sub.w	r4, r4, #1
 800047c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000480:	db0d      	blt.n	800049e <__adddf3+0xb2>
 8000482:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000486:	fa22 f205 	lsr.w	r2, r2, r5
 800048a:	1880      	adds	r0, r0, r2
 800048c:	f141 0100 	adc.w	r1, r1, #0
 8000490:	fa03 f20e 	lsl.w	r2, r3, lr
 8000494:	1880      	adds	r0, r0, r2
 8000496:	fa43 f305 	asr.w	r3, r3, r5
 800049a:	4159      	adcs	r1, r3
 800049c:	e00e      	b.n	80004bc <__adddf3+0xd0>
 800049e:	f1a5 0520 	sub.w	r5, r5, #32
 80004a2:	f10e 0e20 	add.w	lr, lr, #32
 80004a6:	2a01      	cmp	r2, #1
 80004a8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80004ac:	bf28      	it	cs
 80004ae:	f04c 0c02 	orrcs.w	ip, ip, #2
 80004b2:	fa43 f305 	asr.w	r3, r3, r5
 80004b6:	18c0      	adds	r0, r0, r3
 80004b8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80004bc:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004c0:	d507      	bpl.n	80004d2 <__adddf3+0xe6>
 80004c2:	f04f 0e00 	mov.w	lr, #0
 80004c6:	f1dc 0c00 	rsbs	ip, ip, #0
 80004ca:	eb7e 0000 	sbcs.w	r0, lr, r0
 80004ce:	eb6e 0101 	sbc.w	r1, lr, r1
 80004d2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80004d6:	d31b      	bcc.n	8000510 <__adddf3+0x124>
 80004d8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80004dc:	d30c      	bcc.n	80004f8 <__adddf3+0x10c>
 80004de:	0849      	lsrs	r1, r1, #1
 80004e0:	ea5f 0030 	movs.w	r0, r0, rrx
 80004e4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80004e8:	f104 0401 	add.w	r4, r4, #1
 80004ec:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80004f0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80004f4:	f080 809a 	bcs.w	800062c <__adddf3+0x240>
 80004f8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80004fc:	bf08      	it	eq
 80004fe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000502:	f150 0000 	adcs.w	r0, r0, #0
 8000506:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800050a:	ea41 0105 	orr.w	r1, r1, r5
 800050e:	bd30      	pop	{r4, r5, pc}
 8000510:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000514:	4140      	adcs	r0, r0
 8000516:	eb41 0101 	adc.w	r1, r1, r1
 800051a:	3c01      	subs	r4, #1
 800051c:	bf28      	it	cs
 800051e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000522:	d2e9      	bcs.n	80004f8 <__adddf3+0x10c>
 8000524:	f091 0f00 	teq	r1, #0
 8000528:	bf04      	itt	eq
 800052a:	4601      	moveq	r1, r0
 800052c:	2000      	moveq	r0, #0
 800052e:	fab1 f381 	clz	r3, r1
 8000532:	bf08      	it	eq
 8000534:	3320      	addeq	r3, #32
 8000536:	f1a3 030b 	sub.w	r3, r3, #11
 800053a:	f1b3 0220 	subs.w	r2, r3, #32
 800053e:	da0c      	bge.n	800055a <__adddf3+0x16e>
 8000540:	320c      	adds	r2, #12
 8000542:	dd08      	ble.n	8000556 <__adddf3+0x16a>
 8000544:	f102 0c14 	add.w	ip, r2, #20
 8000548:	f1c2 020c 	rsb	r2, r2, #12
 800054c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000550:	fa21 f102 	lsr.w	r1, r1, r2
 8000554:	e00c      	b.n	8000570 <__adddf3+0x184>
 8000556:	f102 0214 	add.w	r2, r2, #20
 800055a:	bfd8      	it	le
 800055c:	f1c2 0c20 	rsble	ip, r2, #32
 8000560:	fa01 f102 	lsl.w	r1, r1, r2
 8000564:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000568:	bfdc      	itt	le
 800056a:	ea41 010c 	orrle.w	r1, r1, ip
 800056e:	4090      	lslle	r0, r2
 8000570:	1ae4      	subs	r4, r4, r3
 8000572:	bfa2      	ittt	ge
 8000574:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000578:	4329      	orrge	r1, r5
 800057a:	bd30      	popge	{r4, r5, pc}
 800057c:	ea6f 0404 	mvn.w	r4, r4
 8000580:	3c1f      	subs	r4, #31
 8000582:	da1c      	bge.n	80005be <__adddf3+0x1d2>
 8000584:	340c      	adds	r4, #12
 8000586:	dc0e      	bgt.n	80005a6 <__adddf3+0x1ba>
 8000588:	f104 0414 	add.w	r4, r4, #20
 800058c:	f1c4 0220 	rsb	r2, r4, #32
 8000590:	fa20 f004 	lsr.w	r0, r0, r4
 8000594:	fa01 f302 	lsl.w	r3, r1, r2
 8000598:	ea40 0003 	orr.w	r0, r0, r3
 800059c:	fa21 f304 	lsr.w	r3, r1, r4
 80005a0:	ea45 0103 	orr.w	r1, r5, r3
 80005a4:	bd30      	pop	{r4, r5, pc}
 80005a6:	f1c4 040c 	rsb	r4, r4, #12
 80005aa:	f1c4 0220 	rsb	r2, r4, #32
 80005ae:	fa20 f002 	lsr.w	r0, r0, r2
 80005b2:	fa01 f304 	lsl.w	r3, r1, r4
 80005b6:	ea40 0003 	orr.w	r0, r0, r3
 80005ba:	4629      	mov	r1, r5
 80005bc:	bd30      	pop	{r4, r5, pc}
 80005be:	fa21 f004 	lsr.w	r0, r1, r4
 80005c2:	4629      	mov	r1, r5
 80005c4:	bd30      	pop	{r4, r5, pc}
 80005c6:	f094 0f00 	teq	r4, #0
 80005ca:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80005ce:	bf06      	itte	eq
 80005d0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80005d4:	3401      	addeq	r4, #1
 80005d6:	3d01      	subne	r5, #1
 80005d8:	e74e      	b.n	8000478 <__adddf3+0x8c>
 80005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005de:	bf18      	it	ne
 80005e0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005e4:	d029      	beq.n	800063a <__adddf3+0x24e>
 80005e6:	ea94 0f05 	teq	r4, r5
 80005ea:	bf08      	it	eq
 80005ec:	ea90 0f02 	teqeq	r0, r2
 80005f0:	d005      	beq.n	80005fe <__adddf3+0x212>
 80005f2:	ea54 0c00 	orrs.w	ip, r4, r0
 80005f6:	bf04      	itt	eq
 80005f8:	4619      	moveq	r1, r3
 80005fa:	4610      	moveq	r0, r2
 80005fc:	bd30      	pop	{r4, r5, pc}
 80005fe:	ea91 0f03 	teq	r1, r3
 8000602:	bf1e      	ittt	ne
 8000604:	2100      	movne	r1, #0
 8000606:	2000      	movne	r0, #0
 8000608:	bd30      	popne	{r4, r5, pc}
 800060a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800060e:	d105      	bne.n	800061c <__adddf3+0x230>
 8000610:	0040      	lsls	r0, r0, #1
 8000612:	4149      	adcs	r1, r1
 8000614:	bf28      	it	cs
 8000616:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800061a:	bd30      	pop	{r4, r5, pc}
 800061c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000620:	bf3c      	itt	cc
 8000622:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000626:	bd30      	popcc	{r4, r5, pc}
 8000628:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800062c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000630:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000634:	f04f 0000 	mov.w	r0, #0
 8000638:	bd30      	pop	{r4, r5, pc}
 800063a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800063e:	bf1a      	itte	ne
 8000640:	4619      	movne	r1, r3
 8000642:	4610      	movne	r0, r2
 8000644:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000648:	bf1c      	itt	ne
 800064a:	460b      	movne	r3, r1
 800064c:	4602      	movne	r2, r0
 800064e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000652:	bf06      	itte	eq
 8000654:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000658:	ea91 0f03 	teqeq	r1, r3
 800065c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000660:	bd30      	pop	{r4, r5, pc}
 8000662:	bf00      	nop

08000664 <__aeabi_ui2d>:
 8000664:	f090 0f00 	teq	r0, #0
 8000668:	bf04      	itt	eq
 800066a:	2100      	moveq	r1, #0
 800066c:	4770      	bxeq	lr
 800066e:	b530      	push	{r4, r5, lr}
 8000670:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000674:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000678:	f04f 0500 	mov.w	r5, #0
 800067c:	f04f 0100 	mov.w	r1, #0
 8000680:	e750      	b.n	8000524 <__adddf3+0x138>
 8000682:	bf00      	nop

08000684 <__aeabi_i2d>:
 8000684:	f090 0f00 	teq	r0, #0
 8000688:	bf04      	itt	eq
 800068a:	2100      	moveq	r1, #0
 800068c:	4770      	bxeq	lr
 800068e:	b530      	push	{r4, r5, lr}
 8000690:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000694:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000698:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800069c:	bf48      	it	mi
 800069e:	4240      	negmi	r0, r0
 80006a0:	f04f 0100 	mov.w	r1, #0
 80006a4:	e73e      	b.n	8000524 <__adddf3+0x138>
 80006a6:	bf00      	nop

080006a8 <__aeabi_f2d>:
 80006a8:	0042      	lsls	r2, r0, #1
 80006aa:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80006ae:	ea4f 0131 	mov.w	r1, r1, rrx
 80006b2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80006b6:	bf1f      	itttt	ne
 80006b8:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80006bc:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80006c0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80006c4:	4770      	bxne	lr
 80006c6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80006ca:	bf08      	it	eq
 80006cc:	4770      	bxeq	lr
 80006ce:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80006d2:	bf04      	itt	eq
 80006d4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80006d8:	4770      	bxeq	lr
 80006da:	b530      	push	{r4, r5, lr}
 80006dc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80006e0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80006e4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80006e8:	e71c      	b.n	8000524 <__adddf3+0x138>
 80006ea:	bf00      	nop

080006ec <__aeabi_ul2d>:
 80006ec:	ea50 0201 	orrs.w	r2, r0, r1
 80006f0:	bf08      	it	eq
 80006f2:	4770      	bxeq	lr
 80006f4:	b530      	push	{r4, r5, lr}
 80006f6:	f04f 0500 	mov.w	r5, #0
 80006fa:	e00a      	b.n	8000712 <__aeabi_l2d+0x16>

080006fc <__aeabi_l2d>:
 80006fc:	ea50 0201 	orrs.w	r2, r0, r1
 8000700:	bf08      	it	eq
 8000702:	4770      	bxeq	lr
 8000704:	b530      	push	{r4, r5, lr}
 8000706:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800070a:	d502      	bpl.n	8000712 <__aeabi_l2d+0x16>
 800070c:	4240      	negs	r0, r0
 800070e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000712:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000716:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800071a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800071e:	f43f aed8 	beq.w	80004d2 <__adddf3+0xe6>
 8000722:	f04f 0203 	mov.w	r2, #3
 8000726:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800072a:	bf18      	it	ne
 800072c:	3203      	addne	r2, #3
 800072e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000732:	bf18      	it	ne
 8000734:	3203      	addne	r2, #3
 8000736:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800073a:	f1c2 0320 	rsb	r3, r2, #32
 800073e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000742:	fa20 f002 	lsr.w	r0, r0, r2
 8000746:	fa01 fe03 	lsl.w	lr, r1, r3
 800074a:	ea40 000e 	orr.w	r0, r0, lr
 800074e:	fa21 f102 	lsr.w	r1, r1, r2
 8000752:	4414      	add	r4, r2
 8000754:	e6bd      	b.n	80004d2 <__adddf3+0xe6>
 8000756:	bf00      	nop

08000758 <__aeabi_uldivmod>:
 8000758:	b953      	cbnz	r3, 8000770 <__aeabi_uldivmod+0x18>
 800075a:	b94a      	cbnz	r2, 8000770 <__aeabi_uldivmod+0x18>
 800075c:	2900      	cmp	r1, #0
 800075e:	bf08      	it	eq
 8000760:	2800      	cmpeq	r0, #0
 8000762:	bf1c      	itt	ne
 8000764:	f04f 31ff 	movne.w	r1, #4294967295
 8000768:	f04f 30ff 	movne.w	r0, #4294967295
 800076c:	f000 b9a2 	b.w	8000ab4 <__aeabi_idiv0>
 8000770:	f1ad 0c08 	sub.w	ip, sp, #8
 8000774:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000778:	f000 f83e 	bl	80007f8 <__udivmoddi4>
 800077c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000780:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000784:	b004      	add	sp, #16
 8000786:	4770      	bx	lr

08000788 <__aeabi_d2lz>:
 8000788:	b508      	push	{r3, lr}
 800078a:	4602      	mov	r2, r0
 800078c:	460b      	mov	r3, r1
 800078e:	ec43 2b17 	vmov	d7, r2, r3
 8000792:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 8000796:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800079a:	d403      	bmi.n	80007a4 <__aeabi_d2lz+0x1c>
 800079c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80007a0:	f000 b80a 	b.w	80007b8 <__aeabi_d2ulz>
 80007a4:	eeb1 7b47 	vneg.f64	d7, d7
 80007a8:	ec51 0b17 	vmov	r0, r1, d7
 80007ac:	f000 f804 	bl	80007b8 <__aeabi_d2ulz>
 80007b0:	4240      	negs	r0, r0
 80007b2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80007b6:	bd08      	pop	{r3, pc}

080007b8 <__aeabi_d2ulz>:
 80007b8:	ed9f 6b0b 	vldr	d6, [pc, #44]	@ 80007e8 <__aeabi_d2ulz+0x30>
 80007bc:	ec41 0b17 	vmov	d7, r0, r1
 80007c0:	ed9f 5b0b 	vldr	d5, [pc, #44]	@ 80007f0 <__aeabi_d2ulz+0x38>
 80007c4:	ee27 6b06 	vmul.f64	d6, d7, d6
 80007c8:	eebc 6bc6 	vcvt.u32.f64	s12, d6
 80007cc:	eeb8 4b46 	vcvt.f64.u32	d4, s12
 80007d0:	eea4 7b45 	vfms.f64	d7, d4, d5
 80007d4:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80007d8:	ee16 1a10 	vmov	r1, s12
 80007dc:	ee17 0a90 	vmov	r0, s15
 80007e0:	4770      	bx	lr
 80007e2:	bf00      	nop
 80007e4:	f3af 8000 	nop.w
 80007e8:	00000000 	.word	0x00000000
 80007ec:	3df00000 	.word	0x3df00000
 80007f0:	00000000 	.word	0x00000000
 80007f4:	41f00000 	.word	0x41f00000

080007f8 <__udivmoddi4>:
 80007f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80007fc:	9d08      	ldr	r5, [sp, #32]
 80007fe:	460c      	mov	r4, r1
 8000800:	2b00      	cmp	r3, #0
 8000802:	d14e      	bne.n	80008a2 <__udivmoddi4+0xaa>
 8000804:	4694      	mov	ip, r2
 8000806:	458c      	cmp	ip, r1
 8000808:	4686      	mov	lr, r0
 800080a:	fab2 f282 	clz	r2, r2
 800080e:	d962      	bls.n	80008d6 <__udivmoddi4+0xde>
 8000810:	b14a      	cbz	r2, 8000826 <__udivmoddi4+0x2e>
 8000812:	f1c2 0320 	rsb	r3, r2, #32
 8000816:	4091      	lsls	r1, r2
 8000818:	fa20 f303 	lsr.w	r3, r0, r3
 800081c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000820:	4319      	orrs	r1, r3
 8000822:	fa00 fe02 	lsl.w	lr, r0, r2
 8000826:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800082a:	fa1f f68c 	uxth.w	r6, ip
 800082e:	fbb1 f4f7 	udiv	r4, r1, r7
 8000832:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000836:	fb07 1114 	mls	r1, r7, r4, r1
 800083a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800083e:	fb04 f106 	mul.w	r1, r4, r6
 8000842:	4299      	cmp	r1, r3
 8000844:	d90a      	bls.n	800085c <__udivmoddi4+0x64>
 8000846:	eb1c 0303 	adds.w	r3, ip, r3
 800084a:	f104 30ff 	add.w	r0, r4, #4294967295
 800084e:	f080 8112 	bcs.w	8000a76 <__udivmoddi4+0x27e>
 8000852:	4299      	cmp	r1, r3
 8000854:	f240 810f 	bls.w	8000a76 <__udivmoddi4+0x27e>
 8000858:	3c02      	subs	r4, #2
 800085a:	4463      	add	r3, ip
 800085c:	1a59      	subs	r1, r3, r1
 800085e:	fa1f f38e 	uxth.w	r3, lr
 8000862:	fbb1 f0f7 	udiv	r0, r1, r7
 8000866:	fb07 1110 	mls	r1, r7, r0, r1
 800086a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800086e:	fb00 f606 	mul.w	r6, r0, r6
 8000872:	429e      	cmp	r6, r3
 8000874:	d90a      	bls.n	800088c <__udivmoddi4+0x94>
 8000876:	eb1c 0303 	adds.w	r3, ip, r3
 800087a:	f100 31ff 	add.w	r1, r0, #4294967295
 800087e:	f080 80fc 	bcs.w	8000a7a <__udivmoddi4+0x282>
 8000882:	429e      	cmp	r6, r3
 8000884:	f240 80f9 	bls.w	8000a7a <__udivmoddi4+0x282>
 8000888:	4463      	add	r3, ip
 800088a:	3802      	subs	r0, #2
 800088c:	1b9b      	subs	r3, r3, r6
 800088e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000892:	2100      	movs	r1, #0
 8000894:	b11d      	cbz	r5, 800089e <__udivmoddi4+0xa6>
 8000896:	40d3      	lsrs	r3, r2
 8000898:	2200      	movs	r2, #0
 800089a:	e9c5 3200 	strd	r3, r2, [r5]
 800089e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80008a2:	428b      	cmp	r3, r1
 80008a4:	d905      	bls.n	80008b2 <__udivmoddi4+0xba>
 80008a6:	b10d      	cbz	r5, 80008ac <__udivmoddi4+0xb4>
 80008a8:	e9c5 0100 	strd	r0, r1, [r5]
 80008ac:	2100      	movs	r1, #0
 80008ae:	4608      	mov	r0, r1
 80008b0:	e7f5      	b.n	800089e <__udivmoddi4+0xa6>
 80008b2:	fab3 f183 	clz	r1, r3
 80008b6:	2900      	cmp	r1, #0
 80008b8:	d146      	bne.n	8000948 <__udivmoddi4+0x150>
 80008ba:	42a3      	cmp	r3, r4
 80008bc:	d302      	bcc.n	80008c4 <__udivmoddi4+0xcc>
 80008be:	4290      	cmp	r0, r2
 80008c0:	f0c0 80f0 	bcc.w	8000aa4 <__udivmoddi4+0x2ac>
 80008c4:	1a86      	subs	r6, r0, r2
 80008c6:	eb64 0303 	sbc.w	r3, r4, r3
 80008ca:	2001      	movs	r0, #1
 80008cc:	2d00      	cmp	r5, #0
 80008ce:	d0e6      	beq.n	800089e <__udivmoddi4+0xa6>
 80008d0:	e9c5 6300 	strd	r6, r3, [r5]
 80008d4:	e7e3      	b.n	800089e <__udivmoddi4+0xa6>
 80008d6:	2a00      	cmp	r2, #0
 80008d8:	f040 8090 	bne.w	80009fc <__udivmoddi4+0x204>
 80008dc:	eba1 040c 	sub.w	r4, r1, ip
 80008e0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80008e4:	fa1f f78c 	uxth.w	r7, ip
 80008e8:	2101      	movs	r1, #1
 80008ea:	fbb4 f6f8 	udiv	r6, r4, r8
 80008ee:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80008f2:	fb08 4416 	mls	r4, r8, r6, r4
 80008f6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80008fa:	fb07 f006 	mul.w	r0, r7, r6
 80008fe:	4298      	cmp	r0, r3
 8000900:	d908      	bls.n	8000914 <__udivmoddi4+0x11c>
 8000902:	eb1c 0303 	adds.w	r3, ip, r3
 8000906:	f106 34ff 	add.w	r4, r6, #4294967295
 800090a:	d202      	bcs.n	8000912 <__udivmoddi4+0x11a>
 800090c:	4298      	cmp	r0, r3
 800090e:	f200 80cd 	bhi.w	8000aac <__udivmoddi4+0x2b4>
 8000912:	4626      	mov	r6, r4
 8000914:	1a1c      	subs	r4, r3, r0
 8000916:	fa1f f38e 	uxth.w	r3, lr
 800091a:	fbb4 f0f8 	udiv	r0, r4, r8
 800091e:	fb08 4410 	mls	r4, r8, r0, r4
 8000922:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000926:	fb00 f707 	mul.w	r7, r0, r7
 800092a:	429f      	cmp	r7, r3
 800092c:	d908      	bls.n	8000940 <__udivmoddi4+0x148>
 800092e:	eb1c 0303 	adds.w	r3, ip, r3
 8000932:	f100 34ff 	add.w	r4, r0, #4294967295
 8000936:	d202      	bcs.n	800093e <__udivmoddi4+0x146>
 8000938:	429f      	cmp	r7, r3
 800093a:	f200 80b0 	bhi.w	8000a9e <__udivmoddi4+0x2a6>
 800093e:	4620      	mov	r0, r4
 8000940:	1bdb      	subs	r3, r3, r7
 8000942:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000946:	e7a5      	b.n	8000894 <__udivmoddi4+0x9c>
 8000948:	f1c1 0620 	rsb	r6, r1, #32
 800094c:	408b      	lsls	r3, r1
 800094e:	fa22 f706 	lsr.w	r7, r2, r6
 8000952:	431f      	orrs	r7, r3
 8000954:	fa20 fc06 	lsr.w	ip, r0, r6
 8000958:	fa04 f301 	lsl.w	r3, r4, r1
 800095c:	ea43 030c 	orr.w	r3, r3, ip
 8000960:	40f4      	lsrs	r4, r6
 8000962:	fa00 f801 	lsl.w	r8, r0, r1
 8000966:	0c38      	lsrs	r0, r7, #16
 8000968:	ea4f 4913 	mov.w	r9, r3, lsr #16
 800096c:	fbb4 fef0 	udiv	lr, r4, r0
 8000970:	fa1f fc87 	uxth.w	ip, r7
 8000974:	fb00 441e 	mls	r4, r0, lr, r4
 8000978:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800097c:	fb0e f90c 	mul.w	r9, lr, ip
 8000980:	45a1      	cmp	r9, r4
 8000982:	fa02 f201 	lsl.w	r2, r2, r1
 8000986:	d90a      	bls.n	800099e <__udivmoddi4+0x1a6>
 8000988:	193c      	adds	r4, r7, r4
 800098a:	f10e 3aff 	add.w	sl, lr, #4294967295
 800098e:	f080 8084 	bcs.w	8000a9a <__udivmoddi4+0x2a2>
 8000992:	45a1      	cmp	r9, r4
 8000994:	f240 8081 	bls.w	8000a9a <__udivmoddi4+0x2a2>
 8000998:	f1ae 0e02 	sub.w	lr, lr, #2
 800099c:	443c      	add	r4, r7
 800099e:	eba4 0409 	sub.w	r4, r4, r9
 80009a2:	fa1f f983 	uxth.w	r9, r3
 80009a6:	fbb4 f3f0 	udiv	r3, r4, r0
 80009aa:	fb00 4413 	mls	r4, r0, r3, r4
 80009ae:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80009b2:	fb03 fc0c 	mul.w	ip, r3, ip
 80009b6:	45a4      	cmp	ip, r4
 80009b8:	d907      	bls.n	80009ca <__udivmoddi4+0x1d2>
 80009ba:	193c      	adds	r4, r7, r4
 80009bc:	f103 30ff 	add.w	r0, r3, #4294967295
 80009c0:	d267      	bcs.n	8000a92 <__udivmoddi4+0x29a>
 80009c2:	45a4      	cmp	ip, r4
 80009c4:	d965      	bls.n	8000a92 <__udivmoddi4+0x29a>
 80009c6:	3b02      	subs	r3, #2
 80009c8:	443c      	add	r4, r7
 80009ca:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80009ce:	fba0 9302 	umull	r9, r3, r0, r2
 80009d2:	eba4 040c 	sub.w	r4, r4, ip
 80009d6:	429c      	cmp	r4, r3
 80009d8:	46ce      	mov	lr, r9
 80009da:	469c      	mov	ip, r3
 80009dc:	d351      	bcc.n	8000a82 <__udivmoddi4+0x28a>
 80009de:	d04e      	beq.n	8000a7e <__udivmoddi4+0x286>
 80009e0:	b155      	cbz	r5, 80009f8 <__udivmoddi4+0x200>
 80009e2:	ebb8 030e 	subs.w	r3, r8, lr
 80009e6:	eb64 040c 	sbc.w	r4, r4, ip
 80009ea:	fa04 f606 	lsl.w	r6, r4, r6
 80009ee:	40cb      	lsrs	r3, r1
 80009f0:	431e      	orrs	r6, r3
 80009f2:	40cc      	lsrs	r4, r1
 80009f4:	e9c5 6400 	strd	r6, r4, [r5]
 80009f8:	2100      	movs	r1, #0
 80009fa:	e750      	b.n	800089e <__udivmoddi4+0xa6>
 80009fc:	f1c2 0320 	rsb	r3, r2, #32
 8000a00:	fa20 f103 	lsr.w	r1, r0, r3
 8000a04:	fa0c fc02 	lsl.w	ip, ip, r2
 8000a08:	fa24 f303 	lsr.w	r3, r4, r3
 8000a0c:	4094      	lsls	r4, r2
 8000a0e:	430c      	orrs	r4, r1
 8000a10:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000a14:	fa00 fe02 	lsl.w	lr, r0, r2
 8000a18:	fa1f f78c 	uxth.w	r7, ip
 8000a1c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000a20:	fb08 3110 	mls	r1, r8, r0, r3
 8000a24:	0c23      	lsrs	r3, r4, #16
 8000a26:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000a2a:	fb00 f107 	mul.w	r1, r0, r7
 8000a2e:	4299      	cmp	r1, r3
 8000a30:	d908      	bls.n	8000a44 <__udivmoddi4+0x24c>
 8000a32:	eb1c 0303 	adds.w	r3, ip, r3
 8000a36:	f100 36ff 	add.w	r6, r0, #4294967295
 8000a3a:	d22c      	bcs.n	8000a96 <__udivmoddi4+0x29e>
 8000a3c:	4299      	cmp	r1, r3
 8000a3e:	d92a      	bls.n	8000a96 <__udivmoddi4+0x29e>
 8000a40:	3802      	subs	r0, #2
 8000a42:	4463      	add	r3, ip
 8000a44:	1a5b      	subs	r3, r3, r1
 8000a46:	b2a4      	uxth	r4, r4
 8000a48:	fbb3 f1f8 	udiv	r1, r3, r8
 8000a4c:	fb08 3311 	mls	r3, r8, r1, r3
 8000a50:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000a54:	fb01 f307 	mul.w	r3, r1, r7
 8000a58:	42a3      	cmp	r3, r4
 8000a5a:	d908      	bls.n	8000a6e <__udivmoddi4+0x276>
 8000a5c:	eb1c 0404 	adds.w	r4, ip, r4
 8000a60:	f101 36ff 	add.w	r6, r1, #4294967295
 8000a64:	d213      	bcs.n	8000a8e <__udivmoddi4+0x296>
 8000a66:	42a3      	cmp	r3, r4
 8000a68:	d911      	bls.n	8000a8e <__udivmoddi4+0x296>
 8000a6a:	3902      	subs	r1, #2
 8000a6c:	4464      	add	r4, ip
 8000a6e:	1ae4      	subs	r4, r4, r3
 8000a70:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000a74:	e739      	b.n	80008ea <__udivmoddi4+0xf2>
 8000a76:	4604      	mov	r4, r0
 8000a78:	e6f0      	b.n	800085c <__udivmoddi4+0x64>
 8000a7a:	4608      	mov	r0, r1
 8000a7c:	e706      	b.n	800088c <__udivmoddi4+0x94>
 8000a7e:	45c8      	cmp	r8, r9
 8000a80:	d2ae      	bcs.n	80009e0 <__udivmoddi4+0x1e8>
 8000a82:	ebb9 0e02 	subs.w	lr, r9, r2
 8000a86:	eb63 0c07 	sbc.w	ip, r3, r7
 8000a8a:	3801      	subs	r0, #1
 8000a8c:	e7a8      	b.n	80009e0 <__udivmoddi4+0x1e8>
 8000a8e:	4631      	mov	r1, r6
 8000a90:	e7ed      	b.n	8000a6e <__udivmoddi4+0x276>
 8000a92:	4603      	mov	r3, r0
 8000a94:	e799      	b.n	80009ca <__udivmoddi4+0x1d2>
 8000a96:	4630      	mov	r0, r6
 8000a98:	e7d4      	b.n	8000a44 <__udivmoddi4+0x24c>
 8000a9a:	46d6      	mov	lr, sl
 8000a9c:	e77f      	b.n	800099e <__udivmoddi4+0x1a6>
 8000a9e:	4463      	add	r3, ip
 8000aa0:	3802      	subs	r0, #2
 8000aa2:	e74d      	b.n	8000940 <__udivmoddi4+0x148>
 8000aa4:	4606      	mov	r6, r0
 8000aa6:	4623      	mov	r3, r4
 8000aa8:	4608      	mov	r0, r1
 8000aaa:	e70f      	b.n	80008cc <__udivmoddi4+0xd4>
 8000aac:	3e02      	subs	r6, #2
 8000aae:	4463      	add	r3, ip
 8000ab0:	e730      	b.n	8000914 <__udivmoddi4+0x11c>
 8000ab2:	bf00      	nop

08000ab4 <__aeabi_idiv0>:
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <HAL_TIM_PeriodElapsedCallback>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000ab8:	b580      	push	{r7, lr}
 8000aba:	b082      	sub	sp, #8
 8000abc:	af00      	add	r7, sp, #0
 8000abe:	6078      	str	r0, [r7, #4]
	VibeCheckStrobe_PeriodElapsedUpdate(&vc.strobe);
 8000ac0:	4803      	ldr	r0, [pc, #12]	@ (8000ad0 <HAL_TIM_PeriodElapsedCallback+0x18>)
 8000ac2:	f003 fa58 	bl	8003f76 <VibeCheckStrobe_PeriodElapsedUpdate>
}
 8000ac6:	bf00      	nop
 8000ac8:	3708      	adds	r7, #8
 8000aca:	46bd      	mov	sp, r7
 8000acc:	bd80      	pop	{r7, pc}
 8000ace:	bf00      	nop
 8000ad0:	24002dac 	.word	0x24002dac

08000ad4 <HAL_DAC_ConvHalfCpltCallbackCh1>:

void HAL_DAC_ConvHalfCpltCallbackCh1(DAC_HandleTypeDef* hdac)
{
 8000ad4:	b580      	push	{r7, lr}
 8000ad6:	b082      	sub	sp, #8
 8000ad8:	af00      	add	r7, sp, #0
 8000ada:	6078      	str	r0, [r7, #4]
	VibeCheckWaveGen_DMAHalfCpltCallback(&vc.wavegen);
 8000adc:	4803      	ldr	r0, [pc, #12]	@ (8000aec <HAL_DAC_ConvHalfCpltCallbackCh1+0x18>)
 8000ade:	f004 f869 	bl	8004bb4 <VibeCheckWaveGen_DMAHalfCpltCallback>
}
 8000ae2:	bf00      	nop
 8000ae4:	3708      	adds	r7, #8
 8000ae6:	46bd      	mov	sp, r7
 8000ae8:	bd80      	pop	{r7, pc}
 8000aea:	bf00      	nop
 8000aec:	24002dcc 	.word	0x24002dcc

08000af0 <HAL_DAC_ConvCpltCallbackCh1>:

void HAL_DAC_ConvCpltCallbackCh1(DAC_HandleTypeDef* hdac)
{
 8000af0:	b580      	push	{r7, lr}
 8000af2:	b082      	sub	sp, #8
 8000af4:	af00      	add	r7, sp, #0
 8000af6:	6078      	str	r0, [r7, #4]
	VibeCheckWaveGen_DMACpltCallback(&vc.wavegen);
 8000af8:	4803      	ldr	r0, [pc, #12]	@ (8000b08 <HAL_DAC_ConvCpltCallbackCh1+0x18>)
 8000afa:	f004 f877 	bl	8004bec <VibeCheckWaveGen_DMACpltCallback>
}
 8000afe:	bf00      	nop
 8000b00:	3708      	adds	r7, #8
 8000b02:	46bd      	mov	sp, r7
 8000b04:	bd80      	pop	{r7, pc}
 8000b06:	bf00      	nop
 8000b08:	24002dcc 	.word	0x24002dcc

08000b0c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000b0c:	b580      	push	{r7, lr}
 8000b0e:	b082      	sub	sp, #8
 8000b10:	af02      	add	r7, sp, #8
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MPU Configuration--------------------------------------------------------*/
  MPU_Config();
 8000b12:	f000 fec1 	bl	8001898 <MPU_Config>

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000b16:	f004 fb65 	bl	80051e4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000b1a:	f000 f839 	bl	8000b90 <SystemClock_Config>

  /* Configure the peripherals common clocks */
  PeriphCommonClock_Config();
 8000b1e:	f000 f8a7 	bl	8000c70 <PeriphCommonClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000b22:	f000 fdab 	bl	800167c <MX_GPIO_Init>
  MX_DMA_Init();
 8000b26:	f000 fd79 	bl	800161c <MX_DMA_Init>
  MX_DAC1_Init();
 8000b2a:	f000 f9b7 	bl	8000e9c <MX_DAC1_Init>
  MX_I2C2_Init();
 8000b2e:	f000 f9f1 	bl	8000f14 <MX_I2C2_Init>
  MX_SPI2_Init();
 8000b32:	f000 fa2f 	bl	8000f94 <MX_SPI2_Init>
  MX_SPI3_Init();
 8000b36:	f000 fa83 	bl	8001040 <MX_SPI3_Init>
  MX_SPI4_Init();
 8000b3a:	f000 fad7 	bl	80010ec <MX_SPI4_Init>
  MX_TIM4_Init();
 8000b3e:	f000 fc5b 	bl	80013f8 <MX_TIM4_Init>
  MX_TIM3_Init();
 8000b42:	f000 fbcb 	bl	80012dc <MX_TIM3_Init>
  MX_USART1_UART_Init();
 8000b46:	f000 fd1d 	bl	8001584 <MX_USART1_UART_Init>
  MX_TIM1_Init();
 8000b4a:	f000 fb25 	bl	8001198 <MX_TIM1_Init>
  MX_TIM2_Init();
 8000b4e:	f000 fb77 	bl	8001240 <MX_TIM2_Init>
  MX_ADC1_Init();
 8000b52:	f000 f8bd 	bl	8000cd0 <MX_ADC1_Init>
  MX_ADC2_Init();
 8000b56:	f000 f937 	bl	8000dc8 <MX_ADC2_Init>
  MX_UART7_Init();
 8000b5a:	f000 fcc5 	bl	80014e8 <MX_UART7_Init>
  MX_USB_DEVICE_Init();
 8000b5e:	f014 fafb 	bl	8015158 <MX_USB_DEVICE_Init>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

  VibeCheck_Init(&vc, &htim3, &htim1, &hdac1, &htim4);
 8000b62:	4b06      	ldr	r3, [pc, #24]	@ (8000b7c <main+0x70>)
 8000b64:	9300      	str	r3, [sp, #0]
 8000b66:	4b06      	ldr	r3, [pc, #24]	@ (8000b80 <main+0x74>)
 8000b68:	4a06      	ldr	r2, [pc, #24]	@ (8000b84 <main+0x78>)
 8000b6a:	4907      	ldr	r1, [pc, #28]	@ (8000b88 <main+0x7c>)
 8000b6c:	4807      	ldr	r0, [pc, #28]	@ (8000b8c <main+0x80>)
 8000b6e:	f001 fd8d 	bl	800268c <VibeCheck_Init>

  while (1)
  {

	  VibeCheck_Loop(&vc);
 8000b72:	4806      	ldr	r0, [pc, #24]	@ (8000b8c <main+0x80>)
 8000b74:	f001 ff38 	bl	80029e8 <VibeCheck_Loop>
 8000b78:	e7fb      	b.n	8000b72 <main+0x66>
 8000b7a:	bf00      	nop
 8000b7c:	2400079c 	.word	0x2400079c
 8000b80:	240003c8 	.word	0x240003c8
 8000b84:	240006b8 	.word	0x240006b8
 8000b88:	24000750 	.word	0x24000750
 8000b8c:	24000988 	.word	0x24000988

08000b90 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000b90:	b580      	push	{r7, lr}
 8000b92:	b09c      	sub	sp, #112	@ 0x70
 8000b94:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000b96:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000b9a:	224c      	movs	r2, #76	@ 0x4c
 8000b9c:	2100      	movs	r1, #0
 8000b9e:	4618      	mov	r0, r3
 8000ba0:	f016 fb9b 	bl	80172da <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ba4:	1d3b      	adds	r3, r7, #4
 8000ba6:	2220      	movs	r2, #32
 8000ba8:	2100      	movs	r1, #0
 8000baa:	4618      	mov	r0, r3
 8000bac:	f016 fb95 	bl	80172da <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 8000bb0:	2002      	movs	r0, #2
 8000bb2:	f00a fa01 	bl	800afb8 <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 8000bb6:	2300      	movs	r3, #0
 8000bb8:	603b      	str	r3, [r7, #0]
 8000bba:	4b2c      	ldr	r3, [pc, #176]	@ (8000c6c <SystemClock_Config+0xdc>)
 8000bbc:	699b      	ldr	r3, [r3, #24]
 8000bbe:	4a2b      	ldr	r2, [pc, #172]	@ (8000c6c <SystemClock_Config+0xdc>)
 8000bc0:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8000bc4:	6193      	str	r3, [r2, #24]
 8000bc6:	4b29      	ldr	r3, [pc, #164]	@ (8000c6c <SystemClock_Config+0xdc>)
 8000bc8:	699b      	ldr	r3, [r3, #24]
 8000bca:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000bce:	603b      	str	r3, [r7, #0]
 8000bd0:	683b      	ldr	r3, [r7, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 8000bd2:	bf00      	nop
 8000bd4:	4b25      	ldr	r3, [pc, #148]	@ (8000c6c <SystemClock_Config+0xdc>)
 8000bd6:	699b      	ldr	r3, [r3, #24]
 8000bd8:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8000bdc:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8000be0:	d1f8      	bne.n	8000bd4 <SystemClock_Config+0x44>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_HSE;
 8000be2:	2321      	movs	r3, #33	@ 0x21
 8000be4:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000be6:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000bea:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 8000bec:	2301      	movs	r3, #1
 8000bee:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000bf0:	2302      	movs	r3, #2
 8000bf2:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000bf4:	2302      	movs	r3, #2
 8000bf6:	64fb      	str	r3, [r7, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLM = 2;
 8000bf8:	2302      	movs	r3, #2
 8000bfa:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLN = 40;
 8000bfc:	2328      	movs	r3, #40	@ 0x28
 8000bfe:	657b      	str	r3, [r7, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLP = 1;
 8000c00:	2301      	movs	r3, #1
 8000c02:	65bb      	str	r3, [r7, #88]	@ 0x58
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8000c04:	2302      	movs	r3, #2
 8000c06:	65fb      	str	r3, [r7, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000c08:	2302      	movs	r3, #2
 8000c0a:	663b      	str	r3, [r7, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 8000c0c:	230c      	movs	r3, #12
 8000c0e:	667b      	str	r3, [r7, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 8000c10:	2300      	movs	r3, #0
 8000c12:	66bb      	str	r3, [r7, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 8000c14:	2300      	movs	r3, #0
 8000c16:	66fb      	str	r3, [r7, #108]	@ 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000c18:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000c1c:	4618      	mov	r0, r3
 8000c1e:	f00a fa15 	bl	800b04c <HAL_RCC_OscConfig>
 8000c22:	4603      	mov	r3, r0
 8000c24:	2b00      	cmp	r3, #0
 8000c26:	d001      	beq.n	8000c2c <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8000c28:	f000 fe62 	bl	80018f0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000c2c:	233f      	movs	r3, #63	@ 0x3f
 8000c2e:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000c30:	2303      	movs	r3, #3
 8000c32:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 8000c34:	2300      	movs	r3, #0
 8000c36:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 8000c38:	2308      	movs	r3, #8
 8000c3a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 8000c3c:	2340      	movs	r3, #64	@ 0x40
 8000c3e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 8000c40:	2340      	movs	r3, #64	@ 0x40
 8000c42:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 8000c44:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000c48:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 8000c4a:	2340      	movs	r3, #64	@ 0x40
 8000c4c:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8000c4e:	1d3b      	adds	r3, r7, #4
 8000c50:	2103      	movs	r1, #3
 8000c52:	4618      	mov	r0, r3
 8000c54:	f00a fdd4 	bl	800b800 <HAL_RCC_ClockConfig>
 8000c58:	4603      	mov	r3, r0
 8000c5a:	2b00      	cmp	r3, #0
 8000c5c:	d001      	beq.n	8000c62 <SystemClock_Config+0xd2>
  {
    Error_Handler();
 8000c5e:	f000 fe47 	bl	80018f0 <Error_Handler>
  }
}
 8000c62:	bf00      	nop
 8000c64:	3770      	adds	r7, #112	@ 0x70
 8000c66:	46bd      	mov	sp, r7
 8000c68:	bd80      	pop	{r7, pc}
 8000c6a:	bf00      	nop
 8000c6c:	58024800 	.word	0x58024800

08000c70 <PeriphCommonClock_Config>:
/**
  * @brief Peripherals Common Clock Configuration
  * @retval None
  */
void PeriphCommonClock_Config(void)
{
 8000c70:	b580      	push	{r7, lr}
 8000c72:	b0ae      	sub	sp, #184	@ 0xb8
 8000c74:	af00      	add	r7, sp, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000c76:	463b      	mov	r3, r7
 8000c78:	22b8      	movs	r2, #184	@ 0xb8
 8000c7a:	2100      	movs	r1, #0
 8000c7c:	4618      	mov	r0, r3
 8000c7e:	f016 fb2c 	bl	80172da <memset>

  /** Initializes the peripherals clock
  */
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8000c82:	f44f 2200 	mov.w	r2, #524288	@ 0x80000
 8000c86:	f04f 0300 	mov.w	r3, #0
 8000c8a:	e9c7 2300 	strd	r2, r3, [r7]
  PeriphClkInitStruct.PLL2.PLL2M = 2;
 8000c8e:	2302      	movs	r3, #2
 8000c90:	60bb      	str	r3, [r7, #8]
  PeriphClkInitStruct.PLL2.PLL2N = 16;
 8000c92:	2310      	movs	r3, #16
 8000c94:	60fb      	str	r3, [r7, #12]
  PeriphClkInitStruct.PLL2.PLL2P = 2;
 8000c96:	2302      	movs	r3, #2
 8000c98:	613b      	str	r3, [r7, #16]
  PeriphClkInitStruct.PLL2.PLL2Q = 2;
 8000c9a:	2302      	movs	r3, #2
 8000c9c:	617b      	str	r3, [r7, #20]
  PeriphClkInitStruct.PLL2.PLL2R = 2;
 8000c9e:	2302      	movs	r3, #2
 8000ca0:	61bb      	str	r3, [r7, #24]
  PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 8000ca2:	23c0      	movs	r3, #192	@ 0xc0
 8000ca4:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 8000ca6:	2300      	movs	r3, #0
 8000ca8:	623b      	str	r3, [r7, #32]
  PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 8000caa:	2300      	movs	r3, #0
 8000cac:	627b      	str	r3, [r7, #36]	@ 0x24
  PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 8000cae:	2300      	movs	r3, #0
 8000cb0:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000cb4:	463b      	mov	r3, r7
 8000cb6:	4618      	mov	r0, r3
 8000cb8:	f00b f92e 	bl	800bf18 <HAL_RCCEx_PeriphCLKConfig>
 8000cbc:	4603      	mov	r3, r0
 8000cbe:	2b00      	cmp	r3, #0
 8000cc0:	d001      	beq.n	8000cc6 <PeriphCommonClock_Config+0x56>
  {
    Error_Handler();
 8000cc2:	f000 fe15 	bl	80018f0 <Error_Handler>
  }
}
 8000cc6:	bf00      	nop
 8000cc8:	37b8      	adds	r7, #184	@ 0xb8
 8000cca:	46bd      	mov	sp, r7
 8000ccc:	bd80      	pop	{r7, pc}
	...

08000cd0 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000cd0:	b580      	push	{r7, lr}
 8000cd2:	b08c      	sub	sp, #48	@ 0x30
 8000cd4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 8000cd6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000cda:	2200      	movs	r2, #0
 8000cdc:	601a      	str	r2, [r3, #0]
 8000cde:	605a      	str	r2, [r3, #4]
 8000ce0:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 8000ce2:	463b      	mov	r3, r7
 8000ce4:	2224      	movs	r2, #36	@ 0x24
 8000ce6:	2100      	movs	r1, #0
 8000ce8:	4618      	mov	r0, r3
 8000cea:	f016 faf6 	bl	80172da <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 8000cee:	4b32      	ldr	r3, [pc, #200]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000cf0:	4a32      	ldr	r2, [pc, #200]	@ (8000dbc <MX_ADC1_Init+0xec>)
 8000cf2:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV2;
 8000cf4:	4b30      	ldr	r3, [pc, #192]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000cf6:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 8000cfa:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 8000cfc:	4b2e      	ldr	r3, [pc, #184]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000cfe:	2200      	movs	r2, #0
 8000d00:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8000d02:	4b2d      	ldr	r3, [pc, #180]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d04:	2200      	movs	r2, #0
 8000d06:	611a      	str	r2, [r3, #16]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000d08:	4b2b      	ldr	r3, [pc, #172]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d0a:	2204      	movs	r2, #4
 8000d0c:	615a      	str	r2, [r3, #20]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8000d0e:	4b2a      	ldr	r3, [pc, #168]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d10:	2200      	movs	r2, #0
 8000d12:	761a      	strb	r2, [r3, #24]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000d14:	4b28      	ldr	r3, [pc, #160]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d16:	2200      	movs	r2, #0
 8000d18:	765a      	strb	r2, [r3, #25]
  hadc1.Init.NbrOfConversion = 1;
 8000d1a:	4b27      	ldr	r3, [pc, #156]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d1c:	2201      	movs	r2, #1
 8000d1e:	61da      	str	r2, [r3, #28]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000d20:	4b25      	ldr	r3, [pc, #148]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d22:	2200      	movs	r2, #0
 8000d24:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000d28:	4b23      	ldr	r3, [pc, #140]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d2a:	2200      	movs	r2, #0
 8000d2c:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000d2e:	4b22      	ldr	r3, [pc, #136]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d30:	2200      	movs	r2, #0
 8000d32:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 8000d34:	4b20      	ldr	r3, [pc, #128]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d36:	2200      	movs	r2, #0
 8000d38:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8000d3a:	4b1f      	ldr	r3, [pc, #124]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d3c:	2200      	movs	r2, #0
 8000d3e:	63da      	str	r2, [r3, #60]	@ 0x3c
  hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 8000d40:	4b1d      	ldr	r3, [pc, #116]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d42:	2200      	movs	r2, #0
 8000d44:	641a      	str	r2, [r3, #64]	@ 0x40
  hadc1.Init.OversamplingMode = DISABLE;
 8000d46:	4b1c      	ldr	r3, [pc, #112]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d48:	2200      	movs	r2, #0
 8000d4a:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
  hadc1.Init.Oversampling.Ratio = 1;
 8000d4e:	4b1a      	ldr	r3, [pc, #104]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d50:	2201      	movs	r2, #1
 8000d52:	649a      	str	r2, [r3, #72]	@ 0x48
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000d54:	4818      	ldr	r0, [pc, #96]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d56:	f004 fd41 	bl	80057dc <HAL_ADC_Init>
 8000d5a:	4603      	mov	r3, r0
 8000d5c:	2b00      	cmp	r3, #0
 8000d5e:	d001      	beq.n	8000d64 <MX_ADC1_Init+0x94>
  {
    Error_Handler();
 8000d60:	f000 fdc6 	bl	80018f0 <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 8000d64:	2300      	movs	r3, #0
 8000d66:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 8000d68:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000d6c:	4619      	mov	r1, r3
 8000d6e:	4812      	ldr	r0, [pc, #72]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000d70:	f005 fd80 	bl	8006874 <HAL_ADCEx_MultiModeConfigChannel>
 8000d74:	4603      	mov	r3, r0
 8000d76:	2b00      	cmp	r3, #0
 8000d78:	d001      	beq.n	8000d7e <MX_ADC1_Init+0xae>
  {
    Error_Handler();
 8000d7a:	f000 fdb9 	bl	80018f0 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_4;
 8000d7e:	4b10      	ldr	r3, [pc, #64]	@ (8000dc0 <MX_ADC1_Init+0xf0>)
 8000d80:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000d82:	2306      	movs	r3, #6
 8000d84:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8000d86:	2300      	movs	r3, #0
 8000d88:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_DIFFERENTIAL_ENDED;
 8000d8a:	4b0e      	ldr	r3, [pc, #56]	@ (8000dc4 <MX_ADC1_Init+0xf4>)
 8000d8c:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8000d8e:	2304      	movs	r3, #4
 8000d90:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 8000d92:	2300      	movs	r3, #0
 8000d94:	617b      	str	r3, [r7, #20]
  sConfig.OffsetSignedSaturation = DISABLE;
 8000d96:	2300      	movs	r3, #0
 8000d98:	f887 3021 	strb.w	r3, [r7, #33]	@ 0x21
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000d9c:	463b      	mov	r3, r7
 8000d9e:	4619      	mov	r1, r3
 8000da0:	4805      	ldr	r0, [pc, #20]	@ (8000db8 <MX_ADC1_Init+0xe8>)
 8000da2:	f004 ff23 	bl	8005bec <HAL_ADC_ConfigChannel>
 8000da6:	4603      	mov	r3, r0
 8000da8:	2b00      	cmp	r3, #0
 8000daa:	d001      	beq.n	8000db0 <MX_ADC1_Init+0xe0>
  {
    Error_Handler();
 8000dac:	f000 fda0 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000db0:	bf00      	nop
 8000db2:	3730      	adds	r7, #48	@ 0x30
 8000db4:	46bd      	mov	sp, r7
 8000db6:	bd80      	pop	{r7, pc}
 8000db8:	240002e8 	.word	0x240002e8
 8000dbc:	40022000 	.word	0x40022000
 8000dc0:	10c00010 	.word	0x10c00010
 8000dc4:	47ff0000 	.word	0x47ff0000

08000dc8 <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 8000dc8:	b580      	push	{r7, lr}
 8000dca:	b08a      	sub	sp, #40	@ 0x28
 8000dcc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000dce:	1d3b      	adds	r3, r7, #4
 8000dd0:	2224      	movs	r2, #36	@ 0x24
 8000dd2:	2100      	movs	r1, #0
 8000dd4:	4618      	mov	r0, r3
 8000dd6:	f016 fa80 	bl	80172da <memset>

  /* USER CODE END ADC2_Init 1 */

  /** Common config
  */
  hadc2.Instance = ADC2;
 8000dda:	4b2c      	ldr	r3, [pc, #176]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000ddc:	4a2c      	ldr	r2, [pc, #176]	@ (8000e90 <MX_ADC2_Init+0xc8>)
 8000dde:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV2;
 8000de0:	4b2a      	ldr	r3, [pc, #168]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000de2:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 8000de6:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_16B;
 8000de8:	4b28      	ldr	r3, [pc, #160]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000dea:	2200      	movs	r2, #0
 8000dec:	609a      	str	r2, [r3, #8]
  hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8000dee:	4b27      	ldr	r3, [pc, #156]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000df0:	2200      	movs	r2, #0
 8000df2:	611a      	str	r2, [r3, #16]
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000df4:	4b25      	ldr	r3, [pc, #148]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000df6:	2204      	movs	r2, #4
 8000df8:	615a      	str	r2, [r3, #20]
  hadc2.Init.LowPowerAutoWait = DISABLE;
 8000dfa:	4b24      	ldr	r3, [pc, #144]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000dfc:	2200      	movs	r2, #0
 8000dfe:	761a      	strb	r2, [r3, #24]
  hadc2.Init.ContinuousConvMode = DISABLE;
 8000e00:	4b22      	ldr	r3, [pc, #136]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e02:	2200      	movs	r2, #0
 8000e04:	765a      	strb	r2, [r3, #25]
  hadc2.Init.NbrOfConversion = 1;
 8000e06:	4b21      	ldr	r3, [pc, #132]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e08:	2201      	movs	r2, #1
 8000e0a:	61da      	str	r2, [r3, #28]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8000e0c:	4b1f      	ldr	r3, [pc, #124]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e0e:	2200      	movs	r2, #0
 8000e10:	f883 2020 	strb.w	r2, [r3, #32]
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000e14:	4b1d      	ldr	r3, [pc, #116]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e16:	2200      	movs	r2, #0
 8000e18:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000e1a:	4b1c      	ldr	r3, [pc, #112]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e1c:	2200      	movs	r2, #0
 8000e1e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc2.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 8000e20:	4b1a      	ldr	r3, [pc, #104]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e22:	2200      	movs	r2, #0
 8000e24:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8000e26:	4b19      	ldr	r3, [pc, #100]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e28:	2200      	movs	r2, #0
 8000e2a:	63da      	str	r2, [r3, #60]	@ 0x3c
  hadc2.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 8000e2c:	4b17      	ldr	r3, [pc, #92]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e2e:	2200      	movs	r2, #0
 8000e30:	641a      	str	r2, [r3, #64]	@ 0x40
  hadc2.Init.OversamplingMode = DISABLE;
 8000e32:	4b16      	ldr	r3, [pc, #88]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e34:	2200      	movs	r2, #0
 8000e36:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
  hadc2.Init.Oversampling.Ratio = 1;
 8000e3a:	4b14      	ldr	r3, [pc, #80]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e3c:	2201      	movs	r2, #1
 8000e3e:	649a      	str	r2, [r3, #72]	@ 0x48
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8000e40:	4812      	ldr	r0, [pc, #72]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e42:	f004 fccb 	bl	80057dc <HAL_ADC_Init>
 8000e46:	4603      	mov	r3, r0
 8000e48:	2b00      	cmp	r3, #0
 8000e4a:	d001      	beq.n	8000e50 <MX_ADC2_Init+0x88>
  {
    Error_Handler();
 8000e4c:	f000 fd50 	bl	80018f0 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 8000e50:	4b10      	ldr	r3, [pc, #64]	@ (8000e94 <MX_ADC2_Init+0xcc>)
 8000e52:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000e54:	2306      	movs	r3, #6
 8000e56:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8000e58:	2300      	movs	r3, #0
 8000e5a:	60fb      	str	r3, [r7, #12]
  sConfig.SingleDiff = ADC_DIFFERENTIAL_ENDED;
 8000e5c:	4b0e      	ldr	r3, [pc, #56]	@ (8000e98 <MX_ADC2_Init+0xd0>)
 8000e5e:	613b      	str	r3, [r7, #16]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8000e60:	2304      	movs	r3, #4
 8000e62:	617b      	str	r3, [r7, #20]
  sConfig.Offset = 0;
 8000e64:	2300      	movs	r3, #0
 8000e66:	61bb      	str	r3, [r7, #24]
  sConfig.OffsetSignedSaturation = DISABLE;
 8000e68:	2300      	movs	r3, #0
 8000e6a:	f887 3025 	strb.w	r3, [r7, #37]	@ 0x25
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8000e6e:	1d3b      	adds	r3, r7, #4
 8000e70:	4619      	mov	r1, r3
 8000e72:	4806      	ldr	r0, [pc, #24]	@ (8000e8c <MX_ADC2_Init+0xc4>)
 8000e74:	f004 feba 	bl	8005bec <HAL_ADC_ConfigChannel>
 8000e78:	4603      	mov	r3, r0
 8000e7a:	2b00      	cmp	r3, #0
 8000e7c:	d001      	beq.n	8000e82 <MX_ADC2_Init+0xba>
  {
    Error_Handler();
 8000e7e:	f000 fd37 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 8000e82:	bf00      	nop
 8000e84:	3728      	adds	r7, #40	@ 0x28
 8000e86:	46bd      	mov	sp, r7
 8000e88:	bd80      	pop	{r7, pc}
 8000e8a:	bf00      	nop
 8000e8c:	24000358 	.word	0x24000358
 8000e90:	40022100 	.word	0x40022100
 8000e94:	0c900008 	.word	0x0c900008
 8000e98:	47ff0000 	.word	0x47ff0000

08000e9c <MX_DAC1_Init>:
  * @brief DAC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_DAC1_Init(void)
{
 8000e9c:	b580      	push	{r7, lr}
 8000e9e:	b08a      	sub	sp, #40	@ 0x28
 8000ea0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN DAC1_Init 0 */

  /* USER CODE END DAC1_Init 0 */

  DAC_ChannelConfTypeDef sConfig = {0};
 8000ea2:	1d3b      	adds	r3, r7, #4
 8000ea4:	2224      	movs	r2, #36	@ 0x24
 8000ea6:	2100      	movs	r1, #0
 8000ea8:	4618      	mov	r0, r3
 8000eaa:	f016 fa16 	bl	80172da <memset>

  /* USER CODE END DAC1_Init 1 */

  /** DAC Initialization
  */
  hdac1.Instance = DAC1;
 8000eae:	4b17      	ldr	r3, [pc, #92]	@ (8000f0c <MX_DAC1_Init+0x70>)
 8000eb0:	4a17      	ldr	r2, [pc, #92]	@ (8000f10 <MX_DAC1_Init+0x74>)
 8000eb2:	601a      	str	r2, [r3, #0]
  if (HAL_DAC_Init(&hdac1) != HAL_OK)
 8000eb4:	4815      	ldr	r0, [pc, #84]	@ (8000f0c <MX_DAC1_Init+0x70>)
 8000eb6:	f005 ff47 	bl	8006d48 <HAL_DAC_Init>
 8000eba:	4603      	mov	r3, r0
 8000ebc:	2b00      	cmp	r3, #0
 8000ebe:	d001      	beq.n	8000ec4 <MX_DAC1_Init+0x28>
  {
    Error_Handler();
 8000ec0:	f000 fd16 	bl	80018f0 <Error_Handler>
  }

  /** DAC channel OUT1 config
  */
  sConfig.DAC_SampleAndHold = DAC_SAMPLEANDHOLD_DISABLE;
 8000ec4:	2300      	movs	r3, #0
 8000ec6:	607b      	str	r3, [r7, #4]
  sConfig.DAC_Trigger = DAC_TRIGGER_T1_TRGO;
 8000ec8:	2306      	movs	r3, #6
 8000eca:	60bb      	str	r3, [r7, #8]
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_DISABLE;
 8000ecc:	2302      	movs	r3, #2
 8000ece:	60fb      	str	r3, [r7, #12]
  sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_DISABLE;
 8000ed0:	2301      	movs	r3, #1
 8000ed2:	613b      	str	r3, [r7, #16]
  sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 8000ed4:	2300      	movs	r3, #0
 8000ed6:	617b      	str	r3, [r7, #20]
  if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 8000ed8:	1d3b      	adds	r3, r7, #4
 8000eda:	2200      	movs	r2, #0
 8000edc:	4619      	mov	r1, r3
 8000ede:	480b      	ldr	r0, [pc, #44]	@ (8000f0c <MX_DAC1_Init+0x70>)
 8000ee0:	f006 f81e 	bl	8006f20 <HAL_DAC_ConfigChannel>
 8000ee4:	4603      	mov	r3, r0
 8000ee6:	2b00      	cmp	r3, #0
 8000ee8:	d001      	beq.n	8000eee <MX_DAC1_Init+0x52>
  {
    Error_Handler();
 8000eea:	f000 fd01 	bl	80018f0 <Error_Handler>
  }

  /** DAC channel OUT2 config
  */
  if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8000eee:	1d3b      	adds	r3, r7, #4
 8000ef0:	2210      	movs	r2, #16
 8000ef2:	4619      	mov	r1, r3
 8000ef4:	4805      	ldr	r0, [pc, #20]	@ (8000f0c <MX_DAC1_Init+0x70>)
 8000ef6:	f006 f813 	bl	8006f20 <HAL_DAC_ConfigChannel>
 8000efa:	4603      	mov	r3, r0
 8000efc:	2b00      	cmp	r3, #0
 8000efe:	d001      	beq.n	8000f04 <MX_DAC1_Init+0x68>
  {
    Error_Handler();
 8000f00:	f000 fcf6 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN DAC1_Init 2 */

  /* USER CODE END DAC1_Init 2 */

}
 8000f04:	bf00      	nop
 8000f06:	3728      	adds	r7, #40	@ 0x28
 8000f08:	46bd      	mov	sp, r7
 8000f0a:	bd80      	pop	{r7, pc}
 8000f0c:	240003c8 	.word	0x240003c8
 8000f10:	40007400 	.word	0x40007400

08000f14 <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 8000f14:	b580      	push	{r7, lr}
 8000f16:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 8000f18:	4b1b      	ldr	r3, [pc, #108]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f1a:	4a1c      	ldr	r2, [pc, #112]	@ (8000f8c <MX_I2C2_Init+0x78>)
 8000f1c:	601a      	str	r2, [r3, #0]
  hi2c2.Init.Timing = 0x307075B1;
 8000f1e:	4b1a      	ldr	r3, [pc, #104]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f20:	4a1b      	ldr	r2, [pc, #108]	@ (8000f90 <MX_I2C2_Init+0x7c>)
 8000f22:	605a      	str	r2, [r3, #4]
  hi2c2.Init.OwnAddress1 = 0;
 8000f24:	4b18      	ldr	r3, [pc, #96]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f26:	2200      	movs	r2, #0
 8000f28:	609a      	str	r2, [r3, #8]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000f2a:	4b17      	ldr	r3, [pc, #92]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f2c:	2201      	movs	r2, #1
 8000f2e:	60da      	str	r2, [r3, #12]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000f30:	4b15      	ldr	r3, [pc, #84]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f32:	2200      	movs	r2, #0
 8000f34:	611a      	str	r2, [r3, #16]
  hi2c2.Init.OwnAddress2 = 0;
 8000f36:	4b14      	ldr	r3, [pc, #80]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f38:	2200      	movs	r2, #0
 8000f3a:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8000f3c:	4b12      	ldr	r3, [pc, #72]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f3e:	2200      	movs	r2, #0
 8000f40:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000f42:	4b11      	ldr	r3, [pc, #68]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f44:	2200      	movs	r2, #0
 8000f46:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000f48:	4b0f      	ldr	r3, [pc, #60]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f4a:	2200      	movs	r2, #0
 8000f4c:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8000f4e:	480e      	ldr	r0, [pc, #56]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f50:	f008 fc60 	bl	8009814 <HAL_I2C_Init>
 8000f54:	4603      	mov	r3, r0
 8000f56:	2b00      	cmp	r3, #0
 8000f58:	d001      	beq.n	8000f5e <MX_I2C2_Init+0x4a>
  {
    Error_Handler();
 8000f5a:	f000 fcc9 	bl	80018f0 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8000f5e:	2100      	movs	r1, #0
 8000f60:	4809      	ldr	r0, [pc, #36]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f62:	f008 fcf3 	bl	800994c <HAL_I2CEx_ConfigAnalogFilter>
 8000f66:	4603      	mov	r3, r0
 8000f68:	2b00      	cmp	r3, #0
 8000f6a:	d001      	beq.n	8000f70 <MX_I2C2_Init+0x5c>
  {
    Error_Handler();
 8000f6c:	f000 fcc0 	bl	80018f0 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 8000f70:	2100      	movs	r1, #0
 8000f72:	4805      	ldr	r0, [pc, #20]	@ (8000f88 <MX_I2C2_Init+0x74>)
 8000f74:	f008 fd35 	bl	80099e2 <HAL_I2CEx_ConfigDigitalFilter>
 8000f78:	4603      	mov	r3, r0
 8000f7a:	2b00      	cmp	r3, #0
 8000f7c:	d001      	beq.n	8000f82 <MX_I2C2_Init+0x6e>
  {
    Error_Handler();
 8000f7e:	f000 fcb7 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 8000f82:	bf00      	nop
 8000f84:	bd80      	pop	{r7, pc}
 8000f86:	bf00      	nop
 8000f88:	240004cc 	.word	0x240004cc
 8000f8c:	40005800 	.word	0x40005800
 8000f90:	307075b1 	.word	0x307075b1

08000f94 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8000f94:	b580      	push	{r7, lr}
 8000f96:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8000f98:	4b27      	ldr	r3, [pc, #156]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000f9a:	4a28      	ldr	r2, [pc, #160]	@ (800103c <MX_SPI2_Init+0xa8>)
 8000f9c:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8000f9e:	4b26      	ldr	r3, [pc, #152]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fa0:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8000fa4:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8000fa6:	4b24      	ldr	r3, [pc, #144]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fa8:	2200      	movs	r2, #0
 8000faa:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 8000fac:	4b22      	ldr	r3, [pc, #136]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fae:	2203      	movs	r2, #3
 8000fb0:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000fb2:	4b21      	ldr	r3, [pc, #132]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fb4:	2200      	movs	r2, #0
 8000fb6:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000fb8:	4b1f      	ldr	r3, [pc, #124]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fba:	2200      	movs	r2, #0
 8000fbc:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8000fbe:	4b1e      	ldr	r3, [pc, #120]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fc0:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000fc4:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000fc6:	4b1c      	ldr	r3, [pc, #112]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fc8:	2200      	movs	r2, #0
 8000fca:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000fcc:	4b1a      	ldr	r3, [pc, #104]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fce:	2200      	movs	r2, #0
 8000fd0:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8000fd2:	4b19      	ldr	r3, [pc, #100]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fd4:	2200      	movs	r2, #0
 8000fd6:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000fd8:	4b17      	ldr	r3, [pc, #92]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fda:	2200      	movs	r2, #0
 8000fdc:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 0x0;
 8000fde:	4b16      	ldr	r3, [pc, #88]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fe0:	2200      	movs	r2, #0
 8000fe2:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8000fe4:	4b14      	ldr	r3, [pc, #80]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fe6:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000fea:	635a      	str	r2, [r3, #52]	@ 0x34
  hspi2.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8000fec:	4b12      	ldr	r3, [pc, #72]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000fee:	2200      	movs	r2, #0
 8000ff0:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi2.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 8000ff2:	4b11      	ldr	r3, [pc, #68]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	63da      	str	r2, [r3, #60]	@ 0x3c
  hspi2.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000ff8:	4b0f      	ldr	r3, [pc, #60]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8000ffa:	2200      	movs	r2, #0
 8000ffc:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi2.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000ffe:	4b0e      	ldr	r3, [pc, #56]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8001000:	2200      	movs	r2, #0
 8001002:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi2.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 8001004:	4b0c      	ldr	r3, [pc, #48]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8001006:	2200      	movs	r2, #0
 8001008:	649a      	str	r2, [r3, #72]	@ 0x48
  hspi2.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 800100a:	4b0b      	ldr	r3, [pc, #44]	@ (8001038 <MX_SPI2_Init+0xa4>)
 800100c:	2200      	movs	r2, #0
 800100e:	64da      	str	r2, [r3, #76]	@ 0x4c
  hspi2.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 8001010:	4b09      	ldr	r3, [pc, #36]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8001012:	2200      	movs	r2, #0
 8001014:	651a      	str	r2, [r3, #80]	@ 0x50
  hspi2.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 8001016:	4b08      	ldr	r3, [pc, #32]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8001018:	2200      	movs	r2, #0
 800101a:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi2.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 800101c:	4b06      	ldr	r3, [pc, #24]	@ (8001038 <MX_SPI2_Init+0xa4>)
 800101e:	2200      	movs	r2, #0
 8001020:	659a      	str	r2, [r3, #88]	@ 0x58
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8001022:	4805      	ldr	r0, [pc, #20]	@ (8001038 <MX_SPI2_Init+0xa4>)
 8001024:	f00d fb5e 	bl	800e6e4 <HAL_SPI_Init>
 8001028:	4603      	mov	r3, r0
 800102a:	2b00      	cmp	r3, #0
 800102c:	d001      	beq.n	8001032 <MX_SPI2_Init+0x9e>
  {
    Error_Handler();
 800102e:	f000 fc5f 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8001032:	bf00      	nop
 8001034:	bd80      	pop	{r7, pc}
 8001036:	bf00      	nop
 8001038:	24000520 	.word	0x24000520
 800103c:	40003800 	.word	0x40003800

08001040 <MX_SPI3_Init>:
  * @brief SPI3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI3_Init(void)
{
 8001040:	b580      	push	{r7, lr}
 8001042:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  /* SPI3 parameter configuration*/
  hspi3.Instance = SPI3;
 8001044:	4b27      	ldr	r3, [pc, #156]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 8001046:	4a28      	ldr	r2, [pc, #160]	@ (80010e8 <MX_SPI3_Init+0xa8>)
 8001048:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 800104a:	4b26      	ldr	r3, [pc, #152]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 800104c:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8001050:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 8001052:	4b24      	ldr	r3, [pc, #144]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 8001054:	2200      	movs	r2, #0
 8001056:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_4BIT;
 8001058:	4b22      	ldr	r3, [pc, #136]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 800105a:	2203      	movs	r2, #3
 800105c:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 800105e:	4b21      	ldr	r3, [pc, #132]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 8001060:	2200      	movs	r2, #0
 8001062:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001064:	4b1f      	ldr	r3, [pc, #124]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 8001066:	2200      	movs	r2, #0
 8001068:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 800106a:	4b1e      	ldr	r3, [pc, #120]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 800106c:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001070:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001072:	4b1c      	ldr	r3, [pc, #112]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 8001074:	2200      	movs	r2, #0
 8001076:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001078:	4b1a      	ldr	r3, [pc, #104]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 800107a:	2200      	movs	r2, #0
 800107c:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 800107e:	4b19      	ldr	r3, [pc, #100]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 8001080:	2200      	movs	r2, #0
 8001082:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001084:	4b17      	ldr	r3, [pc, #92]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 8001086:	2200      	movs	r2, #0
 8001088:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi3.Init.CRCPolynomial = 0x0;
 800108a:	4b16      	ldr	r3, [pc, #88]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 800108c:	2200      	movs	r2, #0
 800108e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi3.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8001090:	4b14      	ldr	r3, [pc, #80]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 8001092:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001096:	635a      	str	r2, [r3, #52]	@ 0x34
  hspi3.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8001098:	4b12      	ldr	r3, [pc, #72]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 800109a:	2200      	movs	r2, #0
 800109c:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi3.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 800109e:	4b11      	ldr	r3, [pc, #68]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010a0:	2200      	movs	r2, #0
 80010a2:	63da      	str	r2, [r3, #60]	@ 0x3c
  hspi3.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 80010a4:	4b0f      	ldr	r3, [pc, #60]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010a6:	2200      	movs	r2, #0
 80010a8:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi3.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 80010aa:	4b0e      	ldr	r3, [pc, #56]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010ac:	2200      	movs	r2, #0
 80010ae:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi3.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 80010b0:	4b0c      	ldr	r3, [pc, #48]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010b2:	2200      	movs	r2, #0
 80010b4:	649a      	str	r2, [r3, #72]	@ 0x48
  hspi3.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 80010b6:	4b0b      	ldr	r3, [pc, #44]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010b8:	2200      	movs	r2, #0
 80010ba:	64da      	str	r2, [r3, #76]	@ 0x4c
  hspi3.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 80010bc:	4b09      	ldr	r3, [pc, #36]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010be:	2200      	movs	r2, #0
 80010c0:	651a      	str	r2, [r3, #80]	@ 0x50
  hspi3.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 80010c2:	4b08      	ldr	r3, [pc, #32]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010c4:	2200      	movs	r2, #0
 80010c6:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi3.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 80010c8:	4b06      	ldr	r3, [pc, #24]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010ca:	2200      	movs	r2, #0
 80010cc:	659a      	str	r2, [r3, #88]	@ 0x58
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 80010ce:	4805      	ldr	r0, [pc, #20]	@ (80010e4 <MX_SPI3_Init+0xa4>)
 80010d0:	f00d fb08 	bl	800e6e4 <HAL_SPI_Init>
 80010d4:	4603      	mov	r3, r0
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	d001      	beq.n	80010de <MX_SPI3_Init+0x9e>
  {
    Error_Handler();
 80010da:	f000 fc09 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 80010de:	bf00      	nop
 80010e0:	bd80      	pop	{r7, pc}
 80010e2:	bf00      	nop
 80010e4:	240005a8 	.word	0x240005a8
 80010e8:	40003c00 	.word	0x40003c00

080010ec <MX_SPI4_Init>:
  * @brief SPI4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI4_Init(void)
{
 80010ec:	b580      	push	{r7, lr}
 80010ee:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI4_Init 1 */

  /* USER CODE END SPI4_Init 1 */
  /* SPI4 parameter configuration*/
  hspi4.Instance = SPI4;
 80010f0:	4b27      	ldr	r3, [pc, #156]	@ (8001190 <MX_SPI4_Init+0xa4>)
 80010f2:	4a28      	ldr	r2, [pc, #160]	@ (8001194 <MX_SPI4_Init+0xa8>)
 80010f4:	601a      	str	r2, [r3, #0]
  hspi4.Init.Mode = SPI_MODE_MASTER;
 80010f6:	4b26      	ldr	r3, [pc, #152]	@ (8001190 <MX_SPI4_Init+0xa4>)
 80010f8:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 80010fc:	605a      	str	r2, [r3, #4]
  hspi4.Init.Direction = SPI_DIRECTION_2LINES;
 80010fe:	4b24      	ldr	r3, [pc, #144]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001100:	2200      	movs	r2, #0
 8001102:	609a      	str	r2, [r3, #8]
  hspi4.Init.DataSize = SPI_DATASIZE_4BIT;
 8001104:	4b22      	ldr	r3, [pc, #136]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001106:	2203      	movs	r2, #3
 8001108:	60da      	str	r2, [r3, #12]
  hspi4.Init.CLKPolarity = SPI_POLARITY_LOW;
 800110a:	4b21      	ldr	r3, [pc, #132]	@ (8001190 <MX_SPI4_Init+0xa4>)
 800110c:	2200      	movs	r2, #0
 800110e:	611a      	str	r2, [r3, #16]
  hspi4.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001110:	4b1f      	ldr	r3, [pc, #124]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001112:	2200      	movs	r2, #0
 8001114:	615a      	str	r2, [r3, #20]
  hspi4.Init.NSS = SPI_NSS_SOFT;
 8001116:	4b1e      	ldr	r3, [pc, #120]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001118:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800111c:	619a      	str	r2, [r3, #24]
  hspi4.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800111e:	4b1c      	ldr	r3, [pc, #112]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001120:	2200      	movs	r2, #0
 8001122:	61da      	str	r2, [r3, #28]
  hspi4.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001124:	4b1a      	ldr	r3, [pc, #104]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001126:	2200      	movs	r2, #0
 8001128:	621a      	str	r2, [r3, #32]
  hspi4.Init.TIMode = SPI_TIMODE_DISABLE;
 800112a:	4b19      	ldr	r3, [pc, #100]	@ (8001190 <MX_SPI4_Init+0xa4>)
 800112c:	2200      	movs	r2, #0
 800112e:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi4.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001130:	4b17      	ldr	r3, [pc, #92]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001132:	2200      	movs	r2, #0
 8001134:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi4.Init.CRCPolynomial = 0x0;
 8001136:	4b16      	ldr	r3, [pc, #88]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001138:	2200      	movs	r2, #0
 800113a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi4.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 800113c:	4b14      	ldr	r3, [pc, #80]	@ (8001190 <MX_SPI4_Init+0xa4>)
 800113e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001142:	635a      	str	r2, [r3, #52]	@ 0x34
  hspi4.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8001144:	4b12      	ldr	r3, [pc, #72]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001146:	2200      	movs	r2, #0
 8001148:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi4.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 800114a:	4b11      	ldr	r3, [pc, #68]	@ (8001190 <MX_SPI4_Init+0xa4>)
 800114c:	2200      	movs	r2, #0
 800114e:	63da      	str	r2, [r3, #60]	@ 0x3c
  hspi4.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8001150:	4b0f      	ldr	r3, [pc, #60]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001152:	2200      	movs	r2, #0
 8001154:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi4.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8001156:	4b0e      	ldr	r3, [pc, #56]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001158:	2200      	movs	r2, #0
 800115a:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi4.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 800115c:	4b0c      	ldr	r3, [pc, #48]	@ (8001190 <MX_SPI4_Init+0xa4>)
 800115e:	2200      	movs	r2, #0
 8001160:	649a      	str	r2, [r3, #72]	@ 0x48
  hspi4.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 8001162:	4b0b      	ldr	r3, [pc, #44]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001164:	2200      	movs	r2, #0
 8001166:	64da      	str	r2, [r3, #76]	@ 0x4c
  hspi4.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 8001168:	4b09      	ldr	r3, [pc, #36]	@ (8001190 <MX_SPI4_Init+0xa4>)
 800116a:	2200      	movs	r2, #0
 800116c:	651a      	str	r2, [r3, #80]	@ 0x50
  hspi4.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 800116e:	4b08      	ldr	r3, [pc, #32]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001170:	2200      	movs	r2, #0
 8001172:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi4.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 8001174:	4b06      	ldr	r3, [pc, #24]	@ (8001190 <MX_SPI4_Init+0xa4>)
 8001176:	2200      	movs	r2, #0
 8001178:	659a      	str	r2, [r3, #88]	@ 0x58
  if (HAL_SPI_Init(&hspi4) != HAL_OK)
 800117a:	4805      	ldr	r0, [pc, #20]	@ (8001190 <MX_SPI4_Init+0xa4>)
 800117c:	f00d fab2 	bl	800e6e4 <HAL_SPI_Init>
 8001180:	4603      	mov	r3, r0
 8001182:	2b00      	cmp	r3, #0
 8001184:	d001      	beq.n	800118a <MX_SPI4_Init+0x9e>
  {
    Error_Handler();
 8001186:	f000 fbb3 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI4_Init 2 */

  /* USER CODE END SPI4_Init 2 */

}
 800118a:	bf00      	nop
 800118c:	bd80      	pop	{r7, pc}
 800118e:	bf00      	nop
 8001190:	24000630 	.word	0x24000630
 8001194:	40013400 	.word	0x40013400

08001198 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8001198:	b580      	push	{r7, lr}
 800119a:	b088      	sub	sp, #32
 800119c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800119e:	f107 0310 	add.w	r3, r7, #16
 80011a2:	2200      	movs	r2, #0
 80011a4:	601a      	str	r2, [r3, #0]
 80011a6:	605a      	str	r2, [r3, #4]
 80011a8:	609a      	str	r2, [r3, #8]
 80011aa:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80011ac:	1d3b      	adds	r3, r7, #4
 80011ae:	2200      	movs	r2, #0
 80011b0:	601a      	str	r2, [r3, #0]
 80011b2:	605a      	str	r2, [r3, #4]
 80011b4:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80011b6:	4b20      	ldr	r3, [pc, #128]	@ (8001238 <MX_TIM1_Init+0xa0>)
 80011b8:	4a20      	ldr	r2, [pc, #128]	@ (800123c <MX_TIM1_Init+0xa4>)
 80011ba:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 80011bc:	4b1e      	ldr	r3, [pc, #120]	@ (8001238 <MX_TIM1_Init+0xa0>)
 80011be:	2200      	movs	r2, #0
 80011c0:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80011c2:	4b1d      	ldr	r3, [pc, #116]	@ (8001238 <MX_TIM1_Init+0xa0>)
 80011c4:	2200      	movs	r2, #0
 80011c6:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 80011c8:	4b1b      	ldr	r3, [pc, #108]	@ (8001238 <MX_TIM1_Init+0xa0>)
 80011ca:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80011ce:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80011d0:	4b19      	ldr	r3, [pc, #100]	@ (8001238 <MX_TIM1_Init+0xa0>)
 80011d2:	2200      	movs	r2, #0
 80011d4:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80011d6:	4b18      	ldr	r3, [pc, #96]	@ (8001238 <MX_TIM1_Init+0xa0>)
 80011d8:	2200      	movs	r2, #0
 80011da:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80011dc:	4b16      	ldr	r3, [pc, #88]	@ (8001238 <MX_TIM1_Init+0xa0>)
 80011de:	2200      	movs	r2, #0
 80011e0:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80011e2:	4815      	ldr	r0, [pc, #84]	@ (8001238 <MX_TIM1_Init+0xa0>)
 80011e4:	f00d fbbd 	bl	800e962 <HAL_TIM_Base_Init>
 80011e8:	4603      	mov	r3, r0
 80011ea:	2b00      	cmp	r3, #0
 80011ec:	d001      	beq.n	80011f2 <MX_TIM1_Init+0x5a>
  {
    Error_Handler();
 80011ee:	f000 fb7f 	bl	80018f0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80011f2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80011f6:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 80011f8:	f107 0310 	add.w	r3, r7, #16
 80011fc:	4619      	mov	r1, r3
 80011fe:	480e      	ldr	r0, [pc, #56]	@ (8001238 <MX_TIM1_Init+0xa0>)
 8001200:	f00e fb6e 	bl	800f8e0 <HAL_TIM_ConfigClockSource>
 8001204:	4603      	mov	r3, r0
 8001206:	2b00      	cmp	r3, #0
 8001208:	d001      	beq.n	800120e <MX_TIM1_Init+0x76>
  {
    Error_Handler();
 800120a:	f000 fb71 	bl	80018f0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 800120e:	2320      	movs	r3, #32
 8001210:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8001212:	2300      	movs	r3, #0
 8001214:	60bb      	str	r3, [r7, #8]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001216:	2300      	movs	r3, #0
 8001218:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800121a:	1d3b      	adds	r3, r7, #4
 800121c:	4619      	mov	r1, r3
 800121e:	4806      	ldr	r0, [pc, #24]	@ (8001238 <MX_TIM1_Init+0xa0>)
 8001220:	f00f f9b0 	bl	8010584 <HAL_TIMEx_MasterConfigSynchronization>
 8001224:	4603      	mov	r3, r0
 8001226:	2b00      	cmp	r3, #0
 8001228:	d001      	beq.n	800122e <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 800122a:	f000 fb61 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 800122e:	bf00      	nop
 8001230:	3720      	adds	r7, #32
 8001232:	46bd      	mov	sp, r7
 8001234:	bd80      	pop	{r7, pc}
 8001236:	bf00      	nop
 8001238:	240006b8 	.word	0x240006b8
 800123c:	40010000 	.word	0x40010000

08001240 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001240:	b580      	push	{r7, lr}
 8001242:	b088      	sub	sp, #32
 8001244:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001246:	f107 0310 	add.w	r3, r7, #16
 800124a:	2200      	movs	r2, #0
 800124c:	601a      	str	r2, [r3, #0]
 800124e:	605a      	str	r2, [r3, #4]
 8001250:	609a      	str	r2, [r3, #8]
 8001252:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001254:	1d3b      	adds	r3, r7, #4
 8001256:	2200      	movs	r2, #0
 8001258:	601a      	str	r2, [r3, #0]
 800125a:	605a      	str	r2, [r3, #4]
 800125c:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800125e:	4b1e      	ldr	r3, [pc, #120]	@ (80012d8 <MX_TIM2_Init+0x98>)
 8001260:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001264:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8001266:	4b1c      	ldr	r3, [pc, #112]	@ (80012d8 <MX_TIM2_Init+0x98>)
 8001268:	2200      	movs	r2, #0
 800126a:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800126c:	4b1a      	ldr	r3, [pc, #104]	@ (80012d8 <MX_TIM2_Init+0x98>)
 800126e:	2200      	movs	r2, #0
 8001270:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 8001272:	4b19      	ldr	r3, [pc, #100]	@ (80012d8 <MX_TIM2_Init+0x98>)
 8001274:	f04f 32ff 	mov.w	r2, #4294967295
 8001278:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800127a:	4b17      	ldr	r3, [pc, #92]	@ (80012d8 <MX_TIM2_Init+0x98>)
 800127c:	2200      	movs	r2, #0
 800127e:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001280:	4b15      	ldr	r3, [pc, #84]	@ (80012d8 <MX_TIM2_Init+0x98>)
 8001282:	2200      	movs	r2, #0
 8001284:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001286:	4814      	ldr	r0, [pc, #80]	@ (80012d8 <MX_TIM2_Init+0x98>)
 8001288:	f00d fb6b 	bl	800e962 <HAL_TIM_Base_Init>
 800128c:	4603      	mov	r3, r0
 800128e:	2b00      	cmp	r3, #0
 8001290:	d001      	beq.n	8001296 <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 8001292:	f000 fb2d 	bl	80018f0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001296:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800129a:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800129c:	f107 0310 	add.w	r3, r7, #16
 80012a0:	4619      	mov	r1, r3
 80012a2:	480d      	ldr	r0, [pc, #52]	@ (80012d8 <MX_TIM2_Init+0x98>)
 80012a4:	f00e fb1c 	bl	800f8e0 <HAL_TIM_ConfigClockSource>
 80012a8:	4603      	mov	r3, r0
 80012aa:	2b00      	cmp	r3, #0
 80012ac:	d001      	beq.n	80012b2 <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 80012ae:	f000 fb1f 	bl	80018f0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 80012b2:	2320      	movs	r3, #32
 80012b4:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80012b6:	2300      	movs	r3, #0
 80012b8:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80012ba:	1d3b      	adds	r3, r7, #4
 80012bc:	4619      	mov	r1, r3
 80012be:	4806      	ldr	r0, [pc, #24]	@ (80012d8 <MX_TIM2_Init+0x98>)
 80012c0:	f00f f960 	bl	8010584 <HAL_TIMEx_MasterConfigSynchronization>
 80012c4:	4603      	mov	r3, r0
 80012c6:	2b00      	cmp	r3, #0
 80012c8:	d001      	beq.n	80012ce <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 80012ca:	f000 fb11 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80012ce:	bf00      	nop
 80012d0:	3720      	adds	r7, #32
 80012d2:	46bd      	mov	sp, r7
 80012d4:	bd80      	pop	{r7, pc}
 80012d6:	bf00      	nop
 80012d8:	24000704 	.word	0x24000704

080012dc <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80012dc:	b580      	push	{r7, lr}
 80012de:	b08e      	sub	sp, #56	@ 0x38
 80012e0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80012e2:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80012e6:	2200      	movs	r2, #0
 80012e8:	601a      	str	r2, [r3, #0]
 80012ea:	605a      	str	r2, [r3, #4]
 80012ec:	609a      	str	r2, [r3, #8]
 80012ee:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80012f0:	f107 031c 	add.w	r3, r7, #28
 80012f4:	2200      	movs	r2, #0
 80012f6:	601a      	str	r2, [r3, #0]
 80012f8:	605a      	str	r2, [r3, #4]
 80012fa:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80012fc:	463b      	mov	r3, r7
 80012fe:	2200      	movs	r2, #0
 8001300:	601a      	str	r2, [r3, #0]
 8001302:	605a      	str	r2, [r3, #4]
 8001304:	609a      	str	r2, [r3, #8]
 8001306:	60da      	str	r2, [r3, #12]
 8001308:	611a      	str	r2, [r3, #16]
 800130a:	615a      	str	r2, [r3, #20]
 800130c:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 800130e:	4b38      	ldr	r3, [pc, #224]	@ (80013f0 <MX_TIM3_Init+0x114>)
 8001310:	4a38      	ldr	r2, [pc, #224]	@ (80013f4 <MX_TIM3_Init+0x118>)
 8001312:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 8001314:	4b36      	ldr	r3, [pc, #216]	@ (80013f0 <MX_TIM3_Init+0x114>)
 8001316:	2200      	movs	r2, #0
 8001318:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800131a:	4b35      	ldr	r3, [pc, #212]	@ (80013f0 <MX_TIM3_Init+0x114>)
 800131c:	2200      	movs	r2, #0
 800131e:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 8001320:	4b33      	ldr	r3, [pc, #204]	@ (80013f0 <MX_TIM3_Init+0x114>)
 8001322:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001326:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001328:	4b31      	ldr	r3, [pc, #196]	@ (80013f0 <MX_TIM3_Init+0x114>)
 800132a:	2200      	movs	r2, #0
 800132c:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800132e:	4b30      	ldr	r3, [pc, #192]	@ (80013f0 <MX_TIM3_Init+0x114>)
 8001330:	2200      	movs	r2, #0
 8001332:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001334:	482e      	ldr	r0, [pc, #184]	@ (80013f0 <MX_TIM3_Init+0x114>)
 8001336:	f00d fb14 	bl	800e962 <HAL_TIM_Base_Init>
 800133a:	4603      	mov	r3, r0
 800133c:	2b00      	cmp	r3, #0
 800133e:	d001      	beq.n	8001344 <MX_TIM3_Init+0x68>
  {
    Error_Handler();
 8001340:	f000 fad6 	bl	80018f0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001344:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001348:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800134a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800134e:	4619      	mov	r1, r3
 8001350:	4827      	ldr	r0, [pc, #156]	@ (80013f0 <MX_TIM3_Init+0x114>)
 8001352:	f00e fac5 	bl	800f8e0 <HAL_TIM_ConfigClockSource>
 8001356:	4603      	mov	r3, r0
 8001358:	2b00      	cmp	r3, #0
 800135a:	d001      	beq.n	8001360 <MX_TIM3_Init+0x84>
  {
    Error_Handler();
 800135c:	f000 fac8 	bl	80018f0 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8001360:	4823      	ldr	r0, [pc, #140]	@ (80013f0 <MX_TIM3_Init+0x114>)
 8001362:	f00d fc59 	bl	800ec18 <HAL_TIM_PWM_Init>
 8001366:	4603      	mov	r3, r0
 8001368:	2b00      	cmp	r3, #0
 800136a:	d001      	beq.n	8001370 <MX_TIM3_Init+0x94>
  {
    Error_Handler();
 800136c:	f000 fac0 	bl	80018f0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001370:	2300      	movs	r3, #0
 8001372:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001374:	2300      	movs	r3, #0
 8001376:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001378:	f107 031c 	add.w	r3, r7, #28
 800137c:	4619      	mov	r1, r3
 800137e:	481c      	ldr	r0, [pc, #112]	@ (80013f0 <MX_TIM3_Init+0x114>)
 8001380:	f00f f900 	bl	8010584 <HAL_TIMEx_MasterConfigSynchronization>
 8001384:	4603      	mov	r3, r0
 8001386:	2b00      	cmp	r3, #0
 8001388:	d001      	beq.n	800138e <MX_TIM3_Init+0xb2>
  {
    Error_Handler();
 800138a:	f000 fab1 	bl	80018f0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800138e:	2360      	movs	r3, #96	@ 0x60
 8001390:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 8001392:	2300      	movs	r3, #0
 8001394:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001396:	2300      	movs	r3, #0
 8001398:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800139a:	2300      	movs	r3, #0
 800139c:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800139e:	463b      	mov	r3, r7
 80013a0:	2200      	movs	r2, #0
 80013a2:	4619      	mov	r1, r3
 80013a4:	4812      	ldr	r0, [pc, #72]	@ (80013f0 <MX_TIM3_Init+0x114>)
 80013a6:	f00e f987 	bl	800f6b8 <HAL_TIM_PWM_ConfigChannel>
 80013aa:	4603      	mov	r3, r0
 80013ac:	2b00      	cmp	r3, #0
 80013ae:	d001      	beq.n	80013b4 <MX_TIM3_Init+0xd8>
  {
    Error_Handler();
 80013b0:	f000 fa9e 	bl	80018f0 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80013b4:	463b      	mov	r3, r7
 80013b6:	2204      	movs	r2, #4
 80013b8:	4619      	mov	r1, r3
 80013ba:	480d      	ldr	r0, [pc, #52]	@ (80013f0 <MX_TIM3_Init+0x114>)
 80013bc:	f00e f97c 	bl	800f6b8 <HAL_TIM_PWM_ConfigChannel>
 80013c0:	4603      	mov	r3, r0
 80013c2:	2b00      	cmp	r3, #0
 80013c4:	d001      	beq.n	80013ca <MX_TIM3_Init+0xee>
  {
    Error_Handler();
 80013c6:	f000 fa93 	bl	80018f0 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 80013ca:	463b      	mov	r3, r7
 80013cc:	2208      	movs	r2, #8
 80013ce:	4619      	mov	r1, r3
 80013d0:	4807      	ldr	r0, [pc, #28]	@ (80013f0 <MX_TIM3_Init+0x114>)
 80013d2:	f00e f971 	bl	800f6b8 <HAL_TIM_PWM_ConfigChannel>
 80013d6:	4603      	mov	r3, r0
 80013d8:	2b00      	cmp	r3, #0
 80013da:	d001      	beq.n	80013e0 <MX_TIM3_Init+0x104>
  {
    Error_Handler();
 80013dc:	f000 fa88 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 80013e0:	4803      	ldr	r0, [pc, #12]	@ (80013f0 <MX_TIM3_Init+0x114>)
 80013e2:	f000 fe93 	bl	800210c <HAL_TIM_MspPostInit>

}
 80013e6:	bf00      	nop
 80013e8:	3738      	adds	r7, #56	@ 0x38
 80013ea:	46bd      	mov	sp, r7
 80013ec:	bd80      	pop	{r7, pc}
 80013ee:	bf00      	nop
 80013f0:	24000750 	.word	0x24000750
 80013f4:	40000400 	.word	0x40000400

080013f8 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 80013f8:	b580      	push	{r7, lr}
 80013fa:	b08e      	sub	sp, #56	@ 0x38
 80013fc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80013fe:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001402:	2200      	movs	r2, #0
 8001404:	601a      	str	r2, [r3, #0]
 8001406:	605a      	str	r2, [r3, #4]
 8001408:	609a      	str	r2, [r3, #8]
 800140a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800140c:	f107 031c 	add.w	r3, r7, #28
 8001410:	2200      	movs	r2, #0
 8001412:	601a      	str	r2, [r3, #0]
 8001414:	605a      	str	r2, [r3, #4]
 8001416:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001418:	463b      	mov	r3, r7
 800141a:	2200      	movs	r2, #0
 800141c:	601a      	str	r2, [r3, #0]
 800141e:	605a      	str	r2, [r3, #4]
 8001420:	609a      	str	r2, [r3, #8]
 8001422:	60da      	str	r2, [r3, #12]
 8001424:	611a      	str	r2, [r3, #16]
 8001426:	615a      	str	r2, [r3, #20]
 8001428:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 800142a:	4b2d      	ldr	r3, [pc, #180]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 800142c:	4a2d      	ldr	r2, [pc, #180]	@ (80014e4 <MX_TIM4_Init+0xec>)
 800142e:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8001430:	4b2b      	ldr	r3, [pc, #172]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 8001432:	2200      	movs	r2, #0
 8001434:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001436:	4b2a      	ldr	r3, [pc, #168]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 8001438:	2200      	movs	r2, #0
 800143a:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 800143c:	4b28      	ldr	r3, [pc, #160]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 800143e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001442:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001444:	4b26      	ldr	r3, [pc, #152]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 8001446:	2200      	movs	r2, #0
 8001448:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800144a:	4b25      	ldr	r3, [pc, #148]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 800144c:	2200      	movs	r2, #0
 800144e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001450:	4823      	ldr	r0, [pc, #140]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 8001452:	f00d fa86 	bl	800e962 <HAL_TIM_Base_Init>
 8001456:	4603      	mov	r3, r0
 8001458:	2b00      	cmp	r3, #0
 800145a:	d001      	beq.n	8001460 <MX_TIM4_Init+0x68>
  {
    Error_Handler();
 800145c:	f000 fa48 	bl	80018f0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001460:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001464:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001466:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800146a:	4619      	mov	r1, r3
 800146c:	481c      	ldr	r0, [pc, #112]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 800146e:	f00e fa37 	bl	800f8e0 <HAL_TIM_ConfigClockSource>
 8001472:	4603      	mov	r3, r0
 8001474:	2b00      	cmp	r3, #0
 8001476:	d001      	beq.n	800147c <MX_TIM4_Init+0x84>
  {
    Error_Handler();
 8001478:	f000 fa3a 	bl	80018f0 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 800147c:	4818      	ldr	r0, [pc, #96]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 800147e:	f00d fbcb 	bl	800ec18 <HAL_TIM_PWM_Init>
 8001482:	4603      	mov	r3, r0
 8001484:	2b00      	cmp	r3, #0
 8001486:	d001      	beq.n	800148c <MX_TIM4_Init+0x94>
  {
    Error_Handler();
 8001488:	f000 fa32 	bl	80018f0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800148c:	2300      	movs	r3, #0
 800148e:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001490:	2300      	movs	r3, #0
 8001492:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001494:	f107 031c 	add.w	r3, r7, #28
 8001498:	4619      	mov	r1, r3
 800149a:	4811      	ldr	r0, [pc, #68]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 800149c:	f00f f872 	bl	8010584 <HAL_TIMEx_MasterConfigSynchronization>
 80014a0:	4603      	mov	r3, r0
 80014a2:	2b00      	cmp	r3, #0
 80014a4:	d001      	beq.n	80014aa <MX_TIM4_Init+0xb2>
  {
    Error_Handler();
 80014a6:	f000 fa23 	bl	80018f0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80014aa:	2360      	movs	r3, #96	@ 0x60
 80014ac:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 80014ae:	2300      	movs	r3, #0
 80014b0:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80014b2:	2300      	movs	r3, #0
 80014b4:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80014b6:	2300      	movs	r3, #0
 80014b8:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80014ba:	463b      	mov	r3, r7
 80014bc:	2200      	movs	r2, #0
 80014be:	4619      	mov	r1, r3
 80014c0:	4807      	ldr	r0, [pc, #28]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 80014c2:	f00e f8f9 	bl	800f6b8 <HAL_TIM_PWM_ConfigChannel>
 80014c6:	4603      	mov	r3, r0
 80014c8:	2b00      	cmp	r3, #0
 80014ca:	d001      	beq.n	80014d0 <MX_TIM4_Init+0xd8>
  {
    Error_Handler();
 80014cc:	f000 fa10 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 80014d0:	4803      	ldr	r0, [pc, #12]	@ (80014e0 <MX_TIM4_Init+0xe8>)
 80014d2:	f000 fe1b 	bl	800210c <HAL_TIM_MspPostInit>

}
 80014d6:	bf00      	nop
 80014d8:	3738      	adds	r7, #56	@ 0x38
 80014da:	46bd      	mov	sp, r7
 80014dc:	bd80      	pop	{r7, pc}
 80014de:	bf00      	nop
 80014e0:	2400079c 	.word	0x2400079c
 80014e4:	40000800 	.word	0x40000800

080014e8 <MX_UART7_Init>:
  * @brief UART7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART7_Init(void)
{
 80014e8:	b580      	push	{r7, lr}
 80014ea:	af00      	add	r7, sp, #0
  /* USER CODE END UART7_Init 0 */

  /* USER CODE BEGIN UART7_Init 1 */

  /* USER CODE END UART7_Init 1 */
  huart7.Instance = UART7;
 80014ec:	4b23      	ldr	r3, [pc, #140]	@ (800157c <MX_UART7_Init+0x94>)
 80014ee:	4a24      	ldr	r2, [pc, #144]	@ (8001580 <MX_UART7_Init+0x98>)
 80014f0:	601a      	str	r2, [r3, #0]
  huart7.Init.BaudRate = 115200;
 80014f2:	4b22      	ldr	r3, [pc, #136]	@ (800157c <MX_UART7_Init+0x94>)
 80014f4:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80014f8:	605a      	str	r2, [r3, #4]
  huart7.Init.WordLength = UART_WORDLENGTH_8B;
 80014fa:	4b20      	ldr	r3, [pc, #128]	@ (800157c <MX_UART7_Init+0x94>)
 80014fc:	2200      	movs	r2, #0
 80014fe:	609a      	str	r2, [r3, #8]
  huart7.Init.StopBits = UART_STOPBITS_1;
 8001500:	4b1e      	ldr	r3, [pc, #120]	@ (800157c <MX_UART7_Init+0x94>)
 8001502:	2200      	movs	r2, #0
 8001504:	60da      	str	r2, [r3, #12]
  huart7.Init.Parity = UART_PARITY_NONE;
 8001506:	4b1d      	ldr	r3, [pc, #116]	@ (800157c <MX_UART7_Init+0x94>)
 8001508:	2200      	movs	r2, #0
 800150a:	611a      	str	r2, [r3, #16]
  huart7.Init.Mode = UART_MODE_TX_RX;
 800150c:	4b1b      	ldr	r3, [pc, #108]	@ (800157c <MX_UART7_Init+0x94>)
 800150e:	220c      	movs	r2, #12
 8001510:	615a      	str	r2, [r3, #20]
  huart7.Init.HwFlowCtl = UART_HWCONTROL_RTS_CTS;
 8001512:	4b1a      	ldr	r3, [pc, #104]	@ (800157c <MX_UART7_Init+0x94>)
 8001514:	f44f 7240 	mov.w	r2, #768	@ 0x300
 8001518:	619a      	str	r2, [r3, #24]
  huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 800151a:	4b18      	ldr	r3, [pc, #96]	@ (800157c <MX_UART7_Init+0x94>)
 800151c:	2200      	movs	r2, #0
 800151e:	61da      	str	r2, [r3, #28]
  huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001520:	4b16      	ldr	r3, [pc, #88]	@ (800157c <MX_UART7_Init+0x94>)
 8001522:	2200      	movs	r2, #0
 8001524:	621a      	str	r2, [r3, #32]
  huart7.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8001526:	4b15      	ldr	r3, [pc, #84]	@ (800157c <MX_UART7_Init+0x94>)
 8001528:	2200      	movs	r2, #0
 800152a:	625a      	str	r2, [r3, #36]	@ 0x24
  huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800152c:	4b13      	ldr	r3, [pc, #76]	@ (800157c <MX_UART7_Init+0x94>)
 800152e:	2200      	movs	r2, #0
 8001530:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart7) != HAL_OK)
 8001532:	4812      	ldr	r0, [pc, #72]	@ (800157c <MX_UART7_Init+0x94>)
 8001534:	f00f f8e0 	bl	80106f8 <HAL_UART_Init>
 8001538:	4603      	mov	r3, r0
 800153a:	2b00      	cmp	r3, #0
 800153c:	d001      	beq.n	8001542 <MX_UART7_Init+0x5a>
  {
    Error_Handler();
 800153e:	f000 f9d7 	bl	80018f0 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart7, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001542:	2100      	movs	r1, #0
 8001544:	480d      	ldr	r0, [pc, #52]	@ (800157c <MX_UART7_Init+0x94>)
 8001546:	f010 f9ec 	bl	8011922 <HAL_UARTEx_SetTxFifoThreshold>
 800154a:	4603      	mov	r3, r0
 800154c:	2b00      	cmp	r3, #0
 800154e:	d001      	beq.n	8001554 <MX_UART7_Init+0x6c>
  {
    Error_Handler();
 8001550:	f000 f9ce 	bl	80018f0 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart7, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001554:	2100      	movs	r1, #0
 8001556:	4809      	ldr	r0, [pc, #36]	@ (800157c <MX_UART7_Init+0x94>)
 8001558:	f010 fa21 	bl	801199e <HAL_UARTEx_SetRxFifoThreshold>
 800155c:	4603      	mov	r3, r0
 800155e:	2b00      	cmp	r3, #0
 8001560:	d001      	beq.n	8001566 <MX_UART7_Init+0x7e>
  {
    Error_Handler();
 8001562:	f000 f9c5 	bl	80018f0 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart7) != HAL_OK)
 8001566:	4805      	ldr	r0, [pc, #20]	@ (800157c <MX_UART7_Init+0x94>)
 8001568:	f010 f9a2 	bl	80118b0 <HAL_UARTEx_DisableFifoMode>
 800156c:	4603      	mov	r3, r0
 800156e:	2b00      	cmp	r3, #0
 8001570:	d001      	beq.n	8001576 <MX_UART7_Init+0x8e>
  {
    Error_Handler();
 8001572:	f000 f9bd 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN UART7_Init 2 */

  /* USER CODE END UART7_Init 2 */

}
 8001576:	bf00      	nop
 8001578:	bd80      	pop	{r7, pc}
 800157a:	bf00      	nop
 800157c:	24000860 	.word	0x24000860
 8001580:	40007800 	.word	0x40007800

08001584 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8001584:	b580      	push	{r7, lr}
 8001586:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001588:	4b22      	ldr	r3, [pc, #136]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 800158a:	4a23      	ldr	r2, [pc, #140]	@ (8001618 <MX_USART1_UART_Init+0x94>)
 800158c:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800158e:	4b21      	ldr	r3, [pc, #132]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 8001590:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001594:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001596:	4b1f      	ldr	r3, [pc, #124]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 8001598:	2200      	movs	r2, #0
 800159a:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800159c:	4b1d      	ldr	r3, [pc, #116]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 800159e:	2200      	movs	r2, #0
 80015a0:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80015a2:	4b1c      	ldr	r3, [pc, #112]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015a4:	2200      	movs	r2, #0
 80015a6:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80015a8:	4b1a      	ldr	r3, [pc, #104]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015aa:	220c      	movs	r2, #12
 80015ac:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80015ae:	4b19      	ldr	r3, [pc, #100]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015b0:	2200      	movs	r2, #0
 80015b2:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80015b4:	4b17      	ldr	r3, [pc, #92]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015b6:	2200      	movs	r2, #0
 80015b8:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80015ba:	4b16      	ldr	r3, [pc, #88]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015bc:	2200      	movs	r2, #0
 80015be:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 80015c0:	4b14      	ldr	r3, [pc, #80]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015c2:	2200      	movs	r2, #0
 80015c4:	625a      	str	r2, [r3, #36]	@ 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80015c6:	4b13      	ldr	r3, [pc, #76]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015c8:	2200      	movs	r2, #0
 80015ca:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80015cc:	4811      	ldr	r0, [pc, #68]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015ce:	f00f f893 	bl	80106f8 <HAL_UART_Init>
 80015d2:	4603      	mov	r3, r0
 80015d4:	2b00      	cmp	r3, #0
 80015d6:	d001      	beq.n	80015dc <MX_USART1_UART_Init+0x58>
  {
    Error_Handler();
 80015d8:	f000 f98a 	bl	80018f0 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 80015dc:	2100      	movs	r1, #0
 80015de:	480d      	ldr	r0, [pc, #52]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015e0:	f010 f99f 	bl	8011922 <HAL_UARTEx_SetTxFifoThreshold>
 80015e4:	4603      	mov	r3, r0
 80015e6:	2b00      	cmp	r3, #0
 80015e8:	d001      	beq.n	80015ee <MX_USART1_UART_Init+0x6a>
  {
    Error_Handler();
 80015ea:	f000 f981 	bl	80018f0 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 80015ee:	2100      	movs	r1, #0
 80015f0:	4808      	ldr	r0, [pc, #32]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 80015f2:	f010 f9d4 	bl	801199e <HAL_UARTEx_SetRxFifoThreshold>
 80015f6:	4603      	mov	r3, r0
 80015f8:	2b00      	cmp	r3, #0
 80015fa:	d001      	beq.n	8001600 <MX_USART1_UART_Init+0x7c>
  {
    Error_Handler();
 80015fc:	f000 f978 	bl	80018f0 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 8001600:	4804      	ldr	r0, [pc, #16]	@ (8001614 <MX_USART1_UART_Init+0x90>)
 8001602:	f010 f955 	bl	80118b0 <HAL_UARTEx_DisableFifoMode>
 8001606:	4603      	mov	r3, r0
 8001608:	2b00      	cmp	r3, #0
 800160a:	d001      	beq.n	8001610 <MX_USART1_UART_Init+0x8c>
  {
    Error_Handler();
 800160c:	f000 f970 	bl	80018f0 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8001610:	bf00      	nop
 8001612:	bd80      	pop	{r7, pc}
 8001614:	240008f4 	.word	0x240008f4
 8001618:	40011000 	.word	0x40011000

0800161c <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 800161c:	b580      	push	{r7, lr}
 800161e:	b082      	sub	sp, #8
 8001620:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001622:	4b15      	ldr	r3, [pc, #84]	@ (8001678 <MX_DMA_Init+0x5c>)
 8001624:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8001628:	4a13      	ldr	r2, [pc, #76]	@ (8001678 <MX_DMA_Init+0x5c>)
 800162a:	f043 0301 	orr.w	r3, r3, #1
 800162e:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8001632:	4b11      	ldr	r3, [pc, #68]	@ (8001678 <MX_DMA_Init+0x5c>)
 8001634:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8001638:	f003 0301 	and.w	r3, r3, #1
 800163c:	607b      	str	r3, [r7, #4]
 800163e:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 8001640:	2200      	movs	r2, #0
 8001642:	2100      	movs	r1, #0
 8001644:	200b      	movs	r0, #11
 8001646:	f005 fad2 	bl	8006bee <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 800164a:	200b      	movs	r0, #11
 800164c:	f005 fae9 	bl	8006c22 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 0, 0);
 8001650:	2200      	movs	r2, #0
 8001652:	2100      	movs	r1, #0
 8001654:	200c      	movs	r0, #12
 8001656:	f005 faca 	bl	8006bee <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 800165a:	200c      	movs	r0, #12
 800165c:	f005 fae1 	bl	8006c22 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream2_IRQn, 0, 0);
 8001660:	2200      	movs	r2, #0
 8001662:	2100      	movs	r1, #0
 8001664:	200d      	movs	r0, #13
 8001666:	f005 fac2 	bl	8006bee <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream2_IRQn);
 800166a:	200d      	movs	r0, #13
 800166c:	f005 fad9 	bl	8006c22 <HAL_NVIC_EnableIRQ>

}
 8001670:	bf00      	nop
 8001672:	3708      	adds	r7, #8
 8001674:	46bd      	mov	sp, r7
 8001676:	bd80      	pop	{r7, pc}
 8001678:	58024400 	.word	0x58024400

0800167c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800167c:	b580      	push	{r7, lr}
 800167e:	b08c      	sub	sp, #48	@ 0x30
 8001680:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001682:	f107 031c 	add.w	r3, r7, #28
 8001686:	2200      	movs	r2, #0
 8001688:	601a      	str	r2, [r3, #0]
 800168a:	605a      	str	r2, [r3, #4]
 800168c:	609a      	str	r2, [r3, #8]
 800168e:	60da      	str	r2, [r3, #12]
 8001690:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001692:	4b7b      	ldr	r3, [pc, #492]	@ (8001880 <MX_GPIO_Init+0x204>)
 8001694:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001698:	4a79      	ldr	r2, [pc, #484]	@ (8001880 <MX_GPIO_Init+0x204>)
 800169a:	f043 0310 	orr.w	r3, r3, #16
 800169e:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80016a2:	4b77      	ldr	r3, [pc, #476]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016a4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80016a8:	f003 0310 	and.w	r3, r3, #16
 80016ac:	61bb      	str	r3, [r7, #24]
 80016ae:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80016b0:	4b73      	ldr	r3, [pc, #460]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016b2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80016b6:	4a72      	ldr	r2, [pc, #456]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016b8:	f043 0304 	orr.w	r3, r3, #4
 80016bc:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80016c0:	4b6f      	ldr	r3, [pc, #444]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016c2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80016c6:	f003 0304 	and.w	r3, r3, #4
 80016ca:	617b      	str	r3, [r7, #20]
 80016cc:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80016ce:	4b6c      	ldr	r3, [pc, #432]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016d0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80016d4:	4a6a      	ldr	r2, [pc, #424]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016d6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80016da:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80016de:	4b68      	ldr	r3, [pc, #416]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016e0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80016e4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80016e8:	613b      	str	r3, [r7, #16]
 80016ea:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80016ec:	4b64      	ldr	r3, [pc, #400]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016ee:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80016f2:	4a63      	ldr	r2, [pc, #396]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016f4:	f043 0301 	orr.w	r3, r3, #1
 80016f8:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80016fc:	4b60      	ldr	r3, [pc, #384]	@ (8001880 <MX_GPIO_Init+0x204>)
 80016fe:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001702:	f003 0301 	and.w	r3, r3, #1
 8001706:	60fb      	str	r3, [r7, #12]
 8001708:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800170a:	4b5d      	ldr	r3, [pc, #372]	@ (8001880 <MX_GPIO_Init+0x204>)
 800170c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001710:	4a5b      	ldr	r2, [pc, #364]	@ (8001880 <MX_GPIO_Init+0x204>)
 8001712:	f043 0302 	orr.w	r3, r3, #2
 8001716:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 800171a:	4b59      	ldr	r3, [pc, #356]	@ (8001880 <MX_GPIO_Init+0x204>)
 800171c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001720:	f003 0302 	and.w	r3, r3, #2
 8001724:	60bb      	str	r3, [r7, #8]
 8001726:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001728:	4b55      	ldr	r3, [pc, #340]	@ (8001880 <MX_GPIO_Init+0x204>)
 800172a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800172e:	4a54      	ldr	r2, [pc, #336]	@ (8001880 <MX_GPIO_Init+0x204>)
 8001730:	f043 0308 	orr.w	r3, r3, #8
 8001734:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001738:	4b51      	ldr	r3, [pc, #324]	@ (8001880 <MX_GPIO_Init+0x204>)
 800173a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800173e:	f003 0308 	and.w	r3, r3, #8
 8001742:	607b      	str	r3, [r7, #4]
 8001744:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SPI4_CS_GPIO_Port, SPI4_CS_Pin, GPIO_PIN_RESET);
 8001746:	2200      	movs	r2, #0
 8001748:	2110      	movs	r1, #16
 800174a:	484e      	ldr	r0, [pc, #312]	@ (8001884 <MX_GPIO_Init+0x208>)
 800174c:	f008 f848 	bl	80097e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIO_TIMING2_GPIO_Port, GPIO_TIMING2_Pin, GPIO_PIN_RESET);
 8001750:	2200      	movs	r2, #0
 8001752:	2104      	movs	r1, #4
 8001754:	484c      	ldr	r0, [pc, #304]	@ (8001888 <MX_GPIO_Init+0x20c>)
 8001756:	f008 f843 	bl	80097e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIO_TIMING1_GPIO_Port, GPIO_TIMING1_Pin, GPIO_PIN_RESET);
 800175a:	2200      	movs	r2, #0
 800175c:	2101      	movs	r1, #1
 800175e:	484b      	ldr	r0, [pc, #300]	@ (800188c <MX_GPIO_Init+0x210>)
 8001760:	f008 f83e 	bl	80097e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, MUTE_INDICATOR_Pin|MUTE_SIGNAL_Pin, GPIO_PIN_SET);
 8001764:	2201      	movs	r2, #1
 8001766:	210a      	movs	r1, #10
 8001768:	4848      	ldr	r0, [pc, #288]	@ (800188c <MX_GPIO_Init+0x210>)
 800176a:	f008 f839 	bl	80097e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, ACCEL_NCS1_Pin|RECORD_INDICATOR_Pin, GPIO_PIN_RESET);
 800176e:	2200      	movs	r2, #0
 8001770:	f44f 5188 	mov.w	r1, #4352	@ 0x1100
 8001774:	4846      	ldr	r0, [pc, #280]	@ (8001890 <MX_GPIO_Init+0x214>)
 8001776:	f008 f833 	bl	80097e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SPI3_CS_GPIO_Port, SPI3_CS_Pin, GPIO_PIN_RESET);
 800177a:	2200      	movs	r2, #0
 800177c:	2101      	movs	r1, #1
 800177e:	4845      	ldr	r0, [pc, #276]	@ (8001894 <MX_GPIO_Init+0x218>)
 8001780:	f008 f82e 	bl	80097e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : SPI4_INT1_Pin */
  GPIO_InitStruct.Pin = SPI4_INT1_Pin;
 8001784:	2308      	movs	r3, #8
 8001786:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001788:	2300      	movs	r3, #0
 800178a:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800178c:	2300      	movs	r3, #0
 800178e:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(SPI4_INT1_GPIO_Port, &GPIO_InitStruct);
 8001790:	f107 031c 	add.w	r3, r7, #28
 8001794:	4619      	mov	r1, r3
 8001796:	483b      	ldr	r0, [pc, #236]	@ (8001884 <MX_GPIO_Init+0x208>)
 8001798:	f007 fe62 	bl	8009460 <HAL_GPIO_Init>

  /*Configure GPIO pin : SPI4_CS_Pin */
  GPIO_InitStruct.Pin = SPI4_CS_Pin;
 800179c:	2310      	movs	r3, #16
 800179e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017a0:	2301      	movs	r3, #1
 80017a2:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017a4:	2300      	movs	r3, #0
 80017a6:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017a8:	2300      	movs	r3, #0
 80017aa:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(SPI4_CS_GPIO_Port, &GPIO_InitStruct);
 80017ac:	f107 031c 	add.w	r3, r7, #28
 80017b0:	4619      	mov	r1, r3
 80017b2:	4834      	ldr	r0, [pc, #208]	@ (8001884 <MX_GPIO_Init+0x208>)
 80017b4:	f007 fe54 	bl	8009460 <HAL_GPIO_Init>

  /*Configure GPIO pins : PC13 DAC_EXT_Pin */
  GPIO_InitStruct.Pin = GPIO_PIN_13|DAC_EXT_Pin;
 80017b8:	f44f 5308 	mov.w	r3, #8704	@ 0x2200
 80017bc:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80017be:	2300      	movs	r3, #0
 80017c0:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017c2:	2300      	movs	r3, #0
 80017c4:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017c6:	f107 031c 	add.w	r3, r7, #28
 80017ca:	4619      	mov	r1, r3
 80017cc:	482e      	ldr	r0, [pc, #184]	@ (8001888 <MX_GPIO_Init+0x20c>)
 80017ce:	f007 fe47 	bl	8009460 <HAL_GPIO_Init>

  /*Configure GPIO pin : GPIO_TIMING2_Pin */
  GPIO_InitStruct.Pin = GPIO_TIMING2_Pin;
 80017d2:	2304      	movs	r3, #4
 80017d4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017d6:	2301      	movs	r3, #1
 80017d8:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017da:	2300      	movs	r3, #0
 80017dc:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017de:	2300      	movs	r3, #0
 80017e0:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIO_TIMING2_GPIO_Port, &GPIO_InitStruct);
 80017e2:	f107 031c 	add.w	r3, r7, #28
 80017e6:	4619      	mov	r1, r3
 80017e8:	4827      	ldr	r0, [pc, #156]	@ (8001888 <MX_GPIO_Init+0x20c>)
 80017ea:	f007 fe39 	bl	8009460 <HAL_GPIO_Init>

  /*Configure GPIO pins : GPIO_TIMING1_Pin MUTE_INDICATOR_Pin MUTE_SIGNAL_Pin */
  GPIO_InitStruct.Pin = GPIO_TIMING1_Pin|MUTE_INDICATOR_Pin|MUTE_SIGNAL_Pin;
 80017ee:	230b      	movs	r3, #11
 80017f0:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017f2:	2301      	movs	r3, #1
 80017f4:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017f6:	2300      	movs	r3, #0
 80017f8:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017fa:	2300      	movs	r3, #0
 80017fc:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017fe:	f107 031c 	add.w	r3, r7, #28
 8001802:	4619      	mov	r1, r3
 8001804:	4821      	ldr	r0, [pc, #132]	@ (800188c <MX_GPIO_Init+0x210>)
 8001806:	f007 fe2b 	bl	8009460 <HAL_GPIO_Init>

  /*Configure GPIO pins : MUTE_BUTTON_Pin BIG_RED_BUTTON_Pin */
  GPIO_InitStruct.Pin = MUTE_BUTTON_Pin|BIG_RED_BUTTON_Pin;
 800180a:	f248 0304 	movw	r3, #32772	@ 0x8004
 800180e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001810:	2300      	movs	r3, #0
 8001812:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001814:	2300      	movs	r3, #0
 8001816:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001818:	f107 031c 	add.w	r3, r7, #28
 800181c:	4619      	mov	r1, r3
 800181e:	481b      	ldr	r0, [pc, #108]	@ (800188c <MX_GPIO_Init+0x210>)
 8001820:	f007 fe1e 	bl	8009460 <HAL_GPIO_Init>

  /*Configure GPIO pins : ACCEL_NCS1_Pin RECORD_INDICATOR_Pin */
  GPIO_InitStruct.Pin = ACCEL_NCS1_Pin|RECORD_INDICATOR_Pin;
 8001824:	f44f 5388 	mov.w	r3, #4352	@ 0x1100
 8001828:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800182a:	2301      	movs	r3, #1
 800182c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800182e:	2300      	movs	r3, #0
 8001830:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001832:	2300      	movs	r3, #0
 8001834:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001836:	f107 031c 	add.w	r3, r7, #28
 800183a:	4619      	mov	r1, r3
 800183c:	4814      	ldr	r0, [pc, #80]	@ (8001890 <MX_GPIO_Init+0x214>)
 800183e:	f007 fe0f 	bl	8009460 <HAL_GPIO_Init>

  /*Configure GPIO pins : ACCEL_INTA1_Pin ACCEL_INTB1_Pin SPI3_INT1_Pin SPI3_INT2_Pin */
  GPIO_InitStruct.Pin = ACCEL_INTA1_Pin|ACCEL_INTB1_Pin|SPI3_INT1_Pin|SPI3_INT2_Pin;
 8001842:	f240 3306 	movw	r3, #774	@ 0x306
 8001846:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001848:	2300      	movs	r3, #0
 800184a:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800184c:	2300      	movs	r3, #0
 800184e:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001850:	f107 031c 	add.w	r3, r7, #28
 8001854:	4619      	mov	r1, r3
 8001856:	480f      	ldr	r0, [pc, #60]	@ (8001894 <MX_GPIO_Init+0x218>)
 8001858:	f007 fe02 	bl	8009460 <HAL_GPIO_Init>

  /*Configure GPIO pin : SPI3_CS_Pin */
  GPIO_InitStruct.Pin = SPI3_CS_Pin;
 800185c:	2301      	movs	r3, #1
 800185e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001860:	2301      	movs	r3, #1
 8001862:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001864:	2300      	movs	r3, #0
 8001866:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001868:	2300      	movs	r3, #0
 800186a:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(SPI3_CS_GPIO_Port, &GPIO_InitStruct);
 800186c:	f107 031c 	add.w	r3, r7, #28
 8001870:	4619      	mov	r1, r3
 8001872:	4808      	ldr	r0, [pc, #32]	@ (8001894 <MX_GPIO_Init+0x218>)
 8001874:	f007 fdf4 	bl	8009460 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001878:	bf00      	nop
 800187a:	3730      	adds	r7, #48	@ 0x30
 800187c:	46bd      	mov	sp, r7
 800187e:	bd80      	pop	{r7, pc}
 8001880:	58024400 	.word	0x58024400
 8001884:	58021000 	.word	0x58021000
 8001888:	58020800 	.word	0x58020800
 800188c:	58020000 	.word	0x58020000
 8001890:	58020400 	.word	0x58020400
 8001894:	58020c00 	.word	0x58020c00

08001898 <MPU_Config>:
/* USER CODE END 4 */

 /* MPU Configuration */

void MPU_Config(void)
{
 8001898:	b580      	push	{r7, lr}
 800189a:	b084      	sub	sp, #16
 800189c:	af00      	add	r7, sp, #0
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 800189e:	463b      	mov	r3, r7
 80018a0:	2200      	movs	r2, #0
 80018a2:	601a      	str	r2, [r3, #0]
 80018a4:	605a      	str	r2, [r3, #4]
 80018a6:	609a      	str	r2, [r3, #8]
 80018a8:	60da      	str	r2, [r3, #12]

  /* Disables the MPU */
  HAL_MPU_Disable();
 80018aa:	f005 f9d5 	bl	8006c58 <HAL_MPU_Disable>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80018ae:	2301      	movs	r3, #1
 80018b0:	703b      	strb	r3, [r7, #0]
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 80018b2:	2300      	movs	r3, #0
 80018b4:	707b      	strb	r3, [r7, #1]
  MPU_InitStruct.BaseAddress = 0x0;
 80018b6:	2300      	movs	r3, #0
 80018b8:	607b      	str	r3, [r7, #4]
  MPU_InitStruct.Size = MPU_REGION_SIZE_4GB;
 80018ba:	231f      	movs	r3, #31
 80018bc:	723b      	strb	r3, [r7, #8]
  MPU_InitStruct.SubRegionDisable = 0x87;
 80018be:	2387      	movs	r3, #135	@ 0x87
 80018c0:	727b      	strb	r3, [r7, #9]
  MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 80018c2:	2300      	movs	r3, #0
 80018c4:	72bb      	strb	r3, [r7, #10]
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 80018c6:	2300      	movs	r3, #0
 80018c8:	72fb      	strb	r3, [r7, #11]
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 80018ca:	2301      	movs	r3, #1
 80018cc:	733b      	strb	r3, [r7, #12]
  MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
 80018ce:	2301      	movs	r3, #1
 80018d0:	737b      	strb	r3, [r7, #13]
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 80018d2:	2300      	movs	r3, #0
 80018d4:	73bb      	strb	r3, [r7, #14]
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 80018d6:	2300      	movs	r3, #0
 80018d8:	73fb      	strb	r3, [r7, #15]

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80018da:	463b      	mov	r3, r7
 80018dc:	4618      	mov	r0, r3
 80018de:	f005 f9f3 	bl	8006cc8 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 80018e2:	2004      	movs	r0, #4
 80018e4:	f005 f9d0 	bl	8006c88 <HAL_MPU_Enable>

}
 80018e8:	bf00      	nop
 80018ea:	3710      	adds	r7, #16
 80018ec:	46bd      	mov	sp, r7
 80018ee:	bd80      	pop	{r7, pc}

080018f0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80018f0:	b480      	push	{r7}
 80018f2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80018f4:	b672      	cpsid	i
}
 80018f6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80018f8:	bf00      	nop
 80018fa:	e7fd      	b.n	80018f8 <Error_Handler+0x8>

080018fc <Sequencer_Init>:
 */

#include "sequencer.h"

void Sequencer_Init(Sequencer* sequencer)
{
 80018fc:	b480      	push	{r7}
 80018fe:	b083      	sub	sp, #12
 8001900:	af00      	add	r7, sp, #0
 8001902:	6078      	str	r0, [r7, #4]
	sequencer->sequence_time_array = NULL;
 8001904:	687b      	ldr	r3, [r7, #4]
 8001906:	2200      	movs	r2, #0
 8001908:	601a      	str	r2, [r3, #0]
	sequencer->sequence_len = 0;
 800190a:	687b      	ldr	r3, [r7, #4]
 800190c:	2200      	movs	r2, #0
 800190e:	605a      	str	r2, [r3, #4]
	sequencer->sequence_index = 0;
 8001910:	687b      	ldr	r3, [r7, #4]
 8001912:	2200      	movs	r2, #0
 8001914:	609a      	str	r2, [r3, #8]
	sequencer->time = 0;
 8001916:	687b      	ldr	r3, [r7, #4]
 8001918:	2200      	movs	r2, #0
 800191a:	60da      	str	r2, [r3, #12]

	sequencer->is_running = 0;
 800191c:	687b      	ldr	r3, [r7, #4]
 800191e:	2200      	movs	r2, #0
 8001920:	741a      	strb	r2, [r3, #16]
	sequencer->is_looping = 0;
 8001922:	687b      	ldr	r3, [r7, #4]
 8001924:	2200      	movs	r2, #0
 8001926:	745a      	strb	r2, [r3, #17]
}
 8001928:	bf00      	nop
 800192a:	370c      	adds	r7, #12
 800192c:	46bd      	mov	sp, r7
 800192e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001932:	4770      	bx	lr

08001934 <Sequencer_SetSequence>:

void Sequencer_SetSequence(Sequencer* sequencer, const uint32_t* sequence_time_array, const uint32_t sequence_len, uint8_t is_looping)
{
 8001934:	b480      	push	{r7}
 8001936:	b085      	sub	sp, #20
 8001938:	af00      	add	r7, sp, #0
 800193a:	60f8      	str	r0, [r7, #12]
 800193c:	60b9      	str	r1, [r7, #8]
 800193e:	607a      	str	r2, [r7, #4]
 8001940:	70fb      	strb	r3, [r7, #3]
	sequencer->sequence_time_array = sequence_time_array;
 8001942:	68fb      	ldr	r3, [r7, #12]
 8001944:	68ba      	ldr	r2, [r7, #8]
 8001946:	601a      	str	r2, [r3, #0]
	sequencer->sequence_len = sequence_len;
 8001948:	68fb      	ldr	r3, [r7, #12]
 800194a:	687a      	ldr	r2, [r7, #4]
 800194c:	605a      	str	r2, [r3, #4]
	sequencer->is_looping = is_looping;
 800194e:	68fb      	ldr	r3, [r7, #12]
 8001950:	78fa      	ldrb	r2, [r7, #3]
 8001952:	745a      	strb	r2, [r3, #17]
}
 8001954:	bf00      	nop
 8001956:	3714      	adds	r7, #20
 8001958:	46bd      	mov	sp, r7
 800195a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800195e:	4770      	bx	lr

08001960 <Sequencer_Update>:

uint32_t Sequencer_Update(Sequencer* sequencer, uint32_t time, uint32_t* index)
{
 8001960:	b480      	push	{r7}
 8001962:	b085      	sub	sp, #20
 8001964:	af00      	add	r7, sp, #0
 8001966:	60f8      	str	r0, [r7, #12]
 8001968:	60b9      	str	r1, [r7, #8]
 800196a:	607a      	str	r2, [r7, #4]
	/*
	 * each element in the time array says how long to hold that step for
	 */

	if (sequencer->is_running && sequencer->sequence_time_array != NULL)
 800196c:	68fb      	ldr	r3, [r7, #12]
 800196e:	7c1b      	ldrb	r3, [r3, #16]
 8001970:	2b00      	cmp	r3, #0
 8001972:	d030      	beq.n	80019d6 <Sequencer_Update+0x76>
 8001974:	68fb      	ldr	r3, [r7, #12]
 8001976:	681b      	ldr	r3, [r3, #0]
 8001978:	2b00      	cmp	r3, #0
 800197a:	d02c      	beq.n	80019d6 <Sequencer_Update+0x76>
	{
		if (time > sequencer->time)
 800197c:	68fb      	ldr	r3, [r7, #12]
 800197e:	68db      	ldr	r3, [r3, #12]
 8001980:	68ba      	ldr	r2, [r7, #8]
 8001982:	429a      	cmp	r2, r3
 8001984:	d927      	bls.n	80019d6 <Sequencer_Update+0x76>
		{
			*index = sequencer->sequence_index;
 8001986:	68fb      	ldr	r3, [r7, #12]
 8001988:	689a      	ldr	r2, [r3, #8]
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	601a      	str	r2, [r3, #0]
			sequencer->time += sequencer->sequence_time_array[sequencer->sequence_index];
 800198e:	68fb      	ldr	r3, [r7, #12]
 8001990:	68da      	ldr	r2, [r3, #12]
 8001992:	68fb      	ldr	r3, [r7, #12]
 8001994:	6819      	ldr	r1, [r3, #0]
 8001996:	68fb      	ldr	r3, [r7, #12]
 8001998:	689b      	ldr	r3, [r3, #8]
 800199a:	009b      	lsls	r3, r3, #2
 800199c:	440b      	add	r3, r1
 800199e:	681b      	ldr	r3, [r3, #0]
 80019a0:	441a      	add	r2, r3
 80019a2:	68fb      	ldr	r3, [r7, #12]
 80019a4:	60da      	str	r2, [r3, #12]
			sequencer->sequence_index++;
 80019a6:	68fb      	ldr	r3, [r7, #12]
 80019a8:	689b      	ldr	r3, [r3, #8]
 80019aa:	1c5a      	adds	r2, r3, #1
 80019ac:	68fb      	ldr	r3, [r7, #12]
 80019ae:	609a      	str	r2, [r3, #8]

			if (sequencer->sequence_index == sequencer->sequence_len)  /* reached the end of the sequence */
 80019b0:	68fb      	ldr	r3, [r7, #12]
 80019b2:	689a      	ldr	r2, [r3, #8]
 80019b4:	68fb      	ldr	r3, [r7, #12]
 80019b6:	685b      	ldr	r3, [r3, #4]
 80019b8:	429a      	cmp	r2, r3
 80019ba:	d10a      	bne.n	80019d2 <Sequencer_Update+0x72>
			{
				if (sequencer->is_looping)
 80019bc:	68fb      	ldr	r3, [r7, #12]
 80019be:	7c5b      	ldrb	r3, [r3, #17]
 80019c0:	2b00      	cmp	r3, #0
 80019c2:	d003      	beq.n	80019cc <Sequencer_Update+0x6c>
					sequencer->sequence_index = 0;
 80019c4:	68fb      	ldr	r3, [r7, #12]
 80019c6:	2200      	movs	r2, #0
 80019c8:	609a      	str	r2, [r3, #8]
 80019ca:	e002      	b.n	80019d2 <Sequencer_Update+0x72>
				else
					sequencer->is_running = 0;
 80019cc:	68fb      	ldr	r3, [r7, #12]
 80019ce:	2200      	movs	r2, #0
 80019d0:	741a      	strb	r2, [r3, #16]
			}

			return 1;
 80019d2:	2301      	movs	r3, #1
 80019d4:	e000      	b.n	80019d8 <Sequencer_Update+0x78>
		}
	}

	return 0;
 80019d6:	2300      	movs	r3, #0
}
 80019d8:	4618      	mov	r0, r3
 80019da:	3714      	adds	r7, #20
 80019dc:	46bd      	mov	sp, r7
 80019de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019e2:	4770      	bx	lr

080019e4 <Sequencer_Start>:

void Sequencer_Start(Sequencer* sequencer, uint32_t time)
{
 80019e4:	b480      	push	{r7}
 80019e6:	b083      	sub	sp, #12
 80019e8:	af00      	add	r7, sp, #0
 80019ea:	6078      	str	r0, [r7, #4]
 80019ec:	6039      	str	r1, [r7, #0]
	sequencer->time = time;
 80019ee:	687b      	ldr	r3, [r7, #4]
 80019f0:	683a      	ldr	r2, [r7, #0]
 80019f2:	60da      	str	r2, [r3, #12]
	sequencer->sequence_index = 0;
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	2200      	movs	r2, #0
 80019f8:	609a      	str	r2, [r3, #8]
	sequencer->is_running = 1;
 80019fa:	687b      	ldr	r3, [r7, #4]
 80019fc:	2201      	movs	r2, #1
 80019fe:	741a      	strb	r2, [r3, #16]
}
 8001a00:	bf00      	nop
 8001a02:	370c      	adds	r7, #12
 8001a04:	46bd      	mov	sp, r7
 8001a06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a0a:	4770      	bx	lr

08001a0c <Sequencer_Stop>:

void Sequencer_Stop(Sequencer* sequencer)
{
 8001a0c:	b480      	push	{r7}
 8001a0e:	b083      	sub	sp, #12
 8001a10:	af00      	add	r7, sp, #0
 8001a12:	6078      	str	r0, [r7, #4]
	sequencer->is_running = 0;
 8001a14:	687b      	ldr	r3, [r7, #4]
 8001a16:	2200      	movs	r2, #0
 8001a18:	741a      	strb	r2, [r3, #16]
}
 8001a1a:	bf00      	nop
 8001a1c:	370c      	adds	r7, #12
 8001a1e:	46bd      	mov	sp, r7
 8001a20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a24:	4770      	bx	lr

08001a26 <Sequencer_IsRunning>:

uint32_t Sequencer_IsRunning(Sequencer* sequencer)
{
 8001a26:	b480      	push	{r7}
 8001a28:	b083      	sub	sp, #12
 8001a2a:	af00      	add	r7, sp, #0
 8001a2c:	6078      	str	r0, [r7, #4]
	return sequencer->is_running;
 8001a2e:	687b      	ldr	r3, [r7, #4]
 8001a30:	7c1b      	ldrb	r3, [r3, #16]
}
 8001a32:	4618      	mov	r0, r3
 8001a34:	370c      	adds	r7, #12
 8001a36:	46bd      	mov	sp, r7
 8001a38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a3c:	4770      	bx	lr
	...

08001a40 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001a40:	b480      	push	{r7}
 8001a42:	b083      	sub	sp, #12
 8001a44:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001a46:	4b0a      	ldr	r3, [pc, #40]	@ (8001a70 <HAL_MspInit+0x30>)
 8001a48:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8001a4c:	4a08      	ldr	r2, [pc, #32]	@ (8001a70 <HAL_MspInit+0x30>)
 8001a4e:	f043 0302 	orr.w	r3, r3, #2
 8001a52:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 8001a56:	4b06      	ldr	r3, [pc, #24]	@ (8001a70 <HAL_MspInit+0x30>)
 8001a58:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8001a5c:	f003 0302 	and.w	r3, r3, #2
 8001a60:	607b      	str	r3, [r7, #4]
 8001a62:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a64:	bf00      	nop
 8001a66:	370c      	adds	r7, #12
 8001a68:	46bd      	mov	sp, r7
 8001a6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a6e:	4770      	bx	lr
 8001a70:	58024400 	.word	0x58024400

08001a74 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001a74:	b580      	push	{r7, lr}
 8001a76:	b08c      	sub	sp, #48	@ 0x30
 8001a78:	af00      	add	r7, sp, #0
 8001a7a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a7c:	f107 031c 	add.w	r3, r7, #28
 8001a80:	2200      	movs	r2, #0
 8001a82:	601a      	str	r2, [r3, #0]
 8001a84:	605a      	str	r2, [r3, #4]
 8001a86:	609a      	str	r2, [r3, #8]
 8001a88:	60da      	str	r2, [r3, #12]
 8001a8a:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8001a8c:	687b      	ldr	r3, [r7, #4]
 8001a8e:	681b      	ldr	r3, [r3, #0]
 8001a90:	4a39      	ldr	r2, [pc, #228]	@ (8001b78 <HAL_ADC_MspInit+0x104>)
 8001a92:	4293      	cmp	r3, r2
 8001a94:	d133      	bne.n	8001afe <HAL_ADC_MspInit+0x8a>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    HAL_RCC_ADC12_CLK_ENABLED++;
 8001a96:	4b39      	ldr	r3, [pc, #228]	@ (8001b7c <HAL_ADC_MspInit+0x108>)
 8001a98:	681b      	ldr	r3, [r3, #0]
 8001a9a:	3301      	adds	r3, #1
 8001a9c:	4a37      	ldr	r2, [pc, #220]	@ (8001b7c <HAL_ADC_MspInit+0x108>)
 8001a9e:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC12_CLK_ENABLED==1){
 8001aa0:	4b36      	ldr	r3, [pc, #216]	@ (8001b7c <HAL_ADC_MspInit+0x108>)
 8001aa2:	681b      	ldr	r3, [r3, #0]
 8001aa4:	2b01      	cmp	r3, #1
 8001aa6:	d10e      	bne.n	8001ac6 <HAL_ADC_MspInit+0x52>
      __HAL_RCC_ADC12_CLK_ENABLE();
 8001aa8:	4b35      	ldr	r3, [pc, #212]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001aaa:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8001aae:	4a34      	ldr	r2, [pc, #208]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001ab0:	f043 0320 	orr.w	r3, r3, #32
 8001ab4:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8001ab8:	4b31      	ldr	r3, [pc, #196]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001aba:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8001abe:	f003 0320 	and.w	r3, r3, #32
 8001ac2:	61bb      	str	r3, [r7, #24]
 8001ac4:	69bb      	ldr	r3, [r7, #24]
    }

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ac6:	4b2e      	ldr	r3, [pc, #184]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001ac8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001acc:	4a2c      	ldr	r2, [pc, #176]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001ace:	f043 0304 	orr.w	r3, r3, #4
 8001ad2:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001ad6:	4b2a      	ldr	r3, [pc, #168]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001ad8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001adc:	f003 0304 	and.w	r3, r3, #4
 8001ae0:	617b      	str	r3, [r7, #20]
 8001ae2:	697b      	ldr	r3, [r7, #20]
    /**ADC1 GPIO Configuration
    PC4     ------> ADC1_INP4
    PC5     ------> ADC1_INN4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 8001ae4:	2330      	movs	r3, #48	@ 0x30
 8001ae6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001ae8:	2303      	movs	r3, #3
 8001aea:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001aec:	2300      	movs	r3, #0
 8001aee:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001af0:	f107 031c 	add.w	r3, r7, #28
 8001af4:	4619      	mov	r1, r3
 8001af6:	4823      	ldr	r0, [pc, #140]	@ (8001b84 <HAL_ADC_MspInit+0x110>)
 8001af8:	f007 fcb2 	bl	8009460 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
 8001afc:	e037      	b.n	8001b6e <HAL_ADC_MspInit+0xfa>
  else if(hadc->Instance==ADC2)
 8001afe:	687b      	ldr	r3, [r7, #4]
 8001b00:	681b      	ldr	r3, [r3, #0]
 8001b02:	4a21      	ldr	r2, [pc, #132]	@ (8001b88 <HAL_ADC_MspInit+0x114>)
 8001b04:	4293      	cmp	r3, r2
 8001b06:	d132      	bne.n	8001b6e <HAL_ADC_MspInit+0xfa>
    HAL_RCC_ADC12_CLK_ENABLED++;
 8001b08:	4b1c      	ldr	r3, [pc, #112]	@ (8001b7c <HAL_ADC_MspInit+0x108>)
 8001b0a:	681b      	ldr	r3, [r3, #0]
 8001b0c:	3301      	adds	r3, #1
 8001b0e:	4a1b      	ldr	r2, [pc, #108]	@ (8001b7c <HAL_ADC_MspInit+0x108>)
 8001b10:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC12_CLK_ENABLED==1){
 8001b12:	4b1a      	ldr	r3, [pc, #104]	@ (8001b7c <HAL_ADC_MspInit+0x108>)
 8001b14:	681b      	ldr	r3, [r3, #0]
 8001b16:	2b01      	cmp	r3, #1
 8001b18:	d10e      	bne.n	8001b38 <HAL_ADC_MspInit+0xc4>
      __HAL_RCC_ADC12_CLK_ENABLE();
 8001b1a:	4b19      	ldr	r3, [pc, #100]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001b1c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8001b20:	4a17      	ldr	r2, [pc, #92]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001b22:	f043 0320 	orr.w	r3, r3, #32
 8001b26:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8001b2a:	4b15      	ldr	r3, [pc, #84]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001b2c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8001b30:	f003 0320 	and.w	r3, r3, #32
 8001b34:	613b      	str	r3, [r7, #16]
 8001b36:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b38:	4b11      	ldr	r3, [pc, #68]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001b3a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001b3e:	4a10      	ldr	r2, [pc, #64]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001b40:	f043 0301 	orr.w	r3, r3, #1
 8001b44:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001b48:	4b0d      	ldr	r3, [pc, #52]	@ (8001b80 <HAL_ADC_MspInit+0x10c>)
 8001b4a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001b4e:	f003 0301 	and.w	r3, r3, #1
 8001b52:	60fb      	str	r3, [r7, #12]
 8001b54:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001b56:	23c0      	movs	r3, #192	@ 0xc0
 8001b58:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b5a:	2303      	movs	r3, #3
 8001b5c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b5e:	2300      	movs	r3, #0
 8001b60:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b62:	f107 031c 	add.w	r3, r7, #28
 8001b66:	4619      	mov	r1, r3
 8001b68:	4808      	ldr	r0, [pc, #32]	@ (8001b8c <HAL_ADC_MspInit+0x118>)
 8001b6a:	f007 fc79 	bl	8009460 <HAL_GPIO_Init>
}
 8001b6e:	bf00      	nop
 8001b70:	3730      	adds	r7, #48	@ 0x30
 8001b72:	46bd      	mov	sp, r7
 8001b74:	bd80      	pop	{r7, pc}
 8001b76:	bf00      	nop
 8001b78:	40022000 	.word	0x40022000
 8001b7c:	24004538 	.word	0x24004538
 8001b80:	58024400 	.word	0x58024400
 8001b84:	58020800 	.word	0x58020800
 8001b88:	40022100 	.word	0x40022100
 8001b8c:	58020000 	.word	0x58020000

08001b90 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001b90:	b580      	push	{r7, lr}
 8001b92:	b08a      	sub	sp, #40	@ 0x28
 8001b94:	af00      	add	r7, sp, #0
 8001b96:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b98:	f107 0314 	add.w	r3, r7, #20
 8001b9c:	2200      	movs	r2, #0
 8001b9e:	601a      	str	r2, [r3, #0]
 8001ba0:	605a      	str	r2, [r3, #4]
 8001ba2:	609a      	str	r2, [r3, #8]
 8001ba4:	60da      	str	r2, [r3, #12]
 8001ba6:	611a      	str	r2, [r3, #16]
  if(hdac->Instance==DAC1)
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	4a48      	ldr	r2, [pc, #288]	@ (8001cd0 <HAL_DAC_MspInit+0x140>)
 8001bae:	4293      	cmp	r3, r2
 8001bb0:	f040 808a 	bne.w	8001cc8 <HAL_DAC_MspInit+0x138>
  {
  /* USER CODE BEGIN DAC1_MspInit 0 */

  /* USER CODE END DAC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC12_CLK_ENABLE();
 8001bb4:	4b47      	ldr	r3, [pc, #284]	@ (8001cd4 <HAL_DAC_MspInit+0x144>)
 8001bb6:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001bba:	4a46      	ldr	r2, [pc, #280]	@ (8001cd4 <HAL_DAC_MspInit+0x144>)
 8001bbc:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8001bc0:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8001bc4:	4b43      	ldr	r3, [pc, #268]	@ (8001cd4 <HAL_DAC_MspInit+0x144>)
 8001bc6:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001bca:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8001bce:	613b      	str	r3, [r7, #16]
 8001bd0:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001bd2:	4b40      	ldr	r3, [pc, #256]	@ (8001cd4 <HAL_DAC_MspInit+0x144>)
 8001bd4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001bd8:	4a3e      	ldr	r2, [pc, #248]	@ (8001cd4 <HAL_DAC_MspInit+0x144>)
 8001bda:	f043 0301 	orr.w	r3, r3, #1
 8001bde:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001be2:	4b3c      	ldr	r3, [pc, #240]	@ (8001cd4 <HAL_DAC_MspInit+0x144>)
 8001be4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001be8:	f003 0301 	and.w	r3, r3, #1
 8001bec:	60fb      	str	r3, [r7, #12]
 8001bee:	68fb      	ldr	r3, [r7, #12]
    /**DAC1 GPIO Configuration
    PA4     ------> DAC1_OUT1
    PA5     ------> DAC1_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 8001bf0:	2330      	movs	r3, #48	@ 0x30
 8001bf2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001bf4:	2303      	movs	r3, #3
 8001bf6:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bf8:	2300      	movs	r3, #0
 8001bfa:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bfc:	f107 0314 	add.w	r3, r7, #20
 8001c00:	4619      	mov	r1, r3
 8001c02:	4835      	ldr	r0, [pc, #212]	@ (8001cd8 <HAL_DAC_MspInit+0x148>)
 8001c04:	f007 fc2c 	bl	8009460 <HAL_GPIO_Init>

    /* DAC1 DMA Init */
    /* DAC1_CH1 Init */
    hdma_dac1_ch1.Instance = DMA1_Stream0;
 8001c08:	4b34      	ldr	r3, [pc, #208]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c0a:	4a35      	ldr	r2, [pc, #212]	@ (8001ce0 <HAL_DAC_MspInit+0x150>)
 8001c0c:	601a      	str	r2, [r3, #0]
    hdma_dac1_ch1.Init.Request = DMA_REQUEST_DAC1;
 8001c0e:	4b33      	ldr	r3, [pc, #204]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c10:	2243      	movs	r2, #67	@ 0x43
 8001c12:	605a      	str	r2, [r3, #4]
    hdma_dac1_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001c14:	4b31      	ldr	r3, [pc, #196]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c16:	2240      	movs	r2, #64	@ 0x40
 8001c18:	609a      	str	r2, [r3, #8]
    hdma_dac1_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 8001c1a:	4b30      	ldr	r3, [pc, #192]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c1c:	2200      	movs	r2, #0
 8001c1e:	60da      	str	r2, [r3, #12]
    hdma_dac1_ch1.Init.MemInc = DMA_MINC_ENABLE;
 8001c20:	4b2e      	ldr	r3, [pc, #184]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c22:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001c26:	611a      	str	r2, [r3, #16]
    hdma_dac1_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8001c28:	4b2c      	ldr	r3, [pc, #176]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c2a:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001c2e:	615a      	str	r2, [r3, #20]
    hdma_dac1_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8001c30:	4b2a      	ldr	r3, [pc, #168]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c32:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8001c36:	619a      	str	r2, [r3, #24]
    hdma_dac1_ch1.Init.Mode = DMA_CIRCULAR;
 8001c38:	4b28      	ldr	r3, [pc, #160]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c3a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001c3e:	61da      	str	r2, [r3, #28]
    hdma_dac1_ch1.Init.Priority = DMA_PRIORITY_LOW;
 8001c40:	4b26      	ldr	r3, [pc, #152]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c42:	2200      	movs	r2, #0
 8001c44:	621a      	str	r2, [r3, #32]
    hdma_dac1_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001c46:	4b25      	ldr	r3, [pc, #148]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c48:	2200      	movs	r2, #0
 8001c4a:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_dac1_ch1) != HAL_OK)
 8001c4c:	4823      	ldr	r0, [pc, #140]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c4e:	f005 fb33 	bl	80072b8 <HAL_DMA_Init>
 8001c52:	4603      	mov	r3, r0
 8001c54:	2b00      	cmp	r3, #0
 8001c56:	d001      	beq.n	8001c5c <HAL_DAC_MspInit+0xcc>
    {
      Error_Handler();
 8001c58:	f7ff fe4a 	bl	80018f0 <Error_Handler>
    }

    __HAL_LINKDMA(hdac,DMA_Handle1,hdma_dac1_ch1);
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	4a1f      	ldr	r2, [pc, #124]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c60:	609a      	str	r2, [r3, #8]
 8001c62:	4a1e      	ldr	r2, [pc, #120]	@ (8001cdc <HAL_DAC_MspInit+0x14c>)
 8001c64:	687b      	ldr	r3, [r7, #4]
 8001c66:	6393      	str	r3, [r2, #56]	@ 0x38

    /* DAC1_CH2 Init */
    hdma_dac1_ch2.Instance = DMA1_Stream1;
 8001c68:	4b1e      	ldr	r3, [pc, #120]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001c6a:	4a1f      	ldr	r2, [pc, #124]	@ (8001ce8 <HAL_DAC_MspInit+0x158>)
 8001c6c:	601a      	str	r2, [r3, #0]
    hdma_dac1_ch2.Init.Request = DMA_REQUEST_DAC2;
 8001c6e:	4b1d      	ldr	r3, [pc, #116]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001c70:	2244      	movs	r2, #68	@ 0x44
 8001c72:	605a      	str	r2, [r3, #4]
    hdma_dac1_ch2.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001c74:	4b1b      	ldr	r3, [pc, #108]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001c76:	2240      	movs	r2, #64	@ 0x40
 8001c78:	609a      	str	r2, [r3, #8]
    hdma_dac1_ch2.Init.PeriphInc = DMA_PINC_DISABLE;
 8001c7a:	4b1a      	ldr	r3, [pc, #104]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001c7c:	2200      	movs	r2, #0
 8001c7e:	60da      	str	r2, [r3, #12]
    hdma_dac1_ch2.Init.MemInc = DMA_MINC_ENABLE;
 8001c80:	4b18      	ldr	r3, [pc, #96]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001c82:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001c86:	611a      	str	r2, [r3, #16]
    hdma_dac1_ch2.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8001c88:	4b16      	ldr	r3, [pc, #88]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001c8a:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001c8e:	615a      	str	r2, [r3, #20]
    hdma_dac1_ch2.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8001c90:	4b14      	ldr	r3, [pc, #80]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001c92:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8001c96:	619a      	str	r2, [r3, #24]
    hdma_dac1_ch2.Init.Mode = DMA_CIRCULAR;
 8001c98:	4b12      	ldr	r3, [pc, #72]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001c9a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001c9e:	61da      	str	r2, [r3, #28]
    hdma_dac1_ch2.Init.Priority = DMA_PRIORITY_LOW;
 8001ca0:	4b10      	ldr	r3, [pc, #64]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001ca2:	2200      	movs	r2, #0
 8001ca4:	621a      	str	r2, [r3, #32]
    hdma_dac1_ch2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001ca6:	4b0f      	ldr	r3, [pc, #60]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001ca8:	2200      	movs	r2, #0
 8001caa:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_dac1_ch2) != HAL_OK)
 8001cac:	480d      	ldr	r0, [pc, #52]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001cae:	f005 fb03 	bl	80072b8 <HAL_DMA_Init>
 8001cb2:	4603      	mov	r3, r0
 8001cb4:	2b00      	cmp	r3, #0
 8001cb6:	d001      	beq.n	8001cbc <HAL_DAC_MspInit+0x12c>
    {
      Error_Handler();
 8001cb8:	f7ff fe1a 	bl	80018f0 <Error_Handler>
    }

    __HAL_LINKDMA(hdac,DMA_Handle2,hdma_dac1_ch2);
 8001cbc:	687b      	ldr	r3, [r7, #4]
 8001cbe:	4a09      	ldr	r2, [pc, #36]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001cc0:	60da      	str	r2, [r3, #12]
 8001cc2:	4a08      	ldr	r2, [pc, #32]	@ (8001ce4 <HAL_DAC_MspInit+0x154>)
 8001cc4:	687b      	ldr	r3, [r7, #4]
 8001cc6:	6393      	str	r3, [r2, #56]	@ 0x38

  /* USER CODE END DAC1_MspInit 1 */

  }

}
 8001cc8:	bf00      	nop
 8001cca:	3728      	adds	r7, #40	@ 0x28
 8001ccc:	46bd      	mov	sp, r7
 8001cce:	bd80      	pop	{r7, pc}
 8001cd0:	40007400 	.word	0x40007400
 8001cd4:	58024400 	.word	0x58024400
 8001cd8:	58020000 	.word	0x58020000
 8001cdc:	240003dc 	.word	0x240003dc
 8001ce0:	40020010 	.word	0x40020010
 8001ce4:	24000454 	.word	0x24000454
 8001ce8:	40020028 	.word	0x40020028

08001cec <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001cec:	b580      	push	{r7, lr}
 8001cee:	b0b8      	sub	sp, #224	@ 0xe0
 8001cf0:	af00      	add	r7, sp, #0
 8001cf2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cf4:	f107 03cc 	add.w	r3, r7, #204	@ 0xcc
 8001cf8:	2200      	movs	r2, #0
 8001cfa:	601a      	str	r2, [r3, #0]
 8001cfc:	605a      	str	r2, [r3, #4]
 8001cfe:	609a      	str	r2, [r3, #8]
 8001d00:	60da      	str	r2, [r3, #12]
 8001d02:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001d04:	f107 0310 	add.w	r3, r7, #16
 8001d08:	22b8      	movs	r2, #184	@ 0xb8
 8001d0a:	2100      	movs	r1, #0
 8001d0c:	4618      	mov	r0, r3
 8001d0e:	f015 fae4 	bl	80172da <memset>
  if(hi2c->Instance==I2C2)
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	681b      	ldr	r3, [r3, #0]
 8001d16:	4a27      	ldr	r2, [pc, #156]	@ (8001db4 <HAL_I2C_MspInit+0xc8>)
 8001d18:	4293      	cmp	r3, r2
 8001d1a:	d146      	bne.n	8001daa <HAL_I2C_MspInit+0xbe>

  /* USER CODE END I2C2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8001d1c:	f04f 0208 	mov.w	r2, #8
 8001d20:	f04f 0300 	mov.w	r3, #0
 8001d24:	e9c7 2304 	strd	r2, r3, [r7, #16]
    PeriphClkInitStruct.I2c123ClockSelection = RCC_I2C1235CLKSOURCE_D2PCLK1;
 8001d28:	2300      	movs	r3, #0
 8001d2a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d2e:	f107 0310 	add.w	r3, r7, #16
 8001d32:	4618      	mov	r0, r3
 8001d34:	f00a f8f0 	bl	800bf18 <HAL_RCCEx_PeriphCLKConfig>
 8001d38:	4603      	mov	r3, r0
 8001d3a:	2b00      	cmp	r3, #0
 8001d3c:	d001      	beq.n	8001d42 <HAL_I2C_MspInit+0x56>
    {
      Error_Handler();
 8001d3e:	f7ff fdd7 	bl	80018f0 <Error_Handler>
    }

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d42:	4b1d      	ldr	r3, [pc, #116]	@ (8001db8 <HAL_I2C_MspInit+0xcc>)
 8001d44:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001d48:	4a1b      	ldr	r2, [pc, #108]	@ (8001db8 <HAL_I2C_MspInit+0xcc>)
 8001d4a:	f043 0302 	orr.w	r3, r3, #2
 8001d4e:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001d52:	4b19      	ldr	r3, [pc, #100]	@ (8001db8 <HAL_I2C_MspInit+0xcc>)
 8001d54:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001d58:	f003 0302 	and.w	r3, r3, #2
 8001d5c:	60fb      	str	r3, [r7, #12]
 8001d5e:	68fb      	ldr	r3, [r7, #12]
    /**I2C2 GPIO Configuration
    PB10     ------> I2C2_SCL
    PB11     ------> I2C2_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 8001d60:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8001d64:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001d68:	2312      	movs	r3, #18
 8001d6a:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d6e:	2300      	movs	r3, #0
 8001d70:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d74:	2300      	movs	r3, #0
 8001d76:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8001d7a:	2304      	movs	r3, #4
 8001d7c:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d80:	f107 03cc 	add.w	r3, r7, #204	@ 0xcc
 8001d84:	4619      	mov	r1, r3
 8001d86:	480d      	ldr	r0, [pc, #52]	@ (8001dbc <HAL_I2C_MspInit+0xd0>)
 8001d88:	f007 fb6a 	bl	8009460 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8001d8c:	4b0a      	ldr	r3, [pc, #40]	@ (8001db8 <HAL_I2C_MspInit+0xcc>)
 8001d8e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001d92:	4a09      	ldr	r2, [pc, #36]	@ (8001db8 <HAL_I2C_MspInit+0xcc>)
 8001d94:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001d98:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8001d9c:	4b06      	ldr	r3, [pc, #24]	@ (8001db8 <HAL_I2C_MspInit+0xcc>)
 8001d9e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001da2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001da6:	60bb      	str	r3, [r7, #8]
 8001da8:	68bb      	ldr	r3, [r7, #8]

  /* USER CODE END I2C2_MspInit 1 */

  }

}
 8001daa:	bf00      	nop
 8001dac:	37e0      	adds	r7, #224	@ 0xe0
 8001dae:	46bd      	mov	sp, r7
 8001db0:	bd80      	pop	{r7, pc}
 8001db2:	bf00      	nop
 8001db4:	40005800 	.word	0x40005800
 8001db8:	58024400 	.word	0x58024400
 8001dbc:	58020400 	.word	0x58020400

08001dc0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001dc0:	b580      	push	{r7, lr}
 8001dc2:	b0bc      	sub	sp, #240	@ 0xf0
 8001dc4:	af00      	add	r7, sp, #0
 8001dc6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001dc8:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 8001dcc:	2200      	movs	r2, #0
 8001dce:	601a      	str	r2, [r3, #0]
 8001dd0:	605a      	str	r2, [r3, #4]
 8001dd2:	609a      	str	r2, [r3, #8]
 8001dd4:	60da      	str	r2, [r3, #12]
 8001dd6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001dd8:	f107 0320 	add.w	r3, r7, #32
 8001ddc:	22b8      	movs	r2, #184	@ 0xb8
 8001dde:	2100      	movs	r1, #0
 8001de0:	4618      	mov	r0, r3
 8001de2:	f015 fa7a 	bl	80172da <memset>
  if(hspi->Instance==SPI2)
 8001de6:	687b      	ldr	r3, [r7, #4]
 8001de8:	681b      	ldr	r3, [r3, #0]
 8001dea:	4a72      	ldr	r2, [pc, #456]	@ (8001fb4 <HAL_SPI_MspInit+0x1f4>)
 8001dec:	4293      	cmp	r3, r2
 8001dee:	d146      	bne.n	8001e7e <HAL_SPI_MspInit+0xbe>

  /* USER CODE END SPI2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI2;
 8001df0:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001df4:	f04f 0300 	mov.w	r3, #0
 8001df8:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL;
 8001dfc:	2300      	movs	r3, #0
 8001dfe:	67fb      	str	r3, [r7, #124]	@ 0x7c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001e00:	f107 0320 	add.w	r3, r7, #32
 8001e04:	4618      	mov	r0, r3
 8001e06:	f00a f887 	bl	800bf18 <HAL_RCCEx_PeriphCLKConfig>
 8001e0a:	4603      	mov	r3, r0
 8001e0c:	2b00      	cmp	r3, #0
 8001e0e:	d001      	beq.n	8001e14 <HAL_SPI_MspInit+0x54>
    {
      Error_Handler();
 8001e10:	f7ff fd6e 	bl	80018f0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001e14:	4b68      	ldr	r3, [pc, #416]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001e16:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001e1a:	4a67      	ldr	r2, [pc, #412]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001e1c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001e20:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8001e24:	4b64      	ldr	r3, [pc, #400]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001e26:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001e2a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001e2e:	61fb      	str	r3, [r7, #28]
 8001e30:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001e32:	4b61      	ldr	r3, [pc, #388]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001e34:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001e38:	4a5f      	ldr	r2, [pc, #380]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001e3a:	f043 0302 	orr.w	r3, r3, #2
 8001e3e:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001e42:	4b5d      	ldr	r3, [pc, #372]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001e44:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001e48:	f003 0302 	and.w	r3, r3, #2
 8001e4c:	61bb      	str	r3, [r7, #24]
 8001e4e:	69bb      	ldr	r3, [r7, #24]
    /**SPI2 GPIO Configuration
    PB13     ------> SPI2_SCK
    PB14     ------> SPI2_MISO
    PB15     ------> SPI2_MOSI
    */
    GPIO_InitStruct.Pin = ACCEL_SCK1_Pin|ACCEL_MISO1_Pin|ACCEL_MOSI1_Pin;
 8001e50:	f44f 4360 	mov.w	r3, #57344	@ 0xe000
 8001e54:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e58:	2302      	movs	r3, #2
 8001e5a:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e5e:	2300      	movs	r3, #0
 8001e60:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e64:	2300      	movs	r3, #0
 8001e66:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001e6a:	2305      	movs	r3, #5
 8001e6c:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e70:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 8001e74:	4619      	mov	r1, r3
 8001e76:	4851      	ldr	r0, [pc, #324]	@ (8001fbc <HAL_SPI_MspInit+0x1fc>)
 8001e78:	f007 faf2 	bl	8009460 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI4_MspInit 1 */

  /* USER CODE END SPI4_MspInit 1 */
  }

}
 8001e7c:	e096      	b.n	8001fac <HAL_SPI_MspInit+0x1ec>
  else if(hspi->Instance==SPI3)
 8001e7e:	687b      	ldr	r3, [r7, #4]
 8001e80:	681b      	ldr	r3, [r3, #0]
 8001e82:	4a4f      	ldr	r2, [pc, #316]	@ (8001fc0 <HAL_SPI_MspInit+0x200>)
 8001e84:	4293      	cmp	r3, r2
 8001e86:	d146      	bne.n	8001f16 <HAL_SPI_MspInit+0x156>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI3;
 8001e88:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001e8c:	f04f 0300 	mov.w	r3, #0
 8001e90:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL;
 8001e94:	2300      	movs	r3, #0
 8001e96:	67fb      	str	r3, [r7, #124]	@ 0x7c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001e98:	f107 0320 	add.w	r3, r7, #32
 8001e9c:	4618      	mov	r0, r3
 8001e9e:	f00a f83b 	bl	800bf18 <HAL_RCCEx_PeriphCLKConfig>
 8001ea2:	4603      	mov	r3, r0
 8001ea4:	2b00      	cmp	r3, #0
 8001ea6:	d001      	beq.n	8001eac <HAL_SPI_MspInit+0xec>
      Error_Handler();
 8001ea8:	f7ff fd22 	bl	80018f0 <Error_Handler>
    __HAL_RCC_SPI3_CLK_ENABLE();
 8001eac:	4b42      	ldr	r3, [pc, #264]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001eae:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001eb2:	4a41      	ldr	r2, [pc, #260]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001eb4:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8001eb8:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8001ebc:	4b3e      	ldr	r3, [pc, #248]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001ebe:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001ec2:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8001ec6:	617b      	str	r3, [r7, #20]
 8001ec8:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001eca:	4b3b      	ldr	r3, [pc, #236]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001ecc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001ed0:	4a39      	ldr	r2, [pc, #228]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001ed2:	f043 0304 	orr.w	r3, r3, #4
 8001ed6:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001eda:	4b37      	ldr	r3, [pc, #220]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001edc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001ee0:	f003 0304 	and.w	r3, r3, #4
 8001ee4:	613b      	str	r3, [r7, #16]
 8001ee6:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 8001ee8:	f44f 53e0 	mov.w	r3, #7168	@ 0x1c00
 8001eec:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ef0:	2302      	movs	r3, #2
 8001ef2:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ef6:	2300      	movs	r3, #0
 8001ef8:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001efc:	2300      	movs	r3, #0
 8001efe:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 8001f02:	2306      	movs	r3, #6
 8001f04:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f08:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 8001f0c:	4619      	mov	r1, r3
 8001f0e:	482d      	ldr	r0, [pc, #180]	@ (8001fc4 <HAL_SPI_MspInit+0x204>)
 8001f10:	f007 faa6 	bl	8009460 <HAL_GPIO_Init>
}
 8001f14:	e04a      	b.n	8001fac <HAL_SPI_MspInit+0x1ec>
  else if(hspi->Instance==SPI4)
 8001f16:	687b      	ldr	r3, [r7, #4]
 8001f18:	681b      	ldr	r3, [r3, #0]
 8001f1a:	4a2b      	ldr	r2, [pc, #172]	@ (8001fc8 <HAL_SPI_MspInit+0x208>)
 8001f1c:	4293      	cmp	r3, r2
 8001f1e:	d145      	bne.n	8001fac <HAL_SPI_MspInit+0x1ec>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI4;
 8001f20:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001f24:	f04f 0300 	mov.w	r3, #0
 8001f28:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.Spi45ClockSelection = RCC_SPI45CLKSOURCE_D2PCLK1;
 8001f2c:	2300      	movs	r3, #0
 8001f2e:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001f32:	f107 0320 	add.w	r3, r7, #32
 8001f36:	4618      	mov	r0, r3
 8001f38:	f009 ffee 	bl	800bf18 <HAL_RCCEx_PeriphCLKConfig>
 8001f3c:	4603      	mov	r3, r0
 8001f3e:	2b00      	cmp	r3, #0
 8001f40:	d001      	beq.n	8001f46 <HAL_SPI_MspInit+0x186>
      Error_Handler();
 8001f42:	f7ff fcd5 	bl	80018f0 <Error_Handler>
    __HAL_RCC_SPI4_CLK_ENABLE();
 8001f46:	4b1c      	ldr	r3, [pc, #112]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001f48:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001f4c:	4a1a      	ldr	r2, [pc, #104]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001f4e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001f52:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8001f56:	4b18      	ldr	r3, [pc, #96]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001f58:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001f5c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001f60:	60fb      	str	r3, [r7, #12]
 8001f62:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8001f64:	4b14      	ldr	r3, [pc, #80]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001f66:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001f6a:	4a13      	ldr	r2, [pc, #76]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001f6c:	f043 0310 	orr.w	r3, r3, #16
 8001f70:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001f74:	4b10      	ldr	r3, [pc, #64]	@ (8001fb8 <HAL_SPI_MspInit+0x1f8>)
 8001f76:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001f7a:	f003 0310 	and.w	r3, r3, #16
 8001f7e:	60bb      	str	r3, [r7, #8]
 8001f80:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_5|GPIO_PIN_6;
 8001f82:	2364      	movs	r3, #100	@ 0x64
 8001f84:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f88:	2302      	movs	r3, #2
 8001f8a:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f8e:	2300      	movs	r3, #0
 8001f90:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f94:	2300      	movs	r3, #0
 8001f96:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI4;
 8001f9a:	2305      	movs	r3, #5
 8001f9c:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001fa0:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 8001fa4:	4619      	mov	r1, r3
 8001fa6:	4809      	ldr	r0, [pc, #36]	@ (8001fcc <HAL_SPI_MspInit+0x20c>)
 8001fa8:	f007 fa5a 	bl	8009460 <HAL_GPIO_Init>
}
 8001fac:	bf00      	nop
 8001fae:	37f0      	adds	r7, #240	@ 0xf0
 8001fb0:	46bd      	mov	sp, r7
 8001fb2:	bd80      	pop	{r7, pc}
 8001fb4:	40003800 	.word	0x40003800
 8001fb8:	58024400 	.word	0x58024400
 8001fbc:	58020400 	.word	0x58020400
 8001fc0:	40003c00 	.word	0x40003c00
 8001fc4:	58020800 	.word	0x58020800
 8001fc8:	40013400 	.word	0x40013400
 8001fcc:	58021000 	.word	0x58021000

08001fd0 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001fd0:	b580      	push	{r7, lr}
 8001fd2:	b086      	sub	sp, #24
 8001fd4:	af00      	add	r7, sp, #0
 8001fd6:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8001fd8:	687b      	ldr	r3, [r7, #4]
 8001fda:	681b      	ldr	r3, [r3, #0]
 8001fdc:	4a45      	ldr	r2, [pc, #276]	@ (80020f4 <HAL_TIM_Base_MspInit+0x124>)
 8001fde:	4293      	cmp	r3, r2
 8001fe0:	d10f      	bne.n	8002002 <HAL_TIM_Base_MspInit+0x32>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001fe2:	4b45      	ldr	r3, [pc, #276]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8001fe4:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001fe8:	4a43      	ldr	r2, [pc, #268]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8001fea:	f043 0301 	orr.w	r3, r3, #1
 8001fee:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8001ff2:	4b41      	ldr	r3, [pc, #260]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8001ff4:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001ff8:	f003 0301 	and.w	r3, r3, #1
 8001ffc:	617b      	str	r3, [r7, #20]
 8001ffe:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 8002000:	e074      	b.n	80020ec <HAL_TIM_Base_MspInit+0x11c>
  else if(htim_base->Instance==TIM2)
 8002002:	687b      	ldr	r3, [r7, #4]
 8002004:	681b      	ldr	r3, [r3, #0]
 8002006:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800200a:	d10f      	bne.n	800202c <HAL_TIM_Base_MspInit+0x5c>
    __HAL_RCC_TIM2_CLK_ENABLE();
 800200c:	4b3a      	ldr	r3, [pc, #232]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 800200e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8002012:	4a39      	ldr	r2, [pc, #228]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8002014:	f043 0301 	orr.w	r3, r3, #1
 8002018:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 800201c:	4b36      	ldr	r3, [pc, #216]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 800201e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8002022:	f003 0301 	and.w	r3, r3, #1
 8002026:	613b      	str	r3, [r7, #16]
 8002028:	693b      	ldr	r3, [r7, #16]
}
 800202a:	e05f      	b.n	80020ec <HAL_TIM_Base_MspInit+0x11c>
  else if(htim_base->Instance==TIM3)
 800202c:	687b      	ldr	r3, [r7, #4]
 800202e:	681b      	ldr	r3, [r3, #0]
 8002030:	4a32      	ldr	r2, [pc, #200]	@ (80020fc <HAL_TIM_Base_MspInit+0x12c>)
 8002032:	4293      	cmp	r3, r2
 8002034:	d117      	bne.n	8002066 <HAL_TIM_Base_MspInit+0x96>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002036:	4b30      	ldr	r3, [pc, #192]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8002038:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 800203c:	4a2e      	ldr	r2, [pc, #184]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 800203e:	f043 0302 	orr.w	r3, r3, #2
 8002042:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8002046:	4b2c      	ldr	r3, [pc, #176]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8002048:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 800204c:	f003 0302 	and.w	r3, r3, #2
 8002050:	60fb      	str	r3, [r7, #12]
 8002052:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8002054:	2200      	movs	r2, #0
 8002056:	2100      	movs	r1, #0
 8002058:	201d      	movs	r0, #29
 800205a:	f004 fdc8 	bl	8006bee <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 800205e:	201d      	movs	r0, #29
 8002060:	f004 fddf 	bl	8006c22 <HAL_NVIC_EnableIRQ>
}
 8002064:	e042      	b.n	80020ec <HAL_TIM_Base_MspInit+0x11c>
  else if(htim_base->Instance==TIM4)
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	4a25      	ldr	r2, [pc, #148]	@ (8002100 <HAL_TIM_Base_MspInit+0x130>)
 800206c:	4293      	cmp	r3, r2
 800206e:	d13d      	bne.n	80020ec <HAL_TIM_Base_MspInit+0x11c>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8002070:	4b21      	ldr	r3, [pc, #132]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8002072:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8002076:	4a20      	ldr	r2, [pc, #128]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8002078:	f043 0304 	orr.w	r3, r3, #4
 800207c:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8002080:	4b1d      	ldr	r3, [pc, #116]	@ (80020f8 <HAL_TIM_Base_MspInit+0x128>)
 8002082:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8002086:	f003 0304 	and.w	r3, r3, #4
 800208a:	60bb      	str	r3, [r7, #8]
 800208c:	68bb      	ldr	r3, [r7, #8]
    hdma_tim4_ch1.Instance = DMA1_Stream2;
 800208e:	4b1d      	ldr	r3, [pc, #116]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 8002090:	4a1d      	ldr	r2, [pc, #116]	@ (8002108 <HAL_TIM_Base_MspInit+0x138>)
 8002092:	601a      	str	r2, [r3, #0]
    hdma_tim4_ch1.Init.Request = DMA_REQUEST_TIM4_CH1;
 8002094:	4b1b      	ldr	r3, [pc, #108]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 8002096:	221d      	movs	r2, #29
 8002098:	605a      	str	r2, [r3, #4]
    hdma_tim4_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 800209a:	4b1a      	ldr	r3, [pc, #104]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 800209c:	2240      	movs	r2, #64	@ 0x40
 800209e:	609a      	str	r2, [r3, #8]
    hdma_tim4_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 80020a0:	4b18      	ldr	r3, [pc, #96]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020a2:	2200      	movs	r2, #0
 80020a4:	60da      	str	r2, [r3, #12]
    hdma_tim4_ch1.Init.MemInc = DMA_MINC_ENABLE;
 80020a6:	4b17      	ldr	r3, [pc, #92]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020a8:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80020ac:	611a      	str	r2, [r3, #16]
    hdma_tim4_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80020ae:	4b15      	ldr	r3, [pc, #84]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020b0:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80020b4:	615a      	str	r2, [r3, #20]
    hdma_tim4_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 80020b6:	4b13      	ldr	r3, [pc, #76]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020b8:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80020bc:	619a      	str	r2, [r3, #24]
    hdma_tim4_ch1.Init.Mode = DMA_NORMAL;
 80020be:	4b11      	ldr	r3, [pc, #68]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020c0:	2200      	movs	r2, #0
 80020c2:	61da      	str	r2, [r3, #28]
    hdma_tim4_ch1.Init.Priority = DMA_PRIORITY_LOW;
 80020c4:	4b0f      	ldr	r3, [pc, #60]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020c6:	2200      	movs	r2, #0
 80020c8:	621a      	str	r2, [r3, #32]
    hdma_tim4_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80020ca:	4b0e      	ldr	r3, [pc, #56]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020cc:	2200      	movs	r2, #0
 80020ce:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_tim4_ch1) != HAL_OK)
 80020d0:	480c      	ldr	r0, [pc, #48]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020d2:	f005 f8f1 	bl	80072b8 <HAL_DMA_Init>
 80020d6:	4603      	mov	r3, r0
 80020d8:	2b00      	cmp	r3, #0
 80020da:	d001      	beq.n	80020e0 <HAL_TIM_Base_MspInit+0x110>
      Error_Handler();
 80020dc:	f7ff fc08 	bl	80018f0 <Error_Handler>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC1],hdma_tim4_ch1);
 80020e0:	687b      	ldr	r3, [r7, #4]
 80020e2:	4a08      	ldr	r2, [pc, #32]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020e4:	625a      	str	r2, [r3, #36]	@ 0x24
 80020e6:	4a07      	ldr	r2, [pc, #28]	@ (8002104 <HAL_TIM_Base_MspInit+0x134>)
 80020e8:	687b      	ldr	r3, [r7, #4]
 80020ea:	6393      	str	r3, [r2, #56]	@ 0x38
}
 80020ec:	bf00      	nop
 80020ee:	3718      	adds	r7, #24
 80020f0:	46bd      	mov	sp, r7
 80020f2:	bd80      	pop	{r7, pc}
 80020f4:	40010000 	.word	0x40010000
 80020f8:	58024400 	.word	0x58024400
 80020fc:	40000400 	.word	0x40000400
 8002100:	40000800 	.word	0x40000800
 8002104:	240007e8 	.word	0x240007e8
 8002108:	40020040 	.word	0x40020040

0800210c <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 800210c:	b580      	push	{r7, lr}
 800210e:	b08a      	sub	sp, #40	@ 0x28
 8002110:	af00      	add	r7, sp, #0
 8002112:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002114:	f107 0314 	add.w	r3, r7, #20
 8002118:	2200      	movs	r2, #0
 800211a:	601a      	str	r2, [r3, #0]
 800211c:	605a      	str	r2, [r3, #4]
 800211e:	609a      	str	r2, [r3, #8]
 8002120:	60da      	str	r2, [r3, #12]
 8002122:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM3)
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	681b      	ldr	r3, [r3, #0]
 8002128:	4a26      	ldr	r2, [pc, #152]	@ (80021c4 <HAL_TIM_MspPostInit+0xb8>)
 800212a:	4293      	cmp	r3, r2
 800212c:	d120      	bne.n	8002170 <HAL_TIM_MspPostInit+0x64>
  {
  /* USER CODE BEGIN TIM3_MspPostInit 0 */

  /* USER CODE END TIM3_MspPostInit 0 */
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800212e:	4b26      	ldr	r3, [pc, #152]	@ (80021c8 <HAL_TIM_MspPostInit+0xbc>)
 8002130:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8002134:	4a24      	ldr	r2, [pc, #144]	@ (80021c8 <HAL_TIM_MspPostInit+0xbc>)
 8002136:	f043 0304 	orr.w	r3, r3, #4
 800213a:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 800213e:	4b22      	ldr	r3, [pc, #136]	@ (80021c8 <HAL_TIM_MspPostInit+0xbc>)
 8002140:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8002144:	f003 0304 	and.w	r3, r3, #4
 8002148:	613b      	str	r3, [r7, #16]
 800214a:	693b      	ldr	r3, [r7, #16]
    /**TIM3 GPIO Configuration
    PC6     ------> TIM3_CH1
    PC7     ------> TIM3_CH2
    PC8     ------> TIM3_CH3
    */
    GPIO_InitStruct.Pin = LED_STROBE_1_Pin|LED_STROBE_2_Pin|LED_STROBE_3_Pin;
 800214c:	f44f 73e0 	mov.w	r3, #448	@ 0x1c0
 8002150:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002152:	2302      	movs	r3, #2
 8002154:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002156:	2300      	movs	r3, #0
 8002158:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800215a:	2300      	movs	r3, #0
 800215c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 800215e:	2302      	movs	r3, #2
 8002160:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002162:	f107 0314 	add.w	r3, r7, #20
 8002166:	4619      	mov	r1, r3
 8002168:	4818      	ldr	r0, [pc, #96]	@ (80021cc <HAL_TIM_MspPostInit+0xc0>)
 800216a:	f007 f979 	bl	8009460 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 800216e:	e024      	b.n	80021ba <HAL_TIM_MspPostInit+0xae>
  else if(htim->Instance==TIM4)
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	681b      	ldr	r3, [r3, #0]
 8002174:	4a16      	ldr	r2, [pc, #88]	@ (80021d0 <HAL_TIM_MspPostInit+0xc4>)
 8002176:	4293      	cmp	r3, r2
 8002178:	d11f      	bne.n	80021ba <HAL_TIM_MspPostInit+0xae>
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800217a:	4b13      	ldr	r3, [pc, #76]	@ (80021c8 <HAL_TIM_MspPostInit+0xbc>)
 800217c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8002180:	4a11      	ldr	r2, [pc, #68]	@ (80021c8 <HAL_TIM_MspPostInit+0xbc>)
 8002182:	f043 0308 	orr.w	r3, r3, #8
 8002186:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 800218a:	4b0f      	ldr	r3, [pc, #60]	@ (80021c8 <HAL_TIM_MspPostInit+0xbc>)
 800218c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8002190:	f003 0308 	and.w	r3, r3, #8
 8002194:	60fb      	str	r3, [r7, #12]
 8002196:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = LED_ACCEL_Pin;
 8002198:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800219c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800219e:	2302      	movs	r3, #2
 80021a0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021a2:	2300      	movs	r3, #0
 80021a4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80021a6:	2300      	movs	r3, #0
 80021a8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 80021aa:	2302      	movs	r3, #2
 80021ac:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(LED_ACCEL_GPIO_Port, &GPIO_InitStruct);
 80021ae:	f107 0314 	add.w	r3, r7, #20
 80021b2:	4619      	mov	r1, r3
 80021b4:	4807      	ldr	r0, [pc, #28]	@ (80021d4 <HAL_TIM_MspPostInit+0xc8>)
 80021b6:	f007 f953 	bl	8009460 <HAL_GPIO_Init>
}
 80021ba:	bf00      	nop
 80021bc:	3728      	adds	r7, #40	@ 0x28
 80021be:	46bd      	mov	sp, r7
 80021c0:	bd80      	pop	{r7, pc}
 80021c2:	bf00      	nop
 80021c4:	40000400 	.word	0x40000400
 80021c8:	58024400 	.word	0x58024400
 80021cc:	58020800 	.word	0x58020800
 80021d0:	40000800 	.word	0x40000800
 80021d4:	58020c00 	.word	0x58020c00

080021d8 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80021d8:	b580      	push	{r7, lr}
 80021da:	b0ba      	sub	sp, #232	@ 0xe8
 80021dc:	af00      	add	r7, sp, #0
 80021de:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021e0:	f107 03d4 	add.w	r3, r7, #212	@ 0xd4
 80021e4:	2200      	movs	r2, #0
 80021e6:	601a      	str	r2, [r3, #0]
 80021e8:	605a      	str	r2, [r3, #4]
 80021ea:	609a      	str	r2, [r3, #8]
 80021ec:	60da      	str	r2, [r3, #12]
 80021ee:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80021f0:	f107 0318 	add.w	r3, r7, #24
 80021f4:	22b8      	movs	r2, #184	@ 0xb8
 80021f6:	2100      	movs	r1, #0
 80021f8:	4618      	mov	r0, r3
 80021fa:	f015 f86e 	bl	80172da <memset>
  if(huart->Instance==UART7)
 80021fe:	687b      	ldr	r3, [r7, #4]
 8002200:	681b      	ldr	r3, [r3, #0]
 8002202:	4a4d      	ldr	r2, [pc, #308]	@ (8002338 <HAL_UART_MspInit+0x160>)
 8002204:	4293      	cmp	r3, r2
 8002206:	d147      	bne.n	8002298 <HAL_UART_MspInit+0xc0>

  /* USER CODE END UART7_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_UART7;
 8002208:	f04f 0202 	mov.w	r2, #2
 800220c:	f04f 0300 	mov.w	r3, #0
 8002210:	e9c7 2306 	strd	r2, r3, [r7, #24]
    PeriphClkInitStruct.Usart234578ClockSelection = RCC_USART234578CLKSOURCE_D2PCLK1;
 8002214:	2300      	movs	r3, #0
 8002216:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800221a:	f107 0318 	add.w	r3, r7, #24
 800221e:	4618      	mov	r0, r3
 8002220:	f009 fe7a 	bl	800bf18 <HAL_RCCEx_PeriphCLKConfig>
 8002224:	4603      	mov	r3, r0
 8002226:	2b00      	cmp	r3, #0
 8002228:	d001      	beq.n	800222e <HAL_UART_MspInit+0x56>
    {
      Error_Handler();
 800222a:	f7ff fb61 	bl	80018f0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_UART7_CLK_ENABLE();
 800222e:	4b43      	ldr	r3, [pc, #268]	@ (800233c <HAL_UART_MspInit+0x164>)
 8002230:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8002234:	4a41      	ldr	r2, [pc, #260]	@ (800233c <HAL_UART_MspInit+0x164>)
 8002236:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800223a:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 800223e:	4b3f      	ldr	r3, [pc, #252]	@ (800233c <HAL_UART_MspInit+0x164>)
 8002240:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8002244:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8002248:	617b      	str	r3, [r7, #20]
 800224a:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 800224c:	4b3b      	ldr	r3, [pc, #236]	@ (800233c <HAL_UART_MspInit+0x164>)
 800224e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8002252:	4a3a      	ldr	r2, [pc, #232]	@ (800233c <HAL_UART_MspInit+0x164>)
 8002254:	f043 0310 	orr.w	r3, r3, #16
 8002258:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 800225c:	4b37      	ldr	r3, [pc, #220]	@ (800233c <HAL_UART_MspInit+0x164>)
 800225e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8002262:	f003 0310 	and.w	r3, r3, #16
 8002266:	613b      	str	r3, [r7, #16]
 8002268:	693b      	ldr	r3, [r7, #16]
    PE7     ------> UART7_RX
    PE8     ------> UART7_TX
    PE9     ------> UART7_RTS
    PE10     ------> UART7_CTS
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10;
 800226a:	f44f 63f0 	mov.w	r3, #1920	@ 0x780
 800226e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002272:	2302      	movs	r3, #2
 8002274:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002278:	2300      	movs	r3, #0
 800227a:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800227e:	2300      	movs	r3, #0
 8002280:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF7_UART7;
 8002284:	2307      	movs	r3, #7
 8002286:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800228a:	f107 03d4 	add.w	r3, r7, #212	@ 0xd4
 800228e:	4619      	mov	r1, r3
 8002290:	482b      	ldr	r0, [pc, #172]	@ (8002340 <HAL_UART_MspInit+0x168>)
 8002292:	f007 f8e5 	bl	8009460 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8002296:	e04a      	b.n	800232e <HAL_UART_MspInit+0x156>
  else if(huart->Instance==USART1)
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	681b      	ldr	r3, [r3, #0]
 800229c:	4a29      	ldr	r2, [pc, #164]	@ (8002344 <HAL_UART_MspInit+0x16c>)
 800229e:	4293      	cmp	r3, r2
 80022a0:	d145      	bne.n	800232e <HAL_UART_MspInit+0x156>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 80022a2:	f04f 0201 	mov.w	r2, #1
 80022a6:	f04f 0300 	mov.w	r3, #0
 80022aa:	e9c7 2306 	strd	r2, r3, [r7, #24]
    PeriphClkInitStruct.Usart16ClockSelection = RCC_USART16910CLKSOURCE_D2PCLK2;
 80022ae:	2300      	movs	r3, #0
 80022b0:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80022b4:	f107 0318 	add.w	r3, r7, #24
 80022b8:	4618      	mov	r0, r3
 80022ba:	f009 fe2d 	bl	800bf18 <HAL_RCCEx_PeriphCLKConfig>
 80022be:	4603      	mov	r3, r0
 80022c0:	2b00      	cmp	r3, #0
 80022c2:	d001      	beq.n	80022c8 <HAL_UART_MspInit+0xf0>
      Error_Handler();
 80022c4:	f7ff fb14 	bl	80018f0 <Error_Handler>
    __HAL_RCC_USART1_CLK_ENABLE();
 80022c8:	4b1c      	ldr	r3, [pc, #112]	@ (800233c <HAL_UART_MspInit+0x164>)
 80022ca:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80022ce:	4a1b      	ldr	r2, [pc, #108]	@ (800233c <HAL_UART_MspInit+0x164>)
 80022d0:	f043 0310 	orr.w	r3, r3, #16
 80022d4:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 80022d8:	4b18      	ldr	r3, [pc, #96]	@ (800233c <HAL_UART_MspInit+0x164>)
 80022da:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80022de:	f003 0310 	and.w	r3, r3, #16
 80022e2:	60fb      	str	r3, [r7, #12]
 80022e4:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80022e6:	4b15      	ldr	r3, [pc, #84]	@ (800233c <HAL_UART_MspInit+0x164>)
 80022e8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80022ec:	4a13      	ldr	r2, [pc, #76]	@ (800233c <HAL_UART_MspInit+0x164>)
 80022ee:	f043 0302 	orr.w	r3, r3, #2
 80022f2:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80022f6:	4b11      	ldr	r3, [pc, #68]	@ (800233c <HAL_UART_MspInit+0x164>)
 80022f8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80022fc:	f003 0302 	and.w	r3, r3, #2
 8002300:	60bb      	str	r3, [r7, #8]
 8002302:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = VCP_TX_Pin|VCP_RX_Pin;
 8002304:	23c0      	movs	r3, #192	@ 0xc0
 8002306:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800230a:	2302      	movs	r3, #2
 800230c:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002310:	2300      	movs	r3, #0
 8002312:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002316:	2300      	movs	r3, #0
 8002318:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800231c:	2307      	movs	r3, #7
 800231e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002322:	f107 03d4 	add.w	r3, r7, #212	@ 0xd4
 8002326:	4619      	mov	r1, r3
 8002328:	4807      	ldr	r0, [pc, #28]	@ (8002348 <HAL_UART_MspInit+0x170>)
 800232a:	f007 f899 	bl	8009460 <HAL_GPIO_Init>
}
 800232e:	bf00      	nop
 8002330:	37e8      	adds	r7, #232	@ 0xe8
 8002332:	46bd      	mov	sp, r7
 8002334:	bd80      	pop	{r7, pc}
 8002336:	bf00      	nop
 8002338:	40007800 	.word	0x40007800
 800233c:	58024400 	.word	0x58024400
 8002340:	58021000 	.word	0x58021000
 8002344:	40011000 	.word	0x40011000
 8002348:	58020400 	.word	0x58020400

0800234c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800234c:	b480      	push	{r7}
 800234e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002350:	bf00      	nop
 8002352:	e7fd      	b.n	8002350 <NMI_Handler+0x4>

08002354 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002354:	b480      	push	{r7}
 8002356:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002358:	bf00      	nop
 800235a:	e7fd      	b.n	8002358 <HardFault_Handler+0x4>

0800235c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800235c:	b480      	push	{r7}
 800235e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002360:	bf00      	nop
 8002362:	e7fd      	b.n	8002360 <MemManage_Handler+0x4>

08002364 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002364:	b480      	push	{r7}
 8002366:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002368:	bf00      	nop
 800236a:	e7fd      	b.n	8002368 <BusFault_Handler+0x4>

0800236c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800236c:	b480      	push	{r7}
 800236e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002370:	bf00      	nop
 8002372:	e7fd      	b.n	8002370 <UsageFault_Handler+0x4>

08002374 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002374:	b480      	push	{r7}
 8002376:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002378:	bf00      	nop
 800237a:	46bd      	mov	sp, r7
 800237c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002380:	4770      	bx	lr

08002382 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002382:	b480      	push	{r7}
 8002384:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002386:	bf00      	nop
 8002388:	46bd      	mov	sp, r7
 800238a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800238e:	4770      	bx	lr

08002390 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002390:	b480      	push	{r7}
 8002392:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002394:	bf00      	nop
 8002396:	46bd      	mov	sp, r7
 8002398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800239c:	4770      	bx	lr

0800239e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800239e:	b580      	push	{r7, lr}
 80023a0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80023a2:	f002 ff91 	bl	80052c8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80023a6:	bf00      	nop
 80023a8:	bd80      	pop	{r7, pc}
	...

080023ac <DMA1_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA1 stream0 global interrupt.
  */
void DMA1_Stream0_IRQHandler(void)
{
 80023ac:	b580      	push	{r7, lr}
 80023ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */

  /* USER CODE END DMA1_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_dac1_ch1);
 80023b0:	4802      	ldr	r0, [pc, #8]	@ (80023bc <DMA1_Stream0_IRQHandler+0x10>)
 80023b2:	f005 fd43 	bl	8007e3c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */

  /* USER CODE END DMA1_Stream0_IRQn 1 */
}
 80023b6:	bf00      	nop
 80023b8:	bd80      	pop	{r7, pc}
 80023ba:	bf00      	nop
 80023bc:	240003dc 	.word	0x240003dc

080023c0 <DMA1_Stream1_IRQHandler>:

/**
  * @brief This function handles DMA1 stream1 global interrupt.
  */
void DMA1_Stream1_IRQHandler(void)
{
 80023c0:	b580      	push	{r7, lr}
 80023c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_dac1_ch2);
 80023c4:	4802      	ldr	r0, [pc, #8]	@ (80023d0 <DMA1_Stream1_IRQHandler+0x10>)
 80023c6:	f005 fd39 	bl	8007e3c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */

  /* USER CODE END DMA1_Stream1_IRQn 1 */
}
 80023ca:	bf00      	nop
 80023cc:	bd80      	pop	{r7, pc}
 80023ce:	bf00      	nop
 80023d0:	24000454 	.word	0x24000454

080023d4 <DMA1_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA1 stream2 global interrupt.
  */
void DMA1_Stream2_IRQHandler(void)
{
 80023d4:	b580      	push	{r7, lr}
 80023d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream2_IRQn 0 */

  /* USER CODE END DMA1_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim4_ch1);
 80023d8:	4802      	ldr	r0, [pc, #8]	@ (80023e4 <DMA1_Stream2_IRQHandler+0x10>)
 80023da:	f005 fd2f 	bl	8007e3c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream2_IRQn 1 */

  /* USER CODE END DMA1_Stream2_IRQn 1 */
}
 80023de:	bf00      	nop
 80023e0:	bd80      	pop	{r7, pc}
 80023e2:	bf00      	nop
 80023e4:	240007e8 	.word	0x240007e8

080023e8 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 80023e8:	b580      	push	{r7, lr}
 80023ea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 80023ec:	4802      	ldr	r0, [pc, #8]	@ (80023f8 <TIM3_IRQHandler+0x10>)
 80023ee:	f00d f85b 	bl	800f4a8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 80023f2:	bf00      	nop
 80023f4:	bd80      	pop	{r7, pc}
 80023f6:	bf00      	nop
 80023f8:	24000750 	.word	0x24000750

080023fc <OTG_HS_IRQHandler>:

/**
  * @brief This function handles USB On The Go HS global interrupt.
  */
void OTG_HS_IRQHandler(void)
{
 80023fc:	b580      	push	{r7, lr}
 80023fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN OTG_HS_IRQn 0 */

  /* USER CODE END OTG_HS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_HS);
 8002400:	4802      	ldr	r0, [pc, #8]	@ (800240c <OTG_HS_IRQHandler+0x10>)
 8002402:	f007 fc7b 	bl	8009cfc <HAL_PCD_IRQHandler>
  /* USER CODE BEGIN OTG_HS_IRQn 1 */

  /* USER CODE END OTG_HS_IRQn 1 */
}
 8002406:	bf00      	nop
 8002408:	bd80      	pop	{r7, pc}
 800240a:	bf00      	nop
 800240c:	24005a24 	.word	0x24005a24

08002410 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002410:	b480      	push	{r7}
 8002412:	af00      	add	r7, sp, #0
  return 1;
 8002414:	2301      	movs	r3, #1
}
 8002416:	4618      	mov	r0, r3
 8002418:	46bd      	mov	sp, r7
 800241a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800241e:	4770      	bx	lr

08002420 <_kill>:

int _kill(int pid, int sig)
{
 8002420:	b580      	push	{r7, lr}
 8002422:	b082      	sub	sp, #8
 8002424:	af00      	add	r7, sp, #0
 8002426:	6078      	str	r0, [r7, #4]
 8002428:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800242a:	f014 ffc7 	bl	80173bc <__errno>
 800242e:	4603      	mov	r3, r0
 8002430:	2216      	movs	r2, #22
 8002432:	601a      	str	r2, [r3, #0]
  return -1;
 8002434:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002438:	4618      	mov	r0, r3
 800243a:	3708      	adds	r7, #8
 800243c:	46bd      	mov	sp, r7
 800243e:	bd80      	pop	{r7, pc}

08002440 <_exit>:

void _exit (int status)
{
 8002440:	b580      	push	{r7, lr}
 8002442:	b082      	sub	sp, #8
 8002444:	af00      	add	r7, sp, #0
 8002446:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002448:	f04f 31ff 	mov.w	r1, #4294967295
 800244c:	6878      	ldr	r0, [r7, #4]
 800244e:	f7ff ffe7 	bl	8002420 <_kill>
  while (1) {}    /* Make sure we hang here */
 8002452:	bf00      	nop
 8002454:	e7fd      	b.n	8002452 <_exit+0x12>

08002456 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002456:	b580      	push	{r7, lr}
 8002458:	b086      	sub	sp, #24
 800245a:	af00      	add	r7, sp, #0
 800245c:	60f8      	str	r0, [r7, #12]
 800245e:	60b9      	str	r1, [r7, #8]
 8002460:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002462:	2300      	movs	r3, #0
 8002464:	617b      	str	r3, [r7, #20]
 8002466:	e00a      	b.n	800247e <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002468:	f3af 8000 	nop.w
 800246c:	4601      	mov	r1, r0
 800246e:	68bb      	ldr	r3, [r7, #8]
 8002470:	1c5a      	adds	r2, r3, #1
 8002472:	60ba      	str	r2, [r7, #8]
 8002474:	b2ca      	uxtb	r2, r1
 8002476:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002478:	697b      	ldr	r3, [r7, #20]
 800247a:	3301      	adds	r3, #1
 800247c:	617b      	str	r3, [r7, #20]
 800247e:	697a      	ldr	r2, [r7, #20]
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	429a      	cmp	r2, r3
 8002484:	dbf0      	blt.n	8002468 <_read+0x12>
  }

  return len;
 8002486:	687b      	ldr	r3, [r7, #4]
}
 8002488:	4618      	mov	r0, r3
 800248a:	3718      	adds	r7, #24
 800248c:	46bd      	mov	sp, r7
 800248e:	bd80      	pop	{r7, pc}

08002490 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002490:	b580      	push	{r7, lr}
 8002492:	b086      	sub	sp, #24
 8002494:	af00      	add	r7, sp, #0
 8002496:	60f8      	str	r0, [r7, #12]
 8002498:	60b9      	str	r1, [r7, #8]
 800249a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800249c:	2300      	movs	r3, #0
 800249e:	617b      	str	r3, [r7, #20]
 80024a0:	e009      	b.n	80024b6 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80024a2:	68bb      	ldr	r3, [r7, #8]
 80024a4:	1c5a      	adds	r2, r3, #1
 80024a6:	60ba      	str	r2, [r7, #8]
 80024a8:	781b      	ldrb	r3, [r3, #0]
 80024aa:	4618      	mov	r0, r3
 80024ac:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80024b0:	697b      	ldr	r3, [r7, #20]
 80024b2:	3301      	adds	r3, #1
 80024b4:	617b      	str	r3, [r7, #20]
 80024b6:	697a      	ldr	r2, [r7, #20]
 80024b8:	687b      	ldr	r3, [r7, #4]
 80024ba:	429a      	cmp	r2, r3
 80024bc:	dbf1      	blt.n	80024a2 <_write+0x12>
  }
  return len;
 80024be:	687b      	ldr	r3, [r7, #4]
}
 80024c0:	4618      	mov	r0, r3
 80024c2:	3718      	adds	r7, #24
 80024c4:	46bd      	mov	sp, r7
 80024c6:	bd80      	pop	{r7, pc}

080024c8 <_close>:

int _close(int file)
{
 80024c8:	b480      	push	{r7}
 80024ca:	b083      	sub	sp, #12
 80024cc:	af00      	add	r7, sp, #0
 80024ce:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80024d0:	f04f 33ff 	mov.w	r3, #4294967295
}
 80024d4:	4618      	mov	r0, r3
 80024d6:	370c      	adds	r7, #12
 80024d8:	46bd      	mov	sp, r7
 80024da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024de:	4770      	bx	lr

080024e0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80024e0:	b480      	push	{r7}
 80024e2:	b083      	sub	sp, #12
 80024e4:	af00      	add	r7, sp, #0
 80024e6:	6078      	str	r0, [r7, #4]
 80024e8:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80024ea:	683b      	ldr	r3, [r7, #0]
 80024ec:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80024f0:	605a      	str	r2, [r3, #4]
  return 0;
 80024f2:	2300      	movs	r3, #0
}
 80024f4:	4618      	mov	r0, r3
 80024f6:	370c      	adds	r7, #12
 80024f8:	46bd      	mov	sp, r7
 80024fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024fe:	4770      	bx	lr

08002500 <_isatty>:

int _isatty(int file)
{
 8002500:	b480      	push	{r7}
 8002502:	b083      	sub	sp, #12
 8002504:	af00      	add	r7, sp, #0
 8002506:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002508:	2301      	movs	r3, #1
}
 800250a:	4618      	mov	r0, r3
 800250c:	370c      	adds	r7, #12
 800250e:	46bd      	mov	sp, r7
 8002510:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002514:	4770      	bx	lr

08002516 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002516:	b480      	push	{r7}
 8002518:	b085      	sub	sp, #20
 800251a:	af00      	add	r7, sp, #0
 800251c:	60f8      	str	r0, [r7, #12]
 800251e:	60b9      	str	r1, [r7, #8]
 8002520:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002522:	2300      	movs	r3, #0
}
 8002524:	4618      	mov	r0, r3
 8002526:	3714      	adds	r7, #20
 8002528:	46bd      	mov	sp, r7
 800252a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800252e:	4770      	bx	lr

08002530 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002530:	b580      	push	{r7, lr}
 8002532:	b086      	sub	sp, #24
 8002534:	af00      	add	r7, sp, #0
 8002536:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002538:	4a14      	ldr	r2, [pc, #80]	@ (800258c <_sbrk+0x5c>)
 800253a:	4b15      	ldr	r3, [pc, #84]	@ (8002590 <_sbrk+0x60>)
 800253c:	1ad3      	subs	r3, r2, r3
 800253e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002540:	697b      	ldr	r3, [r7, #20]
 8002542:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002544:	4b13      	ldr	r3, [pc, #76]	@ (8002594 <_sbrk+0x64>)
 8002546:	681b      	ldr	r3, [r3, #0]
 8002548:	2b00      	cmp	r3, #0
 800254a:	d102      	bne.n	8002552 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800254c:	4b11      	ldr	r3, [pc, #68]	@ (8002594 <_sbrk+0x64>)
 800254e:	4a12      	ldr	r2, [pc, #72]	@ (8002598 <_sbrk+0x68>)
 8002550:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002552:	4b10      	ldr	r3, [pc, #64]	@ (8002594 <_sbrk+0x64>)
 8002554:	681a      	ldr	r2, [r3, #0]
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	4413      	add	r3, r2
 800255a:	693a      	ldr	r2, [r7, #16]
 800255c:	429a      	cmp	r2, r3
 800255e:	d207      	bcs.n	8002570 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002560:	f014 ff2c 	bl	80173bc <__errno>
 8002564:	4603      	mov	r3, r0
 8002566:	220c      	movs	r2, #12
 8002568:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800256a:	f04f 33ff 	mov.w	r3, #4294967295
 800256e:	e009      	b.n	8002584 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002570:	4b08      	ldr	r3, [pc, #32]	@ (8002594 <_sbrk+0x64>)
 8002572:	681b      	ldr	r3, [r3, #0]
 8002574:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002576:	4b07      	ldr	r3, [pc, #28]	@ (8002594 <_sbrk+0x64>)
 8002578:	681a      	ldr	r2, [r3, #0]
 800257a:	687b      	ldr	r3, [r7, #4]
 800257c:	4413      	add	r3, r2
 800257e:	4a05      	ldr	r2, [pc, #20]	@ (8002594 <_sbrk+0x64>)
 8002580:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002582:	68fb      	ldr	r3, [r7, #12]
}
 8002584:	4618      	mov	r0, r3
 8002586:	3718      	adds	r7, #24
 8002588:	46bd      	mov	sp, r7
 800258a:	bd80      	pop	{r7, pc}
 800258c:	24050000 	.word	0x24050000
 8002590:	00000400 	.word	0x00000400
 8002594:	2400453c 	.word	0x2400453c
 8002598:	24006278 	.word	0x24006278

0800259c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 800259c:	b480      	push	{r7}
 800259e:	af00      	add	r7, sp, #0
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 80025a0:	4b32      	ldr	r3, [pc, #200]	@ (800266c <SystemInit+0xd0>)
 80025a2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80025a6:	4a31      	ldr	r2, [pc, #196]	@ (800266c <SystemInit+0xd0>)
 80025a8:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80025ac:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/

   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80025b0:	4b2f      	ldr	r3, [pc, #188]	@ (8002670 <SystemInit+0xd4>)
 80025b2:	681b      	ldr	r3, [r3, #0]
 80025b4:	f003 030f 	and.w	r3, r3, #15
 80025b8:	2b06      	cmp	r3, #6
 80025ba:	d807      	bhi.n	80025cc <SystemInit+0x30>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 80025bc:	4b2c      	ldr	r3, [pc, #176]	@ (8002670 <SystemInit+0xd4>)
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	f023 030f 	bic.w	r3, r3, #15
 80025c4:	4a2a      	ldr	r2, [pc, #168]	@ (8002670 <SystemInit+0xd4>)
 80025c6:	f043 0307 	orr.w	r3, r3, #7
 80025ca:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 80025cc:	4b29      	ldr	r3, [pc, #164]	@ (8002674 <SystemInit+0xd8>)
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	4a28      	ldr	r2, [pc, #160]	@ (8002674 <SystemInit+0xd8>)
 80025d2:	f043 0301 	orr.w	r3, r3, #1
 80025d6:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 80025d8:	4b26      	ldr	r3, [pc, #152]	@ (8002674 <SystemInit+0xd8>)
 80025da:	2200      	movs	r2, #0
 80025dc:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 80025de:	4b25      	ldr	r3, [pc, #148]	@ (8002674 <SystemInit+0xd8>)
 80025e0:	681a      	ldr	r2, [r3, #0]
 80025e2:	4924      	ldr	r1, [pc, #144]	@ (8002674 <SystemInit+0xd8>)
 80025e4:	4b24      	ldr	r3, [pc, #144]	@ (8002678 <SystemInit+0xdc>)
 80025e6:	4013      	ands	r3, r2
 80025e8:	600b      	str	r3, [r1, #0]

   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80025ea:	4b21      	ldr	r3, [pc, #132]	@ (8002670 <SystemInit+0xd4>)
 80025ec:	681b      	ldr	r3, [r3, #0]
 80025ee:	f003 0308 	and.w	r3, r3, #8
 80025f2:	2b00      	cmp	r3, #0
 80025f4:	d007      	beq.n	8002606 <SystemInit+0x6a>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 80025f6:	4b1e      	ldr	r3, [pc, #120]	@ (8002670 <SystemInit+0xd4>)
 80025f8:	681b      	ldr	r3, [r3, #0]
 80025fa:	f023 030f 	bic.w	r3, r3, #15
 80025fe:	4a1c      	ldr	r2, [pc, #112]	@ (8002670 <SystemInit+0xd4>)
 8002600:	f043 0307 	orr.w	r3, r3, #7
 8002604:	6013      	str	r3, [r2, #0]
  }

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 8002606:	4b1b      	ldr	r3, [pc, #108]	@ (8002674 <SystemInit+0xd8>)
 8002608:	2200      	movs	r2, #0
 800260a:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
 800260c:	4b19      	ldr	r3, [pc, #100]	@ (8002674 <SystemInit+0xd8>)
 800260e:	2200      	movs	r2, #0
 8002610:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
 8002612:	4b18      	ldr	r3, [pc, #96]	@ (8002674 <SystemInit+0xd8>)
 8002614:	2200      	movs	r2, #0
 8002616:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 8002618:	4b16      	ldr	r3, [pc, #88]	@ (8002674 <SystemInit+0xd8>)
 800261a:	4a18      	ldr	r2, [pc, #96]	@ (800267c <SystemInit+0xe0>)
 800261c:	629a      	str	r2, [r3, #40]	@ 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 800261e:	4b15      	ldr	r3, [pc, #84]	@ (8002674 <SystemInit+0xd8>)
 8002620:	4a17      	ldr	r2, [pc, #92]	@ (8002680 <SystemInit+0xe4>)
 8002622:	62da      	str	r2, [r3, #44]	@ 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 8002624:	4b13      	ldr	r3, [pc, #76]	@ (8002674 <SystemInit+0xd8>)
 8002626:	4a17      	ldr	r2, [pc, #92]	@ (8002684 <SystemInit+0xe8>)
 8002628:	631a      	str	r2, [r3, #48]	@ 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 800262a:	4b12      	ldr	r3, [pc, #72]	@ (8002674 <SystemInit+0xd8>)
 800262c:	2200      	movs	r2, #0
 800262e:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 8002630:	4b10      	ldr	r3, [pc, #64]	@ (8002674 <SystemInit+0xd8>)
 8002632:	4a14      	ldr	r2, [pc, #80]	@ (8002684 <SystemInit+0xe8>)
 8002634:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 8002636:	4b0f      	ldr	r3, [pc, #60]	@ (8002674 <SystemInit+0xd8>)
 8002638:	2200      	movs	r2, #0
 800263a:	63da      	str	r2, [r3, #60]	@ 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 800263c:	4b0d      	ldr	r3, [pc, #52]	@ (8002674 <SystemInit+0xd8>)
 800263e:	4a11      	ldr	r2, [pc, #68]	@ (8002684 <SystemInit+0xe8>)
 8002640:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 8002642:	4b0c      	ldr	r3, [pc, #48]	@ (8002674 <SystemInit+0xd8>)
 8002644:	2200      	movs	r2, #0
 8002646:	645a      	str	r2, [r3, #68]	@ 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8002648:	4b0a      	ldr	r3, [pc, #40]	@ (8002674 <SystemInit+0xd8>)
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	4a09      	ldr	r2, [pc, #36]	@ (8002674 <SystemInit+0xd8>)
 800264e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002652:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 8002654:	4b07      	ldr	r3, [pc, #28]	@ (8002674 <SystemInit+0xd8>)
 8002656:	2200      	movs	r2, #0
 8002658:	661a      	str	r2, [r3, #96]	@ 0x60
  /*
   * Disable the FMC bank1 (enabled after reset).
   * This, prevents CPU speculation access on this bank which blocks the use of FMC during
   * 24us. During this time the others FMC master (such as LTDC) cannot use it!
   */
  FMC_Bank1_R->BTCR[0] = 0x000030D2;
 800265a:	4b0b      	ldr	r3, [pc, #44]	@ (8002688 <SystemInit+0xec>)
 800265c:	f243 02d2 	movw	r2, #12498	@ 0x30d2
 8002660:	601a      	str	r2, [r3, #0]
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM or in Internal FLASH */
#endif /* USER_VECT_TAB_ADDRESS */

#endif /*DUAL_CORE && CORE_CM4*/
}
 8002662:	bf00      	nop
 8002664:	46bd      	mov	sp, r7
 8002666:	f85d 7b04 	ldr.w	r7, [sp], #4
 800266a:	4770      	bx	lr
 800266c:	e000ed00 	.word	0xe000ed00
 8002670:	52002000 	.word	0x52002000
 8002674:	58024400 	.word	0x58024400
 8002678:	eaf6ed7f 	.word	0xeaf6ed7f
 800267c:	02020200 	.word	0x02020200
 8002680:	01ff0000 	.word	0x01ff0000
 8002684:	01010280 	.word	0x01010280
 8002688:	52004000 	.word	0x52004000

0800268c <VibeCheck_Init>:
void VibeCheck_Init(VibeCheck* vc,
		TIM_HandleTypeDef* htim_strobe,
		TIM_HandleTypeDef* htim_wavegen,
		DAC_HandleTypeDef* hdac_wavegen,
		TIM_HandleTypeDef* htim_rgb)
{
 800268c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800268e:	b0e3      	sub	sp, #396	@ 0x18c
 8002690:	af10      	add	r7, sp, #64	@ 0x40
 8002692:	f507 74a4 	add.w	r4, r7, #328	@ 0x148
 8002696:	f5a4 749a 	sub.w	r4, r4, #308	@ 0x134
 800269a:	6020      	str	r0, [r4, #0]
 800269c:	f507 70a4 	add.w	r0, r7, #328	@ 0x148
 80026a0:	f5a0 709c 	sub.w	r0, r0, #312	@ 0x138
 80026a4:	6001      	str	r1, [r0, #0]
 80026a6:	f507 71a4 	add.w	r1, r7, #328	@ 0x148
 80026aa:	f5a1 719e 	sub.w	r1, r1, #316	@ 0x13c
 80026ae:	600a      	str	r2, [r1, #0]
 80026b0:	f507 72a4 	add.w	r2, r7, #328	@ 0x148
 80026b4:	f5a2 72a0 	sub.w	r2, r2, #320	@ 0x140
 80026b8:	6013      	str	r3, [r2, #0]

	HAL_Delay(10);  /* wait for steady power so the RGB LEDs don't get into a weird state */
 80026ba:	200a      	movs	r0, #10
 80026bc:	f002 fe24 	bl	8005308 <HAL_Delay>

	VibeCheckShell_Init(&vc->shell);  /* the shell is linked to the USB middle-ware in usbd_cdc_if.c */
 80026c0:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80026c4:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80026c8:	681b      	ldr	r3, [r3, #0]
 80026ca:	4618      	mov	r0, r3
 80026cc:	f000 fec8 	bl	8003460 <VibeCheckShell_Init>

	VibeCheckShell_InputHandler strobe_cmd = {
 80026d0:	4ab7      	ldr	r2, [pc, #732]	@ (80029b0 <VibeCheck_Init+0x324>)
 80026d2:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 80026d6:	6810      	ldr	r0, [r2, #0]
 80026d8:	6018      	str	r0, [r3, #0]
 80026da:	8891      	ldrh	r1, [r2, #4]
 80026dc:	7992      	ldrb	r2, [r2, #6]
 80026de:	8099      	strh	r1, [r3, #4]
 80026e0:	719a      	strb	r2, [r3, #6]
 80026e2:	f207 1307 	addw	r3, r7, #263	@ 0x107
 80026e6:	2239      	movs	r2, #57	@ 0x39
 80026e8:	2100      	movs	r1, #0
 80026ea:	4618      	mov	r0, r3
 80026ec:	f014 fdf5 	bl	80172da <memset>
 80026f0:	4bb0      	ldr	r3, [pc, #704]	@ (80029b4 <VibeCheck_Init+0x328>)
 80026f2:	f8c7 3140 	str.w	r3, [r7, #320]	@ 0x140
			.name = "strobe",
			.execute = VibeCheckStrobeCMD_Execute,
			.obj = &vc->strobe
 80026f6:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80026fa:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80026fe:	681a      	ldr	r2, [r3, #0]
 8002700:	f242 4324 	movw	r3, #9252	@ 0x2424
 8002704:	4413      	add	r3, r2
	VibeCheckShell_InputHandler strobe_cmd = {
 8002706:	f8c7 3144 	str.w	r3, [r7, #324]	@ 0x144
	};

	VibeCheckShell_InputHandler wavegen_cmd = {
 800270a:	4aab      	ldr	r2, [pc, #684]	@ (80029b8 <VibeCheck_Init+0x32c>)
 800270c:	f107 03b8 	add.w	r3, r7, #184	@ 0xb8
 8002710:	6810      	ldr	r0, [r2, #0]
 8002712:	6851      	ldr	r1, [r2, #4]
 8002714:	c303      	stmia	r3!, {r0, r1}
 8002716:	f107 03c0 	add.w	r3, r7, #192	@ 0xc0
 800271a:	2238      	movs	r2, #56	@ 0x38
 800271c:	2100      	movs	r1, #0
 800271e:	4618      	mov	r0, r3
 8002720:	f014 fddb 	bl	80172da <memset>
 8002724:	4ba5      	ldr	r3, [pc, #660]	@ (80029bc <VibeCheck_Init+0x330>)
 8002726:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
			.name = "wavegen",
			.execute = VibeCheckWaveGenCMD_Execute,
			.obj = &vc->wavegen
 800272a:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 800272e:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8002732:	681a      	ldr	r2, [r3, #0]
 8002734:	f242 4344 	movw	r3, #9284	@ 0x2444
 8002738:	4413      	add	r3, r2
	VibeCheckShell_InputHandler wavegen_cmd = {
 800273a:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
	};

	VibeCheckShell_InputHandler rgb_cmd = {
 800273e:	4ba0      	ldr	r3, [pc, #640]	@ (80029c0 <VibeCheck_Init+0x334>)
 8002740:	673b      	str	r3, [r7, #112]	@ 0x70
 8002742:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 8002746:	223c      	movs	r2, #60	@ 0x3c
 8002748:	2100      	movs	r1, #0
 800274a:	4618      	mov	r0, r3
 800274c:	f014 fdc5 	bl	80172da <memset>
 8002750:	4b9c      	ldr	r3, [pc, #624]	@ (80029c4 <VibeCheck_Init+0x338>)
 8002752:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
			.name = "rgb",
			.execute = VibeCheckRGBCMD_Execute,
			.obj = &vc->rgb
 8002756:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 800275a:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 800275e:	681a      	ldr	r2, [r3, #0]
 8002760:	f243 4390 	movw	r3, #13456	@ 0x3490
 8002764:	4413      	add	r3, r2
	VibeCheckShell_InputHandler rgb_cmd = {
 8002766:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
	};

	VibeCheckShell_InputHandler accel_cmd = {
 800276a:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 800276e:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 8002772:	4995      	ldr	r1, [pc, #596]	@ (80029c8 <VibeCheck_Init+0x33c>)
 8002774:	461a      	mov	r2, r3
 8002776:	6808      	ldr	r0, [r1, #0]
 8002778:	6010      	str	r0, [r2, #0]
 800277a:	8889      	ldrh	r1, [r1, #4]
 800277c:	8091      	strh	r1, [r2, #4]
 800277e:	3306      	adds	r3, #6
 8002780:	223a      	movs	r2, #58	@ 0x3a
 8002782:	2100      	movs	r1, #0
 8002784:	4618      	mov	r0, r3
 8002786:	f014 fda8 	bl	80172da <memset>
 800278a:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 800278e:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 8002792:	4a8e      	ldr	r2, [pc, #568]	@ (80029cc <VibeCheck_Init+0x340>)
 8002794:	641a      	str	r2, [r3, #64]	@ 0x40
			.name = "accel",
			.execute = VibeCheckAccelCMD_Execute,
			.obj = &vc->accel
 8002796:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 800279a:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 800279e:	681a      	ldr	r2, [r3, #0]
 80027a0:	f643 2310 	movw	r3, #14864	@ 0x3a10
 80027a4:	4413      	add	r3, r2
	VibeCheckShell_InputHandler accel_cmd = {
 80027a6:	f507 72a4 	add.w	r2, r7, #328	@ 0x148
 80027aa:	f5a2 7290 	sub.w	r2, r2, #288	@ 0x120
 80027ae:	6453      	str	r3, [r2, #68]	@ 0x44
	};

	VibeCheckShell_RegisterInputHandler(&vc->shell, strobe_cmd);
 80027b0:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80027b4:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80027b8:	681e      	ldr	r6, [r3, #0]
 80027ba:	466d      	mov	r5, sp
 80027bc:	f507 7486 	add.w	r4, r7, #268	@ 0x10c
 80027c0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80027c2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80027c4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80027c6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80027c8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80027ca:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80027cc:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80027d0:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 80027d4:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 80027d8:	cb0e      	ldmia	r3, {r1, r2, r3}
 80027da:	4630      	mov	r0, r6
 80027dc:	f000 ff6e 	bl	80036bc <VibeCheckShell_RegisterInputHandler>
	VibeCheckShell_RegisterInputHandler(&vc->shell, wavegen_cmd);
 80027e0:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80027e4:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80027e8:	681e      	ldr	r6, [r3, #0]
 80027ea:	466d      	mov	r5, sp
 80027ec:	f107 04c4 	add.w	r4, r7, #196	@ 0xc4
 80027f0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80027f2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80027f4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80027f6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80027f8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80027fa:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80027fc:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8002800:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8002804:	f107 03b8 	add.w	r3, r7, #184	@ 0xb8
 8002808:	cb0e      	ldmia	r3, {r1, r2, r3}
 800280a:	4630      	mov	r0, r6
 800280c:	f000 ff56 	bl	80036bc <VibeCheckShell_RegisterInputHandler>
	VibeCheckShell_RegisterInputHandler(&vc->shell, rgb_cmd);
 8002810:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002814:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8002818:	681e      	ldr	r6, [r3, #0]
 800281a:	466d      	mov	r5, sp
 800281c:	f107 047c 	add.w	r4, r7, #124	@ 0x7c
 8002820:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002822:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002824:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002826:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002828:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800282a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800282c:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8002830:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8002834:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 8002838:	cb0e      	ldmia	r3, {r1, r2, r3}
 800283a:	4630      	mov	r0, r6
 800283c:	f000 ff3e 	bl	80036bc <VibeCheckShell_RegisterInputHandler>
	VibeCheckShell_RegisterInputHandler(&vc->shell, accel_cmd);
 8002840:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002844:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8002848:	681b      	ldr	r3, [r3, #0]
 800284a:	607b      	str	r3, [r7, #4]
 800284c:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002850:	f5a3 7690 	sub.w	r6, r3, #288	@ 0x120
 8002854:	466d      	mov	r5, sp
 8002856:	f106 040c 	add.w	r4, r6, #12
 800285a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800285c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800285e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002860:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002862:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002864:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002866:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800286a:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800286e:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
 8002872:	6878      	ldr	r0, [r7, #4]
 8002874:	f000 ff22 	bl	80036bc <VibeCheckShell_RegisterInputHandler>

	VibeCheckShell_OutputHandler wavegen_sender = {
 8002878:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 800287c:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 8002880:	4a53      	ldr	r2, [pc, #332]	@ (80029d0 <VibeCheck_Init+0x344>)
 8002882:	601a      	str	r2, [r3, #0]
			.execute = VibeCheckWaveGenSender_Execute,
			.obj = &vc->wavegen
 8002884:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002888:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 800288c:	681a      	ldr	r2, [r3, #0]
 800288e:	f242 4344 	movw	r3, #9284	@ 0x2444
 8002892:	4413      	add	r3, r2
	VibeCheckShell_OutputHandler wavegen_sender = {
 8002894:	f507 72a4 	add.w	r2, r7, #328	@ 0x148
 8002898:	f5a2 7294 	sub.w	r2, r2, #296	@ 0x128
 800289c:	6053      	str	r3, [r2, #4]
	};

	VibeCheckShell_OutputHandler accel_sender = {
 800289e:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80028a2:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 80028a6:	4a4b      	ldr	r2, [pc, #300]	@ (80029d4 <VibeCheck_Init+0x348>)
 80028a8:	601a      	str	r2, [r3, #0]
			.execute = VibeCheckAccelSender_Execute,
			.obj = &vc->accel
 80028aa:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80028ae:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80028b2:	681a      	ldr	r2, [r3, #0]
 80028b4:	f643 2310 	movw	r3, #14864	@ 0x3a10
 80028b8:	4413      	add	r3, r2
	VibeCheckShell_OutputHandler accel_sender = {
 80028ba:	f507 72a4 	add.w	r2, r7, #328	@ 0x148
 80028be:	f5a2 7298 	sub.w	r2, r2, #304	@ 0x130
 80028c2:	6053      	str	r3, [r2, #4]
	};

	VibeCheckShell_RegisterOutputHandler(&vc->shell, wavegen_sender);
 80028c4:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80028c8:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80028cc:	6818      	ldr	r0, [r3, #0]
 80028ce:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80028d2:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 80028d6:	e893 0006 	ldmia.w	r3, {r1, r2}
 80028da:	f000 ff21 	bl	8003720 <VibeCheckShell_RegisterOutputHandler>
	VibeCheckShell_RegisterOutputHandler(&vc->shell, accel_sender);
 80028de:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80028e2:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80028e6:	6818      	ldr	r0, [r3, #0]
 80028e8:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80028ec:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 80028f0:	e893 0006 	ldmia.w	r3, {r1, r2}
 80028f4:	f000 ff14 	bl	8003720 <VibeCheckShell_RegisterOutputHandler>

	VibeCheckStrobe_Init(&vc->strobe, htim_strobe);
 80028f8:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 80028fc:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8002900:	681a      	ldr	r2, [r3, #0]
 8002902:	f242 4324 	movw	r3, #9252	@ 0x2424
 8002906:	4413      	add	r3, r2
 8002908:	f507 72a4 	add.w	r2, r7, #328	@ 0x148
 800290c:	f5a2 729c 	sub.w	r2, r2, #312	@ 0x138
 8002910:	6811      	ldr	r1, [r2, #0]
 8002912:	4618      	mov	r0, r3
 8002914:	f001 f982 	bl	8003c1c <VibeCheckStrobe_Init>
	VibeCheckWaveGen_Init(&vc->wavegen, hdac_wavegen, htim_wavegen);
 8002918:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 800291c:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8002920:	681a      	ldr	r2, [r3, #0]
 8002922:	f242 4344 	movw	r3, #9284	@ 0x2444
 8002926:	4413      	add	r3, r2
 8002928:	f507 72a4 	add.w	r2, r7, #328	@ 0x148
 800292c:	f5a2 729e 	sub.w	r2, r2, #316	@ 0x13c
 8002930:	f507 71a4 	add.w	r1, r7, #328	@ 0x148
 8002934:	f5a1 71a0 	sub.w	r1, r1, #320	@ 0x140
 8002938:	6812      	ldr	r2, [r2, #0]
 800293a:	6809      	ldr	r1, [r1, #0]
 800293c:	4618      	mov	r0, r3
 800293e:	f001 febd 	bl	80046bc <VibeCheckWaveGen_Init>
	VibeCheckRGB_Init(&vc->rgb, htim_rgb);
 8002942:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002946:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 800294a:	681a      	ldr	r2, [r3, #0]
 800294c:	f243 4390 	movw	r3, #13456	@ 0x3490
 8002950:	4413      	add	r3, r2
 8002952:	f8d7 1160 	ldr.w	r1, [r7, #352]	@ 0x160
 8002956:	4618      	mov	r0, r3
 8002958:	f000 fa82 	bl	8002e60 <VibeCheckRGB_Init>
	VibeCheckRGB_SetBaseSequence(&vc->rgb, base_sequence_times, base_sequence_colors, base_sequence_len);
 800295c:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002960:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8002964:	681b      	ldr	r3, [r3, #0]
 8002966:	f243 4090 	movw	r0, #13456	@ 0x3490
 800296a:	4418      	add	r0, r3
 800296c:	2310      	movs	r3, #16
 800296e:	4a1a      	ldr	r2, [pc, #104]	@ (80029d8 <VibeCheck_Init+0x34c>)
 8002970:	491a      	ldr	r1, [pc, #104]	@ (80029dc <VibeCheck_Init+0x350>)
 8002972:	f000 fb28 	bl	8002fc6 <VibeCheckRGB_SetBaseSequence>
	VibeCheckRGB_SetTopSequence(&vc->rgb, top_sequence_times, top_sequence_colors, top_sequence_len);
 8002976:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 800297a:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	f243 4090 	movw	r0, #13456	@ 0x3490
 8002984:	4418      	add	r0, r3
 8002986:	2304      	movs	r3, #4
 8002988:	4a15      	ldr	r2, [pc, #84]	@ (80029e0 <VibeCheck_Init+0x354>)
 800298a:	4916      	ldr	r1, [pc, #88]	@ (80029e4 <VibeCheck_Init+0x358>)
 800298c:	f000 fb52 	bl	8003034 <VibeCheckRGB_SetTopSequence>
	VibeCheckAccel_Init(&vc->accel);
 8002990:	f507 73a4 	add.w	r3, r7, #328	@ 0x148
 8002994:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8002998:	681a      	ldr	r2, [r3, #0]
 800299a:	f643 2310 	movw	r3, #14864	@ 0x3a10
 800299e:	4413      	add	r3, r2
 80029a0:	4618      	mov	r0, r3
 80029a2:	f000 f85a 	bl	8002a5a <VibeCheckAccel_Init>
}
 80029a6:	bf00      	nop
 80029a8:	f507 77a6 	add.w	r7, r7, #332	@ 0x14c
 80029ac:	46bd      	mov	sp, r7
 80029ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80029b0:	0801aa28 	.word	0x0801aa28
 80029b4:	080041bd 	.word	0x080041bd
 80029b8:	0801aa30 	.word	0x0801aa30
 80029bc:	08004fbd 	.word	0x08004fbd
 80029c0:	00626772 	.word	0x00626772
 80029c4:	08003299 	.word	0x08003299
 80029c8:	0801aa38 	.word	0x0801aa38
 80029cc:	08002cdd 	.word	0x08002cdd
 80029d0:	08005119 	.word	0x08005119
 80029d4:	08002d95 	.word	0x08002d95
 80029d8:	0801ac74 	.word	0x0801ac74
 80029dc:	0801ac34 	.word	0x0801ac34
 80029e0:	0801abc8 	.word	0x0801abc8
 80029e4:	0801abb8 	.word	0x0801abb8

080029e8 <VibeCheck_Loop>:

void VibeCheck_Loop(VibeCheck* vc)
{
 80029e8:	b580      	push	{r7, lr}
 80029ea:	b086      	sub	sp, #24
 80029ec:	af00      	add	r7, sp, #0
 80029ee:	6078      	str	r0, [r7, #4]
	VibeCheckWaveGen_Update(&vc->wavegen);
 80029f0:	687a      	ldr	r2, [r7, #4]
 80029f2:	f242 4344 	movw	r3, #9284	@ 0x2444
 80029f6:	4413      	add	r3, r2
 80029f8:	4618      	mov	r0, r3
 80029fa:	f001 feff 	bl	80047fc <VibeCheckWaveGen_Update>
	VibeCheckRGB_Update(&vc->rgb);
 80029fe:	687a      	ldr	r2, [r7, #4]
 8002a00:	f243 4390 	movw	r3, #13456	@ 0x3490
 8002a04:	4413      	add	r3, r2
 8002a06:	4618      	mov	r0, r3
 8002a08:	f000 fa60 	bl	8002ecc <VibeCheckRGB_Update>
	VibeCheckAccel_Update(&vc->accel);
 8002a0c:	687a      	ldr	r2, [r7, #4]
 8002a0e:	f643 2310 	movw	r3, #14864	@ 0x3a10
 8002a12:	4413      	add	r3, r2
 8002a14:	4618      	mov	r0, r3
 8002a16:	f000 f83b 	bl	8002a90 <VibeCheckAccel_Update>

	VibeCheckShell_Status shell_status = VibeCheckShell_Update(&vc->shell);
 8002a1a:	687b      	ldr	r3, [r7, #4]
 8002a1c:	4618      	mov	r0, r3
 8002a1e:	f000 fd59 	bl	80034d4 <VibeCheckShell_Update>
 8002a22:	4603      	mov	r3, r0
 8002a24:	617b      	str	r3, [r7, #20]

	char* usb_tx;
	uint32_t usb_tx_len;
	if (VibeCheckShell_GetOutput(&vc->shell, &usb_tx, &usb_tx_len))
 8002a26:	687b      	ldr	r3, [r7, #4]
 8002a28:	f107 020c 	add.w	r2, r7, #12
 8002a2c:	f107 0110 	add.w	r1, r7, #16
 8002a30:	4618      	mov	r0, r3
 8002a32:	f000 feeb 	bl	800380c <VibeCheckShell_GetOutput>
 8002a36:	4603      	mov	r3, r0
 8002a38:	2b00      	cmp	r3, #0
 8002a3a:	d00a      	beq.n	8002a52 <VibeCheck_Loop+0x6a>
		while (CDC_Transmit_HS((uint8_t*)usb_tx, usb_tx_len) != USBD_OK);  /* block until the USB transmission starts to make sure we send all data */
 8002a3c:	bf00      	nop
 8002a3e:	693b      	ldr	r3, [r7, #16]
 8002a40:	68fa      	ldr	r2, [r7, #12]
 8002a42:	b292      	uxth	r2, r2
 8002a44:	4611      	mov	r1, r2
 8002a46:	4618      	mov	r0, r3
 8002a48:	f012 fc4e 	bl	80152e8 <CDC_Transmit_HS>
 8002a4c:	4603      	mov	r3, r0
 8002a4e:	2b00      	cmp	r3, #0
 8002a50:	d1f5      	bne.n	8002a3e <VibeCheck_Loop+0x56>
}
 8002a52:	bf00      	nop
 8002a54:	3718      	adds	r7, #24
 8002a56:	46bd      	mov	sp, r7
 8002a58:	bd80      	pop	{r7, pc}

08002a5a <VibeCheckAccel_Init>:
 */

#include "vibecheck_accel.h"

void VibeCheckAccel_Init(VibeCheckAccel* accel)
{
 8002a5a:	b480      	push	{r7}
 8002a5c:	b083      	sub	sp, #12
 8002a5e:	af00      	add	r7, sp, #0
 8002a60:	6078      	str	r0, [r7, #4]
	accel->data_ind = 0;
 8002a62:	687b      	ldr	r3, [r7, #4]
 8002a64:	2200      	movs	r2, #0
 8002a66:	f8c3 2190 	str.w	r2, [r3, #400]	@ 0x190
	accel->data_ready = 0;
 8002a6a:	687b      	ldr	r3, [r7, #4]
 8002a6c:	2200      	movs	r2, #0
 8002a6e:	f8c3 2194 	str.w	r2, [r3, #404]	@ 0x194
	accel->time_prev_update = 0;
 8002a72:	687b      	ldr	r3, [r7, #4]
 8002a74:	2200      	movs	r2, #0
 8002a76:	f8c3 2198 	str.w	r2, [r3, #408]	@ 0x198
	accel->generate_fake_data = 0;
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	2200      	movs	r2, #0
 8002a7e:	f8c3 219c 	str.w	r2, [r3, #412]	@ 0x19c
}
 8002a82:	bf00      	nop
 8002a84:	370c      	adds	r7, #12
 8002a86:	46bd      	mov	sp, r7
 8002a88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a8c:	4770      	bx	lr
	...

08002a90 <VibeCheckAccel_Update>:

void VibeCheckAccel_Update(VibeCheckAccel* accel)
{
 8002a90:	b580      	push	{r7, lr}
 8002a92:	b086      	sub	sp, #24
 8002a94:	af00      	add	r7, sp, #0
 8002a96:	6078      	str	r0, [r7, #4]
	uint32_t time = HAL_GetTick();
 8002a98:	f002 fc2a 	bl	80052f0 <HAL_GetTick>
 8002a9c:	6178      	str	r0, [r7, #20]
	if (time - accel->time_prev_update > VC_ACCEL_UPDATE_INTERVAL_MS)
 8002a9e:	687b      	ldr	r3, [r7, #4]
 8002aa0:	f8d3 3198 	ldr.w	r3, [r3, #408]	@ 0x198
 8002aa4:	697a      	ldr	r2, [r7, #20]
 8002aa6:	1ad3      	subs	r3, r2, r3
 8002aa8:	2b0a      	cmp	r3, #10
 8002aaa:	d95e      	bls.n	8002b6a <VibeCheckAccel_Update+0xda>
	{
		/* TODO: check if accelerometers have been plugged/unplugged */

		if (accel->generate_fake_data)
 8002aac:	687b      	ldr	r3, [r7, #4]
 8002aae:	f8d3 319c 	ldr.w	r3, [r3, #412]	@ 0x19c
 8002ab2:	2b00      	cmp	r3, #0
 8002ab4:	d055      	beq.n	8002b62 <VibeCheckAccel_Update+0xd2>
		{
			float val1 = sinf(2.0f * 3.14159f * time);
 8002ab6:	697b      	ldr	r3, [r7, #20]
 8002ab8:	ee07 3a90 	vmov	s15, r3
 8002abc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002ac0:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8002b74 <VibeCheckAccel_Update+0xe4>
 8002ac4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002ac8:	eeb0 0a67 	vmov.f32	s0, s15
 8002acc:	f017 f968 	bl	8019da0 <sinf>
 8002ad0:	ed87 0a04 	vstr	s0, [r7, #16]
			float val2 = sinf(2.0f * 3.14159f * time + 3.14159f / 3.0f);
 8002ad4:	697b      	ldr	r3, [r7, #20]
 8002ad6:	ee07 3a90 	vmov	s15, r3
 8002ada:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002ade:	ed9f 7a25 	vldr	s14, [pc, #148]	@ 8002b74 <VibeCheckAccel_Update+0xe4>
 8002ae2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002ae6:	ed9f 7a24 	vldr	s14, [pc, #144]	@ 8002b78 <VibeCheckAccel_Update+0xe8>
 8002aea:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002aee:	eeb0 0a67 	vmov.f32	s0, s15
 8002af2:	f017 f955 	bl	8019da0 <sinf>
 8002af6:	ed87 0a03 	vstr	s0, [r7, #12]
			float val3 = sinf(2.0f * 3.14159f * time + 2.0f * 3.14159f / 3.0f);
 8002afa:	697b      	ldr	r3, [r7, #20]
 8002afc:	ee07 3a90 	vmov	s15, r3
 8002b00:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002b04:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 8002b74 <VibeCheckAccel_Update+0xe4>
 8002b08:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002b0c:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 8002b7c <VibeCheckAccel_Update+0xec>
 8002b10:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002b14:	eeb0 0a67 	vmov.f32	s0, s15
 8002b18:	f017 f942 	bl	8019da0 <sinf>
 8002b1c:	ed87 0a02 	vstr	s0, [r7, #8]

			VibeCheckAccel_AddData(accel, 1, time, val1, val2, val3);
 8002b20:	ed97 1a02 	vldr	s2, [r7, #8]
 8002b24:	edd7 0a03 	vldr	s1, [r7, #12]
 8002b28:	ed97 0a04 	vldr	s0, [r7, #16]
 8002b2c:	697a      	ldr	r2, [r7, #20]
 8002b2e:	2101      	movs	r1, #1
 8002b30:	6878      	ldr	r0, [r7, #4]
 8002b32:	f000 f825 	bl	8002b80 <VibeCheckAccel_AddData>
			VibeCheckAccel_AddData(accel, 2, time, val3, val1, val2);
 8002b36:	ed97 1a03 	vldr	s2, [r7, #12]
 8002b3a:	edd7 0a04 	vldr	s1, [r7, #16]
 8002b3e:	ed97 0a02 	vldr	s0, [r7, #8]
 8002b42:	697a      	ldr	r2, [r7, #20]
 8002b44:	2102      	movs	r1, #2
 8002b46:	6878      	ldr	r0, [r7, #4]
 8002b48:	f000 f81a 	bl	8002b80 <VibeCheckAccel_AddData>
			VibeCheckAccel_AddData(accel, 3, time, val2, val3, val1);
 8002b4c:	ed97 1a04 	vldr	s2, [r7, #16]
 8002b50:	edd7 0a02 	vldr	s1, [r7, #8]
 8002b54:	ed97 0a03 	vldr	s0, [r7, #12]
 8002b58:	697a      	ldr	r2, [r7, #20]
 8002b5a:	2103      	movs	r1, #3
 8002b5c:	6878      	ldr	r0, [r7, #4]
 8002b5e:	f000 f80f 	bl	8002b80 <VibeCheckAccel_AddData>
		}

		accel->time_prev_update = time;
 8002b62:	687b      	ldr	r3, [r7, #4]
 8002b64:	697a      	ldr	r2, [r7, #20]
 8002b66:	f8c3 2198 	str.w	r2, [r3, #408]	@ 0x198
	}
}
 8002b6a:	bf00      	nop
 8002b6c:	3718      	adds	r7, #24
 8002b6e:	46bd      	mov	sp, r7
 8002b70:	bd80      	pop	{r7, pc}
 8002b72:	bf00      	nop
 8002b74:	40c90fd0 	.word	0x40c90fd0
 8002b78:	3f860a8b 	.word	0x3f860a8b
 8002b7c:	40060a8b 	.word	0x40060a8b

08002b80 <VibeCheckAccel_AddData>:

void VibeCheckAccel_AddData(VibeCheckAccel* accel, uint8_t id, uint32_t time, float x, float y, float z)
{
 8002b80:	b480      	push	{r7}
 8002b82:	b087      	sub	sp, #28
 8002b84:	af00      	add	r7, sp, #0
 8002b86:	6178      	str	r0, [r7, #20]
 8002b88:	460b      	mov	r3, r1
 8002b8a:	60fa      	str	r2, [r7, #12]
 8002b8c:	ed87 0a02 	vstr	s0, [r7, #8]
 8002b90:	edc7 0a01 	vstr	s1, [r7, #4]
 8002b94:	ed87 1a00 	vstr	s2, [r7]
 8002b98:	74fb      	strb	r3, [r7, #19]
	accel->data[accel->data_ind].id = id;
 8002b9a:	697b      	ldr	r3, [r7, #20]
 8002b9c:	f8d3 2190 	ldr.w	r2, [r3, #400]	@ 0x190
 8002ba0:	6979      	ldr	r1, [r7, #20]
 8002ba2:	4613      	mov	r3, r2
 8002ba4:	009b      	lsls	r3, r3, #2
 8002ba6:	4413      	add	r3, r2
 8002ba8:	009b      	lsls	r3, r3, #2
 8002baa:	440b      	add	r3, r1
 8002bac:	7cfa      	ldrb	r2, [r7, #19]
 8002bae:	701a      	strb	r2, [r3, #0]
	accel->data[accel->data_ind].time = time;
 8002bb0:	697b      	ldr	r3, [r7, #20]
 8002bb2:	f8d3 2190 	ldr.w	r2, [r3, #400]	@ 0x190
 8002bb6:	6979      	ldr	r1, [r7, #20]
 8002bb8:	4613      	mov	r3, r2
 8002bba:	009b      	lsls	r3, r3, #2
 8002bbc:	4413      	add	r3, r2
 8002bbe:	009b      	lsls	r3, r3, #2
 8002bc0:	440b      	add	r3, r1
 8002bc2:	3304      	adds	r3, #4
 8002bc4:	68fa      	ldr	r2, [r7, #12]
 8002bc6:	601a      	str	r2, [r3, #0]
	accel->data[accel->data_ind].x = x;
 8002bc8:	697b      	ldr	r3, [r7, #20]
 8002bca:	f8d3 2190 	ldr.w	r2, [r3, #400]	@ 0x190
 8002bce:	6979      	ldr	r1, [r7, #20]
 8002bd0:	4613      	mov	r3, r2
 8002bd2:	009b      	lsls	r3, r3, #2
 8002bd4:	4413      	add	r3, r2
 8002bd6:	009b      	lsls	r3, r3, #2
 8002bd8:	440b      	add	r3, r1
 8002bda:	3308      	adds	r3, #8
 8002bdc:	68ba      	ldr	r2, [r7, #8]
 8002bde:	601a      	str	r2, [r3, #0]
	accel->data[accel->data_ind].y = y;
 8002be0:	697b      	ldr	r3, [r7, #20]
 8002be2:	f8d3 2190 	ldr.w	r2, [r3, #400]	@ 0x190
 8002be6:	6979      	ldr	r1, [r7, #20]
 8002be8:	4613      	mov	r3, r2
 8002bea:	009b      	lsls	r3, r3, #2
 8002bec:	4413      	add	r3, r2
 8002bee:	009b      	lsls	r3, r3, #2
 8002bf0:	440b      	add	r3, r1
 8002bf2:	330c      	adds	r3, #12
 8002bf4:	687a      	ldr	r2, [r7, #4]
 8002bf6:	601a      	str	r2, [r3, #0]
	accel->data[accel->data_ind].z = z;
 8002bf8:	697b      	ldr	r3, [r7, #20]
 8002bfa:	f8d3 2190 	ldr.w	r2, [r3, #400]	@ 0x190
 8002bfe:	6979      	ldr	r1, [r7, #20]
 8002c00:	4613      	mov	r3, r2
 8002c02:	009b      	lsls	r3, r3, #2
 8002c04:	4413      	add	r3, r2
 8002c06:	009b      	lsls	r3, r3, #2
 8002c08:	440b      	add	r3, r1
 8002c0a:	3310      	adds	r3, #16
 8002c0c:	683a      	ldr	r2, [r7, #0]
 8002c0e:	601a      	str	r2, [r3, #0]

	accel->data_ind++;
 8002c10:	697b      	ldr	r3, [r7, #20]
 8002c12:	f8d3 3190 	ldr.w	r3, [r3, #400]	@ 0x190
 8002c16:	1c5a      	adds	r2, r3, #1
 8002c18:	697b      	ldr	r3, [r7, #20]
 8002c1a:	f8c3 2190 	str.w	r2, [r3, #400]	@ 0x190
	if (accel->data_ind == VC_ACCEL_DATA_PER_PACKET)
 8002c1e:	697b      	ldr	r3, [r7, #20]
 8002c20:	f8d3 3190 	ldr.w	r3, [r3, #400]	@ 0x190
 8002c24:	2b0a      	cmp	r3, #10
 8002c26:	d104      	bne.n	8002c32 <VibeCheckAccel_AddData+0xb2>
	{
		accel->data_ready = 1;
 8002c28:	697b      	ldr	r3, [r7, #20]
 8002c2a:	2201      	movs	r2, #1
 8002c2c:	f8c3 2194 	str.w	r2, [r3, #404]	@ 0x194
	else if (accel->data_ind == 2 * VC_ACCEL_DATA_PER_PACKET)
	{
		accel->data_ind = 0;
		accel->data_ready = 1;
	}
}
 8002c30:	e00c      	b.n	8002c4c <VibeCheckAccel_AddData+0xcc>
	else if (accel->data_ind == 2 * VC_ACCEL_DATA_PER_PACKET)
 8002c32:	697b      	ldr	r3, [r7, #20]
 8002c34:	f8d3 3190 	ldr.w	r3, [r3, #400]	@ 0x190
 8002c38:	2b14      	cmp	r3, #20
 8002c3a:	d107      	bne.n	8002c4c <VibeCheckAccel_AddData+0xcc>
		accel->data_ind = 0;
 8002c3c:	697b      	ldr	r3, [r7, #20]
 8002c3e:	2200      	movs	r2, #0
 8002c40:	f8c3 2190 	str.w	r2, [r3, #400]	@ 0x190
		accel->data_ready = 1;
 8002c44:	697b      	ldr	r3, [r7, #20]
 8002c46:	2201      	movs	r2, #1
 8002c48:	f8c3 2194 	str.w	r2, [r3, #404]	@ 0x194
}
 8002c4c:	bf00      	nop
 8002c4e:	371c      	adds	r7, #28
 8002c50:	46bd      	mov	sp, r7
 8002c52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c56:	4770      	bx	lr

08002c58 <VibeCheckAccel_StartFakeData>:

void VibeCheckAccel_StartFakeData(VibeCheckAccel* accel)
{
 8002c58:	b480      	push	{r7}
 8002c5a:	b083      	sub	sp, #12
 8002c5c:	af00      	add	r7, sp, #0
 8002c5e:	6078      	str	r0, [r7, #4]
	accel->generate_fake_data = 1;
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	2201      	movs	r2, #1
 8002c64:	f8c3 219c 	str.w	r2, [r3, #412]	@ 0x19c
}
 8002c68:	bf00      	nop
 8002c6a:	370c      	adds	r7, #12
 8002c6c:	46bd      	mov	sp, r7
 8002c6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c72:	4770      	bx	lr

08002c74 <VibeCheckAccel_StopFakeData>:

void VibeCheckAccel_StopFakeData(VibeCheckAccel* accel)
{
 8002c74:	b480      	push	{r7}
 8002c76:	b083      	sub	sp, #12
 8002c78:	af00      	add	r7, sp, #0
 8002c7a:	6078      	str	r0, [r7, #4]
	accel->generate_fake_data = 0;
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	2200      	movs	r2, #0
 8002c80:	f8c3 219c 	str.w	r2, [r3, #412]	@ 0x19c
}
 8002c84:	bf00      	nop
 8002c86:	370c      	adds	r7, #12
 8002c88:	46bd      	mov	sp, r7
 8002c8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c8e:	4770      	bx	lr

08002c90 <VibeCheckAccel_GetDataReady>:

uint32_t VibeCheckAccel_GetDataReady(VibeCheckAccel* accel, VibeCheckAccel_Data** data)
{
 8002c90:	b480      	push	{r7}
 8002c92:	b083      	sub	sp, #12
 8002c94:	af00      	add	r7, sp, #0
 8002c96:	6078      	str	r0, [r7, #4]
 8002c98:	6039      	str	r1, [r7, #0]
	if (accel->data_ready)
 8002c9a:	687b      	ldr	r3, [r7, #4]
 8002c9c:	f8d3 3194 	ldr.w	r3, [r3, #404]	@ 0x194
 8002ca0:	2b00      	cmp	r3, #0
 8002ca2:	d013      	beq.n	8002ccc <VibeCheckAccel_GetDataReady+0x3c>
	{
		accel->data_ready = 0;
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	2200      	movs	r2, #0
 8002ca8:	f8c3 2194 	str.w	r2, [r3, #404]	@ 0x194
		if (accel->data_ind < VC_ACCEL_DATA_PER_PACKET)
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	f8d3 3190 	ldr.w	r3, [r3, #400]	@ 0x190
 8002cb2:	2b09      	cmp	r3, #9
 8002cb4:	d805      	bhi.n	8002cc2 <VibeCheckAccel_GetDataReady+0x32>
		{
			/* ready to send the second half */
			*data = &accel->data[VC_ACCEL_DATA_PER_PACKET];
 8002cb6:	687b      	ldr	r3, [r7, #4]
 8002cb8:	f103 02c8 	add.w	r2, r3, #200	@ 0xc8
 8002cbc:	683b      	ldr	r3, [r7, #0]
 8002cbe:	601a      	str	r2, [r3, #0]
 8002cc0:	e002      	b.n	8002cc8 <VibeCheckAccel_GetDataReady+0x38>
		}
		else
		{
			/* ready to send the first half */
			*data = &accel->data[0];
 8002cc2:	687a      	ldr	r2, [r7, #4]
 8002cc4:	683b      	ldr	r3, [r7, #0]
 8002cc6:	601a      	str	r2, [r3, #0]
		}
		return 1;
 8002cc8:	2301      	movs	r3, #1
 8002cca:	e000      	b.n	8002cce <VibeCheckAccel_GetDataReady+0x3e>
	}
	return 0;
 8002ccc:	2300      	movs	r3, #0
}
 8002cce:	4618      	mov	r0, r3
 8002cd0:	370c      	adds	r7, #12
 8002cd2:	46bd      	mov	sp, r7
 8002cd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cd8:	4770      	bx	lr
	...

08002cdc <VibeCheckAccelCMD_Execute>:
 */

#include "vibecheck_accel_handler.h"

uint32_t VibeCheckAccelCMD_Execute(void* obj, VibeCheckShell* shell)
{
 8002cdc:	b580      	push	{r7, lr}
 8002cde:	b094      	sub	sp, #80	@ 0x50
 8002ce0:	af00      	add	r7, sp, #0
 8002ce2:	6078      	str	r0, [r7, #4]
 8002ce4:	6039      	str	r1, [r7, #0]
	VibeCheckAccel* accel = (VibeCheckAccel*)obj;
 8002ce6:	687b      	ldr	r3, [r7, #4]
 8002ce8:	64fb      	str	r3, [r7, #76]	@ 0x4c

	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8002cea:	f107 030c 	add.w	r3, r7, #12
 8002cee:	2240      	movs	r2, #64	@ 0x40
 8002cf0:	4619      	mov	r1, r3
 8002cf2:	6838      	ldr	r0, [r7, #0]
 8002cf4:	f000 fe06 	bl	8003904 <VibeCheckShell_GetNextString>
 8002cf8:	4603      	mov	r3, r0
 8002cfa:	2b00      	cmp	r3, #0
 8002cfc:	d03c      	beq.n	8002d78 <VibeCheckAccelCMD_Execute+0x9c>
	{
		if (!strcmp(str, "fakedata"))
 8002cfe:	f107 030c 	add.w	r3, r7, #12
 8002d02:	4920      	ldr	r1, [pc, #128]	@ (8002d84 <VibeCheckAccelCMD_Execute+0xa8>)
 8002d04:	4618      	mov	r0, r3
 8002d06:	f7fd fb03 	bl	8000310 <strcmp>
 8002d0a:	4603      	mov	r3, r0
 8002d0c:	2b00      	cmp	r3, #0
 8002d0e:	d133      	bne.n	8002d78 <VibeCheckAccelCMD_Execute+0x9c>
		{
			if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8002d10:	f107 030c 	add.w	r3, r7, #12
 8002d14:	2240      	movs	r2, #64	@ 0x40
 8002d16:	4619      	mov	r1, r3
 8002d18:	6838      	ldr	r0, [r7, #0]
 8002d1a:	f000 fdf3 	bl	8003904 <VibeCheckShell_GetNextString>
 8002d1e:	4603      	mov	r3, r0
 8002d20:	2b00      	cmp	r3, #0
 8002d22:	d029      	beq.n	8002d78 <VibeCheckAccelCMD_Execute+0x9c>
			{
				if (!strcmp(str, "start"))
 8002d24:	f107 030c 	add.w	r3, r7, #12
 8002d28:	4917      	ldr	r1, [pc, #92]	@ (8002d88 <VibeCheckAccelCMD_Execute+0xac>)
 8002d2a:	4618      	mov	r0, r3
 8002d2c:	f7fd faf0 	bl	8000310 <strcmp>
 8002d30:	4603      	mov	r3, r0
 8002d32:	2b00      	cmp	r3, #0
 8002d34:	d10b      	bne.n	8002d4e <VibeCheckAccelCMD_Execute+0x72>
				{
					VibeCheckAccel_StartFakeData(accel);
 8002d36:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 8002d38:	f7ff ff8e 	bl	8002c58 <VibeCheckAccel_StartFakeData>
					VibeCheckShell_PutOutputString(shell, "ack");
 8002d3c:	4913      	ldr	r1, [pc, #76]	@ (8002d8c <VibeCheckAccelCMD_Execute+0xb0>)
 8002d3e:	6838      	ldr	r0, [r7, #0]
 8002d40:	f000 fee0 	bl	8003b04 <VibeCheckShell_PutOutputString>
					VibeCheckShell_PutOutputDelimiter(shell);
 8002d44:	6838      	ldr	r0, [r7, #0]
 8002d46:	f000 ff5b 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
					return 1;
 8002d4a:	2301      	movs	r3, #1
 8002d4c:	e015      	b.n	8002d7a <VibeCheckAccelCMD_Execute+0x9e>
				}
				else if (!strcmp(str, "stop"))
 8002d4e:	f107 030c 	add.w	r3, r7, #12
 8002d52:	490f      	ldr	r1, [pc, #60]	@ (8002d90 <VibeCheckAccelCMD_Execute+0xb4>)
 8002d54:	4618      	mov	r0, r3
 8002d56:	f7fd fadb 	bl	8000310 <strcmp>
 8002d5a:	4603      	mov	r3, r0
 8002d5c:	2b00      	cmp	r3, #0
 8002d5e:	d10b      	bne.n	8002d78 <VibeCheckAccelCMD_Execute+0x9c>
				{
					VibeCheckAccel_StopFakeData(accel);
 8002d60:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 8002d62:	f7ff ff87 	bl	8002c74 <VibeCheckAccel_StopFakeData>
					VibeCheckShell_PutOutputString(shell, "ack");
 8002d66:	4909      	ldr	r1, [pc, #36]	@ (8002d8c <VibeCheckAccelCMD_Execute+0xb0>)
 8002d68:	6838      	ldr	r0, [r7, #0]
 8002d6a:	f000 fecb 	bl	8003b04 <VibeCheckShell_PutOutputString>
					VibeCheckShell_PutOutputDelimiter(shell);
 8002d6e:	6838      	ldr	r0, [r7, #0]
 8002d70:	f000 ff46 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
					return 1;
 8002d74:	2301      	movs	r3, #1
 8002d76:	e000      	b.n	8002d7a <VibeCheckAccelCMD_Execute+0x9e>
				}
			}
		}
	}

	return 0;
 8002d78:	2300      	movs	r3, #0
}
 8002d7a:	4618      	mov	r0, r3
 8002d7c:	3750      	adds	r7, #80	@ 0x50
 8002d7e:	46bd      	mov	sp, r7
 8002d80:	bd80      	pop	{r7, pc}
 8002d82:	bf00      	nop
 8002d84:	0801aa40 	.word	0x0801aa40
 8002d88:	0801aa4c 	.word	0x0801aa4c
 8002d8c:	0801aa54 	.word	0x0801aa54
 8002d90:	0801aa58 	.word	0x0801aa58

08002d94 <VibeCheckAccelSender_Execute>:


uint32_t VibeCheckAccelSender_Execute(void* obj, VibeCheckShell* shell)
{
 8002d94:	b580      	push	{r7, lr}
 8002d96:	b086      	sub	sp, #24
 8002d98:	af00      	add	r7, sp, #0
 8002d9a:	6078      	str	r0, [r7, #4]
 8002d9c:	6039      	str	r1, [r7, #0]
	VibeCheckAccel* accel = (VibeCheckAccel*)obj;
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	613b      	str	r3, [r7, #16]

	VibeCheckAccel_Data* data;
	if (VibeCheckAccel_GetDataReady(accel, &data))
 8002da2:	f107 030c 	add.w	r3, r7, #12
 8002da6:	4619      	mov	r1, r3
 8002da8:	6938      	ldr	r0, [r7, #16]
 8002daa:	f7ff ff71 	bl	8002c90 <VibeCheckAccel_GetDataReady>
 8002dae:	4603      	mov	r3, r0
 8002db0:	2b00      	cmp	r3, #0
 8002db2:	d04e      	beq.n	8002e52 <VibeCheckAccelSender_Execute+0xbe>
	{
		VibeCheckShell_PutOutputString(shell, "data");
 8002db4:	4929      	ldr	r1, [pc, #164]	@ (8002e5c <VibeCheckAccelSender_Execute+0xc8>)
 8002db6:	6838      	ldr	r0, [r7, #0]
 8002db8:	f000 fea4 	bl	8003b04 <VibeCheckShell_PutOutputString>
		VibeCheckShell_PutOutputSeparator(shell);
 8002dbc:	6838      	ldr	r0, [r7, #0]
 8002dbe:	f000 ff11 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>
		VibeCheckShell_PutOutputInt(shell, VC_ACCEL_DATA_PER_PACKET);
 8002dc2:	210a      	movs	r1, #10
 8002dc4:	6838      	ldr	r0, [r7, #0]
 8002dc6:	f000 fed7 	bl	8003b78 <VibeCheckShell_PutOutputInt>

		uint32_t data_written = 0;
 8002dca:	2300      	movs	r3, #0
 8002dcc:	617b      	str	r3, [r7, #20]
		while (data_written < VC_ACCEL_DATA_PER_PACKET)
 8002dce:	e038      	b.n	8002e42 <VibeCheckAccelSender_Execute+0xae>
		{
			VibeCheckShell_PutOutputSeparator(shell);
 8002dd0:	6838      	ldr	r0, [r7, #0]
 8002dd2:	f000 ff07 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputInt(shell, data->id);
 8002dd6:	68fb      	ldr	r3, [r7, #12]
 8002dd8:	781b      	ldrb	r3, [r3, #0]
 8002dda:	4619      	mov	r1, r3
 8002ddc:	6838      	ldr	r0, [r7, #0]
 8002dde:	f000 fecb 	bl	8003b78 <VibeCheckShell_PutOutputInt>
			VibeCheckShell_PutOutputSeparator(shell);
 8002de2:	6838      	ldr	r0, [r7, #0]
 8002de4:	f000 fefe 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputInt(shell, data->time);
 8002de8:	68fb      	ldr	r3, [r7, #12]
 8002dea:	685b      	ldr	r3, [r3, #4]
 8002dec:	4619      	mov	r1, r3
 8002dee:	6838      	ldr	r0, [r7, #0]
 8002df0:	f000 fec2 	bl	8003b78 <VibeCheckShell_PutOutputInt>
			VibeCheckShell_PutOutputSeparator(shell);
 8002df4:	6838      	ldr	r0, [r7, #0]
 8002df6:	f000 fef5 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputFloat(shell, data->x);
 8002dfa:	68fb      	ldr	r3, [r7, #12]
 8002dfc:	edd3 7a02 	vldr	s15, [r3, #8]
 8002e00:	eeb0 0a67 	vmov.f32	s0, s15
 8002e04:	6838      	ldr	r0, [r7, #0]
 8002e06:	f000 fecf 	bl	8003ba8 <VibeCheckShell_PutOutputFloat>
			VibeCheckShell_PutOutputSeparator(shell);
 8002e0a:	6838      	ldr	r0, [r7, #0]
 8002e0c:	f000 feea 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputFloat(shell, data->y);
 8002e10:	68fb      	ldr	r3, [r7, #12]
 8002e12:	edd3 7a03 	vldr	s15, [r3, #12]
 8002e16:	eeb0 0a67 	vmov.f32	s0, s15
 8002e1a:	6838      	ldr	r0, [r7, #0]
 8002e1c:	f000 fec4 	bl	8003ba8 <VibeCheckShell_PutOutputFloat>
			VibeCheckShell_PutOutputSeparator(shell);
 8002e20:	6838      	ldr	r0, [r7, #0]
 8002e22:	f000 fedf 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputFloat(shell, data->z);
 8002e26:	68fb      	ldr	r3, [r7, #12]
 8002e28:	edd3 7a04 	vldr	s15, [r3, #16]
 8002e2c:	eeb0 0a67 	vmov.f32	s0, s15
 8002e30:	6838      	ldr	r0, [r7, #0]
 8002e32:	f000 feb9 	bl	8003ba8 <VibeCheckShell_PutOutputFloat>

			data++;
 8002e36:	68fb      	ldr	r3, [r7, #12]
 8002e38:	3314      	adds	r3, #20
 8002e3a:	60fb      	str	r3, [r7, #12]
			data_written++;
 8002e3c:	697b      	ldr	r3, [r7, #20]
 8002e3e:	3301      	adds	r3, #1
 8002e40:	617b      	str	r3, [r7, #20]
		while (data_written < VC_ACCEL_DATA_PER_PACKET)
 8002e42:	697b      	ldr	r3, [r7, #20]
 8002e44:	2b09      	cmp	r3, #9
 8002e46:	d9c3      	bls.n	8002dd0 <VibeCheckAccelSender_Execute+0x3c>
		}

		VibeCheckShell_PutOutputDelimiter(shell);
 8002e48:	6838      	ldr	r0, [r7, #0]
 8002e4a:	f000 fed9 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>

		return 1;
 8002e4e:	2301      	movs	r3, #1
 8002e50:	e000      	b.n	8002e54 <VibeCheckAccelSender_Execute+0xc0>
	}
	else
	{
		return 0;
 8002e52:	2300      	movs	r3, #0
	}
}
 8002e54:	4618      	mov	r0, r3
 8002e56:	3718      	adds	r7, #24
 8002e58:	46bd      	mov	sp, r7
 8002e5a:	bd80      	pop	{r7, pc}
 8002e5c:	0801aa60 	.word	0x0801aa60

08002e60 <VibeCheckRGB_Init>:

#include "vibecheck_rgb.h"


void VibeCheckRGB_Init(VibeCheckRGB* rgb, TIM_HandleTypeDef* htim)
{
 8002e60:	b580      	push	{r7, lr}
 8002e62:	b084      	sub	sp, #16
 8002e64:	af00      	add	r7, sp, #0
 8002e66:	6078      	str	r0, [r7, #4]
 8002e68:	6039      	str	r1, [r7, #0]
	Sequencer_Init(&rgb->base_sequence);
 8002e6a:	687b      	ldr	r3, [r7, #4]
 8002e6c:	f503 63aa 	add.w	r3, r3, #1360	@ 0x550
 8002e70:	4618      	mov	r0, r3
 8002e72:	f7fe fd43 	bl	80018fc <Sequencer_Init>
	Sequencer_Init(&rgb->top_sequence);
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	f503 63ad 	add.w	r3, r3, #1384	@ 0x568
 8002e7c:	4618      	mov	r0, r3
 8002e7e:	f7fe fd3d 	bl	80018fc <Sequencer_Init>

	htim->Instance->PSC = VC_RGB_TIM_PSC - 1;
 8002e82:	683b      	ldr	r3, [r7, #0]
 8002e84:	681b      	ldr	r3, [r3, #0]
 8002e86:	2202      	movs	r2, #2
 8002e88:	629a      	str	r2, [r3, #40]	@ 0x28
	htim->Instance->ARR = VC_RGB_TIM_ARR - 1;
 8002e8a:	683b      	ldr	r3, [r7, #0]
 8002e8c:	681b      	ldr	r3, [r3, #0]
 8002e8e:	2263      	movs	r2, #99	@ 0x63
 8002e90:	62da      	str	r2, [r3, #44]	@ 0x2c
	rgb->htim = htim;
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	683a      	ldr	r2, [r7, #0]
 8002e96:	601a      	str	r2, [r3, #0]

	/* clear the DMA buffer, particularly setting all zeros during the reset time */
	for (uint32_t i = 0; i < VC_RGB_BUF_LEN; i++)
 8002e98:	2300      	movs	r3, #0
 8002e9a:	60fb      	str	r3, [r7, #12]
 8002e9c:	e008      	b.n	8002eb0 <VibeCheckRGB_Init+0x50>
		rgb->bit_stream[i] = 0;
 8002e9e:	687b      	ldr	r3, [r7, #4]
 8002ea0:	68fa      	ldr	r2, [r7, #12]
 8002ea2:	3210      	adds	r2, #16
 8002ea4:	2100      	movs	r1, #0
 8002ea6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
	for (uint32_t i = 0; i < VC_RGB_BUF_LEN; i++)
 8002eaa:	68fb      	ldr	r3, [r7, #12]
 8002eac:	3301      	adds	r3, #1
 8002eae:	60fb      	str	r3, [r7, #12]
 8002eb0:	68fb      	ldr	r3, [r7, #12]
 8002eb2:	f5b3 7f26 	cmp.w	r3, #664	@ 0x298
 8002eb6:	d3f2      	bcc.n	8002e9e <VibeCheckRGB_Init+0x3e>

	/* turn off all LEDs */
	VibeCheckRGB_SetAllOff(rgb);
 8002eb8:	6878      	ldr	r0, [r7, #4]
 8002eba:	f000 f94a 	bl	8003152 <VibeCheckRGB_SetAllOff>
	VibeCheckRGB_SendColors(rgb);
 8002ebe:	6878      	ldr	r0, [r7, #4]
 8002ec0:	f000 f961 	bl	8003186 <VibeCheckRGB_SendColors>
}
 8002ec4:	bf00      	nop
 8002ec6:	3710      	adds	r7, #16
 8002ec8:	46bd      	mov	sp, r7
 8002eca:	bd80      	pop	{r7, pc}

08002ecc <VibeCheckRGB_Update>:


void VibeCheckRGB_Update(VibeCheckRGB* rgb)  /* call repeatedly in the main loop */
{
 8002ecc:	b580      	push	{r7, lr}
 8002ece:	b08a      	sub	sp, #40	@ 0x28
 8002ed0:	af02      	add	r7, sp, #8
 8002ed2:	6078      	str	r0, [r7, #4]
	uint32_t time = HAL_GetTick();
 8002ed4:	f002 fa0c 	bl	80052f0 <HAL_GetTick>
 8002ed8:	6178      	str	r0, [r7, #20]
	uint32_t step;
	if (Sequencer_Update(&rgb->top_sequence, time, &step))
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	f503 63ad 	add.w	r3, r3, #1384	@ 0x568
 8002ee0:	f107 0210 	add.w	r2, r7, #16
 8002ee4:	6979      	ldr	r1, [r7, #20]
 8002ee6:	4618      	mov	r0, r3
 8002ee8:	f7fe fd3a 	bl	8001960 <Sequencer_Update>
 8002eec:	4603      	mov	r3, r0
 8002eee:	2b00      	cmp	r3, #0
 8002ef0:	d028      	beq.n	8002f44 <VibeCheckRGB_Update+0x78>
	{
		for (uint32_t i = 0; i < VC_RGB_NUM_LEDS; i++)
 8002ef2:	2300      	movs	r3, #0
 8002ef4:	61fb      	str	r3, [r7, #28]
 8002ef6:	e01e      	b.n	8002f36 <VibeCheckRGB_Update+0x6a>
		{
			VibeCheckRGB_Color color = rgb->top_sequence_colors[VC_RGB_NUM_LEDS * step + i];
 8002ef8:	687b      	ldr	r3, [r7, #4]
 8002efa:	f8d3 157c 	ldr.w	r1, [r3, #1404]	@ 0x57c
 8002efe:	693a      	ldr	r2, [r7, #16]
 8002f00:	4613      	mov	r3, r2
 8002f02:	00db      	lsls	r3, r3, #3
 8002f04:	441a      	add	r2, r3
 8002f06:	69fb      	ldr	r3, [r7, #28]
 8002f08:	441a      	add	r2, r3
 8002f0a:	4613      	mov	r3, r2
 8002f0c:	005b      	lsls	r3, r3, #1
 8002f0e:	4413      	add	r3, r2
 8002f10:	18ca      	adds	r2, r1, r3
 8002f12:	f107 030c 	add.w	r3, r7, #12
 8002f16:	8811      	ldrh	r1, [r2, #0]
 8002f18:	7892      	ldrb	r2, [r2, #2]
 8002f1a:	8019      	strh	r1, [r3, #0]
 8002f1c:	709a      	strb	r2, [r3, #2]
			VibeCheckRGB_SetColor(rgb, i, color.r, color.g, color.b);
 8002f1e:	7b3a      	ldrb	r2, [r7, #12]
 8002f20:	7b79      	ldrb	r1, [r7, #13]
 8002f22:	7bbb      	ldrb	r3, [r7, #14]
 8002f24:	9300      	str	r3, [sp, #0]
 8002f26:	460b      	mov	r3, r1
 8002f28:	69f9      	ldr	r1, [r7, #28]
 8002f2a:	6878      	ldr	r0, [r7, #4]
 8002f2c:	f000 f8b9 	bl	80030a2 <VibeCheckRGB_SetColor>
		for (uint32_t i = 0; i < VC_RGB_NUM_LEDS; i++)
 8002f30:	69fb      	ldr	r3, [r7, #28]
 8002f32:	3301      	adds	r3, #1
 8002f34:	61fb      	str	r3, [r7, #28]
 8002f36:	69fb      	ldr	r3, [r7, #28]
 8002f38:	2b08      	cmp	r3, #8
 8002f3a:	d9dd      	bls.n	8002ef8 <VibeCheckRGB_Update+0x2c>
		}
		VibeCheckRGB_SendColors(rgb);
 8002f3c:	6878      	ldr	r0, [r7, #4]
 8002f3e:	f000 f922 	bl	8003186 <VibeCheckRGB_SendColors>
			VibeCheckRGB_Color color = rgb->base_sequence_colors[VC_RGB_NUM_LEDS * step + i];
			VibeCheckRGB_SetColor(rgb, i, color.r, color.g, color.b);
		}
		VibeCheckRGB_SendColors(rgb);
	}
}
 8002f42:	e03c      	b.n	8002fbe <VibeCheckRGB_Update+0xf2>
	else if (!Sequencer_IsRunning(&rgb->top_sequence) && Sequencer_Update(&rgb->base_sequence, time, &step))
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	f503 63ad 	add.w	r3, r3, #1384	@ 0x568
 8002f4a:	4618      	mov	r0, r3
 8002f4c:	f7fe fd6b 	bl	8001a26 <Sequencer_IsRunning>
 8002f50:	4603      	mov	r3, r0
 8002f52:	2b00      	cmp	r3, #0
 8002f54:	d133      	bne.n	8002fbe <VibeCheckRGB_Update+0xf2>
 8002f56:	687b      	ldr	r3, [r7, #4]
 8002f58:	f503 63aa 	add.w	r3, r3, #1360	@ 0x550
 8002f5c:	f107 0210 	add.w	r2, r7, #16
 8002f60:	6979      	ldr	r1, [r7, #20]
 8002f62:	4618      	mov	r0, r3
 8002f64:	f7fe fcfc 	bl	8001960 <Sequencer_Update>
 8002f68:	4603      	mov	r3, r0
 8002f6a:	2b00      	cmp	r3, #0
 8002f6c:	d027      	beq.n	8002fbe <VibeCheckRGB_Update+0xf2>
		for (uint32_t i = 0; i < VC_RGB_NUM_LEDS; i++)
 8002f6e:	2300      	movs	r3, #0
 8002f70:	61bb      	str	r3, [r7, #24]
 8002f72:	e01e      	b.n	8002fb2 <VibeCheckRGB_Update+0xe6>
			VibeCheckRGB_Color color = rgb->base_sequence_colors[VC_RGB_NUM_LEDS * step + i];
 8002f74:	687b      	ldr	r3, [r7, #4]
 8002f76:	f8d3 1564 	ldr.w	r1, [r3, #1380]	@ 0x564
 8002f7a:	693a      	ldr	r2, [r7, #16]
 8002f7c:	4613      	mov	r3, r2
 8002f7e:	00db      	lsls	r3, r3, #3
 8002f80:	441a      	add	r2, r3
 8002f82:	69bb      	ldr	r3, [r7, #24]
 8002f84:	441a      	add	r2, r3
 8002f86:	4613      	mov	r3, r2
 8002f88:	005b      	lsls	r3, r3, #1
 8002f8a:	4413      	add	r3, r2
 8002f8c:	18ca      	adds	r2, r1, r3
 8002f8e:	f107 0308 	add.w	r3, r7, #8
 8002f92:	8811      	ldrh	r1, [r2, #0]
 8002f94:	7892      	ldrb	r2, [r2, #2]
 8002f96:	8019      	strh	r1, [r3, #0]
 8002f98:	709a      	strb	r2, [r3, #2]
			VibeCheckRGB_SetColor(rgb, i, color.r, color.g, color.b);
 8002f9a:	7a3a      	ldrb	r2, [r7, #8]
 8002f9c:	7a79      	ldrb	r1, [r7, #9]
 8002f9e:	7abb      	ldrb	r3, [r7, #10]
 8002fa0:	9300      	str	r3, [sp, #0]
 8002fa2:	460b      	mov	r3, r1
 8002fa4:	69b9      	ldr	r1, [r7, #24]
 8002fa6:	6878      	ldr	r0, [r7, #4]
 8002fa8:	f000 f87b 	bl	80030a2 <VibeCheckRGB_SetColor>
		for (uint32_t i = 0; i < VC_RGB_NUM_LEDS; i++)
 8002fac:	69bb      	ldr	r3, [r7, #24]
 8002fae:	3301      	adds	r3, #1
 8002fb0:	61bb      	str	r3, [r7, #24]
 8002fb2:	69bb      	ldr	r3, [r7, #24]
 8002fb4:	2b08      	cmp	r3, #8
 8002fb6:	d9dd      	bls.n	8002f74 <VibeCheckRGB_Update+0xa8>
		VibeCheckRGB_SendColors(rgb);
 8002fb8:	6878      	ldr	r0, [r7, #4]
 8002fba:	f000 f8e4 	bl	8003186 <VibeCheckRGB_SendColors>
}
 8002fbe:	bf00      	nop
 8002fc0:	3720      	adds	r7, #32
 8002fc2:	46bd      	mov	sp, r7
 8002fc4:	bd80      	pop	{r7, pc}

08002fc6 <VibeCheckRGB_SetBaseSequence>:


void VibeCheckRGB_SetBaseSequence(VibeCheckRGB* rgb, const uint32_t* time, const VibeCheckRGB_Color* color, uint32_t len)
{
 8002fc6:	b580      	push	{r7, lr}
 8002fc8:	b084      	sub	sp, #16
 8002fca:	af00      	add	r7, sp, #0
 8002fcc:	60f8      	str	r0, [r7, #12]
 8002fce:	60b9      	str	r1, [r7, #8]
 8002fd0:	607a      	str	r2, [r7, #4]
 8002fd2:	603b      	str	r3, [r7, #0]
	rgb->base_sequence_colors = color;
 8002fd4:	68fb      	ldr	r3, [r7, #12]
 8002fd6:	687a      	ldr	r2, [r7, #4]
 8002fd8:	f8c3 2564 	str.w	r2, [r3, #1380]	@ 0x564
	Sequencer_SetSequence(&rgb->base_sequence, time, len, 1);
 8002fdc:	68fb      	ldr	r3, [r7, #12]
 8002fde:	f503 60aa 	add.w	r0, r3, #1360	@ 0x550
 8002fe2:	2301      	movs	r3, #1
 8002fe4:	683a      	ldr	r2, [r7, #0]
 8002fe6:	68b9      	ldr	r1, [r7, #8]
 8002fe8:	f7fe fca4 	bl	8001934 <Sequencer_SetSequence>
}
 8002fec:	bf00      	nop
 8002fee:	3710      	adds	r7, #16
 8002ff0:	46bd      	mov	sp, r7
 8002ff2:	bd80      	pop	{r7, pc}

08002ff4 <VibeCheckRGB_StartBaseSequence>:

void VibeCheckRGB_StartBaseSequence(VibeCheckRGB* rgb)
{
 8002ff4:	b590      	push	{r4, r7, lr}
 8002ff6:	b083      	sub	sp, #12
 8002ff8:	af00      	add	r7, sp, #0
 8002ffa:	6078      	str	r0, [r7, #4]
	Sequencer_Start(&rgb->base_sequence, HAL_GetTick());
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	f503 64aa 	add.w	r4, r3, #1360	@ 0x550
 8003002:	f002 f975 	bl	80052f0 <HAL_GetTick>
 8003006:	4603      	mov	r3, r0
 8003008:	4619      	mov	r1, r3
 800300a:	4620      	mov	r0, r4
 800300c:	f7fe fcea 	bl	80019e4 <Sequencer_Start>
}
 8003010:	bf00      	nop
 8003012:	370c      	adds	r7, #12
 8003014:	46bd      	mov	sp, r7
 8003016:	bd90      	pop	{r4, r7, pc}

08003018 <VibeCheckRGB_StopBaseSequence>:

void VibeCheckRGB_StopBaseSequence(VibeCheckRGB* rgb)
{
 8003018:	b580      	push	{r7, lr}
 800301a:	b082      	sub	sp, #8
 800301c:	af00      	add	r7, sp, #0
 800301e:	6078      	str	r0, [r7, #4]
	Sequencer_Stop(&rgb->base_sequence);
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	f503 63aa 	add.w	r3, r3, #1360	@ 0x550
 8003026:	4618      	mov	r0, r3
 8003028:	f7fe fcf0 	bl	8001a0c <Sequencer_Stop>
}
 800302c:	bf00      	nop
 800302e:	3708      	adds	r7, #8
 8003030:	46bd      	mov	sp, r7
 8003032:	bd80      	pop	{r7, pc}

08003034 <VibeCheckRGB_SetTopSequence>:

void VibeCheckRGB_SetTopSequence(VibeCheckRGB* rgb, const uint32_t* time, const VibeCheckRGB_Color* color, uint32_t len)
{
 8003034:	b580      	push	{r7, lr}
 8003036:	b084      	sub	sp, #16
 8003038:	af00      	add	r7, sp, #0
 800303a:	60f8      	str	r0, [r7, #12]
 800303c:	60b9      	str	r1, [r7, #8]
 800303e:	607a      	str	r2, [r7, #4]
 8003040:	603b      	str	r3, [r7, #0]
	rgb->top_sequence_colors = color;
 8003042:	68fb      	ldr	r3, [r7, #12]
 8003044:	687a      	ldr	r2, [r7, #4]
 8003046:	f8c3 257c 	str.w	r2, [r3, #1404]	@ 0x57c
	Sequencer_SetSequence(&rgb->top_sequence, time, len, 0);
 800304a:	68fb      	ldr	r3, [r7, #12]
 800304c:	f503 60ad 	add.w	r0, r3, #1384	@ 0x568
 8003050:	2300      	movs	r3, #0
 8003052:	683a      	ldr	r2, [r7, #0]
 8003054:	68b9      	ldr	r1, [r7, #8]
 8003056:	f7fe fc6d 	bl	8001934 <Sequencer_SetSequence>
}
 800305a:	bf00      	nop
 800305c:	3710      	adds	r7, #16
 800305e:	46bd      	mov	sp, r7
 8003060:	bd80      	pop	{r7, pc}

08003062 <VibeCheckRGB_StartTopSequence>:

void VibeCheckRGB_StartTopSequence(VibeCheckRGB* rgb)
{
 8003062:	b590      	push	{r4, r7, lr}
 8003064:	b083      	sub	sp, #12
 8003066:	af00      	add	r7, sp, #0
 8003068:	6078      	str	r0, [r7, #4]
	Sequencer_Start(&rgb->top_sequence, HAL_GetTick());
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	f503 64ad 	add.w	r4, r3, #1384	@ 0x568
 8003070:	f002 f93e 	bl	80052f0 <HAL_GetTick>
 8003074:	4603      	mov	r3, r0
 8003076:	4619      	mov	r1, r3
 8003078:	4620      	mov	r0, r4
 800307a:	f7fe fcb3 	bl	80019e4 <Sequencer_Start>
}
 800307e:	bf00      	nop
 8003080:	370c      	adds	r7, #12
 8003082:	46bd      	mov	sp, r7
 8003084:	bd90      	pop	{r4, r7, pc}

08003086 <VibeCheckRGB_StopTopSequence>:

void VibeCheckRGB_StopTopSequence(VibeCheckRGB* rgb)
{
 8003086:	b580      	push	{r7, lr}
 8003088:	b082      	sub	sp, #8
 800308a:	af00      	add	r7, sp, #0
 800308c:	6078      	str	r0, [r7, #4]
	Sequencer_Stop(&rgb->top_sequence);
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	f503 63ad 	add.w	r3, r3, #1384	@ 0x568
 8003094:	4618      	mov	r0, r3
 8003096:	f7fe fcb9 	bl	8001a0c <Sequencer_Stop>
}
 800309a:	bf00      	nop
 800309c:	3708      	adds	r7, #8
 800309e:	46bd      	mov	sp, r7
 80030a0:	bd80      	pop	{r7, pc}

080030a2 <VibeCheckRGB_SetColor>:


void VibeCheckRGB_SetColor(VibeCheckRGB* rgb, uint32_t index, uint8_t r, uint8_t g, uint8_t b)  /* set the color of an individual LED */
{
 80030a2:	b480      	push	{r7}
 80030a4:	b085      	sub	sp, #20
 80030a6:	af00      	add	r7, sp, #0
 80030a8:	60f8      	str	r0, [r7, #12]
 80030aa:	60b9      	str	r1, [r7, #8]
 80030ac:	4611      	mov	r1, r2
 80030ae:	461a      	mov	r2, r3
 80030b0:	460b      	mov	r3, r1
 80030b2:	71fb      	strb	r3, [r7, #7]
 80030b4:	4613      	mov	r3, r2
 80030b6:	71bb      	strb	r3, [r7, #6]
	if (index > VC_RGB_NUM_LEDS - 1)
 80030b8:	68bb      	ldr	r3, [r7, #8]
 80030ba:	2b08      	cmp	r3, #8
 80030bc:	d901      	bls.n	80030c2 <VibeCheckRGB_SetColor+0x20>
		index = VC_RGB_NUM_LEDS - 1;
 80030be:	2308      	movs	r3, #8
 80030c0:	60bb      	str	r3, [r7, #8]

	rgb->colors[index].r = r;
 80030c2:	68f9      	ldr	r1, [r7, #12]
 80030c4:	68ba      	ldr	r2, [r7, #8]
 80030c6:	4613      	mov	r3, r2
 80030c8:	005b      	lsls	r3, r3, #1
 80030ca:	4413      	add	r3, r2
 80030cc:	440b      	add	r3, r1
 80030ce:	3304      	adds	r3, #4
 80030d0:	79fa      	ldrb	r2, [r7, #7]
 80030d2:	701a      	strb	r2, [r3, #0]
	rgb->colors[index].g = g;
 80030d4:	68f9      	ldr	r1, [r7, #12]
 80030d6:	68ba      	ldr	r2, [r7, #8]
 80030d8:	4613      	mov	r3, r2
 80030da:	005b      	lsls	r3, r3, #1
 80030dc:	4413      	add	r3, r2
 80030de:	440b      	add	r3, r1
 80030e0:	3305      	adds	r3, #5
 80030e2:	79ba      	ldrb	r2, [r7, #6]
 80030e4:	701a      	strb	r2, [r3, #0]
	rgb->colors[index].b = b;
 80030e6:	68f9      	ldr	r1, [r7, #12]
 80030e8:	68ba      	ldr	r2, [r7, #8]
 80030ea:	4613      	mov	r3, r2
 80030ec:	005b      	lsls	r3, r3, #1
 80030ee:	4413      	add	r3, r2
 80030f0:	440b      	add	r3, r1
 80030f2:	3306      	adds	r3, #6
 80030f4:	7e3a      	ldrb	r2, [r7, #24]
 80030f6:	701a      	strb	r2, [r3, #0]
}
 80030f8:	bf00      	nop
 80030fa:	3714      	adds	r7, #20
 80030fc:	46bd      	mov	sp, r7
 80030fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003102:	4770      	bx	lr

08003104 <VibeCheckRGB_GetColor>:


VibeCheckRGB_Color VibeCheckRGB_GetColor(VibeCheckRGB* rgb, uint32_t index)
{
 8003104:	b480      	push	{r7}
 8003106:	b085      	sub	sp, #20
 8003108:	af00      	add	r7, sp, #0
 800310a:	6078      	str	r0, [r7, #4]
 800310c:	6039      	str	r1, [r7, #0]
	if (index > VC_RGB_NUM_LEDS - 1)
 800310e:	683b      	ldr	r3, [r7, #0]
 8003110:	2b08      	cmp	r3, #8
 8003112:	d901      	bls.n	8003118 <VibeCheckRGB_GetColor+0x14>
			index = VC_RGB_NUM_LEDS - 1;
 8003114:	2308      	movs	r3, #8
 8003116:	603b      	str	r3, [r7, #0]

	return rgb->colors[index];
 8003118:	6879      	ldr	r1, [r7, #4]
 800311a:	683a      	ldr	r2, [r7, #0]
 800311c:	4613      	mov	r3, r2
 800311e:	005b      	lsls	r3, r3, #1
 8003120:	4413      	add	r3, r2
 8003122:	18ca      	adds	r2, r1, r3
 8003124:	f107 030c 	add.w	r3, r7, #12
 8003128:	3204      	adds	r2, #4
 800312a:	8811      	ldrh	r1, [r2, #0]
 800312c:	7892      	ldrb	r2, [r2, #2]
 800312e:	8019      	strh	r1, [r3, #0]
 8003130:	709a      	strb	r2, [r3, #2]
 8003132:	2300      	movs	r3, #0
 8003134:	7b3a      	ldrb	r2, [r7, #12]
 8003136:	f362 0307 	bfi	r3, r2, #0, #8
 800313a:	7b7a      	ldrb	r2, [r7, #13]
 800313c:	f362 230f 	bfi	r3, r2, #8, #8
 8003140:	7bba      	ldrb	r2, [r7, #14]
 8003142:	f362 4317 	bfi	r3, r2, #16, #8
}
 8003146:	4618      	mov	r0, r3
 8003148:	3714      	adds	r7, #20
 800314a:	46bd      	mov	sp, r7
 800314c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003150:	4770      	bx	lr

08003152 <VibeCheckRGB_SetAllOff>:


void VibeCheckRGB_SetAllOff(VibeCheckRGB* rgb)
{
 8003152:	b580      	push	{r7, lr}
 8003154:	b086      	sub	sp, #24
 8003156:	af02      	add	r7, sp, #8
 8003158:	6078      	str	r0, [r7, #4]
	for (uint32_t i = 0; i < VC_RGB_NUM_LEDS; i++)
 800315a:	2300      	movs	r3, #0
 800315c:	60fb      	str	r3, [r7, #12]
 800315e:	e00a      	b.n	8003176 <VibeCheckRGB_SetAllOff+0x24>
		VibeCheckRGB_SetColor(rgb, i, 0, 0, 0);
 8003160:	2300      	movs	r3, #0
 8003162:	9300      	str	r3, [sp, #0]
 8003164:	2300      	movs	r3, #0
 8003166:	2200      	movs	r2, #0
 8003168:	68f9      	ldr	r1, [r7, #12]
 800316a:	6878      	ldr	r0, [r7, #4]
 800316c:	f7ff ff99 	bl	80030a2 <VibeCheckRGB_SetColor>
	for (uint32_t i = 0; i < VC_RGB_NUM_LEDS; i++)
 8003170:	68fb      	ldr	r3, [r7, #12]
 8003172:	3301      	adds	r3, #1
 8003174:	60fb      	str	r3, [r7, #12]
 8003176:	68fb      	ldr	r3, [r7, #12]
 8003178:	2b08      	cmp	r3, #8
 800317a:	d9f1      	bls.n	8003160 <VibeCheckRGB_SetAllOff+0xe>
}
 800317c:	bf00      	nop
 800317e:	bf00      	nop
 8003180:	3710      	adds	r7, #16
 8003182:	46bd      	mov	sp, r7
 8003184:	bd80      	pop	{r7, pc}

08003186 <VibeCheckRGB_SendColors>:


void VibeCheckRGB_SendColors(VibeCheckRGB* rgb)  /* send the colors to the LEDs */
{
 8003186:	b580      	push	{r7, lr}
 8003188:	b088      	sub	sp, #32
 800318a:	af00      	add	r7, sp, #0
 800318c:	6078      	str	r0, [r7, #4]
	/* compute the bit stream timings */
	uint32_t i = VC_RGB_RESET_PERIODS;  /* put the reset periods first so we are not affected by spurious pin events at startup and such */
 800318e:	23e0      	movs	r3, #224	@ 0xe0
 8003190:	61fb      	str	r3, [r7, #28]
	for (uint32_t j = 0; j < VC_RGB_NUM_LEDS; j++)  /* Bit order for LED is G7, G6, ..., G0, R7, ..., R0, B7, ..., B0 */
 8003192:	2300      	movs	r3, #0
 8003194:	61bb      	str	r3, [r7, #24]
 8003196:	e06e      	b.n	8003276 <VibeCheckRGB_SendColors+0xf0>
	{
		for (uint32_t k = 8; k > 0; k--)  /* green */
 8003198:	2308      	movs	r3, #8
 800319a:	617b      	str	r3, [r7, #20]
 800319c:	e01d      	b.n	80031da <VibeCheckRGB_SendColors+0x54>
			rgb->bit_stream[i++] = ((rgb->colors[j].g >> (k - 1)) & 0x01) ? VC_RGB_TIM_HIGH : VC_RGB_TIM_LOW;
 800319e:	6879      	ldr	r1, [r7, #4]
 80031a0:	69ba      	ldr	r2, [r7, #24]
 80031a2:	4613      	mov	r3, r2
 80031a4:	005b      	lsls	r3, r3, #1
 80031a6:	4413      	add	r3, r2
 80031a8:	440b      	add	r3, r1
 80031aa:	3305      	adds	r3, #5
 80031ac:	781b      	ldrb	r3, [r3, #0]
 80031ae:	461a      	mov	r2, r3
 80031b0:	697b      	ldr	r3, [r7, #20]
 80031b2:	3b01      	subs	r3, #1
 80031b4:	fa42 f303 	asr.w	r3, r2, r3
 80031b8:	f003 0301 	and.w	r3, r3, #1
 80031bc:	2b00      	cmp	r3, #0
 80031be:	d001      	beq.n	80031c4 <VibeCheckRGB_SendColors+0x3e>
 80031c0:	2130      	movs	r1, #48	@ 0x30
 80031c2:	e000      	b.n	80031c6 <VibeCheckRGB_SendColors+0x40>
 80031c4:	2118      	movs	r1, #24
 80031c6:	69fb      	ldr	r3, [r7, #28]
 80031c8:	1c5a      	adds	r2, r3, #1
 80031ca:	61fa      	str	r2, [r7, #28]
 80031cc:	687a      	ldr	r2, [r7, #4]
 80031ce:	3310      	adds	r3, #16
 80031d0:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		for (uint32_t k = 8; k > 0; k--)  /* green */
 80031d4:	697b      	ldr	r3, [r7, #20]
 80031d6:	3b01      	subs	r3, #1
 80031d8:	617b      	str	r3, [r7, #20]
 80031da:	697b      	ldr	r3, [r7, #20]
 80031dc:	2b00      	cmp	r3, #0
 80031de:	d1de      	bne.n	800319e <VibeCheckRGB_SendColors+0x18>

		for (uint32_t k = 8; k > 0; k--)  /* red */
 80031e0:	2308      	movs	r3, #8
 80031e2:	613b      	str	r3, [r7, #16]
 80031e4:	e01d      	b.n	8003222 <VibeCheckRGB_SendColors+0x9c>
			rgb->bit_stream[i++] = ((rgb->colors[j].r >> (k - 1)) & 0x01) ? VC_RGB_TIM_HIGH : VC_RGB_TIM_LOW;
 80031e6:	6879      	ldr	r1, [r7, #4]
 80031e8:	69ba      	ldr	r2, [r7, #24]
 80031ea:	4613      	mov	r3, r2
 80031ec:	005b      	lsls	r3, r3, #1
 80031ee:	4413      	add	r3, r2
 80031f0:	440b      	add	r3, r1
 80031f2:	3304      	adds	r3, #4
 80031f4:	781b      	ldrb	r3, [r3, #0]
 80031f6:	461a      	mov	r2, r3
 80031f8:	693b      	ldr	r3, [r7, #16]
 80031fa:	3b01      	subs	r3, #1
 80031fc:	fa42 f303 	asr.w	r3, r2, r3
 8003200:	f003 0301 	and.w	r3, r3, #1
 8003204:	2b00      	cmp	r3, #0
 8003206:	d001      	beq.n	800320c <VibeCheckRGB_SendColors+0x86>
 8003208:	2130      	movs	r1, #48	@ 0x30
 800320a:	e000      	b.n	800320e <VibeCheckRGB_SendColors+0x88>
 800320c:	2118      	movs	r1, #24
 800320e:	69fb      	ldr	r3, [r7, #28]
 8003210:	1c5a      	adds	r2, r3, #1
 8003212:	61fa      	str	r2, [r7, #28]
 8003214:	687a      	ldr	r2, [r7, #4]
 8003216:	3310      	adds	r3, #16
 8003218:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		for (uint32_t k = 8; k > 0; k--)  /* red */
 800321c:	693b      	ldr	r3, [r7, #16]
 800321e:	3b01      	subs	r3, #1
 8003220:	613b      	str	r3, [r7, #16]
 8003222:	693b      	ldr	r3, [r7, #16]
 8003224:	2b00      	cmp	r3, #0
 8003226:	d1de      	bne.n	80031e6 <VibeCheckRGB_SendColors+0x60>

		for (uint32_t k = 8; k > 0; k--)  /* blue */
 8003228:	2308      	movs	r3, #8
 800322a:	60fb      	str	r3, [r7, #12]
 800322c:	e01d      	b.n	800326a <VibeCheckRGB_SendColors+0xe4>
			rgb->bit_stream[i++] = ((rgb->colors[j].b >> (k - 1)) & 0x01) ? VC_RGB_TIM_HIGH : VC_RGB_TIM_LOW;
 800322e:	6879      	ldr	r1, [r7, #4]
 8003230:	69ba      	ldr	r2, [r7, #24]
 8003232:	4613      	mov	r3, r2
 8003234:	005b      	lsls	r3, r3, #1
 8003236:	4413      	add	r3, r2
 8003238:	440b      	add	r3, r1
 800323a:	3306      	adds	r3, #6
 800323c:	781b      	ldrb	r3, [r3, #0]
 800323e:	461a      	mov	r2, r3
 8003240:	68fb      	ldr	r3, [r7, #12]
 8003242:	3b01      	subs	r3, #1
 8003244:	fa42 f303 	asr.w	r3, r2, r3
 8003248:	f003 0301 	and.w	r3, r3, #1
 800324c:	2b00      	cmp	r3, #0
 800324e:	d001      	beq.n	8003254 <VibeCheckRGB_SendColors+0xce>
 8003250:	2130      	movs	r1, #48	@ 0x30
 8003252:	e000      	b.n	8003256 <VibeCheckRGB_SendColors+0xd0>
 8003254:	2118      	movs	r1, #24
 8003256:	69fb      	ldr	r3, [r7, #28]
 8003258:	1c5a      	adds	r2, r3, #1
 800325a:	61fa      	str	r2, [r7, #28]
 800325c:	687a      	ldr	r2, [r7, #4]
 800325e:	3310      	adds	r3, #16
 8003260:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		for (uint32_t k = 8; k > 0; k--)  /* blue */
 8003264:	68fb      	ldr	r3, [r7, #12]
 8003266:	3b01      	subs	r3, #1
 8003268:	60fb      	str	r3, [r7, #12]
 800326a:	68fb      	ldr	r3, [r7, #12]
 800326c:	2b00      	cmp	r3, #0
 800326e:	d1de      	bne.n	800322e <VibeCheckRGB_SendColors+0xa8>
	for (uint32_t j = 0; j < VC_RGB_NUM_LEDS; j++)  /* Bit order for LED is G7, G6, ..., G0, R7, ..., R0, B7, ..., B0 */
 8003270:	69bb      	ldr	r3, [r7, #24]
 8003272:	3301      	adds	r3, #1
 8003274:	61bb      	str	r3, [r7, #24]
 8003276:	69bb      	ldr	r3, [r7, #24]
 8003278:	2b08      	cmp	r3, #8
 800327a:	d98d      	bls.n	8003198 <VibeCheckRGB_SendColors+0x12>
	}

	/* start the DMA transfer */
	(void)HAL_TIM_PWM_Start_DMA(rgb->htim, VC_RGB_TIM_CHANNEL, (uint32_t*)rgb->bit_stream, VC_RGB_BUF_LEN);
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	6818      	ldr	r0, [r3, #0]
 8003280:	687b      	ldr	r3, [r7, #4]
 8003282:	f103 0220 	add.w	r2, r3, #32
 8003286:	f44f 7326 	mov.w	r3, #664	@ 0x298
 800328a:	2100      	movs	r1, #0
 800328c:	f00b fed8 	bl	800f040 <HAL_TIM_PWM_Start_DMA>
}
 8003290:	bf00      	nop
 8003292:	3720      	adds	r7, #32
 8003294:	46bd      	mov	sp, r7
 8003296:	bd80      	pop	{r7, pc}

08003298 <VibeCheckRGBCMD_Execute>:

*/


uint32_t VibeCheckRGBCMD_Execute(void* obj, VibeCheckShell* shell)
{
 8003298:	b580      	push	{r7, lr}
 800329a:	b09c      	sub	sp, #112	@ 0x70
 800329c:	af02      	add	r7, sp, #8
 800329e:	6078      	str	r0, [r7, #4]
 80032a0:	6039      	str	r1, [r7, #0]
	VibeCheckRGB* rgb = (VibeCheckRGB*) obj;
 80032a2:	687b      	ldr	r3, [r7, #4]
 80032a4:	667b      	str	r3, [r7, #100]	@ 0x64

	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 80032a6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80032aa:	2240      	movs	r2, #64	@ 0x40
 80032ac:	4619      	mov	r1, r3
 80032ae:	6838      	ldr	r0, [r7, #0]
 80032b0:	f000 fb28 	bl	8003904 <VibeCheckShell_GetNextString>
 80032b4:	4603      	mov	r3, r0
 80032b6:	2b00      	cmp	r3, #0
 80032b8:	f000 80c2 	beq.w	8003440 <VibeCheckRGBCMD_Execute+0x1a8>
	{
		if (!strcmp(str, "set"))
 80032bc:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80032c0:	4962      	ldr	r1, [pc, #392]	@ (800344c <VibeCheckRGBCMD_Execute+0x1b4>)
 80032c2:	4618      	mov	r0, r3
 80032c4:	f7fd f824 	bl	8000310 <strcmp>
 80032c8:	4603      	mov	r3, r0
 80032ca:	2b00      	cmp	r3, #0
 80032cc:	d141      	bne.n	8003352 <VibeCheckRGBCMD_Execute+0xba>
		{
			int32_t index, r, g, b;
			if (VibeCheckShell_GetNextInt(shell, &index)
 80032ce:	f107 0320 	add.w	r3, r7, #32
 80032d2:	4619      	mov	r1, r3
 80032d4:	6838      	ldr	r0, [r7, #0]
 80032d6:	f000 fb85 	bl	80039e4 <VibeCheckShell_GetNextInt>
 80032da:	4603      	mov	r3, r0
 80032dc:	2b00      	cmp	r3, #0
 80032de:	f000 80af 	beq.w	8003440 <VibeCheckRGBCMD_Execute+0x1a8>
					&& VibeCheckShell_GetNextInt(shell, &r)
 80032e2:	f107 031c 	add.w	r3, r7, #28
 80032e6:	4619      	mov	r1, r3
 80032e8:	6838      	ldr	r0, [r7, #0]
 80032ea:	f000 fb7b 	bl	80039e4 <VibeCheckShell_GetNextInt>
 80032ee:	4603      	mov	r3, r0
 80032f0:	2b00      	cmp	r3, #0
 80032f2:	f000 80a5 	beq.w	8003440 <VibeCheckRGBCMD_Execute+0x1a8>
					&& VibeCheckShell_GetNextInt(shell, &g)
 80032f6:	f107 0318 	add.w	r3, r7, #24
 80032fa:	4619      	mov	r1, r3
 80032fc:	6838      	ldr	r0, [r7, #0]
 80032fe:	f000 fb71 	bl	80039e4 <VibeCheckShell_GetNextInt>
 8003302:	4603      	mov	r3, r0
 8003304:	2b00      	cmp	r3, #0
 8003306:	f000 809b 	beq.w	8003440 <VibeCheckRGBCMD_Execute+0x1a8>
					&& VibeCheckShell_GetNextInt(shell, &b))
 800330a:	f107 0314 	add.w	r3, r7, #20
 800330e:	4619      	mov	r1, r3
 8003310:	6838      	ldr	r0, [r7, #0]
 8003312:	f000 fb67 	bl	80039e4 <VibeCheckShell_GetNextInt>
 8003316:	4603      	mov	r3, r0
 8003318:	2b00      	cmp	r3, #0
 800331a:	f000 8091 	beq.w	8003440 <VibeCheckRGBCMD_Execute+0x1a8>
			{
				VibeCheckRGB_SetColor(rgb, index, r, g, b);
 800331e:	6a3b      	ldr	r3, [r7, #32]
 8003320:	4618      	mov	r0, r3
 8003322:	69fb      	ldr	r3, [r7, #28]
 8003324:	b2da      	uxtb	r2, r3
 8003326:	69bb      	ldr	r3, [r7, #24]
 8003328:	b2d9      	uxtb	r1, r3
 800332a:	697b      	ldr	r3, [r7, #20]
 800332c:	b2db      	uxtb	r3, r3
 800332e:	9300      	str	r3, [sp, #0]
 8003330:	460b      	mov	r3, r1
 8003332:	4601      	mov	r1, r0
 8003334:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 8003336:	f7ff feb4 	bl	80030a2 <VibeCheckRGB_SetColor>
				VibeCheckRGB_SendColors(rgb);
 800333a:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 800333c:	f7ff ff23 	bl	8003186 <VibeCheckRGB_SendColors>
				VibeCheckShell_PutOutputString(shell, "ack");
 8003340:	4943      	ldr	r1, [pc, #268]	@ (8003450 <VibeCheckRGBCMD_Execute+0x1b8>)
 8003342:	6838      	ldr	r0, [r7, #0]
 8003344:	f000 fbde 	bl	8003b04 <VibeCheckShell_PutOutputString>
				VibeCheckShell_PutOutputDelimiter(shell);
 8003348:	6838      	ldr	r0, [r7, #0]
 800334a:	f000 fc59 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
				return 1;
 800334e:	2301      	movs	r3, #1
 8003350:	e077      	b.n	8003442 <VibeCheckRGBCMD_Execute+0x1aa>
			}
		}
		else if (!strcmp(str, "get"))
 8003352:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8003356:	493f      	ldr	r1, [pc, #252]	@ (8003454 <VibeCheckRGBCMD_Execute+0x1bc>)
 8003358:	4618      	mov	r0, r3
 800335a:	f7fc ffd9 	bl	8000310 <strcmp>
 800335e:	4603      	mov	r3, r0
 8003360:	2b00      	cmp	r3, #0
 8003362:	d137      	bne.n	80033d4 <VibeCheckRGBCMD_Execute+0x13c>
		{
			int32_t index;
			if (VibeCheckShell_GetNextInt(shell, &index))
 8003364:	f107 0310 	add.w	r3, r7, #16
 8003368:	4619      	mov	r1, r3
 800336a:	6838      	ldr	r0, [r7, #0]
 800336c:	f000 fb3a 	bl	80039e4 <VibeCheckShell_GetNextInt>
 8003370:	4603      	mov	r3, r0
 8003372:	2b00      	cmp	r3, #0
 8003374:	d064      	beq.n	8003440 <VibeCheckRGBCMD_Execute+0x1a8>
			{
				VibeCheckRGB_Color color = VibeCheckRGB_GetColor(rgb, index);
 8003376:	693b      	ldr	r3, [r7, #16]
 8003378:	4619      	mov	r1, r3
 800337a:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 800337c:	f7ff fec2 	bl	8003104 <VibeCheckRGB_GetColor>
 8003380:	4603      	mov	r3, r0
 8003382:	461a      	mov	r2, r3
 8003384:	733a      	strb	r2, [r7, #12]
 8003386:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800338a:	737a      	strb	r2, [r7, #13]
 800338c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8003390:	73bb      	strb	r3, [r7, #14]

				VibeCheckShell_PutOutputString(shell, "ack");
 8003392:	492f      	ldr	r1, [pc, #188]	@ (8003450 <VibeCheckRGBCMD_Execute+0x1b8>)
 8003394:	6838      	ldr	r0, [r7, #0]
 8003396:	f000 fbb5 	bl	8003b04 <VibeCheckShell_PutOutputString>
				VibeCheckShell_PutOutputSeparator(shell);
 800339a:	6838      	ldr	r0, [r7, #0]
 800339c:	f000 fc22 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>
				VibeCheckShell_PutOutputInt(shell, color.r);
 80033a0:	7b3b      	ldrb	r3, [r7, #12]
 80033a2:	4619      	mov	r1, r3
 80033a4:	6838      	ldr	r0, [r7, #0]
 80033a6:	f000 fbe7 	bl	8003b78 <VibeCheckShell_PutOutputInt>
				VibeCheckShell_PutOutputSeparator(shell);
 80033aa:	6838      	ldr	r0, [r7, #0]
 80033ac:	f000 fc1a 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>
				VibeCheckShell_PutOutputInt(shell, color.g);
 80033b0:	7b7b      	ldrb	r3, [r7, #13]
 80033b2:	4619      	mov	r1, r3
 80033b4:	6838      	ldr	r0, [r7, #0]
 80033b6:	f000 fbdf 	bl	8003b78 <VibeCheckShell_PutOutputInt>
				VibeCheckShell_PutOutputSeparator(shell);
 80033ba:	6838      	ldr	r0, [r7, #0]
 80033bc:	f000 fc12 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>
				VibeCheckShell_PutOutputInt(shell, color.b);
 80033c0:	7bbb      	ldrb	r3, [r7, #14]
 80033c2:	4619      	mov	r1, r3
 80033c4:	6838      	ldr	r0, [r7, #0]
 80033c6:	f000 fbd7 	bl	8003b78 <VibeCheckShell_PutOutputInt>
				VibeCheckShell_PutOutputDelimiter(shell);
 80033ca:	6838      	ldr	r0, [r7, #0]
 80033cc:	f000 fc18 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
				return 1;
 80033d0:	2301      	movs	r3, #1
 80033d2:	e036      	b.n	8003442 <VibeCheckRGBCMD_Execute+0x1aa>
			}
		}
		else if (!strcmp(str, "start"))  /* TODO: revisit this once we have a clearer idea of how the LED sequence should behave */
 80033d4:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033d8:	491f      	ldr	r1, [pc, #124]	@ (8003458 <VibeCheckRGBCMD_Execute+0x1c0>)
 80033da:	4618      	mov	r0, r3
 80033dc:	f7fc ff98 	bl	8000310 <strcmp>
 80033e0:	4603      	mov	r3, r0
 80033e2:	2b00      	cmp	r3, #0
 80033e4:	d10e      	bne.n	8003404 <VibeCheckRGBCMD_Execute+0x16c>
		{
			VibeCheckRGB_StartBaseSequence(rgb);
 80033e6:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 80033e8:	f7ff fe04 	bl	8002ff4 <VibeCheckRGB_StartBaseSequence>
			VibeCheckRGB_StartTopSequence(rgb);
 80033ec:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 80033ee:	f7ff fe38 	bl	8003062 <VibeCheckRGB_StartTopSequence>
			VibeCheckShell_PutOutputString(shell, "ack");
 80033f2:	4917      	ldr	r1, [pc, #92]	@ (8003450 <VibeCheckRGBCMD_Execute+0x1b8>)
 80033f4:	6838      	ldr	r0, [r7, #0]
 80033f6:	f000 fb85 	bl	8003b04 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputDelimiter(shell);
 80033fa:	6838      	ldr	r0, [r7, #0]
 80033fc:	f000 fc00 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8003400:	2301      	movs	r3, #1
 8003402:	e01e      	b.n	8003442 <VibeCheckRGBCMD_Execute+0x1aa>
		}
		else if (!strcmp(str, "stop"))
 8003404:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8003408:	4914      	ldr	r1, [pc, #80]	@ (800345c <VibeCheckRGBCMD_Execute+0x1c4>)
 800340a:	4618      	mov	r0, r3
 800340c:	f7fc ff80 	bl	8000310 <strcmp>
 8003410:	4603      	mov	r3, r0
 8003412:	2b00      	cmp	r3, #0
 8003414:	d114      	bne.n	8003440 <VibeCheckRGBCMD_Execute+0x1a8>
		{
			VibeCheckRGB_StopBaseSequence(rgb);
 8003416:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 8003418:	f7ff fdfe 	bl	8003018 <VibeCheckRGB_StopBaseSequence>
			VibeCheckRGB_StopTopSequence(rgb);
 800341c:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 800341e:	f7ff fe32 	bl	8003086 <VibeCheckRGB_StopTopSequence>
			VibeCheckRGB_SetAllOff(rgb);
 8003422:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 8003424:	f7ff fe95 	bl	8003152 <VibeCheckRGB_SetAllOff>
			VibeCheckRGB_SendColors(rgb);
 8003428:	6e78      	ldr	r0, [r7, #100]	@ 0x64
 800342a:	f7ff feac 	bl	8003186 <VibeCheckRGB_SendColors>
			VibeCheckShell_PutOutputString(shell, "ack");
 800342e:	4908      	ldr	r1, [pc, #32]	@ (8003450 <VibeCheckRGBCMD_Execute+0x1b8>)
 8003430:	6838      	ldr	r0, [r7, #0]
 8003432:	f000 fb67 	bl	8003b04 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputDelimiter(shell);
 8003436:	6838      	ldr	r0, [r7, #0]
 8003438:	f000 fbe2 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 800343c:	2301      	movs	r3, #1
 800343e:	e000      	b.n	8003442 <VibeCheckRGBCMD_Execute+0x1aa>
		}
	}

	return 0;
 8003440:	2300      	movs	r3, #0
}
 8003442:	4618      	mov	r0, r3
 8003444:	3768      	adds	r7, #104	@ 0x68
 8003446:	46bd      	mov	sp, r7
 8003448:	bd80      	pop	{r7, pc}
 800344a:	bf00      	nop
 800344c:	0801aa68 	.word	0x0801aa68
 8003450:	0801aa6c 	.word	0x0801aa6c
 8003454:	0801aa70 	.word	0x0801aa70
 8003458:	0801aa74 	.word	0x0801aa74
 800345c:	0801aa7c 	.word	0x0801aa7c

08003460 <VibeCheckShell_Init>:

#include "vibecheck_shell.h"


void VibeCheckShell_Init(VibeCheckShell* shell)
{
 8003460:	b480      	push	{r7}
 8003462:	b083      	sub	sp, #12
 8003464:	af00      	add	r7, sp, #0
 8003466:	6078      	str	r0, [r7, #4]
	shell->input_head = 0;
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	2200      	movs	r2, #0
 800346c:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
	shell->input_tail = 0;
 8003470:	687b      	ldr	r3, [r7, #4]
 8003472:	2200      	movs	r2, #0
 8003474:	f8c3 2804 	str.w	r2, [r3, #2052]	@ 0x804
	shell->input_count = 0;
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	2200      	movs	r2, #0
 800347c:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
	shell->input_delimiter_count = 0;
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	2200      	movs	r2, #0
 8003484:	f8c3 280c 	str.w	r2, [r3, #2060]	@ 0x80c

	shell->output_head = 0;
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800348e:	461a      	mov	r2, r3
 8003490:	2300      	movs	r3, #0
 8003492:	6113      	str	r3, [r2, #16]
	shell->output_tail = 0;
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800349a:	461a      	mov	r2, r3
 800349c:	2300      	movs	r3, #0
 800349e:	6153      	str	r3, [r2, #20]
	shell->output_count = 0;
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80034a6:	461a      	mov	r2, r3
 80034a8:	2300      	movs	r3, #0
 80034aa:	6193      	str	r3, [r2, #24]

	shell->ih_count = 0;
 80034ac:	687b      	ldr	r3, [r7, #4]
 80034ae:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80034b2:	461a      	mov	r2, r3
 80034b4:	2300      	movs	r3, #0
 80034b6:	f8c2 321c 	str.w	r3, [r2, #540]	@ 0x21c
	shell->oh_count = 0;
 80034ba:	687b      	ldr	r3, [r7, #4]
 80034bc:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80034c0:	461a      	mov	r2, r3
 80034c2:	2300      	movs	r3, #0
 80034c4:	f8c2 3420 	str.w	r3, [r2, #1056]	@ 0x420
}
 80034c8:	bf00      	nop
 80034ca:	370c      	adds	r7, #12
 80034cc:	46bd      	mov	sp, r7
 80034ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034d2:	4770      	bx	lr

080034d4 <VibeCheckShell_Update>:

VibeCheckShell_Status VibeCheckShell_Update(VibeCheckShell* shell)
{
 80034d4:	b590      	push	{r4, r7, lr}
 80034d6:	b099      	sub	sp, #100	@ 0x64
 80034d8:	af00      	add	r7, sp, #0
 80034da:	6078      	str	r0, [r7, #4]

	VibeCheckShell_Status status = {
 80034dc:	2300      	movs	r3, #0
 80034de:	64fb      	str	r3, [r7, #76]	@ 0x4c
			.ibuf_status = VC_SHELL_INPUT_BUFFER_OK,
			.obuf_status = VC_SHELL_OUTPUT_BUFFER_OK
	};

	/* check if character buffer overflow */
	if (shell->input_count >= VC_SHELL_IO_BUF_LEN)
 80034e0:	687b      	ldr	r3, [r7, #4]
 80034e2:	f8d3 3808 	ldr.w	r3, [r3, #2056]	@ 0x808
 80034e6:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80034ea:	d302      	bcc.n	80034f2 <VibeCheckShell_Update+0x1e>
		status.ibuf_status = VC_SHELL_INPUT_BUFFER_OVERFLOW;
 80034ec:	2301      	movs	r3, #1
 80034ee:	f887 304e 	strb.w	r3, [r7, #78]	@ 0x4e


	/* handle the inputs */
	if (shell->input_delimiter_count)
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	f8d3 380c 	ldr.w	r3, [r3, #2060]	@ 0x80c
 80034f8:	2b00      	cmp	r3, #0
 80034fa:	f000 8092 	beq.w	8003622 <VibeCheckShell_Update+0x14e>
		status.ihandl_status = VC_SHELL_INPUT_PROCESSED;
 80034fe:	2301      	movs	r3, #1
 8003500:	f887 304c 	strb.w	r3, [r7, #76]	@ 0x4c

	while (shell->input_delimiter_count)
 8003504:	e08d      	b.n	8003622 <VibeCheckShell_Update+0x14e>
	{
		/* look for a handler */
		char ih_name[VC_SHELL_MAX_TOKEN_LEN];
		if (VibeCheckShell_GetNextString(shell, ih_name, VC_SHELL_MAX_TOKEN_LEN))
 8003506:	f107 030c 	add.w	r3, r7, #12
 800350a:	2240      	movs	r2, #64	@ 0x40
 800350c:	4619      	mov	r1, r3
 800350e:	6878      	ldr	r0, [r7, #4]
 8003510:	f000 f9f8 	bl	8003904 <VibeCheckShell_GetNextString>
 8003514:	4603      	mov	r3, r0
 8003516:	2b00      	cmp	r3, #0
 8003518:	d04d      	beq.n	80035b6 <VibeCheckShell_Update+0xe2>
		{
			for (uint32_t i = 0; i < shell->ih_count; i++)
 800351a:	2300      	movs	r3, #0
 800351c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800351e:	e041      	b.n	80035a4 <VibeCheckShell_Update+0xd0>
			{
				if (!strcmp(shell->input_handlers[i].name, ih_name))
 8003520:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8003522:	4613      	mov	r3, r2
 8003524:	00db      	lsls	r3, r3, #3
 8003526:	4413      	add	r3, r2
 8003528:	00db      	lsls	r3, r3, #3
 800352a:	f241 0218 	movw	r2, #4120	@ 0x1018
 800352e:	441a      	add	r2, r3
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	4413      	add	r3, r2
 8003534:	3304      	adds	r3, #4
 8003536:	f107 020c 	add.w	r2, r7, #12
 800353a:	4611      	mov	r1, r2
 800353c:	4618      	mov	r0, r3
 800353e:	f7fc fee7 	bl	8000310 <strcmp>
 8003542:	4603      	mov	r3, r0
 8003544:	2b00      	cmp	r3, #0
 8003546:	d11e      	bne.n	8003586 <VibeCheckShell_Update+0xb2>
				{
					/* found a handler for this input */
					if (!shell->input_handlers[i].execute(shell->input_handlers[i].obj, shell))
 8003548:	6879      	ldr	r1, [r7, #4]
 800354a:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 800354c:	4613      	mov	r3, r2
 800354e:	00db      	lsls	r3, r3, #3
 8003550:	4413      	add	r3, r2
 8003552:	00db      	lsls	r3, r3, #3
 8003554:	18ca      	adds	r2, r1, r3
 8003556:	f241 035c 	movw	r3, #4188	@ 0x105c
 800355a:	4413      	add	r3, r2
 800355c:	681c      	ldr	r4, [r3, #0]
 800355e:	6879      	ldr	r1, [r7, #4]
 8003560:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8003562:	4613      	mov	r3, r2
 8003564:	00db      	lsls	r3, r3, #3
 8003566:	4413      	add	r3, r2
 8003568:	00db      	lsls	r3, r3, #3
 800356a:	440b      	add	r3, r1
 800356c:	f503 5383 	add.w	r3, r3, #4192	@ 0x1060
 8003570:	681b      	ldr	r3, [r3, #0]
 8003572:	6879      	ldr	r1, [r7, #4]
 8003574:	4618      	mov	r0, r3
 8003576:	47a0      	blx	r4
 8003578:	4603      	mov	r3, r0
 800357a:	2b00      	cmp	r3, #0
 800357c:	d11f      	bne.n	80035be <VibeCheckShell_Update+0xea>
						status.ihandl_status = VC_SHELL_INPUT_ERROR_EXECUTING;
 800357e:	2303      	movs	r3, #3
 8003580:	f887 304c 	strb.w	r3, [r7, #76]	@ 0x4c
					break;
 8003584:	e01b      	b.n	80035be <VibeCheckShell_Update+0xea>
				}

				if (i == shell->ih_count - 1)
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800358c:	f8d3 321c 	ldr.w	r3, [r3, #540]	@ 0x21c
 8003590:	3b01      	subs	r3, #1
 8003592:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8003594:	429a      	cmp	r2, r3
 8003596:	d102      	bne.n	800359e <VibeCheckShell_Update+0xca>
					status.ihandl_status = VC_SHELL_INPUT_ERROR_NO_HANDLER;
 8003598:	2302      	movs	r3, #2
 800359a:	f887 304c 	strb.w	r3, [r7, #76]	@ 0x4c
			for (uint32_t i = 0; i < shell->ih_count; i++)
 800359e:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80035a0:	3301      	adds	r3, #1
 80035a2:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80035a4:	687b      	ldr	r3, [r7, #4]
 80035a6:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80035aa:	f8d3 321c 	ldr.w	r3, [r3, #540]	@ 0x21c
 80035ae:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 80035b0:	429a      	cmp	r2, r3
 80035b2:	d3b5      	bcc.n	8003520 <VibeCheckShell_Update+0x4c>
 80035b4:	e004      	b.n	80035c0 <VibeCheckShell_Update+0xec>
			}
		}
		else
		{
			/* couldn't get a string from the input for handler name */
			status.ihandl_status = VC_SHELL_INPUT_ERROR_NO_HANDLER;
 80035b6:	2302      	movs	r3, #2
 80035b8:	f887 304c 	strb.w	r3, [r7, #76]	@ 0x4c
 80035bc:	e000      	b.n	80035c0 <VibeCheckShell_Update+0xec>
					break;
 80035be:	bf00      	nop
		}

		/* clean up the remainder of the previous message */
		while (1)
		{
			char x = shell->input[shell->input_tail];
 80035c0:	687b      	ldr	r3, [r7, #4]
 80035c2:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
 80035c6:	687a      	ldr	r2, [r7, #4]
 80035c8:	5cd3      	ldrb	r3, [r2, r3]
 80035ca:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57

			shell->input_count--;
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	f8d3 3808 	ldr.w	r3, [r3, #2056]	@ 0x808
 80035d4:	1e5a      	subs	r2, r3, #1
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
			shell->input_tail++;
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
 80035e2:	1c5a      	adds	r2, r3, #1
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	f8c3 2804 	str.w	r2, [r3, #2052]	@ 0x804
			if (shell->input_tail == VC_SHELL_IO_BUF_LEN)
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
 80035f0:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80035f4:	d103      	bne.n	80035fe <VibeCheckShell_Update+0x12a>
				shell->input_tail = 0;
 80035f6:	687b      	ldr	r3, [r7, #4]
 80035f8:	2200      	movs	r2, #0
 80035fa:	f8c3 2804 	str.w	r2, [r3, #2052]	@ 0x804

			if(strchr(VC_SHELL_DELIMITER, x) != NULL)
 80035fe:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 8003602:	4619      	mov	r1, r3
 8003604:	482c      	ldr	r0, [pc, #176]	@ (80036b8 <VibeCheckShell_Update+0x1e4>)
 8003606:	f013 fe70 	bl	80172ea <strchr>
 800360a:	4603      	mov	r3, r0
 800360c:	2b00      	cmp	r3, #0
 800360e:	d100      	bne.n	8003612 <VibeCheckShell_Update+0x13e>
		{
 8003610:	e7d6      	b.n	80035c0 <VibeCheckShell_Update+0xec>
				break;  /* found the delimiter */
 8003612:	bf00      	nop
		}


		shell->input_delimiter_count--;
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	f8d3 380c 	ldr.w	r3, [r3, #2060]	@ 0x80c
 800361a:	1e5a      	subs	r2, r3, #1
 800361c:	687b      	ldr	r3, [r7, #4]
 800361e:	f8c3 280c 	str.w	r2, [r3, #2060]	@ 0x80c
	while (shell->input_delimiter_count)
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	f8d3 380c 	ldr.w	r3, [r3, #2060]	@ 0x80c
 8003628:	2b00      	cmp	r3, #0
 800362a:	f47f af6c 	bne.w	8003506 <VibeCheckShell_Update+0x32>
	}


	/* handle the outputs */
	for (uint32_t i = 0; i < shell->oh_count; i++)
 800362e:	2300      	movs	r3, #0
 8003630:	65bb      	str	r3, [r7, #88]	@ 0x58
 8003632:	e018      	b.n	8003666 <VibeCheckShell_Update+0x192>
	{
		if (shell->output_handlers[i].execute(shell->output_handlers[i].obj, shell))
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8003638:	f202 4244 	addw	r2, r2, #1092	@ 0x444
 800363c:	f853 2032 	ldr.w	r2, [r3, r2, lsl #3]
 8003640:	6879      	ldr	r1, [r7, #4]
 8003642:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8003644:	f203 4344 	addw	r3, r3, #1092	@ 0x444
 8003648:	00db      	lsls	r3, r3, #3
 800364a:	440b      	add	r3, r1
 800364c:	685b      	ldr	r3, [r3, #4]
 800364e:	6879      	ldr	r1, [r7, #4]
 8003650:	4618      	mov	r0, r3
 8003652:	4790      	blx	r2
 8003654:	4603      	mov	r3, r0
 8003656:	2b00      	cmp	r3, #0
 8003658:	d002      	beq.n	8003660 <VibeCheckShell_Update+0x18c>
		{
			status.ohandl_status = VC_SHELL_OUTPUT_PROCESSED;
 800365a:	2301      	movs	r3, #1
 800365c:	f887 304d 	strb.w	r3, [r7, #77]	@ 0x4d
	for (uint32_t i = 0; i < shell->oh_count; i++)
 8003660:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8003662:	3301      	adds	r3, #1
 8003664:	65bb      	str	r3, [r7, #88]	@ 0x58
 8003666:	687b      	ldr	r3, [r7, #4]
 8003668:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800366c:	f8d3 3420 	ldr.w	r3, [r3, #1056]	@ 0x420
 8003670:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8003672:	429a      	cmp	r2, r3
 8003674:	d3de      	bcc.n	8003634 <VibeCheckShell_Update+0x160>
		}
	}

	/* check if character buffer overflow */
	if (shell->output_count >= VC_SHELL_IO_BUF_LEN)
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800367c:	699b      	ldr	r3, [r3, #24]
 800367e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8003682:	d302      	bcc.n	800368a <VibeCheckShell_Update+0x1b6>
		status.obuf_status = VC_SHELL_OUTPUT_BUFFER_OVERFLOW;
 8003684:	2301      	movs	r3, #1
 8003686:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f


	return status;
 800368a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800368c:	653b      	str	r3, [r7, #80]	@ 0x50
 800368e:	2300      	movs	r3, #0
 8003690:	f897 2050 	ldrb.w	r2, [r7, #80]	@ 0x50
 8003694:	f362 0307 	bfi	r3, r2, #0, #8
 8003698:	f897 2051 	ldrb.w	r2, [r7, #81]	@ 0x51
 800369c:	f362 230f 	bfi	r3, r2, #8, #8
 80036a0:	f897 2052 	ldrb.w	r2, [r7, #82]	@ 0x52
 80036a4:	f362 4317 	bfi	r3, r2, #16, #8
 80036a8:	f897 2053 	ldrb.w	r2, [r7, #83]	@ 0x53
 80036ac:	f362 631f 	bfi	r3, r2, #24, #8
}
 80036b0:	4618      	mov	r0, r3
 80036b2:	3764      	adds	r7, #100	@ 0x64
 80036b4:	46bd      	mov	sp, r7
 80036b6:	bd90      	pop	{r4, r7, pc}
 80036b8:	0801aa84 	.word	0x0801aa84

080036bc <VibeCheckShell_RegisterInputHandler>:

void VibeCheckShell_RegisterInputHandler(VibeCheckShell* shell, VibeCheckShell_InputHandler handler)
{
 80036bc:	b084      	sub	sp, #16
 80036be:	b580      	push	{r7, lr}
 80036c0:	b082      	sub	sp, #8
 80036c2:	af00      	add	r7, sp, #0
 80036c4:	6078      	str	r0, [r7, #4]
 80036c6:	f107 0014 	add.w	r0, r7, #20
 80036ca:	e880 000e 	stmia.w	r0, {r1, r2, r3}
	if (shell->ih_count < VC_SHELL_MAX_NUM_HANDLERS)
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80036d4:	f8d3 321c 	ldr.w	r3, [r3, #540]	@ 0x21c
 80036d8:	2b3f      	cmp	r3, #63	@ 0x3f
 80036da:	d81a      	bhi.n	8003712 <VibeCheckShell_RegisterInputHandler+0x56>
		shell->input_handlers[shell->ih_count++] = handler;
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80036e2:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 80036e6:	1c53      	adds	r3, r2, #1
 80036e8:	6879      	ldr	r1, [r7, #4]
 80036ea:	f501 5100 	add.w	r1, r1, #8192	@ 0x2000
 80036ee:	f8c1 321c 	str.w	r3, [r1, #540]	@ 0x21c
 80036f2:	6879      	ldr	r1, [r7, #4]
 80036f4:	4613      	mov	r3, r2
 80036f6:	00db      	lsls	r3, r3, #3
 80036f8:	4413      	add	r3, r2
 80036fa:	00db      	lsls	r3, r3, #3
 80036fc:	18ca      	adds	r2, r1, r3
 80036fe:	f241 0318 	movw	r3, #4120	@ 0x1018
 8003702:	4413      	add	r3, r2
 8003704:	3304      	adds	r3, #4
 8003706:	f107 0114 	add.w	r1, r7, #20
 800370a:	2248      	movs	r2, #72	@ 0x48
 800370c:	4618      	mov	r0, r3
 800370e:	f013 fe82 	bl	8017416 <memcpy>
}
 8003712:	bf00      	nop
 8003714:	3708      	adds	r7, #8
 8003716:	46bd      	mov	sp, r7
 8003718:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800371c:	b004      	add	sp, #16
 800371e:	4770      	bx	lr

08003720 <VibeCheckShell_RegisterOutputHandler>:

void VibeCheckShell_RegisterOutputHandler(VibeCheckShell* shell, VibeCheckShell_OutputHandler handler)
{
 8003720:	b480      	push	{r7}
 8003722:	b085      	sub	sp, #20
 8003724:	af00      	add	r7, sp, #0
 8003726:	60f8      	str	r0, [r7, #12]
 8003728:	1d3b      	adds	r3, r7, #4
 800372a:	e883 0006 	stmia.w	r3, {r1, r2}
	if (shell->oh_count < VC_SHELL_MAX_NUM_HANDLERS)
 800372e:	68fb      	ldr	r3, [r7, #12]
 8003730:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8003734:	f8d3 3420 	ldr.w	r3, [r3, #1056]	@ 0x420
 8003738:	2b3f      	cmp	r3, #63	@ 0x3f
 800373a:	d814      	bhi.n	8003766 <VibeCheckShell_RegisterOutputHandler+0x46>
		shell->output_handlers[shell->oh_count++] = handler;
 800373c:	68fb      	ldr	r3, [r7, #12]
 800373e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8003742:	f8d3 3420 	ldr.w	r3, [r3, #1056]	@ 0x420
 8003746:	1c5a      	adds	r2, r3, #1
 8003748:	68f9      	ldr	r1, [r7, #12]
 800374a:	f501 5100 	add.w	r1, r1, #8192	@ 0x2000
 800374e:	f8c1 2420 	str.w	r2, [r1, #1056]	@ 0x420
 8003752:	68fa      	ldr	r2, [r7, #12]
 8003754:	f203 4344 	addw	r3, r3, #1092	@ 0x444
 8003758:	00db      	lsls	r3, r3, #3
 800375a:	4413      	add	r3, r2
 800375c:	1d3a      	adds	r2, r7, #4
 800375e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8003762:	e883 0003 	stmia.w	r3, {r0, r1}
}
 8003766:	bf00      	nop
 8003768:	3714      	adds	r7, #20
 800376a:	46bd      	mov	sp, r7
 800376c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003770:	4770      	bx	lr
	...

08003774 <VibeCheckShell_PutInput>:

void VibeCheckShell_PutInput(VibeCheckShell* shell, char* input, uint32_t input_max_len)
{
 8003774:	b580      	push	{r7, lr}
 8003776:	b086      	sub	sp, #24
 8003778:	af00      	add	r7, sp, #0
 800377a:	60f8      	str	r0, [r7, #12]
 800377c:	60b9      	str	r1, [r7, #8]
 800377e:	607a      	str	r2, [r7, #4]
	/* add to the input buffer */
	for (uint32_t i = 0; i < input_max_len; i++)
 8003780:	2300      	movs	r3, #0
 8003782:	617b      	str	r3, [r7, #20]
 8003784:	e035      	b.n	80037f2 <VibeCheckShell_PutInput+0x7e>
	{
		if (*input)
 8003786:	68bb      	ldr	r3, [r7, #8]
 8003788:	781b      	ldrb	r3, [r3, #0]
 800378a:	2b00      	cmp	r3, #0
 800378c:	d036      	beq.n	80037fc <VibeCheckShell_PutInput+0x88>
		{
			shell->input[shell->input_head++] = *input;
 800378e:	68fb      	ldr	r3, [r7, #12]
 8003790:	f8d3 3800 	ldr.w	r3, [r3, #2048]	@ 0x800
 8003794:	1c59      	adds	r1, r3, #1
 8003796:	68fa      	ldr	r2, [r7, #12]
 8003798:	f8c2 1800 	str.w	r1, [r2, #2048]	@ 0x800
 800379c:	68ba      	ldr	r2, [r7, #8]
 800379e:	7811      	ldrb	r1, [r2, #0]
 80037a0:	68fa      	ldr	r2, [r7, #12]
 80037a2:	54d1      	strb	r1, [r2, r3]
			if (shell->input_head == VC_SHELL_IO_BUF_LEN)
 80037a4:	68fb      	ldr	r3, [r7, #12]
 80037a6:	f8d3 3800 	ldr.w	r3, [r3, #2048]	@ 0x800
 80037aa:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80037ae:	d103      	bne.n	80037b8 <VibeCheckShell_PutInput+0x44>
					shell->input_head = 0;
 80037b0:	68fb      	ldr	r3, [r7, #12]
 80037b2:	2200      	movs	r2, #0
 80037b4:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
			shell->input_count++;
 80037b8:	68fb      	ldr	r3, [r7, #12]
 80037ba:	f8d3 3808 	ldr.w	r3, [r3, #2056]	@ 0x808
 80037be:	1c5a      	adds	r2, r3, #1
 80037c0:	68fb      	ldr	r3, [r7, #12]
 80037c2:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808

			if (strchr(VC_SHELL_DELIMITER, *input) != NULL)
 80037c6:	68bb      	ldr	r3, [r7, #8]
 80037c8:	781b      	ldrb	r3, [r3, #0]
 80037ca:	4619      	mov	r1, r3
 80037cc:	480e      	ldr	r0, [pc, #56]	@ (8003808 <VibeCheckShell_PutInput+0x94>)
 80037ce:	f013 fd8c 	bl	80172ea <strchr>
 80037d2:	4603      	mov	r3, r0
 80037d4:	2b00      	cmp	r3, #0
 80037d6:	d006      	beq.n	80037e6 <VibeCheckShell_PutInput+0x72>
				shell->input_delimiter_count++;
 80037d8:	68fb      	ldr	r3, [r7, #12]
 80037da:	f8d3 380c 	ldr.w	r3, [r3, #2060]	@ 0x80c
 80037de:	1c5a      	adds	r2, r3, #1
 80037e0:	68fb      	ldr	r3, [r7, #12]
 80037e2:	f8c3 280c 	str.w	r2, [r3, #2060]	@ 0x80c

			input++;
 80037e6:	68bb      	ldr	r3, [r7, #8]
 80037e8:	3301      	adds	r3, #1
 80037ea:	60bb      	str	r3, [r7, #8]
	for (uint32_t i = 0; i < input_max_len; i++)
 80037ec:	697b      	ldr	r3, [r7, #20]
 80037ee:	3301      	adds	r3, #1
 80037f0:	617b      	str	r3, [r7, #20]
 80037f2:	697a      	ldr	r2, [r7, #20]
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	429a      	cmp	r2, r3
 80037f8:	d3c5      	bcc.n	8003786 <VibeCheckShell_PutInput+0x12>
		}
		else
			break;
	}
}
 80037fa:	e000      	b.n	80037fe <VibeCheckShell_PutInput+0x8a>
			break;
 80037fc:	bf00      	nop
}
 80037fe:	bf00      	nop
 8003800:	3718      	adds	r7, #24
 8003802:	46bd      	mov	sp, r7
 8003804:	bd80      	pop	{r7, pc}
 8003806:	bf00      	nop
 8003808:	0801aa84 	.word	0x0801aa84

0800380c <VibeCheckShell_GetOutput>:


uint32_t VibeCheckShell_GetOutput(VibeCheckShell* shell, char** output, uint32_t* len)
{
 800380c:	b480      	push	{r7}
 800380e:	b085      	sub	sp, #20
 8003810:	af00      	add	r7, sp, #0
 8003812:	60f8      	str	r0, [r7, #12]
 8003814:	60b9      	str	r1, [r7, #8]
 8003816:	607a      	str	r2, [r7, #4]
	/* returns true if there is stuff in the output buffer we haven't yet sent */
	if (shell->output_head == shell->output_tail)
 8003818:	68fb      	ldr	r3, [r7, #12]
 800381a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800381e:	691a      	ldr	r2, [r3, #16]
 8003820:	68fb      	ldr	r3, [r7, #12]
 8003822:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003826:	695b      	ldr	r3, [r3, #20]
 8003828:	429a      	cmp	r2, r3
 800382a:	d101      	bne.n	8003830 <VibeCheckShell_GetOutput+0x24>
		return 0;
 800382c:	2300      	movs	r3, #0
 800382e:	e062      	b.n	80038f6 <VibeCheckShell_GetOutput+0xea>

	if (shell->output_head > shell->output_tail)
 8003830:	68fb      	ldr	r3, [r7, #12]
 8003832:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003836:	691a      	ldr	r2, [r3, #16]
 8003838:	68fb      	ldr	r3, [r7, #12]
 800383a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800383e:	695b      	ldr	r3, [r3, #20]
 8003840:	429a      	cmp	r2, r3
 8003842:	d930      	bls.n	80038a6 <VibeCheckShell_GetOutput+0x9a>
	{
		/* the output doesn't wrap so send it 'normally' */
		*output = &shell->output[shell->output_tail];
 8003844:	68fb      	ldr	r3, [r7, #12]
 8003846:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800384a:	695b      	ldr	r3, [r3, #20]
 800384c:	f503 6301 	add.w	r3, r3, #2064	@ 0x810
 8003850:	68fa      	ldr	r2, [r7, #12]
 8003852:	441a      	add	r2, r3
 8003854:	68bb      	ldr	r3, [r7, #8]
 8003856:	601a      	str	r2, [r3, #0]
		*len = shell->output_head - shell->output_tail;
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800385e:	691a      	ldr	r2, [r3, #16]
 8003860:	68fb      	ldr	r3, [r7, #12]
 8003862:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003866:	695b      	ldr	r3, [r3, #20]
 8003868:	1ad2      	subs	r2, r2, r3
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	601a      	str	r2, [r3, #0]
		shell->output_count -= shell->output_head - shell->output_tail;
 800386e:	68fb      	ldr	r3, [r7, #12]
 8003870:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003874:	699a      	ldr	r2, [r3, #24]
 8003876:	68fb      	ldr	r3, [r7, #12]
 8003878:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800387c:	6959      	ldr	r1, [r3, #20]
 800387e:	68fb      	ldr	r3, [r7, #12]
 8003880:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003884:	691b      	ldr	r3, [r3, #16]
 8003886:	1acb      	subs	r3, r1, r3
 8003888:	4413      	add	r3, r2
 800388a:	68fa      	ldr	r2, [r7, #12]
 800388c:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 8003890:	6193      	str	r3, [r2, #24]
		shell->output_tail = shell->output_head;
 8003892:	68fb      	ldr	r3, [r7, #12]
 8003894:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003898:	691b      	ldr	r3, [r3, #16]
 800389a:	68fa      	ldr	r2, [r7, #12]
 800389c:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 80038a0:	6153      	str	r3, [r2, #20]
		return 1;
 80038a2:	2301      	movs	r3, #1
 80038a4:	e027      	b.n	80038f6 <VibeCheckShell_GetOutput+0xea>
	}
	else
	{
		/* the output wraps: only return up to the end of the buffer region so our output is contiguous in memory */
		*output = &shell->output[shell->output_tail];
 80038a6:	68fb      	ldr	r3, [r7, #12]
 80038a8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80038ac:	695b      	ldr	r3, [r3, #20]
 80038ae:	f503 6301 	add.w	r3, r3, #2064	@ 0x810
 80038b2:	68fa      	ldr	r2, [r7, #12]
 80038b4:	441a      	add	r2, r3
 80038b6:	68bb      	ldr	r3, [r7, #8]
 80038b8:	601a      	str	r2, [r3, #0]
		*len = VC_SHELL_IO_BUF_LEN - shell->output_tail;
 80038ba:	68fb      	ldr	r3, [r7, #12]
 80038bc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80038c0:	695b      	ldr	r3, [r3, #20]
 80038c2:	f5c3 6200 	rsb	r2, r3, #2048	@ 0x800
 80038c6:	687b      	ldr	r3, [r7, #4]
 80038c8:	601a      	str	r2, [r3, #0]
		shell->output_count -= VC_SHELL_IO_BUF_LEN - shell->output_tail;
 80038ca:	68fb      	ldr	r3, [r7, #12]
 80038cc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80038d0:	699a      	ldr	r2, [r3, #24]
 80038d2:	68fb      	ldr	r3, [r7, #12]
 80038d4:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80038d8:	695b      	ldr	r3, [r3, #20]
 80038da:	4413      	add	r3, r2
 80038dc:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 80038e0:	68fa      	ldr	r2, [r7, #12]
 80038e2:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 80038e6:	6193      	str	r3, [r2, #24]
		shell->output_tail = 0;
 80038e8:	68fb      	ldr	r3, [r7, #12]
 80038ea:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80038ee:	461a      	mov	r2, r3
 80038f0:	2300      	movs	r3, #0
 80038f2:	6153      	str	r3, [r2, #20]
		return 1;
 80038f4:	2301      	movs	r3, #1
	}

}
 80038f6:	4618      	mov	r0, r3
 80038f8:	3714      	adds	r7, #20
 80038fa:	46bd      	mov	sp, r7
 80038fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003900:	4770      	bx	lr
	...

08003904 <VibeCheckShell_GetNextString>:


/* these return true if they successfully get the next token */
uint32_t VibeCheckShell_GetNextString(VibeCheckShell* shell, char* next, uint32_t max_len)
{
 8003904:	b580      	push	{r7, lr}
 8003906:	b086      	sub	sp, #24
 8003908:	af00      	add	r7, sp, #0
 800390a:	60f8      	str	r0, [r7, #12]
 800390c:	60b9      	str	r1, [r7, #8]
 800390e:	607a      	str	r2, [r7, #4]

	for (uint32_t i = 0; i < max_len; )
 8003910:	2300      	movs	r3, #0
 8003912:	617b      	str	r3, [r7, #20]
 8003914:	e057      	b.n	80039c6 <VibeCheckShell_GetNextString+0xc2>
	{

		char x = shell->input[shell->input_tail];
 8003916:	68fb      	ldr	r3, [r7, #12]
 8003918:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
 800391c:	68fa      	ldr	r2, [r7, #12]
 800391e:	5cd3      	ldrb	r3, [r2, r3]
 8003920:	74fb      	strb	r3, [r7, #19]

		if (strchr(VC_SHELL_DELIMITER, x) != NULL)
 8003922:	7cfb      	ldrb	r3, [r7, #19]
 8003924:	4619      	mov	r1, r3
 8003926:	482c      	ldr	r0, [pc, #176]	@ (80039d8 <VibeCheckShell_GetNextString+0xd4>)
 8003928:	f013 fcdf 	bl	80172ea <strchr>
 800392c:	4603      	mov	r3, r0
 800392e:	2b00      	cmp	r3, #0
 8003930:	d009      	beq.n	8003946 <VibeCheckShell_GetNextString+0x42>
		{
			/* this is a delimiter */
			if (i)  /* we have something in the token so return it */
 8003932:	697b      	ldr	r3, [r7, #20]
 8003934:	2b00      	cmp	r3, #0
 8003936:	d004      	beq.n	8003942 <VibeCheckShell_GetNextString+0x3e>
			{
				*next = '\0';
 8003938:	68bb      	ldr	r3, [r7, #8]
 800393a:	2200      	movs	r2, #0
 800393c:	701a      	strb	r2, [r3, #0]
				return 1;
 800393e:	2301      	movs	r3, #1
 8003940:	e046      	b.n	80039d0 <VibeCheckShell_GetNextString+0xcc>
			}
			else
				return 0;  /* don't go any further than the delimiter */
 8003942:	2300      	movs	r3, #0
 8003944:	e044      	b.n	80039d0 <VibeCheckShell_GetNextString+0xcc>
		}
		else
		{
			shell->input_count--;
 8003946:	68fb      	ldr	r3, [r7, #12]
 8003948:	f8d3 3808 	ldr.w	r3, [r3, #2056]	@ 0x808
 800394c:	1e5a      	subs	r2, r3, #1
 800394e:	68fb      	ldr	r3, [r7, #12]
 8003950:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
			shell->input_tail++;
 8003954:	68fb      	ldr	r3, [r7, #12]
 8003956:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
 800395a:	1c5a      	adds	r2, r3, #1
 800395c:	68fb      	ldr	r3, [r7, #12]
 800395e:	f8c3 2804 	str.w	r2, [r3, #2052]	@ 0x804
			if (shell->input_tail == VC_SHELL_IO_BUF_LEN)
 8003962:	68fb      	ldr	r3, [r7, #12]
 8003964:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
 8003968:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800396c:	d103      	bne.n	8003976 <VibeCheckShell_GetNextString+0x72>
				shell->input_tail = 0;
 800396e:	68fb      	ldr	r3, [r7, #12]
 8003970:	2200      	movs	r2, #0
 8003972:	f8c3 2804 	str.w	r2, [r3, #2052]	@ 0x804

			if (strchr(VC_SHELL_INPUT_SEPARATORS, x) != NULL)
 8003976:	7cfb      	ldrb	r3, [r7, #19]
 8003978:	4619      	mov	r1, r3
 800397a:	4818      	ldr	r0, [pc, #96]	@ (80039dc <VibeCheckShell_GetNextString+0xd8>)
 800397c:	f013 fcb5 	bl	80172ea <strchr>
 8003980:	4603      	mov	r3, r0
 8003982:	2b00      	cmp	r3, #0
 8003984:	d007      	beq.n	8003996 <VibeCheckShell_GetNextString+0x92>
			{
				/* this is a separator */
				if (i) /* if we have something in the token return it, otherwise just continue in order to skip leading separators */
 8003986:	697b      	ldr	r3, [r7, #20]
 8003988:	2b00      	cmp	r3, #0
 800398a:	d01c      	beq.n	80039c6 <VibeCheckShell_GetNextString+0xc2>
				{
					*next = '\0';
 800398c:	68bb      	ldr	r3, [r7, #8]
 800398e:	2200      	movs	r2, #0
 8003990:	701a      	strb	r2, [r3, #0]
					return 1;
 8003992:	2301      	movs	r3, #1
 8003994:	e01c      	b.n	80039d0 <VibeCheckShell_GetNextString+0xcc>
				}
			}
			else
			{
				/* this is a character */
				*(next++) = tolower(x);  /* turn to all lower case letters */
 8003996:	7cfb      	ldrb	r3, [r7, #19]
 8003998:	74bb      	strb	r3, [r7, #18]
 800399a:	7cbb      	ldrb	r3, [r7, #18]
 800399c:	3301      	adds	r3, #1
 800399e:	4a10      	ldr	r2, [pc, #64]	@ (80039e0 <VibeCheckShell_GetNextString+0xdc>)
 80039a0:	4413      	add	r3, r2
 80039a2:	781b      	ldrb	r3, [r3, #0]
 80039a4:	f003 0303 	and.w	r3, r3, #3
 80039a8:	2b01      	cmp	r3, #1
 80039aa:	d103      	bne.n	80039b4 <VibeCheckShell_GetNextString+0xb0>
 80039ac:	7cbb      	ldrb	r3, [r7, #18]
 80039ae:	f103 0220 	add.w	r2, r3, #32
 80039b2:	e000      	b.n	80039b6 <VibeCheckShell_GetNextString+0xb2>
 80039b4:	7cba      	ldrb	r2, [r7, #18]
 80039b6:	68bb      	ldr	r3, [r7, #8]
 80039b8:	1c59      	adds	r1, r3, #1
 80039ba:	60b9      	str	r1, [r7, #8]
 80039bc:	b2d2      	uxtb	r2, r2
 80039be:	701a      	strb	r2, [r3, #0]
				i++;
 80039c0:	697b      	ldr	r3, [r7, #20]
 80039c2:	3301      	adds	r3, #1
 80039c4:	617b      	str	r3, [r7, #20]
	for (uint32_t i = 0; i < max_len; )
 80039c6:	697a      	ldr	r2, [r7, #20]
 80039c8:	687b      	ldr	r3, [r7, #4]
 80039ca:	429a      	cmp	r2, r3
 80039cc:	d3a3      	bcc.n	8003916 <VibeCheckShell_GetNextString+0x12>
			}
		}
	}

	return 0;
 80039ce:	2300      	movs	r3, #0
}
 80039d0:	4618      	mov	r0, r3
 80039d2:	3718      	adds	r7, #24
 80039d4:	46bd      	mov	sp, r7
 80039d6:	bd80      	pop	{r7, pc}
 80039d8:	0801aa84 	.word	0x0801aa84
 80039dc:	0801aa88 	.word	0x0801aa88
 80039e0:	0801b0e0 	.word	0x0801b0e0

080039e4 <VibeCheckShell_GetNextInt>:


uint32_t VibeCheckShell_GetNextInt(VibeCheckShell* shell, int32_t* next)
{
 80039e4:	b580      	push	{r7, lr}
 80039e6:	b096      	sub	sp, #88	@ 0x58
 80039e8:	af00      	add	r7, sp, #0
 80039ea:	6078      	str	r0, [r7, #4]
 80039ec:	6039      	str	r1, [r7, #0]
	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 80039ee:	f107 0314 	add.w	r3, r7, #20
 80039f2:	2240      	movs	r2, #64	@ 0x40
 80039f4:	4619      	mov	r1, r3
 80039f6:	6878      	ldr	r0, [r7, #4]
 80039f8:	f7ff ff84 	bl	8003904 <VibeCheckShell_GetNextString>
 80039fc:	4603      	mov	r3, r0
 80039fe:	2b00      	cmp	r3, #0
 8003a00:	d02f      	beq.n	8003a62 <VibeCheckShell_GetNextInt+0x7e>
	{
		char valid[] = "-0123456789";
 8003a02:	4a1a      	ldr	r2, [pc, #104]	@ (8003a6c <VibeCheckShell_GetNextInt+0x88>)
 8003a04:	f107 0308 	add.w	r3, r7, #8
 8003a08:	ca07      	ldmia	r2, {r0, r1, r2}
 8003a0a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
		for (uint32_t i = 0; i < strlen(str); i++)
 8003a0e:	2300      	movs	r3, #0
 8003a10:	657b      	str	r3, [r7, #84]	@ 0x54
 8003a12:	e013      	b.n	8003a3c <VibeCheckShell_GetNextInt+0x58>
			if (strchr(valid, str[i]) == NULL)
 8003a14:	f107 0214 	add.w	r2, r7, #20
 8003a18:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003a1a:	4413      	add	r3, r2
 8003a1c:	781b      	ldrb	r3, [r3, #0]
 8003a1e:	461a      	mov	r2, r3
 8003a20:	f107 0308 	add.w	r3, r7, #8
 8003a24:	4611      	mov	r1, r2
 8003a26:	4618      	mov	r0, r3
 8003a28:	f013 fc5f 	bl	80172ea <strchr>
 8003a2c:	4603      	mov	r3, r0
 8003a2e:	2b00      	cmp	r3, #0
 8003a30:	d101      	bne.n	8003a36 <VibeCheckShell_GetNextInt+0x52>
				return 0;  /* next token contains non-numeric characters */
 8003a32:	2300      	movs	r3, #0
 8003a34:	e016      	b.n	8003a64 <VibeCheckShell_GetNextInt+0x80>
		for (uint32_t i = 0; i < strlen(str); i++)
 8003a36:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003a38:	3301      	adds	r3, #1
 8003a3a:	657b      	str	r3, [r7, #84]	@ 0x54
 8003a3c:	f107 0314 	add.w	r3, r7, #20
 8003a40:	4618      	mov	r0, r3
 8003a42:	f7fc fcc5 	bl	80003d0 <strlen>
 8003a46:	4602      	mov	r2, r0
 8003a48:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003a4a:	4293      	cmp	r3, r2
 8003a4c:	d3e2      	bcc.n	8003a14 <VibeCheckShell_GetNextInt+0x30>
		*next = atoi(str);
 8003a4e:	f107 0314 	add.w	r3, r7, #20
 8003a52:	4618      	mov	r0, r3
 8003a54:	f012 f89f 	bl	8015b96 <atoi>
 8003a58:	4602      	mov	r2, r0
 8003a5a:	683b      	ldr	r3, [r7, #0]
 8003a5c:	601a      	str	r2, [r3, #0]
		return 1;
 8003a5e:	2301      	movs	r3, #1
 8003a60:	e000      	b.n	8003a64 <VibeCheckShell_GetNextInt+0x80>
	}

	return 0;
 8003a62:	2300      	movs	r3, #0
}
 8003a64:	4618      	mov	r0, r3
 8003a66:	3758      	adds	r7, #88	@ 0x58
 8003a68:	46bd      	mov	sp, r7
 8003a6a:	bd80      	pop	{r7, pc}
 8003a6c:	0801aa8c 	.word	0x0801aa8c

08003a70 <VibeCheckShell_GetNextFloat>:


uint32_t VibeCheckShell_GetNextFloat(VibeCheckShell* shell, float* next)
{
 8003a70:	b590      	push	{r4, r7, lr}
 8003a72:	b099      	sub	sp, #100	@ 0x64
 8003a74:	af00      	add	r7, sp, #0
 8003a76:	6078      	str	r0, [r7, #4]
 8003a78:	6039      	str	r1, [r7, #0]
	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8003a7a:	f107 031c 	add.w	r3, r7, #28
 8003a7e:	2240      	movs	r2, #64	@ 0x40
 8003a80:	4619      	mov	r1, r3
 8003a82:	6878      	ldr	r0, [r7, #4]
 8003a84:	f7ff ff3e 	bl	8003904 <VibeCheckShell_GetNextString>
 8003a88:	4603      	mov	r3, r0
 8003a8a:	2b00      	cmp	r3, #0
 8003a8c:	d033      	beq.n	8003af6 <VibeCheckShell_GetNextFloat+0x86>
	{
		char valid[] = ".-0123456789";
 8003a8e:	4b1c      	ldr	r3, [pc, #112]	@ (8003b00 <VibeCheckShell_GetNextFloat+0x90>)
 8003a90:	f107 040c 	add.w	r4, r7, #12
 8003a94:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8003a96:	c407      	stmia	r4!, {r0, r1, r2}
 8003a98:	7023      	strb	r3, [r4, #0]
		for (uint32_t i = 0; i < strlen(str); i++)
 8003a9a:	2300      	movs	r3, #0
 8003a9c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003a9e:	e013      	b.n	8003ac8 <VibeCheckShell_GetNextFloat+0x58>
			if (strchr(valid, str[i]) == NULL)
 8003aa0:	f107 021c 	add.w	r2, r7, #28
 8003aa4:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8003aa6:	4413      	add	r3, r2
 8003aa8:	781b      	ldrb	r3, [r3, #0]
 8003aaa:	461a      	mov	r2, r3
 8003aac:	f107 030c 	add.w	r3, r7, #12
 8003ab0:	4611      	mov	r1, r2
 8003ab2:	4618      	mov	r0, r3
 8003ab4:	f013 fc19 	bl	80172ea <strchr>
 8003ab8:	4603      	mov	r3, r0
 8003aba:	2b00      	cmp	r3, #0
 8003abc:	d101      	bne.n	8003ac2 <VibeCheckShell_GetNextFloat+0x52>
				return 0;  /* next token contains non-numeric characters */
 8003abe:	2300      	movs	r3, #0
 8003ac0:	e01a      	b.n	8003af8 <VibeCheckShell_GetNextFloat+0x88>
		for (uint32_t i = 0; i < strlen(str); i++)
 8003ac2:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8003ac4:	3301      	adds	r3, #1
 8003ac6:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003ac8:	f107 031c 	add.w	r3, r7, #28
 8003acc:	4618      	mov	r0, r3
 8003ace:	f7fc fc7f 	bl	80003d0 <strlen>
 8003ad2:	4602      	mov	r2, r0
 8003ad4:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8003ad6:	4293      	cmp	r3, r2
 8003ad8:	d3e2      	bcc.n	8003aa0 <VibeCheckShell_GetNextFloat+0x30>
		*next = atof(str);
 8003ada:	f107 031c 	add.w	r3, r7, #28
 8003ade:	4618      	mov	r0, r3
 8003ae0:	f012 f856 	bl	8015b90 <atof>
 8003ae4:	eeb0 7b40 	vmov.f64	d7, d0
 8003ae8:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8003aec:	683b      	ldr	r3, [r7, #0]
 8003aee:	edc3 7a00 	vstr	s15, [r3]
		return 1;
 8003af2:	2301      	movs	r3, #1
 8003af4:	e000      	b.n	8003af8 <VibeCheckShell_GetNextFloat+0x88>
	}

	return 0;
 8003af6:	2300      	movs	r3, #0
}
 8003af8:	4618      	mov	r0, r3
 8003afa:	3764      	adds	r7, #100	@ 0x64
 8003afc:	46bd      	mov	sp, r7
 8003afe:	bd90      	pop	{r4, r7, pc}
 8003b00:	0801aa98 	.word	0x0801aa98

08003b04 <VibeCheckShell_PutOutputString>:



/* add things to the output */
void VibeCheckShell_PutOutputString(VibeCheckShell* shell, char* str)
{
 8003b04:	b480      	push	{r7}
 8003b06:	b083      	sub	sp, #12
 8003b08:	af00      	add	r7, sp, #0
 8003b0a:	6078      	str	r0, [r7, #4]
 8003b0c:	6039      	str	r1, [r7, #0]
	while (*str)
 8003b0e:	e027      	b.n	8003b60 <VibeCheckShell_PutOutputString+0x5c>
	{
		shell->output[shell->output_head++] = *(str++);
 8003b10:	683a      	ldr	r2, [r7, #0]
 8003b12:	1c53      	adds	r3, r2, #1
 8003b14:	603b      	str	r3, [r7, #0]
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003b1c:	691b      	ldr	r3, [r3, #16]
 8003b1e:	1c59      	adds	r1, r3, #1
 8003b20:	6878      	ldr	r0, [r7, #4]
 8003b22:	f500 5080 	add.w	r0, r0, #4096	@ 0x1000
 8003b26:	6101      	str	r1, [r0, #16]
 8003b28:	7811      	ldrb	r1, [r2, #0]
 8003b2a:	687a      	ldr	r2, [r7, #4]
 8003b2c:	4413      	add	r3, r2
 8003b2e:	460a      	mov	r2, r1
 8003b30:	f883 2810 	strb.w	r2, [r3, #2064]	@ 0x810
		shell->output_count++;
 8003b34:	687b      	ldr	r3, [r7, #4]
 8003b36:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003b3a:	699b      	ldr	r3, [r3, #24]
 8003b3c:	3301      	adds	r3, #1
 8003b3e:	687a      	ldr	r2, [r7, #4]
 8003b40:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 8003b44:	6193      	str	r3, [r2, #24]
		if (shell->output_head == VC_SHELL_IO_BUF_LEN)
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003b4c:	691b      	ldr	r3, [r3, #16]
 8003b4e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8003b52:	d105      	bne.n	8003b60 <VibeCheckShell_PutOutputString+0x5c>
			shell->output_head = 0;
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8003b5a:	461a      	mov	r2, r3
 8003b5c:	2300      	movs	r3, #0
 8003b5e:	6113      	str	r3, [r2, #16]
	while (*str)
 8003b60:	683b      	ldr	r3, [r7, #0]
 8003b62:	781b      	ldrb	r3, [r3, #0]
 8003b64:	2b00      	cmp	r3, #0
 8003b66:	d1d3      	bne.n	8003b10 <VibeCheckShell_PutOutputString+0xc>
	}
}
 8003b68:	bf00      	nop
 8003b6a:	bf00      	nop
 8003b6c:	370c      	adds	r7, #12
 8003b6e:	46bd      	mov	sp, r7
 8003b70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b74:	4770      	bx	lr
	...

08003b78 <VibeCheckShell_PutOutputInt>:

void VibeCheckShell_PutOutputInt(VibeCheckShell* shell, uint32_t val)
{
 8003b78:	b580      	push	{r7, lr}
 8003b7a:	b092      	sub	sp, #72	@ 0x48
 8003b7c:	af00      	add	r7, sp, #0
 8003b7e:	6078      	str	r0, [r7, #4]
 8003b80:	6039      	str	r1, [r7, #0]
	char str[VC_SHELL_MAX_TOKEN_LEN];
	sprintf(str, "%ld", val);
 8003b82:	f107 0308 	add.w	r3, r7, #8
 8003b86:	683a      	ldr	r2, [r7, #0]
 8003b88:	4906      	ldr	r1, [pc, #24]	@ (8003ba4 <VibeCheckShell_PutOutputInt+0x2c>)
 8003b8a:	4618      	mov	r0, r3
 8003b8c:	f013 fb42 	bl	8017214 <siprintf>
	VibeCheckShell_PutOutputString(shell, str);
 8003b90:	f107 0308 	add.w	r3, r7, #8
 8003b94:	4619      	mov	r1, r3
 8003b96:	6878      	ldr	r0, [r7, #4]
 8003b98:	f7ff ffb4 	bl	8003b04 <VibeCheckShell_PutOutputString>
}
 8003b9c:	bf00      	nop
 8003b9e:	3748      	adds	r7, #72	@ 0x48
 8003ba0:	46bd      	mov	sp, r7
 8003ba2:	bd80      	pop	{r7, pc}
 8003ba4:	0801aaa8 	.word	0x0801aaa8

08003ba8 <VibeCheckShell_PutOutputFloat>:

void VibeCheckShell_PutOutputFloat(VibeCheckShell* shell, float val)
{
 8003ba8:	b580      	push	{r7, lr}
 8003baa:	b092      	sub	sp, #72	@ 0x48
 8003bac:	af00      	add	r7, sp, #0
 8003bae:	6078      	str	r0, [r7, #4]
 8003bb0:	ed87 0a00 	vstr	s0, [r7]
	char str[VC_SHELL_MAX_TOKEN_LEN];
	sprintf(str, "%f", val);
 8003bb4:	edd7 7a00 	vldr	s15, [r7]
 8003bb8:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8003bbc:	f107 0008 	add.w	r0, r7, #8
 8003bc0:	ec53 2b17 	vmov	r2, r3, d7
 8003bc4:	4906      	ldr	r1, [pc, #24]	@ (8003be0 <VibeCheckShell_PutOutputFloat+0x38>)
 8003bc6:	f013 fb25 	bl	8017214 <siprintf>
	VibeCheckShell_PutOutputString(shell, str);
 8003bca:	f107 0308 	add.w	r3, r7, #8
 8003bce:	4619      	mov	r1, r3
 8003bd0:	6878      	ldr	r0, [r7, #4]
 8003bd2:	f7ff ff97 	bl	8003b04 <VibeCheckShell_PutOutputString>
}
 8003bd6:	bf00      	nop
 8003bd8:	3748      	adds	r7, #72	@ 0x48
 8003bda:	46bd      	mov	sp, r7
 8003bdc:	bd80      	pop	{r7, pc}
 8003bde:	bf00      	nop
 8003be0:	0801aaac 	.word	0x0801aaac

08003be4 <VibeCheckShell_PutOutputSeparator>:

void VibeCheckShell_PutOutputSeparator(VibeCheckShell* shell)
{
 8003be4:	b580      	push	{r7, lr}
 8003be6:	b082      	sub	sp, #8
 8003be8:	af00      	add	r7, sp, #0
 8003bea:	6078      	str	r0, [r7, #4]
	VibeCheckShell_PutOutputString(shell, VC_SHELL_OUTPUT_SEPARATOR);
 8003bec:	4903      	ldr	r1, [pc, #12]	@ (8003bfc <VibeCheckShell_PutOutputSeparator+0x18>)
 8003bee:	6878      	ldr	r0, [r7, #4]
 8003bf0:	f7ff ff88 	bl	8003b04 <VibeCheckShell_PutOutputString>
}
 8003bf4:	bf00      	nop
 8003bf6:	3708      	adds	r7, #8
 8003bf8:	46bd      	mov	sp, r7
 8003bfa:	bd80      	pop	{r7, pc}
 8003bfc:	0801aab0 	.word	0x0801aab0

08003c00 <VibeCheckShell_PutOutputDelimiter>:

void VibeCheckShell_PutOutputDelimiter(VibeCheckShell* shell)
{
 8003c00:	b580      	push	{r7, lr}
 8003c02:	b082      	sub	sp, #8
 8003c04:	af00      	add	r7, sp, #0
 8003c06:	6078      	str	r0, [r7, #4]
	VibeCheckShell_PutOutputString(shell, VC_SHELL_DELIMITER);
 8003c08:	4903      	ldr	r1, [pc, #12]	@ (8003c18 <VibeCheckShell_PutOutputDelimiter+0x18>)
 8003c0a:	6878      	ldr	r0, [r7, #4]
 8003c0c:	f7ff ff7a 	bl	8003b04 <VibeCheckShell_PutOutputString>
}
 8003c10:	bf00      	nop
 8003c12:	3708      	adds	r7, #8
 8003c14:	46bd      	mov	sp, r7
 8003c16:	bd80      	pop	{r7, pc}
 8003c18:	0801aa84 	.word	0x0801aa84

08003c1c <VibeCheckStrobe_Init>:

#include "vibecheck_strobe.h"


void VibeCheckStrobe_Init(VibeCheckStrobe* strobe, TIM_HandleTypeDef* htim)
{
 8003c1c:	b580      	push	{r7, lr}
 8003c1e:	b082      	sub	sp, #8
 8003c20:	af00      	add	r7, sp, #0
 8003c22:	6078      	str	r0, [r7, #4]
 8003c24:	6039      	str	r1, [r7, #0]
	strobe->htim = htim;
 8003c26:	687b      	ldr	r3, [r7, #4]
 8003c28:	683a      	ldr	r2, [r7, #0]
 8003c2a:	601a      	str	r2, [r3, #0]
	strobe->freq_hz = VC_STROBE_MIN_FREQ_HZ;
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8003c32:	605a      	str	r2, [r3, #4]
	strobe->exposure_ms = 1.0f;
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8003c3a:	609a      	str	r2, [r3, #8]
	strobe->phase_deg = 0.0f;
 8003c3c:	687b      	ldr	r3, [r7, #4]
 8003c3e:	f04f 0200 	mov.w	r2, #0
 8003c42:	60da      	str	r2, [r3, #12]

	/* set up the timer registers */
	strobe->htim->Instance->PSC = VC_STROBE_TIM_PSC - 1;
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	681b      	ldr	r3, [r3, #0]
 8003c4a:	f640 125f 	movw	r2, #2399	@ 0x95f
 8003c4e:	629a      	str	r2, [r3, #40]	@ 0x28

	VibeCheckStrobe_SetFrequency(strobe, strobe->freq_hz);
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	edd3 7a01 	vldr	s15, [r3, #4]
 8003c56:	eeb0 0a67 	vmov.f32	s0, s15
 8003c5a:	6878      	ldr	r0, [r7, #4]
 8003c5c:	f000 f84a 	bl	8003cf4 <VibeCheckStrobe_SetFrequency>
	VibeCheckStrobe_SetExposure(strobe, strobe->exposure_ms);
 8003c60:	687b      	ldr	r3, [r7, #4]
 8003c62:	edd3 7a02 	vldr	s15, [r3, #8]
 8003c66:	eeb0 0a67 	vmov.f32	s0, s15
 8003c6a:	6878      	ldr	r0, [r7, #4]
 8003c6c:	f000 f928 	bl	8003ec0 <VibeCheckStrobe_SetExposure>

}
 8003c70:	bf00      	nop
 8003c72:	3708      	adds	r7, #8
 8003c74:	46bd      	mov	sp, r7
 8003c76:	bd80      	pop	{r7, pc}

08003c78 <VibeCheckStrobe_Start>:

void VibeCheckStrobe_Start(VibeCheckStrobe* strobe)
{
 8003c78:	b580      	push	{r7, lr}
 8003c7a:	b082      	sub	sp, #8
 8003c7c:	af00      	add	r7, sp, #0
 8003c7e:	6078      	str	r0, [r7, #4]
	/* start the timers with interrupts when period completes */
	HAL_TIM_Base_Start_IT(strobe->htim);
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	681b      	ldr	r3, [r3, #0]
 8003c84:	4618      	mov	r0, r3
 8003c86:	f00a ff41 	bl	800eb0c <HAL_TIM_Base_Start_IT>
	HAL_TIM_PWM_Start(strobe->htim, TIM_CHANNEL_1);
 8003c8a:	687b      	ldr	r3, [r7, #4]
 8003c8c:	681b      	ldr	r3, [r3, #0]
 8003c8e:	2100      	movs	r1, #0
 8003c90:	4618      	mov	r0, r3
 8003c92:	f00b f823 	bl	800ecdc <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(strobe->htim, TIM_CHANNEL_2);
 8003c96:	687b      	ldr	r3, [r7, #4]
 8003c98:	681b      	ldr	r3, [r3, #0]
 8003c9a:	2104      	movs	r1, #4
 8003c9c:	4618      	mov	r0, r3
 8003c9e:	f00b f81d 	bl	800ecdc <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(strobe->htim, TIM_CHANNEL_3);
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	681b      	ldr	r3, [r3, #0]
 8003ca6:	2108      	movs	r1, #8
 8003ca8:	4618      	mov	r0, r3
 8003caa:	f00b f817 	bl	800ecdc <HAL_TIM_PWM_Start>
}
 8003cae:	bf00      	nop
 8003cb0:	3708      	adds	r7, #8
 8003cb2:	46bd      	mov	sp, r7
 8003cb4:	bd80      	pop	{r7, pc}

08003cb6 <VibeCheckStrobe_Stop>:

void VibeCheckStrobe_Stop(VibeCheckStrobe* strobe)
{
 8003cb6:	b580      	push	{r7, lr}
 8003cb8:	b082      	sub	sp, #8
 8003cba:	af00      	add	r7, sp, #0
 8003cbc:	6078      	str	r0, [r7, #4]
	HAL_TIM_Base_Start_IT(strobe->htim);
 8003cbe:	687b      	ldr	r3, [r7, #4]
 8003cc0:	681b      	ldr	r3, [r3, #0]
 8003cc2:	4618      	mov	r0, r3
 8003cc4:	f00a ff22 	bl	800eb0c <HAL_TIM_Base_Start_IT>
	HAL_TIM_PWM_Stop(strobe->htim, TIM_CHANNEL_1);
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	681b      	ldr	r3, [r3, #0]
 8003ccc:	2100      	movs	r1, #0
 8003cce:	4618      	mov	r0, r3
 8003cd0:	f00b f920 	bl	800ef14 <HAL_TIM_PWM_Stop>
	HAL_TIM_PWM_Stop(strobe->htim, TIM_CHANNEL_2);
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	2104      	movs	r1, #4
 8003cda:	4618      	mov	r0, r3
 8003cdc:	f00b f91a 	bl	800ef14 <HAL_TIM_PWM_Stop>
	HAL_TIM_PWM_Stop(strobe->htim, TIM_CHANNEL_3);
 8003ce0:	687b      	ldr	r3, [r7, #4]
 8003ce2:	681b      	ldr	r3, [r3, #0]
 8003ce4:	2108      	movs	r1, #8
 8003ce6:	4618      	mov	r0, r3
 8003ce8:	f00b f914 	bl	800ef14 <HAL_TIM_PWM_Stop>
}
 8003cec:	bf00      	nop
 8003cee:	3708      	adds	r7, #8
 8003cf0:	46bd      	mov	sp, r7
 8003cf2:	bd80      	pop	{r7, pc}

08003cf4 <VibeCheckStrobe_SetFrequency>:

void VibeCheckStrobe_SetFrequency(VibeCheckStrobe* strobe, float freq_hz)
{
 8003cf4:	b480      	push	{r7}
 8003cf6:	b083      	sub	sp, #12
 8003cf8:	af00      	add	r7, sp, #0
 8003cfa:	6078      	str	r0, [r7, #4]
 8003cfc:	ed87 0a00 	vstr	s0, [r7]
	if (freq_hz < VC_STROBE_MIN_FREQ_HZ)
 8003d00:	edd7 7a00 	vldr	s15, [r7]
 8003d04:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 8003d08:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003d0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003d10:	d502      	bpl.n	8003d18 <VibeCheckStrobe_SetFrequency+0x24>
		freq_hz = VC_STROBE_MIN_FREQ_HZ;
 8003d12:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8003d16:	603b      	str	r3, [r7, #0]
	if (freq_hz > VC_STROBE_MAX_FREQ_HZ)
 8003d18:	edd7 7a00 	vldr	s15, [r7]
 8003d1c:	ed9f 7a1a 	vldr	s14, [pc, #104]	@ 8003d88 <VibeCheckStrobe_SetFrequency+0x94>
 8003d20:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003d24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003d28:	dd01      	ble.n	8003d2e <VibeCheckStrobe_SetFrequency+0x3a>
		freq_hz = VC_STROBE_MAX_FREQ_HZ;
 8003d2a:	4b18      	ldr	r3, [pc, #96]	@ (8003d8c <VibeCheckStrobe_SetFrequency+0x98>)
 8003d2c:	603b      	str	r3, [r7, #0]

	strobe->arr_steady = VC_STROBE_TIM_COUNTS_PER_SECOND / freq_hz - 1;
 8003d2e:	eddf 6a18 	vldr	s13, [pc, #96]	@ 8003d90 <VibeCheckStrobe_SetFrequency+0x9c>
 8003d32:	ed97 7a00 	vldr	s14, [r7]
 8003d36:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003d3a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8003d3e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003d42:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003d46:	ee17 2a90 	vmov	r2, s15
 8003d4a:	687b      	ldr	r3, [r7, #4]
 8003d4c:	611a      	str	r2, [r3, #16]
	strobe->freq_hz = VC_STROBE_TIM_COUNTS_PER_SECOND / ((float)strobe->arr_steady + 1.0f);
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	691b      	ldr	r3, [r3, #16]
 8003d52:	ee07 3a90 	vmov	s15, r3
 8003d56:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003d5a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8003d5e:	ee37 7a87 	vadd.f32	s14, s15, s14
 8003d62:	eddf 6a0b 	vldr	s13, [pc, #44]	@ 8003d90 <VibeCheckStrobe_SetFrequency+0x9c>
 8003d66:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003d6a:	687b      	ldr	r3, [r7, #4]
 8003d6c:	edc3 7a01 	vstr	s15, [r3, #4]
	strobe->htim->Instance->ARR = strobe->arr_steady;
 8003d70:	687b      	ldr	r3, [r7, #4]
 8003d72:	681b      	ldr	r3, [r3, #0]
 8003d74:	681b      	ldr	r3, [r3, #0]
 8003d76:	687a      	ldr	r2, [r7, #4]
 8003d78:	6912      	ldr	r2, [r2, #16]
 8003d7a:	62da      	str	r2, [r3, #44]	@ 0x2c
}
 8003d7c:	bf00      	nop
 8003d7e:	370c      	adds	r7, #12
 8003d80:	46bd      	mov	sp, r7
 8003d82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d86:	4770      	bx	lr
 8003d88:	447a0000 	.word	0x447a0000
 8003d8c:	447a0000 	.word	0x447a0000
 8003d90:	47c35000 	.word	0x47c35000

08003d94 <VibeCheckStrobe_GetFrequency>:

float VibeCheckStrobe_GetFrequency(VibeCheckStrobe* strobe)
{
 8003d94:	b480      	push	{r7}
 8003d96:	b083      	sub	sp, #12
 8003d98:	af00      	add	r7, sp, #0
 8003d9a:	6078      	str	r0, [r7, #4]
	return strobe->freq_hz;
 8003d9c:	687b      	ldr	r3, [r7, #4]
 8003d9e:	685b      	ldr	r3, [r3, #4]
 8003da0:	ee07 3a90 	vmov	s15, r3
}
 8003da4:	eeb0 0a67 	vmov.f32	s0, s15
 8003da8:	370c      	adds	r7, #12
 8003daa:	46bd      	mov	sp, r7
 8003dac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003db0:	4770      	bx	lr
	...

08003db4 <VibeCheckStrobe_SetPhase>:

void VibeCheckStrobe_SetPhase(VibeCheckStrobe* strobe, float phase_deg)
{
 8003db4:	b480      	push	{r7}
 8003db6:	b085      	sub	sp, #20
 8003db8:	af00      	add	r7, sp, #0
 8003dba:	6078      	str	r0, [r7, #4]
 8003dbc:	ed87 0a00 	vstr	s0, [r7]
	 * To shift the phase, update ARR for a single period and then put it back
	 * The most reliable way would probably by with DMA into the ARR register, but this seems more complicated
	 * Instead let's try with an interrupt at the end of each period, and some struct variables to keep track of the phase update sequence
	 */

	if (phase_deg < VC_STROBE_MIN_PHASE_DEG)
 8003dc0:	edd7 7a00 	vldr	s15, [r7]
 8003dc4:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8003e8c <VibeCheckStrobe_SetPhase+0xd8>
 8003dc8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003dcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003dd0:	d501      	bpl.n	8003dd6 <VibeCheckStrobe_SetPhase+0x22>
		phase_deg = VC_STROBE_MIN_PHASE_DEG;
 8003dd2:	4b2f      	ldr	r3, [pc, #188]	@ (8003e90 <VibeCheckStrobe_SetPhase+0xdc>)
 8003dd4:	603b      	str	r3, [r7, #0]
	if (phase_deg > VC_STROBE_MAX_PHASE_DEG)
 8003dd6:	edd7 7a00 	vldr	s15, [r7]
 8003dda:	ed9f 7a2e 	vldr	s14, [pc, #184]	@ 8003e94 <VibeCheckStrobe_SetPhase+0xe0>
 8003dde:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003de2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003de6:	dd01      	ble.n	8003dec <VibeCheckStrobe_SetPhase+0x38>
		phase_deg = VC_STROBE_MAX_PHASE_DEG;
 8003de8:	4b2b      	ldr	r3, [pc, #172]	@ (8003e98 <VibeCheckStrobe_SetPhase+0xe4>)
 8003dea:	603b      	str	r3, [r7, #0]


	/* TODO: need to test if this works */
	float deg_shift = phase_deg - strobe->phase_deg;  /* how many degrees we want to shift the phase */
 8003dec:	687b      	ldr	r3, [r7, #4]
 8003dee:	edd3 7a03 	vldr	s15, [r3, #12]
 8003df2:	ed97 7a00 	vldr	s14, [r7]
 8003df6:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003dfa:	edc7 7a03 	vstr	s15, [r7, #12]
	int32_t arr_shift = deg_shift / 360.0f * strobe->arr_steady;  /* how much we need to alter the ARR for a single period to achieve the target phase shift */
 8003dfe:	edd7 7a03 	vldr	s15, [r7, #12]
 8003e02:	eddf 6a26 	vldr	s13, [pc, #152]	@ 8003e9c <VibeCheckStrobe_SetPhase+0xe8>
 8003e06:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	691b      	ldr	r3, [r3, #16]
 8003e0e:	ee07 3a90 	vmov	s15, r3
 8003e12:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003e16:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003e1a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003e1e:	ee17 3a90 	vmov	r3, s15
 8003e22:	60bb      	str	r3, [r7, #8]

	if (arr_shift && !strobe->phase_change_pending && !strobe->revert_arr_pending)
 8003e24:	68bb      	ldr	r3, [r7, #8]
 8003e26:	2b00      	cmp	r3, #0
 8003e28:	d029      	beq.n	8003e7e <VibeCheckStrobe_SetPhase+0xca>
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	699b      	ldr	r3, [r3, #24]
 8003e2e:	2b00      	cmp	r3, #0
 8003e30:	d125      	bne.n	8003e7e <VibeCheckStrobe_SetPhase+0xca>
 8003e32:	687b      	ldr	r3, [r7, #4]
 8003e34:	69db      	ldr	r3, [r3, #28]
 8003e36:	2b00      	cmp	r3, #0
 8003e38:	d121      	bne.n	8003e7e <VibeCheckStrobe_SetPhase+0xca>
	{
		strobe->phase_deg += (float)arr_shift / (float)strobe->arr_steady * 360.0f;  /* calculate the actual phase shift accounting for rounding error */
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	ed93 7a03 	vldr	s14, [r3, #12]
 8003e40:	68bb      	ldr	r3, [r7, #8]
 8003e42:	ee07 3a90 	vmov	s15, r3
 8003e46:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	691b      	ldr	r3, [r3, #16]
 8003e4e:	ee07 3a90 	vmov	s15, r3
 8003e52:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8003e56:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8003e5a:	eddf 6a10 	vldr	s13, [pc, #64]	@ 8003e9c <VibeCheckStrobe_SetPhase+0xe8>
 8003e5e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8003e62:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	edc3 7a03 	vstr	s15, [r3, #12]
		strobe->arr_phase = strobe->arr_steady + arr_shift;
 8003e6c:	687b      	ldr	r3, [r7, #4]
 8003e6e:	691a      	ldr	r2, [r3, #16]
 8003e70:	68bb      	ldr	r3, [r7, #8]
 8003e72:	441a      	add	r2, r3
 8003e74:	687b      	ldr	r3, [r7, #4]
 8003e76:	615a      	str	r2, [r3, #20]
		strobe->phase_change_pending = 1;  /* set the flag to enact the phase shift on the ARR interrupt */
 8003e78:	687b      	ldr	r3, [r7, #4]
 8003e7a:	2201      	movs	r2, #1
 8003e7c:	619a      	str	r2, [r3, #24]
	}
}
 8003e7e:	bf00      	nop
 8003e80:	3714      	adds	r7, #20
 8003e82:	46bd      	mov	sp, r7
 8003e84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e88:	4770      	bx	lr
 8003e8a:	bf00      	nop
 8003e8c:	c3340000 	.word	0xc3340000
 8003e90:	c3340000 	.word	0xc3340000
 8003e94:	43340000 	.word	0x43340000
 8003e98:	43340000 	.word	0x43340000
 8003e9c:	43b40000 	.word	0x43b40000

08003ea0 <VibeCheckStrobe_GetPhase>:

float VibeCheckStrobe_GetPhase(VibeCheckStrobe* strobe)
{
 8003ea0:	b480      	push	{r7}
 8003ea2:	b083      	sub	sp, #12
 8003ea4:	af00      	add	r7, sp, #0
 8003ea6:	6078      	str	r0, [r7, #4]
	return strobe->phase_deg;
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	68db      	ldr	r3, [r3, #12]
 8003eac:	ee07 3a90 	vmov	s15, r3
}
 8003eb0:	eeb0 0a67 	vmov.f32	s0, s15
 8003eb4:	370c      	adds	r7, #12
 8003eb6:	46bd      	mov	sp, r7
 8003eb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ebc:	4770      	bx	lr
	...

08003ec0 <VibeCheckStrobe_SetExposure>:

void VibeCheckStrobe_SetExposure(VibeCheckStrobe* strobe, float exposure_ms)
{
 8003ec0:	b480      	push	{r7}
 8003ec2:	b085      	sub	sp, #20
 8003ec4:	af00      	add	r7, sp, #0
 8003ec6:	6078      	str	r0, [r7, #4]
 8003ec8:	ed87 0a00 	vstr	s0, [r7]

	uint32_t ccr_val = exposure_ms * 0.001f * VC_STROBE_TIM_COUNTS_PER_SECOND;
 8003ecc:	edd7 7a00 	vldr	s15, [r7]
 8003ed0:	ed9f 7a1e 	vldr	s14, [pc, #120]	@ 8003f4c <VibeCheckStrobe_SetExposure+0x8c>
 8003ed4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003ed8:	ed9f 7a1d 	vldr	s14, [pc, #116]	@ 8003f50 <VibeCheckStrobe_SetExposure+0x90>
 8003edc:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003ee0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003ee4:	ee17 3a90 	vmov	r3, s15
 8003ee8:	60fb      	str	r3, [r7, #12]
	if (ccr_val > strobe->htim->Instance->ARR)
 8003eea:	687b      	ldr	r3, [r7, #4]
 8003eec:	681b      	ldr	r3, [r3, #0]
 8003eee:	681b      	ldr	r3, [r3, #0]
 8003ef0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ef2:	68fa      	ldr	r2, [r7, #12]
 8003ef4:	429a      	cmp	r2, r3
 8003ef6:	d904      	bls.n	8003f02 <VibeCheckStrobe_SetExposure+0x42>
		ccr_val = strobe->htim->Instance->ARR;
 8003ef8:	687b      	ldr	r3, [r7, #4]
 8003efa:	681b      	ldr	r3, [r3, #0]
 8003efc:	681b      	ldr	r3, [r3, #0]
 8003efe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f00:	60fb      	str	r3, [r7, #12]
	strobe->exposure_ms = (float)ccr_val / (float)VC_STROBE_TIM_COUNTS_PER_SECOND * 1000.0f;
 8003f02:	68fb      	ldr	r3, [r7, #12]
 8003f04:	ee07 3a90 	vmov	s15, r3
 8003f08:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8003f0c:	eddf 6a10 	vldr	s13, [pc, #64]	@ 8003f50 <VibeCheckStrobe_SetExposure+0x90>
 8003f10:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8003f14:	ed9f 7a0f 	vldr	s14, [pc, #60]	@ 8003f54 <VibeCheckStrobe_SetExposure+0x94>
 8003f18:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003f1c:	687b      	ldr	r3, [r7, #4]
 8003f1e:	edc3 7a02 	vstr	s15, [r3, #8]
	strobe->htim->Instance->CCR1 = ccr_val;
 8003f22:	687b      	ldr	r3, [r7, #4]
 8003f24:	681b      	ldr	r3, [r3, #0]
 8003f26:	681b      	ldr	r3, [r3, #0]
 8003f28:	68fa      	ldr	r2, [r7, #12]
 8003f2a:	635a      	str	r2, [r3, #52]	@ 0x34
	strobe->htim->Instance->CCR2 = ccr_val;
 8003f2c:	687b      	ldr	r3, [r7, #4]
 8003f2e:	681b      	ldr	r3, [r3, #0]
 8003f30:	681b      	ldr	r3, [r3, #0]
 8003f32:	68fa      	ldr	r2, [r7, #12]
 8003f34:	639a      	str	r2, [r3, #56]	@ 0x38
	strobe->htim->Instance->CCR3 = ccr_val;
 8003f36:	687b      	ldr	r3, [r7, #4]
 8003f38:	681b      	ldr	r3, [r3, #0]
 8003f3a:	681b      	ldr	r3, [r3, #0]
 8003f3c:	68fa      	ldr	r2, [r7, #12]
 8003f3e:	63da      	str	r2, [r3, #60]	@ 0x3c
}
 8003f40:	bf00      	nop
 8003f42:	3714      	adds	r7, #20
 8003f44:	46bd      	mov	sp, r7
 8003f46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f4a:	4770      	bx	lr
 8003f4c:	3a83126f 	.word	0x3a83126f
 8003f50:	47c35000 	.word	0x47c35000
 8003f54:	447a0000 	.word	0x447a0000

08003f58 <VibeCheckStrobe_GetExposure>:

float VibeCheckStrobe_GetExposure(VibeCheckStrobe* strobe)
{
 8003f58:	b480      	push	{r7}
 8003f5a:	b083      	sub	sp, #12
 8003f5c:	af00      	add	r7, sp, #0
 8003f5e:	6078      	str	r0, [r7, #4]
	return strobe->exposure_ms;
 8003f60:	687b      	ldr	r3, [r7, #4]
 8003f62:	689b      	ldr	r3, [r3, #8]
 8003f64:	ee07 3a90 	vmov	s15, r3
}
 8003f68:	eeb0 0a67 	vmov.f32	s0, s15
 8003f6c:	370c      	adds	r7, #12
 8003f6e:	46bd      	mov	sp, r7
 8003f70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f74:	4770      	bx	lr

08003f76 <VibeCheckStrobe_PeriodElapsedUpdate>:


/* use an interrupt to make sure this is called each period */
void VibeCheckStrobe_PeriodElapsedUpdate(VibeCheckStrobe* strobe)
{
 8003f76:	b480      	push	{r7}
 8003f78:	b083      	sub	sp, #12
 8003f7a:	af00      	add	r7, sp, #0
 8003f7c:	6078      	str	r0, [r7, #4]
	if (strobe->revert_arr_pending)
 8003f7e:	687b      	ldr	r3, [r7, #4]
 8003f80:	69db      	ldr	r3, [r3, #28]
 8003f82:	2b00      	cmp	r3, #0
 8003f84:	d008      	beq.n	8003f98 <VibeCheckStrobe_PeriodElapsedUpdate+0x22>
	{
		strobe->htim->Instance->ARR = strobe->arr_steady;
 8003f86:	687b      	ldr	r3, [r7, #4]
 8003f88:	681b      	ldr	r3, [r3, #0]
 8003f8a:	681b      	ldr	r3, [r3, #0]
 8003f8c:	687a      	ldr	r2, [r7, #4]
 8003f8e:	6912      	ldr	r2, [r2, #16]
 8003f90:	62da      	str	r2, [r3, #44]	@ 0x2c
		strobe->revert_arr_pending = 0;
 8003f92:	687b      	ldr	r3, [r7, #4]
 8003f94:	2200      	movs	r2, #0
 8003f96:	61da      	str	r2, [r3, #28]
	}

	if (strobe->phase_change_pending)
 8003f98:	687b      	ldr	r3, [r7, #4]
 8003f9a:	699b      	ldr	r3, [r3, #24]
 8003f9c:	2b00      	cmp	r3, #0
 8003f9e:	d00b      	beq.n	8003fb8 <VibeCheckStrobe_PeriodElapsedUpdate+0x42>
	{
		strobe->htim->Instance->ARR = strobe->arr_phase;
 8003fa0:	687b      	ldr	r3, [r7, #4]
 8003fa2:	681b      	ldr	r3, [r3, #0]
 8003fa4:	681b      	ldr	r3, [r3, #0]
 8003fa6:	687a      	ldr	r2, [r7, #4]
 8003fa8:	6952      	ldr	r2, [r2, #20]
 8003faa:	62da      	str	r2, [r3, #44]	@ 0x2c
		strobe->revert_arr_pending = 1;
 8003fac:	687b      	ldr	r3, [r7, #4]
 8003fae:	2201      	movs	r2, #1
 8003fb0:	61da      	str	r2, [r3, #28]
		strobe->phase_change_pending = 0;
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	2200      	movs	r2, #0
 8003fb6:	619a      	str	r2, [r3, #24]
	}
}
 8003fb8:	bf00      	nop
 8003fba:	370c      	adds	r7, #12
 8003fbc:	46bd      	mov	sp, r7
 8003fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fc2:	4770      	bx	lr

08003fc4 <VibeCheckStrobeCMD_Set>:
*/



static uint32_t VibeCheckStrobeCMD_Set(VibeCheckStrobe* strobe, VibeCheckShell* shell)
{
 8003fc4:	b580      	push	{r7, lr}
 8003fc6:	b096      	sub	sp, #88	@ 0x58
 8003fc8:	af00      	add	r7, sp, #0
 8003fca:	6078      	str	r0, [r7, #4]
 8003fcc:	6039      	str	r1, [r7, #0]
	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8003fce:	f107 0318 	add.w	r3, r7, #24
 8003fd2:	2240      	movs	r2, #64	@ 0x40
 8003fd4:	4619      	mov	r1, r3
 8003fd6:	6838      	ldr	r0, [r7, #0]
 8003fd8:	f7ff fc94 	bl	8003904 <VibeCheckShell_GetNextString>
 8003fdc:	4603      	mov	r3, r0
 8003fde:	2b00      	cmp	r3, #0
 8003fe0:	d065      	beq.n	80040ae <VibeCheckStrobeCMD_Set+0xea>
	{
		if (!strcmp(str, "frequency"))
 8003fe2:	f107 0318 	add.w	r3, r7, #24
 8003fe6:	4934      	ldr	r1, [pc, #208]	@ (80040b8 <VibeCheckStrobeCMD_Set+0xf4>)
 8003fe8:	4618      	mov	r0, r3
 8003fea:	f7fc f991 	bl	8000310 <strcmp>
 8003fee:	4603      	mov	r3, r0
 8003ff0:	2b00      	cmp	r3, #0
 8003ff2:	d118      	bne.n	8004026 <VibeCheckStrobeCMD_Set+0x62>
		{
			float val;
			if (VibeCheckShell_GetNextFloat(shell, &val))
 8003ff4:	f107 0314 	add.w	r3, r7, #20
 8003ff8:	4619      	mov	r1, r3
 8003ffa:	6838      	ldr	r0, [r7, #0]
 8003ffc:	f7ff fd38 	bl	8003a70 <VibeCheckShell_GetNextFloat>
 8004000:	4603      	mov	r3, r0
 8004002:	2b00      	cmp	r3, #0
 8004004:	d053      	beq.n	80040ae <VibeCheckStrobeCMD_Set+0xea>
			{
				VibeCheckStrobe_SetFrequency(strobe, val);
 8004006:	edd7 7a05 	vldr	s15, [r7, #20]
 800400a:	eeb0 0a67 	vmov.f32	s0, s15
 800400e:	6878      	ldr	r0, [r7, #4]
 8004010:	f7ff fe70 	bl	8003cf4 <VibeCheckStrobe_SetFrequency>
				VibeCheckShell_PutOutputString(shell, "ack");
 8004014:	4929      	ldr	r1, [pc, #164]	@ (80040bc <VibeCheckStrobeCMD_Set+0xf8>)
 8004016:	6838      	ldr	r0, [r7, #0]
 8004018:	f7ff fd74 	bl	8003b04 <VibeCheckShell_PutOutputString>
				VibeCheckShell_PutOutputDelimiter(shell);
 800401c:	6838      	ldr	r0, [r7, #0]
 800401e:	f7ff fdef 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
				return 1;
 8004022:	2301      	movs	r3, #1
 8004024:	e044      	b.n	80040b0 <VibeCheckStrobeCMD_Set+0xec>
			}
		}
		else if (!strcmp(str, "phase"))
 8004026:	f107 0318 	add.w	r3, r7, #24
 800402a:	4925      	ldr	r1, [pc, #148]	@ (80040c0 <VibeCheckStrobeCMD_Set+0xfc>)
 800402c:	4618      	mov	r0, r3
 800402e:	f7fc f96f 	bl	8000310 <strcmp>
 8004032:	4603      	mov	r3, r0
 8004034:	2b00      	cmp	r3, #0
 8004036:	d118      	bne.n	800406a <VibeCheckStrobeCMD_Set+0xa6>
		{
			float val;
			if (VibeCheckShell_GetNextFloat(shell, &val))
 8004038:	f107 0310 	add.w	r3, r7, #16
 800403c:	4619      	mov	r1, r3
 800403e:	6838      	ldr	r0, [r7, #0]
 8004040:	f7ff fd16 	bl	8003a70 <VibeCheckShell_GetNextFloat>
 8004044:	4603      	mov	r3, r0
 8004046:	2b00      	cmp	r3, #0
 8004048:	d031      	beq.n	80040ae <VibeCheckStrobeCMD_Set+0xea>
			{
				VibeCheckStrobe_SetPhase(strobe, val);
 800404a:	edd7 7a04 	vldr	s15, [r7, #16]
 800404e:	eeb0 0a67 	vmov.f32	s0, s15
 8004052:	6878      	ldr	r0, [r7, #4]
 8004054:	f7ff feae 	bl	8003db4 <VibeCheckStrobe_SetPhase>
				VibeCheckShell_PutOutputString(shell, "ack");
 8004058:	4918      	ldr	r1, [pc, #96]	@ (80040bc <VibeCheckStrobeCMD_Set+0xf8>)
 800405a:	6838      	ldr	r0, [r7, #0]
 800405c:	f7ff fd52 	bl	8003b04 <VibeCheckShell_PutOutputString>
				VibeCheckShell_PutOutputDelimiter(shell);
 8004060:	6838      	ldr	r0, [r7, #0]
 8004062:	f7ff fdcd 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
				return 1;
 8004066:	2301      	movs	r3, #1
 8004068:	e022      	b.n	80040b0 <VibeCheckStrobeCMD_Set+0xec>
			}
		}
		else if (!strcmp(str, "exposure"))
 800406a:	f107 0318 	add.w	r3, r7, #24
 800406e:	4915      	ldr	r1, [pc, #84]	@ (80040c4 <VibeCheckStrobeCMD_Set+0x100>)
 8004070:	4618      	mov	r0, r3
 8004072:	f7fc f94d 	bl	8000310 <strcmp>
 8004076:	4603      	mov	r3, r0
 8004078:	2b00      	cmp	r3, #0
 800407a:	d118      	bne.n	80040ae <VibeCheckStrobeCMD_Set+0xea>
		{
			float val;
			if (VibeCheckShell_GetNextFloat(shell, &val))
 800407c:	f107 030c 	add.w	r3, r7, #12
 8004080:	4619      	mov	r1, r3
 8004082:	6838      	ldr	r0, [r7, #0]
 8004084:	f7ff fcf4 	bl	8003a70 <VibeCheckShell_GetNextFloat>
 8004088:	4603      	mov	r3, r0
 800408a:	2b00      	cmp	r3, #0
 800408c:	d00f      	beq.n	80040ae <VibeCheckStrobeCMD_Set+0xea>
			{
				VibeCheckStrobe_SetExposure(strobe, val);
 800408e:	edd7 7a03 	vldr	s15, [r7, #12]
 8004092:	eeb0 0a67 	vmov.f32	s0, s15
 8004096:	6878      	ldr	r0, [r7, #4]
 8004098:	f7ff ff12 	bl	8003ec0 <VibeCheckStrobe_SetExposure>
				VibeCheckShell_PutOutputString(shell, "ack");
 800409c:	4907      	ldr	r1, [pc, #28]	@ (80040bc <VibeCheckStrobeCMD_Set+0xf8>)
 800409e:	6838      	ldr	r0, [r7, #0]
 80040a0:	f7ff fd30 	bl	8003b04 <VibeCheckShell_PutOutputString>
				VibeCheckShell_PutOutputDelimiter(shell);
 80040a4:	6838      	ldr	r0, [r7, #0]
 80040a6:	f7ff fdab 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
				return 1;
 80040aa:	2301      	movs	r3, #1
 80040ac:	e000      	b.n	80040b0 <VibeCheckStrobeCMD_Set+0xec>
			}
		}
	}

	return 0;
 80040ae:	2300      	movs	r3, #0
}
 80040b0:	4618      	mov	r0, r3
 80040b2:	3758      	adds	r7, #88	@ 0x58
 80040b4:	46bd      	mov	sp, r7
 80040b6:	bd80      	pop	{r7, pc}
 80040b8:	0801aab4 	.word	0x0801aab4
 80040bc:	0801aac0 	.word	0x0801aac0
 80040c0:	0801aac4 	.word	0x0801aac4
 80040c4:	0801aacc 	.word	0x0801aacc

080040c8 <VibeCheckStrobeCMD_Get>:

static uint32_t VibeCheckStrobeCMD_Get(VibeCheckStrobe* strobe, VibeCheckShell* shell)
{
 80040c8:	b580      	push	{r7, lr}
 80040ca:	b092      	sub	sp, #72	@ 0x48
 80040cc:	af00      	add	r7, sp, #0
 80040ce:	6078      	str	r0, [r7, #4]
 80040d0:	6039      	str	r1, [r7, #0]
	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 80040d2:	f107 0308 	add.w	r3, r7, #8
 80040d6:	2240      	movs	r2, #64	@ 0x40
 80040d8:	4619      	mov	r1, r3
 80040da:	6838      	ldr	r0, [r7, #0]
 80040dc:	f7ff fc12 	bl	8003904 <VibeCheckShell_GetNextString>
 80040e0:	4603      	mov	r3, r0
 80040e2:	2b00      	cmp	r3, #0
 80040e4:	d05c      	beq.n	80041a0 <VibeCheckStrobeCMD_Get+0xd8>
	{
		if (!strcmp(str, "frequency"))
 80040e6:	f107 0308 	add.w	r3, r7, #8
 80040ea:	4930      	ldr	r1, [pc, #192]	@ (80041ac <VibeCheckStrobeCMD_Get+0xe4>)
 80040ec:	4618      	mov	r0, r3
 80040ee:	f7fc f90f 	bl	8000310 <strcmp>
 80040f2:	4603      	mov	r3, r0
 80040f4:	2b00      	cmp	r3, #0
 80040f6:	d115      	bne.n	8004124 <VibeCheckStrobeCMD_Get+0x5c>
		{
			VibeCheckShell_PutOutputString(shell, "ack");
 80040f8:	492d      	ldr	r1, [pc, #180]	@ (80041b0 <VibeCheckStrobeCMD_Get+0xe8>)
 80040fa:	6838      	ldr	r0, [r7, #0]
 80040fc:	f7ff fd02 	bl	8003b04 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputSeparator(shell);
 8004100:	6838      	ldr	r0, [r7, #0]
 8004102:	f7ff fd6f 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputFloat(shell, VibeCheckStrobe_GetFrequency(strobe));
 8004106:	6878      	ldr	r0, [r7, #4]
 8004108:	f7ff fe44 	bl	8003d94 <VibeCheckStrobe_GetFrequency>
 800410c:	eef0 7a40 	vmov.f32	s15, s0
 8004110:	eeb0 0a67 	vmov.f32	s0, s15
 8004114:	6838      	ldr	r0, [r7, #0]
 8004116:	f7ff fd47 	bl	8003ba8 <VibeCheckShell_PutOutputFloat>
			VibeCheckShell_PutOutputDelimiter(shell);
 800411a:	6838      	ldr	r0, [r7, #0]
 800411c:	f7ff fd70 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8004120:	2301      	movs	r3, #1
 8004122:	e03e      	b.n	80041a2 <VibeCheckStrobeCMD_Get+0xda>
		}
		else if (!strcmp(str, "phase"))
 8004124:	f107 0308 	add.w	r3, r7, #8
 8004128:	4922      	ldr	r1, [pc, #136]	@ (80041b4 <VibeCheckStrobeCMD_Get+0xec>)
 800412a:	4618      	mov	r0, r3
 800412c:	f7fc f8f0 	bl	8000310 <strcmp>
 8004130:	4603      	mov	r3, r0
 8004132:	2b00      	cmp	r3, #0
 8004134:	d115      	bne.n	8004162 <VibeCheckStrobeCMD_Get+0x9a>
		{
			VibeCheckShell_PutOutputString(shell, "ack");
 8004136:	491e      	ldr	r1, [pc, #120]	@ (80041b0 <VibeCheckStrobeCMD_Get+0xe8>)
 8004138:	6838      	ldr	r0, [r7, #0]
 800413a:	f7ff fce3 	bl	8003b04 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputSeparator(shell);
 800413e:	6838      	ldr	r0, [r7, #0]
 8004140:	f7ff fd50 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputFloat(shell, VibeCheckStrobe_GetPhase(strobe));
 8004144:	6878      	ldr	r0, [r7, #4]
 8004146:	f7ff feab 	bl	8003ea0 <VibeCheckStrobe_GetPhase>
 800414a:	eef0 7a40 	vmov.f32	s15, s0
 800414e:	eeb0 0a67 	vmov.f32	s0, s15
 8004152:	6838      	ldr	r0, [r7, #0]
 8004154:	f7ff fd28 	bl	8003ba8 <VibeCheckShell_PutOutputFloat>
			VibeCheckShell_PutOutputDelimiter(shell);
 8004158:	6838      	ldr	r0, [r7, #0]
 800415a:	f7ff fd51 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 800415e:	2301      	movs	r3, #1
 8004160:	e01f      	b.n	80041a2 <VibeCheckStrobeCMD_Get+0xda>
		}
		else if (!strcmp(str, "exposure"))
 8004162:	f107 0308 	add.w	r3, r7, #8
 8004166:	4914      	ldr	r1, [pc, #80]	@ (80041b8 <VibeCheckStrobeCMD_Get+0xf0>)
 8004168:	4618      	mov	r0, r3
 800416a:	f7fc f8d1 	bl	8000310 <strcmp>
 800416e:	4603      	mov	r3, r0
 8004170:	2b00      	cmp	r3, #0
 8004172:	d115      	bne.n	80041a0 <VibeCheckStrobeCMD_Get+0xd8>
		{
			VibeCheckShell_PutOutputString(shell, "ack");
 8004174:	490e      	ldr	r1, [pc, #56]	@ (80041b0 <VibeCheckStrobeCMD_Get+0xe8>)
 8004176:	6838      	ldr	r0, [r7, #0]
 8004178:	f7ff fcc4 	bl	8003b04 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputSeparator(shell);
 800417c:	6838      	ldr	r0, [r7, #0]
 800417e:	f7ff fd31 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputFloat(shell, VibeCheckStrobe_GetExposure(strobe));
 8004182:	6878      	ldr	r0, [r7, #4]
 8004184:	f7ff fee8 	bl	8003f58 <VibeCheckStrobe_GetExposure>
 8004188:	eef0 7a40 	vmov.f32	s15, s0
 800418c:	eeb0 0a67 	vmov.f32	s0, s15
 8004190:	6838      	ldr	r0, [r7, #0]
 8004192:	f7ff fd09 	bl	8003ba8 <VibeCheckShell_PutOutputFloat>
			VibeCheckShell_PutOutputDelimiter(shell);
 8004196:	6838      	ldr	r0, [r7, #0]
 8004198:	f7ff fd32 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 800419c:	2301      	movs	r3, #1
 800419e:	e000      	b.n	80041a2 <VibeCheckStrobeCMD_Get+0xda>
		}
	}

	return 0;
 80041a0:	2300      	movs	r3, #0
}
 80041a2:	4618      	mov	r0, r3
 80041a4:	3748      	adds	r7, #72	@ 0x48
 80041a6:	46bd      	mov	sp, r7
 80041a8:	bd80      	pop	{r7, pc}
 80041aa:	bf00      	nop
 80041ac:	0801aab4 	.word	0x0801aab4
 80041b0:	0801aac0 	.word	0x0801aac0
 80041b4:	0801aac4 	.word	0x0801aac4
 80041b8:	0801aacc 	.word	0x0801aacc

080041bc <VibeCheckStrobeCMD_Execute>:

uint32_t VibeCheckStrobeCMD_Execute(void* obj, VibeCheckShell* shell)
{
 80041bc:	b580      	push	{r7, lr}
 80041be:	b094      	sub	sp, #80	@ 0x50
 80041c0:	af00      	add	r7, sp, #0
 80041c2:	6078      	str	r0, [r7, #4]
 80041c4:	6039      	str	r1, [r7, #0]
	VibeCheckStrobe* strobe = (VibeCheckStrobe*)obj;
 80041c6:	687b      	ldr	r3, [r7, #4]
 80041c8:	64fb      	str	r3, [r7, #76]	@ 0x4c

	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 80041ca:	f107 030c 	add.w	r3, r7, #12
 80041ce:	2240      	movs	r2, #64	@ 0x40
 80041d0:	4619      	mov	r1, r3
 80041d2:	6838      	ldr	r0, [r7, #0]
 80041d4:	f7ff fb96 	bl	8003904 <VibeCheckShell_GetNextString>
 80041d8:	4603      	mov	r3, r0
 80041da:	2b00      	cmp	r3, #0
 80041dc:	d04d      	beq.n	800427a <VibeCheckStrobeCMD_Execute+0xbe>
	{
		if (!strcmp(str, "start"))
 80041de:	f107 030c 	add.w	r3, r7, #12
 80041e2:	4928      	ldr	r1, [pc, #160]	@ (8004284 <VibeCheckStrobeCMD_Execute+0xc8>)
 80041e4:	4618      	mov	r0, r3
 80041e6:	f7fc f893 	bl	8000310 <strcmp>
 80041ea:	4603      	mov	r3, r0
 80041ec:	2b00      	cmp	r3, #0
 80041ee:	d10b      	bne.n	8004208 <VibeCheckStrobeCMD_Execute+0x4c>
		{
			VibeCheckStrobe_Start(strobe);
 80041f0:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 80041f2:	f7ff fd41 	bl	8003c78 <VibeCheckStrobe_Start>
			VibeCheckShell_PutOutputString(shell, "ack");
 80041f6:	4924      	ldr	r1, [pc, #144]	@ (8004288 <VibeCheckStrobeCMD_Execute+0xcc>)
 80041f8:	6838      	ldr	r0, [r7, #0]
 80041fa:	f7ff fc83 	bl	8003b04 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputDelimiter(shell);
 80041fe:	6838      	ldr	r0, [r7, #0]
 8004200:	f7ff fcfe 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8004204:	2301      	movs	r3, #1
 8004206:	e039      	b.n	800427c <VibeCheckStrobeCMD_Execute+0xc0>
		}
		else if (!strcmp(str, "stop"))
 8004208:	f107 030c 	add.w	r3, r7, #12
 800420c:	491f      	ldr	r1, [pc, #124]	@ (800428c <VibeCheckStrobeCMD_Execute+0xd0>)
 800420e:	4618      	mov	r0, r3
 8004210:	f7fc f87e 	bl	8000310 <strcmp>
 8004214:	4603      	mov	r3, r0
 8004216:	2b00      	cmp	r3, #0
 8004218:	d10b      	bne.n	8004232 <VibeCheckStrobeCMD_Execute+0x76>
		{
			VibeCheckStrobe_Stop(strobe);
 800421a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 800421c:	f7ff fd4b 	bl	8003cb6 <VibeCheckStrobe_Stop>
			VibeCheckShell_PutOutputString(shell, "ack");
 8004220:	4919      	ldr	r1, [pc, #100]	@ (8004288 <VibeCheckStrobeCMD_Execute+0xcc>)
 8004222:	6838      	ldr	r0, [r7, #0]
 8004224:	f7ff fc6e 	bl	8003b04 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputDelimiter(shell);
 8004228:	6838      	ldr	r0, [r7, #0]
 800422a:	f7ff fce9 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 800422e:	2301      	movs	r3, #1
 8004230:	e024      	b.n	800427c <VibeCheckStrobeCMD_Execute+0xc0>
		}
		else if (!strcmp(str, "set"))
 8004232:	f107 030c 	add.w	r3, r7, #12
 8004236:	4916      	ldr	r1, [pc, #88]	@ (8004290 <VibeCheckStrobeCMD_Execute+0xd4>)
 8004238:	4618      	mov	r0, r3
 800423a:	f7fc f869 	bl	8000310 <strcmp>
 800423e:	4603      	mov	r3, r0
 8004240:	2b00      	cmp	r3, #0
 8004242:	d108      	bne.n	8004256 <VibeCheckStrobeCMD_Execute+0x9a>
		{
			if (VibeCheckStrobeCMD_Set(strobe, shell))
 8004244:	6839      	ldr	r1, [r7, #0]
 8004246:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 8004248:	f7ff febc 	bl	8003fc4 <VibeCheckStrobeCMD_Set>
 800424c:	4603      	mov	r3, r0
 800424e:	2b00      	cmp	r3, #0
 8004250:	d013      	beq.n	800427a <VibeCheckStrobeCMD_Execute+0xbe>
			{
				return 1;
 8004252:	2301      	movs	r3, #1
 8004254:	e012      	b.n	800427c <VibeCheckStrobeCMD_Execute+0xc0>
			}
		}
		else if (!strcmp(str, "get"))
 8004256:	f107 030c 	add.w	r3, r7, #12
 800425a:	490e      	ldr	r1, [pc, #56]	@ (8004294 <VibeCheckStrobeCMD_Execute+0xd8>)
 800425c:	4618      	mov	r0, r3
 800425e:	f7fc f857 	bl	8000310 <strcmp>
 8004262:	4603      	mov	r3, r0
 8004264:	2b00      	cmp	r3, #0
 8004266:	d108      	bne.n	800427a <VibeCheckStrobeCMD_Execute+0xbe>
		{
			if (VibeCheckStrobeCMD_Get(strobe, shell))
 8004268:	6839      	ldr	r1, [r7, #0]
 800426a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 800426c:	f7ff ff2c 	bl	80040c8 <VibeCheckStrobeCMD_Get>
 8004270:	4603      	mov	r3, r0
 8004272:	2b00      	cmp	r3, #0
 8004274:	d001      	beq.n	800427a <VibeCheckStrobeCMD_Execute+0xbe>
			{
				return 1;
 8004276:	2301      	movs	r3, #1
 8004278:	e000      	b.n	800427c <VibeCheckStrobeCMD_Execute+0xc0>
			}
		}
	}

	return 0;
 800427a:	2300      	movs	r3, #0
}
 800427c:	4618      	mov	r0, r3
 800427e:	3750      	adds	r7, #80	@ 0x50
 8004280:	46bd      	mov	sp, r7
 8004282:	bd80      	pop	{r7, pc}
 8004284:	0801aad8 	.word	0x0801aad8
 8004288:	0801aac0 	.word	0x0801aac0
 800428c:	0801aae0 	.word	0x0801aae0
 8004290:	0801aae8 	.word	0x0801aae8
 8004294:	0801aaec 	.word	0x0801aaec

08004298 <ComputeSineWave>:

static const uint32_t demo_times1[] = {150,    150, 150,    150, 300,    150,    150,    300,    300,    300,    300,           300,   150,    150, 300,    150,       150, 300,    300,    150,   150,    300,        150,   150,    300,    300,    300,    300,        300,    150,   300,    150,   150,    150,    300,    150,    300,    150,    75,     75,   75,   75,  150,    150,    600};
static const float demo_freqs1[] =    {58.27,  185, 233.08, 185, 277.18, 233.08, 277.18, 369.99, 349.23, 277.18, 233.08,        0,     233.08, 185, 277.18, 233.08, 277.18, 369.99, 349.23, 51.91, 277.18, 233.08,     77.78, 311.13, 277.18, 233.08, 207.65, 0,          369.99, 415.3, 369.99, 415.3, 369.99,   0,    369.99, 466.16, 369.99, 466.16, 369.99, 0,  369.99, 0,   369.99,   0,   46.25};

static void ComputeSineWave(uint32_t* buf, uint32_t len, float amplitude)
{
 8004298:	b580      	push	{r7, lr}
 800429a:	ed2d 8b02 	vpush	{d8}
 800429e:	b086      	sub	sp, #24
 80042a0:	af00      	add	r7, sp, #0
 80042a2:	60f8      	str	r0, [r7, #12]
 80042a4:	60b9      	str	r1, [r7, #8]
 80042a6:	ed87 0a01 	vstr	s0, [r7, #4]
	for (uint32_t i = 0; i < len; i++)
 80042aa:	2300      	movs	r3, #0
 80042ac:	617b      	str	r3, [r7, #20]
 80042ae:	e032      	b.n	8004316 <ComputeSineWave+0x7e>
		*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE * (1.0f + amplitude * sin((float)i * 2.0f * 3.14159f / (float)len));
 80042b0:	edd7 7a01 	vldr	s15, [r7, #4]
 80042b4:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 80042b8:	697b      	ldr	r3, [r7, #20]
 80042ba:	ee07 3a90 	vmov	s15, r3
 80042be:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80042c2:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80042c6:	ed9f 7a1c 	vldr	s14, [pc, #112]	@ 8004338 <ComputeSineWave+0xa0>
 80042ca:	ee67 6a87 	vmul.f32	s13, s15, s14
 80042ce:	68bb      	ldr	r3, [r7, #8]
 80042d0:	ee07 3a90 	vmov	s15, r3
 80042d4:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80042d8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80042dc:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80042e0:	eeb0 0b47 	vmov.f64	d0, d7
 80042e4:	f015 fce4 	bl	8019cb0 <sin>
 80042e8:	eeb0 7b40 	vmov.f64	d7, d0
 80042ec:	ee28 7b07 	vmul.f64	d7, d8, d7
 80042f0:	eeb7 6b00 	vmov.f64	d6, #112	@ 0x3f800000  1.0
 80042f4:	ee37 7b06 	vadd.f64	d7, d7, d6
 80042f8:	ed9f 6b0d 	vldr	d6, [pc, #52]	@ 8004330 <ComputeSineWave+0x98>
 80042fc:	ee27 7b06 	vmul.f64	d7, d7, d6
 8004300:	68fb      	ldr	r3, [r7, #12]
 8004302:	1d1a      	adds	r2, r3, #4
 8004304:	60fa      	str	r2, [r7, #12]
 8004306:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 800430a:	ee17 2a90 	vmov	r2, s15
 800430e:	601a      	str	r2, [r3, #0]
	for (uint32_t i = 0; i < len; i++)
 8004310:	697b      	ldr	r3, [r7, #20]
 8004312:	3301      	adds	r3, #1
 8004314:	617b      	str	r3, [r7, #20]
 8004316:	697a      	ldr	r2, [r7, #20]
 8004318:	68bb      	ldr	r3, [r7, #8]
 800431a:	429a      	cmp	r2, r3
 800431c:	d3c8      	bcc.n	80042b0 <ComputeSineWave+0x18>
}
 800431e:	bf00      	nop
 8004320:	bf00      	nop
 8004322:	3718      	adds	r7, #24
 8004324:	46bd      	mov	sp, r7
 8004326:	ecbd 8b02 	vpop	{d8}
 800432a:	bd80      	pop	{r7, pc}
 800432c:	f3af 8000 	nop.w
 8004330:	00000000 	.word	0x00000000
 8004334:	409ffe00 	.word	0x409ffe00
 8004338:	40490fd0 	.word	0x40490fd0

0800433c <ComputeSquareWave>:

static void ComputeSquareWave(uint32_t* buf, uint32_t len, float amplitude)
{
 800433c:	b480      	push	{r7}
 800433e:	b087      	sub	sp, #28
 8004340:	af00      	add	r7, sp, #0
 8004342:	60f8      	str	r0, [r7, #12]
 8004344:	60b9      	str	r1, [r7, #8]
 8004346:	ed87 0a01 	vstr	s0, [r7, #4]
	for (uint32_t i = 0; i < len; i++)
 800434a:	2300      	movs	r3, #0
 800434c:	617b      	str	r3, [r7, #20]
 800434e:	e02c      	b.n	80043aa <ComputeSquareWave+0x6e>
		if (i < len / 2)
 8004350:	68bb      	ldr	r3, [r7, #8]
 8004352:	085b      	lsrs	r3, r3, #1
 8004354:	697a      	ldr	r2, [r7, #20]
 8004356:	429a      	cmp	r2, r3
 8004358:	d212      	bcs.n	8004380 <ComputeSquareWave+0x44>
			*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE * (1 + amplitude);
 800435a:	edd7 7a01 	vldr	s15, [r7, #4]
 800435e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8004362:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004366:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 80043c0 <ComputeSquareWave+0x84>
 800436a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800436e:	68fb      	ldr	r3, [r7, #12]
 8004370:	1d1a      	adds	r2, r3, #4
 8004372:	60fa      	str	r2, [r7, #12]
 8004374:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004378:	ee17 2a90 	vmov	r2, s15
 800437c:	601a      	str	r2, [r3, #0]
 800437e:	e011      	b.n	80043a4 <ComputeSquareWave+0x68>
		else
			*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE * (1 - amplitude);
 8004380:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8004384:	edd7 7a01 	vldr	s15, [r7, #4]
 8004388:	ee77 7a67 	vsub.f32	s15, s14, s15
 800438c:	ed9f 7a0c 	vldr	s14, [pc, #48]	@ 80043c0 <ComputeSquareWave+0x84>
 8004390:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004394:	68fb      	ldr	r3, [r7, #12]
 8004396:	1d1a      	adds	r2, r3, #4
 8004398:	60fa      	str	r2, [r7, #12]
 800439a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800439e:	ee17 2a90 	vmov	r2, s15
 80043a2:	601a      	str	r2, [r3, #0]
	for (uint32_t i = 0; i < len; i++)
 80043a4:	697b      	ldr	r3, [r7, #20]
 80043a6:	3301      	adds	r3, #1
 80043a8:	617b      	str	r3, [r7, #20]
 80043aa:	697a      	ldr	r2, [r7, #20]
 80043ac:	68bb      	ldr	r3, [r7, #8]
 80043ae:	429a      	cmp	r2, r3
 80043b0:	d3ce      	bcc.n	8004350 <ComputeSquareWave+0x14>
}
 80043b2:	bf00      	nop
 80043b4:	bf00      	nop
 80043b6:	371c      	adds	r7, #28
 80043b8:	46bd      	mov	sp, r7
 80043ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043be:	4770      	bx	lr
 80043c0:	44fff000 	.word	0x44fff000

080043c4 <ComputeSawWave>:

static void ComputeSawWave(uint32_t* buf, uint32_t len, float amplitude)
{
 80043c4:	b480      	push	{r7}
 80043c6:	b087      	sub	sp, #28
 80043c8:	af00      	add	r7, sp, #0
 80043ca:	60f8      	str	r0, [r7, #12]
 80043cc:	60b9      	str	r1, [r7, #8]
 80043ce:	ed87 0a01 	vstr	s0, [r7, #4]
	for (uint32_t i = 0; i < len; i++)
 80043d2:	2300      	movs	r3, #0
 80043d4:	617b      	str	r3, [r7, #20]
 80043d6:	e052      	b.n	800447e <ComputeSawWave+0xba>
		if (i < len / 2)
 80043d8:	68bb      	ldr	r3, [r7, #8]
 80043da:	085b      	lsrs	r3, r3, #1
 80043dc:	697a      	ldr	r2, [r7, #20]
 80043de:	429a      	cmp	r2, r3
 80043e0:	d222      	bcs.n	8004428 <ComputeSawWave+0x64>
			*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE * (1 + 2 * (float)i * amplitude / (float)len);
 80043e2:	697b      	ldr	r3, [r7, #20]
 80043e4:	ee07 3a90 	vmov	s15, r3
 80043e8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80043ec:	ee37 7aa7 	vadd.f32	s14, s15, s15
 80043f0:	edd7 7a01 	vldr	s15, [r7, #4]
 80043f4:	ee67 6a27 	vmul.f32	s13, s14, s15
 80043f8:	68bb      	ldr	r3, [r7, #8]
 80043fa:	ee07 3a90 	vmov	s15, r3
 80043fe:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8004402:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8004406:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800440a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800440e:	ed9f 7a21 	vldr	s14, [pc, #132]	@ 8004494 <ComputeSawWave+0xd0>
 8004412:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004416:	68fb      	ldr	r3, [r7, #12]
 8004418:	1d1a      	adds	r2, r3, #4
 800441a:	60fa      	str	r2, [r7, #12]
 800441c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004420:	ee17 2a90 	vmov	r2, s15
 8004424:	601a      	str	r2, [r3, #0]
 8004426:	e027      	b.n	8004478 <ComputeSawWave+0xb4>
		else
			*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE * (1 - 2 * amplitude + 2 * (float)i * amplitude / (float)len);
 8004428:	edd7 7a01 	vldr	s15, [r7, #4]
 800442c:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8004430:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8004434:	ee37 7a67 	vsub.f32	s14, s14, s15
 8004438:	697b      	ldr	r3, [r7, #20]
 800443a:	ee07 3a90 	vmov	s15, r3
 800443e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004442:	ee77 6aa7 	vadd.f32	s13, s15, s15
 8004446:	edd7 7a01 	vldr	s15, [r7, #4]
 800444a:	ee26 6aa7 	vmul.f32	s12, s13, s15
 800444e:	68bb      	ldr	r3, [r7, #8]
 8004450:	ee07 3a90 	vmov	s15, r3
 8004454:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004458:	eec6 7a26 	vdiv.f32	s15, s12, s13
 800445c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004460:	ed9f 7a0c 	vldr	s14, [pc, #48]	@ 8004494 <ComputeSawWave+0xd0>
 8004464:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004468:	68fb      	ldr	r3, [r7, #12]
 800446a:	1d1a      	adds	r2, r3, #4
 800446c:	60fa      	str	r2, [r7, #12]
 800446e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004472:	ee17 2a90 	vmov	r2, s15
 8004476:	601a      	str	r2, [r3, #0]
	for (uint32_t i = 0; i < len; i++)
 8004478:	697b      	ldr	r3, [r7, #20]
 800447a:	3301      	adds	r3, #1
 800447c:	617b      	str	r3, [r7, #20]
 800447e:	697a      	ldr	r2, [r7, #20]
 8004480:	68bb      	ldr	r3, [r7, #8]
 8004482:	429a      	cmp	r2, r3
 8004484:	d3a8      	bcc.n	80043d8 <ComputeSawWave+0x14>
}
 8004486:	bf00      	nop
 8004488:	bf00      	nop
 800448a:	371c      	adds	r7, #28
 800448c:	46bd      	mov	sp, r7
 800448e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004492:	4770      	bx	lr
 8004494:	44fff000 	.word	0x44fff000

08004498 <ComputeTriangleWave>:

static void ComputeTriangleWave(uint32_t* buf, uint32_t len, float amplitude)
{
 8004498:	b480      	push	{r7}
 800449a:	b087      	sub	sp, #28
 800449c:	af00      	add	r7, sp, #0
 800449e:	60f8      	str	r0, [r7, #12]
 80044a0:	60b9      	str	r1, [r7, #8]
 80044a2:	ed87 0a01 	vstr	s0, [r7, #4]
	for (uint32_t i = 0; i < len; i++)
 80044a6:	2300      	movs	r3, #0
 80044a8:	617b      	str	r3, [r7, #20]
 80044aa:	e082      	b.n	80045b2 <ComputeTriangleWave+0x11a>
		if (i < len / 4)
 80044ac:	68bb      	ldr	r3, [r7, #8]
 80044ae:	089b      	lsrs	r3, r3, #2
 80044b0:	697a      	ldr	r2, [r7, #20]
 80044b2:	429a      	cmp	r2, r3
 80044b4:	d221      	bcs.n	80044fa <ComputeTriangleWave+0x62>
			*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE * (1 + 4 * i * amplitude / (float)len);
 80044b6:	697b      	ldr	r3, [r7, #20]
 80044b8:	009b      	lsls	r3, r3, #2
 80044ba:	ee07 3a90 	vmov	s15, r3
 80044be:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80044c2:	edd7 7a01 	vldr	s15, [r7, #4]
 80044c6:	ee67 6a27 	vmul.f32	s13, s14, s15
 80044ca:	68bb      	ldr	r3, [r7, #8]
 80044cc:	ee07 3a90 	vmov	s15, r3
 80044d0:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80044d4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80044d8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80044dc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80044e0:	ed9f 7a3a 	vldr	s14, [pc, #232]	@ 80045cc <ComputeTriangleWave+0x134>
 80044e4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80044e8:	68fb      	ldr	r3, [r7, #12]
 80044ea:	1d1a      	adds	r2, r3, #4
 80044ec:	60fa      	str	r2, [r7, #12]
 80044ee:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80044f2:	ee17 2a90 	vmov	r2, s15
 80044f6:	601a      	str	r2, [r3, #0]
 80044f8:	e058      	b.n	80045ac <ComputeTriangleWave+0x114>
		else if (i < 3 * len / 4)
 80044fa:	68ba      	ldr	r2, [r7, #8]
 80044fc:	4613      	mov	r3, r2
 80044fe:	005b      	lsls	r3, r3, #1
 8004500:	4413      	add	r3, r2
 8004502:	089b      	lsrs	r3, r3, #2
 8004504:	697a      	ldr	r2, [r7, #20]
 8004506:	429a      	cmp	r2, r3
 8004508:	d227      	bcs.n	800455a <ComputeTriangleWave+0xc2>
			*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE * (1 + 2 * amplitude - 4 * i * amplitude / (float)len);
 800450a:	edd7 7a01 	vldr	s15, [r7, #4]
 800450e:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8004512:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8004516:	ee37 7a87 	vadd.f32	s14, s15, s14
 800451a:	697b      	ldr	r3, [r7, #20]
 800451c:	009b      	lsls	r3, r3, #2
 800451e:	ee07 3a90 	vmov	s15, r3
 8004522:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004526:	edd7 7a01 	vldr	s15, [r7, #4]
 800452a:	ee26 6aa7 	vmul.f32	s12, s13, s15
 800452e:	68bb      	ldr	r3, [r7, #8]
 8004530:	ee07 3a90 	vmov	s15, r3
 8004534:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004538:	eec6 7a26 	vdiv.f32	s15, s12, s13
 800453c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004540:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 80045cc <ComputeTriangleWave+0x134>
 8004544:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004548:	68fb      	ldr	r3, [r7, #12]
 800454a:	1d1a      	adds	r2, r3, #4
 800454c:	60fa      	str	r2, [r7, #12]
 800454e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004552:	ee17 2a90 	vmov	r2, s15
 8004556:	601a      	str	r2, [r3, #0]
 8004558:	e028      	b.n	80045ac <ComputeTriangleWave+0x114>
		else
			*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE * (1 - 4 * amplitude + 4 * i * amplitude / (float)len);
 800455a:	edd7 7a01 	vldr	s15, [r7, #4]
 800455e:	eeb1 7a00 	vmov.f32	s14, #16	@ 0x40800000  4.0
 8004562:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004566:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800456a:	ee37 7a67 	vsub.f32	s14, s14, s15
 800456e:	697b      	ldr	r3, [r7, #20]
 8004570:	009b      	lsls	r3, r3, #2
 8004572:	ee07 3a90 	vmov	s15, r3
 8004576:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800457a:	edd7 7a01 	vldr	s15, [r7, #4]
 800457e:	ee26 6aa7 	vmul.f32	s12, s13, s15
 8004582:	68bb      	ldr	r3, [r7, #8]
 8004584:	ee07 3a90 	vmov	s15, r3
 8004588:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800458c:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8004590:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004594:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 80045cc <ComputeTriangleWave+0x134>
 8004598:	ee67 7a87 	vmul.f32	s15, s15, s14
 800459c:	68fb      	ldr	r3, [r7, #12]
 800459e:	1d1a      	adds	r2, r3, #4
 80045a0:	60fa      	str	r2, [r7, #12]
 80045a2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80045a6:	ee17 2a90 	vmov	r2, s15
 80045aa:	601a      	str	r2, [r3, #0]
	for (uint32_t i = 0; i < len; i++)
 80045ac:	697b      	ldr	r3, [r7, #20]
 80045ae:	3301      	adds	r3, #1
 80045b0:	617b      	str	r3, [r7, #20]
 80045b2:	697a      	ldr	r2, [r7, #20]
 80045b4:	68bb      	ldr	r3, [r7, #8]
 80045b6:	429a      	cmp	r2, r3
 80045b8:	f4ff af78 	bcc.w	80044ac <ComputeTriangleWave+0x14>
}
 80045bc:	bf00      	nop
 80045be:	bf00      	nop
 80045c0:	371c      	adds	r7, #28
 80045c2:	46bd      	mov	sp, r7
 80045c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045c8:	4770      	bx	lr
 80045ca:	bf00      	nop
 80045cc:	44fff000 	.word	0x44fff000

080045d0 <ComputeNullWave>:

static void ComputeNullWave(uint32_t* buf, uint32_t len)
{
 80045d0:	b480      	push	{r7}
 80045d2:	b085      	sub	sp, #20
 80045d4:	af00      	add	r7, sp, #0
 80045d6:	6078      	str	r0, [r7, #4]
 80045d8:	6039      	str	r1, [r7, #0]
	for (uint32_t i = 0; i < len; i++)
 80045da:	2300      	movs	r3, #0
 80045dc:	60fb      	str	r3, [r7, #12]
 80045de:	e008      	b.n	80045f2 <ComputeNullWave+0x22>
		*buf++ = 0.5f * VC_WAVE_DAC_FULL_SCALE;
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	1d1a      	adds	r2, r3, #4
 80045e4:	607a      	str	r2, [r7, #4]
 80045e6:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 80045ea:	601a      	str	r2, [r3, #0]
	for (uint32_t i = 0; i < len; i++)
 80045ec:	68fb      	ldr	r3, [r7, #12]
 80045ee:	3301      	adds	r3, #1
 80045f0:	60fb      	str	r3, [r7, #12]
 80045f2:	68fa      	ldr	r2, [r7, #12]
 80045f4:	683b      	ldr	r3, [r7, #0]
 80045f6:	429a      	cmp	r2, r3
 80045f8:	d3f2      	bcc.n	80045e0 <ComputeNullWave+0x10>
}
 80045fa:	bf00      	nop
 80045fc:	bf00      	nop
 80045fe:	3714      	adds	r7, #20
 8004600:	46bd      	mov	sp, r7
 8004602:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004606:	4770      	bx	lr

08004608 <VibeCheckWaveGen_RecomputeWave>:




static void VibeCheckWaveGen_RecomputeWave(VibeCheckWaveGen* wavegen, uint32_t* buf)
{
 8004608:	b580      	push	{r7, lr}
 800460a:	b082      	sub	sp, #8
 800460c:	af00      	add	r7, sp, #0
 800460e:	6078      	str	r0, [r7, #4]
 8004610:	6039      	str	r1, [r7, #0]
	if (wavegen->is_running)
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004618:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800461a:	2b00      	cmp	r3, #0
 800461c:	d044      	beq.n	80046a8 <VibeCheckWaveGen_RecomputeWave+0xa0>
	{
		switch (wavegen->waveform)
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004624:	7e1b      	ldrb	r3, [r3, #24]
 8004626:	2b03      	cmp	r3, #3
 8004628:	d844      	bhi.n	80046b4 <VibeCheckWaveGen_RecomputeWave+0xac>
 800462a:	a201      	add	r2, pc, #4	@ (adr r2, 8004630 <VibeCheckWaveGen_RecomputeWave+0x28>)
 800462c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004630:	08004641 	.word	0x08004641
 8004634:	0800465b 	.word	0x0800465b
 8004638:	08004675 	.word	0x08004675
 800463c:	0800468f 	.word	0x0800468f
		{
		case VC_WAVE_SINE:
			ComputeSineWave(buf, VC_WAVE_BUF_LEN, wavegen->amplitude);
 8004640:	687b      	ldr	r3, [r7, #4]
 8004642:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004646:	edd3 7a08 	vldr	s15, [r3, #32]
 800464a:	eeb0 0a67 	vmov.f32	s0, s15
 800464e:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8004652:	6838      	ldr	r0, [r7, #0]
 8004654:	f7ff fe20 	bl	8004298 <ComputeSineWave>
			break;
 8004658:	e02c      	b.n	80046b4 <VibeCheckWaveGen_RecomputeWave+0xac>
		case VC_WAVE_SQUARE:
			ComputeSquareWave(buf, VC_WAVE_BUF_LEN, wavegen->amplitude);
 800465a:	687b      	ldr	r3, [r7, #4]
 800465c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004660:	edd3 7a08 	vldr	s15, [r3, #32]
 8004664:	eeb0 0a67 	vmov.f32	s0, s15
 8004668:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800466c:	6838      	ldr	r0, [r7, #0]
 800466e:	f7ff fe65 	bl	800433c <ComputeSquareWave>
			break;
 8004672:	e01f      	b.n	80046b4 <VibeCheckWaveGen_RecomputeWave+0xac>
		case VC_WAVE_SAW:
			ComputeSawWave(buf, VC_WAVE_BUF_LEN, wavegen->amplitude);
 8004674:	687b      	ldr	r3, [r7, #4]
 8004676:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800467a:	edd3 7a08 	vldr	s15, [r3, #32]
 800467e:	eeb0 0a67 	vmov.f32	s0, s15
 8004682:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8004686:	6838      	ldr	r0, [r7, #0]
 8004688:	f7ff fe9c 	bl	80043c4 <ComputeSawWave>
			break;
 800468c:	e012      	b.n	80046b4 <VibeCheckWaveGen_RecomputeWave+0xac>
		case VC_WAVE_TRIANGLE:
			ComputeTriangleWave(buf, VC_WAVE_BUF_LEN, wavegen->amplitude);
 800468e:	687b      	ldr	r3, [r7, #4]
 8004690:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004694:	edd3 7a08 	vldr	s15, [r3, #32]
 8004698:	eeb0 0a67 	vmov.f32	s0, s15
 800469c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80046a0:	6838      	ldr	r0, [r7, #0]
 80046a2:	f7ff fef9 	bl	8004498 <ComputeTriangleWave>
			break;
 80046a6:	e005      	b.n	80046b4 <VibeCheckWaveGen_RecomputeWave+0xac>
		}
	}
	else
	{
		ComputeNullWave(buf, VC_WAVE_BUF_LEN);
 80046a8:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80046ac:	6838      	ldr	r0, [r7, #0]
 80046ae:	f7ff ff8f 	bl	80045d0 <ComputeNullWave>
	}
}
 80046b2:	e7ff      	b.n	80046b4 <VibeCheckWaveGen_RecomputeWave+0xac>
 80046b4:	bf00      	nop
 80046b6:	3708      	adds	r7, #8
 80046b8:	46bd      	mov	sp, r7
 80046ba:	bd80      	pop	{r7, pc}

080046bc <VibeCheckWaveGen_Init>:


void VibeCheckWaveGen_Init(VibeCheckWaveGen* wavegen, DAC_HandleTypeDef *hdac, TIM_HandleTypeDef* htim)
{
 80046bc:	b580      	push	{r7, lr}
 80046be:	b086      	sub	sp, #24
 80046c0:	af02      	add	r7, sp, #8
 80046c2:	60f8      	str	r0, [r7, #12]
 80046c4:	60b9      	str	r1, [r7, #8]
 80046c6:	607a      	str	r2, [r7, #4]
	wavegen->hdac = hdac;
 80046c8:	68fb      	ldr	r3, [r7, #12]
 80046ca:	68ba      	ldr	r2, [r7, #8]
 80046cc:	605a      	str	r2, [r3, #4]
	wavegen->htim = htim;
 80046ce:	68fb      	ldr	r3, [r7, #12]
 80046d0:	687a      	ldr	r2, [r7, #4]
 80046d2:	601a      	str	r2, [r3, #0]
	wavegen->freq_hz = 440.0f;
 80046d4:	68fb      	ldr	r3, [r7, #12]
 80046d6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80046da:	461a      	mov	r2, r3
 80046dc:	4b44      	ldr	r3, [pc, #272]	@ (80047f0 <VibeCheckWaveGen_Init+0x134>)
 80046de:	61d3      	str	r3, [r2, #28]
	wavegen->amplitude = 0.001f;
 80046e0:	68fb      	ldr	r3, [r7, #12]
 80046e2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80046e6:	461a      	mov	r2, r3
 80046e8:	4b42      	ldr	r3, [pc, #264]	@ (80047f4 <VibeCheckWaveGen_Init+0x138>)
 80046ea:	6213      	str	r3, [r2, #32]
	wavegen->waveform = VC_WAVE_SINE;
 80046ec:	68fb      	ldr	r3, [r7, #12]
 80046ee:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80046f2:	2200      	movs	r2, #0
 80046f4:	761a      	strb	r2, [r3, #24]

	wavegen->is_running = 0;
 80046f6:	68fb      	ldr	r3, [r7, #12]
 80046f8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80046fc:	461a      	mov	r2, r3
 80046fe:	2300      	movs	r3, #0
 8004700:	6253      	str	r3, [r2, #36]	@ 0x24
	wavegen->is_muted = 0;
 8004702:	68fb      	ldr	r3, [r7, #12]
 8004704:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004708:	461a      	mov	r2, r3
 800470a:	2300      	movs	r3, #0
 800470c:	6293      	str	r3, [r2, #40]	@ 0x28
	wavegen->mute_button_flag = 0;
 800470e:	68fb      	ldr	r3, [r7, #12]
 8004710:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004714:	461a      	mov	r2, r3
 8004716:	2300      	movs	r3, #0
 8004718:	62d3      	str	r3, [r2, #44]	@ 0x2c
	wavegen->time_prev_button_press = 0;
 800471a:	68fb      	ldr	r3, [r7, #12]
 800471c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004720:	461a      	mov	r2, r3
 8004722:	2300      	movs	r3, #0
 8004724:	6313      	str	r3, [r2, #48]	@ 0x30

	wavegen->wave_ping_compute_pending = 0;
 8004726:	68fb      	ldr	r3, [r7, #12]
 8004728:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800472c:	461a      	mov	r2, r3
 800472e:	2300      	movs	r3, #0
 8004730:	6093      	str	r3, [r2, #8]
	wavegen->wave_pong_compute_pending = 0;
 8004732:	68fb      	ldr	r3, [r7, #12]
 8004734:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004738:	461a      	mov	r2, r3
 800473a:	2300      	movs	r3, #0
 800473c:	60d3      	str	r3, [r2, #12]
	wavegen->wave_ping_compute_ready = 0;
 800473e:	68fb      	ldr	r3, [r7, #12]
 8004740:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004744:	461a      	mov	r2, r3
 8004746:	2300      	movs	r3, #0
 8004748:	6113      	str	r3, [r2, #16]
	wavegen->wave_pong_compute_ready = 0;
 800474a:	68fb      	ldr	r3, [r7, #12]
 800474c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004750:	461a      	mov	r2, r3
 8004752:	2300      	movs	r3, #0
 8004754:	6153      	str	r3, [r2, #20]

	wavegen->demo_num = 0;
 8004756:	68fb      	ldr	r3, [r7, #12]
 8004758:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800475c:	461a      	mov	r2, r3
 800475e:	2300      	movs	r3, #0
 8004760:	6353      	str	r3, [r2, #52]	@ 0x34

	/* set up timer registers */
	wavegen->htim->Instance->PSC = VC_WAVE_TIM_PSC - 1;
 8004762:	68fb      	ldr	r3, [r7, #12]
 8004764:	681b      	ldr	r3, [r3, #0]
 8004766:	681b      	ldr	r3, [r3, #0]
 8004768:	220b      	movs	r2, #11
 800476a:	629a      	str	r2, [r3, #40]	@ 0x28
	VibeCheckWaveGen_SetFrequency(wavegen, wavegen->freq_hz);
 800476c:	68fb      	ldr	r3, [r7, #12]
 800476e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004772:	edd3 7a07 	vldr	s15, [r3, #28]
 8004776:	eeb0 0a67 	vmov.f32	s0, s15
 800477a:	68f8      	ldr	r0, [r7, #12]
 800477c:	f000 f920 	bl	80049c0 <VibeCheckWaveGen_SetFrequency>

	/* compute the initial wave (set the DAC to the midpoint to avoid noise) */
	VibeCheckWaveGen_RecomputeWave(wavegen, &wavegen->wave[0]);
 8004780:	68fb      	ldr	r3, [r7, #12]
 8004782:	3308      	adds	r3, #8
 8004784:	4619      	mov	r1, r3
 8004786:	68f8      	ldr	r0, [r7, #12]
 8004788:	f7ff ff3e 	bl	8004608 <VibeCheckWaveGen_RecomputeWave>
	VibeCheckWaveGen_RecomputeWave(wavegen, &wavegen->wave[VC_WAVE_BUF_LEN]);
 800478c:	68fb      	ldr	r3, [r7, #12]
 800478e:	f603 0308 	addw	r3, r3, #2056	@ 0x808
 8004792:	4619      	mov	r1, r3
 8004794:	68f8      	ldr	r0, [r7, #12]
 8004796:	f7ff ff37 	bl	8004608 <VibeCheckWaveGen_RecomputeWave>

	/* start the DAC */
	HAL_DAC_Start_DMA(wavegen->hdac, DAC_CHANNEL_1, wavegen->wave, VC_WAVE_BUF_LEN, DAC_ALIGN_12B_R);
 800479a:	68fb      	ldr	r3, [r7, #12]
 800479c:	6858      	ldr	r0, [r3, #4]
 800479e:	68fb      	ldr	r3, [r7, #12]
 80047a0:	f103 0208 	add.w	r2, r3, #8
 80047a4:	2300      	movs	r3, #0
 80047a6:	9300      	str	r3, [sp, #0]
 80047a8:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80047ac:	2100      	movs	r1, #0
 80047ae:	f002 faed 	bl	8006d8c <HAL_DAC_Start_DMA>
	HAL_DAC_Start_DMA(wavegen->hdac, DAC_CHANNEL_2, wavegen->wave, VC_WAVE_BUF_LEN, DAC_ALIGN_12B_R);
 80047b2:	68fb      	ldr	r3, [r7, #12]
 80047b4:	6858      	ldr	r0, [r3, #4]
 80047b6:	68fb      	ldr	r3, [r7, #12]
 80047b8:	f103 0208 	add.w	r2, r3, #8
 80047bc:	2300      	movs	r3, #0
 80047be:	9300      	str	r3, [sp, #0]
 80047c0:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80047c4:	2110      	movs	r1, #16
 80047c6:	f002 fae1 	bl	8006d8c <HAL_DAC_Start_DMA>
	HAL_TIM_Base_Start(wavegen->htim);
 80047ca:	68fb      	ldr	r3, [r7, #12]
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	4618      	mov	r0, r3
 80047d0:	f00a f91e 	bl	800ea10 <HAL_TIM_Base_Start>

	/* un-mute the output and turn off the mute LED*/
	HAL_GPIO_WritePin(MUTE_SIGNAL_GPIO_Port, MUTE_SIGNAL_Pin, GPIO_PIN_RESET);
 80047d4:	2200      	movs	r2, #0
 80047d6:	2108      	movs	r1, #8
 80047d8:	4807      	ldr	r0, [pc, #28]	@ (80047f8 <VibeCheckWaveGen_Init+0x13c>)
 80047da:	f005 f801 	bl	80097e0 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(MUTE_INDICATOR_GPIO_Port, MUTE_INDICATOR_Pin, GPIO_PIN_RESET);
 80047de:	2200      	movs	r2, #0
 80047e0:	2102      	movs	r1, #2
 80047e2:	4805      	ldr	r0, [pc, #20]	@ (80047f8 <VibeCheckWaveGen_Init+0x13c>)
 80047e4:	f004 fffc 	bl	80097e0 <HAL_GPIO_WritePin>
}
 80047e8:	bf00      	nop
 80047ea:	3710      	adds	r7, #16
 80047ec:	46bd      	mov	sp, r7
 80047ee:	bd80      	pop	{r7, pc}
 80047f0:	43dc0000 	.word	0x43dc0000
 80047f4:	3a83126f 	.word	0x3a83126f
 80047f8:	58020000 	.word	0x58020000

080047fc <VibeCheckWaveGen_Update>:

void VibeCheckWaveGen_Update(VibeCheckWaveGen* wavegen)
{
 80047fc:	b580      	push	{r7, lr}
 80047fe:	b084      	sub	sp, #16
 8004800:	af00      	add	r7, sp, #0
 8004802:	6078      	str	r0, [r7, #4]
	/* call in the main loop */

	/* check the mute button */
	uint32_t time = HAL_GetTick();
 8004804:	f000 fd74 	bl	80052f0 <HAL_GetTick>
 8004808:	60f8      	str	r0, [r7, #12]
	if (time - wavegen->time_prev_button_press > VC_WAVE_BUTTON_DEBOUNCE_MS && HAL_GPIO_ReadPin(MUTE_BUTTON_GPIO_Port, MUTE_BUTTON_Pin))
 800480a:	687b      	ldr	r3, [r7, #4]
 800480c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004810:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004812:	68fa      	ldr	r2, [r7, #12]
 8004814:	1ad3      	subs	r3, r2, r3
 8004816:	2bfa      	cmp	r3, #250	@ 0xfa
 8004818:	d939      	bls.n	800488e <VibeCheckWaveGen_Update+0x92>
 800481a:	2104      	movs	r1, #4
 800481c:	4843      	ldr	r0, [pc, #268]	@ (800492c <VibeCheckWaveGen_Update+0x130>)
 800481e:	f004 ffc7 	bl	80097b0 <HAL_GPIO_ReadPin>
 8004822:	4603      	mov	r3, r0
 8004824:	2b00      	cmp	r3, #0
 8004826:	d032      	beq.n	800488e <VibeCheckWaveGen_Update+0x92>

		/*
		 * the line driver seems to have some kind of slow start built in so no
		 * need to worry about pops when muting via the hardware pin
		 */
		if (wavegen->is_muted)
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800482e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004830:	2b00      	cmp	r3, #0
 8004832:	d010      	beq.n	8004856 <VibeCheckWaveGen_Update+0x5a>
		{
			wavegen->is_muted = 0;
 8004834:	687b      	ldr	r3, [r7, #4]
 8004836:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800483a:	461a      	mov	r2, r3
 800483c:	2300      	movs	r3, #0
 800483e:	6293      	str	r3, [r2, #40]	@ 0x28
			HAL_GPIO_WritePin(MUTE_SIGNAL_GPIO_Port, MUTE_SIGNAL_Pin, GPIO_PIN_RESET);  /* un-mute the output */
 8004840:	2200      	movs	r2, #0
 8004842:	2108      	movs	r1, #8
 8004844:	4839      	ldr	r0, [pc, #228]	@ (800492c <VibeCheckWaveGen_Update+0x130>)
 8004846:	f004 ffcb 	bl	80097e0 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(MUTE_INDICATOR_GPIO_Port, MUTE_INDICATOR_Pin, GPIO_PIN_RESET);  /* turn off the LED */
 800484a:	2200      	movs	r2, #0
 800484c:	2102      	movs	r1, #2
 800484e:	4837      	ldr	r0, [pc, #220]	@ (800492c <VibeCheckWaveGen_Update+0x130>)
 8004850:	f004 ffc6 	bl	80097e0 <HAL_GPIO_WritePin>
 8004854:	e00f      	b.n	8004876 <VibeCheckWaveGen_Update+0x7a>
		}
		else
		{
			wavegen->is_muted = 1;
 8004856:	687b      	ldr	r3, [r7, #4]
 8004858:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800485c:	461a      	mov	r2, r3
 800485e:	2301      	movs	r3, #1
 8004860:	6293      	str	r3, [r2, #40]	@ 0x28
			HAL_GPIO_WritePin(MUTE_SIGNAL_GPIO_Port, MUTE_SIGNAL_Pin, GPIO_PIN_SET);  /* mute the output */
 8004862:	2201      	movs	r2, #1
 8004864:	2108      	movs	r1, #8
 8004866:	4831      	ldr	r0, [pc, #196]	@ (800492c <VibeCheckWaveGen_Update+0x130>)
 8004868:	f004 ffba 	bl	80097e0 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(MUTE_INDICATOR_GPIO_Port, MUTE_INDICATOR_Pin, GPIO_PIN_SET);  /* turn on the LED */
 800486c:	2201      	movs	r2, #1
 800486e:	2102      	movs	r1, #2
 8004870:	482e      	ldr	r0, [pc, #184]	@ (800492c <VibeCheckWaveGen_Update+0x130>)
 8004872:	f004 ffb5 	bl	80097e0 <HAL_GPIO_WritePin>
		}

		wavegen->mute_button_flag = 1;  /* can alert the shell via this flag when we press the mute button */
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800487c:	461a      	mov	r2, r3
 800487e:	2301      	movs	r3, #1
 8004880:	62d3      	str	r3, [r2, #44]	@ 0x2c
		wavegen->time_prev_button_press = time;
 8004882:	687b      	ldr	r3, [r7, #4]
 8004884:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004888:	461a      	mov	r2, r3
 800488a:	68fb      	ldr	r3, [r7, #12]
 800488c:	6313      	str	r3, [r2, #48]	@ 0x30
	}

	/*
	 * to make a smooth transition between waves when a parameter is changed, change the two halves of the double buffer separately
	 */
	if (wavegen->wave_ping_compute_ready)
 800488e:	687b      	ldr	r3, [r7, #4]
 8004890:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004894:	691b      	ldr	r3, [r3, #16]
 8004896:	2b00      	cmp	r3, #0
 8004898:	d00b      	beq.n	80048b2 <VibeCheckWaveGen_Update+0xb6>
	{
		VibeCheckWaveGen_RecomputeWave(wavegen, &wavegen->wave[0]);
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	3308      	adds	r3, #8
 800489e:	4619      	mov	r1, r3
 80048a0:	6878      	ldr	r0, [r7, #4]
 80048a2:	f7ff feb1 	bl	8004608 <VibeCheckWaveGen_RecomputeWave>
		wavegen->wave_ping_compute_ready = 0;
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80048ac:	461a      	mov	r2, r3
 80048ae:	2300      	movs	r3, #0
 80048b0:	6113      	str	r3, [r2, #16]
	}
	if (wavegen->wave_pong_compute_ready)
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80048b8:	695b      	ldr	r3, [r3, #20]
 80048ba:	2b00      	cmp	r3, #0
 80048bc:	d00c      	beq.n	80048d8 <VibeCheckWaveGen_Update+0xdc>
	{
		VibeCheckWaveGen_RecomputeWave(wavegen, &wavegen->wave[VC_WAVE_BUF_LEN]);
 80048be:	687b      	ldr	r3, [r7, #4]
 80048c0:	f603 0308 	addw	r3, r3, #2056	@ 0x808
 80048c4:	4619      	mov	r1, r3
 80048c6:	6878      	ldr	r0, [r7, #4]
 80048c8:	f7ff fe9e 	bl	8004608 <VibeCheckWaveGen_RecomputeWave>
		wavegen->wave_pong_compute_ready = 0;
 80048cc:	687b      	ldr	r3, [r7, #4]
 80048ce:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80048d2:	461a      	mov	r2, r3
 80048d4:	2300      	movs	r3, #0
 80048d6:	6153      	str	r3, [r2, #20]

	/*
	 * update the sequencer
	 */
	uint32_t seq_index;
	if (Sequencer_Update(&wavegen->sequencer, time, &seq_index))
 80048d8:	687a      	ldr	r2, [r7, #4]
 80048da:	f241 0338 	movw	r3, #4152	@ 0x1038
 80048de:	4413      	add	r3, r2
 80048e0:	f107 0208 	add.w	r2, r7, #8
 80048e4:	68f9      	ldr	r1, [r7, #12]
 80048e6:	4618      	mov	r0, r3
 80048e8:	f7fd f83a 	bl	8001960 <Sequencer_Update>
 80048ec:	4603      	mov	r3, r0
 80048ee:	2b00      	cmp	r3, #0
 80048f0:	d017      	beq.n	8004922 <VibeCheckWaveGen_Update+0x126>
	{
		VibeCheckWaveGen_SetFrequency(wavegen, wavegen->demo_num ? demo_freqs1[seq_index] : demo_freqs0[seq_index]);
 80048f2:	687b      	ldr	r3, [r7, #4]
 80048f4:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80048f8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80048fa:	2b00      	cmp	r3, #0
 80048fc:	d006      	beq.n	800490c <VibeCheckWaveGen_Update+0x110>
 80048fe:	68bb      	ldr	r3, [r7, #8]
 8004900:	4a0b      	ldr	r2, [pc, #44]	@ (8004930 <VibeCheckWaveGen_Update+0x134>)
 8004902:	009b      	lsls	r3, r3, #2
 8004904:	4413      	add	r3, r2
 8004906:	edd3 7a00 	vldr	s15, [r3]
 800490a:	e005      	b.n	8004918 <VibeCheckWaveGen_Update+0x11c>
 800490c:	68bb      	ldr	r3, [r7, #8]
 800490e:	4a09      	ldr	r2, [pc, #36]	@ (8004934 <VibeCheckWaveGen_Update+0x138>)
 8004910:	009b      	lsls	r3, r3, #2
 8004912:	4413      	add	r3, r2
 8004914:	edd3 7a00 	vldr	s15, [r3]
 8004918:	eeb0 0a67 	vmov.f32	s0, s15
 800491c:	6878      	ldr	r0, [r7, #4]
 800491e:	f000 f84f 	bl	80049c0 <VibeCheckWaveGen_SetFrequency>
	}

}
 8004922:	bf00      	nop
 8004924:	3710      	adds	r7, #16
 8004926:	46bd      	mov	sp, r7
 8004928:	bd80      	pop	{r7, pc}
 800492a:	bf00      	nop
 800492c:	58020000 	.word	0x58020000
 8004930:	0801afa8 	.word	0x0801afa8
 8004934:	0801ae8c 	.word	0x0801ae8c

08004938 <VibeCheckWaveGen_Start>:

void VibeCheckWaveGen_Start(VibeCheckWaveGen* wavegen)
{
 8004938:	b480      	push	{r7}
 800493a:	b083      	sub	sp, #12
 800493c:	af00      	add	r7, sp, #0
 800493e:	6078      	str	r0, [r7, #4]
	if (!wavegen->is_running)
 8004940:	687b      	ldr	r3, [r7, #4]
 8004942:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004946:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004948:	2b00      	cmp	r3, #0
 800494a:	d111      	bne.n	8004970 <VibeCheckWaveGen_Start+0x38>
	{
		wavegen->is_running = 1;
 800494c:	687b      	ldr	r3, [r7, #4]
 800494e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004952:	461a      	mov	r2, r3
 8004954:	2301      	movs	r3, #1
 8004956:	6253      	str	r3, [r2, #36]	@ 0x24
		wavegen->wave_ping_compute_pending = 1;
 8004958:	687b      	ldr	r3, [r7, #4]
 800495a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800495e:	461a      	mov	r2, r3
 8004960:	2301      	movs	r3, #1
 8004962:	6093      	str	r3, [r2, #8]
		wavegen->wave_pong_compute_pending = 1;
 8004964:	687b      	ldr	r3, [r7, #4]
 8004966:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800496a:	461a      	mov	r2, r3
 800496c:	2301      	movs	r3, #1
 800496e:	60d3      	str	r3, [r2, #12]
	}

}
 8004970:	bf00      	nop
 8004972:	370c      	adds	r7, #12
 8004974:	46bd      	mov	sp, r7
 8004976:	f85d 7b04 	ldr.w	r7, [sp], #4
 800497a:	4770      	bx	lr

0800497c <VibeCheckWaveGen_Stop>:

void VibeCheckWaveGen_Stop(VibeCheckWaveGen* wavegen)
{
 800497c:	b480      	push	{r7}
 800497e:	b083      	sub	sp, #12
 8004980:	af00      	add	r7, sp, #0
 8004982:	6078      	str	r0, [r7, #4]
	if (wavegen->is_running)
 8004984:	687b      	ldr	r3, [r7, #4]
 8004986:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800498a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800498c:	2b00      	cmp	r3, #0
 800498e:	d011      	beq.n	80049b4 <VibeCheckWaveGen_Stop+0x38>
	{
		wavegen->is_running = 0;
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004996:	461a      	mov	r2, r3
 8004998:	2300      	movs	r3, #0
 800499a:	6253      	str	r3, [r2, #36]	@ 0x24
		wavegen->wave_ping_compute_pending = 1;
 800499c:	687b      	ldr	r3, [r7, #4]
 800499e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80049a2:	461a      	mov	r2, r3
 80049a4:	2301      	movs	r3, #1
 80049a6:	6093      	str	r3, [r2, #8]
		wavegen->wave_pong_compute_pending = 1;
 80049a8:	687b      	ldr	r3, [r7, #4]
 80049aa:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80049ae:	461a      	mov	r2, r3
 80049b0:	2301      	movs	r3, #1
 80049b2:	60d3      	str	r3, [r2, #12]
	}
}
 80049b4:	bf00      	nop
 80049b6:	370c      	adds	r7, #12
 80049b8:	46bd      	mov	sp, r7
 80049ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049be:	4770      	bx	lr

080049c0 <VibeCheckWaveGen_SetFrequency>:

void VibeCheckWaveGen_SetFrequency(VibeCheckWaveGen* wavegen, float freq_hz)
{
 80049c0:	b480      	push	{r7}
 80049c2:	b085      	sub	sp, #20
 80049c4:	af00      	add	r7, sp, #0
 80049c6:	6078      	str	r0, [r7, #4]
 80049c8:	ed87 0a00 	vstr	s0, [r7]
	if (freq_hz < VC_WAVE_MIN_FREQ_HZ)
 80049cc:	edd7 7a00 	vldr	s15, [r7]
 80049d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80049d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80049d8:	d502      	bpl.n	80049e0 <VibeCheckWaveGen_SetFrequency+0x20>
		freq_hz = VC_WAVE_MIN_FREQ_HZ;
 80049da:	f04f 0300 	mov.w	r3, #0
 80049de:	603b      	str	r3, [r7, #0]
	if (freq_hz > VC_WAVE_MAX_FREQ_HZ)
 80049e0:	edd7 7a00 	vldr	s15, [r7]
 80049e4:	ed9f 7a1e 	vldr	s14, [pc, #120]	@ 8004a60 <VibeCheckWaveGen_SetFrequency+0xa0>
 80049e8:	eef4 7ac7 	vcmpe.f32	s15, s14
 80049ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80049f0:	dd01      	ble.n	80049f6 <VibeCheckWaveGen_SetFrequency+0x36>
		freq_hz = VC_WAVE_MAX_FREQ_HZ;
 80049f2:	4b1c      	ldr	r3, [pc, #112]	@ (8004a64 <VibeCheckWaveGen_SetFrequency+0xa4>)
 80049f4:	603b      	str	r3, [r7, #0]

	uint32_t arr = VC_WAVE_TIM_COUNTS_PER_SECOND / (VC_WAVE_BUF_LEN * freq_hz) - 1;
 80049f6:	edd7 7a00 	vldr	s15, [r7]
 80049fa:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 8004a68 <VibeCheckWaveGen_SetFrequency+0xa8>
 80049fe:	ee27 7a87 	vmul.f32	s14, s15, s14
 8004a02:	eddf 6a1a 	vldr	s13, [pc, #104]	@ 8004a6c <VibeCheckWaveGen_SetFrequency+0xac>
 8004a06:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8004a0a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8004a0e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8004a12:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004a16:	ee17 3a90 	vmov	r3, s15
 8004a1a:	60fb      	str	r3, [r7, #12]
	wavegen->freq_hz = VC_WAVE_TIM_COUNTS_PER_SECOND / ((float)arr + 1.0f) / VC_WAVE_BUF_LEN;
 8004a1c:	68fb      	ldr	r3, [r7, #12]
 8004a1e:	ee07 3a90 	vmov	s15, r3
 8004a22:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004a26:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8004a2a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a2e:	eddf 6a0f 	vldr	s13, [pc, #60]	@ 8004a6c <VibeCheckWaveGen_SetFrequency+0xac>
 8004a32:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8004a36:	eddf 6a0c 	vldr	s13, [pc, #48]	@ 8004a68 <VibeCheckWaveGen_SetFrequency+0xa8>
 8004a3a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004a3e:	687b      	ldr	r3, [r7, #4]
 8004a40:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004a44:	edc3 7a07 	vstr	s15, [r3, #28]
	wavegen->htim->Instance->ARR = arr;
 8004a48:	687b      	ldr	r3, [r7, #4]
 8004a4a:	681b      	ldr	r3, [r3, #0]
 8004a4c:	681b      	ldr	r3, [r3, #0]
 8004a4e:	68fa      	ldr	r2, [r7, #12]
 8004a50:	62da      	str	r2, [r3, #44]	@ 0x2c
}
 8004a52:	bf00      	nop
 8004a54:	3714      	adds	r7, #20
 8004a56:	46bd      	mov	sp, r7
 8004a58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a5c:	4770      	bx	lr
 8004a5e:	bf00      	nop
 8004a60:	46989600 	.word	0x46989600
 8004a64:	46989600 	.word	0x46989600
 8004a68:	44000000 	.word	0x44000000
 8004a6c:	4b989680 	.word	0x4b989680

08004a70 <VibeCheckWaveGen_GetFrequency>:

float VibeCheckWaveGen_GetFrequency(VibeCheckWaveGen* wavegen)
{
 8004a70:	b480      	push	{r7}
 8004a72:	b083      	sub	sp, #12
 8004a74:	af00      	add	r7, sp, #0
 8004a76:	6078      	str	r0, [r7, #4]
	return wavegen->freq_hz;
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004a7e:	69db      	ldr	r3, [r3, #28]
 8004a80:	ee07 3a90 	vmov	s15, r3
}
 8004a84:	eeb0 0a67 	vmov.f32	s0, s15
 8004a88:	370c      	adds	r7, #12
 8004a8a:	46bd      	mov	sp, r7
 8004a8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a90:	4770      	bx	lr

08004a92 <VibeCheckWaveGen_SetAmplitude>:

void VibeCheckWaveGen_SetAmplitude(VibeCheckWaveGen* wavegen, float amplitude)
{
 8004a92:	b480      	push	{r7}
 8004a94:	b083      	sub	sp, #12
 8004a96:	af00      	add	r7, sp, #0
 8004a98:	6078      	str	r0, [r7, #4]
 8004a9a:	ed87 0a00 	vstr	s0, [r7]
	if (amplitude < 0.0f)
 8004a9e:	edd7 7a00 	vldr	s15, [r7]
 8004aa2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004aa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004aaa:	d502      	bpl.n	8004ab2 <VibeCheckWaveGen_SetAmplitude+0x20>
		amplitude = 0.0f;
 8004aac:	f04f 0300 	mov.w	r3, #0
 8004ab0:	603b      	str	r3, [r7, #0]
	if (amplitude > 1.0f)
 8004ab2:	edd7 7a00 	vldr	s15, [r7]
 8004ab6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8004aba:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004abe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004ac2:	dd02      	ble.n	8004aca <VibeCheckWaveGen_SetAmplitude+0x38>
		amplitude = 1.0f;
 8004ac4:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8004ac8:	603b      	str	r3, [r7, #0]

	wavegen->amplitude = amplitude;
 8004aca:	687b      	ldr	r3, [r7, #4]
 8004acc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004ad0:	461a      	mov	r2, r3
 8004ad2:	683b      	ldr	r3, [r7, #0]
 8004ad4:	6213      	str	r3, [r2, #32]
	wavegen->wave_ping_compute_pending = 1;
 8004ad6:	687b      	ldr	r3, [r7, #4]
 8004ad8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004adc:	461a      	mov	r2, r3
 8004ade:	2301      	movs	r3, #1
 8004ae0:	6093      	str	r3, [r2, #8]
	wavegen->wave_pong_compute_pending = 1;
 8004ae2:	687b      	ldr	r3, [r7, #4]
 8004ae4:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004ae8:	461a      	mov	r2, r3
 8004aea:	2301      	movs	r3, #1
 8004aec:	60d3      	str	r3, [r2, #12]
}
 8004aee:	bf00      	nop
 8004af0:	370c      	adds	r7, #12
 8004af2:	46bd      	mov	sp, r7
 8004af4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004af8:	4770      	bx	lr

08004afa <VibeCheckWaveGen_GetAmplitude>:

float VibeCheckWaveGen_GetAmplitude(VibeCheckWaveGen* wavegen)
{
 8004afa:	b480      	push	{r7}
 8004afc:	b083      	sub	sp, #12
 8004afe:	af00      	add	r7, sp, #0
 8004b00:	6078      	str	r0, [r7, #4]
	return wavegen->amplitude;
 8004b02:	687b      	ldr	r3, [r7, #4]
 8004b04:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004b08:	6a1b      	ldr	r3, [r3, #32]
 8004b0a:	ee07 3a90 	vmov	s15, r3
}
 8004b0e:	eeb0 0a67 	vmov.f32	s0, s15
 8004b12:	370c      	adds	r7, #12
 8004b14:	46bd      	mov	sp, r7
 8004b16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b1a:	4770      	bx	lr

08004b1c <VibeCheckWaveGen_SetWaveform>:

void VibeCheckWaveGen_SetWaveform(VibeCheckWaveGen* wavegen, VibeCheckWaveGen_Waveform waveform)
{
 8004b1c:	b480      	push	{r7}
 8004b1e:	b083      	sub	sp, #12
 8004b20:	af00      	add	r7, sp, #0
 8004b22:	6078      	str	r0, [r7, #4]
 8004b24:	460b      	mov	r3, r1
 8004b26:	70fb      	strb	r3, [r7, #3]
	wavegen->waveform = waveform;
 8004b28:	687b      	ldr	r3, [r7, #4]
 8004b2a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004b2e:	461a      	mov	r2, r3
 8004b30:	78fb      	ldrb	r3, [r7, #3]
 8004b32:	7613      	strb	r3, [r2, #24]
	wavegen->wave_ping_compute_pending = 1;
 8004b34:	687b      	ldr	r3, [r7, #4]
 8004b36:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004b3a:	461a      	mov	r2, r3
 8004b3c:	2301      	movs	r3, #1
 8004b3e:	6093      	str	r3, [r2, #8]
	wavegen->wave_pong_compute_pending = 1;
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004b46:	461a      	mov	r2, r3
 8004b48:	2301      	movs	r3, #1
 8004b4a:	60d3      	str	r3, [r2, #12]
}
 8004b4c:	bf00      	nop
 8004b4e:	370c      	adds	r7, #12
 8004b50:	46bd      	mov	sp, r7
 8004b52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b56:	4770      	bx	lr

08004b58 <VibeCheckWaveGen_GetWaveform>:

VibeCheckWaveGen_Waveform VibeCheckWaveGen_GetWaveform(VibeCheckWaveGen* wavegen)
{
 8004b58:	b480      	push	{r7}
 8004b5a:	b083      	sub	sp, #12
 8004b5c:	af00      	add	r7, sp, #0
 8004b5e:	6078      	str	r0, [r7, #4]
	return wavegen->waveform;
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004b66:	7e1b      	ldrb	r3, [r3, #24]
}
 8004b68:	4618      	mov	r0, r3
 8004b6a:	370c      	adds	r7, #12
 8004b6c:	46bd      	mov	sp, r7
 8004b6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b72:	4770      	bx	lr

08004b74 <VibeCheckWaveGen_WasMuteButtonPressed>:

uint32_t VibeCheckWaveGen_WasMuteButtonPressed(VibeCheckWaveGen* wavegen, uint32_t* is_muted)
{
 8004b74:	b480      	push	{r7}
 8004b76:	b083      	sub	sp, #12
 8004b78:	af00      	add	r7, sp, #0
 8004b7a:	6078      	str	r0, [r7, #4]
 8004b7c:	6039      	str	r1, [r7, #0]
	if (wavegen->mute_button_flag)
 8004b7e:	687b      	ldr	r3, [r7, #4]
 8004b80:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004b84:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004b86:	2b00      	cmp	r3, #0
 8004b88:	d00d      	beq.n	8004ba6 <VibeCheckWaveGen_WasMuteButtonPressed+0x32>
	{
		wavegen->mute_button_flag = 0;
 8004b8a:	687b      	ldr	r3, [r7, #4]
 8004b8c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004b90:	461a      	mov	r2, r3
 8004b92:	2300      	movs	r3, #0
 8004b94:	62d3      	str	r3, [r2, #44]	@ 0x2c
		*is_muted = wavegen->is_muted;
 8004b96:	687b      	ldr	r3, [r7, #4]
 8004b98:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004b9c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8004b9e:	683b      	ldr	r3, [r7, #0]
 8004ba0:	601a      	str	r2, [r3, #0]
		return 1;
 8004ba2:	2301      	movs	r3, #1
 8004ba4:	e000      	b.n	8004ba8 <VibeCheckWaveGen_WasMuteButtonPressed+0x34>
	}

	return 0;
 8004ba6:	2300      	movs	r3, #0
}
 8004ba8:	4618      	mov	r0, r3
 8004baa:	370c      	adds	r7, #12
 8004bac:	46bd      	mov	sp, r7
 8004bae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bb2:	4770      	bx	lr

08004bb4 <VibeCheckWaveGen_DMAHalfCpltCallback>:


/* keeps track of which end of the double buffer to compute when updating the wave */
void VibeCheckWaveGen_DMAHalfCpltCallback(VibeCheckWaveGen* wavegen)
{
 8004bb4:	b480      	push	{r7}
 8004bb6:	b083      	sub	sp, #12
 8004bb8:	af00      	add	r7, sp, #0
 8004bba:	6078      	str	r0, [r7, #4]
	if (wavegen->wave_ping_compute_pending)
 8004bbc:	687b      	ldr	r3, [r7, #4]
 8004bbe:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004bc2:	689b      	ldr	r3, [r3, #8]
 8004bc4:	2b00      	cmp	r3, #0
 8004bc6:	d00b      	beq.n	8004be0 <VibeCheckWaveGen_DMAHalfCpltCallback+0x2c>
	{
		wavegen->wave_ping_compute_pending = 0;
 8004bc8:	687b      	ldr	r3, [r7, #4]
 8004bca:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004bce:	461a      	mov	r2, r3
 8004bd0:	2300      	movs	r3, #0
 8004bd2:	6093      	str	r3, [r2, #8]
		wavegen->wave_ping_compute_ready = 1;
 8004bd4:	687b      	ldr	r3, [r7, #4]
 8004bd6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004bda:	461a      	mov	r2, r3
 8004bdc:	2301      	movs	r3, #1
 8004bde:	6113      	str	r3, [r2, #16]
	}
}
 8004be0:	bf00      	nop
 8004be2:	370c      	adds	r7, #12
 8004be4:	46bd      	mov	sp, r7
 8004be6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bea:	4770      	bx	lr

08004bec <VibeCheckWaveGen_DMACpltCallback>:

void VibeCheckWaveGen_DMACpltCallback(VibeCheckWaveGen* wavegen)
{
 8004bec:	b480      	push	{r7}
 8004bee:	b083      	sub	sp, #12
 8004bf0:	af00      	add	r7, sp, #0
 8004bf2:	6078      	str	r0, [r7, #4]
	if (wavegen->wave_pong_compute_pending)
 8004bf4:	687b      	ldr	r3, [r7, #4]
 8004bf6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004bfa:	68db      	ldr	r3, [r3, #12]
 8004bfc:	2b00      	cmp	r3, #0
 8004bfe:	d00b      	beq.n	8004c18 <VibeCheckWaveGen_DMACpltCallback+0x2c>
	{
		wavegen->wave_pong_compute_pending = 0;
 8004c00:	687b      	ldr	r3, [r7, #4]
 8004c02:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004c06:	461a      	mov	r2, r3
 8004c08:	2300      	movs	r3, #0
 8004c0a:	60d3      	str	r3, [r2, #12]
		wavegen->wave_pong_compute_ready = 1;
 8004c0c:	687b      	ldr	r3, [r7, #4]
 8004c0e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004c12:	461a      	mov	r2, r3
 8004c14:	2301      	movs	r3, #1
 8004c16:	6153      	str	r3, [r2, #20]
	}
}
 8004c18:	bf00      	nop
 8004c1a:	370c      	adds	r7, #12
 8004c1c:	46bd      	mov	sp, r7
 8004c1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c22:	4770      	bx	lr

08004c24 <VibeCheckWaveGen_StartDemo>:



void VibeCheckWaveGen_StartDemo(VibeCheckWaveGen* wavegen)
{
 8004c24:	b590      	push	{r4, r7, lr}
 8004c26:	b083      	sub	sp, #12
 8004c28:	af00      	add	r7, sp, #0
 8004c2a:	6078      	str	r0, [r7, #4]
	Sequencer_Init(&wavegen->sequencer);
 8004c2c:	687a      	ldr	r2, [r7, #4]
 8004c2e:	f241 0338 	movw	r3, #4152	@ 0x1038
 8004c32:	4413      	add	r3, r2
 8004c34:	4618      	mov	r0, r3
 8004c36:	f7fc fe61 	bl	80018fc <Sequencer_Init>
	if (wavegen->demo_num)
 8004c3a:	687b      	ldr	r3, [r7, #4]
 8004c3c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004c40:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004c42:	2b00      	cmp	r3, #0
 8004c44:	d009      	beq.n	8004c5a <VibeCheckWaveGen_StartDemo+0x36>
		Sequencer_SetSequence(&wavegen->sequencer, demo_times0, sizeof(demo_times0) / sizeof(demo_times0[0]), 1);
 8004c46:	687b      	ldr	r3, [r7, #4]
 8004c48:	f241 0038 	movw	r0, #4152	@ 0x1038
 8004c4c:	4418      	add	r0, r3
 8004c4e:	2301      	movs	r3, #1
 8004c50:	221a      	movs	r2, #26
 8004c52:	4916      	ldr	r1, [pc, #88]	@ (8004cac <VibeCheckWaveGen_StartDemo+0x88>)
 8004c54:	f7fc fe6e 	bl	8001934 <Sequencer_SetSequence>
 8004c58:	e008      	b.n	8004c6c <VibeCheckWaveGen_StartDemo+0x48>
	else
		Sequencer_SetSequence(&wavegen->sequencer, demo_times1, sizeof(demo_times1) / sizeof(demo_times1[0]), 1);
 8004c5a:	687b      	ldr	r3, [r7, #4]
 8004c5c:	f241 0038 	movw	r0, #4152	@ 0x1038
 8004c60:	4418      	add	r0, r3
 8004c62:	2301      	movs	r3, #1
 8004c64:	222d      	movs	r2, #45	@ 0x2d
 8004c66:	4912      	ldr	r1, [pc, #72]	@ (8004cb0 <VibeCheckWaveGen_StartDemo+0x8c>)
 8004c68:	f7fc fe64 	bl	8001934 <Sequencer_SetSequence>
	wavegen->demo_num = !wavegen->demo_num;
 8004c6c:	687b      	ldr	r3, [r7, #4]
 8004c6e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004c72:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004c74:	2b00      	cmp	r3, #0
 8004c76:	bf0c      	ite	eq
 8004c78:	2301      	moveq	r3, #1
 8004c7a:	2300      	movne	r3, #0
 8004c7c:	b2db      	uxtb	r3, r3
 8004c7e:	461a      	mov	r2, r3
 8004c80:	687b      	ldr	r3, [r7, #4]
 8004c82:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8004c86:	635a      	str	r2, [r3, #52]	@ 0x34
	Sequencer_Start(&wavegen->sequencer, HAL_GetTick());
 8004c88:	687b      	ldr	r3, [r7, #4]
 8004c8a:	f241 0438 	movw	r4, #4152	@ 0x1038
 8004c8e:	441c      	add	r4, r3
 8004c90:	f000 fb2e 	bl	80052f0 <HAL_GetTick>
 8004c94:	4603      	mov	r3, r0
 8004c96:	4619      	mov	r1, r3
 8004c98:	4620      	mov	r0, r4
 8004c9a:	f7fc fea3 	bl	80019e4 <Sequencer_Start>
	VibeCheckWaveGen_Start(wavegen);
 8004c9e:	6878      	ldr	r0, [r7, #4]
 8004ca0:	f7ff fe4a 	bl	8004938 <VibeCheckWaveGen_Start>
}
 8004ca4:	bf00      	nop
 8004ca6:	370c      	adds	r7, #12
 8004ca8:	46bd      	mov	sp, r7
 8004caa:	bd90      	pop	{r4, r7, pc}
 8004cac:	0801ae24 	.word	0x0801ae24
 8004cb0:	0801aef4 	.word	0x0801aef4

08004cb4 <VibeCheckWaveGen_StopDemo>:

void VibeCheckWaveGen_StopDemo(VibeCheckWaveGen* wavegen)
{
 8004cb4:	b580      	push	{r7, lr}
 8004cb6:	b082      	sub	sp, #8
 8004cb8:	af00      	add	r7, sp, #0
 8004cba:	6078      	str	r0, [r7, #4]
	VibeCheckWaveGen_Stop(wavegen);
 8004cbc:	6878      	ldr	r0, [r7, #4]
 8004cbe:	f7ff fe5d 	bl	800497c <VibeCheckWaveGen_Stop>
	Sequencer_Stop(&wavegen->sequencer);
 8004cc2:	687a      	ldr	r2, [r7, #4]
 8004cc4:	f241 0338 	movw	r3, #4152	@ 0x1038
 8004cc8:	4413      	add	r3, r2
 8004cca:	4618      	mov	r0, r3
 8004ccc:	f7fc fe9e 	bl	8001a0c <Sequencer_Stop>
}
 8004cd0:	bf00      	nop
 8004cd2:	3708      	adds	r7, #8
 8004cd4:	46bd      	mov	sp, r7
 8004cd6:	bd80      	pop	{r7, pc}

08004cd8 <VibeCheckWaveGenCMD_Set>:
*/



static uint32_t VibeCheckWaveGenCMD_Set(VibeCheckWaveGen* wavegen, VibeCheckShell* shell)
{
 8004cd8:	b580      	push	{r7, lr}
 8004cda:	b094      	sub	sp, #80	@ 0x50
 8004cdc:	af00      	add	r7, sp, #0
 8004cde:	6078      	str	r0, [r7, #4]
 8004ce0:	6039      	str	r1, [r7, #0]
	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8004ce2:	f107 0310 	add.w	r3, r7, #16
 8004ce6:	2240      	movs	r2, #64	@ 0x40
 8004ce8:	4619      	mov	r1, r3
 8004cea:	6838      	ldr	r0, [r7, #0]
 8004cec:	f7fe fe0a 	bl	8003904 <VibeCheckShell_GetNextString>
 8004cf0:	4603      	mov	r3, r0
 8004cf2:	2b00      	cmp	r3, #0
 8004cf4:	f000 80b0 	beq.w	8004e58 <VibeCheckWaveGenCMD_Set+0x180>
	{
		if (!strcmp(str, "frequency"))
 8004cf8:	f107 0310 	add.w	r3, r7, #16
 8004cfc:	4959      	ldr	r1, [pc, #356]	@ (8004e64 <VibeCheckWaveGenCMD_Set+0x18c>)
 8004cfe:	4618      	mov	r0, r3
 8004d00:	f7fb fb06 	bl	8000310 <strcmp>
 8004d04:	4603      	mov	r3, r0
 8004d06:	2b00      	cmp	r3, #0
 8004d08:	d119      	bne.n	8004d3e <VibeCheckWaveGenCMD_Set+0x66>
		{
			float val;
			if (VibeCheckShell_GetNextFloat(shell, &val))
 8004d0a:	f107 030c 	add.w	r3, r7, #12
 8004d0e:	4619      	mov	r1, r3
 8004d10:	6838      	ldr	r0, [r7, #0]
 8004d12:	f7fe fead 	bl	8003a70 <VibeCheckShell_GetNextFloat>
 8004d16:	4603      	mov	r3, r0
 8004d18:	2b00      	cmp	r3, #0
 8004d1a:	f000 809d 	beq.w	8004e58 <VibeCheckWaveGenCMD_Set+0x180>
			{
				VibeCheckWaveGen_SetFrequency(wavegen, val);
 8004d1e:	edd7 7a03 	vldr	s15, [r7, #12]
 8004d22:	eeb0 0a67 	vmov.f32	s0, s15
 8004d26:	6878      	ldr	r0, [r7, #4]
 8004d28:	f7ff fe4a 	bl	80049c0 <VibeCheckWaveGen_SetFrequency>
				VibeCheckShell_PutOutputString(shell, "ack");
 8004d2c:	494e      	ldr	r1, [pc, #312]	@ (8004e68 <VibeCheckWaveGenCMD_Set+0x190>)
 8004d2e:	6838      	ldr	r0, [r7, #0]
 8004d30:	f7fe fee8 	bl	8003b04 <VibeCheckShell_PutOutputString>
				VibeCheckShell_PutOutputDelimiter(shell);
 8004d34:	6838      	ldr	r0, [r7, #0]
 8004d36:	f7fe ff63 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
				return 1;
 8004d3a:	2301      	movs	r3, #1
 8004d3c:	e08d      	b.n	8004e5a <VibeCheckWaveGenCMD_Set+0x182>
			}
		}
		else if (!strcmp(str, "amplitude"))
 8004d3e:	f107 0310 	add.w	r3, r7, #16
 8004d42:	494a      	ldr	r1, [pc, #296]	@ (8004e6c <VibeCheckWaveGenCMD_Set+0x194>)
 8004d44:	4618      	mov	r0, r3
 8004d46:	f7fb fae3 	bl	8000310 <strcmp>
 8004d4a:	4603      	mov	r3, r0
 8004d4c:	2b00      	cmp	r3, #0
 8004d4e:	d118      	bne.n	8004d82 <VibeCheckWaveGenCMD_Set+0xaa>
		{
			float val;
			if (VibeCheckShell_GetNextFloat(shell, &val))
 8004d50:	f107 0308 	add.w	r3, r7, #8
 8004d54:	4619      	mov	r1, r3
 8004d56:	6838      	ldr	r0, [r7, #0]
 8004d58:	f7fe fe8a 	bl	8003a70 <VibeCheckShell_GetNextFloat>
 8004d5c:	4603      	mov	r3, r0
 8004d5e:	2b00      	cmp	r3, #0
 8004d60:	d07a      	beq.n	8004e58 <VibeCheckWaveGenCMD_Set+0x180>
			{
				VibeCheckWaveGen_SetAmplitude(wavegen, val);
 8004d62:	edd7 7a02 	vldr	s15, [r7, #8]
 8004d66:	eeb0 0a67 	vmov.f32	s0, s15
 8004d6a:	6878      	ldr	r0, [r7, #4]
 8004d6c:	f7ff fe91 	bl	8004a92 <VibeCheckWaveGen_SetAmplitude>
				VibeCheckShell_PutOutputString(shell, "ack");
 8004d70:	493d      	ldr	r1, [pc, #244]	@ (8004e68 <VibeCheckWaveGenCMD_Set+0x190>)
 8004d72:	6838      	ldr	r0, [r7, #0]
 8004d74:	f7fe fec6 	bl	8003b04 <VibeCheckShell_PutOutputString>
				VibeCheckShell_PutOutputDelimiter(shell);
 8004d78:	6838      	ldr	r0, [r7, #0]
 8004d7a:	f7fe ff41 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
				return 1;
 8004d7e:	2301      	movs	r3, #1
 8004d80:	e06b      	b.n	8004e5a <VibeCheckWaveGenCMD_Set+0x182>
			}
		}
		else if (!strcmp(str, "waveform"))
 8004d82:	f107 0310 	add.w	r3, r7, #16
 8004d86:	493a      	ldr	r1, [pc, #232]	@ (8004e70 <VibeCheckWaveGenCMD_Set+0x198>)
 8004d88:	4618      	mov	r0, r3
 8004d8a:	f7fb fac1 	bl	8000310 <strcmp>
 8004d8e:	4603      	mov	r3, r0
 8004d90:	2b00      	cmp	r3, #0
 8004d92:	d161      	bne.n	8004e58 <VibeCheckWaveGenCMD_Set+0x180>
		{
			if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8004d94:	f107 0310 	add.w	r3, r7, #16
 8004d98:	2240      	movs	r2, #64	@ 0x40
 8004d9a:	4619      	mov	r1, r3
 8004d9c:	6838      	ldr	r0, [r7, #0]
 8004d9e:	f7fe fdb1 	bl	8003904 <VibeCheckShell_GetNextString>
 8004da2:	4603      	mov	r3, r0
 8004da4:	2b00      	cmp	r3, #0
 8004da6:	d057      	beq.n	8004e58 <VibeCheckWaveGenCMD_Set+0x180>
			{
				if (!strcmp(str, "sine"))
 8004da8:	f107 0310 	add.w	r3, r7, #16
 8004dac:	4931      	ldr	r1, [pc, #196]	@ (8004e74 <VibeCheckWaveGenCMD_Set+0x19c>)
 8004dae:	4618      	mov	r0, r3
 8004db0:	f7fb faae 	bl	8000310 <strcmp>
 8004db4:	4603      	mov	r3, r0
 8004db6:	2b00      	cmp	r3, #0
 8004db8:	d10c      	bne.n	8004dd4 <VibeCheckWaveGenCMD_Set+0xfc>
				{
					VibeCheckWaveGen_SetWaveform(wavegen, VC_WAVE_SINE);
 8004dba:	2100      	movs	r1, #0
 8004dbc:	6878      	ldr	r0, [r7, #4]
 8004dbe:	f7ff fead 	bl	8004b1c <VibeCheckWaveGen_SetWaveform>
					VibeCheckShell_PutOutputString(shell, "ack");
 8004dc2:	4929      	ldr	r1, [pc, #164]	@ (8004e68 <VibeCheckWaveGenCMD_Set+0x190>)
 8004dc4:	6838      	ldr	r0, [r7, #0]
 8004dc6:	f7fe fe9d 	bl	8003b04 <VibeCheckShell_PutOutputString>
					VibeCheckShell_PutOutputDelimiter(shell);
 8004dca:	6838      	ldr	r0, [r7, #0]
 8004dcc:	f7fe ff18 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
					return 1;
 8004dd0:	2301      	movs	r3, #1
 8004dd2:	e042      	b.n	8004e5a <VibeCheckWaveGenCMD_Set+0x182>
				}
				else if (!strcmp(str, "square"))
 8004dd4:	f107 0310 	add.w	r3, r7, #16
 8004dd8:	4927      	ldr	r1, [pc, #156]	@ (8004e78 <VibeCheckWaveGenCMD_Set+0x1a0>)
 8004dda:	4618      	mov	r0, r3
 8004ddc:	f7fb fa98 	bl	8000310 <strcmp>
 8004de0:	4603      	mov	r3, r0
 8004de2:	2b00      	cmp	r3, #0
 8004de4:	d10c      	bne.n	8004e00 <VibeCheckWaveGenCMD_Set+0x128>
				{
					VibeCheckWaveGen_SetWaveform(wavegen, VC_WAVE_SQUARE);
 8004de6:	2101      	movs	r1, #1
 8004de8:	6878      	ldr	r0, [r7, #4]
 8004dea:	f7ff fe97 	bl	8004b1c <VibeCheckWaveGen_SetWaveform>
					VibeCheckShell_PutOutputString(shell, "ack");
 8004dee:	491e      	ldr	r1, [pc, #120]	@ (8004e68 <VibeCheckWaveGenCMD_Set+0x190>)
 8004df0:	6838      	ldr	r0, [r7, #0]
 8004df2:	f7fe fe87 	bl	8003b04 <VibeCheckShell_PutOutputString>
					VibeCheckShell_PutOutputDelimiter(shell);
 8004df6:	6838      	ldr	r0, [r7, #0]
 8004df8:	f7fe ff02 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
					return 1;
 8004dfc:	2301      	movs	r3, #1
 8004dfe:	e02c      	b.n	8004e5a <VibeCheckWaveGenCMD_Set+0x182>
				}
				else if (!strcmp(str, "saw"))
 8004e00:	f107 0310 	add.w	r3, r7, #16
 8004e04:	491d      	ldr	r1, [pc, #116]	@ (8004e7c <VibeCheckWaveGenCMD_Set+0x1a4>)
 8004e06:	4618      	mov	r0, r3
 8004e08:	f7fb fa82 	bl	8000310 <strcmp>
 8004e0c:	4603      	mov	r3, r0
 8004e0e:	2b00      	cmp	r3, #0
 8004e10:	d10c      	bne.n	8004e2c <VibeCheckWaveGenCMD_Set+0x154>
				{
					VibeCheckWaveGen_SetWaveform(wavegen, VC_WAVE_SAW);
 8004e12:	2102      	movs	r1, #2
 8004e14:	6878      	ldr	r0, [r7, #4]
 8004e16:	f7ff fe81 	bl	8004b1c <VibeCheckWaveGen_SetWaveform>
					VibeCheckShell_PutOutputString(shell, "ack");
 8004e1a:	4913      	ldr	r1, [pc, #76]	@ (8004e68 <VibeCheckWaveGenCMD_Set+0x190>)
 8004e1c:	6838      	ldr	r0, [r7, #0]
 8004e1e:	f7fe fe71 	bl	8003b04 <VibeCheckShell_PutOutputString>
					VibeCheckShell_PutOutputDelimiter(shell);
 8004e22:	6838      	ldr	r0, [r7, #0]
 8004e24:	f7fe feec 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
					return 1;
 8004e28:	2301      	movs	r3, #1
 8004e2a:	e016      	b.n	8004e5a <VibeCheckWaveGenCMD_Set+0x182>
				}
				else if (!strcmp(str, "triangle"))
 8004e2c:	f107 0310 	add.w	r3, r7, #16
 8004e30:	4913      	ldr	r1, [pc, #76]	@ (8004e80 <VibeCheckWaveGenCMD_Set+0x1a8>)
 8004e32:	4618      	mov	r0, r3
 8004e34:	f7fb fa6c 	bl	8000310 <strcmp>
 8004e38:	4603      	mov	r3, r0
 8004e3a:	2b00      	cmp	r3, #0
 8004e3c:	d10c      	bne.n	8004e58 <VibeCheckWaveGenCMD_Set+0x180>
				{
					VibeCheckWaveGen_SetWaveform(wavegen, VC_WAVE_TRIANGLE);
 8004e3e:	2103      	movs	r1, #3
 8004e40:	6878      	ldr	r0, [r7, #4]
 8004e42:	f7ff fe6b 	bl	8004b1c <VibeCheckWaveGen_SetWaveform>
					VibeCheckShell_PutOutputString(shell, "ack");
 8004e46:	4908      	ldr	r1, [pc, #32]	@ (8004e68 <VibeCheckWaveGenCMD_Set+0x190>)
 8004e48:	6838      	ldr	r0, [r7, #0]
 8004e4a:	f7fe fe5b 	bl	8003b04 <VibeCheckShell_PutOutputString>
					VibeCheckShell_PutOutputDelimiter(shell);
 8004e4e:	6838      	ldr	r0, [r7, #0]
 8004e50:	f7fe fed6 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
					return 1;
 8004e54:	2301      	movs	r3, #1
 8004e56:	e000      	b.n	8004e5a <VibeCheckWaveGenCMD_Set+0x182>
				}
			}
		}
	}

	return 0;
 8004e58:	2300      	movs	r3, #0
}
 8004e5a:	4618      	mov	r0, r3
 8004e5c:	3750      	adds	r7, #80	@ 0x50
 8004e5e:	46bd      	mov	sp, r7
 8004e60:	bd80      	pop	{r7, pc}
 8004e62:	bf00      	nop
 8004e64:	0801aaf0 	.word	0x0801aaf0
 8004e68:	0801aafc 	.word	0x0801aafc
 8004e6c:	0801ab00 	.word	0x0801ab00
 8004e70:	0801ab0c 	.word	0x0801ab0c
 8004e74:	0801ab18 	.word	0x0801ab18
 8004e78:	0801ab20 	.word	0x0801ab20
 8004e7c:	0801ab28 	.word	0x0801ab28
 8004e80:	0801ab2c 	.word	0x0801ab2c

08004e84 <VibeCheckWaveGenCMD_Get>:

static uint32_t VibeCheckWaveGenCMD_Get(VibeCheckWaveGen* wavegen, VibeCheckShell* shell)
{
 8004e84:	b580      	push	{r7, lr}
 8004e86:	b092      	sub	sp, #72	@ 0x48
 8004e88:	af00      	add	r7, sp, #0
 8004e8a:	6078      	str	r0, [r7, #4]
 8004e8c:	6039      	str	r1, [r7, #0]
	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8004e8e:	f107 0308 	add.w	r3, r7, #8
 8004e92:	2240      	movs	r2, #64	@ 0x40
 8004e94:	4619      	mov	r1, r3
 8004e96:	6838      	ldr	r0, [r7, #0]
 8004e98:	f7fe fd34 	bl	8003904 <VibeCheckShell_GetNextString>
 8004e9c:	4603      	mov	r3, r0
 8004e9e:	2b00      	cmp	r3, #0
 8004ea0:	d077      	beq.n	8004f92 <VibeCheckWaveGenCMD_Get+0x10e>
	{
		if (!strcmp(str, "frequency"))
 8004ea2:	f107 0308 	add.w	r3, r7, #8
 8004ea6:	493d      	ldr	r1, [pc, #244]	@ (8004f9c <VibeCheckWaveGenCMD_Get+0x118>)
 8004ea8:	4618      	mov	r0, r3
 8004eaa:	f7fb fa31 	bl	8000310 <strcmp>
 8004eae:	4603      	mov	r3, r0
 8004eb0:	2b00      	cmp	r3, #0
 8004eb2:	d115      	bne.n	8004ee0 <VibeCheckWaveGenCMD_Get+0x5c>
		{
			VibeCheckShell_PutOutputString(shell, "ack");
 8004eb4:	493a      	ldr	r1, [pc, #232]	@ (8004fa0 <VibeCheckWaveGenCMD_Get+0x11c>)
 8004eb6:	6838      	ldr	r0, [r7, #0]
 8004eb8:	f7fe fe24 	bl	8003b04 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputSeparator(shell);
 8004ebc:	6838      	ldr	r0, [r7, #0]
 8004ebe:	f7fe fe91 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputFloat(shell, VibeCheckWaveGen_GetFrequency(wavegen));
 8004ec2:	6878      	ldr	r0, [r7, #4]
 8004ec4:	f7ff fdd4 	bl	8004a70 <VibeCheckWaveGen_GetFrequency>
 8004ec8:	eef0 7a40 	vmov.f32	s15, s0
 8004ecc:	eeb0 0a67 	vmov.f32	s0, s15
 8004ed0:	6838      	ldr	r0, [r7, #0]
 8004ed2:	f7fe fe69 	bl	8003ba8 <VibeCheckShell_PutOutputFloat>
			VibeCheckShell_PutOutputDelimiter(shell);
 8004ed6:	6838      	ldr	r0, [r7, #0]
 8004ed8:	f7fe fe92 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8004edc:	2301      	movs	r3, #1
 8004ede:	e059      	b.n	8004f94 <VibeCheckWaveGenCMD_Get+0x110>
		}
		else if (!strcmp(str, "amplitude"))
 8004ee0:	f107 0308 	add.w	r3, r7, #8
 8004ee4:	492f      	ldr	r1, [pc, #188]	@ (8004fa4 <VibeCheckWaveGenCMD_Get+0x120>)
 8004ee6:	4618      	mov	r0, r3
 8004ee8:	f7fb fa12 	bl	8000310 <strcmp>
 8004eec:	4603      	mov	r3, r0
 8004eee:	2b00      	cmp	r3, #0
 8004ef0:	d115      	bne.n	8004f1e <VibeCheckWaveGenCMD_Get+0x9a>
		{
			VibeCheckShell_PutOutputString(shell, "ack");
 8004ef2:	492b      	ldr	r1, [pc, #172]	@ (8004fa0 <VibeCheckWaveGenCMD_Get+0x11c>)
 8004ef4:	6838      	ldr	r0, [r7, #0]
 8004ef6:	f7fe fe05 	bl	8003b04 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputSeparator(shell);
 8004efa:	6838      	ldr	r0, [r7, #0]
 8004efc:	f7fe fe72 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>
			VibeCheckShell_PutOutputFloat(shell, VibeCheckWaveGen_GetAmplitude(wavegen));
 8004f00:	6878      	ldr	r0, [r7, #4]
 8004f02:	f7ff fdfa 	bl	8004afa <VibeCheckWaveGen_GetAmplitude>
 8004f06:	eef0 7a40 	vmov.f32	s15, s0
 8004f0a:	eeb0 0a67 	vmov.f32	s0, s15
 8004f0e:	6838      	ldr	r0, [r7, #0]
 8004f10:	f7fe fe4a 	bl	8003ba8 <VibeCheckShell_PutOutputFloat>
			VibeCheckShell_PutOutputDelimiter(shell);
 8004f14:	6838      	ldr	r0, [r7, #0]
 8004f16:	f7fe fe73 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8004f1a:	2301      	movs	r3, #1
 8004f1c:	e03a      	b.n	8004f94 <VibeCheckWaveGenCMD_Get+0x110>
		}
		else if (!strcmp(str, "waveform"))
 8004f1e:	f107 0308 	add.w	r3, r7, #8
 8004f22:	4921      	ldr	r1, [pc, #132]	@ (8004fa8 <VibeCheckWaveGenCMD_Get+0x124>)
 8004f24:	4618      	mov	r0, r3
 8004f26:	f7fb f9f3 	bl	8000310 <strcmp>
 8004f2a:	4603      	mov	r3, r0
 8004f2c:	2b00      	cmp	r3, #0
 8004f2e:	d130      	bne.n	8004f92 <VibeCheckWaveGenCMD_Get+0x10e>
		{
			VibeCheckShell_PutOutputString(shell, "ack");
 8004f30:	491b      	ldr	r1, [pc, #108]	@ (8004fa0 <VibeCheckWaveGenCMD_Get+0x11c>)
 8004f32:	6838      	ldr	r0, [r7, #0]
 8004f34:	f7fe fde6 	bl	8003b04 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputSeparator(shell);
 8004f38:	6838      	ldr	r0, [r7, #0]
 8004f3a:	f7fe fe53 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>
			switch (VibeCheckWaveGen_GetWaveform(wavegen))
 8004f3e:	6878      	ldr	r0, [r7, #4]
 8004f40:	f7ff fe0a 	bl	8004b58 <VibeCheckWaveGen_GetWaveform>
 8004f44:	4603      	mov	r3, r0
 8004f46:	2b03      	cmp	r3, #3
 8004f48:	d81e      	bhi.n	8004f88 <VibeCheckWaveGenCMD_Get+0x104>
 8004f4a:	a201      	add	r2, pc, #4	@ (adr r2, 8004f50 <VibeCheckWaveGenCMD_Get+0xcc>)
 8004f4c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004f50:	08004f61 	.word	0x08004f61
 8004f54:	08004f6b 	.word	0x08004f6b
 8004f58:	08004f75 	.word	0x08004f75
 8004f5c:	08004f7f 	.word	0x08004f7f
			{
			case VC_WAVE_SINE:
				VibeCheckShell_PutOutputString(shell, "sine");
 8004f60:	4912      	ldr	r1, [pc, #72]	@ (8004fac <VibeCheckWaveGenCMD_Get+0x128>)
 8004f62:	6838      	ldr	r0, [r7, #0]
 8004f64:	f7fe fdce 	bl	8003b04 <VibeCheckShell_PutOutputString>
				break;
 8004f68:	e00e      	b.n	8004f88 <VibeCheckWaveGenCMD_Get+0x104>
			case VC_WAVE_SQUARE:
				VibeCheckShell_PutOutputString(shell, "square");
 8004f6a:	4911      	ldr	r1, [pc, #68]	@ (8004fb0 <VibeCheckWaveGenCMD_Get+0x12c>)
 8004f6c:	6838      	ldr	r0, [r7, #0]
 8004f6e:	f7fe fdc9 	bl	8003b04 <VibeCheckShell_PutOutputString>
				break;
 8004f72:	e009      	b.n	8004f88 <VibeCheckWaveGenCMD_Get+0x104>
			case VC_WAVE_SAW:
				VibeCheckShell_PutOutputString(shell, "saw");
 8004f74:	490f      	ldr	r1, [pc, #60]	@ (8004fb4 <VibeCheckWaveGenCMD_Get+0x130>)
 8004f76:	6838      	ldr	r0, [r7, #0]
 8004f78:	f7fe fdc4 	bl	8003b04 <VibeCheckShell_PutOutputString>
				break;
 8004f7c:	e004      	b.n	8004f88 <VibeCheckWaveGenCMD_Get+0x104>
			case VC_WAVE_TRIANGLE:
				VibeCheckShell_PutOutputString(shell, "triangle");
 8004f7e:	490e      	ldr	r1, [pc, #56]	@ (8004fb8 <VibeCheckWaveGenCMD_Get+0x134>)
 8004f80:	6838      	ldr	r0, [r7, #0]
 8004f82:	f7fe fdbf 	bl	8003b04 <VibeCheckShell_PutOutputString>
				break;
 8004f86:	bf00      	nop
			}
			VibeCheckShell_PutOutputDelimiter(shell);
 8004f88:	6838      	ldr	r0, [r7, #0]
 8004f8a:	f7fe fe39 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8004f8e:	2301      	movs	r3, #1
 8004f90:	e000      	b.n	8004f94 <VibeCheckWaveGenCMD_Get+0x110>
		}
	}

	return 0;
 8004f92:	2300      	movs	r3, #0
}
 8004f94:	4618      	mov	r0, r3
 8004f96:	3748      	adds	r7, #72	@ 0x48
 8004f98:	46bd      	mov	sp, r7
 8004f9a:	bd80      	pop	{r7, pc}
 8004f9c:	0801aaf0 	.word	0x0801aaf0
 8004fa0:	0801aafc 	.word	0x0801aafc
 8004fa4:	0801ab00 	.word	0x0801ab00
 8004fa8:	0801ab0c 	.word	0x0801ab0c
 8004fac:	0801ab18 	.word	0x0801ab18
 8004fb0:	0801ab20 	.word	0x0801ab20
 8004fb4:	0801ab28 	.word	0x0801ab28
 8004fb8:	0801ab2c 	.word	0x0801ab2c

08004fbc <VibeCheckWaveGenCMD_Execute>:


uint32_t VibeCheckWaveGenCMD_Execute(void* obj, VibeCheckShell* shell)
{
 8004fbc:	b580      	push	{r7, lr}
 8004fbe:	b094      	sub	sp, #80	@ 0x50
 8004fc0:	af00      	add	r7, sp, #0
 8004fc2:	6078      	str	r0, [r7, #4]
 8004fc4:	6039      	str	r1, [r7, #0]
	VibeCheckWaveGen* wavegen = (VibeCheckWaveGen*)obj;
 8004fc6:	687b      	ldr	r3, [r7, #4]
 8004fc8:	64fb      	str	r3, [r7, #76]	@ 0x4c

	char str[VC_SHELL_MAX_TOKEN_LEN];
	if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 8004fca:	f107 030c 	add.w	r3, r7, #12
 8004fce:	2240      	movs	r2, #64	@ 0x40
 8004fd0:	4619      	mov	r1, r3
 8004fd2:	6838      	ldr	r0, [r7, #0]
 8004fd4:	f7fe fc96 	bl	8003904 <VibeCheckShell_GetNextString>
 8004fd8:	4603      	mov	r3, r0
 8004fda:	2b00      	cmp	r3, #0
 8004fdc:	f000 808b 	beq.w	80050f6 <VibeCheckWaveGenCMD_Execute+0x13a>
	{
		if (!strcmp(str, "start"))
 8004fe0:	f107 030c 	add.w	r3, r7, #12
 8004fe4:	4946      	ldr	r1, [pc, #280]	@ (8005100 <VibeCheckWaveGenCMD_Execute+0x144>)
 8004fe6:	4618      	mov	r0, r3
 8004fe8:	f7fb f992 	bl	8000310 <strcmp>
 8004fec:	4603      	mov	r3, r0
 8004fee:	2b00      	cmp	r3, #0
 8004ff0:	d10b      	bne.n	800500a <VibeCheckWaveGenCMD_Execute+0x4e>
		{
			VibeCheckWaveGen_Start(wavegen);
 8004ff2:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 8004ff4:	f7ff fca0 	bl	8004938 <VibeCheckWaveGen_Start>
			VibeCheckShell_PutOutputString(shell, "ack");
 8004ff8:	4942      	ldr	r1, [pc, #264]	@ (8005104 <VibeCheckWaveGenCMD_Execute+0x148>)
 8004ffa:	6838      	ldr	r0, [r7, #0]
 8004ffc:	f7fe fd82 	bl	8003b04 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputDelimiter(shell);
 8005000:	6838      	ldr	r0, [r7, #0]
 8005002:	f7fe fdfd 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8005006:	2301      	movs	r3, #1
 8005008:	e076      	b.n	80050f8 <VibeCheckWaveGenCMD_Execute+0x13c>
		}
		else if (!strcmp(str, "stop"))
 800500a:	f107 030c 	add.w	r3, r7, #12
 800500e:	493e      	ldr	r1, [pc, #248]	@ (8005108 <VibeCheckWaveGenCMD_Execute+0x14c>)
 8005010:	4618      	mov	r0, r3
 8005012:	f7fb f97d 	bl	8000310 <strcmp>
 8005016:	4603      	mov	r3, r0
 8005018:	2b00      	cmp	r3, #0
 800501a:	d10b      	bne.n	8005034 <VibeCheckWaveGenCMD_Execute+0x78>
		{
			VibeCheckWaveGen_Stop(wavegen);
 800501c:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 800501e:	f7ff fcad 	bl	800497c <VibeCheckWaveGen_Stop>
			VibeCheckShell_PutOutputString(shell, "ack");
 8005022:	4938      	ldr	r1, [pc, #224]	@ (8005104 <VibeCheckWaveGenCMD_Execute+0x148>)
 8005024:	6838      	ldr	r0, [r7, #0]
 8005026:	f7fe fd6d 	bl	8003b04 <VibeCheckShell_PutOutputString>
			VibeCheckShell_PutOutputDelimiter(shell);
 800502a:	6838      	ldr	r0, [r7, #0]
 800502c:	f7fe fde8 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
			return 1;
 8005030:	2301      	movs	r3, #1
 8005032:	e061      	b.n	80050f8 <VibeCheckWaveGenCMD_Execute+0x13c>
		}
		else if (!strcmp(str, "set"))
 8005034:	f107 030c 	add.w	r3, r7, #12
 8005038:	4934      	ldr	r1, [pc, #208]	@ (800510c <VibeCheckWaveGenCMD_Execute+0x150>)
 800503a:	4618      	mov	r0, r3
 800503c:	f7fb f968 	bl	8000310 <strcmp>
 8005040:	4603      	mov	r3, r0
 8005042:	2b00      	cmp	r3, #0
 8005044:	d108      	bne.n	8005058 <VibeCheckWaveGenCMD_Execute+0x9c>
		{
			if (VibeCheckWaveGenCMD_Set(wavegen, shell))
 8005046:	6839      	ldr	r1, [r7, #0]
 8005048:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 800504a:	f7ff fe45 	bl	8004cd8 <VibeCheckWaveGenCMD_Set>
 800504e:	4603      	mov	r3, r0
 8005050:	2b00      	cmp	r3, #0
 8005052:	d050      	beq.n	80050f6 <VibeCheckWaveGenCMD_Execute+0x13a>
			{
				return 1;
 8005054:	2301      	movs	r3, #1
 8005056:	e04f      	b.n	80050f8 <VibeCheckWaveGenCMD_Execute+0x13c>
			}
		}
		else if (!strcmp(str, "get"))
 8005058:	f107 030c 	add.w	r3, r7, #12
 800505c:	492c      	ldr	r1, [pc, #176]	@ (8005110 <VibeCheckWaveGenCMD_Execute+0x154>)
 800505e:	4618      	mov	r0, r3
 8005060:	f7fb f956 	bl	8000310 <strcmp>
 8005064:	4603      	mov	r3, r0
 8005066:	2b00      	cmp	r3, #0
 8005068:	d108      	bne.n	800507c <VibeCheckWaveGenCMD_Execute+0xc0>
		{
			if (VibeCheckWaveGenCMD_Get(wavegen, shell))
 800506a:	6839      	ldr	r1, [r7, #0]
 800506c:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 800506e:	f7ff ff09 	bl	8004e84 <VibeCheckWaveGenCMD_Get>
 8005072:	4603      	mov	r3, r0
 8005074:	2b00      	cmp	r3, #0
 8005076:	d03e      	beq.n	80050f6 <VibeCheckWaveGenCMD_Execute+0x13a>
			{
				return 1;
 8005078:	2301      	movs	r3, #1
 800507a:	e03d      	b.n	80050f8 <VibeCheckWaveGenCMD_Execute+0x13c>
			}
		}
		else if (!strcmp(str, "demo"))
 800507c:	f107 030c 	add.w	r3, r7, #12
 8005080:	4924      	ldr	r1, [pc, #144]	@ (8005114 <VibeCheckWaveGenCMD_Execute+0x158>)
 8005082:	4618      	mov	r0, r3
 8005084:	f7fb f944 	bl	8000310 <strcmp>
 8005088:	4603      	mov	r3, r0
 800508a:	2b00      	cmp	r3, #0
 800508c:	d133      	bne.n	80050f6 <VibeCheckWaveGenCMD_Execute+0x13a>
		{
			if (VibeCheckShell_GetNextString(shell, str, VC_SHELL_MAX_TOKEN_LEN))
 800508e:	f107 030c 	add.w	r3, r7, #12
 8005092:	2240      	movs	r2, #64	@ 0x40
 8005094:	4619      	mov	r1, r3
 8005096:	6838      	ldr	r0, [r7, #0]
 8005098:	f7fe fc34 	bl	8003904 <VibeCheckShell_GetNextString>
 800509c:	4603      	mov	r3, r0
 800509e:	2b00      	cmp	r3, #0
 80050a0:	d029      	beq.n	80050f6 <VibeCheckWaveGenCMD_Execute+0x13a>
			{
				if (!strcmp(str, "start"))
 80050a2:	f107 030c 	add.w	r3, r7, #12
 80050a6:	4916      	ldr	r1, [pc, #88]	@ (8005100 <VibeCheckWaveGenCMD_Execute+0x144>)
 80050a8:	4618      	mov	r0, r3
 80050aa:	f7fb f931 	bl	8000310 <strcmp>
 80050ae:	4603      	mov	r3, r0
 80050b0:	2b00      	cmp	r3, #0
 80050b2:	d10b      	bne.n	80050cc <VibeCheckWaveGenCMD_Execute+0x110>
				{
					VibeCheckWaveGen_StartDemo(wavegen);
 80050b4:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 80050b6:	f7ff fdb5 	bl	8004c24 <VibeCheckWaveGen_StartDemo>
					VibeCheckShell_PutOutputString(shell, "ack");
 80050ba:	4912      	ldr	r1, [pc, #72]	@ (8005104 <VibeCheckWaveGenCMD_Execute+0x148>)
 80050bc:	6838      	ldr	r0, [r7, #0]
 80050be:	f7fe fd21 	bl	8003b04 <VibeCheckShell_PutOutputString>
					VibeCheckShell_PutOutputDelimiter(shell);
 80050c2:	6838      	ldr	r0, [r7, #0]
 80050c4:	f7fe fd9c 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
					return 1;
 80050c8:	2301      	movs	r3, #1
 80050ca:	e015      	b.n	80050f8 <VibeCheckWaveGenCMD_Execute+0x13c>
				}
				else if (!strcmp(str, "stop"))
 80050cc:	f107 030c 	add.w	r3, r7, #12
 80050d0:	490d      	ldr	r1, [pc, #52]	@ (8005108 <VibeCheckWaveGenCMD_Execute+0x14c>)
 80050d2:	4618      	mov	r0, r3
 80050d4:	f7fb f91c 	bl	8000310 <strcmp>
 80050d8:	4603      	mov	r3, r0
 80050da:	2b00      	cmp	r3, #0
 80050dc:	d10b      	bne.n	80050f6 <VibeCheckWaveGenCMD_Execute+0x13a>
				{
					VibeCheckWaveGen_StopDemo(wavegen);
 80050de:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 80050e0:	f7ff fde8 	bl	8004cb4 <VibeCheckWaveGen_StopDemo>
					VibeCheckShell_PutOutputString(shell, "ack");
 80050e4:	4907      	ldr	r1, [pc, #28]	@ (8005104 <VibeCheckWaveGenCMD_Execute+0x148>)
 80050e6:	6838      	ldr	r0, [r7, #0]
 80050e8:	f7fe fd0c 	bl	8003b04 <VibeCheckShell_PutOutputString>
					VibeCheckShell_PutOutputDelimiter(shell);
 80050ec:	6838      	ldr	r0, [r7, #0]
 80050ee:	f7fe fd87 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>
					return 1;
 80050f2:	2301      	movs	r3, #1
 80050f4:	e000      	b.n	80050f8 <VibeCheckWaveGenCMD_Execute+0x13c>
				}
			}
		}
	}

	return 0;
 80050f6:	2300      	movs	r3, #0
}
 80050f8:	4618      	mov	r0, r3
 80050fa:	3750      	adds	r7, #80	@ 0x50
 80050fc:	46bd      	mov	sp, r7
 80050fe:	bd80      	pop	{r7, pc}
 8005100:	0801ab38 	.word	0x0801ab38
 8005104:	0801aafc 	.word	0x0801aafc
 8005108:	0801ab40 	.word	0x0801ab40
 800510c:	0801ab48 	.word	0x0801ab48
 8005110:	0801ab4c 	.word	0x0801ab4c
 8005114:	0801ab50 	.word	0x0801ab50

08005118 <VibeCheckWaveGenSender_Execute>:


uint32_t VibeCheckWaveGenSender_Execute(void* obj, VibeCheckShell* shell)
{
 8005118:	b580      	push	{r7, lr}
 800511a:	b084      	sub	sp, #16
 800511c:	af00      	add	r7, sp, #0
 800511e:	6078      	str	r0, [r7, #4]
 8005120:	6039      	str	r1, [r7, #0]
	/* this will send a message to the host when the mute button is pressed */

	VibeCheckWaveGen* wavegen = (VibeCheckWaveGen*)obj;
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	60fb      	str	r3, [r7, #12]

	uint32_t is_muted;
	if (VibeCheckWaveGen_WasMuteButtonPressed(wavegen, &is_muted))
 8005126:	f107 0308 	add.w	r3, r7, #8
 800512a:	4619      	mov	r1, r3
 800512c:	68f8      	ldr	r0, [r7, #12]
 800512e:	f7ff fd21 	bl	8004b74 <VibeCheckWaveGen_WasMuteButtonPressed>
 8005132:	4603      	mov	r3, r0
 8005134:	2b00      	cmp	r3, #0
 8005136:	d01e      	beq.n	8005176 <VibeCheckWaveGenSender_Execute+0x5e>
	{
		VibeCheckShell_PutOutputString(shell, "msg");
 8005138:	4911      	ldr	r1, [pc, #68]	@ (8005180 <VibeCheckWaveGenSender_Execute+0x68>)
 800513a:	6838      	ldr	r0, [r7, #0]
 800513c:	f7fe fce2 	bl	8003b04 <VibeCheckShell_PutOutputString>
		VibeCheckShell_PutOutputSeparator(shell);
 8005140:	6838      	ldr	r0, [r7, #0]
 8005142:	f7fe fd4f 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>
		VibeCheckShell_PutOutputString(shell, "wavegen");  /* TODO: this name should really be kept in a single place */
 8005146:	490f      	ldr	r1, [pc, #60]	@ (8005184 <VibeCheckWaveGenSender_Execute+0x6c>)
 8005148:	6838      	ldr	r0, [r7, #0]
 800514a:	f7fe fcdb 	bl	8003b04 <VibeCheckShell_PutOutputString>
		VibeCheckShell_PutOutputSeparator(shell);
 800514e:	6838      	ldr	r0, [r7, #0]
 8005150:	f7fe fd48 	bl	8003be4 <VibeCheckShell_PutOutputSeparator>

		if (is_muted)
 8005154:	68bb      	ldr	r3, [r7, #8]
 8005156:	2b00      	cmp	r3, #0
 8005158:	d004      	beq.n	8005164 <VibeCheckWaveGenSender_Execute+0x4c>
			VibeCheckShell_PutOutputString(shell, "muted");
 800515a:	490b      	ldr	r1, [pc, #44]	@ (8005188 <VibeCheckWaveGenSender_Execute+0x70>)
 800515c:	6838      	ldr	r0, [r7, #0]
 800515e:	f7fe fcd1 	bl	8003b04 <VibeCheckShell_PutOutputString>
 8005162:	e003      	b.n	800516c <VibeCheckWaveGenSender_Execute+0x54>
		else
			VibeCheckShell_PutOutputString(shell, "unmuted");
 8005164:	4909      	ldr	r1, [pc, #36]	@ (800518c <VibeCheckWaveGenSender_Execute+0x74>)
 8005166:	6838      	ldr	r0, [r7, #0]
 8005168:	f7fe fccc 	bl	8003b04 <VibeCheckShell_PutOutputString>

		VibeCheckShell_PutOutputDelimiter(shell);
 800516c:	6838      	ldr	r0, [r7, #0]
 800516e:	f7fe fd47 	bl	8003c00 <VibeCheckShell_PutOutputDelimiter>

		return 1;
 8005172:	2301      	movs	r3, #1
 8005174:	e000      	b.n	8005178 <VibeCheckWaveGenSender_Execute+0x60>
	}

	return 0;
 8005176:	2300      	movs	r3, #0
}
 8005178:	4618      	mov	r0, r3
 800517a:	3710      	adds	r7, #16
 800517c:	46bd      	mov	sp, r7
 800517e:	bd80      	pop	{r7, pc}
 8005180:	0801ab58 	.word	0x0801ab58
 8005184:	0801ab5c 	.word	0x0801ab5c
 8005188:	0801ab64 	.word	0x0801ab64
 800518c:	0801ab6c 	.word	0x0801ab6c

08005190 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
 8005190:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80051c8 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit
 8005194:	f7fd fa02 	bl	800259c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8005198:	480c      	ldr	r0, [pc, #48]	@ (80051cc <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 800519a:	490d      	ldr	r1, [pc, #52]	@ (80051d0 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 800519c:	4a0d      	ldr	r2, [pc, #52]	@ (80051d4 <LoopFillZerobss+0x1a>)
  movs r3, #0
 800519e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80051a0:	e002      	b.n	80051a8 <LoopCopyDataInit>

080051a2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80051a2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80051a4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80051a6:	3304      	adds	r3, #4

080051a8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80051a8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80051aa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80051ac:	d3f9      	bcc.n	80051a2 <CopyDataInit>
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80051ae:	4a0a      	ldr	r2, [pc, #40]	@ (80051d8 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 80051b0:	4c0a      	ldr	r4, [pc, #40]	@ (80051dc <LoopFillZerobss+0x22>)
  movs r3, #0
 80051b2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80051b4:	e001      	b.n	80051ba <LoopFillZerobss>

080051b6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80051b6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80051b8:	3204      	adds	r2, #4

080051ba <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80051ba:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80051bc:	d3fb      	bcc.n	80051b6 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 80051be:	f012 f903 	bl	80173c8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80051c2:	f7fb fca3 	bl	8000b0c <main>
  bx  lr
 80051c6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80051c8:	24050000 	.word	0x24050000
  ldr r0, =_sdata
 80051cc:	24000000 	.word	0x24000000
  ldr r1, =_edata
 80051d0:	240002cc 	.word	0x240002cc
  ldr r2, =_sidata
 80051d4:	0801b7d8 	.word	0x0801b7d8
  ldr r2, =_sbss
 80051d8:	240002cc 	.word	0x240002cc
  ldr r4, =_ebss
 80051dc:	24006274 	.word	0x24006274

080051e0 <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80051e0:	e7fe      	b.n	80051e0 <ADC3_IRQHandler>
	...

080051e4 <HAL_Init>:
 80051e4:	b580      	push	{r7, lr}
 80051e6:	b082      	sub	sp, #8
 80051e8:	af00      	add	r7, sp, #0
 80051ea:	2003      	movs	r0, #3
 80051ec:	f001 fcf4 	bl	8006bd8 <HAL_NVIC_SetPriorityGrouping>
 80051f0:	f006 fcbc 	bl	800bb6c <HAL_RCC_GetSysClockFreq>
 80051f4:	4602      	mov	r2, r0
 80051f6:	4b15      	ldr	r3, [pc, #84]	@ (800524c <HAL_Init+0x68>)
 80051f8:	699b      	ldr	r3, [r3, #24]
 80051fa:	0a1b      	lsrs	r3, r3, #8
 80051fc:	f003 030f 	and.w	r3, r3, #15
 8005200:	4913      	ldr	r1, [pc, #76]	@ (8005250 <HAL_Init+0x6c>)
 8005202:	5ccb      	ldrb	r3, [r1, r3]
 8005204:	f003 031f 	and.w	r3, r3, #31
 8005208:	fa22 f303 	lsr.w	r3, r2, r3
 800520c:	607b      	str	r3, [r7, #4]
 800520e:	4b0f      	ldr	r3, [pc, #60]	@ (800524c <HAL_Init+0x68>)
 8005210:	699b      	ldr	r3, [r3, #24]
 8005212:	f003 030f 	and.w	r3, r3, #15
 8005216:	4a0e      	ldr	r2, [pc, #56]	@ (8005250 <HAL_Init+0x6c>)
 8005218:	5cd3      	ldrb	r3, [r2, r3]
 800521a:	f003 031f 	and.w	r3, r3, #31
 800521e:	687a      	ldr	r2, [r7, #4]
 8005220:	fa22 f303 	lsr.w	r3, r2, r3
 8005224:	4a0b      	ldr	r2, [pc, #44]	@ (8005254 <HAL_Init+0x70>)
 8005226:	6013      	str	r3, [r2, #0]
 8005228:	4a0b      	ldr	r2, [pc, #44]	@ (8005258 <HAL_Init+0x74>)
 800522a:	687b      	ldr	r3, [r7, #4]
 800522c:	6013      	str	r3, [r2, #0]
 800522e:	200f      	movs	r0, #15
 8005230:	f000 f814 	bl	800525c <HAL_InitTick>
 8005234:	4603      	mov	r3, r0
 8005236:	2b00      	cmp	r3, #0
 8005238:	d001      	beq.n	800523e <HAL_Init+0x5a>
 800523a:	2301      	movs	r3, #1
 800523c:	e002      	b.n	8005244 <HAL_Init+0x60>
 800523e:	f7fc fbff 	bl	8001a40 <HAL_MspInit>
 8005242:	2300      	movs	r3, #0
 8005244:	4618      	mov	r0, r3
 8005246:	3708      	adds	r7, #8
 8005248:	46bd      	mov	sp, r7
 800524a:	bd80      	pop	{r7, pc}
 800524c:	58024400 	.word	0x58024400
 8005250:	0801aba8 	.word	0x0801aba8
 8005254:	24000004 	.word	0x24000004
 8005258:	24000000 	.word	0x24000000

0800525c <HAL_InitTick>:
 800525c:	b580      	push	{r7, lr}
 800525e:	b082      	sub	sp, #8
 8005260:	af00      	add	r7, sp, #0
 8005262:	6078      	str	r0, [r7, #4]
 8005264:	4b15      	ldr	r3, [pc, #84]	@ (80052bc <HAL_InitTick+0x60>)
 8005266:	781b      	ldrb	r3, [r3, #0]
 8005268:	2b00      	cmp	r3, #0
 800526a:	d101      	bne.n	8005270 <HAL_InitTick+0x14>
 800526c:	2301      	movs	r3, #1
 800526e:	e021      	b.n	80052b4 <HAL_InitTick+0x58>
 8005270:	4b13      	ldr	r3, [pc, #76]	@ (80052c0 <HAL_InitTick+0x64>)
 8005272:	681a      	ldr	r2, [r3, #0]
 8005274:	4b11      	ldr	r3, [pc, #68]	@ (80052bc <HAL_InitTick+0x60>)
 8005276:	781b      	ldrb	r3, [r3, #0]
 8005278:	4619      	mov	r1, r3
 800527a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800527e:	fbb3 f3f1 	udiv	r3, r3, r1
 8005282:	fbb2 f3f3 	udiv	r3, r2, r3
 8005286:	4618      	mov	r0, r3
 8005288:	f001 fcd9 	bl	8006c3e <HAL_SYSTICK_Config>
 800528c:	4603      	mov	r3, r0
 800528e:	2b00      	cmp	r3, #0
 8005290:	d001      	beq.n	8005296 <HAL_InitTick+0x3a>
 8005292:	2301      	movs	r3, #1
 8005294:	e00e      	b.n	80052b4 <HAL_InitTick+0x58>
 8005296:	687b      	ldr	r3, [r7, #4]
 8005298:	2b0f      	cmp	r3, #15
 800529a:	d80a      	bhi.n	80052b2 <HAL_InitTick+0x56>
 800529c:	2200      	movs	r2, #0
 800529e:	6879      	ldr	r1, [r7, #4]
 80052a0:	f04f 30ff 	mov.w	r0, #4294967295
 80052a4:	f001 fca3 	bl	8006bee <HAL_NVIC_SetPriority>
 80052a8:	4a06      	ldr	r2, [pc, #24]	@ (80052c4 <HAL_InitTick+0x68>)
 80052aa:	687b      	ldr	r3, [r7, #4]
 80052ac:	6013      	str	r3, [r2, #0]
 80052ae:	2300      	movs	r3, #0
 80052b0:	e000      	b.n	80052b4 <HAL_InitTick+0x58>
 80052b2:	2301      	movs	r3, #1
 80052b4:	4618      	mov	r0, r3
 80052b6:	3708      	adds	r7, #8
 80052b8:	46bd      	mov	sp, r7
 80052ba:	bd80      	pop	{r7, pc}
 80052bc:	2400000c 	.word	0x2400000c
 80052c0:	24000000 	.word	0x24000000
 80052c4:	24000008 	.word	0x24000008

080052c8 <HAL_IncTick>:
 80052c8:	b480      	push	{r7}
 80052ca:	af00      	add	r7, sp, #0
 80052cc:	4b06      	ldr	r3, [pc, #24]	@ (80052e8 <HAL_IncTick+0x20>)
 80052ce:	781b      	ldrb	r3, [r3, #0]
 80052d0:	461a      	mov	r2, r3
 80052d2:	4b06      	ldr	r3, [pc, #24]	@ (80052ec <HAL_IncTick+0x24>)
 80052d4:	681b      	ldr	r3, [r3, #0]
 80052d6:	4413      	add	r3, r2
 80052d8:	4a04      	ldr	r2, [pc, #16]	@ (80052ec <HAL_IncTick+0x24>)
 80052da:	6013      	str	r3, [r2, #0]
 80052dc:	bf00      	nop
 80052de:	46bd      	mov	sp, r7
 80052e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052e4:	4770      	bx	lr
 80052e6:	bf00      	nop
 80052e8:	2400000c 	.word	0x2400000c
 80052ec:	24004540 	.word	0x24004540

080052f0 <HAL_GetTick>:
 80052f0:	b480      	push	{r7}
 80052f2:	af00      	add	r7, sp, #0
 80052f4:	4b03      	ldr	r3, [pc, #12]	@ (8005304 <HAL_GetTick+0x14>)
 80052f6:	681b      	ldr	r3, [r3, #0]
 80052f8:	4618      	mov	r0, r3
 80052fa:	46bd      	mov	sp, r7
 80052fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005300:	4770      	bx	lr
 8005302:	bf00      	nop
 8005304:	24004540 	.word	0x24004540

08005308 <HAL_Delay>:
 8005308:	b580      	push	{r7, lr}
 800530a:	b084      	sub	sp, #16
 800530c:	af00      	add	r7, sp, #0
 800530e:	6078      	str	r0, [r7, #4]
 8005310:	f7ff ffee 	bl	80052f0 <HAL_GetTick>
 8005314:	60b8      	str	r0, [r7, #8]
 8005316:	687b      	ldr	r3, [r7, #4]
 8005318:	60fb      	str	r3, [r7, #12]
 800531a:	68fb      	ldr	r3, [r7, #12]
 800531c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005320:	d005      	beq.n	800532e <HAL_Delay+0x26>
 8005322:	4b0a      	ldr	r3, [pc, #40]	@ (800534c <HAL_Delay+0x44>)
 8005324:	781b      	ldrb	r3, [r3, #0]
 8005326:	461a      	mov	r2, r3
 8005328:	68fb      	ldr	r3, [r7, #12]
 800532a:	4413      	add	r3, r2
 800532c:	60fb      	str	r3, [r7, #12]
 800532e:	bf00      	nop
 8005330:	f7ff ffde 	bl	80052f0 <HAL_GetTick>
 8005334:	4602      	mov	r2, r0
 8005336:	68bb      	ldr	r3, [r7, #8]
 8005338:	1ad3      	subs	r3, r2, r3
 800533a:	68fa      	ldr	r2, [r7, #12]
 800533c:	429a      	cmp	r2, r3
 800533e:	d8f7      	bhi.n	8005330 <HAL_Delay+0x28>
 8005340:	bf00      	nop
 8005342:	bf00      	nop
 8005344:	3710      	adds	r7, #16
 8005346:	46bd      	mov	sp, r7
 8005348:	bd80      	pop	{r7, pc}
 800534a:	bf00      	nop
 800534c:	2400000c 	.word	0x2400000c

08005350 <LL_ADC_SetCommonClock>:
 8005350:	b480      	push	{r7}
 8005352:	b083      	sub	sp, #12
 8005354:	af00      	add	r7, sp, #0
 8005356:	6078      	str	r0, [r7, #4]
 8005358:	6039      	str	r1, [r7, #0]
 800535a:	687b      	ldr	r3, [r7, #4]
 800535c:	689b      	ldr	r3, [r3, #8]
 800535e:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 8005362:	683b      	ldr	r3, [r7, #0]
 8005364:	431a      	orrs	r2, r3
 8005366:	687b      	ldr	r3, [r7, #4]
 8005368:	609a      	str	r2, [r3, #8]
 800536a:	bf00      	nop
 800536c:	370c      	adds	r7, #12
 800536e:	46bd      	mov	sp, r7
 8005370:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005374:	4770      	bx	lr

08005376 <LL_ADC_SetCommonPathInternalCh>:
 8005376:	b480      	push	{r7}
 8005378:	b083      	sub	sp, #12
 800537a:	af00      	add	r7, sp, #0
 800537c:	6078      	str	r0, [r7, #4]
 800537e:	6039      	str	r1, [r7, #0]
 8005380:	687b      	ldr	r3, [r7, #4]
 8005382:	689b      	ldr	r3, [r3, #8]
 8005384:	f023 72e0 	bic.w	r2, r3, #29360128	@ 0x1c00000
 8005388:	683b      	ldr	r3, [r7, #0]
 800538a:	431a      	orrs	r2, r3
 800538c:	687b      	ldr	r3, [r7, #4]
 800538e:	609a      	str	r2, [r3, #8]
 8005390:	bf00      	nop
 8005392:	370c      	adds	r7, #12
 8005394:	46bd      	mov	sp, r7
 8005396:	f85d 7b04 	ldr.w	r7, [sp], #4
 800539a:	4770      	bx	lr

0800539c <LL_ADC_GetCommonPathInternalCh>:
 800539c:	b480      	push	{r7}
 800539e:	b083      	sub	sp, #12
 80053a0:	af00      	add	r7, sp, #0
 80053a2:	6078      	str	r0, [r7, #4]
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	689b      	ldr	r3, [r3, #8]
 80053a8:	f003 73e0 	and.w	r3, r3, #29360128	@ 0x1c00000
 80053ac:	4618      	mov	r0, r3
 80053ae:	370c      	adds	r7, #12
 80053b0:	46bd      	mov	sp, r7
 80053b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053b6:	4770      	bx	lr

080053b8 <LL_ADC_SetOffset>:
 80053b8:	b480      	push	{r7}
 80053ba:	b087      	sub	sp, #28
 80053bc:	af00      	add	r7, sp, #0
 80053be:	60f8      	str	r0, [r7, #12]
 80053c0:	60b9      	str	r1, [r7, #8]
 80053c2:	607a      	str	r2, [r7, #4]
 80053c4:	603b      	str	r3, [r7, #0]
 80053c6:	68fb      	ldr	r3, [r7, #12]
 80053c8:	3360      	adds	r3, #96	@ 0x60
 80053ca:	461a      	mov	r2, r3
 80053cc:	68bb      	ldr	r3, [r7, #8]
 80053ce:	009b      	lsls	r3, r3, #2
 80053d0:	4413      	add	r3, r2
 80053d2:	617b      	str	r3, [r7, #20]
 80053d4:	68fb      	ldr	r3, [r7, #12]
 80053d6:	4a10      	ldr	r2, [pc, #64]	@ (8005418 <LL_ADC_SetOffset+0x60>)
 80053d8:	4293      	cmp	r3, r2
 80053da:	d10b      	bne.n	80053f4 <LL_ADC_SetOffset+0x3c>
 80053dc:	697b      	ldr	r3, [r7, #20]
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	687b      	ldr	r3, [r7, #4]
 80053e2:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 80053e6:	683b      	ldr	r3, [r7, #0]
 80053e8:	4313      	orrs	r3, r2
 80053ea:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 80053ee:	697b      	ldr	r3, [r7, #20]
 80053f0:	601a      	str	r2, [r3, #0]
 80053f2:	e00b      	b.n	800540c <LL_ADC_SetOffset+0x54>
 80053f4:	697b      	ldr	r3, [r7, #20]
 80053f6:	681b      	ldr	r3, [r3, #0]
 80053f8:	f003 4200 	and.w	r2, r3, #2147483648	@ 0x80000000
 80053fc:	687b      	ldr	r3, [r7, #4]
 80053fe:	f003 41f8 	and.w	r1, r3, #2080374784	@ 0x7c000000
 8005402:	683b      	ldr	r3, [r7, #0]
 8005404:	430b      	orrs	r3, r1
 8005406:	431a      	orrs	r2, r3
 8005408:	697b      	ldr	r3, [r7, #20]
 800540a:	601a      	str	r2, [r3, #0]
 800540c:	bf00      	nop
 800540e:	371c      	adds	r7, #28
 8005410:	46bd      	mov	sp, r7
 8005412:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005416:	4770      	bx	lr
 8005418:	58026000 	.word	0x58026000

0800541c <LL_ADC_GetOffsetChannel>:
 800541c:	b480      	push	{r7}
 800541e:	b085      	sub	sp, #20
 8005420:	af00      	add	r7, sp, #0
 8005422:	6078      	str	r0, [r7, #4]
 8005424:	6039      	str	r1, [r7, #0]
 8005426:	687b      	ldr	r3, [r7, #4]
 8005428:	3360      	adds	r3, #96	@ 0x60
 800542a:	461a      	mov	r2, r3
 800542c:	683b      	ldr	r3, [r7, #0]
 800542e:	009b      	lsls	r3, r3, #2
 8005430:	4413      	add	r3, r2
 8005432:	60fb      	str	r3, [r7, #12]
 8005434:	68fb      	ldr	r3, [r7, #12]
 8005436:	681b      	ldr	r3, [r3, #0]
 8005438:	f003 43f8 	and.w	r3, r3, #2080374784	@ 0x7c000000
 800543c:	4618      	mov	r0, r3
 800543e:	3714      	adds	r7, #20
 8005440:	46bd      	mov	sp, r7
 8005442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005446:	4770      	bx	lr

08005448 <LL_ADC_SetDataRightShift>:
 8005448:	b480      	push	{r7}
 800544a:	b085      	sub	sp, #20
 800544c:	af00      	add	r7, sp, #0
 800544e:	60f8      	str	r0, [r7, #12]
 8005450:	60b9      	str	r1, [r7, #8]
 8005452:	607a      	str	r2, [r7, #4]
 8005454:	68fb      	ldr	r3, [r7, #12]
 8005456:	691b      	ldr	r3, [r3, #16]
 8005458:	f423 42f0 	bic.w	r2, r3, #30720	@ 0x7800
 800545c:	68bb      	ldr	r3, [r7, #8]
 800545e:	f003 031f 	and.w	r3, r3, #31
 8005462:	6879      	ldr	r1, [r7, #4]
 8005464:	fa01 f303 	lsl.w	r3, r1, r3
 8005468:	431a      	orrs	r2, r3
 800546a:	68fb      	ldr	r3, [r7, #12]
 800546c:	611a      	str	r2, [r3, #16]
 800546e:	bf00      	nop
 8005470:	3714      	adds	r7, #20
 8005472:	46bd      	mov	sp, r7
 8005474:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005478:	4770      	bx	lr
	...

0800547c <LL_ADC_SetOffsetSignedSaturation>:
 800547c:	b480      	push	{r7}
 800547e:	b087      	sub	sp, #28
 8005480:	af00      	add	r7, sp, #0
 8005482:	60f8      	str	r0, [r7, #12]
 8005484:	60b9      	str	r1, [r7, #8]
 8005486:	607a      	str	r2, [r7, #4]
 8005488:	68fb      	ldr	r3, [r7, #12]
 800548a:	4a0c      	ldr	r2, [pc, #48]	@ (80054bc <LL_ADC_SetOffsetSignedSaturation+0x40>)
 800548c:	4293      	cmp	r3, r2
 800548e:	d00e      	beq.n	80054ae <LL_ADC_SetOffsetSignedSaturation+0x32>
 8005490:	68fb      	ldr	r3, [r7, #12]
 8005492:	3360      	adds	r3, #96	@ 0x60
 8005494:	461a      	mov	r2, r3
 8005496:	68bb      	ldr	r3, [r7, #8]
 8005498:	009b      	lsls	r3, r3, #2
 800549a:	4413      	add	r3, r2
 800549c:	617b      	str	r3, [r7, #20]
 800549e:	697b      	ldr	r3, [r7, #20]
 80054a0:	681b      	ldr	r3, [r3, #0]
 80054a2:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 80054a6:	687b      	ldr	r3, [r7, #4]
 80054a8:	431a      	orrs	r2, r3
 80054aa:	697b      	ldr	r3, [r7, #20]
 80054ac:	601a      	str	r2, [r3, #0]
 80054ae:	bf00      	nop
 80054b0:	371c      	adds	r7, #28
 80054b2:	46bd      	mov	sp, r7
 80054b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054b8:	4770      	bx	lr
 80054ba:	bf00      	nop
 80054bc:	58026000 	.word	0x58026000

080054c0 <LL_ADC_SetOffsetSaturation>:
 80054c0:	b480      	push	{r7}
 80054c2:	b087      	sub	sp, #28
 80054c4:	af00      	add	r7, sp, #0
 80054c6:	60f8      	str	r0, [r7, #12]
 80054c8:	60b9      	str	r1, [r7, #8]
 80054ca:	607a      	str	r2, [r7, #4]
 80054cc:	68fb      	ldr	r3, [r7, #12]
 80054ce:	4a0c      	ldr	r2, [pc, #48]	@ (8005500 <LL_ADC_SetOffsetSaturation+0x40>)
 80054d0:	4293      	cmp	r3, r2
 80054d2:	d10e      	bne.n	80054f2 <LL_ADC_SetOffsetSaturation+0x32>
 80054d4:	68fb      	ldr	r3, [r7, #12]
 80054d6:	3360      	adds	r3, #96	@ 0x60
 80054d8:	461a      	mov	r2, r3
 80054da:	68bb      	ldr	r3, [r7, #8]
 80054dc:	009b      	lsls	r3, r3, #2
 80054de:	4413      	add	r3, r2
 80054e0:	617b      	str	r3, [r7, #20]
 80054e2:	697b      	ldr	r3, [r7, #20]
 80054e4:	681b      	ldr	r3, [r3, #0]
 80054e6:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 80054ea:	687b      	ldr	r3, [r7, #4]
 80054ec:	431a      	orrs	r2, r3
 80054ee:	697b      	ldr	r3, [r7, #20]
 80054f0:	601a      	str	r2, [r3, #0]
 80054f2:	bf00      	nop
 80054f4:	371c      	adds	r7, #28
 80054f6:	46bd      	mov	sp, r7
 80054f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054fc:	4770      	bx	lr
 80054fe:	bf00      	nop
 8005500:	58026000 	.word	0x58026000

08005504 <LL_ADC_SetOffsetSign>:
 8005504:	b480      	push	{r7}
 8005506:	b087      	sub	sp, #28
 8005508:	af00      	add	r7, sp, #0
 800550a:	60f8      	str	r0, [r7, #12]
 800550c:	60b9      	str	r1, [r7, #8]
 800550e:	607a      	str	r2, [r7, #4]
 8005510:	68fb      	ldr	r3, [r7, #12]
 8005512:	4a0c      	ldr	r2, [pc, #48]	@ (8005544 <LL_ADC_SetOffsetSign+0x40>)
 8005514:	4293      	cmp	r3, r2
 8005516:	d10e      	bne.n	8005536 <LL_ADC_SetOffsetSign+0x32>
 8005518:	68fb      	ldr	r3, [r7, #12]
 800551a:	3360      	adds	r3, #96	@ 0x60
 800551c:	461a      	mov	r2, r3
 800551e:	68bb      	ldr	r3, [r7, #8]
 8005520:	009b      	lsls	r3, r3, #2
 8005522:	4413      	add	r3, r2
 8005524:	617b      	str	r3, [r7, #20]
 8005526:	697b      	ldr	r3, [r7, #20]
 8005528:	681b      	ldr	r3, [r3, #0]
 800552a:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 800552e:	687b      	ldr	r3, [r7, #4]
 8005530:	431a      	orrs	r2, r3
 8005532:	697b      	ldr	r3, [r7, #20]
 8005534:	601a      	str	r2, [r3, #0]
 8005536:	bf00      	nop
 8005538:	371c      	adds	r7, #28
 800553a:	46bd      	mov	sp, r7
 800553c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005540:	4770      	bx	lr
 8005542:	bf00      	nop
 8005544:	58026000 	.word	0x58026000

08005548 <LL_ADC_SetOffsetState>:
 8005548:	b480      	push	{r7}
 800554a:	b087      	sub	sp, #28
 800554c:	af00      	add	r7, sp, #0
 800554e:	60f8      	str	r0, [r7, #12]
 8005550:	60b9      	str	r1, [r7, #8]
 8005552:	607a      	str	r2, [r7, #4]
 8005554:	68fb      	ldr	r3, [r7, #12]
 8005556:	3360      	adds	r3, #96	@ 0x60
 8005558:	461a      	mov	r2, r3
 800555a:	68bb      	ldr	r3, [r7, #8]
 800555c:	009b      	lsls	r3, r3, #2
 800555e:	4413      	add	r3, r2
 8005560:	617b      	str	r3, [r7, #20]
 8005562:	68fb      	ldr	r3, [r7, #12]
 8005564:	4a0c      	ldr	r2, [pc, #48]	@ (8005598 <LL_ADC_SetOffsetState+0x50>)
 8005566:	4293      	cmp	r3, r2
 8005568:	d108      	bne.n	800557c <LL_ADC_SetOffsetState+0x34>
 800556a:	697b      	ldr	r3, [r7, #20]
 800556c:	681b      	ldr	r3, [r3, #0]
 800556e:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	431a      	orrs	r2, r3
 8005576:	697b      	ldr	r3, [r7, #20]
 8005578:	601a      	str	r2, [r3, #0]
 800557a:	e007      	b.n	800558c <LL_ADC_SetOffsetState+0x44>
 800557c:	697b      	ldr	r3, [r7, #20]
 800557e:	681b      	ldr	r3, [r3, #0]
 8005580:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8005584:	687b      	ldr	r3, [r7, #4]
 8005586:	431a      	orrs	r2, r3
 8005588:	697b      	ldr	r3, [r7, #20]
 800558a:	601a      	str	r2, [r3, #0]
 800558c:	bf00      	nop
 800558e:	371c      	adds	r7, #28
 8005590:	46bd      	mov	sp, r7
 8005592:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005596:	4770      	bx	lr
 8005598:	58026000 	.word	0x58026000

0800559c <LL_ADC_REG_SetSequencerRanks>:
 800559c:	b480      	push	{r7}
 800559e:	b087      	sub	sp, #28
 80055a0:	af00      	add	r7, sp, #0
 80055a2:	60f8      	str	r0, [r7, #12]
 80055a4:	60b9      	str	r1, [r7, #8]
 80055a6:	607a      	str	r2, [r7, #4]
 80055a8:	68fb      	ldr	r3, [r7, #12]
 80055aa:	3330      	adds	r3, #48	@ 0x30
 80055ac:	461a      	mov	r2, r3
 80055ae:	68bb      	ldr	r3, [r7, #8]
 80055b0:	0a1b      	lsrs	r3, r3, #8
 80055b2:	009b      	lsls	r3, r3, #2
 80055b4:	f003 030c 	and.w	r3, r3, #12
 80055b8:	4413      	add	r3, r2
 80055ba:	617b      	str	r3, [r7, #20]
 80055bc:	697b      	ldr	r3, [r7, #20]
 80055be:	681a      	ldr	r2, [r3, #0]
 80055c0:	68bb      	ldr	r3, [r7, #8]
 80055c2:	f003 031f 	and.w	r3, r3, #31
 80055c6:	211f      	movs	r1, #31
 80055c8:	fa01 f303 	lsl.w	r3, r1, r3
 80055cc:	43db      	mvns	r3, r3
 80055ce:	401a      	ands	r2, r3
 80055d0:	687b      	ldr	r3, [r7, #4]
 80055d2:	0e9b      	lsrs	r3, r3, #26
 80055d4:	f003 011f 	and.w	r1, r3, #31
 80055d8:	68bb      	ldr	r3, [r7, #8]
 80055da:	f003 031f 	and.w	r3, r3, #31
 80055de:	fa01 f303 	lsl.w	r3, r1, r3
 80055e2:	431a      	orrs	r2, r3
 80055e4:	697b      	ldr	r3, [r7, #20]
 80055e6:	601a      	str	r2, [r3, #0]
 80055e8:	bf00      	nop
 80055ea:	371c      	adds	r7, #28
 80055ec:	46bd      	mov	sp, r7
 80055ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055f2:	4770      	bx	lr

080055f4 <LL_ADC_SetChannelSamplingTime>:
 80055f4:	b480      	push	{r7}
 80055f6:	b087      	sub	sp, #28
 80055f8:	af00      	add	r7, sp, #0
 80055fa:	60f8      	str	r0, [r7, #12]
 80055fc:	60b9      	str	r1, [r7, #8]
 80055fe:	607a      	str	r2, [r7, #4]
 8005600:	68fb      	ldr	r3, [r7, #12]
 8005602:	3314      	adds	r3, #20
 8005604:	461a      	mov	r2, r3
 8005606:	68bb      	ldr	r3, [r7, #8]
 8005608:	0e5b      	lsrs	r3, r3, #25
 800560a:	009b      	lsls	r3, r3, #2
 800560c:	f003 0304 	and.w	r3, r3, #4
 8005610:	4413      	add	r3, r2
 8005612:	617b      	str	r3, [r7, #20]
 8005614:	697b      	ldr	r3, [r7, #20]
 8005616:	681a      	ldr	r2, [r3, #0]
 8005618:	68bb      	ldr	r3, [r7, #8]
 800561a:	0d1b      	lsrs	r3, r3, #20
 800561c:	f003 031f 	and.w	r3, r3, #31
 8005620:	2107      	movs	r1, #7
 8005622:	fa01 f303 	lsl.w	r3, r1, r3
 8005626:	43db      	mvns	r3, r3
 8005628:	401a      	ands	r2, r3
 800562a:	68bb      	ldr	r3, [r7, #8]
 800562c:	0d1b      	lsrs	r3, r3, #20
 800562e:	f003 031f 	and.w	r3, r3, #31
 8005632:	6879      	ldr	r1, [r7, #4]
 8005634:	fa01 f303 	lsl.w	r3, r1, r3
 8005638:	431a      	orrs	r2, r3
 800563a:	697b      	ldr	r3, [r7, #20]
 800563c:	601a      	str	r2, [r3, #0]
 800563e:	bf00      	nop
 8005640:	371c      	adds	r7, #28
 8005642:	46bd      	mov	sp, r7
 8005644:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005648:	4770      	bx	lr
	...

0800564c <LL_ADC_SetChannelSingleDiff>:
 800564c:	b480      	push	{r7}
 800564e:	b085      	sub	sp, #20
 8005650:	af00      	add	r7, sp, #0
 8005652:	60f8      	str	r0, [r7, #12]
 8005654:	60b9      	str	r1, [r7, #8]
 8005656:	607a      	str	r2, [r7, #4]
 8005658:	68fb      	ldr	r3, [r7, #12]
 800565a:	4a1a      	ldr	r2, [pc, #104]	@ (80056c4 <LL_ADC_SetChannelSingleDiff+0x78>)
 800565c:	4293      	cmp	r3, r2
 800565e:	d115      	bne.n	800568c <LL_ADC_SetChannelSingleDiff+0x40>
 8005660:	68fb      	ldr	r3, [r7, #12]
 8005662:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 8005666:	68bb      	ldr	r3, [r7, #8]
 8005668:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800566c:	43db      	mvns	r3, r3
 800566e:	401a      	ands	r2, r3
 8005670:	687b      	ldr	r3, [r7, #4]
 8005672:	f003 0318 	and.w	r3, r3, #24
 8005676:	4914      	ldr	r1, [pc, #80]	@ (80056c8 <LL_ADC_SetChannelSingleDiff+0x7c>)
 8005678:	40d9      	lsrs	r1, r3
 800567a:	68bb      	ldr	r3, [r7, #8]
 800567c:	400b      	ands	r3, r1
 800567e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005682:	431a      	orrs	r2, r3
 8005684:	68fb      	ldr	r3, [r7, #12]
 8005686:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 800568a:	e014      	b.n	80056b6 <LL_ADC_SetChannelSingleDiff+0x6a>
 800568c:	68fb      	ldr	r3, [r7, #12]
 800568e:	f8d3 20c0 	ldr.w	r2, [r3, #192]	@ 0xc0
 8005692:	68bb      	ldr	r3, [r7, #8]
 8005694:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005698:	43db      	mvns	r3, r3
 800569a:	401a      	ands	r2, r3
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	f003 0318 	and.w	r3, r3, #24
 80056a2:	4909      	ldr	r1, [pc, #36]	@ (80056c8 <LL_ADC_SetChannelSingleDiff+0x7c>)
 80056a4:	40d9      	lsrs	r1, r3
 80056a6:	68bb      	ldr	r3, [r7, #8]
 80056a8:	400b      	ands	r3, r1
 80056aa:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80056ae:	431a      	orrs	r2, r3
 80056b0:	68fb      	ldr	r3, [r7, #12]
 80056b2:	f8c3 20c0 	str.w	r2, [r3, #192]	@ 0xc0
 80056b6:	bf00      	nop
 80056b8:	3714      	adds	r7, #20
 80056ba:	46bd      	mov	sp, r7
 80056bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056c0:	4770      	bx	lr
 80056c2:	bf00      	nop
 80056c4:	58026000 	.word	0x58026000
 80056c8:	000fffff 	.word	0x000fffff

080056cc <LL_ADC_DisableDeepPowerDown>:
 80056cc:	b480      	push	{r7}
 80056ce:	b083      	sub	sp, #12
 80056d0:	af00      	add	r7, sp, #0
 80056d2:	6078      	str	r0, [r7, #4]
 80056d4:	687b      	ldr	r3, [r7, #4]
 80056d6:	689a      	ldr	r2, [r3, #8]
 80056d8:	4b04      	ldr	r3, [pc, #16]	@ (80056ec <LL_ADC_DisableDeepPowerDown+0x20>)
 80056da:	4013      	ands	r3, r2
 80056dc:	687a      	ldr	r2, [r7, #4]
 80056de:	6093      	str	r3, [r2, #8]
 80056e0:	bf00      	nop
 80056e2:	370c      	adds	r7, #12
 80056e4:	46bd      	mov	sp, r7
 80056e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056ea:	4770      	bx	lr
 80056ec:	5fffffc0 	.word	0x5fffffc0

080056f0 <LL_ADC_IsDeepPowerDownEnabled>:
 80056f0:	b480      	push	{r7}
 80056f2:	b083      	sub	sp, #12
 80056f4:	af00      	add	r7, sp, #0
 80056f6:	6078      	str	r0, [r7, #4]
 80056f8:	687b      	ldr	r3, [r7, #4]
 80056fa:	689b      	ldr	r3, [r3, #8]
 80056fc:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8005700:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8005704:	d101      	bne.n	800570a <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 8005706:	2301      	movs	r3, #1
 8005708:	e000      	b.n	800570c <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 800570a:	2300      	movs	r3, #0
 800570c:	4618      	mov	r0, r3
 800570e:	370c      	adds	r7, #12
 8005710:	46bd      	mov	sp, r7
 8005712:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005716:	4770      	bx	lr

08005718 <LL_ADC_EnableInternalRegulator>:
 8005718:	b480      	push	{r7}
 800571a:	b083      	sub	sp, #12
 800571c:	af00      	add	r7, sp, #0
 800571e:	6078      	str	r0, [r7, #4]
 8005720:	687b      	ldr	r3, [r7, #4]
 8005722:	689a      	ldr	r2, [r3, #8]
 8005724:	4b05      	ldr	r3, [pc, #20]	@ (800573c <LL_ADC_EnableInternalRegulator+0x24>)
 8005726:	4013      	ands	r3, r2
 8005728:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 800572c:	687b      	ldr	r3, [r7, #4]
 800572e:	609a      	str	r2, [r3, #8]
 8005730:	bf00      	nop
 8005732:	370c      	adds	r7, #12
 8005734:	46bd      	mov	sp, r7
 8005736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800573a:	4770      	bx	lr
 800573c:	6fffffc0 	.word	0x6fffffc0

08005740 <LL_ADC_IsInternalRegulatorEnabled>:
 8005740:	b480      	push	{r7}
 8005742:	b083      	sub	sp, #12
 8005744:	af00      	add	r7, sp, #0
 8005746:	6078      	str	r0, [r7, #4]
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	689b      	ldr	r3, [r3, #8]
 800574c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005750:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8005754:	d101      	bne.n	800575a <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 8005756:	2301      	movs	r3, #1
 8005758:	e000      	b.n	800575c <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 800575a:	2300      	movs	r3, #0
 800575c:	4618      	mov	r0, r3
 800575e:	370c      	adds	r7, #12
 8005760:	46bd      	mov	sp, r7
 8005762:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005766:	4770      	bx	lr

08005768 <LL_ADC_IsEnabled>:
 8005768:	b480      	push	{r7}
 800576a:	b083      	sub	sp, #12
 800576c:	af00      	add	r7, sp, #0
 800576e:	6078      	str	r0, [r7, #4]
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	689b      	ldr	r3, [r3, #8]
 8005774:	f003 0301 	and.w	r3, r3, #1
 8005778:	2b01      	cmp	r3, #1
 800577a:	d101      	bne.n	8005780 <LL_ADC_IsEnabled+0x18>
 800577c:	2301      	movs	r3, #1
 800577e:	e000      	b.n	8005782 <LL_ADC_IsEnabled+0x1a>
 8005780:	2300      	movs	r3, #0
 8005782:	4618      	mov	r0, r3
 8005784:	370c      	adds	r7, #12
 8005786:	46bd      	mov	sp, r7
 8005788:	f85d 7b04 	ldr.w	r7, [sp], #4
 800578c:	4770      	bx	lr

0800578e <LL_ADC_REG_IsConversionOngoing>:
 800578e:	b480      	push	{r7}
 8005790:	b083      	sub	sp, #12
 8005792:	af00      	add	r7, sp, #0
 8005794:	6078      	str	r0, [r7, #4]
 8005796:	687b      	ldr	r3, [r7, #4]
 8005798:	689b      	ldr	r3, [r3, #8]
 800579a:	f003 0304 	and.w	r3, r3, #4
 800579e:	2b04      	cmp	r3, #4
 80057a0:	d101      	bne.n	80057a6 <LL_ADC_REG_IsConversionOngoing+0x18>
 80057a2:	2301      	movs	r3, #1
 80057a4:	e000      	b.n	80057a8 <LL_ADC_REG_IsConversionOngoing+0x1a>
 80057a6:	2300      	movs	r3, #0
 80057a8:	4618      	mov	r0, r3
 80057aa:	370c      	adds	r7, #12
 80057ac:	46bd      	mov	sp, r7
 80057ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057b2:	4770      	bx	lr

080057b4 <LL_ADC_INJ_IsConversionOngoing>:
 80057b4:	b480      	push	{r7}
 80057b6:	b083      	sub	sp, #12
 80057b8:	af00      	add	r7, sp, #0
 80057ba:	6078      	str	r0, [r7, #4]
 80057bc:	687b      	ldr	r3, [r7, #4]
 80057be:	689b      	ldr	r3, [r3, #8]
 80057c0:	f003 0308 	and.w	r3, r3, #8
 80057c4:	2b08      	cmp	r3, #8
 80057c6:	d101      	bne.n	80057cc <LL_ADC_INJ_IsConversionOngoing+0x18>
 80057c8:	2301      	movs	r3, #1
 80057ca:	e000      	b.n	80057ce <LL_ADC_INJ_IsConversionOngoing+0x1a>
 80057cc:	2300      	movs	r3, #0
 80057ce:	4618      	mov	r0, r3
 80057d0:	370c      	adds	r7, #12
 80057d2:	46bd      	mov	sp, r7
 80057d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057d8:	4770      	bx	lr
	...

080057dc <HAL_ADC_Init>:
 80057dc:	b590      	push	{r4, r7, lr}
 80057de:	b089      	sub	sp, #36	@ 0x24
 80057e0:	af00      	add	r7, sp, #0
 80057e2:	6078      	str	r0, [r7, #4]
 80057e4:	2300      	movs	r3, #0
 80057e6:	77fb      	strb	r3, [r7, #31]
 80057e8:	2300      	movs	r3, #0
 80057ea:	60bb      	str	r3, [r7, #8]
 80057ec:	687b      	ldr	r3, [r7, #4]
 80057ee:	2b00      	cmp	r3, #0
 80057f0:	d101      	bne.n	80057f6 <HAL_ADC_Init+0x1a>
 80057f2:	2301      	movs	r3, #1
 80057f4:	e1ee      	b.n	8005bd4 <HAL_ADC_Init+0x3f8>
 80057f6:	687b      	ldr	r3, [r7, #4]
 80057f8:	691b      	ldr	r3, [r3, #16]
 80057fa:	2b00      	cmp	r3, #0
 80057fc:	687b      	ldr	r3, [r7, #4]
 80057fe:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005800:	2b00      	cmp	r3, #0
 8005802:	d109      	bne.n	8005818 <HAL_ADC_Init+0x3c>
 8005804:	6878      	ldr	r0, [r7, #4]
 8005806:	f7fc f935 	bl	8001a74 <HAL_ADC_MspInit>
 800580a:	687b      	ldr	r3, [r7, #4]
 800580c:	2200      	movs	r2, #0
 800580e:	665a      	str	r2, [r3, #100]	@ 0x64
 8005810:	687b      	ldr	r3, [r7, #4]
 8005812:	2200      	movs	r2, #0
 8005814:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8005818:	687b      	ldr	r3, [r7, #4]
 800581a:	681b      	ldr	r3, [r3, #0]
 800581c:	4618      	mov	r0, r3
 800581e:	f7ff ff67 	bl	80056f0 <LL_ADC_IsDeepPowerDownEnabled>
 8005822:	4603      	mov	r3, r0
 8005824:	2b00      	cmp	r3, #0
 8005826:	d004      	beq.n	8005832 <HAL_ADC_Init+0x56>
 8005828:	687b      	ldr	r3, [r7, #4]
 800582a:	681b      	ldr	r3, [r3, #0]
 800582c:	4618      	mov	r0, r3
 800582e:	f7ff ff4d 	bl	80056cc <LL_ADC_DisableDeepPowerDown>
 8005832:	687b      	ldr	r3, [r7, #4]
 8005834:	681b      	ldr	r3, [r3, #0]
 8005836:	4618      	mov	r0, r3
 8005838:	f7ff ff82 	bl	8005740 <LL_ADC_IsInternalRegulatorEnabled>
 800583c:	4603      	mov	r3, r0
 800583e:	2b00      	cmp	r3, #0
 8005840:	d114      	bne.n	800586c <HAL_ADC_Init+0x90>
 8005842:	687b      	ldr	r3, [r7, #4]
 8005844:	681b      	ldr	r3, [r3, #0]
 8005846:	4618      	mov	r0, r3
 8005848:	f7ff ff66 	bl	8005718 <LL_ADC_EnableInternalRegulator>
 800584c:	4b8e      	ldr	r3, [pc, #568]	@ (8005a88 <HAL_ADC_Init+0x2ac>)
 800584e:	681b      	ldr	r3, [r3, #0]
 8005850:	099b      	lsrs	r3, r3, #6
 8005852:	4a8e      	ldr	r2, [pc, #568]	@ (8005a8c <HAL_ADC_Init+0x2b0>)
 8005854:	fba2 2303 	umull	r2, r3, r2, r3
 8005858:	099b      	lsrs	r3, r3, #6
 800585a:	3301      	adds	r3, #1
 800585c:	60bb      	str	r3, [r7, #8]
 800585e:	e002      	b.n	8005866 <HAL_ADC_Init+0x8a>
 8005860:	68bb      	ldr	r3, [r7, #8]
 8005862:	3b01      	subs	r3, #1
 8005864:	60bb      	str	r3, [r7, #8]
 8005866:	68bb      	ldr	r3, [r7, #8]
 8005868:	2b00      	cmp	r3, #0
 800586a:	d1f9      	bne.n	8005860 <HAL_ADC_Init+0x84>
 800586c:	687b      	ldr	r3, [r7, #4]
 800586e:	681b      	ldr	r3, [r3, #0]
 8005870:	4618      	mov	r0, r3
 8005872:	f7ff ff65 	bl	8005740 <LL_ADC_IsInternalRegulatorEnabled>
 8005876:	4603      	mov	r3, r0
 8005878:	2b00      	cmp	r3, #0
 800587a:	d10d      	bne.n	8005898 <HAL_ADC_Init+0xbc>
 800587c:	687b      	ldr	r3, [r7, #4]
 800587e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005880:	f043 0210 	orr.w	r2, r3, #16
 8005884:	687b      	ldr	r3, [r7, #4]
 8005886:	661a      	str	r2, [r3, #96]	@ 0x60
 8005888:	687b      	ldr	r3, [r7, #4]
 800588a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800588c:	f043 0201 	orr.w	r2, r3, #1
 8005890:	687b      	ldr	r3, [r7, #4]
 8005892:	665a      	str	r2, [r3, #100]	@ 0x64
 8005894:	2301      	movs	r3, #1
 8005896:	77fb      	strb	r3, [r7, #31]
 8005898:	687b      	ldr	r3, [r7, #4]
 800589a:	681b      	ldr	r3, [r3, #0]
 800589c:	4618      	mov	r0, r3
 800589e:	f7ff ff76 	bl	800578e <LL_ADC_REG_IsConversionOngoing>
 80058a2:	6178      	str	r0, [r7, #20]
 80058a4:	687b      	ldr	r3, [r7, #4]
 80058a6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80058a8:	f003 0310 	and.w	r3, r3, #16
 80058ac:	2b00      	cmp	r3, #0
 80058ae:	f040 8188 	bne.w	8005bc2 <HAL_ADC_Init+0x3e6>
 80058b2:	697b      	ldr	r3, [r7, #20]
 80058b4:	2b00      	cmp	r3, #0
 80058b6:	f040 8184 	bne.w	8005bc2 <HAL_ADC_Init+0x3e6>
 80058ba:	687b      	ldr	r3, [r7, #4]
 80058bc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80058be:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 80058c2:	f043 0202 	orr.w	r2, r3, #2
 80058c6:	687b      	ldr	r3, [r7, #4]
 80058c8:	661a      	str	r2, [r3, #96]	@ 0x60
 80058ca:	687b      	ldr	r3, [r7, #4]
 80058cc:	681b      	ldr	r3, [r3, #0]
 80058ce:	4618      	mov	r0, r3
 80058d0:	f7ff ff4a 	bl	8005768 <LL_ADC_IsEnabled>
 80058d4:	4603      	mov	r3, r0
 80058d6:	2b00      	cmp	r3, #0
 80058d8:	d136      	bne.n	8005948 <HAL_ADC_Init+0x16c>
 80058da:	687b      	ldr	r3, [r7, #4]
 80058dc:	681b      	ldr	r3, [r3, #0]
 80058de:	4a6c      	ldr	r2, [pc, #432]	@ (8005a90 <HAL_ADC_Init+0x2b4>)
 80058e0:	4293      	cmp	r3, r2
 80058e2:	d004      	beq.n	80058ee <HAL_ADC_Init+0x112>
 80058e4:	687b      	ldr	r3, [r7, #4]
 80058e6:	681b      	ldr	r3, [r3, #0]
 80058e8:	4a6a      	ldr	r2, [pc, #424]	@ (8005a94 <HAL_ADC_Init+0x2b8>)
 80058ea:	4293      	cmp	r3, r2
 80058ec:	d10e      	bne.n	800590c <HAL_ADC_Init+0x130>
 80058ee:	4868      	ldr	r0, [pc, #416]	@ (8005a90 <HAL_ADC_Init+0x2b4>)
 80058f0:	f7ff ff3a 	bl	8005768 <LL_ADC_IsEnabled>
 80058f4:	4604      	mov	r4, r0
 80058f6:	4867      	ldr	r0, [pc, #412]	@ (8005a94 <HAL_ADC_Init+0x2b8>)
 80058f8:	f7ff ff36 	bl	8005768 <LL_ADC_IsEnabled>
 80058fc:	4603      	mov	r3, r0
 80058fe:	4323      	orrs	r3, r4
 8005900:	2b00      	cmp	r3, #0
 8005902:	bf0c      	ite	eq
 8005904:	2301      	moveq	r3, #1
 8005906:	2300      	movne	r3, #0
 8005908:	b2db      	uxtb	r3, r3
 800590a:	e008      	b.n	800591e <HAL_ADC_Init+0x142>
 800590c:	4862      	ldr	r0, [pc, #392]	@ (8005a98 <HAL_ADC_Init+0x2bc>)
 800590e:	f7ff ff2b 	bl	8005768 <LL_ADC_IsEnabled>
 8005912:	4603      	mov	r3, r0
 8005914:	2b00      	cmp	r3, #0
 8005916:	bf0c      	ite	eq
 8005918:	2301      	moveq	r3, #1
 800591a:	2300      	movne	r3, #0
 800591c:	b2db      	uxtb	r3, r3
 800591e:	2b00      	cmp	r3, #0
 8005920:	d012      	beq.n	8005948 <HAL_ADC_Init+0x16c>
 8005922:	687b      	ldr	r3, [r7, #4]
 8005924:	681b      	ldr	r3, [r3, #0]
 8005926:	4a5a      	ldr	r2, [pc, #360]	@ (8005a90 <HAL_ADC_Init+0x2b4>)
 8005928:	4293      	cmp	r3, r2
 800592a:	d004      	beq.n	8005936 <HAL_ADC_Init+0x15a>
 800592c:	687b      	ldr	r3, [r7, #4]
 800592e:	681b      	ldr	r3, [r3, #0]
 8005930:	4a58      	ldr	r2, [pc, #352]	@ (8005a94 <HAL_ADC_Init+0x2b8>)
 8005932:	4293      	cmp	r3, r2
 8005934:	d101      	bne.n	800593a <HAL_ADC_Init+0x15e>
 8005936:	4a59      	ldr	r2, [pc, #356]	@ (8005a9c <HAL_ADC_Init+0x2c0>)
 8005938:	e000      	b.n	800593c <HAL_ADC_Init+0x160>
 800593a:	4a59      	ldr	r2, [pc, #356]	@ (8005aa0 <HAL_ADC_Init+0x2c4>)
 800593c:	687b      	ldr	r3, [r7, #4]
 800593e:	685b      	ldr	r3, [r3, #4]
 8005940:	4619      	mov	r1, r3
 8005942:	4610      	mov	r0, r2
 8005944:	f7ff fd04 	bl	8005350 <LL_ADC_SetCommonClock>
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	4a52      	ldr	r2, [pc, #328]	@ (8005a98 <HAL_ADC_Init+0x2bc>)
 800594e:	4293      	cmp	r3, r2
 8005950:	d129      	bne.n	80059a6 <HAL_ADC_Init+0x1ca>
 8005952:	687b      	ldr	r3, [r7, #4]
 8005954:	7e5b      	ldrb	r3, [r3, #25]
 8005956:	035a      	lsls	r2, r3, #13
 8005958:	687b      	ldr	r3, [r7, #4]
 800595a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800595c:	431a      	orrs	r2, r3
 800595e:	687b      	ldr	r3, [r7, #4]
 8005960:	68db      	ldr	r3, [r3, #12]
 8005962:	431a      	orrs	r2, r3
 8005964:	687b      	ldr	r3, [r7, #4]
 8005966:	689b      	ldr	r3, [r3, #8]
 8005968:	2b08      	cmp	r3, #8
 800596a:	d013      	beq.n	8005994 <HAL_ADC_Init+0x1b8>
 800596c:	687b      	ldr	r3, [r7, #4]
 800596e:	689b      	ldr	r3, [r3, #8]
 8005970:	2b0c      	cmp	r3, #12
 8005972:	d00d      	beq.n	8005990 <HAL_ADC_Init+0x1b4>
 8005974:	687b      	ldr	r3, [r7, #4]
 8005976:	689b      	ldr	r3, [r3, #8]
 8005978:	2b1c      	cmp	r3, #28
 800597a:	d007      	beq.n	800598c <HAL_ADC_Init+0x1b0>
 800597c:	687b      	ldr	r3, [r7, #4]
 800597e:	689b      	ldr	r3, [r3, #8]
 8005980:	2b18      	cmp	r3, #24
 8005982:	d101      	bne.n	8005988 <HAL_ADC_Init+0x1ac>
 8005984:	2318      	movs	r3, #24
 8005986:	e006      	b.n	8005996 <HAL_ADC_Init+0x1ba>
 8005988:	2300      	movs	r3, #0
 800598a:	e004      	b.n	8005996 <HAL_ADC_Init+0x1ba>
 800598c:	2310      	movs	r3, #16
 800598e:	e002      	b.n	8005996 <HAL_ADC_Init+0x1ba>
 8005990:	2308      	movs	r3, #8
 8005992:	e000      	b.n	8005996 <HAL_ADC_Init+0x1ba>
 8005994:	2300      	movs	r3, #0
 8005996:	431a      	orrs	r2, r3
 8005998:	687b      	ldr	r3, [r7, #4]
 800599a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800599e:	041b      	lsls	r3, r3, #16
 80059a0:	4313      	orrs	r3, r2
 80059a2:	61bb      	str	r3, [r7, #24]
 80059a4:	e00e      	b.n	80059c4 <HAL_ADC_Init+0x1e8>
 80059a6:	687b      	ldr	r3, [r7, #4]
 80059a8:	7e5b      	ldrb	r3, [r3, #25]
 80059aa:	035a      	lsls	r2, r3, #13
 80059ac:	687b      	ldr	r3, [r7, #4]
 80059ae:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80059b0:	431a      	orrs	r2, r3
 80059b2:	687b      	ldr	r3, [r7, #4]
 80059b4:	689b      	ldr	r3, [r3, #8]
 80059b6:	431a      	orrs	r2, r3
 80059b8:	687b      	ldr	r3, [r7, #4]
 80059ba:	f893 3020 	ldrb.w	r3, [r3, #32]
 80059be:	041b      	lsls	r3, r3, #16
 80059c0:	4313      	orrs	r3, r2
 80059c2:	61bb      	str	r3, [r7, #24]
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	f893 3020 	ldrb.w	r3, [r3, #32]
 80059ca:	2b01      	cmp	r3, #1
 80059cc:	d106      	bne.n	80059dc <HAL_ADC_Init+0x200>
 80059ce:	687b      	ldr	r3, [r7, #4]
 80059d0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80059d2:	3b01      	subs	r3, #1
 80059d4:	045b      	lsls	r3, r3, #17
 80059d6:	69ba      	ldr	r2, [r7, #24]
 80059d8:	4313      	orrs	r3, r2
 80059da:	61bb      	str	r3, [r7, #24]
 80059dc:	687b      	ldr	r3, [r7, #4]
 80059de:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80059e0:	2b00      	cmp	r3, #0
 80059e2:	d009      	beq.n	80059f8 <HAL_ADC_Init+0x21c>
 80059e4:	687b      	ldr	r3, [r7, #4]
 80059e6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80059e8:	f403 7278 	and.w	r2, r3, #992	@ 0x3e0
 80059ec:	687b      	ldr	r3, [r7, #4]
 80059ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80059f0:	4313      	orrs	r3, r2
 80059f2:	69ba      	ldr	r2, [r7, #24]
 80059f4:	4313      	orrs	r3, r2
 80059f6:	61bb      	str	r3, [r7, #24]
 80059f8:	687b      	ldr	r3, [r7, #4]
 80059fa:	681b      	ldr	r3, [r3, #0]
 80059fc:	4a26      	ldr	r2, [pc, #152]	@ (8005a98 <HAL_ADC_Init+0x2bc>)
 80059fe:	4293      	cmp	r3, r2
 8005a00:	d115      	bne.n	8005a2e <HAL_ADC_Init+0x252>
 8005a02:	687b      	ldr	r3, [r7, #4]
 8005a04:	681b      	ldr	r3, [r3, #0]
 8005a06:	68da      	ldr	r2, [r3, #12]
 8005a08:	4b26      	ldr	r3, [pc, #152]	@ (8005aa4 <HAL_ADC_Init+0x2c8>)
 8005a0a:	4013      	ands	r3, r2
 8005a0c:	687a      	ldr	r2, [r7, #4]
 8005a0e:	6812      	ldr	r2, [r2, #0]
 8005a10:	69b9      	ldr	r1, [r7, #24]
 8005a12:	430b      	orrs	r3, r1
 8005a14:	60d3      	str	r3, [r2, #12]
 8005a16:	687b      	ldr	r3, [r7, #4]
 8005a18:	681b      	ldr	r3, [r3, #0]
 8005a1a:	691b      	ldr	r3, [r3, #16]
 8005a1c:	f023 6140 	bic.w	r1, r3, #201326592	@ 0xc000000
 8005a20:	687b      	ldr	r3, [r7, #4]
 8005a22:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005a24:	687b      	ldr	r3, [r7, #4]
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	430a      	orrs	r2, r1
 8005a2a:	611a      	str	r2, [r3, #16]
 8005a2c:	e009      	b.n	8005a42 <HAL_ADC_Init+0x266>
 8005a2e:	687b      	ldr	r3, [r7, #4]
 8005a30:	681b      	ldr	r3, [r3, #0]
 8005a32:	68da      	ldr	r2, [r3, #12]
 8005a34:	4b1c      	ldr	r3, [pc, #112]	@ (8005aa8 <HAL_ADC_Init+0x2cc>)
 8005a36:	4013      	ands	r3, r2
 8005a38:	687a      	ldr	r2, [r7, #4]
 8005a3a:	6812      	ldr	r2, [r2, #0]
 8005a3c:	69b9      	ldr	r1, [r7, #24]
 8005a3e:	430b      	orrs	r3, r1
 8005a40:	60d3      	str	r3, [r2, #12]
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	4618      	mov	r0, r3
 8005a48:	f7ff fea1 	bl	800578e <LL_ADC_REG_IsConversionOngoing>
 8005a4c:	6138      	str	r0, [r7, #16]
 8005a4e:	687b      	ldr	r3, [r7, #4]
 8005a50:	681b      	ldr	r3, [r3, #0]
 8005a52:	4618      	mov	r0, r3
 8005a54:	f7ff feae 	bl	80057b4 <LL_ADC_INJ_IsConversionOngoing>
 8005a58:	60f8      	str	r0, [r7, #12]
 8005a5a:	693b      	ldr	r3, [r7, #16]
 8005a5c:	2b00      	cmp	r3, #0
 8005a5e:	f040 808e 	bne.w	8005b7e <HAL_ADC_Init+0x3a2>
 8005a62:	68fb      	ldr	r3, [r7, #12]
 8005a64:	2b00      	cmp	r3, #0
 8005a66:	f040 808a 	bne.w	8005b7e <HAL_ADC_Init+0x3a2>
 8005a6a:	687b      	ldr	r3, [r7, #4]
 8005a6c:	681b      	ldr	r3, [r3, #0]
 8005a6e:	4a0a      	ldr	r2, [pc, #40]	@ (8005a98 <HAL_ADC_Init+0x2bc>)
 8005a70:	4293      	cmp	r3, r2
 8005a72:	d11b      	bne.n	8005aac <HAL_ADC_Init+0x2d0>
 8005a74:	687b      	ldr	r3, [r7, #4]
 8005a76:	7e1b      	ldrb	r3, [r3, #24]
 8005a78:	039a      	lsls	r2, r3, #14
 8005a7a:	687b      	ldr	r3, [r7, #4]
 8005a7c:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8005a80:	005b      	lsls	r3, r3, #1
 8005a82:	4313      	orrs	r3, r2
 8005a84:	61bb      	str	r3, [r7, #24]
 8005a86:	e018      	b.n	8005aba <HAL_ADC_Init+0x2de>
 8005a88:	24000000 	.word	0x24000000
 8005a8c:	053e2d63 	.word	0x053e2d63
 8005a90:	40022000 	.word	0x40022000
 8005a94:	40022100 	.word	0x40022100
 8005a98:	58026000 	.word	0x58026000
 8005a9c:	40022300 	.word	0x40022300
 8005aa0:	58026300 	.word	0x58026300
 8005aa4:	fff04007 	.word	0xfff04007
 8005aa8:	fff0c003 	.word	0xfff0c003
 8005aac:	687b      	ldr	r3, [r7, #4]
 8005aae:	7e1b      	ldrb	r3, [r3, #24]
 8005ab0:	039a      	lsls	r2, r3, #14
 8005ab2:	687b      	ldr	r3, [r7, #4]
 8005ab4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005ab6:	4313      	orrs	r3, r2
 8005ab8:	61bb      	str	r3, [r7, #24]
 8005aba:	687b      	ldr	r3, [r7, #4]
 8005abc:	681b      	ldr	r3, [r3, #0]
 8005abe:	68da      	ldr	r2, [r3, #12]
 8005ac0:	4b46      	ldr	r3, [pc, #280]	@ (8005bdc <HAL_ADC_Init+0x400>)
 8005ac2:	4013      	ands	r3, r2
 8005ac4:	687a      	ldr	r2, [r7, #4]
 8005ac6:	6812      	ldr	r2, [r2, #0]
 8005ac8:	69b9      	ldr	r1, [r7, #24]
 8005aca:	430b      	orrs	r3, r1
 8005acc:	60d3      	str	r3, [r2, #12]
 8005ace:	687b      	ldr	r3, [r7, #4]
 8005ad0:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8005ad4:	2b01      	cmp	r3, #1
 8005ad6:	d137      	bne.n	8005b48 <HAL_ADC_Init+0x36c>
 8005ad8:	687b      	ldr	r3, [r7, #4]
 8005ada:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005adc:	2b00      	cmp	r3, #0
 8005ade:	687b      	ldr	r3, [r7, #4]
 8005ae0:	681b      	ldr	r3, [r3, #0]
 8005ae2:	4a3f      	ldr	r2, [pc, #252]	@ (8005be0 <HAL_ADC_Init+0x404>)
 8005ae4:	4293      	cmp	r3, r2
 8005ae6:	d116      	bne.n	8005b16 <HAL_ADC_Init+0x33a>
 8005ae8:	687b      	ldr	r3, [r7, #4]
 8005aea:	681b      	ldr	r3, [r3, #0]
 8005aec:	691a      	ldr	r2, [r3, #16]
 8005aee:	4b3d      	ldr	r3, [pc, #244]	@ (8005be4 <HAL_ADC_Init+0x408>)
 8005af0:	4013      	ands	r3, r2
 8005af2:	687a      	ldr	r2, [r7, #4]
 8005af4:	6c91      	ldr	r1, [r2, #72]	@ 0x48
 8005af6:	687a      	ldr	r2, [r7, #4]
 8005af8:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 8005afa:	4311      	orrs	r1, r2
 8005afc:	687a      	ldr	r2, [r7, #4]
 8005afe:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8005b00:	4311      	orrs	r1, r2
 8005b02:	687a      	ldr	r2, [r7, #4]
 8005b04:	6d52      	ldr	r2, [r2, #84]	@ 0x54
 8005b06:	430a      	orrs	r2, r1
 8005b08:	431a      	orrs	r2, r3
 8005b0a:	687b      	ldr	r3, [r7, #4]
 8005b0c:	681b      	ldr	r3, [r3, #0]
 8005b0e:	f042 0201 	orr.w	r2, r2, #1
 8005b12:	611a      	str	r2, [r3, #16]
 8005b14:	e020      	b.n	8005b58 <HAL_ADC_Init+0x37c>
 8005b16:	687b      	ldr	r3, [r7, #4]
 8005b18:	681b      	ldr	r3, [r3, #0]
 8005b1a:	691a      	ldr	r2, [r3, #16]
 8005b1c:	4b32      	ldr	r3, [pc, #200]	@ (8005be8 <HAL_ADC_Init+0x40c>)
 8005b1e:	4013      	ands	r3, r2
 8005b20:	687a      	ldr	r2, [r7, #4]
 8005b22:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 8005b24:	3a01      	subs	r2, #1
 8005b26:	0411      	lsls	r1, r2, #16
 8005b28:	687a      	ldr	r2, [r7, #4]
 8005b2a:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 8005b2c:	4311      	orrs	r1, r2
 8005b2e:	687a      	ldr	r2, [r7, #4]
 8005b30:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8005b32:	4311      	orrs	r1, r2
 8005b34:	687a      	ldr	r2, [r7, #4]
 8005b36:	6d52      	ldr	r2, [r2, #84]	@ 0x54
 8005b38:	430a      	orrs	r2, r1
 8005b3a:	431a      	orrs	r2, r3
 8005b3c:	687b      	ldr	r3, [r7, #4]
 8005b3e:	681b      	ldr	r3, [r3, #0]
 8005b40:	f042 0201 	orr.w	r2, r2, #1
 8005b44:	611a      	str	r2, [r3, #16]
 8005b46:	e007      	b.n	8005b58 <HAL_ADC_Init+0x37c>
 8005b48:	687b      	ldr	r3, [r7, #4]
 8005b4a:	681b      	ldr	r3, [r3, #0]
 8005b4c:	691a      	ldr	r2, [r3, #16]
 8005b4e:	687b      	ldr	r3, [r7, #4]
 8005b50:	681b      	ldr	r3, [r3, #0]
 8005b52:	f022 0201 	bic.w	r2, r2, #1
 8005b56:	611a      	str	r2, [r3, #16]
 8005b58:	687b      	ldr	r3, [r7, #4]
 8005b5a:	681b      	ldr	r3, [r3, #0]
 8005b5c:	691b      	ldr	r3, [r3, #16]
 8005b5e:	f023 4170 	bic.w	r1, r3, #4026531840	@ 0xf0000000
 8005b62:	687b      	ldr	r3, [r7, #4]
 8005b64:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	681b      	ldr	r3, [r3, #0]
 8005b6a:	430a      	orrs	r2, r1
 8005b6c:	611a      	str	r2, [r3, #16]
 8005b6e:	687b      	ldr	r3, [r7, #4]
 8005b70:	681b      	ldr	r3, [r3, #0]
 8005b72:	4a1b      	ldr	r2, [pc, #108]	@ (8005be0 <HAL_ADC_Init+0x404>)
 8005b74:	4293      	cmp	r3, r2
 8005b76:	d002      	beq.n	8005b7e <HAL_ADC_Init+0x3a2>
 8005b78:	6878      	ldr	r0, [r7, #4]
 8005b7a:	f000 fd67 	bl	800664c <ADC_ConfigureBoostMode>
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	691b      	ldr	r3, [r3, #16]
 8005b82:	2b01      	cmp	r3, #1
 8005b84:	d10c      	bne.n	8005ba0 <HAL_ADC_Init+0x3c4>
 8005b86:	687b      	ldr	r3, [r7, #4]
 8005b88:	681b      	ldr	r3, [r3, #0]
 8005b8a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005b8c:	f023 010f 	bic.w	r1, r3, #15
 8005b90:	687b      	ldr	r3, [r7, #4]
 8005b92:	69db      	ldr	r3, [r3, #28]
 8005b94:	1e5a      	subs	r2, r3, #1
 8005b96:	687b      	ldr	r3, [r7, #4]
 8005b98:	681b      	ldr	r3, [r3, #0]
 8005b9a:	430a      	orrs	r2, r1
 8005b9c:	631a      	str	r2, [r3, #48]	@ 0x30
 8005b9e:	e007      	b.n	8005bb0 <HAL_ADC_Init+0x3d4>
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	681b      	ldr	r3, [r3, #0]
 8005ba4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005ba6:	687b      	ldr	r3, [r7, #4]
 8005ba8:	681b      	ldr	r3, [r3, #0]
 8005baa:	f022 020f 	bic.w	r2, r2, #15
 8005bae:	631a      	str	r2, [r3, #48]	@ 0x30
 8005bb0:	687b      	ldr	r3, [r7, #4]
 8005bb2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005bb4:	f023 0303 	bic.w	r3, r3, #3
 8005bb8:	f043 0201 	orr.w	r2, r3, #1
 8005bbc:	687b      	ldr	r3, [r7, #4]
 8005bbe:	661a      	str	r2, [r3, #96]	@ 0x60
 8005bc0:	e007      	b.n	8005bd2 <HAL_ADC_Init+0x3f6>
 8005bc2:	687b      	ldr	r3, [r7, #4]
 8005bc4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005bc6:	f043 0210 	orr.w	r2, r3, #16
 8005bca:	687b      	ldr	r3, [r7, #4]
 8005bcc:	661a      	str	r2, [r3, #96]	@ 0x60
 8005bce:	2301      	movs	r3, #1
 8005bd0:	77fb      	strb	r3, [r7, #31]
 8005bd2:	7ffb      	ldrb	r3, [r7, #31]
 8005bd4:	4618      	mov	r0, r3
 8005bd6:	3724      	adds	r7, #36	@ 0x24
 8005bd8:	46bd      	mov	sp, r7
 8005bda:	bd90      	pop	{r4, r7, pc}
 8005bdc:	ffffbffc 	.word	0xffffbffc
 8005be0:	58026000 	.word	0x58026000
 8005be4:	fc00f81f 	.word	0xfc00f81f
 8005be8:	fc00f81e 	.word	0xfc00f81e

08005bec <HAL_ADC_ConfigChannel>:
 8005bec:	b590      	push	{r4, r7, lr}
 8005bee:	b0b9      	sub	sp, #228	@ 0xe4
 8005bf0:	af00      	add	r7, sp, #0
 8005bf2:	6078      	str	r0, [r7, #4]
 8005bf4:	6039      	str	r1, [r7, #0]
 8005bf6:	2300      	movs	r3, #0
 8005bf8:	f887 30df 	strb.w	r3, [r7, #223]	@ 0xdf
 8005bfc:	2300      	movs	r3, #0
 8005bfe:	60bb      	str	r3, [r7, #8]
 8005c00:	687b      	ldr	r3, [r7, #4]
 8005c02:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8005c06:	2b01      	cmp	r3, #1
 8005c08:	683b      	ldr	r3, [r7, #0]
 8005c0a:	68db      	ldr	r3, [r3, #12]
 8005c0c:	4aab      	ldr	r2, [pc, #684]	@ (8005ebc <HAL_ADC_ConfigChannel+0x2d0>)
 8005c0e:	4293      	cmp	r3, r2
 8005c10:	687b      	ldr	r3, [r7, #4]
 8005c12:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8005c16:	2b01      	cmp	r3, #1
 8005c18:	d102      	bne.n	8005c20 <HAL_ADC_ConfigChannel+0x34>
 8005c1a:	2302      	movs	r3, #2
 8005c1c:	f000 bcfe 	b.w	800661c <HAL_ADC_ConfigChannel+0xa30>
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	2201      	movs	r2, #1
 8005c24:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8005c28:	687b      	ldr	r3, [r7, #4]
 8005c2a:	681b      	ldr	r3, [r3, #0]
 8005c2c:	4618      	mov	r0, r3
 8005c2e:	f7ff fdae 	bl	800578e <LL_ADC_REG_IsConversionOngoing>
 8005c32:	4603      	mov	r3, r0
 8005c34:	2b00      	cmp	r3, #0
 8005c36:	f040 84e2 	bne.w	80065fe <HAL_ADC_ConfigChannel+0xa12>
 8005c3a:	683b      	ldr	r3, [r7, #0]
 8005c3c:	681b      	ldr	r3, [r3, #0]
 8005c3e:	2b00      	cmp	r3, #0
 8005c40:	db38      	blt.n	8005cb4 <HAL_ADC_ConfigChannel+0xc8>
 8005c42:	687b      	ldr	r3, [r7, #4]
 8005c44:	681b      	ldr	r3, [r3, #0]
 8005c46:	4a9e      	ldr	r2, [pc, #632]	@ (8005ec0 <HAL_ADC_ConfigChannel+0x2d4>)
 8005c48:	4293      	cmp	r3, r2
 8005c4a:	d033      	beq.n	8005cb4 <HAL_ADC_ConfigChannel+0xc8>
 8005c4c:	683b      	ldr	r3, [r7, #0]
 8005c4e:	681b      	ldr	r3, [r3, #0]
 8005c50:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005c54:	2b00      	cmp	r3, #0
 8005c56:	d108      	bne.n	8005c6a <HAL_ADC_ConfigChannel+0x7e>
 8005c58:	683b      	ldr	r3, [r7, #0]
 8005c5a:	681b      	ldr	r3, [r3, #0]
 8005c5c:	0e9b      	lsrs	r3, r3, #26
 8005c5e:	f003 031f 	and.w	r3, r3, #31
 8005c62:	2201      	movs	r2, #1
 8005c64:	fa02 f303 	lsl.w	r3, r2, r3
 8005c68:	e01d      	b.n	8005ca6 <HAL_ADC_ConfigChannel+0xba>
 8005c6a:	683b      	ldr	r3, [r7, #0]
 8005c6c:	681b      	ldr	r3, [r3, #0]
 8005c6e:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8005c72:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8005c76:	fa93 f3a3 	rbit	r3, r3
 8005c7a:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8005c7e:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8005c82:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8005c86:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8005c8a:	2b00      	cmp	r3, #0
 8005c8c:	d101      	bne.n	8005c92 <HAL_ADC_ConfigChannel+0xa6>
 8005c8e:	2320      	movs	r3, #32
 8005c90:	e004      	b.n	8005c9c <HAL_ADC_ConfigChannel+0xb0>
 8005c92:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8005c96:	fab3 f383 	clz	r3, r3
 8005c9a:	b2db      	uxtb	r3, r3
 8005c9c:	f003 031f 	and.w	r3, r3, #31
 8005ca0:	2201      	movs	r2, #1
 8005ca2:	fa02 f303 	lsl.w	r3, r2, r3
 8005ca6:	687a      	ldr	r2, [r7, #4]
 8005ca8:	6812      	ldr	r2, [r2, #0]
 8005caa:	69d1      	ldr	r1, [r2, #28]
 8005cac:	687a      	ldr	r2, [r7, #4]
 8005cae:	6812      	ldr	r2, [r2, #0]
 8005cb0:	430b      	orrs	r3, r1
 8005cb2:	61d3      	str	r3, [r2, #28]
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	6818      	ldr	r0, [r3, #0]
 8005cb8:	683b      	ldr	r3, [r7, #0]
 8005cba:	6859      	ldr	r1, [r3, #4]
 8005cbc:	683b      	ldr	r3, [r7, #0]
 8005cbe:	681b      	ldr	r3, [r3, #0]
 8005cc0:	461a      	mov	r2, r3
 8005cc2:	f7ff fc6b 	bl	800559c <LL_ADC_REG_SetSequencerRanks>
 8005cc6:	687b      	ldr	r3, [r7, #4]
 8005cc8:	681b      	ldr	r3, [r3, #0]
 8005cca:	4618      	mov	r0, r3
 8005ccc:	f7ff fd5f 	bl	800578e <LL_ADC_REG_IsConversionOngoing>
 8005cd0:	f8c7 00d4 	str.w	r0, [r7, #212]	@ 0xd4
 8005cd4:	687b      	ldr	r3, [r7, #4]
 8005cd6:	681b      	ldr	r3, [r3, #0]
 8005cd8:	4618      	mov	r0, r3
 8005cda:	f7ff fd6b 	bl	80057b4 <LL_ADC_INJ_IsConversionOngoing>
 8005cde:	f8c7 00d0 	str.w	r0, [r7, #208]	@ 0xd0
 8005ce2:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8005ce6:	2b00      	cmp	r3, #0
 8005ce8:	f040 8270 	bne.w	80061cc <HAL_ADC_ConfigChannel+0x5e0>
 8005cec:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 8005cf0:	2b00      	cmp	r3, #0
 8005cf2:	f040 826b 	bne.w	80061cc <HAL_ADC_ConfigChannel+0x5e0>
 8005cf6:	687b      	ldr	r3, [r7, #4]
 8005cf8:	6818      	ldr	r0, [r3, #0]
 8005cfa:	683b      	ldr	r3, [r7, #0]
 8005cfc:	6819      	ldr	r1, [r3, #0]
 8005cfe:	683b      	ldr	r3, [r7, #0]
 8005d00:	689b      	ldr	r3, [r3, #8]
 8005d02:	461a      	mov	r2, r3
 8005d04:	f7ff fc76 	bl	80055f4 <LL_ADC_SetChannelSamplingTime>
 8005d08:	687b      	ldr	r3, [r7, #4]
 8005d0a:	681b      	ldr	r3, [r3, #0]
 8005d0c:	4a6c      	ldr	r2, [pc, #432]	@ (8005ec0 <HAL_ADC_ConfigChannel+0x2d4>)
 8005d0e:	4293      	cmp	r3, r2
 8005d10:	d10d      	bne.n	8005d2e <HAL_ADC_ConfigChannel+0x142>
 8005d12:	683b      	ldr	r3, [r7, #0]
 8005d14:	695a      	ldr	r2, [r3, #20]
 8005d16:	687b      	ldr	r3, [r7, #4]
 8005d18:	681b      	ldr	r3, [r3, #0]
 8005d1a:	68db      	ldr	r3, [r3, #12]
 8005d1c:	08db      	lsrs	r3, r3, #3
 8005d1e:	f003 0303 	and.w	r3, r3, #3
 8005d22:	005b      	lsls	r3, r3, #1
 8005d24:	fa02 f303 	lsl.w	r3, r2, r3
 8005d28:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005d2c:	e032      	b.n	8005d94 <HAL_ADC_ConfigChannel+0x1a8>
 8005d2e:	4b65      	ldr	r3, [pc, #404]	@ (8005ec4 <HAL_ADC_ConfigChannel+0x2d8>)
 8005d30:	681b      	ldr	r3, [r3, #0]
 8005d32:	f003 4370 	and.w	r3, r3, #4026531840	@ 0xf0000000
 8005d36:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8005d3a:	d10b      	bne.n	8005d54 <HAL_ADC_ConfigChannel+0x168>
 8005d3c:	683b      	ldr	r3, [r7, #0]
 8005d3e:	695a      	ldr	r2, [r3, #20]
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	681b      	ldr	r3, [r3, #0]
 8005d44:	68db      	ldr	r3, [r3, #12]
 8005d46:	089b      	lsrs	r3, r3, #2
 8005d48:	f003 0307 	and.w	r3, r3, #7
 8005d4c:	005b      	lsls	r3, r3, #1
 8005d4e:	fa02 f303 	lsl.w	r3, r2, r3
 8005d52:	e01d      	b.n	8005d90 <HAL_ADC_ConfigChannel+0x1a4>
 8005d54:	687b      	ldr	r3, [r7, #4]
 8005d56:	681b      	ldr	r3, [r3, #0]
 8005d58:	68db      	ldr	r3, [r3, #12]
 8005d5a:	f003 0310 	and.w	r3, r3, #16
 8005d5e:	2b00      	cmp	r3, #0
 8005d60:	d10b      	bne.n	8005d7a <HAL_ADC_ConfigChannel+0x18e>
 8005d62:	683b      	ldr	r3, [r7, #0]
 8005d64:	695a      	ldr	r2, [r3, #20]
 8005d66:	687b      	ldr	r3, [r7, #4]
 8005d68:	681b      	ldr	r3, [r3, #0]
 8005d6a:	68db      	ldr	r3, [r3, #12]
 8005d6c:	089b      	lsrs	r3, r3, #2
 8005d6e:	f003 0307 	and.w	r3, r3, #7
 8005d72:	005b      	lsls	r3, r3, #1
 8005d74:	fa02 f303 	lsl.w	r3, r2, r3
 8005d78:	e00a      	b.n	8005d90 <HAL_ADC_ConfigChannel+0x1a4>
 8005d7a:	683b      	ldr	r3, [r7, #0]
 8005d7c:	695a      	ldr	r2, [r3, #20]
 8005d7e:	687b      	ldr	r3, [r7, #4]
 8005d80:	681b      	ldr	r3, [r3, #0]
 8005d82:	68db      	ldr	r3, [r3, #12]
 8005d84:	089b      	lsrs	r3, r3, #2
 8005d86:	f003 0304 	and.w	r3, r3, #4
 8005d8a:	005b      	lsls	r3, r3, #1
 8005d8c:	fa02 f303 	lsl.w	r3, r2, r3
 8005d90:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005d94:	683b      	ldr	r3, [r7, #0]
 8005d96:	691b      	ldr	r3, [r3, #16]
 8005d98:	2b04      	cmp	r3, #4
 8005d9a:	d048      	beq.n	8005e2e <HAL_ADC_ConfigChannel+0x242>
 8005d9c:	687b      	ldr	r3, [r7, #4]
 8005d9e:	6818      	ldr	r0, [r3, #0]
 8005da0:	683b      	ldr	r3, [r7, #0]
 8005da2:	6919      	ldr	r1, [r3, #16]
 8005da4:	683b      	ldr	r3, [r7, #0]
 8005da6:	681a      	ldr	r2, [r3, #0]
 8005da8:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8005dac:	f7ff fb04 	bl	80053b8 <LL_ADC_SetOffset>
 8005db0:	687b      	ldr	r3, [r7, #4]
 8005db2:	681b      	ldr	r3, [r3, #0]
 8005db4:	4a42      	ldr	r2, [pc, #264]	@ (8005ec0 <HAL_ADC_ConfigChannel+0x2d4>)
 8005db6:	4293      	cmp	r3, r2
 8005db8:	d119      	bne.n	8005dee <HAL_ADC_ConfigChannel+0x202>
 8005dba:	687b      	ldr	r3, [r7, #4]
 8005dbc:	6818      	ldr	r0, [r3, #0]
 8005dbe:	683b      	ldr	r3, [r7, #0]
 8005dc0:	6919      	ldr	r1, [r3, #16]
 8005dc2:	683b      	ldr	r3, [r7, #0]
 8005dc4:	69db      	ldr	r3, [r3, #28]
 8005dc6:	461a      	mov	r2, r3
 8005dc8:	f7ff fb9c 	bl	8005504 <LL_ADC_SetOffsetSign>
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	6818      	ldr	r0, [r3, #0]
 8005dd0:	683b      	ldr	r3, [r7, #0]
 8005dd2:	6919      	ldr	r1, [r3, #16]
 8005dd4:	683b      	ldr	r3, [r7, #0]
 8005dd6:	f893 3020 	ldrb.w	r3, [r3, #32]
 8005dda:	2b01      	cmp	r3, #1
 8005ddc:	d102      	bne.n	8005de4 <HAL_ADC_ConfigChannel+0x1f8>
 8005dde:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8005de2:	e000      	b.n	8005de6 <HAL_ADC_ConfigChannel+0x1fa>
 8005de4:	2300      	movs	r3, #0
 8005de6:	461a      	mov	r2, r3
 8005de8:	f7ff fb6a 	bl	80054c0 <LL_ADC_SetOffsetSaturation>
 8005dec:	e1ee      	b.n	80061cc <HAL_ADC_ConfigChannel+0x5e0>
 8005dee:	687b      	ldr	r3, [r7, #4]
 8005df0:	6818      	ldr	r0, [r3, #0]
 8005df2:	683b      	ldr	r3, [r7, #0]
 8005df4:	6919      	ldr	r1, [r3, #16]
 8005df6:	683b      	ldr	r3, [r7, #0]
 8005df8:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8005dfc:	2b01      	cmp	r3, #1
 8005dfe:	d102      	bne.n	8005e06 <HAL_ADC_ConfigChannel+0x21a>
 8005e00:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8005e04:	e000      	b.n	8005e08 <HAL_ADC_ConfigChannel+0x21c>
 8005e06:	2300      	movs	r3, #0
 8005e08:	461a      	mov	r2, r3
 8005e0a:	f7ff fb37 	bl	800547c <LL_ADC_SetOffsetSignedSaturation>
 8005e0e:	687b      	ldr	r3, [r7, #4]
 8005e10:	6818      	ldr	r0, [r3, #0]
 8005e12:	683b      	ldr	r3, [r7, #0]
 8005e14:	6919      	ldr	r1, [r3, #16]
 8005e16:	683b      	ldr	r3, [r7, #0]
 8005e18:	7e1b      	ldrb	r3, [r3, #24]
 8005e1a:	2b01      	cmp	r3, #1
 8005e1c:	d102      	bne.n	8005e24 <HAL_ADC_ConfigChannel+0x238>
 8005e1e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8005e22:	e000      	b.n	8005e26 <HAL_ADC_ConfigChannel+0x23a>
 8005e24:	2300      	movs	r3, #0
 8005e26:	461a      	mov	r2, r3
 8005e28:	f7ff fb0e 	bl	8005448 <LL_ADC_SetDataRightShift>
 8005e2c:	e1ce      	b.n	80061cc <HAL_ADC_ConfigChannel+0x5e0>
 8005e2e:	687b      	ldr	r3, [r7, #4]
 8005e30:	681b      	ldr	r3, [r3, #0]
 8005e32:	4a23      	ldr	r2, [pc, #140]	@ (8005ec0 <HAL_ADC_ConfigChannel+0x2d4>)
 8005e34:	4293      	cmp	r3, r2
 8005e36:	f040 8181 	bne.w	800613c <HAL_ADC_ConfigChannel+0x550>
 8005e3a:	687b      	ldr	r3, [r7, #4]
 8005e3c:	681b      	ldr	r3, [r3, #0]
 8005e3e:	2100      	movs	r1, #0
 8005e40:	4618      	mov	r0, r3
 8005e42:	f7ff faeb 	bl	800541c <LL_ADC_GetOffsetChannel>
 8005e46:	4603      	mov	r3, r0
 8005e48:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005e4c:	2b00      	cmp	r3, #0
 8005e4e:	d10a      	bne.n	8005e66 <HAL_ADC_ConfigChannel+0x27a>
 8005e50:	687b      	ldr	r3, [r7, #4]
 8005e52:	681b      	ldr	r3, [r3, #0]
 8005e54:	2100      	movs	r1, #0
 8005e56:	4618      	mov	r0, r3
 8005e58:	f7ff fae0 	bl	800541c <LL_ADC_GetOffsetChannel>
 8005e5c:	4603      	mov	r3, r0
 8005e5e:	0e9b      	lsrs	r3, r3, #26
 8005e60:	f003 021f 	and.w	r2, r3, #31
 8005e64:	e01e      	b.n	8005ea4 <HAL_ADC_ConfigChannel+0x2b8>
 8005e66:	687b      	ldr	r3, [r7, #4]
 8005e68:	681b      	ldr	r3, [r3, #0]
 8005e6a:	2100      	movs	r1, #0
 8005e6c:	4618      	mov	r0, r3
 8005e6e:	f7ff fad5 	bl	800541c <LL_ADC_GetOffsetChannel>
 8005e72:	4603      	mov	r3, r0
 8005e74:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8005e78:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8005e7c:	fa93 f3a3 	rbit	r3, r3
 8005e80:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005e84:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8005e88:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8005e8c:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 8005e90:	2b00      	cmp	r3, #0
 8005e92:	d101      	bne.n	8005e98 <HAL_ADC_ConfigChannel+0x2ac>
 8005e94:	2320      	movs	r3, #32
 8005e96:	e004      	b.n	8005ea2 <HAL_ADC_ConfigChannel+0x2b6>
 8005e98:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 8005e9c:	fab3 f383 	clz	r3, r3
 8005ea0:	b2db      	uxtb	r3, r3
 8005ea2:	461a      	mov	r2, r3
 8005ea4:	683b      	ldr	r3, [r7, #0]
 8005ea6:	681b      	ldr	r3, [r3, #0]
 8005ea8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005eac:	2b00      	cmp	r3, #0
 8005eae:	d10b      	bne.n	8005ec8 <HAL_ADC_ConfigChannel+0x2dc>
 8005eb0:	683b      	ldr	r3, [r7, #0]
 8005eb2:	681b      	ldr	r3, [r3, #0]
 8005eb4:	0e9b      	lsrs	r3, r3, #26
 8005eb6:	f003 031f 	and.w	r3, r3, #31
 8005eba:	e01e      	b.n	8005efa <HAL_ADC_ConfigChannel+0x30e>
 8005ebc:	47ff0000 	.word	0x47ff0000
 8005ec0:	58026000 	.word	0x58026000
 8005ec4:	5c001000 	.word	0x5c001000
 8005ec8:	683b      	ldr	r3, [r7, #0]
 8005eca:	681b      	ldr	r3, [r3, #0]
 8005ecc:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8005ed0:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005ed4:	fa93 f3a3 	rbit	r3, r3
 8005ed8:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8005edc:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8005ee0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005ee4:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8005ee8:	2b00      	cmp	r3, #0
 8005eea:	d101      	bne.n	8005ef0 <HAL_ADC_ConfigChannel+0x304>
 8005eec:	2320      	movs	r3, #32
 8005eee:	e004      	b.n	8005efa <HAL_ADC_ConfigChannel+0x30e>
 8005ef0:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8005ef4:	fab3 f383 	clz	r3, r3
 8005ef8:	b2db      	uxtb	r3, r3
 8005efa:	429a      	cmp	r2, r3
 8005efc:	d106      	bne.n	8005f0c <HAL_ADC_ConfigChannel+0x320>
 8005efe:	687b      	ldr	r3, [r7, #4]
 8005f00:	681b      	ldr	r3, [r3, #0]
 8005f02:	2200      	movs	r2, #0
 8005f04:	2100      	movs	r1, #0
 8005f06:	4618      	mov	r0, r3
 8005f08:	f7ff fb1e 	bl	8005548 <LL_ADC_SetOffsetState>
 8005f0c:	687b      	ldr	r3, [r7, #4]
 8005f0e:	681b      	ldr	r3, [r3, #0]
 8005f10:	2101      	movs	r1, #1
 8005f12:	4618      	mov	r0, r3
 8005f14:	f7ff fa82 	bl	800541c <LL_ADC_GetOffsetChannel>
 8005f18:	4603      	mov	r3, r0
 8005f1a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005f1e:	2b00      	cmp	r3, #0
 8005f20:	d10a      	bne.n	8005f38 <HAL_ADC_ConfigChannel+0x34c>
 8005f22:	687b      	ldr	r3, [r7, #4]
 8005f24:	681b      	ldr	r3, [r3, #0]
 8005f26:	2101      	movs	r1, #1
 8005f28:	4618      	mov	r0, r3
 8005f2a:	f7ff fa77 	bl	800541c <LL_ADC_GetOffsetChannel>
 8005f2e:	4603      	mov	r3, r0
 8005f30:	0e9b      	lsrs	r3, r3, #26
 8005f32:	f003 021f 	and.w	r2, r3, #31
 8005f36:	e01e      	b.n	8005f76 <HAL_ADC_ConfigChannel+0x38a>
 8005f38:	687b      	ldr	r3, [r7, #4]
 8005f3a:	681b      	ldr	r3, [r3, #0]
 8005f3c:	2101      	movs	r1, #1
 8005f3e:	4618      	mov	r0, r3
 8005f40:	f7ff fa6c 	bl	800541c <LL_ADC_GetOffsetChannel>
 8005f44:	4603      	mov	r3, r0
 8005f46:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8005f4a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8005f4e:	fa93 f3a3 	rbit	r3, r3
 8005f52:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005f56:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8005f5a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8005f5e:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8005f62:	2b00      	cmp	r3, #0
 8005f64:	d101      	bne.n	8005f6a <HAL_ADC_ConfigChannel+0x37e>
 8005f66:	2320      	movs	r3, #32
 8005f68:	e004      	b.n	8005f74 <HAL_ADC_ConfigChannel+0x388>
 8005f6a:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8005f6e:	fab3 f383 	clz	r3, r3
 8005f72:	b2db      	uxtb	r3, r3
 8005f74:	461a      	mov	r2, r3
 8005f76:	683b      	ldr	r3, [r7, #0]
 8005f78:	681b      	ldr	r3, [r3, #0]
 8005f7a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005f7e:	2b00      	cmp	r3, #0
 8005f80:	d105      	bne.n	8005f8e <HAL_ADC_ConfigChannel+0x3a2>
 8005f82:	683b      	ldr	r3, [r7, #0]
 8005f84:	681b      	ldr	r3, [r3, #0]
 8005f86:	0e9b      	lsrs	r3, r3, #26
 8005f88:	f003 031f 	and.w	r3, r3, #31
 8005f8c:	e018      	b.n	8005fc0 <HAL_ADC_ConfigChannel+0x3d4>
 8005f8e:	683b      	ldr	r3, [r7, #0]
 8005f90:	681b      	ldr	r3, [r3, #0]
 8005f92:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8005f96:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 8005f9a:	fa93 f3a3 	rbit	r3, r3
 8005f9e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005fa2:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8005fa6:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005faa:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005fae:	2b00      	cmp	r3, #0
 8005fb0:	d101      	bne.n	8005fb6 <HAL_ADC_ConfigChannel+0x3ca>
 8005fb2:	2320      	movs	r3, #32
 8005fb4:	e004      	b.n	8005fc0 <HAL_ADC_ConfigChannel+0x3d4>
 8005fb6:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005fba:	fab3 f383 	clz	r3, r3
 8005fbe:	b2db      	uxtb	r3, r3
 8005fc0:	429a      	cmp	r2, r3
 8005fc2:	d106      	bne.n	8005fd2 <HAL_ADC_ConfigChannel+0x3e6>
 8005fc4:	687b      	ldr	r3, [r7, #4]
 8005fc6:	681b      	ldr	r3, [r3, #0]
 8005fc8:	2200      	movs	r2, #0
 8005fca:	2101      	movs	r1, #1
 8005fcc:	4618      	mov	r0, r3
 8005fce:	f7ff fabb 	bl	8005548 <LL_ADC_SetOffsetState>
 8005fd2:	687b      	ldr	r3, [r7, #4]
 8005fd4:	681b      	ldr	r3, [r3, #0]
 8005fd6:	2102      	movs	r1, #2
 8005fd8:	4618      	mov	r0, r3
 8005fda:	f7ff fa1f 	bl	800541c <LL_ADC_GetOffsetChannel>
 8005fde:	4603      	mov	r3, r0
 8005fe0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005fe4:	2b00      	cmp	r3, #0
 8005fe6:	d10a      	bne.n	8005ffe <HAL_ADC_ConfigChannel+0x412>
 8005fe8:	687b      	ldr	r3, [r7, #4]
 8005fea:	681b      	ldr	r3, [r3, #0]
 8005fec:	2102      	movs	r1, #2
 8005fee:	4618      	mov	r0, r3
 8005ff0:	f7ff fa14 	bl	800541c <LL_ADC_GetOffsetChannel>
 8005ff4:	4603      	mov	r3, r0
 8005ff6:	0e9b      	lsrs	r3, r3, #26
 8005ff8:	f003 021f 	and.w	r2, r3, #31
 8005ffc:	e01e      	b.n	800603c <HAL_ADC_ConfigChannel+0x450>
 8005ffe:	687b      	ldr	r3, [r7, #4]
 8006000:	681b      	ldr	r3, [r3, #0]
 8006002:	2102      	movs	r1, #2
 8006004:	4618      	mov	r0, r3
 8006006:	f7ff fa09 	bl	800541c <LL_ADC_GetOffsetChannel>
 800600a:	4603      	mov	r3, r0
 800600c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8006010:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8006014:	fa93 f3a3 	rbit	r3, r3
 8006018:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800601c:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8006020:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8006024:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8006028:	2b00      	cmp	r3, #0
 800602a:	d101      	bne.n	8006030 <HAL_ADC_ConfigChannel+0x444>
 800602c:	2320      	movs	r3, #32
 800602e:	e004      	b.n	800603a <HAL_ADC_ConfigChannel+0x44e>
 8006030:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8006034:	fab3 f383 	clz	r3, r3
 8006038:	b2db      	uxtb	r3, r3
 800603a:	461a      	mov	r2, r3
 800603c:	683b      	ldr	r3, [r7, #0]
 800603e:	681b      	ldr	r3, [r3, #0]
 8006040:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006044:	2b00      	cmp	r3, #0
 8006046:	d105      	bne.n	8006054 <HAL_ADC_ConfigChannel+0x468>
 8006048:	683b      	ldr	r3, [r7, #0]
 800604a:	681b      	ldr	r3, [r3, #0]
 800604c:	0e9b      	lsrs	r3, r3, #26
 800604e:	f003 031f 	and.w	r3, r3, #31
 8006052:	e014      	b.n	800607e <HAL_ADC_ConfigChannel+0x492>
 8006054:	683b      	ldr	r3, [r7, #0]
 8006056:	681b      	ldr	r3, [r3, #0]
 8006058:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800605a:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800605c:	fa93 f3a3 	rbit	r3, r3
 8006060:	67bb      	str	r3, [r7, #120]	@ 0x78
 8006062:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8006064:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8006068:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 800606c:	2b00      	cmp	r3, #0
 800606e:	d101      	bne.n	8006074 <HAL_ADC_ConfigChannel+0x488>
 8006070:	2320      	movs	r3, #32
 8006072:	e004      	b.n	800607e <HAL_ADC_ConfigChannel+0x492>
 8006074:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8006078:	fab3 f383 	clz	r3, r3
 800607c:	b2db      	uxtb	r3, r3
 800607e:	429a      	cmp	r2, r3
 8006080:	d106      	bne.n	8006090 <HAL_ADC_ConfigChannel+0x4a4>
 8006082:	687b      	ldr	r3, [r7, #4]
 8006084:	681b      	ldr	r3, [r3, #0]
 8006086:	2200      	movs	r2, #0
 8006088:	2102      	movs	r1, #2
 800608a:	4618      	mov	r0, r3
 800608c:	f7ff fa5c 	bl	8005548 <LL_ADC_SetOffsetState>
 8006090:	687b      	ldr	r3, [r7, #4]
 8006092:	681b      	ldr	r3, [r3, #0]
 8006094:	2103      	movs	r1, #3
 8006096:	4618      	mov	r0, r3
 8006098:	f7ff f9c0 	bl	800541c <LL_ADC_GetOffsetChannel>
 800609c:	4603      	mov	r3, r0
 800609e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80060a2:	2b00      	cmp	r3, #0
 80060a4:	d10a      	bne.n	80060bc <HAL_ADC_ConfigChannel+0x4d0>
 80060a6:	687b      	ldr	r3, [r7, #4]
 80060a8:	681b      	ldr	r3, [r3, #0]
 80060aa:	2103      	movs	r1, #3
 80060ac:	4618      	mov	r0, r3
 80060ae:	f7ff f9b5 	bl	800541c <LL_ADC_GetOffsetChannel>
 80060b2:	4603      	mov	r3, r0
 80060b4:	0e9b      	lsrs	r3, r3, #26
 80060b6:	f003 021f 	and.w	r2, r3, #31
 80060ba:	e017      	b.n	80060ec <HAL_ADC_ConfigChannel+0x500>
 80060bc:	687b      	ldr	r3, [r7, #4]
 80060be:	681b      	ldr	r3, [r3, #0]
 80060c0:	2103      	movs	r1, #3
 80060c2:	4618      	mov	r0, r3
 80060c4:	f7ff f9aa 	bl	800541c <LL_ADC_GetOffsetChannel>
 80060c8:	4603      	mov	r3, r0
 80060ca:	673b      	str	r3, [r7, #112]	@ 0x70
 80060cc:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80060ce:	fa93 f3a3 	rbit	r3, r3
 80060d2:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80060d4:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80060d6:	677b      	str	r3, [r7, #116]	@ 0x74
 80060d8:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80060da:	2b00      	cmp	r3, #0
 80060dc:	d101      	bne.n	80060e2 <HAL_ADC_ConfigChannel+0x4f6>
 80060de:	2320      	movs	r3, #32
 80060e0:	e003      	b.n	80060ea <HAL_ADC_ConfigChannel+0x4fe>
 80060e2:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80060e4:	fab3 f383 	clz	r3, r3
 80060e8:	b2db      	uxtb	r3, r3
 80060ea:	461a      	mov	r2, r3
 80060ec:	683b      	ldr	r3, [r7, #0]
 80060ee:	681b      	ldr	r3, [r3, #0]
 80060f0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80060f4:	2b00      	cmp	r3, #0
 80060f6:	d105      	bne.n	8006104 <HAL_ADC_ConfigChannel+0x518>
 80060f8:	683b      	ldr	r3, [r7, #0]
 80060fa:	681b      	ldr	r3, [r3, #0]
 80060fc:	0e9b      	lsrs	r3, r3, #26
 80060fe:	f003 031f 	and.w	r3, r3, #31
 8006102:	e011      	b.n	8006128 <HAL_ADC_ConfigChannel+0x53c>
 8006104:	683b      	ldr	r3, [r7, #0]
 8006106:	681b      	ldr	r3, [r3, #0]
 8006108:	667b      	str	r3, [r7, #100]	@ 0x64
 800610a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800610c:	fa93 f3a3 	rbit	r3, r3
 8006110:	663b      	str	r3, [r7, #96]	@ 0x60
 8006112:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8006114:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006116:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8006118:	2b00      	cmp	r3, #0
 800611a:	d101      	bne.n	8006120 <HAL_ADC_ConfigChannel+0x534>
 800611c:	2320      	movs	r3, #32
 800611e:	e003      	b.n	8006128 <HAL_ADC_ConfigChannel+0x53c>
 8006120:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8006122:	fab3 f383 	clz	r3, r3
 8006126:	b2db      	uxtb	r3, r3
 8006128:	429a      	cmp	r2, r3
 800612a:	d14f      	bne.n	80061cc <HAL_ADC_ConfigChannel+0x5e0>
 800612c:	687b      	ldr	r3, [r7, #4]
 800612e:	681b      	ldr	r3, [r3, #0]
 8006130:	2200      	movs	r2, #0
 8006132:	2103      	movs	r1, #3
 8006134:	4618      	mov	r0, r3
 8006136:	f7ff fa07 	bl	8005548 <LL_ADC_SetOffsetState>
 800613a:	e047      	b.n	80061cc <HAL_ADC_ConfigChannel+0x5e0>
 800613c:	687b      	ldr	r3, [r7, #4]
 800613e:	681b      	ldr	r3, [r3, #0]
 8006140:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006142:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8006146:	683b      	ldr	r3, [r7, #0]
 8006148:	681b      	ldr	r3, [r3, #0]
 800614a:	069b      	lsls	r3, r3, #26
 800614c:	429a      	cmp	r2, r3
 800614e:	d107      	bne.n	8006160 <HAL_ADC_ConfigChannel+0x574>
 8006150:	687b      	ldr	r3, [r7, #4]
 8006152:	681b      	ldr	r3, [r3, #0]
 8006154:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8006156:	687b      	ldr	r3, [r7, #4]
 8006158:	681b      	ldr	r3, [r3, #0]
 800615a:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 800615e:	661a      	str	r2, [r3, #96]	@ 0x60
 8006160:	687b      	ldr	r3, [r7, #4]
 8006162:	681b      	ldr	r3, [r3, #0]
 8006164:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8006166:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800616a:	683b      	ldr	r3, [r7, #0]
 800616c:	681b      	ldr	r3, [r3, #0]
 800616e:	069b      	lsls	r3, r3, #26
 8006170:	429a      	cmp	r2, r3
 8006172:	d107      	bne.n	8006184 <HAL_ADC_ConfigChannel+0x598>
 8006174:	687b      	ldr	r3, [r7, #4]
 8006176:	681b      	ldr	r3, [r3, #0]
 8006178:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 800617a:	687b      	ldr	r3, [r7, #4]
 800617c:	681b      	ldr	r3, [r3, #0]
 800617e:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 8006182:	665a      	str	r2, [r3, #100]	@ 0x64
 8006184:	687b      	ldr	r3, [r7, #4]
 8006186:	681b      	ldr	r3, [r3, #0]
 8006188:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800618a:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800618e:	683b      	ldr	r3, [r7, #0]
 8006190:	681b      	ldr	r3, [r3, #0]
 8006192:	069b      	lsls	r3, r3, #26
 8006194:	429a      	cmp	r2, r3
 8006196:	d107      	bne.n	80061a8 <HAL_ADC_ConfigChannel+0x5bc>
 8006198:	687b      	ldr	r3, [r7, #4]
 800619a:	681b      	ldr	r3, [r3, #0]
 800619c:	6e9a      	ldr	r2, [r3, #104]	@ 0x68
 800619e:	687b      	ldr	r3, [r7, #4]
 80061a0:	681b      	ldr	r3, [r3, #0]
 80061a2:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 80061a6:	669a      	str	r2, [r3, #104]	@ 0x68
 80061a8:	687b      	ldr	r3, [r7, #4]
 80061aa:	681b      	ldr	r3, [r3, #0]
 80061ac:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80061ae:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 80061b2:	683b      	ldr	r3, [r7, #0]
 80061b4:	681b      	ldr	r3, [r3, #0]
 80061b6:	069b      	lsls	r3, r3, #26
 80061b8:	429a      	cmp	r2, r3
 80061ba:	d107      	bne.n	80061cc <HAL_ADC_ConfigChannel+0x5e0>
 80061bc:	687b      	ldr	r3, [r7, #4]
 80061be:	681b      	ldr	r3, [r3, #0]
 80061c0:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
 80061c2:	687b      	ldr	r3, [r7, #4]
 80061c4:	681b      	ldr	r3, [r3, #0]
 80061c6:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 80061ca:	66da      	str	r2, [r3, #108]	@ 0x6c
 80061cc:	687b      	ldr	r3, [r7, #4]
 80061ce:	681b      	ldr	r3, [r3, #0]
 80061d0:	4618      	mov	r0, r3
 80061d2:	f7ff fac9 	bl	8005768 <LL_ADC_IsEnabled>
 80061d6:	4603      	mov	r3, r0
 80061d8:	2b00      	cmp	r3, #0
 80061da:	f040 8219 	bne.w	8006610 <HAL_ADC_ConfigChannel+0xa24>
 80061de:	687b      	ldr	r3, [r7, #4]
 80061e0:	6818      	ldr	r0, [r3, #0]
 80061e2:	683b      	ldr	r3, [r7, #0]
 80061e4:	6819      	ldr	r1, [r3, #0]
 80061e6:	683b      	ldr	r3, [r7, #0]
 80061e8:	68db      	ldr	r3, [r3, #12]
 80061ea:	461a      	mov	r2, r3
 80061ec:	f7ff fa2e 	bl	800564c <LL_ADC_SetChannelSingleDiff>
 80061f0:	683b      	ldr	r3, [r7, #0]
 80061f2:	68db      	ldr	r3, [r3, #12]
 80061f4:	4aa1      	ldr	r2, [pc, #644]	@ (800647c <HAL_ADC_ConfigChannel+0x890>)
 80061f6:	4293      	cmp	r3, r2
 80061f8:	f040 812e 	bne.w	8006458 <HAL_ADC_ConfigChannel+0x86c>
 80061fc:	687b      	ldr	r3, [r7, #4]
 80061fe:	6818      	ldr	r0, [r3, #0]
 8006200:	683b      	ldr	r3, [r7, #0]
 8006202:	681b      	ldr	r3, [r3, #0]
 8006204:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006208:	2b00      	cmp	r3, #0
 800620a:	d10b      	bne.n	8006224 <HAL_ADC_ConfigChannel+0x638>
 800620c:	683b      	ldr	r3, [r7, #0]
 800620e:	681b      	ldr	r3, [r3, #0]
 8006210:	0e9b      	lsrs	r3, r3, #26
 8006212:	3301      	adds	r3, #1
 8006214:	f003 031f 	and.w	r3, r3, #31
 8006218:	2b09      	cmp	r3, #9
 800621a:	bf94      	ite	ls
 800621c:	2301      	movls	r3, #1
 800621e:	2300      	movhi	r3, #0
 8006220:	b2db      	uxtb	r3, r3
 8006222:	e019      	b.n	8006258 <HAL_ADC_ConfigChannel+0x66c>
 8006224:	683b      	ldr	r3, [r7, #0]
 8006226:	681b      	ldr	r3, [r3, #0]
 8006228:	65bb      	str	r3, [r7, #88]	@ 0x58
 800622a:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800622c:	fa93 f3a3 	rbit	r3, r3
 8006230:	657b      	str	r3, [r7, #84]	@ 0x54
 8006232:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8006234:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006236:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8006238:	2b00      	cmp	r3, #0
 800623a:	d101      	bne.n	8006240 <HAL_ADC_ConfigChannel+0x654>
 800623c:	2320      	movs	r3, #32
 800623e:	e003      	b.n	8006248 <HAL_ADC_ConfigChannel+0x65c>
 8006240:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8006242:	fab3 f383 	clz	r3, r3
 8006246:	b2db      	uxtb	r3, r3
 8006248:	3301      	adds	r3, #1
 800624a:	f003 031f 	and.w	r3, r3, #31
 800624e:	2b09      	cmp	r3, #9
 8006250:	bf94      	ite	ls
 8006252:	2301      	movls	r3, #1
 8006254:	2300      	movhi	r3, #0
 8006256:	b2db      	uxtb	r3, r3
 8006258:	2b00      	cmp	r3, #0
 800625a:	d079      	beq.n	8006350 <HAL_ADC_ConfigChannel+0x764>
 800625c:	683b      	ldr	r3, [r7, #0]
 800625e:	681b      	ldr	r3, [r3, #0]
 8006260:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006264:	2b00      	cmp	r3, #0
 8006266:	d107      	bne.n	8006278 <HAL_ADC_ConfigChannel+0x68c>
 8006268:	683b      	ldr	r3, [r7, #0]
 800626a:	681b      	ldr	r3, [r3, #0]
 800626c:	0e9b      	lsrs	r3, r3, #26
 800626e:	3301      	adds	r3, #1
 8006270:	069b      	lsls	r3, r3, #26
 8006272:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8006276:	e015      	b.n	80062a4 <HAL_ADC_ConfigChannel+0x6b8>
 8006278:	683b      	ldr	r3, [r7, #0]
 800627a:	681b      	ldr	r3, [r3, #0]
 800627c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800627e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8006280:	fa93 f3a3 	rbit	r3, r3
 8006284:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006286:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8006288:	653b      	str	r3, [r7, #80]	@ 0x50
 800628a:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800628c:	2b00      	cmp	r3, #0
 800628e:	d101      	bne.n	8006294 <HAL_ADC_ConfigChannel+0x6a8>
 8006290:	2320      	movs	r3, #32
 8006292:	e003      	b.n	800629c <HAL_ADC_ConfigChannel+0x6b0>
 8006294:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8006296:	fab3 f383 	clz	r3, r3
 800629a:	b2db      	uxtb	r3, r3
 800629c:	3301      	adds	r3, #1
 800629e:	069b      	lsls	r3, r3, #26
 80062a0:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 80062a4:	683b      	ldr	r3, [r7, #0]
 80062a6:	681b      	ldr	r3, [r3, #0]
 80062a8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80062ac:	2b00      	cmp	r3, #0
 80062ae:	d109      	bne.n	80062c4 <HAL_ADC_ConfigChannel+0x6d8>
 80062b0:	683b      	ldr	r3, [r7, #0]
 80062b2:	681b      	ldr	r3, [r3, #0]
 80062b4:	0e9b      	lsrs	r3, r3, #26
 80062b6:	3301      	adds	r3, #1
 80062b8:	f003 031f 	and.w	r3, r3, #31
 80062bc:	2101      	movs	r1, #1
 80062be:	fa01 f303 	lsl.w	r3, r1, r3
 80062c2:	e017      	b.n	80062f4 <HAL_ADC_ConfigChannel+0x708>
 80062c4:	683b      	ldr	r3, [r7, #0]
 80062c6:	681b      	ldr	r3, [r3, #0]
 80062c8:	643b      	str	r3, [r7, #64]	@ 0x40
 80062ca:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80062cc:	fa93 f3a3 	rbit	r3, r3
 80062d0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80062d2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80062d4:	647b      	str	r3, [r7, #68]	@ 0x44
 80062d6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80062d8:	2b00      	cmp	r3, #0
 80062da:	d101      	bne.n	80062e0 <HAL_ADC_ConfigChannel+0x6f4>
 80062dc:	2320      	movs	r3, #32
 80062de:	e003      	b.n	80062e8 <HAL_ADC_ConfigChannel+0x6fc>
 80062e0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80062e2:	fab3 f383 	clz	r3, r3
 80062e6:	b2db      	uxtb	r3, r3
 80062e8:	3301      	adds	r3, #1
 80062ea:	f003 031f 	and.w	r3, r3, #31
 80062ee:	2101      	movs	r1, #1
 80062f0:	fa01 f303 	lsl.w	r3, r1, r3
 80062f4:	ea42 0103 	orr.w	r1, r2, r3
 80062f8:	683b      	ldr	r3, [r7, #0]
 80062fa:	681b      	ldr	r3, [r3, #0]
 80062fc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006300:	2b00      	cmp	r3, #0
 8006302:	d10a      	bne.n	800631a <HAL_ADC_ConfigChannel+0x72e>
 8006304:	683b      	ldr	r3, [r7, #0]
 8006306:	681b      	ldr	r3, [r3, #0]
 8006308:	0e9b      	lsrs	r3, r3, #26
 800630a:	3301      	adds	r3, #1
 800630c:	f003 021f 	and.w	r2, r3, #31
 8006310:	4613      	mov	r3, r2
 8006312:	005b      	lsls	r3, r3, #1
 8006314:	4413      	add	r3, r2
 8006316:	051b      	lsls	r3, r3, #20
 8006318:	e018      	b.n	800634c <HAL_ADC_ConfigChannel+0x760>
 800631a:	683b      	ldr	r3, [r7, #0]
 800631c:	681b      	ldr	r3, [r3, #0]
 800631e:	637b      	str	r3, [r7, #52]	@ 0x34
 8006320:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006322:	fa93 f3a3 	rbit	r3, r3
 8006326:	633b      	str	r3, [r7, #48]	@ 0x30
 8006328:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800632a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800632c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800632e:	2b00      	cmp	r3, #0
 8006330:	d101      	bne.n	8006336 <HAL_ADC_ConfigChannel+0x74a>
 8006332:	2320      	movs	r3, #32
 8006334:	e003      	b.n	800633e <HAL_ADC_ConfigChannel+0x752>
 8006336:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006338:	fab3 f383 	clz	r3, r3
 800633c:	b2db      	uxtb	r3, r3
 800633e:	3301      	adds	r3, #1
 8006340:	f003 021f 	and.w	r2, r3, #31
 8006344:	4613      	mov	r3, r2
 8006346:	005b      	lsls	r3, r3, #1
 8006348:	4413      	add	r3, r2
 800634a:	051b      	lsls	r3, r3, #20
 800634c:	430b      	orrs	r3, r1
 800634e:	e07e      	b.n	800644e <HAL_ADC_ConfigChannel+0x862>
 8006350:	683b      	ldr	r3, [r7, #0]
 8006352:	681b      	ldr	r3, [r3, #0]
 8006354:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006358:	2b00      	cmp	r3, #0
 800635a:	d107      	bne.n	800636c <HAL_ADC_ConfigChannel+0x780>
 800635c:	683b      	ldr	r3, [r7, #0]
 800635e:	681b      	ldr	r3, [r3, #0]
 8006360:	0e9b      	lsrs	r3, r3, #26
 8006362:	3301      	adds	r3, #1
 8006364:	069b      	lsls	r3, r3, #26
 8006366:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800636a:	e015      	b.n	8006398 <HAL_ADC_ConfigChannel+0x7ac>
 800636c:	683b      	ldr	r3, [r7, #0]
 800636e:	681b      	ldr	r3, [r3, #0]
 8006370:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006372:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006374:	fa93 f3a3 	rbit	r3, r3
 8006378:	627b      	str	r3, [r7, #36]	@ 0x24
 800637a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800637c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800637e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006380:	2b00      	cmp	r3, #0
 8006382:	d101      	bne.n	8006388 <HAL_ADC_ConfigChannel+0x79c>
 8006384:	2320      	movs	r3, #32
 8006386:	e003      	b.n	8006390 <HAL_ADC_ConfigChannel+0x7a4>
 8006388:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800638a:	fab3 f383 	clz	r3, r3
 800638e:	b2db      	uxtb	r3, r3
 8006390:	3301      	adds	r3, #1
 8006392:	069b      	lsls	r3, r3, #26
 8006394:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8006398:	683b      	ldr	r3, [r7, #0]
 800639a:	681b      	ldr	r3, [r3, #0]
 800639c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80063a0:	2b00      	cmp	r3, #0
 80063a2:	d109      	bne.n	80063b8 <HAL_ADC_ConfigChannel+0x7cc>
 80063a4:	683b      	ldr	r3, [r7, #0]
 80063a6:	681b      	ldr	r3, [r3, #0]
 80063a8:	0e9b      	lsrs	r3, r3, #26
 80063aa:	3301      	adds	r3, #1
 80063ac:	f003 031f 	and.w	r3, r3, #31
 80063b0:	2101      	movs	r1, #1
 80063b2:	fa01 f303 	lsl.w	r3, r1, r3
 80063b6:	e017      	b.n	80063e8 <HAL_ADC_ConfigChannel+0x7fc>
 80063b8:	683b      	ldr	r3, [r7, #0]
 80063ba:	681b      	ldr	r3, [r3, #0]
 80063bc:	61fb      	str	r3, [r7, #28]
 80063be:	69fb      	ldr	r3, [r7, #28]
 80063c0:	fa93 f3a3 	rbit	r3, r3
 80063c4:	61bb      	str	r3, [r7, #24]
 80063c6:	69bb      	ldr	r3, [r7, #24]
 80063c8:	623b      	str	r3, [r7, #32]
 80063ca:	6a3b      	ldr	r3, [r7, #32]
 80063cc:	2b00      	cmp	r3, #0
 80063ce:	d101      	bne.n	80063d4 <HAL_ADC_ConfigChannel+0x7e8>
 80063d0:	2320      	movs	r3, #32
 80063d2:	e003      	b.n	80063dc <HAL_ADC_ConfigChannel+0x7f0>
 80063d4:	6a3b      	ldr	r3, [r7, #32]
 80063d6:	fab3 f383 	clz	r3, r3
 80063da:	b2db      	uxtb	r3, r3
 80063dc:	3301      	adds	r3, #1
 80063de:	f003 031f 	and.w	r3, r3, #31
 80063e2:	2101      	movs	r1, #1
 80063e4:	fa01 f303 	lsl.w	r3, r1, r3
 80063e8:	ea42 0103 	orr.w	r1, r2, r3
 80063ec:	683b      	ldr	r3, [r7, #0]
 80063ee:	681b      	ldr	r3, [r3, #0]
 80063f0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80063f4:	2b00      	cmp	r3, #0
 80063f6:	d10d      	bne.n	8006414 <HAL_ADC_ConfigChannel+0x828>
 80063f8:	683b      	ldr	r3, [r7, #0]
 80063fa:	681b      	ldr	r3, [r3, #0]
 80063fc:	0e9b      	lsrs	r3, r3, #26
 80063fe:	3301      	adds	r3, #1
 8006400:	f003 021f 	and.w	r2, r3, #31
 8006404:	4613      	mov	r3, r2
 8006406:	005b      	lsls	r3, r3, #1
 8006408:	4413      	add	r3, r2
 800640a:	3b1e      	subs	r3, #30
 800640c:	051b      	lsls	r3, r3, #20
 800640e:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8006412:	e01b      	b.n	800644c <HAL_ADC_ConfigChannel+0x860>
 8006414:	683b      	ldr	r3, [r7, #0]
 8006416:	681b      	ldr	r3, [r3, #0]
 8006418:	613b      	str	r3, [r7, #16]
 800641a:	693b      	ldr	r3, [r7, #16]
 800641c:	fa93 f3a3 	rbit	r3, r3
 8006420:	60fb      	str	r3, [r7, #12]
 8006422:	68fb      	ldr	r3, [r7, #12]
 8006424:	617b      	str	r3, [r7, #20]
 8006426:	697b      	ldr	r3, [r7, #20]
 8006428:	2b00      	cmp	r3, #0
 800642a:	d101      	bne.n	8006430 <HAL_ADC_ConfigChannel+0x844>
 800642c:	2320      	movs	r3, #32
 800642e:	e003      	b.n	8006438 <HAL_ADC_ConfigChannel+0x84c>
 8006430:	697b      	ldr	r3, [r7, #20]
 8006432:	fab3 f383 	clz	r3, r3
 8006436:	b2db      	uxtb	r3, r3
 8006438:	3301      	adds	r3, #1
 800643a:	f003 021f 	and.w	r2, r3, #31
 800643e:	4613      	mov	r3, r2
 8006440:	005b      	lsls	r3, r3, #1
 8006442:	4413      	add	r3, r2
 8006444:	3b1e      	subs	r3, #30
 8006446:	051b      	lsls	r3, r3, #20
 8006448:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800644c:	430b      	orrs	r3, r1
 800644e:	683a      	ldr	r2, [r7, #0]
 8006450:	6892      	ldr	r2, [r2, #8]
 8006452:	4619      	mov	r1, r3
 8006454:	f7ff f8ce 	bl	80055f4 <LL_ADC_SetChannelSamplingTime>
 8006458:	683b      	ldr	r3, [r7, #0]
 800645a:	681b      	ldr	r3, [r3, #0]
 800645c:	2b00      	cmp	r3, #0
 800645e:	f280 80d7 	bge.w	8006610 <HAL_ADC_ConfigChannel+0xa24>
 8006462:	687b      	ldr	r3, [r7, #4]
 8006464:	681b      	ldr	r3, [r3, #0]
 8006466:	4a06      	ldr	r2, [pc, #24]	@ (8006480 <HAL_ADC_ConfigChannel+0x894>)
 8006468:	4293      	cmp	r3, r2
 800646a:	d004      	beq.n	8006476 <HAL_ADC_ConfigChannel+0x88a>
 800646c:	687b      	ldr	r3, [r7, #4]
 800646e:	681b      	ldr	r3, [r3, #0]
 8006470:	4a04      	ldr	r2, [pc, #16]	@ (8006484 <HAL_ADC_ConfigChannel+0x898>)
 8006472:	4293      	cmp	r3, r2
 8006474:	d10a      	bne.n	800648c <HAL_ADC_ConfigChannel+0x8a0>
 8006476:	4b04      	ldr	r3, [pc, #16]	@ (8006488 <HAL_ADC_ConfigChannel+0x89c>)
 8006478:	e009      	b.n	800648e <HAL_ADC_ConfigChannel+0x8a2>
 800647a:	bf00      	nop
 800647c:	47ff0000 	.word	0x47ff0000
 8006480:	40022000 	.word	0x40022000
 8006484:	40022100 	.word	0x40022100
 8006488:	40022300 	.word	0x40022300
 800648c:	4b65      	ldr	r3, [pc, #404]	@ (8006624 <HAL_ADC_ConfigChannel+0xa38>)
 800648e:	4618      	mov	r0, r3
 8006490:	f7fe ff84 	bl	800539c <LL_ADC_GetCommonPathInternalCh>
 8006494:	f8c7 00cc 	str.w	r0, [r7, #204]	@ 0xcc
 8006498:	687b      	ldr	r3, [r7, #4]
 800649a:	681b      	ldr	r3, [r3, #0]
 800649c:	4a62      	ldr	r2, [pc, #392]	@ (8006628 <HAL_ADC_ConfigChannel+0xa3c>)
 800649e:	4293      	cmp	r3, r2
 80064a0:	d004      	beq.n	80064ac <HAL_ADC_ConfigChannel+0x8c0>
 80064a2:	687b      	ldr	r3, [r7, #4]
 80064a4:	681b      	ldr	r3, [r3, #0]
 80064a6:	4a61      	ldr	r2, [pc, #388]	@ (800662c <HAL_ADC_ConfigChannel+0xa40>)
 80064a8:	4293      	cmp	r3, r2
 80064aa:	d10e      	bne.n	80064ca <HAL_ADC_ConfigChannel+0x8de>
 80064ac:	485e      	ldr	r0, [pc, #376]	@ (8006628 <HAL_ADC_ConfigChannel+0xa3c>)
 80064ae:	f7ff f95b 	bl	8005768 <LL_ADC_IsEnabled>
 80064b2:	4604      	mov	r4, r0
 80064b4:	485d      	ldr	r0, [pc, #372]	@ (800662c <HAL_ADC_ConfigChannel+0xa40>)
 80064b6:	f7ff f957 	bl	8005768 <LL_ADC_IsEnabled>
 80064ba:	4603      	mov	r3, r0
 80064bc:	4323      	orrs	r3, r4
 80064be:	2b00      	cmp	r3, #0
 80064c0:	bf0c      	ite	eq
 80064c2:	2301      	moveq	r3, #1
 80064c4:	2300      	movne	r3, #0
 80064c6:	b2db      	uxtb	r3, r3
 80064c8:	e008      	b.n	80064dc <HAL_ADC_ConfigChannel+0x8f0>
 80064ca:	4859      	ldr	r0, [pc, #356]	@ (8006630 <HAL_ADC_ConfigChannel+0xa44>)
 80064cc:	f7ff f94c 	bl	8005768 <LL_ADC_IsEnabled>
 80064d0:	4603      	mov	r3, r0
 80064d2:	2b00      	cmp	r3, #0
 80064d4:	bf0c      	ite	eq
 80064d6:	2301      	moveq	r3, #1
 80064d8:	2300      	movne	r3, #0
 80064da:	b2db      	uxtb	r3, r3
 80064dc:	2b00      	cmp	r3, #0
 80064de:	f000 8084 	beq.w	80065ea <HAL_ADC_ConfigChannel+0x9fe>
 80064e2:	683b      	ldr	r3, [r7, #0]
 80064e4:	681b      	ldr	r3, [r3, #0]
 80064e6:	4a53      	ldr	r2, [pc, #332]	@ (8006634 <HAL_ADC_ConfigChannel+0xa48>)
 80064e8:	4293      	cmp	r3, r2
 80064ea:	d132      	bne.n	8006552 <HAL_ADC_ConfigChannel+0x966>
 80064ec:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 80064f0:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80064f4:	2b00      	cmp	r3, #0
 80064f6:	d12c      	bne.n	8006552 <HAL_ADC_ConfigChannel+0x966>
 80064f8:	687b      	ldr	r3, [r7, #4]
 80064fa:	681b      	ldr	r3, [r3, #0]
 80064fc:	4a4c      	ldr	r2, [pc, #304]	@ (8006630 <HAL_ADC_ConfigChannel+0xa44>)
 80064fe:	4293      	cmp	r3, r2
 8006500:	f040 8086 	bne.w	8006610 <HAL_ADC_ConfigChannel+0xa24>
 8006504:	687b      	ldr	r3, [r7, #4]
 8006506:	681b      	ldr	r3, [r3, #0]
 8006508:	4a47      	ldr	r2, [pc, #284]	@ (8006628 <HAL_ADC_ConfigChannel+0xa3c>)
 800650a:	4293      	cmp	r3, r2
 800650c:	d004      	beq.n	8006518 <HAL_ADC_ConfigChannel+0x92c>
 800650e:	687b      	ldr	r3, [r7, #4]
 8006510:	681b      	ldr	r3, [r3, #0]
 8006512:	4a46      	ldr	r2, [pc, #280]	@ (800662c <HAL_ADC_ConfigChannel+0xa40>)
 8006514:	4293      	cmp	r3, r2
 8006516:	d101      	bne.n	800651c <HAL_ADC_ConfigChannel+0x930>
 8006518:	4a47      	ldr	r2, [pc, #284]	@ (8006638 <HAL_ADC_ConfigChannel+0xa4c>)
 800651a:	e000      	b.n	800651e <HAL_ADC_ConfigChannel+0x932>
 800651c:	4a41      	ldr	r2, [pc, #260]	@ (8006624 <HAL_ADC_ConfigChannel+0xa38>)
 800651e:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8006522:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006526:	4619      	mov	r1, r3
 8006528:	4610      	mov	r0, r2
 800652a:	f7fe ff24 	bl	8005376 <LL_ADC_SetCommonPathInternalCh>
 800652e:	4b43      	ldr	r3, [pc, #268]	@ (800663c <HAL_ADC_ConfigChannel+0xa50>)
 8006530:	681b      	ldr	r3, [r3, #0]
 8006532:	099b      	lsrs	r3, r3, #6
 8006534:	4a42      	ldr	r2, [pc, #264]	@ (8006640 <HAL_ADC_ConfigChannel+0xa54>)
 8006536:	fba2 2303 	umull	r2, r3, r2, r3
 800653a:	099b      	lsrs	r3, r3, #6
 800653c:	3301      	adds	r3, #1
 800653e:	005b      	lsls	r3, r3, #1
 8006540:	60bb      	str	r3, [r7, #8]
 8006542:	e002      	b.n	800654a <HAL_ADC_ConfigChannel+0x95e>
 8006544:	68bb      	ldr	r3, [r7, #8]
 8006546:	3b01      	subs	r3, #1
 8006548:	60bb      	str	r3, [r7, #8]
 800654a:	68bb      	ldr	r3, [r7, #8]
 800654c:	2b00      	cmp	r3, #0
 800654e:	d1f9      	bne.n	8006544 <HAL_ADC_ConfigChannel+0x958>
 8006550:	e05e      	b.n	8006610 <HAL_ADC_ConfigChannel+0xa24>
 8006552:	683b      	ldr	r3, [r7, #0]
 8006554:	681b      	ldr	r3, [r3, #0]
 8006556:	4a3b      	ldr	r2, [pc, #236]	@ (8006644 <HAL_ADC_ConfigChannel+0xa58>)
 8006558:	4293      	cmp	r3, r2
 800655a:	d120      	bne.n	800659e <HAL_ADC_ConfigChannel+0x9b2>
 800655c:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8006560:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8006564:	2b00      	cmp	r3, #0
 8006566:	d11a      	bne.n	800659e <HAL_ADC_ConfigChannel+0x9b2>
 8006568:	687b      	ldr	r3, [r7, #4]
 800656a:	681b      	ldr	r3, [r3, #0]
 800656c:	4a30      	ldr	r2, [pc, #192]	@ (8006630 <HAL_ADC_ConfigChannel+0xa44>)
 800656e:	4293      	cmp	r3, r2
 8006570:	d14e      	bne.n	8006610 <HAL_ADC_ConfigChannel+0xa24>
 8006572:	687b      	ldr	r3, [r7, #4]
 8006574:	681b      	ldr	r3, [r3, #0]
 8006576:	4a2c      	ldr	r2, [pc, #176]	@ (8006628 <HAL_ADC_ConfigChannel+0xa3c>)
 8006578:	4293      	cmp	r3, r2
 800657a:	d004      	beq.n	8006586 <HAL_ADC_ConfigChannel+0x99a>
 800657c:	687b      	ldr	r3, [r7, #4]
 800657e:	681b      	ldr	r3, [r3, #0]
 8006580:	4a2a      	ldr	r2, [pc, #168]	@ (800662c <HAL_ADC_ConfigChannel+0xa40>)
 8006582:	4293      	cmp	r3, r2
 8006584:	d101      	bne.n	800658a <HAL_ADC_ConfigChannel+0x99e>
 8006586:	4a2c      	ldr	r2, [pc, #176]	@ (8006638 <HAL_ADC_ConfigChannel+0xa4c>)
 8006588:	e000      	b.n	800658c <HAL_ADC_ConfigChannel+0x9a0>
 800658a:	4a26      	ldr	r2, [pc, #152]	@ (8006624 <HAL_ADC_ConfigChannel+0xa38>)
 800658c:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8006590:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8006594:	4619      	mov	r1, r3
 8006596:	4610      	mov	r0, r2
 8006598:	f7fe feed 	bl	8005376 <LL_ADC_SetCommonPathInternalCh>
 800659c:	e038      	b.n	8006610 <HAL_ADC_ConfigChannel+0xa24>
 800659e:	683b      	ldr	r3, [r7, #0]
 80065a0:	681b      	ldr	r3, [r3, #0]
 80065a2:	4a29      	ldr	r2, [pc, #164]	@ (8006648 <HAL_ADC_ConfigChannel+0xa5c>)
 80065a4:	4293      	cmp	r3, r2
 80065a6:	d133      	bne.n	8006610 <HAL_ADC_ConfigChannel+0xa24>
 80065a8:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 80065ac:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80065b0:	2b00      	cmp	r3, #0
 80065b2:	d12d      	bne.n	8006610 <HAL_ADC_ConfigChannel+0xa24>
 80065b4:	687b      	ldr	r3, [r7, #4]
 80065b6:	681b      	ldr	r3, [r3, #0]
 80065b8:	4a1d      	ldr	r2, [pc, #116]	@ (8006630 <HAL_ADC_ConfigChannel+0xa44>)
 80065ba:	4293      	cmp	r3, r2
 80065bc:	d128      	bne.n	8006610 <HAL_ADC_ConfigChannel+0xa24>
 80065be:	687b      	ldr	r3, [r7, #4]
 80065c0:	681b      	ldr	r3, [r3, #0]
 80065c2:	4a19      	ldr	r2, [pc, #100]	@ (8006628 <HAL_ADC_ConfigChannel+0xa3c>)
 80065c4:	4293      	cmp	r3, r2
 80065c6:	d004      	beq.n	80065d2 <HAL_ADC_ConfigChannel+0x9e6>
 80065c8:	687b      	ldr	r3, [r7, #4]
 80065ca:	681b      	ldr	r3, [r3, #0]
 80065cc:	4a17      	ldr	r2, [pc, #92]	@ (800662c <HAL_ADC_ConfigChannel+0xa40>)
 80065ce:	4293      	cmp	r3, r2
 80065d0:	d101      	bne.n	80065d6 <HAL_ADC_ConfigChannel+0x9ea>
 80065d2:	4a19      	ldr	r2, [pc, #100]	@ (8006638 <HAL_ADC_ConfigChannel+0xa4c>)
 80065d4:	e000      	b.n	80065d8 <HAL_ADC_ConfigChannel+0x9ec>
 80065d6:	4a13      	ldr	r2, [pc, #76]	@ (8006624 <HAL_ADC_ConfigChannel+0xa38>)
 80065d8:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 80065dc:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80065e0:	4619      	mov	r1, r3
 80065e2:	4610      	mov	r0, r2
 80065e4:	f7fe fec7 	bl	8005376 <LL_ADC_SetCommonPathInternalCh>
 80065e8:	e012      	b.n	8006610 <HAL_ADC_ConfigChannel+0xa24>
 80065ea:	687b      	ldr	r3, [r7, #4]
 80065ec:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80065ee:	f043 0220 	orr.w	r2, r3, #32
 80065f2:	687b      	ldr	r3, [r7, #4]
 80065f4:	661a      	str	r2, [r3, #96]	@ 0x60
 80065f6:	2301      	movs	r3, #1
 80065f8:	f887 30df 	strb.w	r3, [r7, #223]	@ 0xdf
 80065fc:	e008      	b.n	8006610 <HAL_ADC_ConfigChannel+0xa24>
 80065fe:	687b      	ldr	r3, [r7, #4]
 8006600:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006602:	f043 0220 	orr.w	r2, r3, #32
 8006606:	687b      	ldr	r3, [r7, #4]
 8006608:	661a      	str	r2, [r3, #96]	@ 0x60
 800660a:	2301      	movs	r3, #1
 800660c:	f887 30df 	strb.w	r3, [r7, #223]	@ 0xdf
 8006610:	687b      	ldr	r3, [r7, #4]
 8006612:	2200      	movs	r2, #0
 8006614:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8006618:	f897 30df 	ldrb.w	r3, [r7, #223]	@ 0xdf
 800661c:	4618      	mov	r0, r3
 800661e:	37e4      	adds	r7, #228	@ 0xe4
 8006620:	46bd      	mov	sp, r7
 8006622:	bd90      	pop	{r4, r7, pc}
 8006624:	58026300 	.word	0x58026300
 8006628:	40022000 	.word	0x40022000
 800662c:	40022100 	.word	0x40022100
 8006630:	58026000 	.word	0x58026000
 8006634:	c7520000 	.word	0xc7520000
 8006638:	40022300 	.word	0x40022300
 800663c:	24000000 	.word	0x24000000
 8006640:	053e2d63 	.word	0x053e2d63
 8006644:	c3210000 	.word	0xc3210000
 8006648:	cb840000 	.word	0xcb840000

0800664c <ADC_ConfigureBoostMode>:
 800664c:	b580      	push	{r7, lr}
 800664e:	b084      	sub	sp, #16
 8006650:	af00      	add	r7, sp, #0
 8006652:	6078      	str	r0, [r7, #4]
 8006654:	687b      	ldr	r3, [r7, #4]
 8006656:	681b      	ldr	r3, [r3, #0]
 8006658:	4a6c      	ldr	r2, [pc, #432]	@ (800680c <ADC_ConfigureBoostMode+0x1c0>)
 800665a:	4293      	cmp	r3, r2
 800665c:	d004      	beq.n	8006668 <ADC_ConfigureBoostMode+0x1c>
 800665e:	687b      	ldr	r3, [r7, #4]
 8006660:	681b      	ldr	r3, [r3, #0]
 8006662:	4a6b      	ldr	r2, [pc, #428]	@ (8006810 <ADC_ConfigureBoostMode+0x1c4>)
 8006664:	4293      	cmp	r3, r2
 8006666:	d109      	bne.n	800667c <ADC_ConfigureBoostMode+0x30>
 8006668:	4b6a      	ldr	r3, [pc, #424]	@ (8006814 <ADC_ConfigureBoostMode+0x1c8>)
 800666a:	689b      	ldr	r3, [r3, #8]
 800666c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006670:	2b00      	cmp	r3, #0
 8006672:	bf14      	ite	ne
 8006674:	2301      	movne	r3, #1
 8006676:	2300      	moveq	r3, #0
 8006678:	b2db      	uxtb	r3, r3
 800667a:	e008      	b.n	800668e <ADC_ConfigureBoostMode+0x42>
 800667c:	4b66      	ldr	r3, [pc, #408]	@ (8006818 <ADC_ConfigureBoostMode+0x1cc>)
 800667e:	689b      	ldr	r3, [r3, #8]
 8006680:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006684:	2b00      	cmp	r3, #0
 8006686:	bf14      	ite	ne
 8006688:	2301      	movne	r3, #1
 800668a:	2300      	moveq	r3, #0
 800668c:	b2db      	uxtb	r3, r3
 800668e:	2b00      	cmp	r3, #0
 8006690:	d01c      	beq.n	80066cc <ADC_ConfigureBoostMode+0x80>
 8006692:	f005 fbe5 	bl	800be60 <HAL_RCC_GetHCLKFreq>
 8006696:	60f8      	str	r0, [r7, #12]
 8006698:	687b      	ldr	r3, [r7, #4]
 800669a:	685b      	ldr	r3, [r3, #4]
 800669c:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 80066a0:	d010      	beq.n	80066c4 <ADC_ConfigureBoostMode+0x78>
 80066a2:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 80066a6:	d873      	bhi.n	8006790 <ADC_ConfigureBoostMode+0x144>
 80066a8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80066ac:	d002      	beq.n	80066b4 <ADC_ConfigureBoostMode+0x68>
 80066ae:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80066b2:	d16d      	bne.n	8006790 <ADC_ConfigureBoostMode+0x144>
 80066b4:	687b      	ldr	r3, [r7, #4]
 80066b6:	685b      	ldr	r3, [r3, #4]
 80066b8:	0c1b      	lsrs	r3, r3, #16
 80066ba:	68fa      	ldr	r2, [r7, #12]
 80066bc:	fbb2 f3f3 	udiv	r3, r2, r3
 80066c0:	60fb      	str	r3, [r7, #12]
 80066c2:	e068      	b.n	8006796 <ADC_ConfigureBoostMode+0x14a>
 80066c4:	68fb      	ldr	r3, [r7, #12]
 80066c6:	089b      	lsrs	r3, r3, #2
 80066c8:	60fb      	str	r3, [r7, #12]
 80066ca:	e064      	b.n	8006796 <ADC_ConfigureBoostMode+0x14a>
 80066cc:	f44f 2000 	mov.w	r0, #524288	@ 0x80000
 80066d0:	f04f 0100 	mov.w	r1, #0
 80066d4:	f006 fdc0 	bl	800d258 <HAL_RCCEx_GetPeriphCLKFreq>
 80066d8:	60f8      	str	r0, [r7, #12]
 80066da:	687b      	ldr	r3, [r7, #4]
 80066dc:	685b      	ldr	r3, [r3, #4]
 80066de:	f5b3 1f30 	cmp.w	r3, #2883584	@ 0x2c0000
 80066e2:	d051      	beq.n	8006788 <ADC_ConfigureBoostMode+0x13c>
 80066e4:	f5b3 1f30 	cmp.w	r3, #2883584	@ 0x2c0000
 80066e8:	d854      	bhi.n	8006794 <ADC_ConfigureBoostMode+0x148>
 80066ea:	f5b3 1f20 	cmp.w	r3, #2621440	@ 0x280000
 80066ee:	d047      	beq.n	8006780 <ADC_ConfigureBoostMode+0x134>
 80066f0:	f5b3 1f20 	cmp.w	r3, #2621440	@ 0x280000
 80066f4:	d84e      	bhi.n	8006794 <ADC_ConfigureBoostMode+0x148>
 80066f6:	f5b3 1f10 	cmp.w	r3, #2359296	@ 0x240000
 80066fa:	d03d      	beq.n	8006778 <ADC_ConfigureBoostMode+0x12c>
 80066fc:	f5b3 1f10 	cmp.w	r3, #2359296	@ 0x240000
 8006700:	d848      	bhi.n	8006794 <ADC_ConfigureBoostMode+0x148>
 8006702:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8006706:	d033      	beq.n	8006770 <ADC_ConfigureBoostMode+0x124>
 8006708:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800670c:	d842      	bhi.n	8006794 <ADC_ConfigureBoostMode+0x148>
 800670e:	f5b3 1fe0 	cmp.w	r3, #1835008	@ 0x1c0000
 8006712:	d029      	beq.n	8006768 <ADC_ConfigureBoostMode+0x11c>
 8006714:	f5b3 1fe0 	cmp.w	r3, #1835008	@ 0x1c0000
 8006718:	d83c      	bhi.n	8006794 <ADC_ConfigureBoostMode+0x148>
 800671a:	f5b3 1fc0 	cmp.w	r3, #1572864	@ 0x180000
 800671e:	d01a      	beq.n	8006756 <ADC_ConfigureBoostMode+0x10a>
 8006720:	f5b3 1fc0 	cmp.w	r3, #1572864	@ 0x180000
 8006724:	d836      	bhi.n	8006794 <ADC_ConfigureBoostMode+0x148>
 8006726:	f5b3 1fa0 	cmp.w	r3, #1310720	@ 0x140000
 800672a:	d014      	beq.n	8006756 <ADC_ConfigureBoostMode+0x10a>
 800672c:	f5b3 1fa0 	cmp.w	r3, #1310720	@ 0x140000
 8006730:	d830      	bhi.n	8006794 <ADC_ConfigureBoostMode+0x148>
 8006732:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8006736:	d00e      	beq.n	8006756 <ADC_ConfigureBoostMode+0x10a>
 8006738:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800673c:	d82a      	bhi.n	8006794 <ADC_ConfigureBoostMode+0x148>
 800673e:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8006742:	d008      	beq.n	8006756 <ADC_ConfigureBoostMode+0x10a>
 8006744:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8006748:	d824      	bhi.n	8006794 <ADC_ConfigureBoostMode+0x148>
 800674a:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 800674e:	d002      	beq.n	8006756 <ADC_ConfigureBoostMode+0x10a>
 8006750:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8006754:	d11e      	bne.n	8006794 <ADC_ConfigureBoostMode+0x148>
 8006756:	687b      	ldr	r3, [r7, #4]
 8006758:	685b      	ldr	r3, [r3, #4]
 800675a:	0c9b      	lsrs	r3, r3, #18
 800675c:	005b      	lsls	r3, r3, #1
 800675e:	68fa      	ldr	r2, [r7, #12]
 8006760:	fbb2 f3f3 	udiv	r3, r2, r3
 8006764:	60fb      	str	r3, [r7, #12]
 8006766:	e016      	b.n	8006796 <ADC_ConfigureBoostMode+0x14a>
 8006768:	68fb      	ldr	r3, [r7, #12]
 800676a:	091b      	lsrs	r3, r3, #4
 800676c:	60fb      	str	r3, [r7, #12]
 800676e:	e012      	b.n	8006796 <ADC_ConfigureBoostMode+0x14a>
 8006770:	68fb      	ldr	r3, [r7, #12]
 8006772:	095b      	lsrs	r3, r3, #5
 8006774:	60fb      	str	r3, [r7, #12]
 8006776:	e00e      	b.n	8006796 <ADC_ConfigureBoostMode+0x14a>
 8006778:	68fb      	ldr	r3, [r7, #12]
 800677a:	099b      	lsrs	r3, r3, #6
 800677c:	60fb      	str	r3, [r7, #12]
 800677e:	e00a      	b.n	8006796 <ADC_ConfigureBoostMode+0x14a>
 8006780:	68fb      	ldr	r3, [r7, #12]
 8006782:	09db      	lsrs	r3, r3, #7
 8006784:	60fb      	str	r3, [r7, #12]
 8006786:	e006      	b.n	8006796 <ADC_ConfigureBoostMode+0x14a>
 8006788:	68fb      	ldr	r3, [r7, #12]
 800678a:	0a1b      	lsrs	r3, r3, #8
 800678c:	60fb      	str	r3, [r7, #12]
 800678e:	e002      	b.n	8006796 <ADC_ConfigureBoostMode+0x14a>
 8006790:	bf00      	nop
 8006792:	e000      	b.n	8006796 <ADC_ConfigureBoostMode+0x14a>
 8006794:	bf00      	nop
 8006796:	68fb      	ldr	r3, [r7, #12]
 8006798:	085b      	lsrs	r3, r3, #1
 800679a:	60fb      	str	r3, [r7, #12]
 800679c:	68fb      	ldr	r3, [r7, #12]
 800679e:	4a1f      	ldr	r2, [pc, #124]	@ (800681c <ADC_ConfigureBoostMode+0x1d0>)
 80067a0:	4293      	cmp	r3, r2
 80067a2:	d808      	bhi.n	80067b6 <ADC_ConfigureBoostMode+0x16a>
 80067a4:	687b      	ldr	r3, [r7, #4]
 80067a6:	681b      	ldr	r3, [r3, #0]
 80067a8:	689a      	ldr	r2, [r3, #8]
 80067aa:	687b      	ldr	r3, [r7, #4]
 80067ac:	681b      	ldr	r3, [r3, #0]
 80067ae:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80067b2:	609a      	str	r2, [r3, #8]
 80067b4:	e025      	b.n	8006802 <ADC_ConfigureBoostMode+0x1b6>
 80067b6:	68fb      	ldr	r3, [r7, #12]
 80067b8:	4a19      	ldr	r2, [pc, #100]	@ (8006820 <ADC_ConfigureBoostMode+0x1d4>)
 80067ba:	4293      	cmp	r3, r2
 80067bc:	d80a      	bhi.n	80067d4 <ADC_ConfigureBoostMode+0x188>
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	681b      	ldr	r3, [r3, #0]
 80067c2:	689b      	ldr	r3, [r3, #8]
 80067c4:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80067c8:	687b      	ldr	r3, [r7, #4]
 80067ca:	681b      	ldr	r3, [r3, #0]
 80067cc:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80067d0:	609a      	str	r2, [r3, #8]
 80067d2:	e016      	b.n	8006802 <ADC_ConfigureBoostMode+0x1b6>
 80067d4:	68fb      	ldr	r3, [r7, #12]
 80067d6:	4a13      	ldr	r2, [pc, #76]	@ (8006824 <ADC_ConfigureBoostMode+0x1d8>)
 80067d8:	4293      	cmp	r3, r2
 80067da:	d80a      	bhi.n	80067f2 <ADC_ConfigureBoostMode+0x1a6>
 80067dc:	687b      	ldr	r3, [r7, #4]
 80067de:	681b      	ldr	r3, [r3, #0]
 80067e0:	689b      	ldr	r3, [r3, #8]
 80067e2:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80067e6:	687b      	ldr	r3, [r7, #4]
 80067e8:	681b      	ldr	r3, [r3, #0]
 80067ea:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80067ee:	609a      	str	r2, [r3, #8]
 80067f0:	e007      	b.n	8006802 <ADC_ConfigureBoostMode+0x1b6>
 80067f2:	687b      	ldr	r3, [r7, #4]
 80067f4:	681b      	ldr	r3, [r3, #0]
 80067f6:	689a      	ldr	r2, [r3, #8]
 80067f8:	687b      	ldr	r3, [r7, #4]
 80067fa:	681b      	ldr	r3, [r3, #0]
 80067fc:	f442 7240 	orr.w	r2, r2, #768	@ 0x300
 8006800:	609a      	str	r2, [r3, #8]
 8006802:	bf00      	nop
 8006804:	3710      	adds	r7, #16
 8006806:	46bd      	mov	sp, r7
 8006808:	bd80      	pop	{r7, pc}
 800680a:	bf00      	nop
 800680c:	40022000 	.word	0x40022000
 8006810:	40022100 	.word	0x40022100
 8006814:	40022300 	.word	0x40022300
 8006818:	58026300 	.word	0x58026300
 800681c:	005f5e10 	.word	0x005f5e10
 8006820:	00bebc20 	.word	0x00bebc20
 8006824:	017d7840 	.word	0x017d7840

08006828 <LL_ADC_IsEnabled>:
 8006828:	b480      	push	{r7}
 800682a:	b083      	sub	sp, #12
 800682c:	af00      	add	r7, sp, #0
 800682e:	6078      	str	r0, [r7, #4]
 8006830:	687b      	ldr	r3, [r7, #4]
 8006832:	689b      	ldr	r3, [r3, #8]
 8006834:	f003 0301 	and.w	r3, r3, #1
 8006838:	2b01      	cmp	r3, #1
 800683a:	d101      	bne.n	8006840 <LL_ADC_IsEnabled+0x18>
 800683c:	2301      	movs	r3, #1
 800683e:	e000      	b.n	8006842 <LL_ADC_IsEnabled+0x1a>
 8006840:	2300      	movs	r3, #0
 8006842:	4618      	mov	r0, r3
 8006844:	370c      	adds	r7, #12
 8006846:	46bd      	mov	sp, r7
 8006848:	f85d 7b04 	ldr.w	r7, [sp], #4
 800684c:	4770      	bx	lr

0800684e <LL_ADC_REG_IsConversionOngoing>:
 800684e:	b480      	push	{r7}
 8006850:	b083      	sub	sp, #12
 8006852:	af00      	add	r7, sp, #0
 8006854:	6078      	str	r0, [r7, #4]
 8006856:	687b      	ldr	r3, [r7, #4]
 8006858:	689b      	ldr	r3, [r3, #8]
 800685a:	f003 0304 	and.w	r3, r3, #4
 800685e:	2b04      	cmp	r3, #4
 8006860:	d101      	bne.n	8006866 <LL_ADC_REG_IsConversionOngoing+0x18>
 8006862:	2301      	movs	r3, #1
 8006864:	e000      	b.n	8006868 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8006866:	2300      	movs	r3, #0
 8006868:	4618      	mov	r0, r3
 800686a:	370c      	adds	r7, #12
 800686c:	46bd      	mov	sp, r7
 800686e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006872:	4770      	bx	lr

08006874 <HAL_ADCEx_MultiModeConfigChannel>:
 8006874:	b590      	push	{r4, r7, lr}
 8006876:	b0a3      	sub	sp, #140	@ 0x8c
 8006878:	af00      	add	r7, sp, #0
 800687a:	6078      	str	r0, [r7, #4]
 800687c:	6039      	str	r1, [r7, #0]
 800687e:	2300      	movs	r3, #0
 8006880:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 800688a:	2b01      	cmp	r3, #1
 800688c:	d101      	bne.n	8006892 <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 800688e:	2302      	movs	r3, #2
 8006890:	e0c1      	b.n	8006a16 <HAL_ADCEx_MultiModeConfigChannel+0x1a2>
 8006892:	687b      	ldr	r3, [r7, #4]
 8006894:	2201      	movs	r2, #1
 8006896:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 800689a:	2300      	movs	r3, #0
 800689c:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800689e:	2300      	movs	r3, #0
 80068a0:	673b      	str	r3, [r7, #112]	@ 0x70
 80068a2:	687b      	ldr	r3, [r7, #4]
 80068a4:	681b      	ldr	r3, [r3, #0]
 80068a6:	4a5e      	ldr	r2, [pc, #376]	@ (8006a20 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 80068a8:	4293      	cmp	r3, r2
 80068aa:	d102      	bne.n	80068b2 <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 80068ac:	4b5d      	ldr	r3, [pc, #372]	@ (8006a24 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 80068ae:	60fb      	str	r3, [r7, #12]
 80068b0:	e001      	b.n	80068b6 <HAL_ADCEx_MultiModeConfigChannel+0x42>
 80068b2:	2300      	movs	r3, #0
 80068b4:	60fb      	str	r3, [r7, #12]
 80068b6:	68fb      	ldr	r3, [r7, #12]
 80068b8:	2b00      	cmp	r3, #0
 80068ba:	d10b      	bne.n	80068d4 <HAL_ADCEx_MultiModeConfigChannel+0x60>
 80068bc:	687b      	ldr	r3, [r7, #4]
 80068be:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80068c0:	f043 0220 	orr.w	r2, r3, #32
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	661a      	str	r2, [r3, #96]	@ 0x60
 80068c8:	687b      	ldr	r3, [r7, #4]
 80068ca:	2200      	movs	r2, #0
 80068cc:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 80068d0:	2301      	movs	r3, #1
 80068d2:	e0a0      	b.n	8006a16 <HAL_ADCEx_MultiModeConfigChannel+0x1a2>
 80068d4:	68fb      	ldr	r3, [r7, #12]
 80068d6:	4618      	mov	r0, r3
 80068d8:	f7ff ffb9 	bl	800684e <LL_ADC_REG_IsConversionOngoing>
 80068dc:	f8c7 0080 	str.w	r0, [r7, #128]	@ 0x80
 80068e0:	687b      	ldr	r3, [r7, #4]
 80068e2:	681b      	ldr	r3, [r3, #0]
 80068e4:	4618      	mov	r0, r3
 80068e6:	f7ff ffb2 	bl	800684e <LL_ADC_REG_IsConversionOngoing>
 80068ea:	4603      	mov	r3, r0
 80068ec:	2b00      	cmp	r3, #0
 80068ee:	f040 8081 	bne.w	80069f4 <HAL_ADCEx_MultiModeConfigChannel+0x180>
 80068f2:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 80068f6:	2b00      	cmp	r3, #0
 80068f8:	d17c      	bne.n	80069f4 <HAL_ADCEx_MultiModeConfigChannel+0x180>
 80068fa:	687b      	ldr	r3, [r7, #4]
 80068fc:	681b      	ldr	r3, [r3, #0]
 80068fe:	4a48      	ldr	r2, [pc, #288]	@ (8006a20 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8006900:	4293      	cmp	r3, r2
 8006902:	d004      	beq.n	800690e <HAL_ADCEx_MultiModeConfigChannel+0x9a>
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	681b      	ldr	r3, [r3, #0]
 8006908:	4a46      	ldr	r2, [pc, #280]	@ (8006a24 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 800690a:	4293      	cmp	r3, r2
 800690c:	d101      	bne.n	8006912 <HAL_ADCEx_MultiModeConfigChannel+0x9e>
 800690e:	4b46      	ldr	r3, [pc, #280]	@ (8006a28 <HAL_ADCEx_MultiModeConfigChannel+0x1b4>)
 8006910:	e000      	b.n	8006914 <HAL_ADCEx_MultiModeConfigChannel+0xa0>
 8006912:	4b46      	ldr	r3, [pc, #280]	@ (8006a2c <HAL_ADCEx_MultiModeConfigChannel+0x1b8>)
 8006914:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8006916:	683b      	ldr	r3, [r7, #0]
 8006918:	681b      	ldr	r3, [r3, #0]
 800691a:	2b00      	cmp	r3, #0
 800691c:	d039      	beq.n	8006992 <HAL_ADCEx_MultiModeConfigChannel+0x11e>
 800691e:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8006920:	689b      	ldr	r3, [r3, #8]
 8006922:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8006926:	683b      	ldr	r3, [r7, #0]
 8006928:	685b      	ldr	r3, [r3, #4]
 800692a:	431a      	orrs	r2, r3
 800692c:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800692e:	609a      	str	r2, [r3, #8]
 8006930:	687b      	ldr	r3, [r7, #4]
 8006932:	681b      	ldr	r3, [r3, #0]
 8006934:	4a3a      	ldr	r2, [pc, #232]	@ (8006a20 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8006936:	4293      	cmp	r3, r2
 8006938:	d004      	beq.n	8006944 <HAL_ADCEx_MultiModeConfigChannel+0xd0>
 800693a:	687b      	ldr	r3, [r7, #4]
 800693c:	681b      	ldr	r3, [r3, #0]
 800693e:	4a39      	ldr	r2, [pc, #228]	@ (8006a24 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 8006940:	4293      	cmp	r3, r2
 8006942:	d10e      	bne.n	8006962 <HAL_ADCEx_MultiModeConfigChannel+0xee>
 8006944:	4836      	ldr	r0, [pc, #216]	@ (8006a20 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8006946:	f7ff ff6f 	bl	8006828 <LL_ADC_IsEnabled>
 800694a:	4604      	mov	r4, r0
 800694c:	4835      	ldr	r0, [pc, #212]	@ (8006a24 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 800694e:	f7ff ff6b 	bl	8006828 <LL_ADC_IsEnabled>
 8006952:	4603      	mov	r3, r0
 8006954:	4323      	orrs	r3, r4
 8006956:	2b00      	cmp	r3, #0
 8006958:	bf0c      	ite	eq
 800695a:	2301      	moveq	r3, #1
 800695c:	2300      	movne	r3, #0
 800695e:	b2db      	uxtb	r3, r3
 8006960:	e008      	b.n	8006974 <HAL_ADCEx_MultiModeConfigChannel+0x100>
 8006962:	4833      	ldr	r0, [pc, #204]	@ (8006a30 <HAL_ADCEx_MultiModeConfigChannel+0x1bc>)
 8006964:	f7ff ff60 	bl	8006828 <LL_ADC_IsEnabled>
 8006968:	4603      	mov	r3, r0
 800696a:	2b00      	cmp	r3, #0
 800696c:	bf0c      	ite	eq
 800696e:	2301      	moveq	r3, #1
 8006970:	2300      	movne	r3, #0
 8006972:	b2db      	uxtb	r3, r3
 8006974:	2b00      	cmp	r3, #0
 8006976:	d047      	beq.n	8006a08 <HAL_ADCEx_MultiModeConfigChannel+0x194>
 8006978:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800697a:	689a      	ldr	r2, [r3, #8]
 800697c:	4b2d      	ldr	r3, [pc, #180]	@ (8006a34 <HAL_ADCEx_MultiModeConfigChannel+0x1c0>)
 800697e:	4013      	ands	r3, r2
 8006980:	683a      	ldr	r2, [r7, #0]
 8006982:	6811      	ldr	r1, [r2, #0]
 8006984:	683a      	ldr	r2, [r7, #0]
 8006986:	6892      	ldr	r2, [r2, #8]
 8006988:	430a      	orrs	r2, r1
 800698a:	431a      	orrs	r2, r3
 800698c:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800698e:	609a      	str	r2, [r3, #8]
 8006990:	e03a      	b.n	8006a08 <HAL_ADCEx_MultiModeConfigChannel+0x194>
 8006992:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8006994:	689b      	ldr	r3, [r3, #8]
 8006996:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 800699a:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800699c:	609a      	str	r2, [r3, #8]
 800699e:	687b      	ldr	r3, [r7, #4]
 80069a0:	681b      	ldr	r3, [r3, #0]
 80069a2:	4a1f      	ldr	r2, [pc, #124]	@ (8006a20 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 80069a4:	4293      	cmp	r3, r2
 80069a6:	d004      	beq.n	80069b2 <HAL_ADCEx_MultiModeConfigChannel+0x13e>
 80069a8:	687b      	ldr	r3, [r7, #4]
 80069aa:	681b      	ldr	r3, [r3, #0]
 80069ac:	4a1d      	ldr	r2, [pc, #116]	@ (8006a24 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 80069ae:	4293      	cmp	r3, r2
 80069b0:	d10e      	bne.n	80069d0 <HAL_ADCEx_MultiModeConfigChannel+0x15c>
 80069b2:	481b      	ldr	r0, [pc, #108]	@ (8006a20 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 80069b4:	f7ff ff38 	bl	8006828 <LL_ADC_IsEnabled>
 80069b8:	4604      	mov	r4, r0
 80069ba:	481a      	ldr	r0, [pc, #104]	@ (8006a24 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 80069bc:	f7ff ff34 	bl	8006828 <LL_ADC_IsEnabled>
 80069c0:	4603      	mov	r3, r0
 80069c2:	4323      	orrs	r3, r4
 80069c4:	2b00      	cmp	r3, #0
 80069c6:	bf0c      	ite	eq
 80069c8:	2301      	moveq	r3, #1
 80069ca:	2300      	movne	r3, #0
 80069cc:	b2db      	uxtb	r3, r3
 80069ce:	e008      	b.n	80069e2 <HAL_ADCEx_MultiModeConfigChannel+0x16e>
 80069d0:	4817      	ldr	r0, [pc, #92]	@ (8006a30 <HAL_ADCEx_MultiModeConfigChannel+0x1bc>)
 80069d2:	f7ff ff29 	bl	8006828 <LL_ADC_IsEnabled>
 80069d6:	4603      	mov	r3, r0
 80069d8:	2b00      	cmp	r3, #0
 80069da:	bf0c      	ite	eq
 80069dc:	2301      	moveq	r3, #1
 80069de:	2300      	movne	r3, #0
 80069e0:	b2db      	uxtb	r3, r3
 80069e2:	2b00      	cmp	r3, #0
 80069e4:	d010      	beq.n	8006a08 <HAL_ADCEx_MultiModeConfigChannel+0x194>
 80069e6:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 80069e8:	689a      	ldr	r2, [r3, #8]
 80069ea:	4b12      	ldr	r3, [pc, #72]	@ (8006a34 <HAL_ADCEx_MultiModeConfigChannel+0x1c0>)
 80069ec:	4013      	ands	r3, r2
 80069ee:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 80069f0:	6093      	str	r3, [r2, #8]
 80069f2:	e009      	b.n	8006a08 <HAL_ADCEx_MultiModeConfigChannel+0x194>
 80069f4:	687b      	ldr	r3, [r7, #4]
 80069f6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80069f8:	f043 0220 	orr.w	r2, r3, #32
 80069fc:	687b      	ldr	r3, [r7, #4]
 80069fe:	661a      	str	r2, [r3, #96]	@ 0x60
 8006a00:	2301      	movs	r3, #1
 8006a02:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 8006a06:	e000      	b.n	8006a0a <HAL_ADCEx_MultiModeConfigChannel+0x196>
 8006a08:	bf00      	nop
 8006a0a:	687b      	ldr	r3, [r7, #4]
 8006a0c:	2200      	movs	r2, #0
 8006a0e:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8006a12:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 8006a16:	4618      	mov	r0, r3
 8006a18:	378c      	adds	r7, #140	@ 0x8c
 8006a1a:	46bd      	mov	sp, r7
 8006a1c:	bd90      	pop	{r4, r7, pc}
 8006a1e:	bf00      	nop
 8006a20:	40022000 	.word	0x40022000
 8006a24:	40022100 	.word	0x40022100
 8006a28:	40022300 	.word	0x40022300
 8006a2c:	58026300 	.word	0x58026300
 8006a30:	58026000 	.word	0x58026000
 8006a34:	fffff0e0 	.word	0xfffff0e0

08006a38 <__NVIC_SetPriorityGrouping>:
 8006a38:	b480      	push	{r7}
 8006a3a:	b085      	sub	sp, #20
 8006a3c:	af00      	add	r7, sp, #0
 8006a3e:	6078      	str	r0, [r7, #4]
 8006a40:	687b      	ldr	r3, [r7, #4]
 8006a42:	f003 0307 	and.w	r3, r3, #7
 8006a46:	60fb      	str	r3, [r7, #12]
 8006a48:	4b0b      	ldr	r3, [pc, #44]	@ (8006a78 <__NVIC_SetPriorityGrouping+0x40>)
 8006a4a:	68db      	ldr	r3, [r3, #12]
 8006a4c:	60bb      	str	r3, [r7, #8]
 8006a4e:	68ba      	ldr	r2, [r7, #8]
 8006a50:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8006a54:	4013      	ands	r3, r2
 8006a56:	60bb      	str	r3, [r7, #8]
 8006a58:	68fb      	ldr	r3, [r7, #12]
 8006a5a:	021a      	lsls	r2, r3, #8
 8006a5c:	68bb      	ldr	r3, [r7, #8]
 8006a5e:	431a      	orrs	r2, r3
 8006a60:	4b06      	ldr	r3, [pc, #24]	@ (8006a7c <__NVIC_SetPriorityGrouping+0x44>)
 8006a62:	4313      	orrs	r3, r2
 8006a64:	60bb      	str	r3, [r7, #8]
 8006a66:	4a04      	ldr	r2, [pc, #16]	@ (8006a78 <__NVIC_SetPriorityGrouping+0x40>)
 8006a68:	68bb      	ldr	r3, [r7, #8]
 8006a6a:	60d3      	str	r3, [r2, #12]
 8006a6c:	bf00      	nop
 8006a6e:	3714      	adds	r7, #20
 8006a70:	46bd      	mov	sp, r7
 8006a72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a76:	4770      	bx	lr
 8006a78:	e000ed00 	.word	0xe000ed00
 8006a7c:	05fa0000 	.word	0x05fa0000

08006a80 <__NVIC_GetPriorityGrouping>:
 8006a80:	b480      	push	{r7}
 8006a82:	af00      	add	r7, sp, #0
 8006a84:	4b04      	ldr	r3, [pc, #16]	@ (8006a98 <__NVIC_GetPriorityGrouping+0x18>)
 8006a86:	68db      	ldr	r3, [r3, #12]
 8006a88:	0a1b      	lsrs	r3, r3, #8
 8006a8a:	f003 0307 	and.w	r3, r3, #7
 8006a8e:	4618      	mov	r0, r3
 8006a90:	46bd      	mov	sp, r7
 8006a92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a96:	4770      	bx	lr
 8006a98:	e000ed00 	.word	0xe000ed00

08006a9c <__NVIC_EnableIRQ>:
 8006a9c:	b480      	push	{r7}
 8006a9e:	b083      	sub	sp, #12
 8006aa0:	af00      	add	r7, sp, #0
 8006aa2:	4603      	mov	r3, r0
 8006aa4:	80fb      	strh	r3, [r7, #6]
 8006aa6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8006aaa:	2b00      	cmp	r3, #0
 8006aac:	db0b      	blt.n	8006ac6 <__NVIC_EnableIRQ+0x2a>
 8006aae:	88fb      	ldrh	r3, [r7, #6]
 8006ab0:	f003 021f 	and.w	r2, r3, #31
 8006ab4:	4907      	ldr	r1, [pc, #28]	@ (8006ad4 <__NVIC_EnableIRQ+0x38>)
 8006ab6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8006aba:	095b      	lsrs	r3, r3, #5
 8006abc:	2001      	movs	r0, #1
 8006abe:	fa00 f202 	lsl.w	r2, r0, r2
 8006ac2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8006ac6:	bf00      	nop
 8006ac8:	370c      	adds	r7, #12
 8006aca:	46bd      	mov	sp, r7
 8006acc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ad0:	4770      	bx	lr
 8006ad2:	bf00      	nop
 8006ad4:	e000e100 	.word	0xe000e100

08006ad8 <__NVIC_SetPriority>:
 8006ad8:	b480      	push	{r7}
 8006ada:	b083      	sub	sp, #12
 8006adc:	af00      	add	r7, sp, #0
 8006ade:	4603      	mov	r3, r0
 8006ae0:	6039      	str	r1, [r7, #0]
 8006ae2:	80fb      	strh	r3, [r7, #6]
 8006ae4:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8006ae8:	2b00      	cmp	r3, #0
 8006aea:	db0a      	blt.n	8006b02 <__NVIC_SetPriority+0x2a>
 8006aec:	683b      	ldr	r3, [r7, #0]
 8006aee:	b2da      	uxtb	r2, r3
 8006af0:	490c      	ldr	r1, [pc, #48]	@ (8006b24 <__NVIC_SetPriority+0x4c>)
 8006af2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8006af6:	0112      	lsls	r2, r2, #4
 8006af8:	b2d2      	uxtb	r2, r2
 8006afa:	440b      	add	r3, r1
 8006afc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8006b00:	e00a      	b.n	8006b18 <__NVIC_SetPriority+0x40>
 8006b02:	683b      	ldr	r3, [r7, #0]
 8006b04:	b2da      	uxtb	r2, r3
 8006b06:	4908      	ldr	r1, [pc, #32]	@ (8006b28 <__NVIC_SetPriority+0x50>)
 8006b08:	88fb      	ldrh	r3, [r7, #6]
 8006b0a:	f003 030f 	and.w	r3, r3, #15
 8006b0e:	3b04      	subs	r3, #4
 8006b10:	0112      	lsls	r2, r2, #4
 8006b12:	b2d2      	uxtb	r2, r2
 8006b14:	440b      	add	r3, r1
 8006b16:	761a      	strb	r2, [r3, #24]
 8006b18:	bf00      	nop
 8006b1a:	370c      	adds	r7, #12
 8006b1c:	46bd      	mov	sp, r7
 8006b1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b22:	4770      	bx	lr
 8006b24:	e000e100 	.word	0xe000e100
 8006b28:	e000ed00 	.word	0xe000ed00

08006b2c <NVIC_EncodePriority>:
 8006b2c:	b480      	push	{r7}
 8006b2e:	b089      	sub	sp, #36	@ 0x24
 8006b30:	af00      	add	r7, sp, #0
 8006b32:	60f8      	str	r0, [r7, #12]
 8006b34:	60b9      	str	r1, [r7, #8]
 8006b36:	607a      	str	r2, [r7, #4]
 8006b38:	68fb      	ldr	r3, [r7, #12]
 8006b3a:	f003 0307 	and.w	r3, r3, #7
 8006b3e:	61fb      	str	r3, [r7, #28]
 8006b40:	69fb      	ldr	r3, [r7, #28]
 8006b42:	f1c3 0307 	rsb	r3, r3, #7
 8006b46:	2b04      	cmp	r3, #4
 8006b48:	bf28      	it	cs
 8006b4a:	2304      	movcs	r3, #4
 8006b4c:	61bb      	str	r3, [r7, #24]
 8006b4e:	69fb      	ldr	r3, [r7, #28]
 8006b50:	3304      	adds	r3, #4
 8006b52:	2b06      	cmp	r3, #6
 8006b54:	d902      	bls.n	8006b5c <NVIC_EncodePriority+0x30>
 8006b56:	69fb      	ldr	r3, [r7, #28]
 8006b58:	3b03      	subs	r3, #3
 8006b5a:	e000      	b.n	8006b5e <NVIC_EncodePriority+0x32>
 8006b5c:	2300      	movs	r3, #0
 8006b5e:	617b      	str	r3, [r7, #20]
 8006b60:	f04f 32ff 	mov.w	r2, #4294967295
 8006b64:	69bb      	ldr	r3, [r7, #24]
 8006b66:	fa02 f303 	lsl.w	r3, r2, r3
 8006b6a:	43da      	mvns	r2, r3
 8006b6c:	68bb      	ldr	r3, [r7, #8]
 8006b6e:	401a      	ands	r2, r3
 8006b70:	697b      	ldr	r3, [r7, #20]
 8006b72:	409a      	lsls	r2, r3
 8006b74:	f04f 31ff 	mov.w	r1, #4294967295
 8006b78:	697b      	ldr	r3, [r7, #20]
 8006b7a:	fa01 f303 	lsl.w	r3, r1, r3
 8006b7e:	43d9      	mvns	r1, r3
 8006b80:	687b      	ldr	r3, [r7, #4]
 8006b82:	400b      	ands	r3, r1
 8006b84:	4313      	orrs	r3, r2
 8006b86:	4618      	mov	r0, r3
 8006b88:	3724      	adds	r7, #36	@ 0x24
 8006b8a:	46bd      	mov	sp, r7
 8006b8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b90:	4770      	bx	lr
	...

08006b94 <SysTick_Config>:
 8006b94:	b580      	push	{r7, lr}
 8006b96:	b082      	sub	sp, #8
 8006b98:	af00      	add	r7, sp, #0
 8006b9a:	6078      	str	r0, [r7, #4]
 8006b9c:	687b      	ldr	r3, [r7, #4]
 8006b9e:	3b01      	subs	r3, #1
 8006ba0:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8006ba4:	d301      	bcc.n	8006baa <SysTick_Config+0x16>
 8006ba6:	2301      	movs	r3, #1
 8006ba8:	e00f      	b.n	8006bca <SysTick_Config+0x36>
 8006baa:	4a0a      	ldr	r2, [pc, #40]	@ (8006bd4 <SysTick_Config+0x40>)
 8006bac:	687b      	ldr	r3, [r7, #4]
 8006bae:	3b01      	subs	r3, #1
 8006bb0:	6053      	str	r3, [r2, #4]
 8006bb2:	210f      	movs	r1, #15
 8006bb4:	f04f 30ff 	mov.w	r0, #4294967295
 8006bb8:	f7ff ff8e 	bl	8006ad8 <__NVIC_SetPriority>
 8006bbc:	4b05      	ldr	r3, [pc, #20]	@ (8006bd4 <SysTick_Config+0x40>)
 8006bbe:	2200      	movs	r2, #0
 8006bc0:	609a      	str	r2, [r3, #8]
 8006bc2:	4b04      	ldr	r3, [pc, #16]	@ (8006bd4 <SysTick_Config+0x40>)
 8006bc4:	2207      	movs	r2, #7
 8006bc6:	601a      	str	r2, [r3, #0]
 8006bc8:	2300      	movs	r3, #0
 8006bca:	4618      	mov	r0, r3
 8006bcc:	3708      	adds	r7, #8
 8006bce:	46bd      	mov	sp, r7
 8006bd0:	bd80      	pop	{r7, pc}
 8006bd2:	bf00      	nop
 8006bd4:	e000e010 	.word	0xe000e010

08006bd8 <HAL_NVIC_SetPriorityGrouping>:
 8006bd8:	b580      	push	{r7, lr}
 8006bda:	b082      	sub	sp, #8
 8006bdc:	af00      	add	r7, sp, #0
 8006bde:	6078      	str	r0, [r7, #4]
 8006be0:	6878      	ldr	r0, [r7, #4]
 8006be2:	f7ff ff29 	bl	8006a38 <__NVIC_SetPriorityGrouping>
 8006be6:	bf00      	nop
 8006be8:	3708      	adds	r7, #8
 8006bea:	46bd      	mov	sp, r7
 8006bec:	bd80      	pop	{r7, pc}

08006bee <HAL_NVIC_SetPriority>:
 8006bee:	b580      	push	{r7, lr}
 8006bf0:	b086      	sub	sp, #24
 8006bf2:	af00      	add	r7, sp, #0
 8006bf4:	4603      	mov	r3, r0
 8006bf6:	60b9      	str	r1, [r7, #8]
 8006bf8:	607a      	str	r2, [r7, #4]
 8006bfa:	81fb      	strh	r3, [r7, #14]
 8006bfc:	f7ff ff40 	bl	8006a80 <__NVIC_GetPriorityGrouping>
 8006c00:	6178      	str	r0, [r7, #20]
 8006c02:	687a      	ldr	r2, [r7, #4]
 8006c04:	68b9      	ldr	r1, [r7, #8]
 8006c06:	6978      	ldr	r0, [r7, #20]
 8006c08:	f7ff ff90 	bl	8006b2c <NVIC_EncodePriority>
 8006c0c:	4602      	mov	r2, r0
 8006c0e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8006c12:	4611      	mov	r1, r2
 8006c14:	4618      	mov	r0, r3
 8006c16:	f7ff ff5f 	bl	8006ad8 <__NVIC_SetPriority>
 8006c1a:	bf00      	nop
 8006c1c:	3718      	adds	r7, #24
 8006c1e:	46bd      	mov	sp, r7
 8006c20:	bd80      	pop	{r7, pc}

08006c22 <HAL_NVIC_EnableIRQ>:
 8006c22:	b580      	push	{r7, lr}
 8006c24:	b082      	sub	sp, #8
 8006c26:	af00      	add	r7, sp, #0
 8006c28:	4603      	mov	r3, r0
 8006c2a:	80fb      	strh	r3, [r7, #6]
 8006c2c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8006c30:	4618      	mov	r0, r3
 8006c32:	f7ff ff33 	bl	8006a9c <__NVIC_EnableIRQ>
 8006c36:	bf00      	nop
 8006c38:	3708      	adds	r7, #8
 8006c3a:	46bd      	mov	sp, r7
 8006c3c:	bd80      	pop	{r7, pc}

08006c3e <HAL_SYSTICK_Config>:
 8006c3e:	b580      	push	{r7, lr}
 8006c40:	b082      	sub	sp, #8
 8006c42:	af00      	add	r7, sp, #0
 8006c44:	6078      	str	r0, [r7, #4]
 8006c46:	6878      	ldr	r0, [r7, #4]
 8006c48:	f7ff ffa4 	bl	8006b94 <SysTick_Config>
 8006c4c:	4603      	mov	r3, r0
 8006c4e:	4618      	mov	r0, r3
 8006c50:	3708      	adds	r7, #8
 8006c52:	46bd      	mov	sp, r7
 8006c54:	bd80      	pop	{r7, pc}
	...

08006c58 <HAL_MPU_Disable>:
 8006c58:	b480      	push	{r7}
 8006c5a:	af00      	add	r7, sp, #0
 8006c5c:	f3bf 8f5f 	dmb	sy
 8006c60:	bf00      	nop
 8006c62:	4b07      	ldr	r3, [pc, #28]	@ (8006c80 <HAL_MPU_Disable+0x28>)
 8006c64:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006c66:	4a06      	ldr	r2, [pc, #24]	@ (8006c80 <HAL_MPU_Disable+0x28>)
 8006c68:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006c6c:	6253      	str	r3, [r2, #36]	@ 0x24
 8006c6e:	4b05      	ldr	r3, [pc, #20]	@ (8006c84 <HAL_MPU_Disable+0x2c>)
 8006c70:	2200      	movs	r2, #0
 8006c72:	605a      	str	r2, [r3, #4]
 8006c74:	bf00      	nop
 8006c76:	46bd      	mov	sp, r7
 8006c78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c7c:	4770      	bx	lr
 8006c7e:	bf00      	nop
 8006c80:	e000ed00 	.word	0xe000ed00
 8006c84:	e000ed90 	.word	0xe000ed90

08006c88 <HAL_MPU_Enable>:
 8006c88:	b480      	push	{r7}
 8006c8a:	b083      	sub	sp, #12
 8006c8c:	af00      	add	r7, sp, #0
 8006c8e:	6078      	str	r0, [r7, #4]
 8006c90:	4a0b      	ldr	r2, [pc, #44]	@ (8006cc0 <HAL_MPU_Enable+0x38>)
 8006c92:	687b      	ldr	r3, [r7, #4]
 8006c94:	f043 0301 	orr.w	r3, r3, #1
 8006c98:	6053      	str	r3, [r2, #4]
 8006c9a:	4b0a      	ldr	r3, [pc, #40]	@ (8006cc4 <HAL_MPU_Enable+0x3c>)
 8006c9c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006c9e:	4a09      	ldr	r2, [pc, #36]	@ (8006cc4 <HAL_MPU_Enable+0x3c>)
 8006ca0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006ca4:	6253      	str	r3, [r2, #36]	@ 0x24
 8006ca6:	f3bf 8f4f 	dsb	sy
 8006caa:	bf00      	nop
 8006cac:	f3bf 8f6f 	isb	sy
 8006cb0:	bf00      	nop
 8006cb2:	bf00      	nop
 8006cb4:	370c      	adds	r7, #12
 8006cb6:	46bd      	mov	sp, r7
 8006cb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cbc:	4770      	bx	lr
 8006cbe:	bf00      	nop
 8006cc0:	e000ed90 	.word	0xe000ed90
 8006cc4:	e000ed00 	.word	0xe000ed00

08006cc8 <HAL_MPU_ConfigRegion>:
 8006cc8:	b480      	push	{r7}
 8006cca:	b083      	sub	sp, #12
 8006ccc:	af00      	add	r7, sp, #0
 8006cce:	6078      	str	r0, [r7, #4]
 8006cd0:	687b      	ldr	r3, [r7, #4]
 8006cd2:	785a      	ldrb	r2, [r3, #1]
 8006cd4:	4b1b      	ldr	r3, [pc, #108]	@ (8006d44 <HAL_MPU_ConfigRegion+0x7c>)
 8006cd6:	609a      	str	r2, [r3, #8]
 8006cd8:	4b1a      	ldr	r3, [pc, #104]	@ (8006d44 <HAL_MPU_ConfigRegion+0x7c>)
 8006cda:	691b      	ldr	r3, [r3, #16]
 8006cdc:	4a19      	ldr	r2, [pc, #100]	@ (8006d44 <HAL_MPU_ConfigRegion+0x7c>)
 8006cde:	f023 0301 	bic.w	r3, r3, #1
 8006ce2:	6113      	str	r3, [r2, #16]
 8006ce4:	4a17      	ldr	r2, [pc, #92]	@ (8006d44 <HAL_MPU_ConfigRegion+0x7c>)
 8006ce6:	687b      	ldr	r3, [r7, #4]
 8006ce8:	685b      	ldr	r3, [r3, #4]
 8006cea:	60d3      	str	r3, [r2, #12]
 8006cec:	687b      	ldr	r3, [r7, #4]
 8006cee:	7b1b      	ldrb	r3, [r3, #12]
 8006cf0:	071a      	lsls	r2, r3, #28
 8006cf2:	687b      	ldr	r3, [r7, #4]
 8006cf4:	7adb      	ldrb	r3, [r3, #11]
 8006cf6:	061b      	lsls	r3, r3, #24
 8006cf8:	431a      	orrs	r2, r3
 8006cfa:	687b      	ldr	r3, [r7, #4]
 8006cfc:	7a9b      	ldrb	r3, [r3, #10]
 8006cfe:	04db      	lsls	r3, r3, #19
 8006d00:	431a      	orrs	r2, r3
 8006d02:	687b      	ldr	r3, [r7, #4]
 8006d04:	7b5b      	ldrb	r3, [r3, #13]
 8006d06:	049b      	lsls	r3, r3, #18
 8006d08:	431a      	orrs	r2, r3
 8006d0a:	687b      	ldr	r3, [r7, #4]
 8006d0c:	7b9b      	ldrb	r3, [r3, #14]
 8006d0e:	045b      	lsls	r3, r3, #17
 8006d10:	431a      	orrs	r2, r3
 8006d12:	687b      	ldr	r3, [r7, #4]
 8006d14:	7bdb      	ldrb	r3, [r3, #15]
 8006d16:	041b      	lsls	r3, r3, #16
 8006d18:	431a      	orrs	r2, r3
 8006d1a:	687b      	ldr	r3, [r7, #4]
 8006d1c:	7a5b      	ldrb	r3, [r3, #9]
 8006d1e:	021b      	lsls	r3, r3, #8
 8006d20:	431a      	orrs	r2, r3
 8006d22:	687b      	ldr	r3, [r7, #4]
 8006d24:	7a1b      	ldrb	r3, [r3, #8]
 8006d26:	005b      	lsls	r3, r3, #1
 8006d28:	4313      	orrs	r3, r2
 8006d2a:	687a      	ldr	r2, [r7, #4]
 8006d2c:	7812      	ldrb	r2, [r2, #0]
 8006d2e:	4611      	mov	r1, r2
 8006d30:	4a04      	ldr	r2, [pc, #16]	@ (8006d44 <HAL_MPU_ConfigRegion+0x7c>)
 8006d32:	430b      	orrs	r3, r1
 8006d34:	6113      	str	r3, [r2, #16]
 8006d36:	bf00      	nop
 8006d38:	370c      	adds	r7, #12
 8006d3a:	46bd      	mov	sp, r7
 8006d3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d40:	4770      	bx	lr
 8006d42:	bf00      	nop
 8006d44:	e000ed90 	.word	0xe000ed90

08006d48 <HAL_DAC_Init>:
 8006d48:	b580      	push	{r7, lr}
 8006d4a:	b082      	sub	sp, #8
 8006d4c:	af00      	add	r7, sp, #0
 8006d4e:	6078      	str	r0, [r7, #4]
 8006d50:	687b      	ldr	r3, [r7, #4]
 8006d52:	2b00      	cmp	r3, #0
 8006d54:	d101      	bne.n	8006d5a <HAL_DAC_Init+0x12>
 8006d56:	2301      	movs	r3, #1
 8006d58:	e014      	b.n	8006d84 <HAL_DAC_Init+0x3c>
 8006d5a:	687b      	ldr	r3, [r7, #4]
 8006d5c:	791b      	ldrb	r3, [r3, #4]
 8006d5e:	b2db      	uxtb	r3, r3
 8006d60:	2b00      	cmp	r3, #0
 8006d62:	d105      	bne.n	8006d70 <HAL_DAC_Init+0x28>
 8006d64:	687b      	ldr	r3, [r7, #4]
 8006d66:	2200      	movs	r2, #0
 8006d68:	715a      	strb	r2, [r3, #5]
 8006d6a:	6878      	ldr	r0, [r7, #4]
 8006d6c:	f7fa ff10 	bl	8001b90 <HAL_DAC_MspInit>
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	2202      	movs	r2, #2
 8006d74:	711a      	strb	r2, [r3, #4]
 8006d76:	687b      	ldr	r3, [r7, #4]
 8006d78:	2200      	movs	r2, #0
 8006d7a:	611a      	str	r2, [r3, #16]
 8006d7c:	687b      	ldr	r3, [r7, #4]
 8006d7e:	2201      	movs	r2, #1
 8006d80:	711a      	strb	r2, [r3, #4]
 8006d82:	2300      	movs	r3, #0
 8006d84:	4618      	mov	r0, r3
 8006d86:	3708      	adds	r7, #8
 8006d88:	46bd      	mov	sp, r7
 8006d8a:	bd80      	pop	{r7, pc}

08006d8c <HAL_DAC_Start_DMA>:
 8006d8c:	b580      	push	{r7, lr}
 8006d8e:	b086      	sub	sp, #24
 8006d90:	af00      	add	r7, sp, #0
 8006d92:	60f8      	str	r0, [r7, #12]
 8006d94:	60b9      	str	r1, [r7, #8]
 8006d96:	607a      	str	r2, [r7, #4]
 8006d98:	603b      	str	r3, [r7, #0]
 8006d9a:	68fb      	ldr	r3, [r7, #12]
 8006d9c:	2b00      	cmp	r3, #0
 8006d9e:	d101      	bne.n	8006da4 <HAL_DAC_Start_DMA+0x18>
 8006da0:	2301      	movs	r3, #1
 8006da2:	e0a2      	b.n	8006eea <HAL_DAC_Start_DMA+0x15e>
 8006da4:	68fb      	ldr	r3, [r7, #12]
 8006da6:	795b      	ldrb	r3, [r3, #5]
 8006da8:	2b01      	cmp	r3, #1
 8006daa:	d101      	bne.n	8006db0 <HAL_DAC_Start_DMA+0x24>
 8006dac:	2302      	movs	r3, #2
 8006dae:	e09c      	b.n	8006eea <HAL_DAC_Start_DMA+0x15e>
 8006db0:	68fb      	ldr	r3, [r7, #12]
 8006db2:	2201      	movs	r2, #1
 8006db4:	715a      	strb	r2, [r3, #5]
 8006db6:	68fb      	ldr	r3, [r7, #12]
 8006db8:	2202      	movs	r2, #2
 8006dba:	711a      	strb	r2, [r3, #4]
 8006dbc:	68bb      	ldr	r3, [r7, #8]
 8006dbe:	2b00      	cmp	r3, #0
 8006dc0:	d129      	bne.n	8006e16 <HAL_DAC_Start_DMA+0x8a>
 8006dc2:	68fb      	ldr	r3, [r7, #12]
 8006dc4:	689b      	ldr	r3, [r3, #8]
 8006dc6:	4a4b      	ldr	r2, [pc, #300]	@ (8006ef4 <HAL_DAC_Start_DMA+0x168>)
 8006dc8:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006dca:	68fb      	ldr	r3, [r7, #12]
 8006dcc:	689b      	ldr	r3, [r3, #8]
 8006dce:	4a4a      	ldr	r2, [pc, #296]	@ (8006ef8 <HAL_DAC_Start_DMA+0x16c>)
 8006dd0:	641a      	str	r2, [r3, #64]	@ 0x40
 8006dd2:	68fb      	ldr	r3, [r7, #12]
 8006dd4:	689b      	ldr	r3, [r3, #8]
 8006dd6:	4a49      	ldr	r2, [pc, #292]	@ (8006efc <HAL_DAC_Start_DMA+0x170>)
 8006dd8:	64da      	str	r2, [r3, #76]	@ 0x4c
 8006dda:	68fb      	ldr	r3, [r7, #12]
 8006ddc:	681b      	ldr	r3, [r3, #0]
 8006dde:	681a      	ldr	r2, [r3, #0]
 8006de0:	68fb      	ldr	r3, [r7, #12]
 8006de2:	681b      	ldr	r3, [r3, #0]
 8006de4:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8006de8:	601a      	str	r2, [r3, #0]
 8006dea:	6a3b      	ldr	r3, [r7, #32]
 8006dec:	2b00      	cmp	r3, #0
 8006dee:	d003      	beq.n	8006df8 <HAL_DAC_Start_DMA+0x6c>
 8006df0:	6a3b      	ldr	r3, [r7, #32]
 8006df2:	2b04      	cmp	r3, #4
 8006df4:	d005      	beq.n	8006e02 <HAL_DAC_Start_DMA+0x76>
 8006df6:	e009      	b.n	8006e0c <HAL_DAC_Start_DMA+0x80>
 8006df8:	68fb      	ldr	r3, [r7, #12]
 8006dfa:	681b      	ldr	r3, [r3, #0]
 8006dfc:	3308      	adds	r3, #8
 8006dfe:	613b      	str	r3, [r7, #16]
 8006e00:	e033      	b.n	8006e6a <HAL_DAC_Start_DMA+0xde>
 8006e02:	68fb      	ldr	r3, [r7, #12]
 8006e04:	681b      	ldr	r3, [r3, #0]
 8006e06:	330c      	adds	r3, #12
 8006e08:	613b      	str	r3, [r7, #16]
 8006e0a:	e02e      	b.n	8006e6a <HAL_DAC_Start_DMA+0xde>
 8006e0c:	68fb      	ldr	r3, [r7, #12]
 8006e0e:	681b      	ldr	r3, [r3, #0]
 8006e10:	3310      	adds	r3, #16
 8006e12:	613b      	str	r3, [r7, #16]
 8006e14:	e029      	b.n	8006e6a <HAL_DAC_Start_DMA+0xde>
 8006e16:	68fb      	ldr	r3, [r7, #12]
 8006e18:	68db      	ldr	r3, [r3, #12]
 8006e1a:	4a39      	ldr	r2, [pc, #228]	@ (8006f00 <HAL_DAC_Start_DMA+0x174>)
 8006e1c:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006e1e:	68fb      	ldr	r3, [r7, #12]
 8006e20:	68db      	ldr	r3, [r3, #12]
 8006e22:	4a38      	ldr	r2, [pc, #224]	@ (8006f04 <HAL_DAC_Start_DMA+0x178>)
 8006e24:	641a      	str	r2, [r3, #64]	@ 0x40
 8006e26:	68fb      	ldr	r3, [r7, #12]
 8006e28:	68db      	ldr	r3, [r3, #12]
 8006e2a:	4a37      	ldr	r2, [pc, #220]	@ (8006f08 <HAL_DAC_Start_DMA+0x17c>)
 8006e2c:	64da      	str	r2, [r3, #76]	@ 0x4c
 8006e2e:	68fb      	ldr	r3, [r7, #12]
 8006e30:	681b      	ldr	r3, [r3, #0]
 8006e32:	681a      	ldr	r2, [r3, #0]
 8006e34:	68fb      	ldr	r3, [r7, #12]
 8006e36:	681b      	ldr	r3, [r3, #0]
 8006e38:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8006e3c:	601a      	str	r2, [r3, #0]
 8006e3e:	6a3b      	ldr	r3, [r7, #32]
 8006e40:	2b00      	cmp	r3, #0
 8006e42:	d003      	beq.n	8006e4c <HAL_DAC_Start_DMA+0xc0>
 8006e44:	6a3b      	ldr	r3, [r7, #32]
 8006e46:	2b04      	cmp	r3, #4
 8006e48:	d005      	beq.n	8006e56 <HAL_DAC_Start_DMA+0xca>
 8006e4a:	e009      	b.n	8006e60 <HAL_DAC_Start_DMA+0xd4>
 8006e4c:	68fb      	ldr	r3, [r7, #12]
 8006e4e:	681b      	ldr	r3, [r3, #0]
 8006e50:	3314      	adds	r3, #20
 8006e52:	613b      	str	r3, [r7, #16]
 8006e54:	e009      	b.n	8006e6a <HAL_DAC_Start_DMA+0xde>
 8006e56:	68fb      	ldr	r3, [r7, #12]
 8006e58:	681b      	ldr	r3, [r3, #0]
 8006e5a:	3318      	adds	r3, #24
 8006e5c:	613b      	str	r3, [r7, #16]
 8006e5e:	e004      	b.n	8006e6a <HAL_DAC_Start_DMA+0xde>
 8006e60:	68fb      	ldr	r3, [r7, #12]
 8006e62:	681b      	ldr	r3, [r3, #0]
 8006e64:	331c      	adds	r3, #28
 8006e66:	613b      	str	r3, [r7, #16]
 8006e68:	bf00      	nop
 8006e6a:	68bb      	ldr	r3, [r7, #8]
 8006e6c:	2b00      	cmp	r3, #0
 8006e6e:	d111      	bne.n	8006e94 <HAL_DAC_Start_DMA+0x108>
 8006e70:	68fb      	ldr	r3, [r7, #12]
 8006e72:	681b      	ldr	r3, [r3, #0]
 8006e74:	681a      	ldr	r2, [r3, #0]
 8006e76:	68fb      	ldr	r3, [r7, #12]
 8006e78:	681b      	ldr	r3, [r3, #0]
 8006e7a:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006e7e:	601a      	str	r2, [r3, #0]
 8006e80:	68fb      	ldr	r3, [r7, #12]
 8006e82:	6898      	ldr	r0, [r3, #8]
 8006e84:	6879      	ldr	r1, [r7, #4]
 8006e86:	683b      	ldr	r3, [r7, #0]
 8006e88:	693a      	ldr	r2, [r7, #16]
 8006e8a:	f000 fd6d 	bl	8007968 <HAL_DMA_Start_IT>
 8006e8e:	4603      	mov	r3, r0
 8006e90:	75fb      	strb	r3, [r7, #23]
 8006e92:	e010      	b.n	8006eb6 <HAL_DAC_Start_DMA+0x12a>
 8006e94:	68fb      	ldr	r3, [r7, #12]
 8006e96:	681b      	ldr	r3, [r3, #0]
 8006e98:	681a      	ldr	r2, [r3, #0]
 8006e9a:	68fb      	ldr	r3, [r7, #12]
 8006e9c:	681b      	ldr	r3, [r3, #0]
 8006e9e:	f042 5200 	orr.w	r2, r2, #536870912	@ 0x20000000
 8006ea2:	601a      	str	r2, [r3, #0]
 8006ea4:	68fb      	ldr	r3, [r7, #12]
 8006ea6:	68d8      	ldr	r0, [r3, #12]
 8006ea8:	6879      	ldr	r1, [r7, #4]
 8006eaa:	683b      	ldr	r3, [r7, #0]
 8006eac:	693a      	ldr	r2, [r7, #16]
 8006eae:	f000 fd5b 	bl	8007968 <HAL_DMA_Start_IT>
 8006eb2:	4603      	mov	r3, r0
 8006eb4:	75fb      	strb	r3, [r7, #23]
 8006eb6:	68fb      	ldr	r3, [r7, #12]
 8006eb8:	2200      	movs	r2, #0
 8006eba:	715a      	strb	r2, [r3, #5]
 8006ebc:	7dfb      	ldrb	r3, [r7, #23]
 8006ebe:	2b00      	cmp	r3, #0
 8006ec0:	d10c      	bne.n	8006edc <HAL_DAC_Start_DMA+0x150>
 8006ec2:	68fb      	ldr	r3, [r7, #12]
 8006ec4:	681b      	ldr	r3, [r3, #0]
 8006ec6:	6819      	ldr	r1, [r3, #0]
 8006ec8:	68bb      	ldr	r3, [r7, #8]
 8006eca:	f003 0310 	and.w	r3, r3, #16
 8006ece:	2201      	movs	r2, #1
 8006ed0:	409a      	lsls	r2, r3
 8006ed2:	68fb      	ldr	r3, [r7, #12]
 8006ed4:	681b      	ldr	r3, [r3, #0]
 8006ed6:	430a      	orrs	r2, r1
 8006ed8:	601a      	str	r2, [r3, #0]
 8006eda:	e005      	b.n	8006ee8 <HAL_DAC_Start_DMA+0x15c>
 8006edc:	68fb      	ldr	r3, [r7, #12]
 8006ede:	691b      	ldr	r3, [r3, #16]
 8006ee0:	f043 0204 	orr.w	r2, r3, #4
 8006ee4:	68fb      	ldr	r3, [r7, #12]
 8006ee6:	611a      	str	r2, [r3, #16]
 8006ee8:	7dfb      	ldrb	r3, [r7, #23]
 8006eea:	4618      	mov	r0, r3
 8006eec:	3718      	adds	r7, #24
 8006eee:	46bd      	mov	sp, r7
 8006ef0:	bd80      	pop	{r7, pc}
 8006ef2:	bf00      	nop
 8006ef4:	080071a5 	.word	0x080071a5
 8006ef8:	080071c7 	.word	0x080071c7
 8006efc:	080071e3 	.word	0x080071e3
 8006f00:	0800724d 	.word	0x0800724d
 8006f04:	0800726f 	.word	0x0800726f
 8006f08:	0800728b 	.word	0x0800728b

08006f0c <HAL_DAC_ErrorCallbackCh1>:
 8006f0c:	b480      	push	{r7}
 8006f0e:	b083      	sub	sp, #12
 8006f10:	af00      	add	r7, sp, #0
 8006f12:	6078      	str	r0, [r7, #4]
 8006f14:	bf00      	nop
 8006f16:	370c      	adds	r7, #12
 8006f18:	46bd      	mov	sp, r7
 8006f1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f1e:	4770      	bx	lr

08006f20 <HAL_DAC_ConfigChannel>:
 8006f20:	b580      	push	{r7, lr}
 8006f22:	b08a      	sub	sp, #40	@ 0x28
 8006f24:	af00      	add	r7, sp, #0
 8006f26:	60f8      	str	r0, [r7, #12]
 8006f28:	60b9      	str	r1, [r7, #8]
 8006f2a:	607a      	str	r2, [r7, #4]
 8006f2c:	2300      	movs	r3, #0
 8006f2e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8006f32:	68fb      	ldr	r3, [r7, #12]
 8006f34:	2b00      	cmp	r3, #0
 8006f36:	d002      	beq.n	8006f3e <HAL_DAC_ConfigChannel+0x1e>
 8006f38:	68bb      	ldr	r3, [r7, #8]
 8006f3a:	2b00      	cmp	r3, #0
 8006f3c:	d101      	bne.n	8006f42 <HAL_DAC_ConfigChannel+0x22>
 8006f3e:	2301      	movs	r3, #1
 8006f40:	e12a      	b.n	8007198 <HAL_DAC_ConfigChannel+0x278>
 8006f42:	68fb      	ldr	r3, [r7, #12]
 8006f44:	795b      	ldrb	r3, [r3, #5]
 8006f46:	2b01      	cmp	r3, #1
 8006f48:	d101      	bne.n	8006f4e <HAL_DAC_ConfigChannel+0x2e>
 8006f4a:	2302      	movs	r3, #2
 8006f4c:	e124      	b.n	8007198 <HAL_DAC_ConfigChannel+0x278>
 8006f4e:	68fb      	ldr	r3, [r7, #12]
 8006f50:	2201      	movs	r2, #1
 8006f52:	715a      	strb	r2, [r3, #5]
 8006f54:	68fb      	ldr	r3, [r7, #12]
 8006f56:	2202      	movs	r2, #2
 8006f58:	711a      	strb	r2, [r3, #4]
 8006f5a:	68bb      	ldr	r3, [r7, #8]
 8006f5c:	681b      	ldr	r3, [r3, #0]
 8006f5e:	2b04      	cmp	r3, #4
 8006f60:	d17a      	bne.n	8007058 <HAL_DAC_ConfigChannel+0x138>
 8006f62:	f7fe f9c5 	bl	80052f0 <HAL_GetTick>
 8006f66:	61f8      	str	r0, [r7, #28]
 8006f68:	687b      	ldr	r3, [r7, #4]
 8006f6a:	2b00      	cmp	r3, #0
 8006f6c:	d13d      	bne.n	8006fea <HAL_DAC_ConfigChannel+0xca>
 8006f6e:	e018      	b.n	8006fa2 <HAL_DAC_ConfigChannel+0x82>
 8006f70:	f7fe f9be 	bl	80052f0 <HAL_GetTick>
 8006f74:	4602      	mov	r2, r0
 8006f76:	69fb      	ldr	r3, [r7, #28]
 8006f78:	1ad3      	subs	r3, r2, r3
 8006f7a:	2b01      	cmp	r3, #1
 8006f7c:	d911      	bls.n	8006fa2 <HAL_DAC_ConfigChannel+0x82>
 8006f7e:	68fb      	ldr	r3, [r7, #12]
 8006f80:	681b      	ldr	r3, [r3, #0]
 8006f82:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006f84:	4b86      	ldr	r3, [pc, #536]	@ (80071a0 <HAL_DAC_ConfigChannel+0x280>)
 8006f86:	4013      	ands	r3, r2
 8006f88:	2b00      	cmp	r3, #0
 8006f8a:	d00a      	beq.n	8006fa2 <HAL_DAC_ConfigChannel+0x82>
 8006f8c:	68fb      	ldr	r3, [r7, #12]
 8006f8e:	691b      	ldr	r3, [r3, #16]
 8006f90:	f043 0208 	orr.w	r2, r3, #8
 8006f94:	68fb      	ldr	r3, [r7, #12]
 8006f96:	611a      	str	r2, [r3, #16]
 8006f98:	68fb      	ldr	r3, [r7, #12]
 8006f9a:	2203      	movs	r2, #3
 8006f9c:	711a      	strb	r2, [r3, #4]
 8006f9e:	2303      	movs	r3, #3
 8006fa0:	e0fa      	b.n	8007198 <HAL_DAC_ConfigChannel+0x278>
 8006fa2:	68fb      	ldr	r3, [r7, #12]
 8006fa4:	681b      	ldr	r3, [r3, #0]
 8006fa6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006fa8:	4b7d      	ldr	r3, [pc, #500]	@ (80071a0 <HAL_DAC_ConfigChannel+0x280>)
 8006faa:	4013      	ands	r3, r2
 8006fac:	2b00      	cmp	r3, #0
 8006fae:	d1df      	bne.n	8006f70 <HAL_DAC_ConfigChannel+0x50>
 8006fb0:	68fb      	ldr	r3, [r7, #12]
 8006fb2:	681b      	ldr	r3, [r3, #0]
 8006fb4:	68ba      	ldr	r2, [r7, #8]
 8006fb6:	6992      	ldr	r2, [r2, #24]
 8006fb8:	641a      	str	r2, [r3, #64]	@ 0x40
 8006fba:	e020      	b.n	8006ffe <HAL_DAC_ConfigChannel+0xde>
 8006fbc:	f7fe f998 	bl	80052f0 <HAL_GetTick>
 8006fc0:	4602      	mov	r2, r0
 8006fc2:	69fb      	ldr	r3, [r7, #28]
 8006fc4:	1ad3      	subs	r3, r2, r3
 8006fc6:	2b01      	cmp	r3, #1
 8006fc8:	d90f      	bls.n	8006fea <HAL_DAC_ConfigChannel+0xca>
 8006fca:	68fb      	ldr	r3, [r7, #12]
 8006fcc:	681b      	ldr	r3, [r3, #0]
 8006fce:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006fd0:	2b00      	cmp	r3, #0
 8006fd2:	da0a      	bge.n	8006fea <HAL_DAC_ConfigChannel+0xca>
 8006fd4:	68fb      	ldr	r3, [r7, #12]
 8006fd6:	691b      	ldr	r3, [r3, #16]
 8006fd8:	f043 0208 	orr.w	r2, r3, #8
 8006fdc:	68fb      	ldr	r3, [r7, #12]
 8006fde:	611a      	str	r2, [r3, #16]
 8006fe0:	68fb      	ldr	r3, [r7, #12]
 8006fe2:	2203      	movs	r2, #3
 8006fe4:	711a      	strb	r2, [r3, #4]
 8006fe6:	2303      	movs	r3, #3
 8006fe8:	e0d6      	b.n	8007198 <HAL_DAC_ConfigChannel+0x278>
 8006fea:	68fb      	ldr	r3, [r7, #12]
 8006fec:	681b      	ldr	r3, [r3, #0]
 8006fee:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006ff0:	2b00      	cmp	r3, #0
 8006ff2:	dbe3      	blt.n	8006fbc <HAL_DAC_ConfigChannel+0x9c>
 8006ff4:	68fb      	ldr	r3, [r7, #12]
 8006ff6:	681b      	ldr	r3, [r3, #0]
 8006ff8:	68ba      	ldr	r2, [r7, #8]
 8006ffa:	6992      	ldr	r2, [r2, #24]
 8006ffc:	645a      	str	r2, [r3, #68]	@ 0x44
 8006ffe:	68fb      	ldr	r3, [r7, #12]
 8007000:	681b      	ldr	r3, [r3, #0]
 8007002:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8007004:	687b      	ldr	r3, [r7, #4]
 8007006:	f003 0310 	and.w	r3, r3, #16
 800700a:	f240 31ff 	movw	r1, #1023	@ 0x3ff
 800700e:	fa01 f303 	lsl.w	r3, r1, r3
 8007012:	43db      	mvns	r3, r3
 8007014:	ea02 0103 	and.w	r1, r2, r3
 8007018:	68bb      	ldr	r3, [r7, #8]
 800701a:	69da      	ldr	r2, [r3, #28]
 800701c:	687b      	ldr	r3, [r7, #4]
 800701e:	f003 0310 	and.w	r3, r3, #16
 8007022:	409a      	lsls	r2, r3
 8007024:	68fb      	ldr	r3, [r7, #12]
 8007026:	681b      	ldr	r3, [r3, #0]
 8007028:	430a      	orrs	r2, r1
 800702a:	649a      	str	r2, [r3, #72]	@ 0x48
 800702c:	68fb      	ldr	r3, [r7, #12]
 800702e:	681b      	ldr	r3, [r3, #0]
 8007030:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8007032:	687b      	ldr	r3, [r7, #4]
 8007034:	f003 0310 	and.w	r3, r3, #16
 8007038:	21ff      	movs	r1, #255	@ 0xff
 800703a:	fa01 f303 	lsl.w	r3, r1, r3
 800703e:	43db      	mvns	r3, r3
 8007040:	ea02 0103 	and.w	r1, r2, r3
 8007044:	68bb      	ldr	r3, [r7, #8]
 8007046:	6a1a      	ldr	r2, [r3, #32]
 8007048:	687b      	ldr	r3, [r7, #4]
 800704a:	f003 0310 	and.w	r3, r3, #16
 800704e:	409a      	lsls	r2, r3
 8007050:	68fb      	ldr	r3, [r7, #12]
 8007052:	681b      	ldr	r3, [r3, #0]
 8007054:	430a      	orrs	r2, r1
 8007056:	64da      	str	r2, [r3, #76]	@ 0x4c
 8007058:	68bb      	ldr	r3, [r7, #8]
 800705a:	691b      	ldr	r3, [r3, #16]
 800705c:	2b01      	cmp	r3, #1
 800705e:	d11d      	bne.n	800709c <HAL_DAC_ConfigChannel+0x17c>
 8007060:	68fb      	ldr	r3, [r7, #12]
 8007062:	681b      	ldr	r3, [r3, #0]
 8007064:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007066:	61bb      	str	r3, [r7, #24]
 8007068:	687b      	ldr	r3, [r7, #4]
 800706a:	f003 0310 	and.w	r3, r3, #16
 800706e:	221f      	movs	r2, #31
 8007070:	fa02 f303 	lsl.w	r3, r2, r3
 8007074:	43db      	mvns	r3, r3
 8007076:	69ba      	ldr	r2, [r7, #24]
 8007078:	4013      	ands	r3, r2
 800707a:	61bb      	str	r3, [r7, #24]
 800707c:	68bb      	ldr	r3, [r7, #8]
 800707e:	695b      	ldr	r3, [r3, #20]
 8007080:	617b      	str	r3, [r7, #20]
 8007082:	687b      	ldr	r3, [r7, #4]
 8007084:	f003 0310 	and.w	r3, r3, #16
 8007088:	697a      	ldr	r2, [r7, #20]
 800708a:	fa02 f303 	lsl.w	r3, r2, r3
 800708e:	69ba      	ldr	r2, [r7, #24]
 8007090:	4313      	orrs	r3, r2
 8007092:	61bb      	str	r3, [r7, #24]
 8007094:	68fb      	ldr	r3, [r7, #12]
 8007096:	681b      	ldr	r3, [r3, #0]
 8007098:	69ba      	ldr	r2, [r7, #24]
 800709a:	639a      	str	r2, [r3, #56]	@ 0x38
 800709c:	68fb      	ldr	r3, [r7, #12]
 800709e:	681b      	ldr	r3, [r3, #0]
 80070a0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80070a2:	61bb      	str	r3, [r7, #24]
 80070a4:	687b      	ldr	r3, [r7, #4]
 80070a6:	f003 0310 	and.w	r3, r3, #16
 80070aa:	2207      	movs	r2, #7
 80070ac:	fa02 f303 	lsl.w	r3, r2, r3
 80070b0:	43db      	mvns	r3, r3
 80070b2:	69ba      	ldr	r2, [r7, #24]
 80070b4:	4013      	ands	r3, r2
 80070b6:	61bb      	str	r3, [r7, #24]
 80070b8:	68bb      	ldr	r3, [r7, #8]
 80070ba:	68db      	ldr	r3, [r3, #12]
 80070bc:	2b01      	cmp	r3, #1
 80070be:	d102      	bne.n	80070c6 <HAL_DAC_ConfigChannel+0x1a6>
 80070c0:	2300      	movs	r3, #0
 80070c2:	627b      	str	r3, [r7, #36]	@ 0x24
 80070c4:	e00f      	b.n	80070e6 <HAL_DAC_ConfigChannel+0x1c6>
 80070c6:	68bb      	ldr	r3, [r7, #8]
 80070c8:	68db      	ldr	r3, [r3, #12]
 80070ca:	2b02      	cmp	r3, #2
 80070cc:	d102      	bne.n	80070d4 <HAL_DAC_ConfigChannel+0x1b4>
 80070ce:	2301      	movs	r3, #1
 80070d0:	627b      	str	r3, [r7, #36]	@ 0x24
 80070d2:	e008      	b.n	80070e6 <HAL_DAC_ConfigChannel+0x1c6>
 80070d4:	68bb      	ldr	r3, [r7, #8]
 80070d6:	689b      	ldr	r3, [r3, #8]
 80070d8:	2b00      	cmp	r3, #0
 80070da:	d102      	bne.n	80070e2 <HAL_DAC_ConfigChannel+0x1c2>
 80070dc:	2301      	movs	r3, #1
 80070de:	627b      	str	r3, [r7, #36]	@ 0x24
 80070e0:	e001      	b.n	80070e6 <HAL_DAC_ConfigChannel+0x1c6>
 80070e2:	2300      	movs	r3, #0
 80070e4:	627b      	str	r3, [r7, #36]	@ 0x24
 80070e6:	68bb      	ldr	r3, [r7, #8]
 80070e8:	681a      	ldr	r2, [r3, #0]
 80070ea:	68bb      	ldr	r3, [r7, #8]
 80070ec:	689b      	ldr	r3, [r3, #8]
 80070ee:	4313      	orrs	r3, r2
 80070f0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80070f2:	4313      	orrs	r3, r2
 80070f4:	617b      	str	r3, [r7, #20]
 80070f6:	687b      	ldr	r3, [r7, #4]
 80070f8:	f003 0310 	and.w	r3, r3, #16
 80070fc:	697a      	ldr	r2, [r7, #20]
 80070fe:	fa02 f303 	lsl.w	r3, r2, r3
 8007102:	69ba      	ldr	r2, [r7, #24]
 8007104:	4313      	orrs	r3, r2
 8007106:	61bb      	str	r3, [r7, #24]
 8007108:	68fb      	ldr	r3, [r7, #12]
 800710a:	681b      	ldr	r3, [r3, #0]
 800710c:	69ba      	ldr	r2, [r7, #24]
 800710e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8007110:	68fb      	ldr	r3, [r7, #12]
 8007112:	681b      	ldr	r3, [r3, #0]
 8007114:	6819      	ldr	r1, [r3, #0]
 8007116:	687b      	ldr	r3, [r7, #4]
 8007118:	f003 0310 	and.w	r3, r3, #16
 800711c:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8007120:	fa02 f303 	lsl.w	r3, r2, r3
 8007124:	43da      	mvns	r2, r3
 8007126:	68fb      	ldr	r3, [r7, #12]
 8007128:	681b      	ldr	r3, [r3, #0]
 800712a:	400a      	ands	r2, r1
 800712c:	601a      	str	r2, [r3, #0]
 800712e:	68fb      	ldr	r3, [r7, #12]
 8007130:	681b      	ldr	r3, [r3, #0]
 8007132:	681b      	ldr	r3, [r3, #0]
 8007134:	61bb      	str	r3, [r7, #24]
 8007136:	687b      	ldr	r3, [r7, #4]
 8007138:	f003 0310 	and.w	r3, r3, #16
 800713c:	f640 72fe 	movw	r2, #4094	@ 0xffe
 8007140:	fa02 f303 	lsl.w	r3, r2, r3
 8007144:	43db      	mvns	r3, r3
 8007146:	69ba      	ldr	r2, [r7, #24]
 8007148:	4013      	ands	r3, r2
 800714a:	61bb      	str	r3, [r7, #24]
 800714c:	68bb      	ldr	r3, [r7, #8]
 800714e:	685b      	ldr	r3, [r3, #4]
 8007150:	617b      	str	r3, [r7, #20]
 8007152:	687b      	ldr	r3, [r7, #4]
 8007154:	f003 0310 	and.w	r3, r3, #16
 8007158:	697a      	ldr	r2, [r7, #20]
 800715a:	fa02 f303 	lsl.w	r3, r2, r3
 800715e:	69ba      	ldr	r2, [r7, #24]
 8007160:	4313      	orrs	r3, r2
 8007162:	61bb      	str	r3, [r7, #24]
 8007164:	68fb      	ldr	r3, [r7, #12]
 8007166:	681b      	ldr	r3, [r3, #0]
 8007168:	69ba      	ldr	r2, [r7, #24]
 800716a:	601a      	str	r2, [r3, #0]
 800716c:	68fb      	ldr	r3, [r7, #12]
 800716e:	681b      	ldr	r3, [r3, #0]
 8007170:	6819      	ldr	r1, [r3, #0]
 8007172:	687b      	ldr	r3, [r7, #4]
 8007174:	f003 0310 	and.w	r3, r3, #16
 8007178:	22c0      	movs	r2, #192	@ 0xc0
 800717a:	fa02 f303 	lsl.w	r3, r2, r3
 800717e:	43da      	mvns	r2, r3
 8007180:	68fb      	ldr	r3, [r7, #12]
 8007182:	681b      	ldr	r3, [r3, #0]
 8007184:	400a      	ands	r2, r1
 8007186:	601a      	str	r2, [r3, #0]
 8007188:	68fb      	ldr	r3, [r7, #12]
 800718a:	2201      	movs	r2, #1
 800718c:	711a      	strb	r2, [r3, #4]
 800718e:	68fb      	ldr	r3, [r7, #12]
 8007190:	2200      	movs	r2, #0
 8007192:	715a      	strb	r2, [r3, #5]
 8007194:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8007198:	4618      	mov	r0, r3
 800719a:	3728      	adds	r7, #40	@ 0x28
 800719c:	46bd      	mov	sp, r7
 800719e:	bd80      	pop	{r7, pc}
 80071a0:	20008000 	.word	0x20008000

080071a4 <DAC_DMAConvCpltCh1>:
 80071a4:	b580      	push	{r7, lr}
 80071a6:	b084      	sub	sp, #16
 80071a8:	af00      	add	r7, sp, #0
 80071aa:	6078      	str	r0, [r7, #4]
 80071ac:	687b      	ldr	r3, [r7, #4]
 80071ae:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80071b0:	60fb      	str	r3, [r7, #12]
 80071b2:	68f8      	ldr	r0, [r7, #12]
 80071b4:	f7f9 fc9c 	bl	8000af0 <HAL_DAC_ConvCpltCallbackCh1>
 80071b8:	68fb      	ldr	r3, [r7, #12]
 80071ba:	2201      	movs	r2, #1
 80071bc:	711a      	strb	r2, [r3, #4]
 80071be:	bf00      	nop
 80071c0:	3710      	adds	r7, #16
 80071c2:	46bd      	mov	sp, r7
 80071c4:	bd80      	pop	{r7, pc}

080071c6 <DAC_DMAHalfConvCpltCh1>:
 80071c6:	b580      	push	{r7, lr}
 80071c8:	b084      	sub	sp, #16
 80071ca:	af00      	add	r7, sp, #0
 80071cc:	6078      	str	r0, [r7, #4]
 80071ce:	687b      	ldr	r3, [r7, #4]
 80071d0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80071d2:	60fb      	str	r3, [r7, #12]
 80071d4:	68f8      	ldr	r0, [r7, #12]
 80071d6:	f7f9 fc7d 	bl	8000ad4 <HAL_DAC_ConvHalfCpltCallbackCh1>
 80071da:	bf00      	nop
 80071dc:	3710      	adds	r7, #16
 80071de:	46bd      	mov	sp, r7
 80071e0:	bd80      	pop	{r7, pc}

080071e2 <DAC_DMAErrorCh1>:
 80071e2:	b580      	push	{r7, lr}
 80071e4:	b084      	sub	sp, #16
 80071e6:	af00      	add	r7, sp, #0
 80071e8:	6078      	str	r0, [r7, #4]
 80071ea:	687b      	ldr	r3, [r7, #4]
 80071ec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80071ee:	60fb      	str	r3, [r7, #12]
 80071f0:	68fb      	ldr	r3, [r7, #12]
 80071f2:	691b      	ldr	r3, [r3, #16]
 80071f4:	f043 0204 	orr.w	r2, r3, #4
 80071f8:	68fb      	ldr	r3, [r7, #12]
 80071fa:	611a      	str	r2, [r3, #16]
 80071fc:	68f8      	ldr	r0, [r7, #12]
 80071fe:	f7ff fe85 	bl	8006f0c <HAL_DAC_ErrorCallbackCh1>
 8007202:	68fb      	ldr	r3, [r7, #12]
 8007204:	2201      	movs	r2, #1
 8007206:	711a      	strb	r2, [r3, #4]
 8007208:	bf00      	nop
 800720a:	3710      	adds	r7, #16
 800720c:	46bd      	mov	sp, r7
 800720e:	bd80      	pop	{r7, pc}

08007210 <HAL_DACEx_ConvCpltCallbackCh2>:
 8007210:	b480      	push	{r7}
 8007212:	b083      	sub	sp, #12
 8007214:	af00      	add	r7, sp, #0
 8007216:	6078      	str	r0, [r7, #4]
 8007218:	bf00      	nop
 800721a:	370c      	adds	r7, #12
 800721c:	46bd      	mov	sp, r7
 800721e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007222:	4770      	bx	lr

08007224 <HAL_DACEx_ConvHalfCpltCallbackCh2>:
 8007224:	b480      	push	{r7}
 8007226:	b083      	sub	sp, #12
 8007228:	af00      	add	r7, sp, #0
 800722a:	6078      	str	r0, [r7, #4]
 800722c:	bf00      	nop
 800722e:	370c      	adds	r7, #12
 8007230:	46bd      	mov	sp, r7
 8007232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007236:	4770      	bx	lr

08007238 <HAL_DACEx_ErrorCallbackCh2>:
 8007238:	b480      	push	{r7}
 800723a:	b083      	sub	sp, #12
 800723c:	af00      	add	r7, sp, #0
 800723e:	6078      	str	r0, [r7, #4]
 8007240:	bf00      	nop
 8007242:	370c      	adds	r7, #12
 8007244:	46bd      	mov	sp, r7
 8007246:	f85d 7b04 	ldr.w	r7, [sp], #4
 800724a:	4770      	bx	lr

0800724c <DAC_DMAConvCpltCh2>:
 800724c:	b580      	push	{r7, lr}
 800724e:	b084      	sub	sp, #16
 8007250:	af00      	add	r7, sp, #0
 8007252:	6078      	str	r0, [r7, #4]
 8007254:	687b      	ldr	r3, [r7, #4]
 8007256:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007258:	60fb      	str	r3, [r7, #12]
 800725a:	68f8      	ldr	r0, [r7, #12]
 800725c:	f7ff ffd8 	bl	8007210 <HAL_DACEx_ConvCpltCallbackCh2>
 8007260:	68fb      	ldr	r3, [r7, #12]
 8007262:	2201      	movs	r2, #1
 8007264:	711a      	strb	r2, [r3, #4]
 8007266:	bf00      	nop
 8007268:	3710      	adds	r7, #16
 800726a:	46bd      	mov	sp, r7
 800726c:	bd80      	pop	{r7, pc}

0800726e <DAC_DMAHalfConvCpltCh2>:
 800726e:	b580      	push	{r7, lr}
 8007270:	b084      	sub	sp, #16
 8007272:	af00      	add	r7, sp, #0
 8007274:	6078      	str	r0, [r7, #4]
 8007276:	687b      	ldr	r3, [r7, #4]
 8007278:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800727a:	60fb      	str	r3, [r7, #12]
 800727c:	68f8      	ldr	r0, [r7, #12]
 800727e:	f7ff ffd1 	bl	8007224 <HAL_DACEx_ConvHalfCpltCallbackCh2>
 8007282:	bf00      	nop
 8007284:	3710      	adds	r7, #16
 8007286:	46bd      	mov	sp, r7
 8007288:	bd80      	pop	{r7, pc}

0800728a <DAC_DMAErrorCh2>:
 800728a:	b580      	push	{r7, lr}
 800728c:	b084      	sub	sp, #16
 800728e:	af00      	add	r7, sp, #0
 8007290:	6078      	str	r0, [r7, #4]
 8007292:	687b      	ldr	r3, [r7, #4]
 8007294:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007296:	60fb      	str	r3, [r7, #12]
 8007298:	68fb      	ldr	r3, [r7, #12]
 800729a:	691b      	ldr	r3, [r3, #16]
 800729c:	f043 0204 	orr.w	r2, r3, #4
 80072a0:	68fb      	ldr	r3, [r7, #12]
 80072a2:	611a      	str	r2, [r3, #16]
 80072a4:	68f8      	ldr	r0, [r7, #12]
 80072a6:	f7ff ffc7 	bl	8007238 <HAL_DACEx_ErrorCallbackCh2>
 80072aa:	68fb      	ldr	r3, [r7, #12]
 80072ac:	2201      	movs	r2, #1
 80072ae:	711a      	strb	r2, [r3, #4]
 80072b0:	bf00      	nop
 80072b2:	3710      	adds	r7, #16
 80072b4:	46bd      	mov	sp, r7
 80072b6:	bd80      	pop	{r7, pc}

080072b8 <HAL_DMA_Init>:
 80072b8:	b580      	push	{r7, lr}
 80072ba:	b086      	sub	sp, #24
 80072bc:	af00      	add	r7, sp, #0
 80072be:	6078      	str	r0, [r7, #4]
 80072c0:	f7fe f816 	bl	80052f0 <HAL_GetTick>
 80072c4:	6138      	str	r0, [r7, #16]
 80072c6:	687b      	ldr	r3, [r7, #4]
 80072c8:	2b00      	cmp	r3, #0
 80072ca:	d101      	bne.n	80072d0 <HAL_DMA_Init+0x18>
 80072cc:	2301      	movs	r3, #1
 80072ce:	e312      	b.n	80078f6 <HAL_DMA_Init+0x63e>
 80072d0:	687b      	ldr	r3, [r7, #4]
 80072d2:	681b      	ldr	r3, [r3, #0]
 80072d4:	4a66      	ldr	r2, [pc, #408]	@ (8007470 <HAL_DMA_Init+0x1b8>)
 80072d6:	4293      	cmp	r3, r2
 80072d8:	d04a      	beq.n	8007370 <HAL_DMA_Init+0xb8>
 80072da:	687b      	ldr	r3, [r7, #4]
 80072dc:	681b      	ldr	r3, [r3, #0]
 80072de:	4a65      	ldr	r2, [pc, #404]	@ (8007474 <HAL_DMA_Init+0x1bc>)
 80072e0:	4293      	cmp	r3, r2
 80072e2:	d045      	beq.n	8007370 <HAL_DMA_Init+0xb8>
 80072e4:	687b      	ldr	r3, [r7, #4]
 80072e6:	681b      	ldr	r3, [r3, #0]
 80072e8:	4a63      	ldr	r2, [pc, #396]	@ (8007478 <HAL_DMA_Init+0x1c0>)
 80072ea:	4293      	cmp	r3, r2
 80072ec:	d040      	beq.n	8007370 <HAL_DMA_Init+0xb8>
 80072ee:	687b      	ldr	r3, [r7, #4]
 80072f0:	681b      	ldr	r3, [r3, #0]
 80072f2:	4a62      	ldr	r2, [pc, #392]	@ (800747c <HAL_DMA_Init+0x1c4>)
 80072f4:	4293      	cmp	r3, r2
 80072f6:	d03b      	beq.n	8007370 <HAL_DMA_Init+0xb8>
 80072f8:	687b      	ldr	r3, [r7, #4]
 80072fa:	681b      	ldr	r3, [r3, #0]
 80072fc:	4a60      	ldr	r2, [pc, #384]	@ (8007480 <HAL_DMA_Init+0x1c8>)
 80072fe:	4293      	cmp	r3, r2
 8007300:	d036      	beq.n	8007370 <HAL_DMA_Init+0xb8>
 8007302:	687b      	ldr	r3, [r7, #4]
 8007304:	681b      	ldr	r3, [r3, #0]
 8007306:	4a5f      	ldr	r2, [pc, #380]	@ (8007484 <HAL_DMA_Init+0x1cc>)
 8007308:	4293      	cmp	r3, r2
 800730a:	d031      	beq.n	8007370 <HAL_DMA_Init+0xb8>
 800730c:	687b      	ldr	r3, [r7, #4]
 800730e:	681b      	ldr	r3, [r3, #0]
 8007310:	4a5d      	ldr	r2, [pc, #372]	@ (8007488 <HAL_DMA_Init+0x1d0>)
 8007312:	4293      	cmp	r3, r2
 8007314:	d02c      	beq.n	8007370 <HAL_DMA_Init+0xb8>
 8007316:	687b      	ldr	r3, [r7, #4]
 8007318:	681b      	ldr	r3, [r3, #0]
 800731a:	4a5c      	ldr	r2, [pc, #368]	@ (800748c <HAL_DMA_Init+0x1d4>)
 800731c:	4293      	cmp	r3, r2
 800731e:	d027      	beq.n	8007370 <HAL_DMA_Init+0xb8>
 8007320:	687b      	ldr	r3, [r7, #4]
 8007322:	681b      	ldr	r3, [r3, #0]
 8007324:	4a5a      	ldr	r2, [pc, #360]	@ (8007490 <HAL_DMA_Init+0x1d8>)
 8007326:	4293      	cmp	r3, r2
 8007328:	d022      	beq.n	8007370 <HAL_DMA_Init+0xb8>
 800732a:	687b      	ldr	r3, [r7, #4]
 800732c:	681b      	ldr	r3, [r3, #0]
 800732e:	4a59      	ldr	r2, [pc, #356]	@ (8007494 <HAL_DMA_Init+0x1dc>)
 8007330:	4293      	cmp	r3, r2
 8007332:	d01d      	beq.n	8007370 <HAL_DMA_Init+0xb8>
 8007334:	687b      	ldr	r3, [r7, #4]
 8007336:	681b      	ldr	r3, [r3, #0]
 8007338:	4a57      	ldr	r2, [pc, #348]	@ (8007498 <HAL_DMA_Init+0x1e0>)
 800733a:	4293      	cmp	r3, r2
 800733c:	d018      	beq.n	8007370 <HAL_DMA_Init+0xb8>
 800733e:	687b      	ldr	r3, [r7, #4]
 8007340:	681b      	ldr	r3, [r3, #0]
 8007342:	4a56      	ldr	r2, [pc, #344]	@ (800749c <HAL_DMA_Init+0x1e4>)
 8007344:	4293      	cmp	r3, r2
 8007346:	d013      	beq.n	8007370 <HAL_DMA_Init+0xb8>
 8007348:	687b      	ldr	r3, [r7, #4]
 800734a:	681b      	ldr	r3, [r3, #0]
 800734c:	4a54      	ldr	r2, [pc, #336]	@ (80074a0 <HAL_DMA_Init+0x1e8>)
 800734e:	4293      	cmp	r3, r2
 8007350:	d00e      	beq.n	8007370 <HAL_DMA_Init+0xb8>
 8007352:	687b      	ldr	r3, [r7, #4]
 8007354:	681b      	ldr	r3, [r3, #0]
 8007356:	4a53      	ldr	r2, [pc, #332]	@ (80074a4 <HAL_DMA_Init+0x1ec>)
 8007358:	4293      	cmp	r3, r2
 800735a:	d009      	beq.n	8007370 <HAL_DMA_Init+0xb8>
 800735c:	687b      	ldr	r3, [r7, #4]
 800735e:	681b      	ldr	r3, [r3, #0]
 8007360:	4a51      	ldr	r2, [pc, #324]	@ (80074a8 <HAL_DMA_Init+0x1f0>)
 8007362:	4293      	cmp	r3, r2
 8007364:	d004      	beq.n	8007370 <HAL_DMA_Init+0xb8>
 8007366:	687b      	ldr	r3, [r7, #4]
 8007368:	681b      	ldr	r3, [r3, #0]
 800736a:	4a50      	ldr	r2, [pc, #320]	@ (80074ac <HAL_DMA_Init+0x1f4>)
 800736c:	4293      	cmp	r3, r2
 800736e:	d101      	bne.n	8007374 <HAL_DMA_Init+0xbc>
 8007370:	2301      	movs	r3, #1
 8007372:	e000      	b.n	8007376 <HAL_DMA_Init+0xbe>
 8007374:	2300      	movs	r3, #0
 8007376:	2b00      	cmp	r3, #0
 8007378:	f000 813c 	beq.w	80075f4 <HAL_DMA_Init+0x33c>
 800737c:	687b      	ldr	r3, [r7, #4]
 800737e:	2202      	movs	r2, #2
 8007380:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8007384:	687b      	ldr	r3, [r7, #4]
 8007386:	2200      	movs	r2, #0
 8007388:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800738c:	687b      	ldr	r3, [r7, #4]
 800738e:	681b      	ldr	r3, [r3, #0]
 8007390:	4a37      	ldr	r2, [pc, #220]	@ (8007470 <HAL_DMA_Init+0x1b8>)
 8007392:	4293      	cmp	r3, r2
 8007394:	d04a      	beq.n	800742c <HAL_DMA_Init+0x174>
 8007396:	687b      	ldr	r3, [r7, #4]
 8007398:	681b      	ldr	r3, [r3, #0]
 800739a:	4a36      	ldr	r2, [pc, #216]	@ (8007474 <HAL_DMA_Init+0x1bc>)
 800739c:	4293      	cmp	r3, r2
 800739e:	d045      	beq.n	800742c <HAL_DMA_Init+0x174>
 80073a0:	687b      	ldr	r3, [r7, #4]
 80073a2:	681b      	ldr	r3, [r3, #0]
 80073a4:	4a34      	ldr	r2, [pc, #208]	@ (8007478 <HAL_DMA_Init+0x1c0>)
 80073a6:	4293      	cmp	r3, r2
 80073a8:	d040      	beq.n	800742c <HAL_DMA_Init+0x174>
 80073aa:	687b      	ldr	r3, [r7, #4]
 80073ac:	681b      	ldr	r3, [r3, #0]
 80073ae:	4a33      	ldr	r2, [pc, #204]	@ (800747c <HAL_DMA_Init+0x1c4>)
 80073b0:	4293      	cmp	r3, r2
 80073b2:	d03b      	beq.n	800742c <HAL_DMA_Init+0x174>
 80073b4:	687b      	ldr	r3, [r7, #4]
 80073b6:	681b      	ldr	r3, [r3, #0]
 80073b8:	4a31      	ldr	r2, [pc, #196]	@ (8007480 <HAL_DMA_Init+0x1c8>)
 80073ba:	4293      	cmp	r3, r2
 80073bc:	d036      	beq.n	800742c <HAL_DMA_Init+0x174>
 80073be:	687b      	ldr	r3, [r7, #4]
 80073c0:	681b      	ldr	r3, [r3, #0]
 80073c2:	4a30      	ldr	r2, [pc, #192]	@ (8007484 <HAL_DMA_Init+0x1cc>)
 80073c4:	4293      	cmp	r3, r2
 80073c6:	d031      	beq.n	800742c <HAL_DMA_Init+0x174>
 80073c8:	687b      	ldr	r3, [r7, #4]
 80073ca:	681b      	ldr	r3, [r3, #0]
 80073cc:	4a2e      	ldr	r2, [pc, #184]	@ (8007488 <HAL_DMA_Init+0x1d0>)
 80073ce:	4293      	cmp	r3, r2
 80073d0:	d02c      	beq.n	800742c <HAL_DMA_Init+0x174>
 80073d2:	687b      	ldr	r3, [r7, #4]
 80073d4:	681b      	ldr	r3, [r3, #0]
 80073d6:	4a2d      	ldr	r2, [pc, #180]	@ (800748c <HAL_DMA_Init+0x1d4>)
 80073d8:	4293      	cmp	r3, r2
 80073da:	d027      	beq.n	800742c <HAL_DMA_Init+0x174>
 80073dc:	687b      	ldr	r3, [r7, #4]
 80073de:	681b      	ldr	r3, [r3, #0]
 80073e0:	4a2b      	ldr	r2, [pc, #172]	@ (8007490 <HAL_DMA_Init+0x1d8>)
 80073e2:	4293      	cmp	r3, r2
 80073e4:	d022      	beq.n	800742c <HAL_DMA_Init+0x174>
 80073e6:	687b      	ldr	r3, [r7, #4]
 80073e8:	681b      	ldr	r3, [r3, #0]
 80073ea:	4a2a      	ldr	r2, [pc, #168]	@ (8007494 <HAL_DMA_Init+0x1dc>)
 80073ec:	4293      	cmp	r3, r2
 80073ee:	d01d      	beq.n	800742c <HAL_DMA_Init+0x174>
 80073f0:	687b      	ldr	r3, [r7, #4]
 80073f2:	681b      	ldr	r3, [r3, #0]
 80073f4:	4a28      	ldr	r2, [pc, #160]	@ (8007498 <HAL_DMA_Init+0x1e0>)
 80073f6:	4293      	cmp	r3, r2
 80073f8:	d018      	beq.n	800742c <HAL_DMA_Init+0x174>
 80073fa:	687b      	ldr	r3, [r7, #4]
 80073fc:	681b      	ldr	r3, [r3, #0]
 80073fe:	4a27      	ldr	r2, [pc, #156]	@ (800749c <HAL_DMA_Init+0x1e4>)
 8007400:	4293      	cmp	r3, r2
 8007402:	d013      	beq.n	800742c <HAL_DMA_Init+0x174>
 8007404:	687b      	ldr	r3, [r7, #4]
 8007406:	681b      	ldr	r3, [r3, #0]
 8007408:	4a25      	ldr	r2, [pc, #148]	@ (80074a0 <HAL_DMA_Init+0x1e8>)
 800740a:	4293      	cmp	r3, r2
 800740c:	d00e      	beq.n	800742c <HAL_DMA_Init+0x174>
 800740e:	687b      	ldr	r3, [r7, #4]
 8007410:	681b      	ldr	r3, [r3, #0]
 8007412:	4a24      	ldr	r2, [pc, #144]	@ (80074a4 <HAL_DMA_Init+0x1ec>)
 8007414:	4293      	cmp	r3, r2
 8007416:	d009      	beq.n	800742c <HAL_DMA_Init+0x174>
 8007418:	687b      	ldr	r3, [r7, #4]
 800741a:	681b      	ldr	r3, [r3, #0]
 800741c:	4a22      	ldr	r2, [pc, #136]	@ (80074a8 <HAL_DMA_Init+0x1f0>)
 800741e:	4293      	cmp	r3, r2
 8007420:	d004      	beq.n	800742c <HAL_DMA_Init+0x174>
 8007422:	687b      	ldr	r3, [r7, #4]
 8007424:	681b      	ldr	r3, [r3, #0]
 8007426:	4a21      	ldr	r2, [pc, #132]	@ (80074ac <HAL_DMA_Init+0x1f4>)
 8007428:	4293      	cmp	r3, r2
 800742a:	d108      	bne.n	800743e <HAL_DMA_Init+0x186>
 800742c:	687b      	ldr	r3, [r7, #4]
 800742e:	681b      	ldr	r3, [r3, #0]
 8007430:	681a      	ldr	r2, [r3, #0]
 8007432:	687b      	ldr	r3, [r7, #4]
 8007434:	681b      	ldr	r3, [r3, #0]
 8007436:	f022 0201 	bic.w	r2, r2, #1
 800743a:	601a      	str	r2, [r3, #0]
 800743c:	e007      	b.n	800744e <HAL_DMA_Init+0x196>
 800743e:	687b      	ldr	r3, [r7, #4]
 8007440:	681b      	ldr	r3, [r3, #0]
 8007442:	681a      	ldr	r2, [r3, #0]
 8007444:	687b      	ldr	r3, [r7, #4]
 8007446:	681b      	ldr	r3, [r3, #0]
 8007448:	f022 0201 	bic.w	r2, r2, #1
 800744c:	601a      	str	r2, [r3, #0]
 800744e:	e02f      	b.n	80074b0 <HAL_DMA_Init+0x1f8>
 8007450:	f7fd ff4e 	bl	80052f0 <HAL_GetTick>
 8007454:	4602      	mov	r2, r0
 8007456:	693b      	ldr	r3, [r7, #16]
 8007458:	1ad3      	subs	r3, r2, r3
 800745a:	2b05      	cmp	r3, #5
 800745c:	d928      	bls.n	80074b0 <HAL_DMA_Init+0x1f8>
 800745e:	687b      	ldr	r3, [r7, #4]
 8007460:	2220      	movs	r2, #32
 8007462:	655a      	str	r2, [r3, #84]	@ 0x54
 8007464:	687b      	ldr	r3, [r7, #4]
 8007466:	2203      	movs	r2, #3
 8007468:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800746c:	2301      	movs	r3, #1
 800746e:	e242      	b.n	80078f6 <HAL_DMA_Init+0x63e>
 8007470:	40020010 	.word	0x40020010
 8007474:	40020028 	.word	0x40020028
 8007478:	40020040 	.word	0x40020040
 800747c:	40020058 	.word	0x40020058
 8007480:	40020070 	.word	0x40020070
 8007484:	40020088 	.word	0x40020088
 8007488:	400200a0 	.word	0x400200a0
 800748c:	400200b8 	.word	0x400200b8
 8007490:	40020410 	.word	0x40020410
 8007494:	40020428 	.word	0x40020428
 8007498:	40020440 	.word	0x40020440
 800749c:	40020458 	.word	0x40020458
 80074a0:	40020470 	.word	0x40020470
 80074a4:	40020488 	.word	0x40020488
 80074a8:	400204a0 	.word	0x400204a0
 80074ac:	400204b8 	.word	0x400204b8
 80074b0:	687b      	ldr	r3, [r7, #4]
 80074b2:	681b      	ldr	r3, [r3, #0]
 80074b4:	681b      	ldr	r3, [r3, #0]
 80074b6:	f003 0301 	and.w	r3, r3, #1
 80074ba:	2b00      	cmp	r3, #0
 80074bc:	d1c8      	bne.n	8007450 <HAL_DMA_Init+0x198>
 80074be:	687b      	ldr	r3, [r7, #4]
 80074c0:	681b      	ldr	r3, [r3, #0]
 80074c2:	681b      	ldr	r3, [r3, #0]
 80074c4:	617b      	str	r3, [r7, #20]
 80074c6:	697a      	ldr	r2, [r7, #20]
 80074c8:	4b83      	ldr	r3, [pc, #524]	@ (80076d8 <HAL_DMA_Init+0x420>)
 80074ca:	4013      	ands	r3, r2
 80074cc:	617b      	str	r3, [r7, #20]
 80074ce:	687b      	ldr	r3, [r7, #4]
 80074d0:	689a      	ldr	r2, [r3, #8]
 80074d2:	687b      	ldr	r3, [r7, #4]
 80074d4:	68db      	ldr	r3, [r3, #12]
 80074d6:	431a      	orrs	r2, r3
 80074d8:	687b      	ldr	r3, [r7, #4]
 80074da:	691b      	ldr	r3, [r3, #16]
 80074dc:	431a      	orrs	r2, r3
 80074de:	687b      	ldr	r3, [r7, #4]
 80074e0:	695b      	ldr	r3, [r3, #20]
 80074e2:	431a      	orrs	r2, r3
 80074e4:	687b      	ldr	r3, [r7, #4]
 80074e6:	699b      	ldr	r3, [r3, #24]
 80074e8:	431a      	orrs	r2, r3
 80074ea:	687b      	ldr	r3, [r7, #4]
 80074ec:	69db      	ldr	r3, [r3, #28]
 80074ee:	431a      	orrs	r2, r3
 80074f0:	687b      	ldr	r3, [r7, #4]
 80074f2:	6a1b      	ldr	r3, [r3, #32]
 80074f4:	4313      	orrs	r3, r2
 80074f6:	697a      	ldr	r2, [r7, #20]
 80074f8:	4313      	orrs	r3, r2
 80074fa:	617b      	str	r3, [r7, #20]
 80074fc:	687b      	ldr	r3, [r7, #4]
 80074fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007500:	2b04      	cmp	r3, #4
 8007502:	d107      	bne.n	8007514 <HAL_DMA_Init+0x25c>
 8007504:	687b      	ldr	r3, [r7, #4]
 8007506:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8007508:	687b      	ldr	r3, [r7, #4]
 800750a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800750c:	4313      	orrs	r3, r2
 800750e:	697a      	ldr	r2, [r7, #20]
 8007510:	4313      	orrs	r3, r2
 8007512:	617b      	str	r3, [r7, #20]
 8007514:	687b      	ldr	r3, [r7, #4]
 8007516:	685b      	ldr	r3, [r3, #4]
 8007518:	2b28      	cmp	r3, #40	@ 0x28
 800751a:	d903      	bls.n	8007524 <HAL_DMA_Init+0x26c>
 800751c:	687b      	ldr	r3, [r7, #4]
 800751e:	685b      	ldr	r3, [r3, #4]
 8007520:	2b2e      	cmp	r3, #46	@ 0x2e
 8007522:	d91f      	bls.n	8007564 <HAL_DMA_Init+0x2ac>
 8007524:	687b      	ldr	r3, [r7, #4]
 8007526:	685b      	ldr	r3, [r3, #4]
 8007528:	2b3e      	cmp	r3, #62	@ 0x3e
 800752a:	d903      	bls.n	8007534 <HAL_DMA_Init+0x27c>
 800752c:	687b      	ldr	r3, [r7, #4]
 800752e:	685b      	ldr	r3, [r3, #4]
 8007530:	2b42      	cmp	r3, #66	@ 0x42
 8007532:	d917      	bls.n	8007564 <HAL_DMA_Init+0x2ac>
 8007534:	687b      	ldr	r3, [r7, #4]
 8007536:	685b      	ldr	r3, [r3, #4]
 8007538:	2b46      	cmp	r3, #70	@ 0x46
 800753a:	d903      	bls.n	8007544 <HAL_DMA_Init+0x28c>
 800753c:	687b      	ldr	r3, [r7, #4]
 800753e:	685b      	ldr	r3, [r3, #4]
 8007540:	2b48      	cmp	r3, #72	@ 0x48
 8007542:	d90f      	bls.n	8007564 <HAL_DMA_Init+0x2ac>
 8007544:	687b      	ldr	r3, [r7, #4]
 8007546:	685b      	ldr	r3, [r3, #4]
 8007548:	2b4e      	cmp	r3, #78	@ 0x4e
 800754a:	d903      	bls.n	8007554 <HAL_DMA_Init+0x29c>
 800754c:	687b      	ldr	r3, [r7, #4]
 800754e:	685b      	ldr	r3, [r3, #4]
 8007550:	2b52      	cmp	r3, #82	@ 0x52
 8007552:	d907      	bls.n	8007564 <HAL_DMA_Init+0x2ac>
 8007554:	687b      	ldr	r3, [r7, #4]
 8007556:	685b      	ldr	r3, [r3, #4]
 8007558:	2b73      	cmp	r3, #115	@ 0x73
 800755a:	d905      	bls.n	8007568 <HAL_DMA_Init+0x2b0>
 800755c:	687b      	ldr	r3, [r7, #4]
 800755e:	685b      	ldr	r3, [r3, #4]
 8007560:	2b77      	cmp	r3, #119	@ 0x77
 8007562:	d801      	bhi.n	8007568 <HAL_DMA_Init+0x2b0>
 8007564:	2301      	movs	r3, #1
 8007566:	e000      	b.n	800756a <HAL_DMA_Init+0x2b2>
 8007568:	2300      	movs	r3, #0
 800756a:	2b00      	cmp	r3, #0
 800756c:	d003      	beq.n	8007576 <HAL_DMA_Init+0x2be>
 800756e:	697b      	ldr	r3, [r7, #20]
 8007570:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007574:	617b      	str	r3, [r7, #20]
 8007576:	687b      	ldr	r3, [r7, #4]
 8007578:	681b      	ldr	r3, [r3, #0]
 800757a:	697a      	ldr	r2, [r7, #20]
 800757c:	601a      	str	r2, [r3, #0]
 800757e:	687b      	ldr	r3, [r7, #4]
 8007580:	681b      	ldr	r3, [r3, #0]
 8007582:	695b      	ldr	r3, [r3, #20]
 8007584:	617b      	str	r3, [r7, #20]
 8007586:	697b      	ldr	r3, [r7, #20]
 8007588:	f023 0307 	bic.w	r3, r3, #7
 800758c:	617b      	str	r3, [r7, #20]
 800758e:	687b      	ldr	r3, [r7, #4]
 8007590:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007592:	697a      	ldr	r2, [r7, #20]
 8007594:	4313      	orrs	r3, r2
 8007596:	617b      	str	r3, [r7, #20]
 8007598:	687b      	ldr	r3, [r7, #4]
 800759a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800759c:	2b04      	cmp	r3, #4
 800759e:	d117      	bne.n	80075d0 <HAL_DMA_Init+0x318>
 80075a0:	687b      	ldr	r3, [r7, #4]
 80075a2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80075a4:	697a      	ldr	r2, [r7, #20]
 80075a6:	4313      	orrs	r3, r2
 80075a8:	617b      	str	r3, [r7, #20]
 80075aa:	687b      	ldr	r3, [r7, #4]
 80075ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80075ae:	2b00      	cmp	r3, #0
 80075b0:	d00e      	beq.n	80075d0 <HAL_DMA_Init+0x318>
 80075b2:	6878      	ldr	r0, [r7, #4]
 80075b4:	f001 fdca 	bl	800914c <DMA_CheckFifoParam>
 80075b8:	4603      	mov	r3, r0
 80075ba:	2b00      	cmp	r3, #0
 80075bc:	d008      	beq.n	80075d0 <HAL_DMA_Init+0x318>
 80075be:	687b      	ldr	r3, [r7, #4]
 80075c0:	2240      	movs	r2, #64	@ 0x40
 80075c2:	655a      	str	r2, [r3, #84]	@ 0x54
 80075c4:	687b      	ldr	r3, [r7, #4]
 80075c6:	2201      	movs	r2, #1
 80075c8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80075cc:	2301      	movs	r3, #1
 80075ce:	e192      	b.n	80078f6 <HAL_DMA_Init+0x63e>
 80075d0:	687b      	ldr	r3, [r7, #4]
 80075d2:	681b      	ldr	r3, [r3, #0]
 80075d4:	697a      	ldr	r2, [r7, #20]
 80075d6:	615a      	str	r2, [r3, #20]
 80075d8:	6878      	ldr	r0, [r7, #4]
 80075da:	f001 fd05 	bl	8008fe8 <DMA_CalcBaseAndBitshift>
 80075de:	4603      	mov	r3, r0
 80075e0:	60bb      	str	r3, [r7, #8]
 80075e2:	687b      	ldr	r3, [r7, #4]
 80075e4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80075e6:	f003 031f 	and.w	r3, r3, #31
 80075ea:	223f      	movs	r2, #63	@ 0x3f
 80075ec:	409a      	lsls	r2, r3
 80075ee:	68bb      	ldr	r3, [r7, #8]
 80075f0:	609a      	str	r2, [r3, #8]
 80075f2:	e0c8      	b.n	8007786 <HAL_DMA_Init+0x4ce>
 80075f4:	687b      	ldr	r3, [r7, #4]
 80075f6:	681b      	ldr	r3, [r3, #0]
 80075f8:	4a38      	ldr	r2, [pc, #224]	@ (80076dc <HAL_DMA_Init+0x424>)
 80075fa:	4293      	cmp	r3, r2
 80075fc:	d022      	beq.n	8007644 <HAL_DMA_Init+0x38c>
 80075fe:	687b      	ldr	r3, [r7, #4]
 8007600:	681b      	ldr	r3, [r3, #0]
 8007602:	4a37      	ldr	r2, [pc, #220]	@ (80076e0 <HAL_DMA_Init+0x428>)
 8007604:	4293      	cmp	r3, r2
 8007606:	d01d      	beq.n	8007644 <HAL_DMA_Init+0x38c>
 8007608:	687b      	ldr	r3, [r7, #4]
 800760a:	681b      	ldr	r3, [r3, #0]
 800760c:	4a35      	ldr	r2, [pc, #212]	@ (80076e4 <HAL_DMA_Init+0x42c>)
 800760e:	4293      	cmp	r3, r2
 8007610:	d018      	beq.n	8007644 <HAL_DMA_Init+0x38c>
 8007612:	687b      	ldr	r3, [r7, #4]
 8007614:	681b      	ldr	r3, [r3, #0]
 8007616:	4a34      	ldr	r2, [pc, #208]	@ (80076e8 <HAL_DMA_Init+0x430>)
 8007618:	4293      	cmp	r3, r2
 800761a:	d013      	beq.n	8007644 <HAL_DMA_Init+0x38c>
 800761c:	687b      	ldr	r3, [r7, #4]
 800761e:	681b      	ldr	r3, [r3, #0]
 8007620:	4a32      	ldr	r2, [pc, #200]	@ (80076ec <HAL_DMA_Init+0x434>)
 8007622:	4293      	cmp	r3, r2
 8007624:	d00e      	beq.n	8007644 <HAL_DMA_Init+0x38c>
 8007626:	687b      	ldr	r3, [r7, #4]
 8007628:	681b      	ldr	r3, [r3, #0]
 800762a:	4a31      	ldr	r2, [pc, #196]	@ (80076f0 <HAL_DMA_Init+0x438>)
 800762c:	4293      	cmp	r3, r2
 800762e:	d009      	beq.n	8007644 <HAL_DMA_Init+0x38c>
 8007630:	687b      	ldr	r3, [r7, #4]
 8007632:	681b      	ldr	r3, [r3, #0]
 8007634:	4a2f      	ldr	r2, [pc, #188]	@ (80076f4 <HAL_DMA_Init+0x43c>)
 8007636:	4293      	cmp	r3, r2
 8007638:	d004      	beq.n	8007644 <HAL_DMA_Init+0x38c>
 800763a:	687b      	ldr	r3, [r7, #4]
 800763c:	681b      	ldr	r3, [r3, #0]
 800763e:	4a2e      	ldr	r2, [pc, #184]	@ (80076f8 <HAL_DMA_Init+0x440>)
 8007640:	4293      	cmp	r3, r2
 8007642:	d101      	bne.n	8007648 <HAL_DMA_Init+0x390>
 8007644:	2301      	movs	r3, #1
 8007646:	e000      	b.n	800764a <HAL_DMA_Init+0x392>
 8007648:	2300      	movs	r3, #0
 800764a:	2b00      	cmp	r3, #0
 800764c:	f000 8092 	beq.w	8007774 <HAL_DMA_Init+0x4bc>
 8007650:	687b      	ldr	r3, [r7, #4]
 8007652:	681b      	ldr	r3, [r3, #0]
 8007654:	4a21      	ldr	r2, [pc, #132]	@ (80076dc <HAL_DMA_Init+0x424>)
 8007656:	4293      	cmp	r3, r2
 8007658:	d021      	beq.n	800769e <HAL_DMA_Init+0x3e6>
 800765a:	687b      	ldr	r3, [r7, #4]
 800765c:	681b      	ldr	r3, [r3, #0]
 800765e:	4a20      	ldr	r2, [pc, #128]	@ (80076e0 <HAL_DMA_Init+0x428>)
 8007660:	4293      	cmp	r3, r2
 8007662:	d01c      	beq.n	800769e <HAL_DMA_Init+0x3e6>
 8007664:	687b      	ldr	r3, [r7, #4]
 8007666:	681b      	ldr	r3, [r3, #0]
 8007668:	4a1e      	ldr	r2, [pc, #120]	@ (80076e4 <HAL_DMA_Init+0x42c>)
 800766a:	4293      	cmp	r3, r2
 800766c:	d017      	beq.n	800769e <HAL_DMA_Init+0x3e6>
 800766e:	687b      	ldr	r3, [r7, #4]
 8007670:	681b      	ldr	r3, [r3, #0]
 8007672:	4a1d      	ldr	r2, [pc, #116]	@ (80076e8 <HAL_DMA_Init+0x430>)
 8007674:	4293      	cmp	r3, r2
 8007676:	d012      	beq.n	800769e <HAL_DMA_Init+0x3e6>
 8007678:	687b      	ldr	r3, [r7, #4]
 800767a:	681b      	ldr	r3, [r3, #0]
 800767c:	4a1b      	ldr	r2, [pc, #108]	@ (80076ec <HAL_DMA_Init+0x434>)
 800767e:	4293      	cmp	r3, r2
 8007680:	d00d      	beq.n	800769e <HAL_DMA_Init+0x3e6>
 8007682:	687b      	ldr	r3, [r7, #4]
 8007684:	681b      	ldr	r3, [r3, #0]
 8007686:	4a1a      	ldr	r2, [pc, #104]	@ (80076f0 <HAL_DMA_Init+0x438>)
 8007688:	4293      	cmp	r3, r2
 800768a:	d008      	beq.n	800769e <HAL_DMA_Init+0x3e6>
 800768c:	687b      	ldr	r3, [r7, #4]
 800768e:	681b      	ldr	r3, [r3, #0]
 8007690:	4a18      	ldr	r2, [pc, #96]	@ (80076f4 <HAL_DMA_Init+0x43c>)
 8007692:	4293      	cmp	r3, r2
 8007694:	d003      	beq.n	800769e <HAL_DMA_Init+0x3e6>
 8007696:	687b      	ldr	r3, [r7, #4]
 8007698:	681b      	ldr	r3, [r3, #0]
 800769a:	4a17      	ldr	r2, [pc, #92]	@ (80076f8 <HAL_DMA_Init+0x440>)
 800769c:	4293      	cmp	r3, r2
 800769e:	687b      	ldr	r3, [r7, #4]
 80076a0:	2202      	movs	r2, #2
 80076a2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80076a6:	687b      	ldr	r3, [r7, #4]
 80076a8:	2200      	movs	r2, #0
 80076aa:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80076ae:	687b      	ldr	r3, [r7, #4]
 80076b0:	681b      	ldr	r3, [r3, #0]
 80076b2:	681b      	ldr	r3, [r3, #0]
 80076b4:	617b      	str	r3, [r7, #20]
 80076b6:	697a      	ldr	r2, [r7, #20]
 80076b8:	4b10      	ldr	r3, [pc, #64]	@ (80076fc <HAL_DMA_Init+0x444>)
 80076ba:	4013      	ands	r3, r2
 80076bc:	617b      	str	r3, [r7, #20]
 80076be:	687b      	ldr	r3, [r7, #4]
 80076c0:	689b      	ldr	r3, [r3, #8]
 80076c2:	2b40      	cmp	r3, #64	@ 0x40
 80076c4:	d01c      	beq.n	8007700 <HAL_DMA_Init+0x448>
 80076c6:	687b      	ldr	r3, [r7, #4]
 80076c8:	689b      	ldr	r3, [r3, #8]
 80076ca:	2b80      	cmp	r3, #128	@ 0x80
 80076cc:	d102      	bne.n	80076d4 <HAL_DMA_Init+0x41c>
 80076ce:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 80076d2:	e016      	b.n	8007702 <HAL_DMA_Init+0x44a>
 80076d4:	2300      	movs	r3, #0
 80076d6:	e014      	b.n	8007702 <HAL_DMA_Init+0x44a>
 80076d8:	fe10803f 	.word	0xfe10803f
 80076dc:	58025408 	.word	0x58025408
 80076e0:	5802541c 	.word	0x5802541c
 80076e4:	58025430 	.word	0x58025430
 80076e8:	58025444 	.word	0x58025444
 80076ec:	58025458 	.word	0x58025458
 80076f0:	5802546c 	.word	0x5802546c
 80076f4:	58025480 	.word	0x58025480
 80076f8:	58025494 	.word	0x58025494
 80076fc:	fffe000f 	.word	0xfffe000f
 8007700:	2310      	movs	r3, #16
 8007702:	687a      	ldr	r2, [r7, #4]
 8007704:	68d2      	ldr	r2, [r2, #12]
 8007706:	08d2      	lsrs	r2, r2, #3
 8007708:	431a      	orrs	r2, r3
 800770a:	687b      	ldr	r3, [r7, #4]
 800770c:	691b      	ldr	r3, [r3, #16]
 800770e:	08db      	lsrs	r3, r3, #3
 8007710:	431a      	orrs	r2, r3
 8007712:	687b      	ldr	r3, [r7, #4]
 8007714:	695b      	ldr	r3, [r3, #20]
 8007716:	08db      	lsrs	r3, r3, #3
 8007718:	431a      	orrs	r2, r3
 800771a:	687b      	ldr	r3, [r7, #4]
 800771c:	699b      	ldr	r3, [r3, #24]
 800771e:	08db      	lsrs	r3, r3, #3
 8007720:	431a      	orrs	r2, r3
 8007722:	687b      	ldr	r3, [r7, #4]
 8007724:	69db      	ldr	r3, [r3, #28]
 8007726:	08db      	lsrs	r3, r3, #3
 8007728:	431a      	orrs	r2, r3
 800772a:	687b      	ldr	r3, [r7, #4]
 800772c:	6a1b      	ldr	r3, [r3, #32]
 800772e:	091b      	lsrs	r3, r3, #4
 8007730:	4313      	orrs	r3, r2
 8007732:	697a      	ldr	r2, [r7, #20]
 8007734:	4313      	orrs	r3, r2
 8007736:	617b      	str	r3, [r7, #20]
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	681b      	ldr	r3, [r3, #0]
 800773c:	697a      	ldr	r2, [r7, #20]
 800773e:	601a      	str	r2, [r3, #0]
 8007740:	687b      	ldr	r3, [r7, #4]
 8007742:	681b      	ldr	r3, [r3, #0]
 8007744:	461a      	mov	r2, r3
 8007746:	4b6e      	ldr	r3, [pc, #440]	@ (8007900 <HAL_DMA_Init+0x648>)
 8007748:	4413      	add	r3, r2
 800774a:	4a6e      	ldr	r2, [pc, #440]	@ (8007904 <HAL_DMA_Init+0x64c>)
 800774c:	fba2 2303 	umull	r2, r3, r2, r3
 8007750:	091b      	lsrs	r3, r3, #4
 8007752:	009a      	lsls	r2, r3, #2
 8007754:	687b      	ldr	r3, [r7, #4]
 8007756:	65da      	str	r2, [r3, #92]	@ 0x5c
 8007758:	6878      	ldr	r0, [r7, #4]
 800775a:	f001 fc45 	bl	8008fe8 <DMA_CalcBaseAndBitshift>
 800775e:	4603      	mov	r3, r0
 8007760:	60fb      	str	r3, [r7, #12]
 8007762:	687b      	ldr	r3, [r7, #4]
 8007764:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8007766:	f003 031f 	and.w	r3, r3, #31
 800776a:	2201      	movs	r2, #1
 800776c:	409a      	lsls	r2, r3
 800776e:	68fb      	ldr	r3, [r7, #12]
 8007770:	605a      	str	r2, [r3, #4]
 8007772:	e008      	b.n	8007786 <HAL_DMA_Init+0x4ce>
 8007774:	687b      	ldr	r3, [r7, #4]
 8007776:	2240      	movs	r2, #64	@ 0x40
 8007778:	655a      	str	r2, [r3, #84]	@ 0x54
 800777a:	687b      	ldr	r3, [r7, #4]
 800777c:	2203      	movs	r2, #3
 800777e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8007782:	2301      	movs	r3, #1
 8007784:	e0b7      	b.n	80078f6 <HAL_DMA_Init+0x63e>
 8007786:	687b      	ldr	r3, [r7, #4]
 8007788:	681b      	ldr	r3, [r3, #0]
 800778a:	4a5f      	ldr	r2, [pc, #380]	@ (8007908 <HAL_DMA_Init+0x650>)
 800778c:	4293      	cmp	r3, r2
 800778e:	d072      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 8007790:	687b      	ldr	r3, [r7, #4]
 8007792:	681b      	ldr	r3, [r3, #0]
 8007794:	4a5d      	ldr	r2, [pc, #372]	@ (800790c <HAL_DMA_Init+0x654>)
 8007796:	4293      	cmp	r3, r2
 8007798:	d06d      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 800779a:	687b      	ldr	r3, [r7, #4]
 800779c:	681b      	ldr	r3, [r3, #0]
 800779e:	4a5c      	ldr	r2, [pc, #368]	@ (8007910 <HAL_DMA_Init+0x658>)
 80077a0:	4293      	cmp	r3, r2
 80077a2:	d068      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 80077a4:	687b      	ldr	r3, [r7, #4]
 80077a6:	681b      	ldr	r3, [r3, #0]
 80077a8:	4a5a      	ldr	r2, [pc, #360]	@ (8007914 <HAL_DMA_Init+0x65c>)
 80077aa:	4293      	cmp	r3, r2
 80077ac:	d063      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	681b      	ldr	r3, [r3, #0]
 80077b2:	4a59      	ldr	r2, [pc, #356]	@ (8007918 <HAL_DMA_Init+0x660>)
 80077b4:	4293      	cmp	r3, r2
 80077b6:	d05e      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 80077b8:	687b      	ldr	r3, [r7, #4]
 80077ba:	681b      	ldr	r3, [r3, #0]
 80077bc:	4a57      	ldr	r2, [pc, #348]	@ (800791c <HAL_DMA_Init+0x664>)
 80077be:	4293      	cmp	r3, r2
 80077c0:	d059      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 80077c2:	687b      	ldr	r3, [r7, #4]
 80077c4:	681b      	ldr	r3, [r3, #0]
 80077c6:	4a56      	ldr	r2, [pc, #344]	@ (8007920 <HAL_DMA_Init+0x668>)
 80077c8:	4293      	cmp	r3, r2
 80077ca:	d054      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 80077cc:	687b      	ldr	r3, [r7, #4]
 80077ce:	681b      	ldr	r3, [r3, #0]
 80077d0:	4a54      	ldr	r2, [pc, #336]	@ (8007924 <HAL_DMA_Init+0x66c>)
 80077d2:	4293      	cmp	r3, r2
 80077d4:	d04f      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 80077d6:	687b      	ldr	r3, [r7, #4]
 80077d8:	681b      	ldr	r3, [r3, #0]
 80077da:	4a53      	ldr	r2, [pc, #332]	@ (8007928 <HAL_DMA_Init+0x670>)
 80077dc:	4293      	cmp	r3, r2
 80077de:	d04a      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 80077e0:	687b      	ldr	r3, [r7, #4]
 80077e2:	681b      	ldr	r3, [r3, #0]
 80077e4:	4a51      	ldr	r2, [pc, #324]	@ (800792c <HAL_DMA_Init+0x674>)
 80077e6:	4293      	cmp	r3, r2
 80077e8:	d045      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 80077ea:	687b      	ldr	r3, [r7, #4]
 80077ec:	681b      	ldr	r3, [r3, #0]
 80077ee:	4a50      	ldr	r2, [pc, #320]	@ (8007930 <HAL_DMA_Init+0x678>)
 80077f0:	4293      	cmp	r3, r2
 80077f2:	d040      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 80077f4:	687b      	ldr	r3, [r7, #4]
 80077f6:	681b      	ldr	r3, [r3, #0]
 80077f8:	4a4e      	ldr	r2, [pc, #312]	@ (8007934 <HAL_DMA_Init+0x67c>)
 80077fa:	4293      	cmp	r3, r2
 80077fc:	d03b      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 80077fe:	687b      	ldr	r3, [r7, #4]
 8007800:	681b      	ldr	r3, [r3, #0]
 8007802:	4a4d      	ldr	r2, [pc, #308]	@ (8007938 <HAL_DMA_Init+0x680>)
 8007804:	4293      	cmp	r3, r2
 8007806:	d036      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 8007808:	687b      	ldr	r3, [r7, #4]
 800780a:	681b      	ldr	r3, [r3, #0]
 800780c:	4a4b      	ldr	r2, [pc, #300]	@ (800793c <HAL_DMA_Init+0x684>)
 800780e:	4293      	cmp	r3, r2
 8007810:	d031      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 8007812:	687b      	ldr	r3, [r7, #4]
 8007814:	681b      	ldr	r3, [r3, #0]
 8007816:	4a4a      	ldr	r2, [pc, #296]	@ (8007940 <HAL_DMA_Init+0x688>)
 8007818:	4293      	cmp	r3, r2
 800781a:	d02c      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 800781c:	687b      	ldr	r3, [r7, #4]
 800781e:	681b      	ldr	r3, [r3, #0]
 8007820:	4a48      	ldr	r2, [pc, #288]	@ (8007944 <HAL_DMA_Init+0x68c>)
 8007822:	4293      	cmp	r3, r2
 8007824:	d027      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 8007826:	687b      	ldr	r3, [r7, #4]
 8007828:	681b      	ldr	r3, [r3, #0]
 800782a:	4a47      	ldr	r2, [pc, #284]	@ (8007948 <HAL_DMA_Init+0x690>)
 800782c:	4293      	cmp	r3, r2
 800782e:	d022      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 8007830:	687b      	ldr	r3, [r7, #4]
 8007832:	681b      	ldr	r3, [r3, #0]
 8007834:	4a45      	ldr	r2, [pc, #276]	@ (800794c <HAL_DMA_Init+0x694>)
 8007836:	4293      	cmp	r3, r2
 8007838:	d01d      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 800783a:	687b      	ldr	r3, [r7, #4]
 800783c:	681b      	ldr	r3, [r3, #0]
 800783e:	4a44      	ldr	r2, [pc, #272]	@ (8007950 <HAL_DMA_Init+0x698>)
 8007840:	4293      	cmp	r3, r2
 8007842:	d018      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 8007844:	687b      	ldr	r3, [r7, #4]
 8007846:	681b      	ldr	r3, [r3, #0]
 8007848:	4a42      	ldr	r2, [pc, #264]	@ (8007954 <HAL_DMA_Init+0x69c>)
 800784a:	4293      	cmp	r3, r2
 800784c:	d013      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 800784e:	687b      	ldr	r3, [r7, #4]
 8007850:	681b      	ldr	r3, [r3, #0]
 8007852:	4a41      	ldr	r2, [pc, #260]	@ (8007958 <HAL_DMA_Init+0x6a0>)
 8007854:	4293      	cmp	r3, r2
 8007856:	d00e      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 8007858:	687b      	ldr	r3, [r7, #4]
 800785a:	681b      	ldr	r3, [r3, #0]
 800785c:	4a3f      	ldr	r2, [pc, #252]	@ (800795c <HAL_DMA_Init+0x6a4>)
 800785e:	4293      	cmp	r3, r2
 8007860:	d009      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 8007862:	687b      	ldr	r3, [r7, #4]
 8007864:	681b      	ldr	r3, [r3, #0]
 8007866:	4a3e      	ldr	r2, [pc, #248]	@ (8007960 <HAL_DMA_Init+0x6a8>)
 8007868:	4293      	cmp	r3, r2
 800786a:	d004      	beq.n	8007876 <HAL_DMA_Init+0x5be>
 800786c:	687b      	ldr	r3, [r7, #4]
 800786e:	681b      	ldr	r3, [r3, #0]
 8007870:	4a3c      	ldr	r2, [pc, #240]	@ (8007964 <HAL_DMA_Init+0x6ac>)
 8007872:	4293      	cmp	r3, r2
 8007874:	d101      	bne.n	800787a <HAL_DMA_Init+0x5c2>
 8007876:	2301      	movs	r3, #1
 8007878:	e000      	b.n	800787c <HAL_DMA_Init+0x5c4>
 800787a:	2300      	movs	r3, #0
 800787c:	2b00      	cmp	r3, #0
 800787e:	d032      	beq.n	80078e6 <HAL_DMA_Init+0x62e>
 8007880:	6878      	ldr	r0, [r7, #4]
 8007882:	f001 fcdf 	bl	8009244 <DMA_CalcDMAMUXChannelBaseAndMask>
 8007886:	687b      	ldr	r3, [r7, #4]
 8007888:	689b      	ldr	r3, [r3, #8]
 800788a:	2b80      	cmp	r3, #128	@ 0x80
 800788c:	d102      	bne.n	8007894 <HAL_DMA_Init+0x5dc>
 800788e:	687b      	ldr	r3, [r7, #4]
 8007890:	2200      	movs	r2, #0
 8007892:	605a      	str	r2, [r3, #4]
 8007894:	687b      	ldr	r3, [r7, #4]
 8007896:	685a      	ldr	r2, [r3, #4]
 8007898:	687b      	ldr	r3, [r7, #4]
 800789a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800789c:	b2d2      	uxtb	r2, r2
 800789e:	601a      	str	r2, [r3, #0]
 80078a0:	687b      	ldr	r3, [r7, #4]
 80078a2:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80078a4:	687a      	ldr	r2, [r7, #4]
 80078a6:	6e92      	ldr	r2, [r2, #104]	@ 0x68
 80078a8:	605a      	str	r2, [r3, #4]
 80078aa:	687b      	ldr	r3, [r7, #4]
 80078ac:	685b      	ldr	r3, [r3, #4]
 80078ae:	2b00      	cmp	r3, #0
 80078b0:	d010      	beq.n	80078d4 <HAL_DMA_Init+0x61c>
 80078b2:	687b      	ldr	r3, [r7, #4]
 80078b4:	685b      	ldr	r3, [r3, #4]
 80078b6:	2b08      	cmp	r3, #8
 80078b8:	d80c      	bhi.n	80078d4 <HAL_DMA_Init+0x61c>
 80078ba:	6878      	ldr	r0, [r7, #4]
 80078bc:	f001 fd5c 	bl	8009378 <DMA_CalcDMAMUXRequestGenBaseAndMask>
 80078c0:	687b      	ldr	r3, [r7, #4]
 80078c2:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80078c4:	2200      	movs	r2, #0
 80078c6:	601a      	str	r2, [r3, #0]
 80078c8:	687b      	ldr	r3, [r7, #4]
 80078ca:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80078cc:	687a      	ldr	r2, [r7, #4]
 80078ce:	6f52      	ldr	r2, [r2, #116]	@ 0x74
 80078d0:	605a      	str	r2, [r3, #4]
 80078d2:	e008      	b.n	80078e6 <HAL_DMA_Init+0x62e>
 80078d4:	687b      	ldr	r3, [r7, #4]
 80078d6:	2200      	movs	r2, #0
 80078d8:	66da      	str	r2, [r3, #108]	@ 0x6c
 80078da:	687b      	ldr	r3, [r7, #4]
 80078dc:	2200      	movs	r2, #0
 80078de:	671a      	str	r2, [r3, #112]	@ 0x70
 80078e0:	687b      	ldr	r3, [r7, #4]
 80078e2:	2200      	movs	r2, #0
 80078e4:	675a      	str	r2, [r3, #116]	@ 0x74
 80078e6:	687b      	ldr	r3, [r7, #4]
 80078e8:	2200      	movs	r2, #0
 80078ea:	655a      	str	r2, [r3, #84]	@ 0x54
 80078ec:	687b      	ldr	r3, [r7, #4]
 80078ee:	2201      	movs	r2, #1
 80078f0:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80078f4:	2300      	movs	r3, #0
 80078f6:	4618      	mov	r0, r3
 80078f8:	3718      	adds	r7, #24
 80078fa:	46bd      	mov	sp, r7
 80078fc:	bd80      	pop	{r7, pc}
 80078fe:	bf00      	nop
 8007900:	a7fdabf8 	.word	0xa7fdabf8
 8007904:	cccccccd 	.word	0xcccccccd
 8007908:	40020010 	.word	0x40020010
 800790c:	40020028 	.word	0x40020028
 8007910:	40020040 	.word	0x40020040
 8007914:	40020058 	.word	0x40020058
 8007918:	40020070 	.word	0x40020070
 800791c:	40020088 	.word	0x40020088
 8007920:	400200a0 	.word	0x400200a0
 8007924:	400200b8 	.word	0x400200b8
 8007928:	40020410 	.word	0x40020410
 800792c:	40020428 	.word	0x40020428
 8007930:	40020440 	.word	0x40020440
 8007934:	40020458 	.word	0x40020458
 8007938:	40020470 	.word	0x40020470
 800793c:	40020488 	.word	0x40020488
 8007940:	400204a0 	.word	0x400204a0
 8007944:	400204b8 	.word	0x400204b8
 8007948:	58025408 	.word	0x58025408
 800794c:	5802541c 	.word	0x5802541c
 8007950:	58025430 	.word	0x58025430
 8007954:	58025444 	.word	0x58025444
 8007958:	58025458 	.word	0x58025458
 800795c:	5802546c 	.word	0x5802546c
 8007960:	58025480 	.word	0x58025480
 8007964:	58025494 	.word	0x58025494

08007968 <HAL_DMA_Start_IT>:
 8007968:	b580      	push	{r7, lr}
 800796a:	b086      	sub	sp, #24
 800796c:	af00      	add	r7, sp, #0
 800796e:	60f8      	str	r0, [r7, #12]
 8007970:	60b9      	str	r1, [r7, #8]
 8007972:	607a      	str	r2, [r7, #4]
 8007974:	603b      	str	r3, [r7, #0]
 8007976:	2300      	movs	r3, #0
 8007978:	75fb      	strb	r3, [r7, #23]
 800797a:	68fb      	ldr	r3, [r7, #12]
 800797c:	2b00      	cmp	r3, #0
 800797e:	d101      	bne.n	8007984 <HAL_DMA_Start_IT+0x1c>
 8007980:	2301      	movs	r3, #1
 8007982:	e226      	b.n	8007dd2 <HAL_DMA_Start_IT+0x46a>
 8007984:	68fb      	ldr	r3, [r7, #12]
 8007986:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800798a:	2b01      	cmp	r3, #1
 800798c:	d101      	bne.n	8007992 <HAL_DMA_Start_IT+0x2a>
 800798e:	2302      	movs	r3, #2
 8007990:	e21f      	b.n	8007dd2 <HAL_DMA_Start_IT+0x46a>
 8007992:	68fb      	ldr	r3, [r7, #12]
 8007994:	2201      	movs	r2, #1
 8007996:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800799a:	68fb      	ldr	r3, [r7, #12]
 800799c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80079a0:	b2db      	uxtb	r3, r3
 80079a2:	2b01      	cmp	r3, #1
 80079a4:	f040 820a 	bne.w	8007dbc <HAL_DMA_Start_IT+0x454>
 80079a8:	68fb      	ldr	r3, [r7, #12]
 80079aa:	2202      	movs	r2, #2
 80079ac:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80079b0:	68fb      	ldr	r3, [r7, #12]
 80079b2:	2200      	movs	r2, #0
 80079b4:	655a      	str	r2, [r3, #84]	@ 0x54
 80079b6:	68fb      	ldr	r3, [r7, #12]
 80079b8:	681b      	ldr	r3, [r3, #0]
 80079ba:	4a68      	ldr	r2, [pc, #416]	@ (8007b5c <HAL_DMA_Start_IT+0x1f4>)
 80079bc:	4293      	cmp	r3, r2
 80079be:	d04a      	beq.n	8007a56 <HAL_DMA_Start_IT+0xee>
 80079c0:	68fb      	ldr	r3, [r7, #12]
 80079c2:	681b      	ldr	r3, [r3, #0]
 80079c4:	4a66      	ldr	r2, [pc, #408]	@ (8007b60 <HAL_DMA_Start_IT+0x1f8>)
 80079c6:	4293      	cmp	r3, r2
 80079c8:	d045      	beq.n	8007a56 <HAL_DMA_Start_IT+0xee>
 80079ca:	68fb      	ldr	r3, [r7, #12]
 80079cc:	681b      	ldr	r3, [r3, #0]
 80079ce:	4a65      	ldr	r2, [pc, #404]	@ (8007b64 <HAL_DMA_Start_IT+0x1fc>)
 80079d0:	4293      	cmp	r3, r2
 80079d2:	d040      	beq.n	8007a56 <HAL_DMA_Start_IT+0xee>
 80079d4:	68fb      	ldr	r3, [r7, #12]
 80079d6:	681b      	ldr	r3, [r3, #0]
 80079d8:	4a63      	ldr	r2, [pc, #396]	@ (8007b68 <HAL_DMA_Start_IT+0x200>)
 80079da:	4293      	cmp	r3, r2
 80079dc:	d03b      	beq.n	8007a56 <HAL_DMA_Start_IT+0xee>
 80079de:	68fb      	ldr	r3, [r7, #12]
 80079e0:	681b      	ldr	r3, [r3, #0]
 80079e2:	4a62      	ldr	r2, [pc, #392]	@ (8007b6c <HAL_DMA_Start_IT+0x204>)
 80079e4:	4293      	cmp	r3, r2
 80079e6:	d036      	beq.n	8007a56 <HAL_DMA_Start_IT+0xee>
 80079e8:	68fb      	ldr	r3, [r7, #12]
 80079ea:	681b      	ldr	r3, [r3, #0]
 80079ec:	4a60      	ldr	r2, [pc, #384]	@ (8007b70 <HAL_DMA_Start_IT+0x208>)
 80079ee:	4293      	cmp	r3, r2
 80079f0:	d031      	beq.n	8007a56 <HAL_DMA_Start_IT+0xee>
 80079f2:	68fb      	ldr	r3, [r7, #12]
 80079f4:	681b      	ldr	r3, [r3, #0]
 80079f6:	4a5f      	ldr	r2, [pc, #380]	@ (8007b74 <HAL_DMA_Start_IT+0x20c>)
 80079f8:	4293      	cmp	r3, r2
 80079fa:	d02c      	beq.n	8007a56 <HAL_DMA_Start_IT+0xee>
 80079fc:	68fb      	ldr	r3, [r7, #12]
 80079fe:	681b      	ldr	r3, [r3, #0]
 8007a00:	4a5d      	ldr	r2, [pc, #372]	@ (8007b78 <HAL_DMA_Start_IT+0x210>)
 8007a02:	4293      	cmp	r3, r2
 8007a04:	d027      	beq.n	8007a56 <HAL_DMA_Start_IT+0xee>
 8007a06:	68fb      	ldr	r3, [r7, #12]
 8007a08:	681b      	ldr	r3, [r3, #0]
 8007a0a:	4a5c      	ldr	r2, [pc, #368]	@ (8007b7c <HAL_DMA_Start_IT+0x214>)
 8007a0c:	4293      	cmp	r3, r2
 8007a0e:	d022      	beq.n	8007a56 <HAL_DMA_Start_IT+0xee>
 8007a10:	68fb      	ldr	r3, [r7, #12]
 8007a12:	681b      	ldr	r3, [r3, #0]
 8007a14:	4a5a      	ldr	r2, [pc, #360]	@ (8007b80 <HAL_DMA_Start_IT+0x218>)
 8007a16:	4293      	cmp	r3, r2
 8007a18:	d01d      	beq.n	8007a56 <HAL_DMA_Start_IT+0xee>
 8007a1a:	68fb      	ldr	r3, [r7, #12]
 8007a1c:	681b      	ldr	r3, [r3, #0]
 8007a1e:	4a59      	ldr	r2, [pc, #356]	@ (8007b84 <HAL_DMA_Start_IT+0x21c>)
 8007a20:	4293      	cmp	r3, r2
 8007a22:	d018      	beq.n	8007a56 <HAL_DMA_Start_IT+0xee>
 8007a24:	68fb      	ldr	r3, [r7, #12]
 8007a26:	681b      	ldr	r3, [r3, #0]
 8007a28:	4a57      	ldr	r2, [pc, #348]	@ (8007b88 <HAL_DMA_Start_IT+0x220>)
 8007a2a:	4293      	cmp	r3, r2
 8007a2c:	d013      	beq.n	8007a56 <HAL_DMA_Start_IT+0xee>
 8007a2e:	68fb      	ldr	r3, [r7, #12]
 8007a30:	681b      	ldr	r3, [r3, #0]
 8007a32:	4a56      	ldr	r2, [pc, #344]	@ (8007b8c <HAL_DMA_Start_IT+0x224>)
 8007a34:	4293      	cmp	r3, r2
 8007a36:	d00e      	beq.n	8007a56 <HAL_DMA_Start_IT+0xee>
 8007a38:	68fb      	ldr	r3, [r7, #12]
 8007a3a:	681b      	ldr	r3, [r3, #0]
 8007a3c:	4a54      	ldr	r2, [pc, #336]	@ (8007b90 <HAL_DMA_Start_IT+0x228>)
 8007a3e:	4293      	cmp	r3, r2
 8007a40:	d009      	beq.n	8007a56 <HAL_DMA_Start_IT+0xee>
 8007a42:	68fb      	ldr	r3, [r7, #12]
 8007a44:	681b      	ldr	r3, [r3, #0]
 8007a46:	4a53      	ldr	r2, [pc, #332]	@ (8007b94 <HAL_DMA_Start_IT+0x22c>)
 8007a48:	4293      	cmp	r3, r2
 8007a4a:	d004      	beq.n	8007a56 <HAL_DMA_Start_IT+0xee>
 8007a4c:	68fb      	ldr	r3, [r7, #12]
 8007a4e:	681b      	ldr	r3, [r3, #0]
 8007a50:	4a51      	ldr	r2, [pc, #324]	@ (8007b98 <HAL_DMA_Start_IT+0x230>)
 8007a52:	4293      	cmp	r3, r2
 8007a54:	d108      	bne.n	8007a68 <HAL_DMA_Start_IT+0x100>
 8007a56:	68fb      	ldr	r3, [r7, #12]
 8007a58:	681b      	ldr	r3, [r3, #0]
 8007a5a:	681a      	ldr	r2, [r3, #0]
 8007a5c:	68fb      	ldr	r3, [r7, #12]
 8007a5e:	681b      	ldr	r3, [r3, #0]
 8007a60:	f022 0201 	bic.w	r2, r2, #1
 8007a64:	601a      	str	r2, [r3, #0]
 8007a66:	e007      	b.n	8007a78 <HAL_DMA_Start_IT+0x110>
 8007a68:	68fb      	ldr	r3, [r7, #12]
 8007a6a:	681b      	ldr	r3, [r3, #0]
 8007a6c:	681a      	ldr	r2, [r3, #0]
 8007a6e:	68fb      	ldr	r3, [r7, #12]
 8007a70:	681b      	ldr	r3, [r3, #0]
 8007a72:	f022 0201 	bic.w	r2, r2, #1
 8007a76:	601a      	str	r2, [r3, #0]
 8007a78:	683b      	ldr	r3, [r7, #0]
 8007a7a:	687a      	ldr	r2, [r7, #4]
 8007a7c:	68b9      	ldr	r1, [r7, #8]
 8007a7e:	68f8      	ldr	r0, [r7, #12]
 8007a80:	f001 f906 	bl	8008c90 <DMA_SetConfig>
 8007a84:	68fb      	ldr	r3, [r7, #12]
 8007a86:	681b      	ldr	r3, [r3, #0]
 8007a88:	4a34      	ldr	r2, [pc, #208]	@ (8007b5c <HAL_DMA_Start_IT+0x1f4>)
 8007a8a:	4293      	cmp	r3, r2
 8007a8c:	d04a      	beq.n	8007b24 <HAL_DMA_Start_IT+0x1bc>
 8007a8e:	68fb      	ldr	r3, [r7, #12]
 8007a90:	681b      	ldr	r3, [r3, #0]
 8007a92:	4a33      	ldr	r2, [pc, #204]	@ (8007b60 <HAL_DMA_Start_IT+0x1f8>)
 8007a94:	4293      	cmp	r3, r2
 8007a96:	d045      	beq.n	8007b24 <HAL_DMA_Start_IT+0x1bc>
 8007a98:	68fb      	ldr	r3, [r7, #12]
 8007a9a:	681b      	ldr	r3, [r3, #0]
 8007a9c:	4a31      	ldr	r2, [pc, #196]	@ (8007b64 <HAL_DMA_Start_IT+0x1fc>)
 8007a9e:	4293      	cmp	r3, r2
 8007aa0:	d040      	beq.n	8007b24 <HAL_DMA_Start_IT+0x1bc>
 8007aa2:	68fb      	ldr	r3, [r7, #12]
 8007aa4:	681b      	ldr	r3, [r3, #0]
 8007aa6:	4a30      	ldr	r2, [pc, #192]	@ (8007b68 <HAL_DMA_Start_IT+0x200>)
 8007aa8:	4293      	cmp	r3, r2
 8007aaa:	d03b      	beq.n	8007b24 <HAL_DMA_Start_IT+0x1bc>
 8007aac:	68fb      	ldr	r3, [r7, #12]
 8007aae:	681b      	ldr	r3, [r3, #0]
 8007ab0:	4a2e      	ldr	r2, [pc, #184]	@ (8007b6c <HAL_DMA_Start_IT+0x204>)
 8007ab2:	4293      	cmp	r3, r2
 8007ab4:	d036      	beq.n	8007b24 <HAL_DMA_Start_IT+0x1bc>
 8007ab6:	68fb      	ldr	r3, [r7, #12]
 8007ab8:	681b      	ldr	r3, [r3, #0]
 8007aba:	4a2d      	ldr	r2, [pc, #180]	@ (8007b70 <HAL_DMA_Start_IT+0x208>)
 8007abc:	4293      	cmp	r3, r2
 8007abe:	d031      	beq.n	8007b24 <HAL_DMA_Start_IT+0x1bc>
 8007ac0:	68fb      	ldr	r3, [r7, #12]
 8007ac2:	681b      	ldr	r3, [r3, #0]
 8007ac4:	4a2b      	ldr	r2, [pc, #172]	@ (8007b74 <HAL_DMA_Start_IT+0x20c>)
 8007ac6:	4293      	cmp	r3, r2
 8007ac8:	d02c      	beq.n	8007b24 <HAL_DMA_Start_IT+0x1bc>
 8007aca:	68fb      	ldr	r3, [r7, #12]
 8007acc:	681b      	ldr	r3, [r3, #0]
 8007ace:	4a2a      	ldr	r2, [pc, #168]	@ (8007b78 <HAL_DMA_Start_IT+0x210>)
 8007ad0:	4293      	cmp	r3, r2
 8007ad2:	d027      	beq.n	8007b24 <HAL_DMA_Start_IT+0x1bc>
 8007ad4:	68fb      	ldr	r3, [r7, #12]
 8007ad6:	681b      	ldr	r3, [r3, #0]
 8007ad8:	4a28      	ldr	r2, [pc, #160]	@ (8007b7c <HAL_DMA_Start_IT+0x214>)
 8007ada:	4293      	cmp	r3, r2
 8007adc:	d022      	beq.n	8007b24 <HAL_DMA_Start_IT+0x1bc>
 8007ade:	68fb      	ldr	r3, [r7, #12]
 8007ae0:	681b      	ldr	r3, [r3, #0]
 8007ae2:	4a27      	ldr	r2, [pc, #156]	@ (8007b80 <HAL_DMA_Start_IT+0x218>)
 8007ae4:	4293      	cmp	r3, r2
 8007ae6:	d01d      	beq.n	8007b24 <HAL_DMA_Start_IT+0x1bc>
 8007ae8:	68fb      	ldr	r3, [r7, #12]
 8007aea:	681b      	ldr	r3, [r3, #0]
 8007aec:	4a25      	ldr	r2, [pc, #148]	@ (8007b84 <HAL_DMA_Start_IT+0x21c>)
 8007aee:	4293      	cmp	r3, r2
 8007af0:	d018      	beq.n	8007b24 <HAL_DMA_Start_IT+0x1bc>
 8007af2:	68fb      	ldr	r3, [r7, #12]
 8007af4:	681b      	ldr	r3, [r3, #0]
 8007af6:	4a24      	ldr	r2, [pc, #144]	@ (8007b88 <HAL_DMA_Start_IT+0x220>)
 8007af8:	4293      	cmp	r3, r2
 8007afa:	d013      	beq.n	8007b24 <HAL_DMA_Start_IT+0x1bc>
 8007afc:	68fb      	ldr	r3, [r7, #12]
 8007afe:	681b      	ldr	r3, [r3, #0]
 8007b00:	4a22      	ldr	r2, [pc, #136]	@ (8007b8c <HAL_DMA_Start_IT+0x224>)
 8007b02:	4293      	cmp	r3, r2
 8007b04:	d00e      	beq.n	8007b24 <HAL_DMA_Start_IT+0x1bc>
 8007b06:	68fb      	ldr	r3, [r7, #12]
 8007b08:	681b      	ldr	r3, [r3, #0]
 8007b0a:	4a21      	ldr	r2, [pc, #132]	@ (8007b90 <HAL_DMA_Start_IT+0x228>)
 8007b0c:	4293      	cmp	r3, r2
 8007b0e:	d009      	beq.n	8007b24 <HAL_DMA_Start_IT+0x1bc>
 8007b10:	68fb      	ldr	r3, [r7, #12]
 8007b12:	681b      	ldr	r3, [r3, #0]
 8007b14:	4a1f      	ldr	r2, [pc, #124]	@ (8007b94 <HAL_DMA_Start_IT+0x22c>)
 8007b16:	4293      	cmp	r3, r2
 8007b18:	d004      	beq.n	8007b24 <HAL_DMA_Start_IT+0x1bc>
 8007b1a:	68fb      	ldr	r3, [r7, #12]
 8007b1c:	681b      	ldr	r3, [r3, #0]
 8007b1e:	4a1e      	ldr	r2, [pc, #120]	@ (8007b98 <HAL_DMA_Start_IT+0x230>)
 8007b20:	4293      	cmp	r3, r2
 8007b22:	d101      	bne.n	8007b28 <HAL_DMA_Start_IT+0x1c0>
 8007b24:	2301      	movs	r3, #1
 8007b26:	e000      	b.n	8007b2a <HAL_DMA_Start_IT+0x1c2>
 8007b28:	2300      	movs	r3, #0
 8007b2a:	2b00      	cmp	r3, #0
 8007b2c:	d036      	beq.n	8007b9c <HAL_DMA_Start_IT+0x234>
 8007b2e:	68fb      	ldr	r3, [r7, #12]
 8007b30:	681b      	ldr	r3, [r3, #0]
 8007b32:	681b      	ldr	r3, [r3, #0]
 8007b34:	f023 021e 	bic.w	r2, r3, #30
 8007b38:	68fb      	ldr	r3, [r7, #12]
 8007b3a:	681b      	ldr	r3, [r3, #0]
 8007b3c:	f042 0216 	orr.w	r2, r2, #22
 8007b40:	601a      	str	r2, [r3, #0]
 8007b42:	68fb      	ldr	r3, [r7, #12]
 8007b44:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007b46:	2b00      	cmp	r3, #0
 8007b48:	d03e      	beq.n	8007bc8 <HAL_DMA_Start_IT+0x260>
 8007b4a:	68fb      	ldr	r3, [r7, #12]
 8007b4c:	681b      	ldr	r3, [r3, #0]
 8007b4e:	681a      	ldr	r2, [r3, #0]
 8007b50:	68fb      	ldr	r3, [r7, #12]
 8007b52:	681b      	ldr	r3, [r3, #0]
 8007b54:	f042 0208 	orr.w	r2, r2, #8
 8007b58:	601a      	str	r2, [r3, #0]
 8007b5a:	e035      	b.n	8007bc8 <HAL_DMA_Start_IT+0x260>
 8007b5c:	40020010 	.word	0x40020010
 8007b60:	40020028 	.word	0x40020028
 8007b64:	40020040 	.word	0x40020040
 8007b68:	40020058 	.word	0x40020058
 8007b6c:	40020070 	.word	0x40020070
 8007b70:	40020088 	.word	0x40020088
 8007b74:	400200a0 	.word	0x400200a0
 8007b78:	400200b8 	.word	0x400200b8
 8007b7c:	40020410 	.word	0x40020410
 8007b80:	40020428 	.word	0x40020428
 8007b84:	40020440 	.word	0x40020440
 8007b88:	40020458 	.word	0x40020458
 8007b8c:	40020470 	.word	0x40020470
 8007b90:	40020488 	.word	0x40020488
 8007b94:	400204a0 	.word	0x400204a0
 8007b98:	400204b8 	.word	0x400204b8
 8007b9c:	68fb      	ldr	r3, [r7, #12]
 8007b9e:	681b      	ldr	r3, [r3, #0]
 8007ba0:	681b      	ldr	r3, [r3, #0]
 8007ba2:	f023 020e 	bic.w	r2, r3, #14
 8007ba6:	68fb      	ldr	r3, [r7, #12]
 8007ba8:	681b      	ldr	r3, [r3, #0]
 8007baa:	f042 020a 	orr.w	r2, r2, #10
 8007bae:	601a      	str	r2, [r3, #0]
 8007bb0:	68fb      	ldr	r3, [r7, #12]
 8007bb2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007bb4:	2b00      	cmp	r3, #0
 8007bb6:	d007      	beq.n	8007bc8 <HAL_DMA_Start_IT+0x260>
 8007bb8:	68fb      	ldr	r3, [r7, #12]
 8007bba:	681b      	ldr	r3, [r3, #0]
 8007bbc:	681a      	ldr	r2, [r3, #0]
 8007bbe:	68fb      	ldr	r3, [r7, #12]
 8007bc0:	681b      	ldr	r3, [r3, #0]
 8007bc2:	f042 0204 	orr.w	r2, r2, #4
 8007bc6:	601a      	str	r2, [r3, #0]
 8007bc8:	68fb      	ldr	r3, [r7, #12]
 8007bca:	681b      	ldr	r3, [r3, #0]
 8007bcc:	4a83      	ldr	r2, [pc, #524]	@ (8007ddc <HAL_DMA_Start_IT+0x474>)
 8007bce:	4293      	cmp	r3, r2
 8007bd0:	d072      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007bd2:	68fb      	ldr	r3, [r7, #12]
 8007bd4:	681b      	ldr	r3, [r3, #0]
 8007bd6:	4a82      	ldr	r2, [pc, #520]	@ (8007de0 <HAL_DMA_Start_IT+0x478>)
 8007bd8:	4293      	cmp	r3, r2
 8007bda:	d06d      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007bdc:	68fb      	ldr	r3, [r7, #12]
 8007bde:	681b      	ldr	r3, [r3, #0]
 8007be0:	4a80      	ldr	r2, [pc, #512]	@ (8007de4 <HAL_DMA_Start_IT+0x47c>)
 8007be2:	4293      	cmp	r3, r2
 8007be4:	d068      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007be6:	68fb      	ldr	r3, [r7, #12]
 8007be8:	681b      	ldr	r3, [r3, #0]
 8007bea:	4a7f      	ldr	r2, [pc, #508]	@ (8007de8 <HAL_DMA_Start_IT+0x480>)
 8007bec:	4293      	cmp	r3, r2
 8007bee:	d063      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007bf0:	68fb      	ldr	r3, [r7, #12]
 8007bf2:	681b      	ldr	r3, [r3, #0]
 8007bf4:	4a7d      	ldr	r2, [pc, #500]	@ (8007dec <HAL_DMA_Start_IT+0x484>)
 8007bf6:	4293      	cmp	r3, r2
 8007bf8:	d05e      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007bfa:	68fb      	ldr	r3, [r7, #12]
 8007bfc:	681b      	ldr	r3, [r3, #0]
 8007bfe:	4a7c      	ldr	r2, [pc, #496]	@ (8007df0 <HAL_DMA_Start_IT+0x488>)
 8007c00:	4293      	cmp	r3, r2
 8007c02:	d059      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007c04:	68fb      	ldr	r3, [r7, #12]
 8007c06:	681b      	ldr	r3, [r3, #0]
 8007c08:	4a7a      	ldr	r2, [pc, #488]	@ (8007df4 <HAL_DMA_Start_IT+0x48c>)
 8007c0a:	4293      	cmp	r3, r2
 8007c0c:	d054      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007c0e:	68fb      	ldr	r3, [r7, #12]
 8007c10:	681b      	ldr	r3, [r3, #0]
 8007c12:	4a79      	ldr	r2, [pc, #484]	@ (8007df8 <HAL_DMA_Start_IT+0x490>)
 8007c14:	4293      	cmp	r3, r2
 8007c16:	d04f      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007c18:	68fb      	ldr	r3, [r7, #12]
 8007c1a:	681b      	ldr	r3, [r3, #0]
 8007c1c:	4a77      	ldr	r2, [pc, #476]	@ (8007dfc <HAL_DMA_Start_IT+0x494>)
 8007c1e:	4293      	cmp	r3, r2
 8007c20:	d04a      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007c22:	68fb      	ldr	r3, [r7, #12]
 8007c24:	681b      	ldr	r3, [r3, #0]
 8007c26:	4a76      	ldr	r2, [pc, #472]	@ (8007e00 <HAL_DMA_Start_IT+0x498>)
 8007c28:	4293      	cmp	r3, r2
 8007c2a:	d045      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007c2c:	68fb      	ldr	r3, [r7, #12]
 8007c2e:	681b      	ldr	r3, [r3, #0]
 8007c30:	4a74      	ldr	r2, [pc, #464]	@ (8007e04 <HAL_DMA_Start_IT+0x49c>)
 8007c32:	4293      	cmp	r3, r2
 8007c34:	d040      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007c36:	68fb      	ldr	r3, [r7, #12]
 8007c38:	681b      	ldr	r3, [r3, #0]
 8007c3a:	4a73      	ldr	r2, [pc, #460]	@ (8007e08 <HAL_DMA_Start_IT+0x4a0>)
 8007c3c:	4293      	cmp	r3, r2
 8007c3e:	d03b      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007c40:	68fb      	ldr	r3, [r7, #12]
 8007c42:	681b      	ldr	r3, [r3, #0]
 8007c44:	4a71      	ldr	r2, [pc, #452]	@ (8007e0c <HAL_DMA_Start_IT+0x4a4>)
 8007c46:	4293      	cmp	r3, r2
 8007c48:	d036      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007c4a:	68fb      	ldr	r3, [r7, #12]
 8007c4c:	681b      	ldr	r3, [r3, #0]
 8007c4e:	4a70      	ldr	r2, [pc, #448]	@ (8007e10 <HAL_DMA_Start_IT+0x4a8>)
 8007c50:	4293      	cmp	r3, r2
 8007c52:	d031      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007c54:	68fb      	ldr	r3, [r7, #12]
 8007c56:	681b      	ldr	r3, [r3, #0]
 8007c58:	4a6e      	ldr	r2, [pc, #440]	@ (8007e14 <HAL_DMA_Start_IT+0x4ac>)
 8007c5a:	4293      	cmp	r3, r2
 8007c5c:	d02c      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007c5e:	68fb      	ldr	r3, [r7, #12]
 8007c60:	681b      	ldr	r3, [r3, #0]
 8007c62:	4a6d      	ldr	r2, [pc, #436]	@ (8007e18 <HAL_DMA_Start_IT+0x4b0>)
 8007c64:	4293      	cmp	r3, r2
 8007c66:	d027      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007c68:	68fb      	ldr	r3, [r7, #12]
 8007c6a:	681b      	ldr	r3, [r3, #0]
 8007c6c:	4a6b      	ldr	r2, [pc, #428]	@ (8007e1c <HAL_DMA_Start_IT+0x4b4>)
 8007c6e:	4293      	cmp	r3, r2
 8007c70:	d022      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007c72:	68fb      	ldr	r3, [r7, #12]
 8007c74:	681b      	ldr	r3, [r3, #0]
 8007c76:	4a6a      	ldr	r2, [pc, #424]	@ (8007e20 <HAL_DMA_Start_IT+0x4b8>)
 8007c78:	4293      	cmp	r3, r2
 8007c7a:	d01d      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007c7c:	68fb      	ldr	r3, [r7, #12]
 8007c7e:	681b      	ldr	r3, [r3, #0]
 8007c80:	4a68      	ldr	r2, [pc, #416]	@ (8007e24 <HAL_DMA_Start_IT+0x4bc>)
 8007c82:	4293      	cmp	r3, r2
 8007c84:	d018      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007c86:	68fb      	ldr	r3, [r7, #12]
 8007c88:	681b      	ldr	r3, [r3, #0]
 8007c8a:	4a67      	ldr	r2, [pc, #412]	@ (8007e28 <HAL_DMA_Start_IT+0x4c0>)
 8007c8c:	4293      	cmp	r3, r2
 8007c8e:	d013      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007c90:	68fb      	ldr	r3, [r7, #12]
 8007c92:	681b      	ldr	r3, [r3, #0]
 8007c94:	4a65      	ldr	r2, [pc, #404]	@ (8007e2c <HAL_DMA_Start_IT+0x4c4>)
 8007c96:	4293      	cmp	r3, r2
 8007c98:	d00e      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007c9a:	68fb      	ldr	r3, [r7, #12]
 8007c9c:	681b      	ldr	r3, [r3, #0]
 8007c9e:	4a64      	ldr	r2, [pc, #400]	@ (8007e30 <HAL_DMA_Start_IT+0x4c8>)
 8007ca0:	4293      	cmp	r3, r2
 8007ca2:	d009      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007ca4:	68fb      	ldr	r3, [r7, #12]
 8007ca6:	681b      	ldr	r3, [r3, #0]
 8007ca8:	4a62      	ldr	r2, [pc, #392]	@ (8007e34 <HAL_DMA_Start_IT+0x4cc>)
 8007caa:	4293      	cmp	r3, r2
 8007cac:	d004      	beq.n	8007cb8 <HAL_DMA_Start_IT+0x350>
 8007cae:	68fb      	ldr	r3, [r7, #12]
 8007cb0:	681b      	ldr	r3, [r3, #0]
 8007cb2:	4a61      	ldr	r2, [pc, #388]	@ (8007e38 <HAL_DMA_Start_IT+0x4d0>)
 8007cb4:	4293      	cmp	r3, r2
 8007cb6:	d101      	bne.n	8007cbc <HAL_DMA_Start_IT+0x354>
 8007cb8:	2301      	movs	r3, #1
 8007cba:	e000      	b.n	8007cbe <HAL_DMA_Start_IT+0x356>
 8007cbc:	2300      	movs	r3, #0
 8007cbe:	2b00      	cmp	r3, #0
 8007cc0:	d01a      	beq.n	8007cf8 <HAL_DMA_Start_IT+0x390>
 8007cc2:	68fb      	ldr	r3, [r7, #12]
 8007cc4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007cc6:	681b      	ldr	r3, [r3, #0]
 8007cc8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8007ccc:	2b00      	cmp	r3, #0
 8007cce:	d007      	beq.n	8007ce0 <HAL_DMA_Start_IT+0x378>
 8007cd0:	68fb      	ldr	r3, [r7, #12]
 8007cd2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007cd4:	681a      	ldr	r2, [r3, #0]
 8007cd6:	68fb      	ldr	r3, [r7, #12]
 8007cd8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007cda:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8007cde:	601a      	str	r2, [r3, #0]
 8007ce0:	68fb      	ldr	r3, [r7, #12]
 8007ce2:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8007ce4:	2b00      	cmp	r3, #0
 8007ce6:	d007      	beq.n	8007cf8 <HAL_DMA_Start_IT+0x390>
 8007ce8:	68fb      	ldr	r3, [r7, #12]
 8007cea:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8007cec:	681a      	ldr	r2, [r3, #0]
 8007cee:	68fb      	ldr	r3, [r7, #12]
 8007cf0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8007cf2:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8007cf6:	601a      	str	r2, [r3, #0]
 8007cf8:	68fb      	ldr	r3, [r7, #12]
 8007cfa:	681b      	ldr	r3, [r3, #0]
 8007cfc:	4a37      	ldr	r2, [pc, #220]	@ (8007ddc <HAL_DMA_Start_IT+0x474>)
 8007cfe:	4293      	cmp	r3, r2
 8007d00:	d04a      	beq.n	8007d98 <HAL_DMA_Start_IT+0x430>
 8007d02:	68fb      	ldr	r3, [r7, #12]
 8007d04:	681b      	ldr	r3, [r3, #0]
 8007d06:	4a36      	ldr	r2, [pc, #216]	@ (8007de0 <HAL_DMA_Start_IT+0x478>)
 8007d08:	4293      	cmp	r3, r2
 8007d0a:	d045      	beq.n	8007d98 <HAL_DMA_Start_IT+0x430>
 8007d0c:	68fb      	ldr	r3, [r7, #12]
 8007d0e:	681b      	ldr	r3, [r3, #0]
 8007d10:	4a34      	ldr	r2, [pc, #208]	@ (8007de4 <HAL_DMA_Start_IT+0x47c>)
 8007d12:	4293      	cmp	r3, r2
 8007d14:	d040      	beq.n	8007d98 <HAL_DMA_Start_IT+0x430>
 8007d16:	68fb      	ldr	r3, [r7, #12]
 8007d18:	681b      	ldr	r3, [r3, #0]
 8007d1a:	4a33      	ldr	r2, [pc, #204]	@ (8007de8 <HAL_DMA_Start_IT+0x480>)
 8007d1c:	4293      	cmp	r3, r2
 8007d1e:	d03b      	beq.n	8007d98 <HAL_DMA_Start_IT+0x430>
 8007d20:	68fb      	ldr	r3, [r7, #12]
 8007d22:	681b      	ldr	r3, [r3, #0]
 8007d24:	4a31      	ldr	r2, [pc, #196]	@ (8007dec <HAL_DMA_Start_IT+0x484>)
 8007d26:	4293      	cmp	r3, r2
 8007d28:	d036      	beq.n	8007d98 <HAL_DMA_Start_IT+0x430>
 8007d2a:	68fb      	ldr	r3, [r7, #12]
 8007d2c:	681b      	ldr	r3, [r3, #0]
 8007d2e:	4a30      	ldr	r2, [pc, #192]	@ (8007df0 <HAL_DMA_Start_IT+0x488>)
 8007d30:	4293      	cmp	r3, r2
 8007d32:	d031      	beq.n	8007d98 <HAL_DMA_Start_IT+0x430>
 8007d34:	68fb      	ldr	r3, [r7, #12]
 8007d36:	681b      	ldr	r3, [r3, #0]
 8007d38:	4a2e      	ldr	r2, [pc, #184]	@ (8007df4 <HAL_DMA_Start_IT+0x48c>)
 8007d3a:	4293      	cmp	r3, r2
 8007d3c:	d02c      	beq.n	8007d98 <HAL_DMA_Start_IT+0x430>
 8007d3e:	68fb      	ldr	r3, [r7, #12]
 8007d40:	681b      	ldr	r3, [r3, #0]
 8007d42:	4a2d      	ldr	r2, [pc, #180]	@ (8007df8 <HAL_DMA_Start_IT+0x490>)
 8007d44:	4293      	cmp	r3, r2
 8007d46:	d027      	beq.n	8007d98 <HAL_DMA_Start_IT+0x430>
 8007d48:	68fb      	ldr	r3, [r7, #12]
 8007d4a:	681b      	ldr	r3, [r3, #0]
 8007d4c:	4a2b      	ldr	r2, [pc, #172]	@ (8007dfc <HAL_DMA_Start_IT+0x494>)
 8007d4e:	4293      	cmp	r3, r2
 8007d50:	d022      	beq.n	8007d98 <HAL_DMA_Start_IT+0x430>
 8007d52:	68fb      	ldr	r3, [r7, #12]
 8007d54:	681b      	ldr	r3, [r3, #0]
 8007d56:	4a2a      	ldr	r2, [pc, #168]	@ (8007e00 <HAL_DMA_Start_IT+0x498>)
 8007d58:	4293      	cmp	r3, r2
 8007d5a:	d01d      	beq.n	8007d98 <HAL_DMA_Start_IT+0x430>
 8007d5c:	68fb      	ldr	r3, [r7, #12]
 8007d5e:	681b      	ldr	r3, [r3, #0]
 8007d60:	4a28      	ldr	r2, [pc, #160]	@ (8007e04 <HAL_DMA_Start_IT+0x49c>)
 8007d62:	4293      	cmp	r3, r2
 8007d64:	d018      	beq.n	8007d98 <HAL_DMA_Start_IT+0x430>
 8007d66:	68fb      	ldr	r3, [r7, #12]
 8007d68:	681b      	ldr	r3, [r3, #0]
 8007d6a:	4a27      	ldr	r2, [pc, #156]	@ (8007e08 <HAL_DMA_Start_IT+0x4a0>)
 8007d6c:	4293      	cmp	r3, r2
 8007d6e:	d013      	beq.n	8007d98 <HAL_DMA_Start_IT+0x430>
 8007d70:	68fb      	ldr	r3, [r7, #12]
 8007d72:	681b      	ldr	r3, [r3, #0]
 8007d74:	4a25      	ldr	r2, [pc, #148]	@ (8007e0c <HAL_DMA_Start_IT+0x4a4>)
 8007d76:	4293      	cmp	r3, r2
 8007d78:	d00e      	beq.n	8007d98 <HAL_DMA_Start_IT+0x430>
 8007d7a:	68fb      	ldr	r3, [r7, #12]
 8007d7c:	681b      	ldr	r3, [r3, #0]
 8007d7e:	4a24      	ldr	r2, [pc, #144]	@ (8007e10 <HAL_DMA_Start_IT+0x4a8>)
 8007d80:	4293      	cmp	r3, r2
 8007d82:	d009      	beq.n	8007d98 <HAL_DMA_Start_IT+0x430>
 8007d84:	68fb      	ldr	r3, [r7, #12]
 8007d86:	681b      	ldr	r3, [r3, #0]
 8007d88:	4a22      	ldr	r2, [pc, #136]	@ (8007e14 <HAL_DMA_Start_IT+0x4ac>)
 8007d8a:	4293      	cmp	r3, r2
 8007d8c:	d004      	beq.n	8007d98 <HAL_DMA_Start_IT+0x430>
 8007d8e:	68fb      	ldr	r3, [r7, #12]
 8007d90:	681b      	ldr	r3, [r3, #0]
 8007d92:	4a21      	ldr	r2, [pc, #132]	@ (8007e18 <HAL_DMA_Start_IT+0x4b0>)
 8007d94:	4293      	cmp	r3, r2
 8007d96:	d108      	bne.n	8007daa <HAL_DMA_Start_IT+0x442>
 8007d98:	68fb      	ldr	r3, [r7, #12]
 8007d9a:	681b      	ldr	r3, [r3, #0]
 8007d9c:	681a      	ldr	r2, [r3, #0]
 8007d9e:	68fb      	ldr	r3, [r7, #12]
 8007da0:	681b      	ldr	r3, [r3, #0]
 8007da2:	f042 0201 	orr.w	r2, r2, #1
 8007da6:	601a      	str	r2, [r3, #0]
 8007da8:	e012      	b.n	8007dd0 <HAL_DMA_Start_IT+0x468>
 8007daa:	68fb      	ldr	r3, [r7, #12]
 8007dac:	681b      	ldr	r3, [r3, #0]
 8007dae:	681a      	ldr	r2, [r3, #0]
 8007db0:	68fb      	ldr	r3, [r7, #12]
 8007db2:	681b      	ldr	r3, [r3, #0]
 8007db4:	f042 0201 	orr.w	r2, r2, #1
 8007db8:	601a      	str	r2, [r3, #0]
 8007dba:	e009      	b.n	8007dd0 <HAL_DMA_Start_IT+0x468>
 8007dbc:	68fb      	ldr	r3, [r7, #12]
 8007dbe:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8007dc2:	655a      	str	r2, [r3, #84]	@ 0x54
 8007dc4:	68fb      	ldr	r3, [r7, #12]
 8007dc6:	2200      	movs	r2, #0
 8007dc8:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8007dcc:	2301      	movs	r3, #1
 8007dce:	75fb      	strb	r3, [r7, #23]
 8007dd0:	7dfb      	ldrb	r3, [r7, #23]
 8007dd2:	4618      	mov	r0, r3
 8007dd4:	3718      	adds	r7, #24
 8007dd6:	46bd      	mov	sp, r7
 8007dd8:	bd80      	pop	{r7, pc}
 8007dda:	bf00      	nop
 8007ddc:	40020010 	.word	0x40020010
 8007de0:	40020028 	.word	0x40020028
 8007de4:	40020040 	.word	0x40020040
 8007de8:	40020058 	.word	0x40020058
 8007dec:	40020070 	.word	0x40020070
 8007df0:	40020088 	.word	0x40020088
 8007df4:	400200a0 	.word	0x400200a0
 8007df8:	400200b8 	.word	0x400200b8
 8007dfc:	40020410 	.word	0x40020410
 8007e00:	40020428 	.word	0x40020428
 8007e04:	40020440 	.word	0x40020440
 8007e08:	40020458 	.word	0x40020458
 8007e0c:	40020470 	.word	0x40020470
 8007e10:	40020488 	.word	0x40020488
 8007e14:	400204a0 	.word	0x400204a0
 8007e18:	400204b8 	.word	0x400204b8
 8007e1c:	58025408 	.word	0x58025408
 8007e20:	5802541c 	.word	0x5802541c
 8007e24:	58025430 	.word	0x58025430
 8007e28:	58025444 	.word	0x58025444
 8007e2c:	58025458 	.word	0x58025458
 8007e30:	5802546c 	.word	0x5802546c
 8007e34:	58025480 	.word	0x58025480
 8007e38:	58025494 	.word	0x58025494

08007e3c <HAL_DMA_IRQHandler>:
 8007e3c:	b580      	push	{r7, lr}
 8007e3e:	b08a      	sub	sp, #40	@ 0x28
 8007e40:	af00      	add	r7, sp, #0
 8007e42:	6078      	str	r0, [r7, #4]
 8007e44:	2300      	movs	r3, #0
 8007e46:	60fb      	str	r3, [r7, #12]
 8007e48:	4b67      	ldr	r3, [pc, #412]	@ (8007fe8 <HAL_DMA_IRQHandler+0x1ac>)
 8007e4a:	681b      	ldr	r3, [r3, #0]
 8007e4c:	4a67      	ldr	r2, [pc, #412]	@ (8007fec <HAL_DMA_IRQHandler+0x1b0>)
 8007e4e:	fba2 2303 	umull	r2, r3, r2, r3
 8007e52:	0a9b      	lsrs	r3, r3, #10
 8007e54:	627b      	str	r3, [r7, #36]	@ 0x24
 8007e56:	687b      	ldr	r3, [r7, #4]
 8007e58:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007e5a:	623b      	str	r3, [r7, #32]
 8007e5c:	687b      	ldr	r3, [r7, #4]
 8007e5e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007e60:	61fb      	str	r3, [r7, #28]
 8007e62:	6a3b      	ldr	r3, [r7, #32]
 8007e64:	681b      	ldr	r3, [r3, #0]
 8007e66:	61bb      	str	r3, [r7, #24]
 8007e68:	69fb      	ldr	r3, [r7, #28]
 8007e6a:	681b      	ldr	r3, [r3, #0]
 8007e6c:	617b      	str	r3, [r7, #20]
 8007e6e:	687b      	ldr	r3, [r7, #4]
 8007e70:	681b      	ldr	r3, [r3, #0]
 8007e72:	4a5f      	ldr	r2, [pc, #380]	@ (8007ff0 <HAL_DMA_IRQHandler+0x1b4>)
 8007e74:	4293      	cmp	r3, r2
 8007e76:	d04a      	beq.n	8007f0e <HAL_DMA_IRQHandler+0xd2>
 8007e78:	687b      	ldr	r3, [r7, #4]
 8007e7a:	681b      	ldr	r3, [r3, #0]
 8007e7c:	4a5d      	ldr	r2, [pc, #372]	@ (8007ff4 <HAL_DMA_IRQHandler+0x1b8>)
 8007e7e:	4293      	cmp	r3, r2
 8007e80:	d045      	beq.n	8007f0e <HAL_DMA_IRQHandler+0xd2>
 8007e82:	687b      	ldr	r3, [r7, #4]
 8007e84:	681b      	ldr	r3, [r3, #0]
 8007e86:	4a5c      	ldr	r2, [pc, #368]	@ (8007ff8 <HAL_DMA_IRQHandler+0x1bc>)
 8007e88:	4293      	cmp	r3, r2
 8007e8a:	d040      	beq.n	8007f0e <HAL_DMA_IRQHandler+0xd2>
 8007e8c:	687b      	ldr	r3, [r7, #4]
 8007e8e:	681b      	ldr	r3, [r3, #0]
 8007e90:	4a5a      	ldr	r2, [pc, #360]	@ (8007ffc <HAL_DMA_IRQHandler+0x1c0>)
 8007e92:	4293      	cmp	r3, r2
 8007e94:	d03b      	beq.n	8007f0e <HAL_DMA_IRQHandler+0xd2>
 8007e96:	687b      	ldr	r3, [r7, #4]
 8007e98:	681b      	ldr	r3, [r3, #0]
 8007e9a:	4a59      	ldr	r2, [pc, #356]	@ (8008000 <HAL_DMA_IRQHandler+0x1c4>)
 8007e9c:	4293      	cmp	r3, r2
 8007e9e:	d036      	beq.n	8007f0e <HAL_DMA_IRQHandler+0xd2>
 8007ea0:	687b      	ldr	r3, [r7, #4]
 8007ea2:	681b      	ldr	r3, [r3, #0]
 8007ea4:	4a57      	ldr	r2, [pc, #348]	@ (8008004 <HAL_DMA_IRQHandler+0x1c8>)
 8007ea6:	4293      	cmp	r3, r2
 8007ea8:	d031      	beq.n	8007f0e <HAL_DMA_IRQHandler+0xd2>
 8007eaa:	687b      	ldr	r3, [r7, #4]
 8007eac:	681b      	ldr	r3, [r3, #0]
 8007eae:	4a56      	ldr	r2, [pc, #344]	@ (8008008 <HAL_DMA_IRQHandler+0x1cc>)
 8007eb0:	4293      	cmp	r3, r2
 8007eb2:	d02c      	beq.n	8007f0e <HAL_DMA_IRQHandler+0xd2>
 8007eb4:	687b      	ldr	r3, [r7, #4]
 8007eb6:	681b      	ldr	r3, [r3, #0]
 8007eb8:	4a54      	ldr	r2, [pc, #336]	@ (800800c <HAL_DMA_IRQHandler+0x1d0>)
 8007eba:	4293      	cmp	r3, r2
 8007ebc:	d027      	beq.n	8007f0e <HAL_DMA_IRQHandler+0xd2>
 8007ebe:	687b      	ldr	r3, [r7, #4]
 8007ec0:	681b      	ldr	r3, [r3, #0]
 8007ec2:	4a53      	ldr	r2, [pc, #332]	@ (8008010 <HAL_DMA_IRQHandler+0x1d4>)
 8007ec4:	4293      	cmp	r3, r2
 8007ec6:	d022      	beq.n	8007f0e <HAL_DMA_IRQHandler+0xd2>
 8007ec8:	687b      	ldr	r3, [r7, #4]
 8007eca:	681b      	ldr	r3, [r3, #0]
 8007ecc:	4a51      	ldr	r2, [pc, #324]	@ (8008014 <HAL_DMA_IRQHandler+0x1d8>)
 8007ece:	4293      	cmp	r3, r2
 8007ed0:	d01d      	beq.n	8007f0e <HAL_DMA_IRQHandler+0xd2>
 8007ed2:	687b      	ldr	r3, [r7, #4]
 8007ed4:	681b      	ldr	r3, [r3, #0]
 8007ed6:	4a50      	ldr	r2, [pc, #320]	@ (8008018 <HAL_DMA_IRQHandler+0x1dc>)
 8007ed8:	4293      	cmp	r3, r2
 8007eda:	d018      	beq.n	8007f0e <HAL_DMA_IRQHandler+0xd2>
 8007edc:	687b      	ldr	r3, [r7, #4]
 8007ede:	681b      	ldr	r3, [r3, #0]
 8007ee0:	4a4e      	ldr	r2, [pc, #312]	@ (800801c <HAL_DMA_IRQHandler+0x1e0>)
 8007ee2:	4293      	cmp	r3, r2
 8007ee4:	d013      	beq.n	8007f0e <HAL_DMA_IRQHandler+0xd2>
 8007ee6:	687b      	ldr	r3, [r7, #4]
 8007ee8:	681b      	ldr	r3, [r3, #0]
 8007eea:	4a4d      	ldr	r2, [pc, #308]	@ (8008020 <HAL_DMA_IRQHandler+0x1e4>)
 8007eec:	4293      	cmp	r3, r2
 8007eee:	d00e      	beq.n	8007f0e <HAL_DMA_IRQHandler+0xd2>
 8007ef0:	687b      	ldr	r3, [r7, #4]
 8007ef2:	681b      	ldr	r3, [r3, #0]
 8007ef4:	4a4b      	ldr	r2, [pc, #300]	@ (8008024 <HAL_DMA_IRQHandler+0x1e8>)
 8007ef6:	4293      	cmp	r3, r2
 8007ef8:	d009      	beq.n	8007f0e <HAL_DMA_IRQHandler+0xd2>
 8007efa:	687b      	ldr	r3, [r7, #4]
 8007efc:	681b      	ldr	r3, [r3, #0]
 8007efe:	4a4a      	ldr	r2, [pc, #296]	@ (8008028 <HAL_DMA_IRQHandler+0x1ec>)
 8007f00:	4293      	cmp	r3, r2
 8007f02:	d004      	beq.n	8007f0e <HAL_DMA_IRQHandler+0xd2>
 8007f04:	687b      	ldr	r3, [r7, #4]
 8007f06:	681b      	ldr	r3, [r3, #0]
 8007f08:	4a48      	ldr	r2, [pc, #288]	@ (800802c <HAL_DMA_IRQHandler+0x1f0>)
 8007f0a:	4293      	cmp	r3, r2
 8007f0c:	d101      	bne.n	8007f12 <HAL_DMA_IRQHandler+0xd6>
 8007f0e:	2301      	movs	r3, #1
 8007f10:	e000      	b.n	8007f14 <HAL_DMA_IRQHandler+0xd8>
 8007f12:	2300      	movs	r3, #0
 8007f14:	2b00      	cmp	r3, #0
 8007f16:	f000 842b 	beq.w	8008770 <HAL_DMA_IRQHandler+0x934>
 8007f1a:	687b      	ldr	r3, [r7, #4]
 8007f1c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8007f1e:	f003 031f 	and.w	r3, r3, #31
 8007f22:	2208      	movs	r2, #8
 8007f24:	409a      	lsls	r2, r3
 8007f26:	69bb      	ldr	r3, [r7, #24]
 8007f28:	4013      	ands	r3, r2
 8007f2a:	2b00      	cmp	r3, #0
 8007f2c:	f000 80a2 	beq.w	8008074 <HAL_DMA_IRQHandler+0x238>
 8007f30:	687b      	ldr	r3, [r7, #4]
 8007f32:	681b      	ldr	r3, [r3, #0]
 8007f34:	4a2e      	ldr	r2, [pc, #184]	@ (8007ff0 <HAL_DMA_IRQHandler+0x1b4>)
 8007f36:	4293      	cmp	r3, r2
 8007f38:	d04a      	beq.n	8007fd0 <HAL_DMA_IRQHandler+0x194>
 8007f3a:	687b      	ldr	r3, [r7, #4]
 8007f3c:	681b      	ldr	r3, [r3, #0]
 8007f3e:	4a2d      	ldr	r2, [pc, #180]	@ (8007ff4 <HAL_DMA_IRQHandler+0x1b8>)
 8007f40:	4293      	cmp	r3, r2
 8007f42:	d045      	beq.n	8007fd0 <HAL_DMA_IRQHandler+0x194>
 8007f44:	687b      	ldr	r3, [r7, #4]
 8007f46:	681b      	ldr	r3, [r3, #0]
 8007f48:	4a2b      	ldr	r2, [pc, #172]	@ (8007ff8 <HAL_DMA_IRQHandler+0x1bc>)
 8007f4a:	4293      	cmp	r3, r2
 8007f4c:	d040      	beq.n	8007fd0 <HAL_DMA_IRQHandler+0x194>
 8007f4e:	687b      	ldr	r3, [r7, #4]
 8007f50:	681b      	ldr	r3, [r3, #0]
 8007f52:	4a2a      	ldr	r2, [pc, #168]	@ (8007ffc <HAL_DMA_IRQHandler+0x1c0>)
 8007f54:	4293      	cmp	r3, r2
 8007f56:	d03b      	beq.n	8007fd0 <HAL_DMA_IRQHandler+0x194>
 8007f58:	687b      	ldr	r3, [r7, #4]
 8007f5a:	681b      	ldr	r3, [r3, #0]
 8007f5c:	4a28      	ldr	r2, [pc, #160]	@ (8008000 <HAL_DMA_IRQHandler+0x1c4>)
 8007f5e:	4293      	cmp	r3, r2
 8007f60:	d036      	beq.n	8007fd0 <HAL_DMA_IRQHandler+0x194>
 8007f62:	687b      	ldr	r3, [r7, #4]
 8007f64:	681b      	ldr	r3, [r3, #0]
 8007f66:	4a27      	ldr	r2, [pc, #156]	@ (8008004 <HAL_DMA_IRQHandler+0x1c8>)
 8007f68:	4293      	cmp	r3, r2
 8007f6a:	d031      	beq.n	8007fd0 <HAL_DMA_IRQHandler+0x194>
 8007f6c:	687b      	ldr	r3, [r7, #4]
 8007f6e:	681b      	ldr	r3, [r3, #0]
 8007f70:	4a25      	ldr	r2, [pc, #148]	@ (8008008 <HAL_DMA_IRQHandler+0x1cc>)
 8007f72:	4293      	cmp	r3, r2
 8007f74:	d02c      	beq.n	8007fd0 <HAL_DMA_IRQHandler+0x194>
 8007f76:	687b      	ldr	r3, [r7, #4]
 8007f78:	681b      	ldr	r3, [r3, #0]
 8007f7a:	4a24      	ldr	r2, [pc, #144]	@ (800800c <HAL_DMA_IRQHandler+0x1d0>)
 8007f7c:	4293      	cmp	r3, r2
 8007f7e:	d027      	beq.n	8007fd0 <HAL_DMA_IRQHandler+0x194>
 8007f80:	687b      	ldr	r3, [r7, #4]
 8007f82:	681b      	ldr	r3, [r3, #0]
 8007f84:	4a22      	ldr	r2, [pc, #136]	@ (8008010 <HAL_DMA_IRQHandler+0x1d4>)
 8007f86:	4293      	cmp	r3, r2
 8007f88:	d022      	beq.n	8007fd0 <HAL_DMA_IRQHandler+0x194>
 8007f8a:	687b      	ldr	r3, [r7, #4]
 8007f8c:	681b      	ldr	r3, [r3, #0]
 8007f8e:	4a21      	ldr	r2, [pc, #132]	@ (8008014 <HAL_DMA_IRQHandler+0x1d8>)
 8007f90:	4293      	cmp	r3, r2
 8007f92:	d01d      	beq.n	8007fd0 <HAL_DMA_IRQHandler+0x194>
 8007f94:	687b      	ldr	r3, [r7, #4]
 8007f96:	681b      	ldr	r3, [r3, #0]
 8007f98:	4a1f      	ldr	r2, [pc, #124]	@ (8008018 <HAL_DMA_IRQHandler+0x1dc>)
 8007f9a:	4293      	cmp	r3, r2
 8007f9c:	d018      	beq.n	8007fd0 <HAL_DMA_IRQHandler+0x194>
 8007f9e:	687b      	ldr	r3, [r7, #4]
 8007fa0:	681b      	ldr	r3, [r3, #0]
 8007fa2:	4a1e      	ldr	r2, [pc, #120]	@ (800801c <HAL_DMA_IRQHandler+0x1e0>)
 8007fa4:	4293      	cmp	r3, r2
 8007fa6:	d013      	beq.n	8007fd0 <HAL_DMA_IRQHandler+0x194>
 8007fa8:	687b      	ldr	r3, [r7, #4]
 8007faa:	681b      	ldr	r3, [r3, #0]
 8007fac:	4a1c      	ldr	r2, [pc, #112]	@ (8008020 <HAL_DMA_IRQHandler+0x1e4>)
 8007fae:	4293      	cmp	r3, r2
 8007fb0:	d00e      	beq.n	8007fd0 <HAL_DMA_IRQHandler+0x194>
 8007fb2:	687b      	ldr	r3, [r7, #4]
 8007fb4:	681b      	ldr	r3, [r3, #0]
 8007fb6:	4a1b      	ldr	r2, [pc, #108]	@ (8008024 <HAL_DMA_IRQHandler+0x1e8>)
 8007fb8:	4293      	cmp	r3, r2
 8007fba:	d009      	beq.n	8007fd0 <HAL_DMA_IRQHandler+0x194>
 8007fbc:	687b      	ldr	r3, [r7, #4]
 8007fbe:	681b      	ldr	r3, [r3, #0]
 8007fc0:	4a19      	ldr	r2, [pc, #100]	@ (8008028 <HAL_DMA_IRQHandler+0x1ec>)
 8007fc2:	4293      	cmp	r3, r2
 8007fc4:	d004      	beq.n	8007fd0 <HAL_DMA_IRQHandler+0x194>
 8007fc6:	687b      	ldr	r3, [r7, #4]
 8007fc8:	681b      	ldr	r3, [r3, #0]
 8007fca:	4a18      	ldr	r2, [pc, #96]	@ (800802c <HAL_DMA_IRQHandler+0x1f0>)
 8007fcc:	4293      	cmp	r3, r2
 8007fce:	d12f      	bne.n	8008030 <HAL_DMA_IRQHandler+0x1f4>
 8007fd0:	687b      	ldr	r3, [r7, #4]
 8007fd2:	681b      	ldr	r3, [r3, #0]
 8007fd4:	681b      	ldr	r3, [r3, #0]
 8007fd6:	f003 0304 	and.w	r3, r3, #4
 8007fda:	2b00      	cmp	r3, #0
 8007fdc:	bf14      	ite	ne
 8007fde:	2301      	movne	r3, #1
 8007fe0:	2300      	moveq	r3, #0
 8007fe2:	b2db      	uxtb	r3, r3
 8007fe4:	e02e      	b.n	8008044 <HAL_DMA_IRQHandler+0x208>
 8007fe6:	bf00      	nop
 8007fe8:	24000000 	.word	0x24000000
 8007fec:	1b4e81b5 	.word	0x1b4e81b5
 8007ff0:	40020010 	.word	0x40020010
 8007ff4:	40020028 	.word	0x40020028
 8007ff8:	40020040 	.word	0x40020040
 8007ffc:	40020058 	.word	0x40020058
 8008000:	40020070 	.word	0x40020070
 8008004:	40020088 	.word	0x40020088
 8008008:	400200a0 	.word	0x400200a0
 800800c:	400200b8 	.word	0x400200b8
 8008010:	40020410 	.word	0x40020410
 8008014:	40020428 	.word	0x40020428
 8008018:	40020440 	.word	0x40020440
 800801c:	40020458 	.word	0x40020458
 8008020:	40020470 	.word	0x40020470
 8008024:	40020488 	.word	0x40020488
 8008028:	400204a0 	.word	0x400204a0
 800802c:	400204b8 	.word	0x400204b8
 8008030:	687b      	ldr	r3, [r7, #4]
 8008032:	681b      	ldr	r3, [r3, #0]
 8008034:	681b      	ldr	r3, [r3, #0]
 8008036:	f003 0308 	and.w	r3, r3, #8
 800803a:	2b00      	cmp	r3, #0
 800803c:	bf14      	ite	ne
 800803e:	2301      	movne	r3, #1
 8008040:	2300      	moveq	r3, #0
 8008042:	b2db      	uxtb	r3, r3
 8008044:	2b00      	cmp	r3, #0
 8008046:	d015      	beq.n	8008074 <HAL_DMA_IRQHandler+0x238>
 8008048:	687b      	ldr	r3, [r7, #4]
 800804a:	681b      	ldr	r3, [r3, #0]
 800804c:	681a      	ldr	r2, [r3, #0]
 800804e:	687b      	ldr	r3, [r7, #4]
 8008050:	681b      	ldr	r3, [r3, #0]
 8008052:	f022 0204 	bic.w	r2, r2, #4
 8008056:	601a      	str	r2, [r3, #0]
 8008058:	687b      	ldr	r3, [r7, #4]
 800805a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800805c:	f003 031f 	and.w	r3, r3, #31
 8008060:	2208      	movs	r2, #8
 8008062:	409a      	lsls	r2, r3
 8008064:	6a3b      	ldr	r3, [r7, #32]
 8008066:	609a      	str	r2, [r3, #8]
 8008068:	687b      	ldr	r3, [r7, #4]
 800806a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800806c:	f043 0201 	orr.w	r2, r3, #1
 8008070:	687b      	ldr	r3, [r7, #4]
 8008072:	655a      	str	r2, [r3, #84]	@ 0x54
 8008074:	687b      	ldr	r3, [r7, #4]
 8008076:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008078:	f003 031f 	and.w	r3, r3, #31
 800807c:	69ba      	ldr	r2, [r7, #24]
 800807e:	fa22 f303 	lsr.w	r3, r2, r3
 8008082:	f003 0301 	and.w	r3, r3, #1
 8008086:	2b00      	cmp	r3, #0
 8008088:	d06e      	beq.n	8008168 <HAL_DMA_IRQHandler+0x32c>
 800808a:	687b      	ldr	r3, [r7, #4]
 800808c:	681b      	ldr	r3, [r3, #0]
 800808e:	4a69      	ldr	r2, [pc, #420]	@ (8008234 <HAL_DMA_IRQHandler+0x3f8>)
 8008090:	4293      	cmp	r3, r2
 8008092:	d04a      	beq.n	800812a <HAL_DMA_IRQHandler+0x2ee>
 8008094:	687b      	ldr	r3, [r7, #4]
 8008096:	681b      	ldr	r3, [r3, #0]
 8008098:	4a67      	ldr	r2, [pc, #412]	@ (8008238 <HAL_DMA_IRQHandler+0x3fc>)
 800809a:	4293      	cmp	r3, r2
 800809c:	d045      	beq.n	800812a <HAL_DMA_IRQHandler+0x2ee>
 800809e:	687b      	ldr	r3, [r7, #4]
 80080a0:	681b      	ldr	r3, [r3, #0]
 80080a2:	4a66      	ldr	r2, [pc, #408]	@ (800823c <HAL_DMA_IRQHandler+0x400>)
 80080a4:	4293      	cmp	r3, r2
 80080a6:	d040      	beq.n	800812a <HAL_DMA_IRQHandler+0x2ee>
 80080a8:	687b      	ldr	r3, [r7, #4]
 80080aa:	681b      	ldr	r3, [r3, #0]
 80080ac:	4a64      	ldr	r2, [pc, #400]	@ (8008240 <HAL_DMA_IRQHandler+0x404>)
 80080ae:	4293      	cmp	r3, r2
 80080b0:	d03b      	beq.n	800812a <HAL_DMA_IRQHandler+0x2ee>
 80080b2:	687b      	ldr	r3, [r7, #4]
 80080b4:	681b      	ldr	r3, [r3, #0]
 80080b6:	4a63      	ldr	r2, [pc, #396]	@ (8008244 <HAL_DMA_IRQHandler+0x408>)
 80080b8:	4293      	cmp	r3, r2
 80080ba:	d036      	beq.n	800812a <HAL_DMA_IRQHandler+0x2ee>
 80080bc:	687b      	ldr	r3, [r7, #4]
 80080be:	681b      	ldr	r3, [r3, #0]
 80080c0:	4a61      	ldr	r2, [pc, #388]	@ (8008248 <HAL_DMA_IRQHandler+0x40c>)
 80080c2:	4293      	cmp	r3, r2
 80080c4:	d031      	beq.n	800812a <HAL_DMA_IRQHandler+0x2ee>
 80080c6:	687b      	ldr	r3, [r7, #4]
 80080c8:	681b      	ldr	r3, [r3, #0]
 80080ca:	4a60      	ldr	r2, [pc, #384]	@ (800824c <HAL_DMA_IRQHandler+0x410>)
 80080cc:	4293      	cmp	r3, r2
 80080ce:	d02c      	beq.n	800812a <HAL_DMA_IRQHandler+0x2ee>
 80080d0:	687b      	ldr	r3, [r7, #4]
 80080d2:	681b      	ldr	r3, [r3, #0]
 80080d4:	4a5e      	ldr	r2, [pc, #376]	@ (8008250 <HAL_DMA_IRQHandler+0x414>)
 80080d6:	4293      	cmp	r3, r2
 80080d8:	d027      	beq.n	800812a <HAL_DMA_IRQHandler+0x2ee>
 80080da:	687b      	ldr	r3, [r7, #4]
 80080dc:	681b      	ldr	r3, [r3, #0]
 80080de:	4a5d      	ldr	r2, [pc, #372]	@ (8008254 <HAL_DMA_IRQHandler+0x418>)
 80080e0:	4293      	cmp	r3, r2
 80080e2:	d022      	beq.n	800812a <HAL_DMA_IRQHandler+0x2ee>
 80080e4:	687b      	ldr	r3, [r7, #4]
 80080e6:	681b      	ldr	r3, [r3, #0]
 80080e8:	4a5b      	ldr	r2, [pc, #364]	@ (8008258 <HAL_DMA_IRQHandler+0x41c>)
 80080ea:	4293      	cmp	r3, r2
 80080ec:	d01d      	beq.n	800812a <HAL_DMA_IRQHandler+0x2ee>
 80080ee:	687b      	ldr	r3, [r7, #4]
 80080f0:	681b      	ldr	r3, [r3, #0]
 80080f2:	4a5a      	ldr	r2, [pc, #360]	@ (800825c <HAL_DMA_IRQHandler+0x420>)
 80080f4:	4293      	cmp	r3, r2
 80080f6:	d018      	beq.n	800812a <HAL_DMA_IRQHandler+0x2ee>
 80080f8:	687b      	ldr	r3, [r7, #4]
 80080fa:	681b      	ldr	r3, [r3, #0]
 80080fc:	4a58      	ldr	r2, [pc, #352]	@ (8008260 <HAL_DMA_IRQHandler+0x424>)
 80080fe:	4293      	cmp	r3, r2
 8008100:	d013      	beq.n	800812a <HAL_DMA_IRQHandler+0x2ee>
 8008102:	687b      	ldr	r3, [r7, #4]
 8008104:	681b      	ldr	r3, [r3, #0]
 8008106:	4a57      	ldr	r2, [pc, #348]	@ (8008264 <HAL_DMA_IRQHandler+0x428>)
 8008108:	4293      	cmp	r3, r2
 800810a:	d00e      	beq.n	800812a <HAL_DMA_IRQHandler+0x2ee>
 800810c:	687b      	ldr	r3, [r7, #4]
 800810e:	681b      	ldr	r3, [r3, #0]
 8008110:	4a55      	ldr	r2, [pc, #340]	@ (8008268 <HAL_DMA_IRQHandler+0x42c>)
 8008112:	4293      	cmp	r3, r2
 8008114:	d009      	beq.n	800812a <HAL_DMA_IRQHandler+0x2ee>
 8008116:	687b      	ldr	r3, [r7, #4]
 8008118:	681b      	ldr	r3, [r3, #0]
 800811a:	4a54      	ldr	r2, [pc, #336]	@ (800826c <HAL_DMA_IRQHandler+0x430>)
 800811c:	4293      	cmp	r3, r2
 800811e:	d004      	beq.n	800812a <HAL_DMA_IRQHandler+0x2ee>
 8008120:	687b      	ldr	r3, [r7, #4]
 8008122:	681b      	ldr	r3, [r3, #0]
 8008124:	4a52      	ldr	r2, [pc, #328]	@ (8008270 <HAL_DMA_IRQHandler+0x434>)
 8008126:	4293      	cmp	r3, r2
 8008128:	d10a      	bne.n	8008140 <HAL_DMA_IRQHandler+0x304>
 800812a:	687b      	ldr	r3, [r7, #4]
 800812c:	681b      	ldr	r3, [r3, #0]
 800812e:	695b      	ldr	r3, [r3, #20]
 8008130:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8008134:	2b00      	cmp	r3, #0
 8008136:	bf14      	ite	ne
 8008138:	2301      	movne	r3, #1
 800813a:	2300      	moveq	r3, #0
 800813c:	b2db      	uxtb	r3, r3
 800813e:	e003      	b.n	8008148 <HAL_DMA_IRQHandler+0x30c>
 8008140:	687b      	ldr	r3, [r7, #4]
 8008142:	681b      	ldr	r3, [r3, #0]
 8008144:	681b      	ldr	r3, [r3, #0]
 8008146:	2300      	movs	r3, #0
 8008148:	2b00      	cmp	r3, #0
 800814a:	d00d      	beq.n	8008168 <HAL_DMA_IRQHandler+0x32c>
 800814c:	687b      	ldr	r3, [r7, #4]
 800814e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008150:	f003 031f 	and.w	r3, r3, #31
 8008154:	2201      	movs	r2, #1
 8008156:	409a      	lsls	r2, r3
 8008158:	6a3b      	ldr	r3, [r7, #32]
 800815a:	609a      	str	r2, [r3, #8]
 800815c:	687b      	ldr	r3, [r7, #4]
 800815e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008160:	f043 0202 	orr.w	r2, r3, #2
 8008164:	687b      	ldr	r3, [r7, #4]
 8008166:	655a      	str	r2, [r3, #84]	@ 0x54
 8008168:	687b      	ldr	r3, [r7, #4]
 800816a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800816c:	f003 031f 	and.w	r3, r3, #31
 8008170:	2204      	movs	r2, #4
 8008172:	409a      	lsls	r2, r3
 8008174:	69bb      	ldr	r3, [r7, #24]
 8008176:	4013      	ands	r3, r2
 8008178:	2b00      	cmp	r3, #0
 800817a:	f000 808f 	beq.w	800829c <HAL_DMA_IRQHandler+0x460>
 800817e:	687b      	ldr	r3, [r7, #4]
 8008180:	681b      	ldr	r3, [r3, #0]
 8008182:	4a2c      	ldr	r2, [pc, #176]	@ (8008234 <HAL_DMA_IRQHandler+0x3f8>)
 8008184:	4293      	cmp	r3, r2
 8008186:	d04a      	beq.n	800821e <HAL_DMA_IRQHandler+0x3e2>
 8008188:	687b      	ldr	r3, [r7, #4]
 800818a:	681b      	ldr	r3, [r3, #0]
 800818c:	4a2a      	ldr	r2, [pc, #168]	@ (8008238 <HAL_DMA_IRQHandler+0x3fc>)
 800818e:	4293      	cmp	r3, r2
 8008190:	d045      	beq.n	800821e <HAL_DMA_IRQHandler+0x3e2>
 8008192:	687b      	ldr	r3, [r7, #4]
 8008194:	681b      	ldr	r3, [r3, #0]
 8008196:	4a29      	ldr	r2, [pc, #164]	@ (800823c <HAL_DMA_IRQHandler+0x400>)
 8008198:	4293      	cmp	r3, r2
 800819a:	d040      	beq.n	800821e <HAL_DMA_IRQHandler+0x3e2>
 800819c:	687b      	ldr	r3, [r7, #4]
 800819e:	681b      	ldr	r3, [r3, #0]
 80081a0:	4a27      	ldr	r2, [pc, #156]	@ (8008240 <HAL_DMA_IRQHandler+0x404>)
 80081a2:	4293      	cmp	r3, r2
 80081a4:	d03b      	beq.n	800821e <HAL_DMA_IRQHandler+0x3e2>
 80081a6:	687b      	ldr	r3, [r7, #4]
 80081a8:	681b      	ldr	r3, [r3, #0]
 80081aa:	4a26      	ldr	r2, [pc, #152]	@ (8008244 <HAL_DMA_IRQHandler+0x408>)
 80081ac:	4293      	cmp	r3, r2
 80081ae:	d036      	beq.n	800821e <HAL_DMA_IRQHandler+0x3e2>
 80081b0:	687b      	ldr	r3, [r7, #4]
 80081b2:	681b      	ldr	r3, [r3, #0]
 80081b4:	4a24      	ldr	r2, [pc, #144]	@ (8008248 <HAL_DMA_IRQHandler+0x40c>)
 80081b6:	4293      	cmp	r3, r2
 80081b8:	d031      	beq.n	800821e <HAL_DMA_IRQHandler+0x3e2>
 80081ba:	687b      	ldr	r3, [r7, #4]
 80081bc:	681b      	ldr	r3, [r3, #0]
 80081be:	4a23      	ldr	r2, [pc, #140]	@ (800824c <HAL_DMA_IRQHandler+0x410>)
 80081c0:	4293      	cmp	r3, r2
 80081c2:	d02c      	beq.n	800821e <HAL_DMA_IRQHandler+0x3e2>
 80081c4:	687b      	ldr	r3, [r7, #4]
 80081c6:	681b      	ldr	r3, [r3, #0]
 80081c8:	4a21      	ldr	r2, [pc, #132]	@ (8008250 <HAL_DMA_IRQHandler+0x414>)
 80081ca:	4293      	cmp	r3, r2
 80081cc:	d027      	beq.n	800821e <HAL_DMA_IRQHandler+0x3e2>
 80081ce:	687b      	ldr	r3, [r7, #4]
 80081d0:	681b      	ldr	r3, [r3, #0]
 80081d2:	4a20      	ldr	r2, [pc, #128]	@ (8008254 <HAL_DMA_IRQHandler+0x418>)
 80081d4:	4293      	cmp	r3, r2
 80081d6:	d022      	beq.n	800821e <HAL_DMA_IRQHandler+0x3e2>
 80081d8:	687b      	ldr	r3, [r7, #4]
 80081da:	681b      	ldr	r3, [r3, #0]
 80081dc:	4a1e      	ldr	r2, [pc, #120]	@ (8008258 <HAL_DMA_IRQHandler+0x41c>)
 80081de:	4293      	cmp	r3, r2
 80081e0:	d01d      	beq.n	800821e <HAL_DMA_IRQHandler+0x3e2>
 80081e2:	687b      	ldr	r3, [r7, #4]
 80081e4:	681b      	ldr	r3, [r3, #0]
 80081e6:	4a1d      	ldr	r2, [pc, #116]	@ (800825c <HAL_DMA_IRQHandler+0x420>)
 80081e8:	4293      	cmp	r3, r2
 80081ea:	d018      	beq.n	800821e <HAL_DMA_IRQHandler+0x3e2>
 80081ec:	687b      	ldr	r3, [r7, #4]
 80081ee:	681b      	ldr	r3, [r3, #0]
 80081f0:	4a1b      	ldr	r2, [pc, #108]	@ (8008260 <HAL_DMA_IRQHandler+0x424>)
 80081f2:	4293      	cmp	r3, r2
 80081f4:	d013      	beq.n	800821e <HAL_DMA_IRQHandler+0x3e2>
 80081f6:	687b      	ldr	r3, [r7, #4]
 80081f8:	681b      	ldr	r3, [r3, #0]
 80081fa:	4a1a      	ldr	r2, [pc, #104]	@ (8008264 <HAL_DMA_IRQHandler+0x428>)
 80081fc:	4293      	cmp	r3, r2
 80081fe:	d00e      	beq.n	800821e <HAL_DMA_IRQHandler+0x3e2>
 8008200:	687b      	ldr	r3, [r7, #4]
 8008202:	681b      	ldr	r3, [r3, #0]
 8008204:	4a18      	ldr	r2, [pc, #96]	@ (8008268 <HAL_DMA_IRQHandler+0x42c>)
 8008206:	4293      	cmp	r3, r2
 8008208:	d009      	beq.n	800821e <HAL_DMA_IRQHandler+0x3e2>
 800820a:	687b      	ldr	r3, [r7, #4]
 800820c:	681b      	ldr	r3, [r3, #0]
 800820e:	4a17      	ldr	r2, [pc, #92]	@ (800826c <HAL_DMA_IRQHandler+0x430>)
 8008210:	4293      	cmp	r3, r2
 8008212:	d004      	beq.n	800821e <HAL_DMA_IRQHandler+0x3e2>
 8008214:	687b      	ldr	r3, [r7, #4]
 8008216:	681b      	ldr	r3, [r3, #0]
 8008218:	4a15      	ldr	r2, [pc, #84]	@ (8008270 <HAL_DMA_IRQHandler+0x434>)
 800821a:	4293      	cmp	r3, r2
 800821c:	d12a      	bne.n	8008274 <HAL_DMA_IRQHandler+0x438>
 800821e:	687b      	ldr	r3, [r7, #4]
 8008220:	681b      	ldr	r3, [r3, #0]
 8008222:	681b      	ldr	r3, [r3, #0]
 8008224:	f003 0302 	and.w	r3, r3, #2
 8008228:	2b00      	cmp	r3, #0
 800822a:	bf14      	ite	ne
 800822c:	2301      	movne	r3, #1
 800822e:	2300      	moveq	r3, #0
 8008230:	b2db      	uxtb	r3, r3
 8008232:	e023      	b.n	800827c <HAL_DMA_IRQHandler+0x440>
 8008234:	40020010 	.word	0x40020010
 8008238:	40020028 	.word	0x40020028
 800823c:	40020040 	.word	0x40020040
 8008240:	40020058 	.word	0x40020058
 8008244:	40020070 	.word	0x40020070
 8008248:	40020088 	.word	0x40020088
 800824c:	400200a0 	.word	0x400200a0
 8008250:	400200b8 	.word	0x400200b8
 8008254:	40020410 	.word	0x40020410
 8008258:	40020428 	.word	0x40020428
 800825c:	40020440 	.word	0x40020440
 8008260:	40020458 	.word	0x40020458
 8008264:	40020470 	.word	0x40020470
 8008268:	40020488 	.word	0x40020488
 800826c:	400204a0 	.word	0x400204a0
 8008270:	400204b8 	.word	0x400204b8
 8008274:	687b      	ldr	r3, [r7, #4]
 8008276:	681b      	ldr	r3, [r3, #0]
 8008278:	681b      	ldr	r3, [r3, #0]
 800827a:	2300      	movs	r3, #0
 800827c:	2b00      	cmp	r3, #0
 800827e:	d00d      	beq.n	800829c <HAL_DMA_IRQHandler+0x460>
 8008280:	687b      	ldr	r3, [r7, #4]
 8008282:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008284:	f003 031f 	and.w	r3, r3, #31
 8008288:	2204      	movs	r2, #4
 800828a:	409a      	lsls	r2, r3
 800828c:	6a3b      	ldr	r3, [r7, #32]
 800828e:	609a      	str	r2, [r3, #8]
 8008290:	687b      	ldr	r3, [r7, #4]
 8008292:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008294:	f043 0204 	orr.w	r2, r3, #4
 8008298:	687b      	ldr	r3, [r7, #4]
 800829a:	655a      	str	r2, [r3, #84]	@ 0x54
 800829c:	687b      	ldr	r3, [r7, #4]
 800829e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80082a0:	f003 031f 	and.w	r3, r3, #31
 80082a4:	2210      	movs	r2, #16
 80082a6:	409a      	lsls	r2, r3
 80082a8:	69bb      	ldr	r3, [r7, #24]
 80082aa:	4013      	ands	r3, r2
 80082ac:	2b00      	cmp	r3, #0
 80082ae:	f000 80a6 	beq.w	80083fe <HAL_DMA_IRQHandler+0x5c2>
 80082b2:	687b      	ldr	r3, [r7, #4]
 80082b4:	681b      	ldr	r3, [r3, #0]
 80082b6:	4a85      	ldr	r2, [pc, #532]	@ (80084cc <HAL_DMA_IRQHandler+0x690>)
 80082b8:	4293      	cmp	r3, r2
 80082ba:	d04a      	beq.n	8008352 <HAL_DMA_IRQHandler+0x516>
 80082bc:	687b      	ldr	r3, [r7, #4]
 80082be:	681b      	ldr	r3, [r3, #0]
 80082c0:	4a83      	ldr	r2, [pc, #524]	@ (80084d0 <HAL_DMA_IRQHandler+0x694>)
 80082c2:	4293      	cmp	r3, r2
 80082c4:	d045      	beq.n	8008352 <HAL_DMA_IRQHandler+0x516>
 80082c6:	687b      	ldr	r3, [r7, #4]
 80082c8:	681b      	ldr	r3, [r3, #0]
 80082ca:	4a82      	ldr	r2, [pc, #520]	@ (80084d4 <HAL_DMA_IRQHandler+0x698>)
 80082cc:	4293      	cmp	r3, r2
 80082ce:	d040      	beq.n	8008352 <HAL_DMA_IRQHandler+0x516>
 80082d0:	687b      	ldr	r3, [r7, #4]
 80082d2:	681b      	ldr	r3, [r3, #0]
 80082d4:	4a80      	ldr	r2, [pc, #512]	@ (80084d8 <HAL_DMA_IRQHandler+0x69c>)
 80082d6:	4293      	cmp	r3, r2
 80082d8:	d03b      	beq.n	8008352 <HAL_DMA_IRQHandler+0x516>
 80082da:	687b      	ldr	r3, [r7, #4]
 80082dc:	681b      	ldr	r3, [r3, #0]
 80082de:	4a7f      	ldr	r2, [pc, #508]	@ (80084dc <HAL_DMA_IRQHandler+0x6a0>)
 80082e0:	4293      	cmp	r3, r2
 80082e2:	d036      	beq.n	8008352 <HAL_DMA_IRQHandler+0x516>
 80082e4:	687b      	ldr	r3, [r7, #4]
 80082e6:	681b      	ldr	r3, [r3, #0]
 80082e8:	4a7d      	ldr	r2, [pc, #500]	@ (80084e0 <HAL_DMA_IRQHandler+0x6a4>)
 80082ea:	4293      	cmp	r3, r2
 80082ec:	d031      	beq.n	8008352 <HAL_DMA_IRQHandler+0x516>
 80082ee:	687b      	ldr	r3, [r7, #4]
 80082f0:	681b      	ldr	r3, [r3, #0]
 80082f2:	4a7c      	ldr	r2, [pc, #496]	@ (80084e4 <HAL_DMA_IRQHandler+0x6a8>)
 80082f4:	4293      	cmp	r3, r2
 80082f6:	d02c      	beq.n	8008352 <HAL_DMA_IRQHandler+0x516>
 80082f8:	687b      	ldr	r3, [r7, #4]
 80082fa:	681b      	ldr	r3, [r3, #0]
 80082fc:	4a7a      	ldr	r2, [pc, #488]	@ (80084e8 <HAL_DMA_IRQHandler+0x6ac>)
 80082fe:	4293      	cmp	r3, r2
 8008300:	d027      	beq.n	8008352 <HAL_DMA_IRQHandler+0x516>
 8008302:	687b      	ldr	r3, [r7, #4]
 8008304:	681b      	ldr	r3, [r3, #0]
 8008306:	4a79      	ldr	r2, [pc, #484]	@ (80084ec <HAL_DMA_IRQHandler+0x6b0>)
 8008308:	4293      	cmp	r3, r2
 800830a:	d022      	beq.n	8008352 <HAL_DMA_IRQHandler+0x516>
 800830c:	687b      	ldr	r3, [r7, #4]
 800830e:	681b      	ldr	r3, [r3, #0]
 8008310:	4a77      	ldr	r2, [pc, #476]	@ (80084f0 <HAL_DMA_IRQHandler+0x6b4>)
 8008312:	4293      	cmp	r3, r2
 8008314:	d01d      	beq.n	8008352 <HAL_DMA_IRQHandler+0x516>
 8008316:	687b      	ldr	r3, [r7, #4]
 8008318:	681b      	ldr	r3, [r3, #0]
 800831a:	4a76      	ldr	r2, [pc, #472]	@ (80084f4 <HAL_DMA_IRQHandler+0x6b8>)
 800831c:	4293      	cmp	r3, r2
 800831e:	d018      	beq.n	8008352 <HAL_DMA_IRQHandler+0x516>
 8008320:	687b      	ldr	r3, [r7, #4]
 8008322:	681b      	ldr	r3, [r3, #0]
 8008324:	4a74      	ldr	r2, [pc, #464]	@ (80084f8 <HAL_DMA_IRQHandler+0x6bc>)
 8008326:	4293      	cmp	r3, r2
 8008328:	d013      	beq.n	8008352 <HAL_DMA_IRQHandler+0x516>
 800832a:	687b      	ldr	r3, [r7, #4]
 800832c:	681b      	ldr	r3, [r3, #0]
 800832e:	4a73      	ldr	r2, [pc, #460]	@ (80084fc <HAL_DMA_IRQHandler+0x6c0>)
 8008330:	4293      	cmp	r3, r2
 8008332:	d00e      	beq.n	8008352 <HAL_DMA_IRQHandler+0x516>
 8008334:	687b      	ldr	r3, [r7, #4]
 8008336:	681b      	ldr	r3, [r3, #0]
 8008338:	4a71      	ldr	r2, [pc, #452]	@ (8008500 <HAL_DMA_IRQHandler+0x6c4>)
 800833a:	4293      	cmp	r3, r2
 800833c:	d009      	beq.n	8008352 <HAL_DMA_IRQHandler+0x516>
 800833e:	687b      	ldr	r3, [r7, #4]
 8008340:	681b      	ldr	r3, [r3, #0]
 8008342:	4a70      	ldr	r2, [pc, #448]	@ (8008504 <HAL_DMA_IRQHandler+0x6c8>)
 8008344:	4293      	cmp	r3, r2
 8008346:	d004      	beq.n	8008352 <HAL_DMA_IRQHandler+0x516>
 8008348:	687b      	ldr	r3, [r7, #4]
 800834a:	681b      	ldr	r3, [r3, #0]
 800834c:	4a6e      	ldr	r2, [pc, #440]	@ (8008508 <HAL_DMA_IRQHandler+0x6cc>)
 800834e:	4293      	cmp	r3, r2
 8008350:	d10a      	bne.n	8008368 <HAL_DMA_IRQHandler+0x52c>
 8008352:	687b      	ldr	r3, [r7, #4]
 8008354:	681b      	ldr	r3, [r3, #0]
 8008356:	681b      	ldr	r3, [r3, #0]
 8008358:	f003 0308 	and.w	r3, r3, #8
 800835c:	2b00      	cmp	r3, #0
 800835e:	bf14      	ite	ne
 8008360:	2301      	movne	r3, #1
 8008362:	2300      	moveq	r3, #0
 8008364:	b2db      	uxtb	r3, r3
 8008366:	e009      	b.n	800837c <HAL_DMA_IRQHandler+0x540>
 8008368:	687b      	ldr	r3, [r7, #4]
 800836a:	681b      	ldr	r3, [r3, #0]
 800836c:	681b      	ldr	r3, [r3, #0]
 800836e:	f003 0304 	and.w	r3, r3, #4
 8008372:	2b00      	cmp	r3, #0
 8008374:	bf14      	ite	ne
 8008376:	2301      	movne	r3, #1
 8008378:	2300      	moveq	r3, #0
 800837a:	b2db      	uxtb	r3, r3
 800837c:	2b00      	cmp	r3, #0
 800837e:	d03e      	beq.n	80083fe <HAL_DMA_IRQHandler+0x5c2>
 8008380:	687b      	ldr	r3, [r7, #4]
 8008382:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008384:	f003 031f 	and.w	r3, r3, #31
 8008388:	2210      	movs	r2, #16
 800838a:	409a      	lsls	r2, r3
 800838c:	6a3b      	ldr	r3, [r7, #32]
 800838e:	609a      	str	r2, [r3, #8]
 8008390:	687b      	ldr	r3, [r7, #4]
 8008392:	681b      	ldr	r3, [r3, #0]
 8008394:	681b      	ldr	r3, [r3, #0]
 8008396:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800839a:	2b00      	cmp	r3, #0
 800839c:	d018      	beq.n	80083d0 <HAL_DMA_IRQHandler+0x594>
 800839e:	687b      	ldr	r3, [r7, #4]
 80083a0:	681b      	ldr	r3, [r3, #0]
 80083a2:	681b      	ldr	r3, [r3, #0]
 80083a4:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80083a8:	2b00      	cmp	r3, #0
 80083aa:	d108      	bne.n	80083be <HAL_DMA_IRQHandler+0x582>
 80083ac:	687b      	ldr	r3, [r7, #4]
 80083ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80083b0:	2b00      	cmp	r3, #0
 80083b2:	d024      	beq.n	80083fe <HAL_DMA_IRQHandler+0x5c2>
 80083b4:	687b      	ldr	r3, [r7, #4]
 80083b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80083b8:	6878      	ldr	r0, [r7, #4]
 80083ba:	4798      	blx	r3
 80083bc:	e01f      	b.n	80083fe <HAL_DMA_IRQHandler+0x5c2>
 80083be:	687b      	ldr	r3, [r7, #4]
 80083c0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80083c2:	2b00      	cmp	r3, #0
 80083c4:	d01b      	beq.n	80083fe <HAL_DMA_IRQHandler+0x5c2>
 80083c6:	687b      	ldr	r3, [r7, #4]
 80083c8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80083ca:	6878      	ldr	r0, [r7, #4]
 80083cc:	4798      	blx	r3
 80083ce:	e016      	b.n	80083fe <HAL_DMA_IRQHandler+0x5c2>
 80083d0:	687b      	ldr	r3, [r7, #4]
 80083d2:	681b      	ldr	r3, [r3, #0]
 80083d4:	681b      	ldr	r3, [r3, #0]
 80083d6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80083da:	2b00      	cmp	r3, #0
 80083dc:	d107      	bne.n	80083ee <HAL_DMA_IRQHandler+0x5b2>
 80083de:	687b      	ldr	r3, [r7, #4]
 80083e0:	681b      	ldr	r3, [r3, #0]
 80083e2:	681a      	ldr	r2, [r3, #0]
 80083e4:	687b      	ldr	r3, [r7, #4]
 80083e6:	681b      	ldr	r3, [r3, #0]
 80083e8:	f022 0208 	bic.w	r2, r2, #8
 80083ec:	601a      	str	r2, [r3, #0]
 80083ee:	687b      	ldr	r3, [r7, #4]
 80083f0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80083f2:	2b00      	cmp	r3, #0
 80083f4:	d003      	beq.n	80083fe <HAL_DMA_IRQHandler+0x5c2>
 80083f6:	687b      	ldr	r3, [r7, #4]
 80083f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80083fa:	6878      	ldr	r0, [r7, #4]
 80083fc:	4798      	blx	r3
 80083fe:	687b      	ldr	r3, [r7, #4]
 8008400:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008402:	f003 031f 	and.w	r3, r3, #31
 8008406:	2220      	movs	r2, #32
 8008408:	409a      	lsls	r2, r3
 800840a:	69bb      	ldr	r3, [r7, #24]
 800840c:	4013      	ands	r3, r2
 800840e:	2b00      	cmp	r3, #0
 8008410:	f000 8110 	beq.w	8008634 <HAL_DMA_IRQHandler+0x7f8>
 8008414:	687b      	ldr	r3, [r7, #4]
 8008416:	681b      	ldr	r3, [r3, #0]
 8008418:	4a2c      	ldr	r2, [pc, #176]	@ (80084cc <HAL_DMA_IRQHandler+0x690>)
 800841a:	4293      	cmp	r3, r2
 800841c:	d04a      	beq.n	80084b4 <HAL_DMA_IRQHandler+0x678>
 800841e:	687b      	ldr	r3, [r7, #4]
 8008420:	681b      	ldr	r3, [r3, #0]
 8008422:	4a2b      	ldr	r2, [pc, #172]	@ (80084d0 <HAL_DMA_IRQHandler+0x694>)
 8008424:	4293      	cmp	r3, r2
 8008426:	d045      	beq.n	80084b4 <HAL_DMA_IRQHandler+0x678>
 8008428:	687b      	ldr	r3, [r7, #4]
 800842a:	681b      	ldr	r3, [r3, #0]
 800842c:	4a29      	ldr	r2, [pc, #164]	@ (80084d4 <HAL_DMA_IRQHandler+0x698>)
 800842e:	4293      	cmp	r3, r2
 8008430:	d040      	beq.n	80084b4 <HAL_DMA_IRQHandler+0x678>
 8008432:	687b      	ldr	r3, [r7, #4]
 8008434:	681b      	ldr	r3, [r3, #0]
 8008436:	4a28      	ldr	r2, [pc, #160]	@ (80084d8 <HAL_DMA_IRQHandler+0x69c>)
 8008438:	4293      	cmp	r3, r2
 800843a:	d03b      	beq.n	80084b4 <HAL_DMA_IRQHandler+0x678>
 800843c:	687b      	ldr	r3, [r7, #4]
 800843e:	681b      	ldr	r3, [r3, #0]
 8008440:	4a26      	ldr	r2, [pc, #152]	@ (80084dc <HAL_DMA_IRQHandler+0x6a0>)
 8008442:	4293      	cmp	r3, r2
 8008444:	d036      	beq.n	80084b4 <HAL_DMA_IRQHandler+0x678>
 8008446:	687b      	ldr	r3, [r7, #4]
 8008448:	681b      	ldr	r3, [r3, #0]
 800844a:	4a25      	ldr	r2, [pc, #148]	@ (80084e0 <HAL_DMA_IRQHandler+0x6a4>)
 800844c:	4293      	cmp	r3, r2
 800844e:	d031      	beq.n	80084b4 <HAL_DMA_IRQHandler+0x678>
 8008450:	687b      	ldr	r3, [r7, #4]
 8008452:	681b      	ldr	r3, [r3, #0]
 8008454:	4a23      	ldr	r2, [pc, #140]	@ (80084e4 <HAL_DMA_IRQHandler+0x6a8>)
 8008456:	4293      	cmp	r3, r2
 8008458:	d02c      	beq.n	80084b4 <HAL_DMA_IRQHandler+0x678>
 800845a:	687b      	ldr	r3, [r7, #4]
 800845c:	681b      	ldr	r3, [r3, #0]
 800845e:	4a22      	ldr	r2, [pc, #136]	@ (80084e8 <HAL_DMA_IRQHandler+0x6ac>)
 8008460:	4293      	cmp	r3, r2
 8008462:	d027      	beq.n	80084b4 <HAL_DMA_IRQHandler+0x678>
 8008464:	687b      	ldr	r3, [r7, #4]
 8008466:	681b      	ldr	r3, [r3, #0]
 8008468:	4a20      	ldr	r2, [pc, #128]	@ (80084ec <HAL_DMA_IRQHandler+0x6b0>)
 800846a:	4293      	cmp	r3, r2
 800846c:	d022      	beq.n	80084b4 <HAL_DMA_IRQHandler+0x678>
 800846e:	687b      	ldr	r3, [r7, #4]
 8008470:	681b      	ldr	r3, [r3, #0]
 8008472:	4a1f      	ldr	r2, [pc, #124]	@ (80084f0 <HAL_DMA_IRQHandler+0x6b4>)
 8008474:	4293      	cmp	r3, r2
 8008476:	d01d      	beq.n	80084b4 <HAL_DMA_IRQHandler+0x678>
 8008478:	687b      	ldr	r3, [r7, #4]
 800847a:	681b      	ldr	r3, [r3, #0]
 800847c:	4a1d      	ldr	r2, [pc, #116]	@ (80084f4 <HAL_DMA_IRQHandler+0x6b8>)
 800847e:	4293      	cmp	r3, r2
 8008480:	d018      	beq.n	80084b4 <HAL_DMA_IRQHandler+0x678>
 8008482:	687b      	ldr	r3, [r7, #4]
 8008484:	681b      	ldr	r3, [r3, #0]
 8008486:	4a1c      	ldr	r2, [pc, #112]	@ (80084f8 <HAL_DMA_IRQHandler+0x6bc>)
 8008488:	4293      	cmp	r3, r2
 800848a:	d013      	beq.n	80084b4 <HAL_DMA_IRQHandler+0x678>
 800848c:	687b      	ldr	r3, [r7, #4]
 800848e:	681b      	ldr	r3, [r3, #0]
 8008490:	4a1a      	ldr	r2, [pc, #104]	@ (80084fc <HAL_DMA_IRQHandler+0x6c0>)
 8008492:	4293      	cmp	r3, r2
 8008494:	d00e      	beq.n	80084b4 <HAL_DMA_IRQHandler+0x678>
 8008496:	687b      	ldr	r3, [r7, #4]
 8008498:	681b      	ldr	r3, [r3, #0]
 800849a:	4a19      	ldr	r2, [pc, #100]	@ (8008500 <HAL_DMA_IRQHandler+0x6c4>)
 800849c:	4293      	cmp	r3, r2
 800849e:	d009      	beq.n	80084b4 <HAL_DMA_IRQHandler+0x678>
 80084a0:	687b      	ldr	r3, [r7, #4]
 80084a2:	681b      	ldr	r3, [r3, #0]
 80084a4:	4a17      	ldr	r2, [pc, #92]	@ (8008504 <HAL_DMA_IRQHandler+0x6c8>)
 80084a6:	4293      	cmp	r3, r2
 80084a8:	d004      	beq.n	80084b4 <HAL_DMA_IRQHandler+0x678>
 80084aa:	687b      	ldr	r3, [r7, #4]
 80084ac:	681b      	ldr	r3, [r3, #0]
 80084ae:	4a16      	ldr	r2, [pc, #88]	@ (8008508 <HAL_DMA_IRQHandler+0x6cc>)
 80084b0:	4293      	cmp	r3, r2
 80084b2:	d12b      	bne.n	800850c <HAL_DMA_IRQHandler+0x6d0>
 80084b4:	687b      	ldr	r3, [r7, #4]
 80084b6:	681b      	ldr	r3, [r3, #0]
 80084b8:	681b      	ldr	r3, [r3, #0]
 80084ba:	f003 0310 	and.w	r3, r3, #16
 80084be:	2b00      	cmp	r3, #0
 80084c0:	bf14      	ite	ne
 80084c2:	2301      	movne	r3, #1
 80084c4:	2300      	moveq	r3, #0
 80084c6:	b2db      	uxtb	r3, r3
 80084c8:	e02a      	b.n	8008520 <HAL_DMA_IRQHandler+0x6e4>
 80084ca:	bf00      	nop
 80084cc:	40020010 	.word	0x40020010
 80084d0:	40020028 	.word	0x40020028
 80084d4:	40020040 	.word	0x40020040
 80084d8:	40020058 	.word	0x40020058
 80084dc:	40020070 	.word	0x40020070
 80084e0:	40020088 	.word	0x40020088
 80084e4:	400200a0 	.word	0x400200a0
 80084e8:	400200b8 	.word	0x400200b8
 80084ec:	40020410 	.word	0x40020410
 80084f0:	40020428 	.word	0x40020428
 80084f4:	40020440 	.word	0x40020440
 80084f8:	40020458 	.word	0x40020458
 80084fc:	40020470 	.word	0x40020470
 8008500:	40020488 	.word	0x40020488
 8008504:	400204a0 	.word	0x400204a0
 8008508:	400204b8 	.word	0x400204b8
 800850c:	687b      	ldr	r3, [r7, #4]
 800850e:	681b      	ldr	r3, [r3, #0]
 8008510:	681b      	ldr	r3, [r3, #0]
 8008512:	f003 0302 	and.w	r3, r3, #2
 8008516:	2b00      	cmp	r3, #0
 8008518:	bf14      	ite	ne
 800851a:	2301      	movne	r3, #1
 800851c:	2300      	moveq	r3, #0
 800851e:	b2db      	uxtb	r3, r3
 8008520:	2b00      	cmp	r3, #0
 8008522:	f000 8087 	beq.w	8008634 <HAL_DMA_IRQHandler+0x7f8>
 8008526:	687b      	ldr	r3, [r7, #4]
 8008528:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800852a:	f003 031f 	and.w	r3, r3, #31
 800852e:	2220      	movs	r2, #32
 8008530:	409a      	lsls	r2, r3
 8008532:	6a3b      	ldr	r3, [r7, #32]
 8008534:	609a      	str	r2, [r3, #8]
 8008536:	687b      	ldr	r3, [r7, #4]
 8008538:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800853c:	b2db      	uxtb	r3, r3
 800853e:	2b04      	cmp	r3, #4
 8008540:	d139      	bne.n	80085b6 <HAL_DMA_IRQHandler+0x77a>
 8008542:	687b      	ldr	r3, [r7, #4]
 8008544:	681b      	ldr	r3, [r3, #0]
 8008546:	681a      	ldr	r2, [r3, #0]
 8008548:	687b      	ldr	r3, [r7, #4]
 800854a:	681b      	ldr	r3, [r3, #0]
 800854c:	f022 0216 	bic.w	r2, r2, #22
 8008550:	601a      	str	r2, [r3, #0]
 8008552:	687b      	ldr	r3, [r7, #4]
 8008554:	681b      	ldr	r3, [r3, #0]
 8008556:	695a      	ldr	r2, [r3, #20]
 8008558:	687b      	ldr	r3, [r7, #4]
 800855a:	681b      	ldr	r3, [r3, #0]
 800855c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8008560:	615a      	str	r2, [r3, #20]
 8008562:	687b      	ldr	r3, [r7, #4]
 8008564:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008566:	2b00      	cmp	r3, #0
 8008568:	d103      	bne.n	8008572 <HAL_DMA_IRQHandler+0x736>
 800856a:	687b      	ldr	r3, [r7, #4]
 800856c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800856e:	2b00      	cmp	r3, #0
 8008570:	d007      	beq.n	8008582 <HAL_DMA_IRQHandler+0x746>
 8008572:	687b      	ldr	r3, [r7, #4]
 8008574:	681b      	ldr	r3, [r3, #0]
 8008576:	681a      	ldr	r2, [r3, #0]
 8008578:	687b      	ldr	r3, [r7, #4]
 800857a:	681b      	ldr	r3, [r3, #0]
 800857c:	f022 0208 	bic.w	r2, r2, #8
 8008580:	601a      	str	r2, [r3, #0]
 8008582:	687b      	ldr	r3, [r7, #4]
 8008584:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008586:	f003 031f 	and.w	r3, r3, #31
 800858a:	223f      	movs	r2, #63	@ 0x3f
 800858c:	409a      	lsls	r2, r3
 800858e:	6a3b      	ldr	r3, [r7, #32]
 8008590:	609a      	str	r2, [r3, #8]
 8008592:	687b      	ldr	r3, [r7, #4]
 8008594:	2201      	movs	r2, #1
 8008596:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800859a:	687b      	ldr	r3, [r7, #4]
 800859c:	2200      	movs	r2, #0
 800859e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80085a2:	687b      	ldr	r3, [r7, #4]
 80085a4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80085a6:	2b00      	cmp	r3, #0
 80085a8:	f000 834a 	beq.w	8008c40 <HAL_DMA_IRQHandler+0xe04>
 80085ac:	687b      	ldr	r3, [r7, #4]
 80085ae:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80085b0:	6878      	ldr	r0, [r7, #4]
 80085b2:	4798      	blx	r3
 80085b4:	e344      	b.n	8008c40 <HAL_DMA_IRQHandler+0xe04>
 80085b6:	687b      	ldr	r3, [r7, #4]
 80085b8:	681b      	ldr	r3, [r3, #0]
 80085ba:	681b      	ldr	r3, [r3, #0]
 80085bc:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80085c0:	2b00      	cmp	r3, #0
 80085c2:	d018      	beq.n	80085f6 <HAL_DMA_IRQHandler+0x7ba>
 80085c4:	687b      	ldr	r3, [r7, #4]
 80085c6:	681b      	ldr	r3, [r3, #0]
 80085c8:	681b      	ldr	r3, [r3, #0]
 80085ca:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80085ce:	2b00      	cmp	r3, #0
 80085d0:	d108      	bne.n	80085e4 <HAL_DMA_IRQHandler+0x7a8>
 80085d2:	687b      	ldr	r3, [r7, #4]
 80085d4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80085d6:	2b00      	cmp	r3, #0
 80085d8:	d02c      	beq.n	8008634 <HAL_DMA_IRQHandler+0x7f8>
 80085da:	687b      	ldr	r3, [r7, #4]
 80085dc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80085de:	6878      	ldr	r0, [r7, #4]
 80085e0:	4798      	blx	r3
 80085e2:	e027      	b.n	8008634 <HAL_DMA_IRQHandler+0x7f8>
 80085e4:	687b      	ldr	r3, [r7, #4]
 80085e6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80085e8:	2b00      	cmp	r3, #0
 80085ea:	d023      	beq.n	8008634 <HAL_DMA_IRQHandler+0x7f8>
 80085ec:	687b      	ldr	r3, [r7, #4]
 80085ee:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80085f0:	6878      	ldr	r0, [r7, #4]
 80085f2:	4798      	blx	r3
 80085f4:	e01e      	b.n	8008634 <HAL_DMA_IRQHandler+0x7f8>
 80085f6:	687b      	ldr	r3, [r7, #4]
 80085f8:	681b      	ldr	r3, [r3, #0]
 80085fa:	681b      	ldr	r3, [r3, #0]
 80085fc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8008600:	2b00      	cmp	r3, #0
 8008602:	d10f      	bne.n	8008624 <HAL_DMA_IRQHandler+0x7e8>
 8008604:	687b      	ldr	r3, [r7, #4]
 8008606:	681b      	ldr	r3, [r3, #0]
 8008608:	681a      	ldr	r2, [r3, #0]
 800860a:	687b      	ldr	r3, [r7, #4]
 800860c:	681b      	ldr	r3, [r3, #0]
 800860e:	f022 0210 	bic.w	r2, r2, #16
 8008612:	601a      	str	r2, [r3, #0]
 8008614:	687b      	ldr	r3, [r7, #4]
 8008616:	2201      	movs	r2, #1
 8008618:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800861c:	687b      	ldr	r3, [r7, #4]
 800861e:	2200      	movs	r2, #0
 8008620:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8008624:	687b      	ldr	r3, [r7, #4]
 8008626:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008628:	2b00      	cmp	r3, #0
 800862a:	d003      	beq.n	8008634 <HAL_DMA_IRQHandler+0x7f8>
 800862c:	687b      	ldr	r3, [r7, #4]
 800862e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008630:	6878      	ldr	r0, [r7, #4]
 8008632:	4798      	blx	r3
 8008634:	687b      	ldr	r3, [r7, #4]
 8008636:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008638:	2b00      	cmp	r3, #0
 800863a:	f000 8306 	beq.w	8008c4a <HAL_DMA_IRQHandler+0xe0e>
 800863e:	687b      	ldr	r3, [r7, #4]
 8008640:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008642:	f003 0301 	and.w	r3, r3, #1
 8008646:	2b00      	cmp	r3, #0
 8008648:	f000 8088 	beq.w	800875c <HAL_DMA_IRQHandler+0x920>
 800864c:	687b      	ldr	r3, [r7, #4]
 800864e:	2204      	movs	r2, #4
 8008650:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8008654:	687b      	ldr	r3, [r7, #4]
 8008656:	681b      	ldr	r3, [r3, #0]
 8008658:	4a7a      	ldr	r2, [pc, #488]	@ (8008844 <HAL_DMA_IRQHandler+0xa08>)
 800865a:	4293      	cmp	r3, r2
 800865c:	d04a      	beq.n	80086f4 <HAL_DMA_IRQHandler+0x8b8>
 800865e:	687b      	ldr	r3, [r7, #4]
 8008660:	681b      	ldr	r3, [r3, #0]
 8008662:	4a79      	ldr	r2, [pc, #484]	@ (8008848 <HAL_DMA_IRQHandler+0xa0c>)
 8008664:	4293      	cmp	r3, r2
 8008666:	d045      	beq.n	80086f4 <HAL_DMA_IRQHandler+0x8b8>
 8008668:	687b      	ldr	r3, [r7, #4]
 800866a:	681b      	ldr	r3, [r3, #0]
 800866c:	4a77      	ldr	r2, [pc, #476]	@ (800884c <HAL_DMA_IRQHandler+0xa10>)
 800866e:	4293      	cmp	r3, r2
 8008670:	d040      	beq.n	80086f4 <HAL_DMA_IRQHandler+0x8b8>
 8008672:	687b      	ldr	r3, [r7, #4]
 8008674:	681b      	ldr	r3, [r3, #0]
 8008676:	4a76      	ldr	r2, [pc, #472]	@ (8008850 <HAL_DMA_IRQHandler+0xa14>)
 8008678:	4293      	cmp	r3, r2
 800867a:	d03b      	beq.n	80086f4 <HAL_DMA_IRQHandler+0x8b8>
 800867c:	687b      	ldr	r3, [r7, #4]
 800867e:	681b      	ldr	r3, [r3, #0]
 8008680:	4a74      	ldr	r2, [pc, #464]	@ (8008854 <HAL_DMA_IRQHandler+0xa18>)
 8008682:	4293      	cmp	r3, r2
 8008684:	d036      	beq.n	80086f4 <HAL_DMA_IRQHandler+0x8b8>
 8008686:	687b      	ldr	r3, [r7, #4]
 8008688:	681b      	ldr	r3, [r3, #0]
 800868a:	4a73      	ldr	r2, [pc, #460]	@ (8008858 <HAL_DMA_IRQHandler+0xa1c>)
 800868c:	4293      	cmp	r3, r2
 800868e:	d031      	beq.n	80086f4 <HAL_DMA_IRQHandler+0x8b8>
 8008690:	687b      	ldr	r3, [r7, #4]
 8008692:	681b      	ldr	r3, [r3, #0]
 8008694:	4a71      	ldr	r2, [pc, #452]	@ (800885c <HAL_DMA_IRQHandler+0xa20>)
 8008696:	4293      	cmp	r3, r2
 8008698:	d02c      	beq.n	80086f4 <HAL_DMA_IRQHandler+0x8b8>
 800869a:	687b      	ldr	r3, [r7, #4]
 800869c:	681b      	ldr	r3, [r3, #0]
 800869e:	4a70      	ldr	r2, [pc, #448]	@ (8008860 <HAL_DMA_IRQHandler+0xa24>)
 80086a0:	4293      	cmp	r3, r2
 80086a2:	d027      	beq.n	80086f4 <HAL_DMA_IRQHandler+0x8b8>
 80086a4:	687b      	ldr	r3, [r7, #4]
 80086a6:	681b      	ldr	r3, [r3, #0]
 80086a8:	4a6e      	ldr	r2, [pc, #440]	@ (8008864 <HAL_DMA_IRQHandler+0xa28>)
 80086aa:	4293      	cmp	r3, r2
 80086ac:	d022      	beq.n	80086f4 <HAL_DMA_IRQHandler+0x8b8>
 80086ae:	687b      	ldr	r3, [r7, #4]
 80086b0:	681b      	ldr	r3, [r3, #0]
 80086b2:	4a6d      	ldr	r2, [pc, #436]	@ (8008868 <HAL_DMA_IRQHandler+0xa2c>)
 80086b4:	4293      	cmp	r3, r2
 80086b6:	d01d      	beq.n	80086f4 <HAL_DMA_IRQHandler+0x8b8>
 80086b8:	687b      	ldr	r3, [r7, #4]
 80086ba:	681b      	ldr	r3, [r3, #0]
 80086bc:	4a6b      	ldr	r2, [pc, #428]	@ (800886c <HAL_DMA_IRQHandler+0xa30>)
 80086be:	4293      	cmp	r3, r2
 80086c0:	d018      	beq.n	80086f4 <HAL_DMA_IRQHandler+0x8b8>
 80086c2:	687b      	ldr	r3, [r7, #4]
 80086c4:	681b      	ldr	r3, [r3, #0]
 80086c6:	4a6a      	ldr	r2, [pc, #424]	@ (8008870 <HAL_DMA_IRQHandler+0xa34>)
 80086c8:	4293      	cmp	r3, r2
 80086ca:	d013      	beq.n	80086f4 <HAL_DMA_IRQHandler+0x8b8>
 80086cc:	687b      	ldr	r3, [r7, #4]
 80086ce:	681b      	ldr	r3, [r3, #0]
 80086d0:	4a68      	ldr	r2, [pc, #416]	@ (8008874 <HAL_DMA_IRQHandler+0xa38>)
 80086d2:	4293      	cmp	r3, r2
 80086d4:	d00e      	beq.n	80086f4 <HAL_DMA_IRQHandler+0x8b8>
 80086d6:	687b      	ldr	r3, [r7, #4]
 80086d8:	681b      	ldr	r3, [r3, #0]
 80086da:	4a67      	ldr	r2, [pc, #412]	@ (8008878 <HAL_DMA_IRQHandler+0xa3c>)
 80086dc:	4293      	cmp	r3, r2
 80086de:	d009      	beq.n	80086f4 <HAL_DMA_IRQHandler+0x8b8>
 80086e0:	687b      	ldr	r3, [r7, #4]
 80086e2:	681b      	ldr	r3, [r3, #0]
 80086e4:	4a65      	ldr	r2, [pc, #404]	@ (800887c <HAL_DMA_IRQHandler+0xa40>)
 80086e6:	4293      	cmp	r3, r2
 80086e8:	d004      	beq.n	80086f4 <HAL_DMA_IRQHandler+0x8b8>
 80086ea:	687b      	ldr	r3, [r7, #4]
 80086ec:	681b      	ldr	r3, [r3, #0]
 80086ee:	4a64      	ldr	r2, [pc, #400]	@ (8008880 <HAL_DMA_IRQHandler+0xa44>)
 80086f0:	4293      	cmp	r3, r2
 80086f2:	d108      	bne.n	8008706 <HAL_DMA_IRQHandler+0x8ca>
 80086f4:	687b      	ldr	r3, [r7, #4]
 80086f6:	681b      	ldr	r3, [r3, #0]
 80086f8:	681a      	ldr	r2, [r3, #0]
 80086fa:	687b      	ldr	r3, [r7, #4]
 80086fc:	681b      	ldr	r3, [r3, #0]
 80086fe:	f022 0201 	bic.w	r2, r2, #1
 8008702:	601a      	str	r2, [r3, #0]
 8008704:	e007      	b.n	8008716 <HAL_DMA_IRQHandler+0x8da>
 8008706:	687b      	ldr	r3, [r7, #4]
 8008708:	681b      	ldr	r3, [r3, #0]
 800870a:	681a      	ldr	r2, [r3, #0]
 800870c:	687b      	ldr	r3, [r7, #4]
 800870e:	681b      	ldr	r3, [r3, #0]
 8008710:	f022 0201 	bic.w	r2, r2, #1
 8008714:	601a      	str	r2, [r3, #0]
 8008716:	68fb      	ldr	r3, [r7, #12]
 8008718:	3301      	adds	r3, #1
 800871a:	60fb      	str	r3, [r7, #12]
 800871c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800871e:	429a      	cmp	r2, r3
 8008720:	d307      	bcc.n	8008732 <HAL_DMA_IRQHandler+0x8f6>
 8008722:	687b      	ldr	r3, [r7, #4]
 8008724:	681b      	ldr	r3, [r3, #0]
 8008726:	681b      	ldr	r3, [r3, #0]
 8008728:	f003 0301 	and.w	r3, r3, #1
 800872c:	2b00      	cmp	r3, #0
 800872e:	d1f2      	bne.n	8008716 <HAL_DMA_IRQHandler+0x8da>
 8008730:	e000      	b.n	8008734 <HAL_DMA_IRQHandler+0x8f8>
 8008732:	bf00      	nop
 8008734:	687b      	ldr	r3, [r7, #4]
 8008736:	681b      	ldr	r3, [r3, #0]
 8008738:	681b      	ldr	r3, [r3, #0]
 800873a:	f003 0301 	and.w	r3, r3, #1
 800873e:	2b00      	cmp	r3, #0
 8008740:	d004      	beq.n	800874c <HAL_DMA_IRQHandler+0x910>
 8008742:	687b      	ldr	r3, [r7, #4]
 8008744:	2203      	movs	r2, #3
 8008746:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800874a:	e003      	b.n	8008754 <HAL_DMA_IRQHandler+0x918>
 800874c:	687b      	ldr	r3, [r7, #4]
 800874e:	2201      	movs	r2, #1
 8008750:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8008754:	687b      	ldr	r3, [r7, #4]
 8008756:	2200      	movs	r2, #0
 8008758:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800875c:	687b      	ldr	r3, [r7, #4]
 800875e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008760:	2b00      	cmp	r3, #0
 8008762:	f000 8272 	beq.w	8008c4a <HAL_DMA_IRQHandler+0xe0e>
 8008766:	687b      	ldr	r3, [r7, #4]
 8008768:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800876a:	6878      	ldr	r0, [r7, #4]
 800876c:	4798      	blx	r3
 800876e:	e26c      	b.n	8008c4a <HAL_DMA_IRQHandler+0xe0e>
 8008770:	687b      	ldr	r3, [r7, #4]
 8008772:	681b      	ldr	r3, [r3, #0]
 8008774:	4a43      	ldr	r2, [pc, #268]	@ (8008884 <HAL_DMA_IRQHandler+0xa48>)
 8008776:	4293      	cmp	r3, r2
 8008778:	d022      	beq.n	80087c0 <HAL_DMA_IRQHandler+0x984>
 800877a:	687b      	ldr	r3, [r7, #4]
 800877c:	681b      	ldr	r3, [r3, #0]
 800877e:	4a42      	ldr	r2, [pc, #264]	@ (8008888 <HAL_DMA_IRQHandler+0xa4c>)
 8008780:	4293      	cmp	r3, r2
 8008782:	d01d      	beq.n	80087c0 <HAL_DMA_IRQHandler+0x984>
 8008784:	687b      	ldr	r3, [r7, #4]
 8008786:	681b      	ldr	r3, [r3, #0]
 8008788:	4a40      	ldr	r2, [pc, #256]	@ (800888c <HAL_DMA_IRQHandler+0xa50>)
 800878a:	4293      	cmp	r3, r2
 800878c:	d018      	beq.n	80087c0 <HAL_DMA_IRQHandler+0x984>
 800878e:	687b      	ldr	r3, [r7, #4]
 8008790:	681b      	ldr	r3, [r3, #0]
 8008792:	4a3f      	ldr	r2, [pc, #252]	@ (8008890 <HAL_DMA_IRQHandler+0xa54>)
 8008794:	4293      	cmp	r3, r2
 8008796:	d013      	beq.n	80087c0 <HAL_DMA_IRQHandler+0x984>
 8008798:	687b      	ldr	r3, [r7, #4]
 800879a:	681b      	ldr	r3, [r3, #0]
 800879c:	4a3d      	ldr	r2, [pc, #244]	@ (8008894 <HAL_DMA_IRQHandler+0xa58>)
 800879e:	4293      	cmp	r3, r2
 80087a0:	d00e      	beq.n	80087c0 <HAL_DMA_IRQHandler+0x984>
 80087a2:	687b      	ldr	r3, [r7, #4]
 80087a4:	681b      	ldr	r3, [r3, #0]
 80087a6:	4a3c      	ldr	r2, [pc, #240]	@ (8008898 <HAL_DMA_IRQHandler+0xa5c>)
 80087a8:	4293      	cmp	r3, r2
 80087aa:	d009      	beq.n	80087c0 <HAL_DMA_IRQHandler+0x984>
 80087ac:	687b      	ldr	r3, [r7, #4]
 80087ae:	681b      	ldr	r3, [r3, #0]
 80087b0:	4a3a      	ldr	r2, [pc, #232]	@ (800889c <HAL_DMA_IRQHandler+0xa60>)
 80087b2:	4293      	cmp	r3, r2
 80087b4:	d004      	beq.n	80087c0 <HAL_DMA_IRQHandler+0x984>
 80087b6:	687b      	ldr	r3, [r7, #4]
 80087b8:	681b      	ldr	r3, [r3, #0]
 80087ba:	4a39      	ldr	r2, [pc, #228]	@ (80088a0 <HAL_DMA_IRQHandler+0xa64>)
 80087bc:	4293      	cmp	r3, r2
 80087be:	d101      	bne.n	80087c4 <HAL_DMA_IRQHandler+0x988>
 80087c0:	2301      	movs	r3, #1
 80087c2:	e000      	b.n	80087c6 <HAL_DMA_IRQHandler+0x98a>
 80087c4:	2300      	movs	r3, #0
 80087c6:	2b00      	cmp	r3, #0
 80087c8:	f000 823f 	beq.w	8008c4a <HAL_DMA_IRQHandler+0xe0e>
 80087cc:	687b      	ldr	r3, [r7, #4]
 80087ce:	681b      	ldr	r3, [r3, #0]
 80087d0:	681b      	ldr	r3, [r3, #0]
 80087d2:	613b      	str	r3, [r7, #16]
 80087d4:	687b      	ldr	r3, [r7, #4]
 80087d6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80087d8:	f003 031f 	and.w	r3, r3, #31
 80087dc:	2204      	movs	r2, #4
 80087de:	409a      	lsls	r2, r3
 80087e0:	697b      	ldr	r3, [r7, #20]
 80087e2:	4013      	ands	r3, r2
 80087e4:	2b00      	cmp	r3, #0
 80087e6:	f000 80cd 	beq.w	8008984 <HAL_DMA_IRQHandler+0xb48>
 80087ea:	693b      	ldr	r3, [r7, #16]
 80087ec:	f003 0304 	and.w	r3, r3, #4
 80087f0:	2b00      	cmp	r3, #0
 80087f2:	f000 80c7 	beq.w	8008984 <HAL_DMA_IRQHandler+0xb48>
 80087f6:	687b      	ldr	r3, [r7, #4]
 80087f8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80087fa:	f003 031f 	and.w	r3, r3, #31
 80087fe:	2204      	movs	r2, #4
 8008800:	409a      	lsls	r2, r3
 8008802:	69fb      	ldr	r3, [r7, #28]
 8008804:	605a      	str	r2, [r3, #4]
 8008806:	693b      	ldr	r3, [r7, #16]
 8008808:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800880c:	2b00      	cmp	r3, #0
 800880e:	d049      	beq.n	80088a4 <HAL_DMA_IRQHandler+0xa68>
 8008810:	693b      	ldr	r3, [r7, #16]
 8008812:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8008816:	2b00      	cmp	r3, #0
 8008818:	d109      	bne.n	800882e <HAL_DMA_IRQHandler+0x9f2>
 800881a:	687b      	ldr	r3, [r7, #4]
 800881c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800881e:	2b00      	cmp	r3, #0
 8008820:	f000 8210 	beq.w	8008c44 <HAL_DMA_IRQHandler+0xe08>
 8008824:	687b      	ldr	r3, [r7, #4]
 8008826:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8008828:	6878      	ldr	r0, [r7, #4]
 800882a:	4798      	blx	r3
 800882c:	e20a      	b.n	8008c44 <HAL_DMA_IRQHandler+0xe08>
 800882e:	687b      	ldr	r3, [r7, #4]
 8008830:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008832:	2b00      	cmp	r3, #0
 8008834:	f000 8206 	beq.w	8008c44 <HAL_DMA_IRQHandler+0xe08>
 8008838:	687b      	ldr	r3, [r7, #4]
 800883a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800883c:	6878      	ldr	r0, [r7, #4]
 800883e:	4798      	blx	r3
 8008840:	e200      	b.n	8008c44 <HAL_DMA_IRQHandler+0xe08>
 8008842:	bf00      	nop
 8008844:	40020010 	.word	0x40020010
 8008848:	40020028 	.word	0x40020028
 800884c:	40020040 	.word	0x40020040
 8008850:	40020058 	.word	0x40020058
 8008854:	40020070 	.word	0x40020070
 8008858:	40020088 	.word	0x40020088
 800885c:	400200a0 	.word	0x400200a0
 8008860:	400200b8 	.word	0x400200b8
 8008864:	40020410 	.word	0x40020410
 8008868:	40020428 	.word	0x40020428
 800886c:	40020440 	.word	0x40020440
 8008870:	40020458 	.word	0x40020458
 8008874:	40020470 	.word	0x40020470
 8008878:	40020488 	.word	0x40020488
 800887c:	400204a0 	.word	0x400204a0
 8008880:	400204b8 	.word	0x400204b8
 8008884:	58025408 	.word	0x58025408
 8008888:	5802541c 	.word	0x5802541c
 800888c:	58025430 	.word	0x58025430
 8008890:	58025444 	.word	0x58025444
 8008894:	58025458 	.word	0x58025458
 8008898:	5802546c 	.word	0x5802546c
 800889c:	58025480 	.word	0x58025480
 80088a0:	58025494 	.word	0x58025494
 80088a4:	693b      	ldr	r3, [r7, #16]
 80088a6:	f003 0320 	and.w	r3, r3, #32
 80088aa:	2b00      	cmp	r3, #0
 80088ac:	d160      	bne.n	8008970 <HAL_DMA_IRQHandler+0xb34>
 80088ae:	687b      	ldr	r3, [r7, #4]
 80088b0:	681b      	ldr	r3, [r3, #0]
 80088b2:	4a7f      	ldr	r2, [pc, #508]	@ (8008ab0 <HAL_DMA_IRQHandler+0xc74>)
 80088b4:	4293      	cmp	r3, r2
 80088b6:	d04a      	beq.n	800894e <HAL_DMA_IRQHandler+0xb12>
 80088b8:	687b      	ldr	r3, [r7, #4]
 80088ba:	681b      	ldr	r3, [r3, #0]
 80088bc:	4a7d      	ldr	r2, [pc, #500]	@ (8008ab4 <HAL_DMA_IRQHandler+0xc78>)
 80088be:	4293      	cmp	r3, r2
 80088c0:	d045      	beq.n	800894e <HAL_DMA_IRQHandler+0xb12>
 80088c2:	687b      	ldr	r3, [r7, #4]
 80088c4:	681b      	ldr	r3, [r3, #0]
 80088c6:	4a7c      	ldr	r2, [pc, #496]	@ (8008ab8 <HAL_DMA_IRQHandler+0xc7c>)
 80088c8:	4293      	cmp	r3, r2
 80088ca:	d040      	beq.n	800894e <HAL_DMA_IRQHandler+0xb12>
 80088cc:	687b      	ldr	r3, [r7, #4]
 80088ce:	681b      	ldr	r3, [r3, #0]
 80088d0:	4a7a      	ldr	r2, [pc, #488]	@ (8008abc <HAL_DMA_IRQHandler+0xc80>)
 80088d2:	4293      	cmp	r3, r2
 80088d4:	d03b      	beq.n	800894e <HAL_DMA_IRQHandler+0xb12>
 80088d6:	687b      	ldr	r3, [r7, #4]
 80088d8:	681b      	ldr	r3, [r3, #0]
 80088da:	4a79      	ldr	r2, [pc, #484]	@ (8008ac0 <HAL_DMA_IRQHandler+0xc84>)
 80088dc:	4293      	cmp	r3, r2
 80088de:	d036      	beq.n	800894e <HAL_DMA_IRQHandler+0xb12>
 80088e0:	687b      	ldr	r3, [r7, #4]
 80088e2:	681b      	ldr	r3, [r3, #0]
 80088e4:	4a77      	ldr	r2, [pc, #476]	@ (8008ac4 <HAL_DMA_IRQHandler+0xc88>)
 80088e6:	4293      	cmp	r3, r2
 80088e8:	d031      	beq.n	800894e <HAL_DMA_IRQHandler+0xb12>
 80088ea:	687b      	ldr	r3, [r7, #4]
 80088ec:	681b      	ldr	r3, [r3, #0]
 80088ee:	4a76      	ldr	r2, [pc, #472]	@ (8008ac8 <HAL_DMA_IRQHandler+0xc8c>)
 80088f0:	4293      	cmp	r3, r2
 80088f2:	d02c      	beq.n	800894e <HAL_DMA_IRQHandler+0xb12>
 80088f4:	687b      	ldr	r3, [r7, #4]
 80088f6:	681b      	ldr	r3, [r3, #0]
 80088f8:	4a74      	ldr	r2, [pc, #464]	@ (8008acc <HAL_DMA_IRQHandler+0xc90>)
 80088fa:	4293      	cmp	r3, r2
 80088fc:	d027      	beq.n	800894e <HAL_DMA_IRQHandler+0xb12>
 80088fe:	687b      	ldr	r3, [r7, #4]
 8008900:	681b      	ldr	r3, [r3, #0]
 8008902:	4a73      	ldr	r2, [pc, #460]	@ (8008ad0 <HAL_DMA_IRQHandler+0xc94>)
 8008904:	4293      	cmp	r3, r2
 8008906:	d022      	beq.n	800894e <HAL_DMA_IRQHandler+0xb12>
 8008908:	687b      	ldr	r3, [r7, #4]
 800890a:	681b      	ldr	r3, [r3, #0]
 800890c:	4a71      	ldr	r2, [pc, #452]	@ (8008ad4 <HAL_DMA_IRQHandler+0xc98>)
 800890e:	4293      	cmp	r3, r2
 8008910:	d01d      	beq.n	800894e <HAL_DMA_IRQHandler+0xb12>
 8008912:	687b      	ldr	r3, [r7, #4]
 8008914:	681b      	ldr	r3, [r3, #0]
 8008916:	4a70      	ldr	r2, [pc, #448]	@ (8008ad8 <HAL_DMA_IRQHandler+0xc9c>)
 8008918:	4293      	cmp	r3, r2
 800891a:	d018      	beq.n	800894e <HAL_DMA_IRQHandler+0xb12>
 800891c:	687b      	ldr	r3, [r7, #4]
 800891e:	681b      	ldr	r3, [r3, #0]
 8008920:	4a6e      	ldr	r2, [pc, #440]	@ (8008adc <HAL_DMA_IRQHandler+0xca0>)
 8008922:	4293      	cmp	r3, r2
 8008924:	d013      	beq.n	800894e <HAL_DMA_IRQHandler+0xb12>
 8008926:	687b      	ldr	r3, [r7, #4]
 8008928:	681b      	ldr	r3, [r3, #0]
 800892a:	4a6d      	ldr	r2, [pc, #436]	@ (8008ae0 <HAL_DMA_IRQHandler+0xca4>)
 800892c:	4293      	cmp	r3, r2
 800892e:	d00e      	beq.n	800894e <HAL_DMA_IRQHandler+0xb12>
 8008930:	687b      	ldr	r3, [r7, #4]
 8008932:	681b      	ldr	r3, [r3, #0]
 8008934:	4a6b      	ldr	r2, [pc, #428]	@ (8008ae4 <HAL_DMA_IRQHandler+0xca8>)
 8008936:	4293      	cmp	r3, r2
 8008938:	d009      	beq.n	800894e <HAL_DMA_IRQHandler+0xb12>
 800893a:	687b      	ldr	r3, [r7, #4]
 800893c:	681b      	ldr	r3, [r3, #0]
 800893e:	4a6a      	ldr	r2, [pc, #424]	@ (8008ae8 <HAL_DMA_IRQHandler+0xcac>)
 8008940:	4293      	cmp	r3, r2
 8008942:	d004      	beq.n	800894e <HAL_DMA_IRQHandler+0xb12>
 8008944:	687b      	ldr	r3, [r7, #4]
 8008946:	681b      	ldr	r3, [r3, #0]
 8008948:	4a68      	ldr	r2, [pc, #416]	@ (8008aec <HAL_DMA_IRQHandler+0xcb0>)
 800894a:	4293      	cmp	r3, r2
 800894c:	d108      	bne.n	8008960 <HAL_DMA_IRQHandler+0xb24>
 800894e:	687b      	ldr	r3, [r7, #4]
 8008950:	681b      	ldr	r3, [r3, #0]
 8008952:	681a      	ldr	r2, [r3, #0]
 8008954:	687b      	ldr	r3, [r7, #4]
 8008956:	681b      	ldr	r3, [r3, #0]
 8008958:	f022 0208 	bic.w	r2, r2, #8
 800895c:	601a      	str	r2, [r3, #0]
 800895e:	e007      	b.n	8008970 <HAL_DMA_IRQHandler+0xb34>
 8008960:	687b      	ldr	r3, [r7, #4]
 8008962:	681b      	ldr	r3, [r3, #0]
 8008964:	681a      	ldr	r2, [r3, #0]
 8008966:	687b      	ldr	r3, [r7, #4]
 8008968:	681b      	ldr	r3, [r3, #0]
 800896a:	f022 0204 	bic.w	r2, r2, #4
 800896e:	601a      	str	r2, [r3, #0]
 8008970:	687b      	ldr	r3, [r7, #4]
 8008972:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008974:	2b00      	cmp	r3, #0
 8008976:	f000 8165 	beq.w	8008c44 <HAL_DMA_IRQHandler+0xe08>
 800897a:	687b      	ldr	r3, [r7, #4]
 800897c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800897e:	6878      	ldr	r0, [r7, #4]
 8008980:	4798      	blx	r3
 8008982:	e15f      	b.n	8008c44 <HAL_DMA_IRQHandler+0xe08>
 8008984:	687b      	ldr	r3, [r7, #4]
 8008986:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008988:	f003 031f 	and.w	r3, r3, #31
 800898c:	2202      	movs	r2, #2
 800898e:	409a      	lsls	r2, r3
 8008990:	697b      	ldr	r3, [r7, #20]
 8008992:	4013      	ands	r3, r2
 8008994:	2b00      	cmp	r3, #0
 8008996:	f000 80c5 	beq.w	8008b24 <HAL_DMA_IRQHandler+0xce8>
 800899a:	693b      	ldr	r3, [r7, #16]
 800899c:	f003 0302 	and.w	r3, r3, #2
 80089a0:	2b00      	cmp	r3, #0
 80089a2:	f000 80bf 	beq.w	8008b24 <HAL_DMA_IRQHandler+0xce8>
 80089a6:	687b      	ldr	r3, [r7, #4]
 80089a8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80089aa:	f003 031f 	and.w	r3, r3, #31
 80089ae:	2202      	movs	r2, #2
 80089b0:	409a      	lsls	r2, r3
 80089b2:	69fb      	ldr	r3, [r7, #28]
 80089b4:	605a      	str	r2, [r3, #4]
 80089b6:	693b      	ldr	r3, [r7, #16]
 80089b8:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80089bc:	2b00      	cmp	r3, #0
 80089be:	d018      	beq.n	80089f2 <HAL_DMA_IRQHandler+0xbb6>
 80089c0:	693b      	ldr	r3, [r7, #16]
 80089c2:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80089c6:	2b00      	cmp	r3, #0
 80089c8:	d109      	bne.n	80089de <HAL_DMA_IRQHandler+0xba2>
 80089ca:	687b      	ldr	r3, [r7, #4]
 80089cc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80089ce:	2b00      	cmp	r3, #0
 80089d0:	f000 813a 	beq.w	8008c48 <HAL_DMA_IRQHandler+0xe0c>
 80089d4:	687b      	ldr	r3, [r7, #4]
 80089d6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80089d8:	6878      	ldr	r0, [r7, #4]
 80089da:	4798      	blx	r3
 80089dc:	e134      	b.n	8008c48 <HAL_DMA_IRQHandler+0xe0c>
 80089de:	687b      	ldr	r3, [r7, #4]
 80089e0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80089e2:	2b00      	cmp	r3, #0
 80089e4:	f000 8130 	beq.w	8008c48 <HAL_DMA_IRQHandler+0xe0c>
 80089e8:	687b      	ldr	r3, [r7, #4]
 80089ea:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80089ec:	6878      	ldr	r0, [r7, #4]
 80089ee:	4798      	blx	r3
 80089f0:	e12a      	b.n	8008c48 <HAL_DMA_IRQHandler+0xe0c>
 80089f2:	693b      	ldr	r3, [r7, #16]
 80089f4:	f003 0320 	and.w	r3, r3, #32
 80089f8:	2b00      	cmp	r3, #0
 80089fa:	f040 8089 	bne.w	8008b10 <HAL_DMA_IRQHandler+0xcd4>
 80089fe:	687b      	ldr	r3, [r7, #4]
 8008a00:	681b      	ldr	r3, [r3, #0]
 8008a02:	4a2b      	ldr	r2, [pc, #172]	@ (8008ab0 <HAL_DMA_IRQHandler+0xc74>)
 8008a04:	4293      	cmp	r3, r2
 8008a06:	d04a      	beq.n	8008a9e <HAL_DMA_IRQHandler+0xc62>
 8008a08:	687b      	ldr	r3, [r7, #4]
 8008a0a:	681b      	ldr	r3, [r3, #0]
 8008a0c:	4a29      	ldr	r2, [pc, #164]	@ (8008ab4 <HAL_DMA_IRQHandler+0xc78>)
 8008a0e:	4293      	cmp	r3, r2
 8008a10:	d045      	beq.n	8008a9e <HAL_DMA_IRQHandler+0xc62>
 8008a12:	687b      	ldr	r3, [r7, #4]
 8008a14:	681b      	ldr	r3, [r3, #0]
 8008a16:	4a28      	ldr	r2, [pc, #160]	@ (8008ab8 <HAL_DMA_IRQHandler+0xc7c>)
 8008a18:	4293      	cmp	r3, r2
 8008a1a:	d040      	beq.n	8008a9e <HAL_DMA_IRQHandler+0xc62>
 8008a1c:	687b      	ldr	r3, [r7, #4]
 8008a1e:	681b      	ldr	r3, [r3, #0]
 8008a20:	4a26      	ldr	r2, [pc, #152]	@ (8008abc <HAL_DMA_IRQHandler+0xc80>)
 8008a22:	4293      	cmp	r3, r2
 8008a24:	d03b      	beq.n	8008a9e <HAL_DMA_IRQHandler+0xc62>
 8008a26:	687b      	ldr	r3, [r7, #4]
 8008a28:	681b      	ldr	r3, [r3, #0]
 8008a2a:	4a25      	ldr	r2, [pc, #148]	@ (8008ac0 <HAL_DMA_IRQHandler+0xc84>)
 8008a2c:	4293      	cmp	r3, r2
 8008a2e:	d036      	beq.n	8008a9e <HAL_DMA_IRQHandler+0xc62>
 8008a30:	687b      	ldr	r3, [r7, #4]
 8008a32:	681b      	ldr	r3, [r3, #0]
 8008a34:	4a23      	ldr	r2, [pc, #140]	@ (8008ac4 <HAL_DMA_IRQHandler+0xc88>)
 8008a36:	4293      	cmp	r3, r2
 8008a38:	d031      	beq.n	8008a9e <HAL_DMA_IRQHandler+0xc62>
 8008a3a:	687b      	ldr	r3, [r7, #4]
 8008a3c:	681b      	ldr	r3, [r3, #0]
 8008a3e:	4a22      	ldr	r2, [pc, #136]	@ (8008ac8 <HAL_DMA_IRQHandler+0xc8c>)
 8008a40:	4293      	cmp	r3, r2
 8008a42:	d02c      	beq.n	8008a9e <HAL_DMA_IRQHandler+0xc62>
 8008a44:	687b      	ldr	r3, [r7, #4]
 8008a46:	681b      	ldr	r3, [r3, #0]
 8008a48:	4a20      	ldr	r2, [pc, #128]	@ (8008acc <HAL_DMA_IRQHandler+0xc90>)
 8008a4a:	4293      	cmp	r3, r2
 8008a4c:	d027      	beq.n	8008a9e <HAL_DMA_IRQHandler+0xc62>
 8008a4e:	687b      	ldr	r3, [r7, #4]
 8008a50:	681b      	ldr	r3, [r3, #0]
 8008a52:	4a1f      	ldr	r2, [pc, #124]	@ (8008ad0 <HAL_DMA_IRQHandler+0xc94>)
 8008a54:	4293      	cmp	r3, r2
 8008a56:	d022      	beq.n	8008a9e <HAL_DMA_IRQHandler+0xc62>
 8008a58:	687b      	ldr	r3, [r7, #4]
 8008a5a:	681b      	ldr	r3, [r3, #0]
 8008a5c:	4a1d      	ldr	r2, [pc, #116]	@ (8008ad4 <HAL_DMA_IRQHandler+0xc98>)
 8008a5e:	4293      	cmp	r3, r2
 8008a60:	d01d      	beq.n	8008a9e <HAL_DMA_IRQHandler+0xc62>
 8008a62:	687b      	ldr	r3, [r7, #4]
 8008a64:	681b      	ldr	r3, [r3, #0]
 8008a66:	4a1c      	ldr	r2, [pc, #112]	@ (8008ad8 <HAL_DMA_IRQHandler+0xc9c>)
 8008a68:	4293      	cmp	r3, r2
 8008a6a:	d018      	beq.n	8008a9e <HAL_DMA_IRQHandler+0xc62>
 8008a6c:	687b      	ldr	r3, [r7, #4]
 8008a6e:	681b      	ldr	r3, [r3, #0]
 8008a70:	4a1a      	ldr	r2, [pc, #104]	@ (8008adc <HAL_DMA_IRQHandler+0xca0>)
 8008a72:	4293      	cmp	r3, r2
 8008a74:	d013      	beq.n	8008a9e <HAL_DMA_IRQHandler+0xc62>
 8008a76:	687b      	ldr	r3, [r7, #4]
 8008a78:	681b      	ldr	r3, [r3, #0]
 8008a7a:	4a19      	ldr	r2, [pc, #100]	@ (8008ae0 <HAL_DMA_IRQHandler+0xca4>)
 8008a7c:	4293      	cmp	r3, r2
 8008a7e:	d00e      	beq.n	8008a9e <HAL_DMA_IRQHandler+0xc62>
 8008a80:	687b      	ldr	r3, [r7, #4]
 8008a82:	681b      	ldr	r3, [r3, #0]
 8008a84:	4a17      	ldr	r2, [pc, #92]	@ (8008ae4 <HAL_DMA_IRQHandler+0xca8>)
 8008a86:	4293      	cmp	r3, r2
 8008a88:	d009      	beq.n	8008a9e <HAL_DMA_IRQHandler+0xc62>
 8008a8a:	687b      	ldr	r3, [r7, #4]
 8008a8c:	681b      	ldr	r3, [r3, #0]
 8008a8e:	4a16      	ldr	r2, [pc, #88]	@ (8008ae8 <HAL_DMA_IRQHandler+0xcac>)
 8008a90:	4293      	cmp	r3, r2
 8008a92:	d004      	beq.n	8008a9e <HAL_DMA_IRQHandler+0xc62>
 8008a94:	687b      	ldr	r3, [r7, #4]
 8008a96:	681b      	ldr	r3, [r3, #0]
 8008a98:	4a14      	ldr	r2, [pc, #80]	@ (8008aec <HAL_DMA_IRQHandler+0xcb0>)
 8008a9a:	4293      	cmp	r3, r2
 8008a9c:	d128      	bne.n	8008af0 <HAL_DMA_IRQHandler+0xcb4>
 8008a9e:	687b      	ldr	r3, [r7, #4]
 8008aa0:	681b      	ldr	r3, [r3, #0]
 8008aa2:	681a      	ldr	r2, [r3, #0]
 8008aa4:	687b      	ldr	r3, [r7, #4]
 8008aa6:	681b      	ldr	r3, [r3, #0]
 8008aa8:	f022 0214 	bic.w	r2, r2, #20
 8008aac:	601a      	str	r2, [r3, #0]
 8008aae:	e027      	b.n	8008b00 <HAL_DMA_IRQHandler+0xcc4>
 8008ab0:	40020010 	.word	0x40020010
 8008ab4:	40020028 	.word	0x40020028
 8008ab8:	40020040 	.word	0x40020040
 8008abc:	40020058 	.word	0x40020058
 8008ac0:	40020070 	.word	0x40020070
 8008ac4:	40020088 	.word	0x40020088
 8008ac8:	400200a0 	.word	0x400200a0
 8008acc:	400200b8 	.word	0x400200b8
 8008ad0:	40020410 	.word	0x40020410
 8008ad4:	40020428 	.word	0x40020428
 8008ad8:	40020440 	.word	0x40020440
 8008adc:	40020458 	.word	0x40020458
 8008ae0:	40020470 	.word	0x40020470
 8008ae4:	40020488 	.word	0x40020488
 8008ae8:	400204a0 	.word	0x400204a0
 8008aec:	400204b8 	.word	0x400204b8
 8008af0:	687b      	ldr	r3, [r7, #4]
 8008af2:	681b      	ldr	r3, [r3, #0]
 8008af4:	681a      	ldr	r2, [r3, #0]
 8008af6:	687b      	ldr	r3, [r7, #4]
 8008af8:	681b      	ldr	r3, [r3, #0]
 8008afa:	f022 020a 	bic.w	r2, r2, #10
 8008afe:	601a      	str	r2, [r3, #0]
 8008b00:	687b      	ldr	r3, [r7, #4]
 8008b02:	2201      	movs	r2, #1
 8008b04:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8008b08:	687b      	ldr	r3, [r7, #4]
 8008b0a:	2200      	movs	r2, #0
 8008b0c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8008b10:	687b      	ldr	r3, [r7, #4]
 8008b12:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008b14:	2b00      	cmp	r3, #0
 8008b16:	f000 8097 	beq.w	8008c48 <HAL_DMA_IRQHandler+0xe0c>
 8008b1a:	687b      	ldr	r3, [r7, #4]
 8008b1c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008b1e:	6878      	ldr	r0, [r7, #4]
 8008b20:	4798      	blx	r3
 8008b22:	e091      	b.n	8008c48 <HAL_DMA_IRQHandler+0xe0c>
 8008b24:	687b      	ldr	r3, [r7, #4]
 8008b26:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008b28:	f003 031f 	and.w	r3, r3, #31
 8008b2c:	2208      	movs	r2, #8
 8008b2e:	409a      	lsls	r2, r3
 8008b30:	697b      	ldr	r3, [r7, #20]
 8008b32:	4013      	ands	r3, r2
 8008b34:	2b00      	cmp	r3, #0
 8008b36:	f000 8088 	beq.w	8008c4a <HAL_DMA_IRQHandler+0xe0e>
 8008b3a:	693b      	ldr	r3, [r7, #16]
 8008b3c:	f003 0308 	and.w	r3, r3, #8
 8008b40:	2b00      	cmp	r3, #0
 8008b42:	f000 8082 	beq.w	8008c4a <HAL_DMA_IRQHandler+0xe0e>
 8008b46:	687b      	ldr	r3, [r7, #4]
 8008b48:	681b      	ldr	r3, [r3, #0]
 8008b4a:	4a41      	ldr	r2, [pc, #260]	@ (8008c50 <HAL_DMA_IRQHandler+0xe14>)
 8008b4c:	4293      	cmp	r3, r2
 8008b4e:	d04a      	beq.n	8008be6 <HAL_DMA_IRQHandler+0xdaa>
 8008b50:	687b      	ldr	r3, [r7, #4]
 8008b52:	681b      	ldr	r3, [r3, #0]
 8008b54:	4a3f      	ldr	r2, [pc, #252]	@ (8008c54 <HAL_DMA_IRQHandler+0xe18>)
 8008b56:	4293      	cmp	r3, r2
 8008b58:	d045      	beq.n	8008be6 <HAL_DMA_IRQHandler+0xdaa>
 8008b5a:	687b      	ldr	r3, [r7, #4]
 8008b5c:	681b      	ldr	r3, [r3, #0]
 8008b5e:	4a3e      	ldr	r2, [pc, #248]	@ (8008c58 <HAL_DMA_IRQHandler+0xe1c>)
 8008b60:	4293      	cmp	r3, r2
 8008b62:	d040      	beq.n	8008be6 <HAL_DMA_IRQHandler+0xdaa>
 8008b64:	687b      	ldr	r3, [r7, #4]
 8008b66:	681b      	ldr	r3, [r3, #0]
 8008b68:	4a3c      	ldr	r2, [pc, #240]	@ (8008c5c <HAL_DMA_IRQHandler+0xe20>)
 8008b6a:	4293      	cmp	r3, r2
 8008b6c:	d03b      	beq.n	8008be6 <HAL_DMA_IRQHandler+0xdaa>
 8008b6e:	687b      	ldr	r3, [r7, #4]
 8008b70:	681b      	ldr	r3, [r3, #0]
 8008b72:	4a3b      	ldr	r2, [pc, #236]	@ (8008c60 <HAL_DMA_IRQHandler+0xe24>)
 8008b74:	4293      	cmp	r3, r2
 8008b76:	d036      	beq.n	8008be6 <HAL_DMA_IRQHandler+0xdaa>
 8008b78:	687b      	ldr	r3, [r7, #4]
 8008b7a:	681b      	ldr	r3, [r3, #0]
 8008b7c:	4a39      	ldr	r2, [pc, #228]	@ (8008c64 <HAL_DMA_IRQHandler+0xe28>)
 8008b7e:	4293      	cmp	r3, r2
 8008b80:	d031      	beq.n	8008be6 <HAL_DMA_IRQHandler+0xdaa>
 8008b82:	687b      	ldr	r3, [r7, #4]
 8008b84:	681b      	ldr	r3, [r3, #0]
 8008b86:	4a38      	ldr	r2, [pc, #224]	@ (8008c68 <HAL_DMA_IRQHandler+0xe2c>)
 8008b88:	4293      	cmp	r3, r2
 8008b8a:	d02c      	beq.n	8008be6 <HAL_DMA_IRQHandler+0xdaa>
 8008b8c:	687b      	ldr	r3, [r7, #4]
 8008b8e:	681b      	ldr	r3, [r3, #0]
 8008b90:	4a36      	ldr	r2, [pc, #216]	@ (8008c6c <HAL_DMA_IRQHandler+0xe30>)
 8008b92:	4293      	cmp	r3, r2
 8008b94:	d027      	beq.n	8008be6 <HAL_DMA_IRQHandler+0xdaa>
 8008b96:	687b      	ldr	r3, [r7, #4]
 8008b98:	681b      	ldr	r3, [r3, #0]
 8008b9a:	4a35      	ldr	r2, [pc, #212]	@ (8008c70 <HAL_DMA_IRQHandler+0xe34>)
 8008b9c:	4293      	cmp	r3, r2
 8008b9e:	d022      	beq.n	8008be6 <HAL_DMA_IRQHandler+0xdaa>
 8008ba0:	687b      	ldr	r3, [r7, #4]
 8008ba2:	681b      	ldr	r3, [r3, #0]
 8008ba4:	4a33      	ldr	r2, [pc, #204]	@ (8008c74 <HAL_DMA_IRQHandler+0xe38>)
 8008ba6:	4293      	cmp	r3, r2
 8008ba8:	d01d      	beq.n	8008be6 <HAL_DMA_IRQHandler+0xdaa>
 8008baa:	687b      	ldr	r3, [r7, #4]
 8008bac:	681b      	ldr	r3, [r3, #0]
 8008bae:	4a32      	ldr	r2, [pc, #200]	@ (8008c78 <HAL_DMA_IRQHandler+0xe3c>)
 8008bb0:	4293      	cmp	r3, r2
 8008bb2:	d018      	beq.n	8008be6 <HAL_DMA_IRQHandler+0xdaa>
 8008bb4:	687b      	ldr	r3, [r7, #4]
 8008bb6:	681b      	ldr	r3, [r3, #0]
 8008bb8:	4a30      	ldr	r2, [pc, #192]	@ (8008c7c <HAL_DMA_IRQHandler+0xe40>)
 8008bba:	4293      	cmp	r3, r2
 8008bbc:	d013      	beq.n	8008be6 <HAL_DMA_IRQHandler+0xdaa>
 8008bbe:	687b      	ldr	r3, [r7, #4]
 8008bc0:	681b      	ldr	r3, [r3, #0]
 8008bc2:	4a2f      	ldr	r2, [pc, #188]	@ (8008c80 <HAL_DMA_IRQHandler+0xe44>)
 8008bc4:	4293      	cmp	r3, r2
 8008bc6:	d00e      	beq.n	8008be6 <HAL_DMA_IRQHandler+0xdaa>
 8008bc8:	687b      	ldr	r3, [r7, #4]
 8008bca:	681b      	ldr	r3, [r3, #0]
 8008bcc:	4a2d      	ldr	r2, [pc, #180]	@ (8008c84 <HAL_DMA_IRQHandler+0xe48>)
 8008bce:	4293      	cmp	r3, r2
 8008bd0:	d009      	beq.n	8008be6 <HAL_DMA_IRQHandler+0xdaa>
 8008bd2:	687b      	ldr	r3, [r7, #4]
 8008bd4:	681b      	ldr	r3, [r3, #0]
 8008bd6:	4a2c      	ldr	r2, [pc, #176]	@ (8008c88 <HAL_DMA_IRQHandler+0xe4c>)
 8008bd8:	4293      	cmp	r3, r2
 8008bda:	d004      	beq.n	8008be6 <HAL_DMA_IRQHandler+0xdaa>
 8008bdc:	687b      	ldr	r3, [r7, #4]
 8008bde:	681b      	ldr	r3, [r3, #0]
 8008be0:	4a2a      	ldr	r2, [pc, #168]	@ (8008c8c <HAL_DMA_IRQHandler+0xe50>)
 8008be2:	4293      	cmp	r3, r2
 8008be4:	d108      	bne.n	8008bf8 <HAL_DMA_IRQHandler+0xdbc>
 8008be6:	687b      	ldr	r3, [r7, #4]
 8008be8:	681b      	ldr	r3, [r3, #0]
 8008bea:	681a      	ldr	r2, [r3, #0]
 8008bec:	687b      	ldr	r3, [r7, #4]
 8008bee:	681b      	ldr	r3, [r3, #0]
 8008bf0:	f022 021c 	bic.w	r2, r2, #28
 8008bf4:	601a      	str	r2, [r3, #0]
 8008bf6:	e007      	b.n	8008c08 <HAL_DMA_IRQHandler+0xdcc>
 8008bf8:	687b      	ldr	r3, [r7, #4]
 8008bfa:	681b      	ldr	r3, [r3, #0]
 8008bfc:	681a      	ldr	r2, [r3, #0]
 8008bfe:	687b      	ldr	r3, [r7, #4]
 8008c00:	681b      	ldr	r3, [r3, #0]
 8008c02:	f022 020e 	bic.w	r2, r2, #14
 8008c06:	601a      	str	r2, [r3, #0]
 8008c08:	687b      	ldr	r3, [r7, #4]
 8008c0a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008c0c:	f003 031f 	and.w	r3, r3, #31
 8008c10:	2201      	movs	r2, #1
 8008c12:	409a      	lsls	r2, r3
 8008c14:	69fb      	ldr	r3, [r7, #28]
 8008c16:	605a      	str	r2, [r3, #4]
 8008c18:	687b      	ldr	r3, [r7, #4]
 8008c1a:	2201      	movs	r2, #1
 8008c1c:	655a      	str	r2, [r3, #84]	@ 0x54
 8008c1e:	687b      	ldr	r3, [r7, #4]
 8008c20:	2201      	movs	r2, #1
 8008c22:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8008c26:	687b      	ldr	r3, [r7, #4]
 8008c28:	2200      	movs	r2, #0
 8008c2a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8008c2e:	687b      	ldr	r3, [r7, #4]
 8008c30:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008c32:	2b00      	cmp	r3, #0
 8008c34:	d009      	beq.n	8008c4a <HAL_DMA_IRQHandler+0xe0e>
 8008c36:	687b      	ldr	r3, [r7, #4]
 8008c38:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008c3a:	6878      	ldr	r0, [r7, #4]
 8008c3c:	4798      	blx	r3
 8008c3e:	e004      	b.n	8008c4a <HAL_DMA_IRQHandler+0xe0e>
 8008c40:	bf00      	nop
 8008c42:	e002      	b.n	8008c4a <HAL_DMA_IRQHandler+0xe0e>
 8008c44:	bf00      	nop
 8008c46:	e000      	b.n	8008c4a <HAL_DMA_IRQHandler+0xe0e>
 8008c48:	bf00      	nop
 8008c4a:	3728      	adds	r7, #40	@ 0x28
 8008c4c:	46bd      	mov	sp, r7
 8008c4e:	bd80      	pop	{r7, pc}
 8008c50:	40020010 	.word	0x40020010
 8008c54:	40020028 	.word	0x40020028
 8008c58:	40020040 	.word	0x40020040
 8008c5c:	40020058 	.word	0x40020058
 8008c60:	40020070 	.word	0x40020070
 8008c64:	40020088 	.word	0x40020088
 8008c68:	400200a0 	.word	0x400200a0
 8008c6c:	400200b8 	.word	0x400200b8
 8008c70:	40020410 	.word	0x40020410
 8008c74:	40020428 	.word	0x40020428
 8008c78:	40020440 	.word	0x40020440
 8008c7c:	40020458 	.word	0x40020458
 8008c80:	40020470 	.word	0x40020470
 8008c84:	40020488 	.word	0x40020488
 8008c88:	400204a0 	.word	0x400204a0
 8008c8c:	400204b8 	.word	0x400204b8

08008c90 <DMA_SetConfig>:
 8008c90:	b480      	push	{r7}
 8008c92:	b087      	sub	sp, #28
 8008c94:	af00      	add	r7, sp, #0
 8008c96:	60f8      	str	r0, [r7, #12]
 8008c98:	60b9      	str	r1, [r7, #8]
 8008c9a:	607a      	str	r2, [r7, #4]
 8008c9c:	603b      	str	r3, [r7, #0]
 8008c9e:	68fb      	ldr	r3, [r7, #12]
 8008ca0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008ca2:	617b      	str	r3, [r7, #20]
 8008ca4:	68fb      	ldr	r3, [r7, #12]
 8008ca6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008ca8:	613b      	str	r3, [r7, #16]
 8008caa:	68fb      	ldr	r3, [r7, #12]
 8008cac:	681b      	ldr	r3, [r3, #0]
 8008cae:	4a7f      	ldr	r2, [pc, #508]	@ (8008eac <DMA_SetConfig+0x21c>)
 8008cb0:	4293      	cmp	r3, r2
 8008cb2:	d072      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008cb4:	68fb      	ldr	r3, [r7, #12]
 8008cb6:	681b      	ldr	r3, [r3, #0]
 8008cb8:	4a7d      	ldr	r2, [pc, #500]	@ (8008eb0 <DMA_SetConfig+0x220>)
 8008cba:	4293      	cmp	r3, r2
 8008cbc:	d06d      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008cbe:	68fb      	ldr	r3, [r7, #12]
 8008cc0:	681b      	ldr	r3, [r3, #0]
 8008cc2:	4a7c      	ldr	r2, [pc, #496]	@ (8008eb4 <DMA_SetConfig+0x224>)
 8008cc4:	4293      	cmp	r3, r2
 8008cc6:	d068      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008cc8:	68fb      	ldr	r3, [r7, #12]
 8008cca:	681b      	ldr	r3, [r3, #0]
 8008ccc:	4a7a      	ldr	r2, [pc, #488]	@ (8008eb8 <DMA_SetConfig+0x228>)
 8008cce:	4293      	cmp	r3, r2
 8008cd0:	d063      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008cd2:	68fb      	ldr	r3, [r7, #12]
 8008cd4:	681b      	ldr	r3, [r3, #0]
 8008cd6:	4a79      	ldr	r2, [pc, #484]	@ (8008ebc <DMA_SetConfig+0x22c>)
 8008cd8:	4293      	cmp	r3, r2
 8008cda:	d05e      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008cdc:	68fb      	ldr	r3, [r7, #12]
 8008cde:	681b      	ldr	r3, [r3, #0]
 8008ce0:	4a77      	ldr	r2, [pc, #476]	@ (8008ec0 <DMA_SetConfig+0x230>)
 8008ce2:	4293      	cmp	r3, r2
 8008ce4:	d059      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008ce6:	68fb      	ldr	r3, [r7, #12]
 8008ce8:	681b      	ldr	r3, [r3, #0]
 8008cea:	4a76      	ldr	r2, [pc, #472]	@ (8008ec4 <DMA_SetConfig+0x234>)
 8008cec:	4293      	cmp	r3, r2
 8008cee:	d054      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008cf0:	68fb      	ldr	r3, [r7, #12]
 8008cf2:	681b      	ldr	r3, [r3, #0]
 8008cf4:	4a74      	ldr	r2, [pc, #464]	@ (8008ec8 <DMA_SetConfig+0x238>)
 8008cf6:	4293      	cmp	r3, r2
 8008cf8:	d04f      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008cfa:	68fb      	ldr	r3, [r7, #12]
 8008cfc:	681b      	ldr	r3, [r3, #0]
 8008cfe:	4a73      	ldr	r2, [pc, #460]	@ (8008ecc <DMA_SetConfig+0x23c>)
 8008d00:	4293      	cmp	r3, r2
 8008d02:	d04a      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008d04:	68fb      	ldr	r3, [r7, #12]
 8008d06:	681b      	ldr	r3, [r3, #0]
 8008d08:	4a71      	ldr	r2, [pc, #452]	@ (8008ed0 <DMA_SetConfig+0x240>)
 8008d0a:	4293      	cmp	r3, r2
 8008d0c:	d045      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008d0e:	68fb      	ldr	r3, [r7, #12]
 8008d10:	681b      	ldr	r3, [r3, #0]
 8008d12:	4a70      	ldr	r2, [pc, #448]	@ (8008ed4 <DMA_SetConfig+0x244>)
 8008d14:	4293      	cmp	r3, r2
 8008d16:	d040      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008d18:	68fb      	ldr	r3, [r7, #12]
 8008d1a:	681b      	ldr	r3, [r3, #0]
 8008d1c:	4a6e      	ldr	r2, [pc, #440]	@ (8008ed8 <DMA_SetConfig+0x248>)
 8008d1e:	4293      	cmp	r3, r2
 8008d20:	d03b      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008d22:	68fb      	ldr	r3, [r7, #12]
 8008d24:	681b      	ldr	r3, [r3, #0]
 8008d26:	4a6d      	ldr	r2, [pc, #436]	@ (8008edc <DMA_SetConfig+0x24c>)
 8008d28:	4293      	cmp	r3, r2
 8008d2a:	d036      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008d2c:	68fb      	ldr	r3, [r7, #12]
 8008d2e:	681b      	ldr	r3, [r3, #0]
 8008d30:	4a6b      	ldr	r2, [pc, #428]	@ (8008ee0 <DMA_SetConfig+0x250>)
 8008d32:	4293      	cmp	r3, r2
 8008d34:	d031      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008d36:	68fb      	ldr	r3, [r7, #12]
 8008d38:	681b      	ldr	r3, [r3, #0]
 8008d3a:	4a6a      	ldr	r2, [pc, #424]	@ (8008ee4 <DMA_SetConfig+0x254>)
 8008d3c:	4293      	cmp	r3, r2
 8008d3e:	d02c      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008d40:	68fb      	ldr	r3, [r7, #12]
 8008d42:	681b      	ldr	r3, [r3, #0]
 8008d44:	4a68      	ldr	r2, [pc, #416]	@ (8008ee8 <DMA_SetConfig+0x258>)
 8008d46:	4293      	cmp	r3, r2
 8008d48:	d027      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008d4a:	68fb      	ldr	r3, [r7, #12]
 8008d4c:	681b      	ldr	r3, [r3, #0]
 8008d4e:	4a67      	ldr	r2, [pc, #412]	@ (8008eec <DMA_SetConfig+0x25c>)
 8008d50:	4293      	cmp	r3, r2
 8008d52:	d022      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008d54:	68fb      	ldr	r3, [r7, #12]
 8008d56:	681b      	ldr	r3, [r3, #0]
 8008d58:	4a65      	ldr	r2, [pc, #404]	@ (8008ef0 <DMA_SetConfig+0x260>)
 8008d5a:	4293      	cmp	r3, r2
 8008d5c:	d01d      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008d5e:	68fb      	ldr	r3, [r7, #12]
 8008d60:	681b      	ldr	r3, [r3, #0]
 8008d62:	4a64      	ldr	r2, [pc, #400]	@ (8008ef4 <DMA_SetConfig+0x264>)
 8008d64:	4293      	cmp	r3, r2
 8008d66:	d018      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008d68:	68fb      	ldr	r3, [r7, #12]
 8008d6a:	681b      	ldr	r3, [r3, #0]
 8008d6c:	4a62      	ldr	r2, [pc, #392]	@ (8008ef8 <DMA_SetConfig+0x268>)
 8008d6e:	4293      	cmp	r3, r2
 8008d70:	d013      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008d72:	68fb      	ldr	r3, [r7, #12]
 8008d74:	681b      	ldr	r3, [r3, #0]
 8008d76:	4a61      	ldr	r2, [pc, #388]	@ (8008efc <DMA_SetConfig+0x26c>)
 8008d78:	4293      	cmp	r3, r2
 8008d7a:	d00e      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008d7c:	68fb      	ldr	r3, [r7, #12]
 8008d7e:	681b      	ldr	r3, [r3, #0]
 8008d80:	4a5f      	ldr	r2, [pc, #380]	@ (8008f00 <DMA_SetConfig+0x270>)
 8008d82:	4293      	cmp	r3, r2
 8008d84:	d009      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008d86:	68fb      	ldr	r3, [r7, #12]
 8008d88:	681b      	ldr	r3, [r3, #0]
 8008d8a:	4a5e      	ldr	r2, [pc, #376]	@ (8008f04 <DMA_SetConfig+0x274>)
 8008d8c:	4293      	cmp	r3, r2
 8008d8e:	d004      	beq.n	8008d9a <DMA_SetConfig+0x10a>
 8008d90:	68fb      	ldr	r3, [r7, #12]
 8008d92:	681b      	ldr	r3, [r3, #0]
 8008d94:	4a5c      	ldr	r2, [pc, #368]	@ (8008f08 <DMA_SetConfig+0x278>)
 8008d96:	4293      	cmp	r3, r2
 8008d98:	d101      	bne.n	8008d9e <DMA_SetConfig+0x10e>
 8008d9a:	2301      	movs	r3, #1
 8008d9c:	e000      	b.n	8008da0 <DMA_SetConfig+0x110>
 8008d9e:	2300      	movs	r3, #0
 8008da0:	2b00      	cmp	r3, #0
 8008da2:	d00d      	beq.n	8008dc0 <DMA_SetConfig+0x130>
 8008da4:	68fb      	ldr	r3, [r7, #12]
 8008da6:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8008da8:	68fa      	ldr	r2, [r7, #12]
 8008daa:	6e92      	ldr	r2, [r2, #104]	@ 0x68
 8008dac:	605a      	str	r2, [r3, #4]
 8008dae:	68fb      	ldr	r3, [r7, #12]
 8008db0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008db2:	2b00      	cmp	r3, #0
 8008db4:	d004      	beq.n	8008dc0 <DMA_SetConfig+0x130>
 8008db6:	68fb      	ldr	r3, [r7, #12]
 8008db8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008dba:	68fa      	ldr	r2, [r7, #12]
 8008dbc:	6f52      	ldr	r2, [r2, #116]	@ 0x74
 8008dbe:	605a      	str	r2, [r3, #4]
 8008dc0:	68fb      	ldr	r3, [r7, #12]
 8008dc2:	681b      	ldr	r3, [r3, #0]
 8008dc4:	4a39      	ldr	r2, [pc, #228]	@ (8008eac <DMA_SetConfig+0x21c>)
 8008dc6:	4293      	cmp	r3, r2
 8008dc8:	d04a      	beq.n	8008e60 <DMA_SetConfig+0x1d0>
 8008dca:	68fb      	ldr	r3, [r7, #12]
 8008dcc:	681b      	ldr	r3, [r3, #0]
 8008dce:	4a38      	ldr	r2, [pc, #224]	@ (8008eb0 <DMA_SetConfig+0x220>)
 8008dd0:	4293      	cmp	r3, r2
 8008dd2:	d045      	beq.n	8008e60 <DMA_SetConfig+0x1d0>
 8008dd4:	68fb      	ldr	r3, [r7, #12]
 8008dd6:	681b      	ldr	r3, [r3, #0]
 8008dd8:	4a36      	ldr	r2, [pc, #216]	@ (8008eb4 <DMA_SetConfig+0x224>)
 8008dda:	4293      	cmp	r3, r2
 8008ddc:	d040      	beq.n	8008e60 <DMA_SetConfig+0x1d0>
 8008dde:	68fb      	ldr	r3, [r7, #12]
 8008de0:	681b      	ldr	r3, [r3, #0]
 8008de2:	4a35      	ldr	r2, [pc, #212]	@ (8008eb8 <DMA_SetConfig+0x228>)
 8008de4:	4293      	cmp	r3, r2
 8008de6:	d03b      	beq.n	8008e60 <DMA_SetConfig+0x1d0>
 8008de8:	68fb      	ldr	r3, [r7, #12]
 8008dea:	681b      	ldr	r3, [r3, #0]
 8008dec:	4a33      	ldr	r2, [pc, #204]	@ (8008ebc <DMA_SetConfig+0x22c>)
 8008dee:	4293      	cmp	r3, r2
 8008df0:	d036      	beq.n	8008e60 <DMA_SetConfig+0x1d0>
 8008df2:	68fb      	ldr	r3, [r7, #12]
 8008df4:	681b      	ldr	r3, [r3, #0]
 8008df6:	4a32      	ldr	r2, [pc, #200]	@ (8008ec0 <DMA_SetConfig+0x230>)
 8008df8:	4293      	cmp	r3, r2
 8008dfa:	d031      	beq.n	8008e60 <DMA_SetConfig+0x1d0>
 8008dfc:	68fb      	ldr	r3, [r7, #12]
 8008dfe:	681b      	ldr	r3, [r3, #0]
 8008e00:	4a30      	ldr	r2, [pc, #192]	@ (8008ec4 <DMA_SetConfig+0x234>)
 8008e02:	4293      	cmp	r3, r2
 8008e04:	d02c      	beq.n	8008e60 <DMA_SetConfig+0x1d0>
 8008e06:	68fb      	ldr	r3, [r7, #12]
 8008e08:	681b      	ldr	r3, [r3, #0]
 8008e0a:	4a2f      	ldr	r2, [pc, #188]	@ (8008ec8 <DMA_SetConfig+0x238>)
 8008e0c:	4293      	cmp	r3, r2
 8008e0e:	d027      	beq.n	8008e60 <DMA_SetConfig+0x1d0>
 8008e10:	68fb      	ldr	r3, [r7, #12]
 8008e12:	681b      	ldr	r3, [r3, #0]
 8008e14:	4a2d      	ldr	r2, [pc, #180]	@ (8008ecc <DMA_SetConfig+0x23c>)
 8008e16:	4293      	cmp	r3, r2
 8008e18:	d022      	beq.n	8008e60 <DMA_SetConfig+0x1d0>
 8008e1a:	68fb      	ldr	r3, [r7, #12]
 8008e1c:	681b      	ldr	r3, [r3, #0]
 8008e1e:	4a2c      	ldr	r2, [pc, #176]	@ (8008ed0 <DMA_SetConfig+0x240>)
 8008e20:	4293      	cmp	r3, r2
 8008e22:	d01d      	beq.n	8008e60 <DMA_SetConfig+0x1d0>
 8008e24:	68fb      	ldr	r3, [r7, #12]
 8008e26:	681b      	ldr	r3, [r3, #0]
 8008e28:	4a2a      	ldr	r2, [pc, #168]	@ (8008ed4 <DMA_SetConfig+0x244>)
 8008e2a:	4293      	cmp	r3, r2
 8008e2c:	d018      	beq.n	8008e60 <DMA_SetConfig+0x1d0>
 8008e2e:	68fb      	ldr	r3, [r7, #12]
 8008e30:	681b      	ldr	r3, [r3, #0]
 8008e32:	4a29      	ldr	r2, [pc, #164]	@ (8008ed8 <DMA_SetConfig+0x248>)
 8008e34:	4293      	cmp	r3, r2
 8008e36:	d013      	beq.n	8008e60 <DMA_SetConfig+0x1d0>
 8008e38:	68fb      	ldr	r3, [r7, #12]
 8008e3a:	681b      	ldr	r3, [r3, #0]
 8008e3c:	4a27      	ldr	r2, [pc, #156]	@ (8008edc <DMA_SetConfig+0x24c>)
 8008e3e:	4293      	cmp	r3, r2
 8008e40:	d00e      	beq.n	8008e60 <DMA_SetConfig+0x1d0>
 8008e42:	68fb      	ldr	r3, [r7, #12]
 8008e44:	681b      	ldr	r3, [r3, #0]
 8008e46:	4a26      	ldr	r2, [pc, #152]	@ (8008ee0 <DMA_SetConfig+0x250>)
 8008e48:	4293      	cmp	r3, r2
 8008e4a:	d009      	beq.n	8008e60 <DMA_SetConfig+0x1d0>
 8008e4c:	68fb      	ldr	r3, [r7, #12]
 8008e4e:	681b      	ldr	r3, [r3, #0]
 8008e50:	4a24      	ldr	r2, [pc, #144]	@ (8008ee4 <DMA_SetConfig+0x254>)
 8008e52:	4293      	cmp	r3, r2
 8008e54:	d004      	beq.n	8008e60 <DMA_SetConfig+0x1d0>
 8008e56:	68fb      	ldr	r3, [r7, #12]
 8008e58:	681b      	ldr	r3, [r3, #0]
 8008e5a:	4a23      	ldr	r2, [pc, #140]	@ (8008ee8 <DMA_SetConfig+0x258>)
 8008e5c:	4293      	cmp	r3, r2
 8008e5e:	d101      	bne.n	8008e64 <DMA_SetConfig+0x1d4>
 8008e60:	2301      	movs	r3, #1
 8008e62:	e000      	b.n	8008e66 <DMA_SetConfig+0x1d6>
 8008e64:	2300      	movs	r3, #0
 8008e66:	2b00      	cmp	r3, #0
 8008e68:	d059      	beq.n	8008f1e <DMA_SetConfig+0x28e>
 8008e6a:	68fb      	ldr	r3, [r7, #12]
 8008e6c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008e6e:	f003 031f 	and.w	r3, r3, #31
 8008e72:	223f      	movs	r2, #63	@ 0x3f
 8008e74:	409a      	lsls	r2, r3
 8008e76:	697b      	ldr	r3, [r7, #20]
 8008e78:	609a      	str	r2, [r3, #8]
 8008e7a:	68fb      	ldr	r3, [r7, #12]
 8008e7c:	681b      	ldr	r3, [r3, #0]
 8008e7e:	681a      	ldr	r2, [r3, #0]
 8008e80:	68fb      	ldr	r3, [r7, #12]
 8008e82:	681b      	ldr	r3, [r3, #0]
 8008e84:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8008e88:	601a      	str	r2, [r3, #0]
 8008e8a:	68fb      	ldr	r3, [r7, #12]
 8008e8c:	681b      	ldr	r3, [r3, #0]
 8008e8e:	683a      	ldr	r2, [r7, #0]
 8008e90:	605a      	str	r2, [r3, #4]
 8008e92:	68fb      	ldr	r3, [r7, #12]
 8008e94:	689b      	ldr	r3, [r3, #8]
 8008e96:	2b40      	cmp	r3, #64	@ 0x40
 8008e98:	d138      	bne.n	8008f0c <DMA_SetConfig+0x27c>
 8008e9a:	68fb      	ldr	r3, [r7, #12]
 8008e9c:	681b      	ldr	r3, [r3, #0]
 8008e9e:	687a      	ldr	r2, [r7, #4]
 8008ea0:	609a      	str	r2, [r3, #8]
 8008ea2:	68fb      	ldr	r3, [r7, #12]
 8008ea4:	681b      	ldr	r3, [r3, #0]
 8008ea6:	68ba      	ldr	r2, [r7, #8]
 8008ea8:	60da      	str	r2, [r3, #12]
 8008eaa:	e086      	b.n	8008fba <DMA_SetConfig+0x32a>
 8008eac:	40020010 	.word	0x40020010
 8008eb0:	40020028 	.word	0x40020028
 8008eb4:	40020040 	.word	0x40020040
 8008eb8:	40020058 	.word	0x40020058
 8008ebc:	40020070 	.word	0x40020070
 8008ec0:	40020088 	.word	0x40020088
 8008ec4:	400200a0 	.word	0x400200a0
 8008ec8:	400200b8 	.word	0x400200b8
 8008ecc:	40020410 	.word	0x40020410
 8008ed0:	40020428 	.word	0x40020428
 8008ed4:	40020440 	.word	0x40020440
 8008ed8:	40020458 	.word	0x40020458
 8008edc:	40020470 	.word	0x40020470
 8008ee0:	40020488 	.word	0x40020488
 8008ee4:	400204a0 	.word	0x400204a0
 8008ee8:	400204b8 	.word	0x400204b8
 8008eec:	58025408 	.word	0x58025408
 8008ef0:	5802541c 	.word	0x5802541c
 8008ef4:	58025430 	.word	0x58025430
 8008ef8:	58025444 	.word	0x58025444
 8008efc:	58025458 	.word	0x58025458
 8008f00:	5802546c 	.word	0x5802546c
 8008f04:	58025480 	.word	0x58025480
 8008f08:	58025494 	.word	0x58025494
 8008f0c:	68fb      	ldr	r3, [r7, #12]
 8008f0e:	681b      	ldr	r3, [r3, #0]
 8008f10:	68ba      	ldr	r2, [r7, #8]
 8008f12:	609a      	str	r2, [r3, #8]
 8008f14:	68fb      	ldr	r3, [r7, #12]
 8008f16:	681b      	ldr	r3, [r3, #0]
 8008f18:	687a      	ldr	r2, [r7, #4]
 8008f1a:	60da      	str	r2, [r3, #12]
 8008f1c:	e04d      	b.n	8008fba <DMA_SetConfig+0x32a>
 8008f1e:	68fb      	ldr	r3, [r7, #12]
 8008f20:	681b      	ldr	r3, [r3, #0]
 8008f22:	4a29      	ldr	r2, [pc, #164]	@ (8008fc8 <DMA_SetConfig+0x338>)
 8008f24:	4293      	cmp	r3, r2
 8008f26:	d022      	beq.n	8008f6e <DMA_SetConfig+0x2de>
 8008f28:	68fb      	ldr	r3, [r7, #12]
 8008f2a:	681b      	ldr	r3, [r3, #0]
 8008f2c:	4a27      	ldr	r2, [pc, #156]	@ (8008fcc <DMA_SetConfig+0x33c>)
 8008f2e:	4293      	cmp	r3, r2
 8008f30:	d01d      	beq.n	8008f6e <DMA_SetConfig+0x2de>
 8008f32:	68fb      	ldr	r3, [r7, #12]
 8008f34:	681b      	ldr	r3, [r3, #0]
 8008f36:	4a26      	ldr	r2, [pc, #152]	@ (8008fd0 <DMA_SetConfig+0x340>)
 8008f38:	4293      	cmp	r3, r2
 8008f3a:	d018      	beq.n	8008f6e <DMA_SetConfig+0x2de>
 8008f3c:	68fb      	ldr	r3, [r7, #12]
 8008f3e:	681b      	ldr	r3, [r3, #0]
 8008f40:	4a24      	ldr	r2, [pc, #144]	@ (8008fd4 <DMA_SetConfig+0x344>)
 8008f42:	4293      	cmp	r3, r2
 8008f44:	d013      	beq.n	8008f6e <DMA_SetConfig+0x2de>
 8008f46:	68fb      	ldr	r3, [r7, #12]
 8008f48:	681b      	ldr	r3, [r3, #0]
 8008f4a:	4a23      	ldr	r2, [pc, #140]	@ (8008fd8 <DMA_SetConfig+0x348>)
 8008f4c:	4293      	cmp	r3, r2
 8008f4e:	d00e      	beq.n	8008f6e <DMA_SetConfig+0x2de>
 8008f50:	68fb      	ldr	r3, [r7, #12]
 8008f52:	681b      	ldr	r3, [r3, #0]
 8008f54:	4a21      	ldr	r2, [pc, #132]	@ (8008fdc <DMA_SetConfig+0x34c>)
 8008f56:	4293      	cmp	r3, r2
 8008f58:	d009      	beq.n	8008f6e <DMA_SetConfig+0x2de>
 8008f5a:	68fb      	ldr	r3, [r7, #12]
 8008f5c:	681b      	ldr	r3, [r3, #0]
 8008f5e:	4a20      	ldr	r2, [pc, #128]	@ (8008fe0 <DMA_SetConfig+0x350>)
 8008f60:	4293      	cmp	r3, r2
 8008f62:	d004      	beq.n	8008f6e <DMA_SetConfig+0x2de>
 8008f64:	68fb      	ldr	r3, [r7, #12]
 8008f66:	681b      	ldr	r3, [r3, #0]
 8008f68:	4a1e      	ldr	r2, [pc, #120]	@ (8008fe4 <DMA_SetConfig+0x354>)
 8008f6a:	4293      	cmp	r3, r2
 8008f6c:	d101      	bne.n	8008f72 <DMA_SetConfig+0x2e2>
 8008f6e:	2301      	movs	r3, #1
 8008f70:	e000      	b.n	8008f74 <DMA_SetConfig+0x2e4>
 8008f72:	2300      	movs	r3, #0
 8008f74:	2b00      	cmp	r3, #0
 8008f76:	d020      	beq.n	8008fba <DMA_SetConfig+0x32a>
 8008f78:	68fb      	ldr	r3, [r7, #12]
 8008f7a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008f7c:	f003 031f 	and.w	r3, r3, #31
 8008f80:	2201      	movs	r2, #1
 8008f82:	409a      	lsls	r2, r3
 8008f84:	693b      	ldr	r3, [r7, #16]
 8008f86:	605a      	str	r2, [r3, #4]
 8008f88:	68fb      	ldr	r3, [r7, #12]
 8008f8a:	681b      	ldr	r3, [r3, #0]
 8008f8c:	683a      	ldr	r2, [r7, #0]
 8008f8e:	605a      	str	r2, [r3, #4]
 8008f90:	68fb      	ldr	r3, [r7, #12]
 8008f92:	689b      	ldr	r3, [r3, #8]
 8008f94:	2b40      	cmp	r3, #64	@ 0x40
 8008f96:	d108      	bne.n	8008faa <DMA_SetConfig+0x31a>
 8008f98:	68fb      	ldr	r3, [r7, #12]
 8008f9a:	681b      	ldr	r3, [r3, #0]
 8008f9c:	687a      	ldr	r2, [r7, #4]
 8008f9e:	609a      	str	r2, [r3, #8]
 8008fa0:	68fb      	ldr	r3, [r7, #12]
 8008fa2:	681b      	ldr	r3, [r3, #0]
 8008fa4:	68ba      	ldr	r2, [r7, #8]
 8008fa6:	60da      	str	r2, [r3, #12]
 8008fa8:	e007      	b.n	8008fba <DMA_SetConfig+0x32a>
 8008faa:	68fb      	ldr	r3, [r7, #12]
 8008fac:	681b      	ldr	r3, [r3, #0]
 8008fae:	68ba      	ldr	r2, [r7, #8]
 8008fb0:	609a      	str	r2, [r3, #8]
 8008fb2:	68fb      	ldr	r3, [r7, #12]
 8008fb4:	681b      	ldr	r3, [r3, #0]
 8008fb6:	687a      	ldr	r2, [r7, #4]
 8008fb8:	60da      	str	r2, [r3, #12]
 8008fba:	bf00      	nop
 8008fbc:	371c      	adds	r7, #28
 8008fbe:	46bd      	mov	sp, r7
 8008fc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fc4:	4770      	bx	lr
 8008fc6:	bf00      	nop
 8008fc8:	58025408 	.word	0x58025408
 8008fcc:	5802541c 	.word	0x5802541c
 8008fd0:	58025430 	.word	0x58025430
 8008fd4:	58025444 	.word	0x58025444
 8008fd8:	58025458 	.word	0x58025458
 8008fdc:	5802546c 	.word	0x5802546c
 8008fe0:	58025480 	.word	0x58025480
 8008fe4:	58025494 	.word	0x58025494

08008fe8 <DMA_CalcBaseAndBitshift>:
 8008fe8:	b480      	push	{r7}
 8008fea:	b085      	sub	sp, #20
 8008fec:	af00      	add	r7, sp, #0
 8008fee:	6078      	str	r0, [r7, #4]
 8008ff0:	687b      	ldr	r3, [r7, #4]
 8008ff2:	681b      	ldr	r3, [r3, #0]
 8008ff4:	4a42      	ldr	r2, [pc, #264]	@ (8009100 <DMA_CalcBaseAndBitshift+0x118>)
 8008ff6:	4293      	cmp	r3, r2
 8008ff8:	d04a      	beq.n	8009090 <DMA_CalcBaseAndBitshift+0xa8>
 8008ffa:	687b      	ldr	r3, [r7, #4]
 8008ffc:	681b      	ldr	r3, [r3, #0]
 8008ffe:	4a41      	ldr	r2, [pc, #260]	@ (8009104 <DMA_CalcBaseAndBitshift+0x11c>)
 8009000:	4293      	cmp	r3, r2
 8009002:	d045      	beq.n	8009090 <DMA_CalcBaseAndBitshift+0xa8>
 8009004:	687b      	ldr	r3, [r7, #4]
 8009006:	681b      	ldr	r3, [r3, #0]
 8009008:	4a3f      	ldr	r2, [pc, #252]	@ (8009108 <DMA_CalcBaseAndBitshift+0x120>)
 800900a:	4293      	cmp	r3, r2
 800900c:	d040      	beq.n	8009090 <DMA_CalcBaseAndBitshift+0xa8>
 800900e:	687b      	ldr	r3, [r7, #4]
 8009010:	681b      	ldr	r3, [r3, #0]
 8009012:	4a3e      	ldr	r2, [pc, #248]	@ (800910c <DMA_CalcBaseAndBitshift+0x124>)
 8009014:	4293      	cmp	r3, r2
 8009016:	d03b      	beq.n	8009090 <DMA_CalcBaseAndBitshift+0xa8>
 8009018:	687b      	ldr	r3, [r7, #4]
 800901a:	681b      	ldr	r3, [r3, #0]
 800901c:	4a3c      	ldr	r2, [pc, #240]	@ (8009110 <DMA_CalcBaseAndBitshift+0x128>)
 800901e:	4293      	cmp	r3, r2
 8009020:	d036      	beq.n	8009090 <DMA_CalcBaseAndBitshift+0xa8>
 8009022:	687b      	ldr	r3, [r7, #4]
 8009024:	681b      	ldr	r3, [r3, #0]
 8009026:	4a3b      	ldr	r2, [pc, #236]	@ (8009114 <DMA_CalcBaseAndBitshift+0x12c>)
 8009028:	4293      	cmp	r3, r2
 800902a:	d031      	beq.n	8009090 <DMA_CalcBaseAndBitshift+0xa8>
 800902c:	687b      	ldr	r3, [r7, #4]
 800902e:	681b      	ldr	r3, [r3, #0]
 8009030:	4a39      	ldr	r2, [pc, #228]	@ (8009118 <DMA_CalcBaseAndBitshift+0x130>)
 8009032:	4293      	cmp	r3, r2
 8009034:	d02c      	beq.n	8009090 <DMA_CalcBaseAndBitshift+0xa8>
 8009036:	687b      	ldr	r3, [r7, #4]
 8009038:	681b      	ldr	r3, [r3, #0]
 800903a:	4a38      	ldr	r2, [pc, #224]	@ (800911c <DMA_CalcBaseAndBitshift+0x134>)
 800903c:	4293      	cmp	r3, r2
 800903e:	d027      	beq.n	8009090 <DMA_CalcBaseAndBitshift+0xa8>
 8009040:	687b      	ldr	r3, [r7, #4]
 8009042:	681b      	ldr	r3, [r3, #0]
 8009044:	4a36      	ldr	r2, [pc, #216]	@ (8009120 <DMA_CalcBaseAndBitshift+0x138>)
 8009046:	4293      	cmp	r3, r2
 8009048:	d022      	beq.n	8009090 <DMA_CalcBaseAndBitshift+0xa8>
 800904a:	687b      	ldr	r3, [r7, #4]
 800904c:	681b      	ldr	r3, [r3, #0]
 800904e:	4a35      	ldr	r2, [pc, #212]	@ (8009124 <DMA_CalcBaseAndBitshift+0x13c>)
 8009050:	4293      	cmp	r3, r2
 8009052:	d01d      	beq.n	8009090 <DMA_CalcBaseAndBitshift+0xa8>
 8009054:	687b      	ldr	r3, [r7, #4]
 8009056:	681b      	ldr	r3, [r3, #0]
 8009058:	4a33      	ldr	r2, [pc, #204]	@ (8009128 <DMA_CalcBaseAndBitshift+0x140>)
 800905a:	4293      	cmp	r3, r2
 800905c:	d018      	beq.n	8009090 <DMA_CalcBaseAndBitshift+0xa8>
 800905e:	687b      	ldr	r3, [r7, #4]
 8009060:	681b      	ldr	r3, [r3, #0]
 8009062:	4a32      	ldr	r2, [pc, #200]	@ (800912c <DMA_CalcBaseAndBitshift+0x144>)
 8009064:	4293      	cmp	r3, r2
 8009066:	d013      	beq.n	8009090 <DMA_CalcBaseAndBitshift+0xa8>
 8009068:	687b      	ldr	r3, [r7, #4]
 800906a:	681b      	ldr	r3, [r3, #0]
 800906c:	4a30      	ldr	r2, [pc, #192]	@ (8009130 <DMA_CalcBaseAndBitshift+0x148>)
 800906e:	4293      	cmp	r3, r2
 8009070:	d00e      	beq.n	8009090 <DMA_CalcBaseAndBitshift+0xa8>
 8009072:	687b      	ldr	r3, [r7, #4]
 8009074:	681b      	ldr	r3, [r3, #0]
 8009076:	4a2f      	ldr	r2, [pc, #188]	@ (8009134 <DMA_CalcBaseAndBitshift+0x14c>)
 8009078:	4293      	cmp	r3, r2
 800907a:	d009      	beq.n	8009090 <DMA_CalcBaseAndBitshift+0xa8>
 800907c:	687b      	ldr	r3, [r7, #4]
 800907e:	681b      	ldr	r3, [r3, #0]
 8009080:	4a2d      	ldr	r2, [pc, #180]	@ (8009138 <DMA_CalcBaseAndBitshift+0x150>)
 8009082:	4293      	cmp	r3, r2
 8009084:	d004      	beq.n	8009090 <DMA_CalcBaseAndBitshift+0xa8>
 8009086:	687b      	ldr	r3, [r7, #4]
 8009088:	681b      	ldr	r3, [r3, #0]
 800908a:	4a2c      	ldr	r2, [pc, #176]	@ (800913c <DMA_CalcBaseAndBitshift+0x154>)
 800908c:	4293      	cmp	r3, r2
 800908e:	d101      	bne.n	8009094 <DMA_CalcBaseAndBitshift+0xac>
 8009090:	2301      	movs	r3, #1
 8009092:	e000      	b.n	8009096 <DMA_CalcBaseAndBitshift+0xae>
 8009094:	2300      	movs	r3, #0
 8009096:	2b00      	cmp	r3, #0
 8009098:	d024      	beq.n	80090e4 <DMA_CalcBaseAndBitshift+0xfc>
 800909a:	687b      	ldr	r3, [r7, #4]
 800909c:	681b      	ldr	r3, [r3, #0]
 800909e:	b2db      	uxtb	r3, r3
 80090a0:	3b10      	subs	r3, #16
 80090a2:	4a27      	ldr	r2, [pc, #156]	@ (8009140 <DMA_CalcBaseAndBitshift+0x158>)
 80090a4:	fba2 2303 	umull	r2, r3, r2, r3
 80090a8:	091b      	lsrs	r3, r3, #4
 80090aa:	60fb      	str	r3, [r7, #12]
 80090ac:	68fb      	ldr	r3, [r7, #12]
 80090ae:	f003 0307 	and.w	r3, r3, #7
 80090b2:	4a24      	ldr	r2, [pc, #144]	@ (8009144 <DMA_CalcBaseAndBitshift+0x15c>)
 80090b4:	5cd3      	ldrb	r3, [r2, r3]
 80090b6:	461a      	mov	r2, r3
 80090b8:	687b      	ldr	r3, [r7, #4]
 80090ba:	65da      	str	r2, [r3, #92]	@ 0x5c
 80090bc:	68fb      	ldr	r3, [r7, #12]
 80090be:	2b03      	cmp	r3, #3
 80090c0:	d908      	bls.n	80090d4 <DMA_CalcBaseAndBitshift+0xec>
 80090c2:	687b      	ldr	r3, [r7, #4]
 80090c4:	681b      	ldr	r3, [r3, #0]
 80090c6:	461a      	mov	r2, r3
 80090c8:	4b1f      	ldr	r3, [pc, #124]	@ (8009148 <DMA_CalcBaseAndBitshift+0x160>)
 80090ca:	4013      	ands	r3, r2
 80090cc:	1d1a      	adds	r2, r3, #4
 80090ce:	687b      	ldr	r3, [r7, #4]
 80090d0:	659a      	str	r2, [r3, #88]	@ 0x58
 80090d2:	e00d      	b.n	80090f0 <DMA_CalcBaseAndBitshift+0x108>
 80090d4:	687b      	ldr	r3, [r7, #4]
 80090d6:	681b      	ldr	r3, [r3, #0]
 80090d8:	461a      	mov	r2, r3
 80090da:	4b1b      	ldr	r3, [pc, #108]	@ (8009148 <DMA_CalcBaseAndBitshift+0x160>)
 80090dc:	4013      	ands	r3, r2
 80090de:	687a      	ldr	r2, [r7, #4]
 80090e0:	6593      	str	r3, [r2, #88]	@ 0x58
 80090e2:	e005      	b.n	80090f0 <DMA_CalcBaseAndBitshift+0x108>
 80090e4:	687b      	ldr	r3, [r7, #4]
 80090e6:	681b      	ldr	r3, [r3, #0]
 80090e8:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 80090ec:	687b      	ldr	r3, [r7, #4]
 80090ee:	659a      	str	r2, [r3, #88]	@ 0x58
 80090f0:	687b      	ldr	r3, [r7, #4]
 80090f2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80090f4:	4618      	mov	r0, r3
 80090f6:	3714      	adds	r7, #20
 80090f8:	46bd      	mov	sp, r7
 80090fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090fe:	4770      	bx	lr
 8009100:	40020010 	.word	0x40020010
 8009104:	40020028 	.word	0x40020028
 8009108:	40020040 	.word	0x40020040
 800910c:	40020058 	.word	0x40020058
 8009110:	40020070 	.word	0x40020070
 8009114:	40020088 	.word	0x40020088
 8009118:	400200a0 	.word	0x400200a0
 800911c:	400200b8 	.word	0x400200b8
 8009120:	40020410 	.word	0x40020410
 8009124:	40020428 	.word	0x40020428
 8009128:	40020440 	.word	0x40020440
 800912c:	40020458 	.word	0x40020458
 8009130:	40020470 	.word	0x40020470
 8009134:	40020488 	.word	0x40020488
 8009138:	400204a0 	.word	0x400204a0
 800913c:	400204b8 	.word	0x400204b8
 8009140:	aaaaaaab 	.word	0xaaaaaaab
 8009144:	0801b05c 	.word	0x0801b05c
 8009148:	fffffc00 	.word	0xfffffc00

0800914c <DMA_CheckFifoParam>:
 800914c:	b480      	push	{r7}
 800914e:	b085      	sub	sp, #20
 8009150:	af00      	add	r7, sp, #0
 8009152:	6078      	str	r0, [r7, #4]
 8009154:	2300      	movs	r3, #0
 8009156:	73fb      	strb	r3, [r7, #15]
 8009158:	687b      	ldr	r3, [r7, #4]
 800915a:	699b      	ldr	r3, [r3, #24]
 800915c:	2b00      	cmp	r3, #0
 800915e:	d120      	bne.n	80091a2 <DMA_CheckFifoParam+0x56>
 8009160:	687b      	ldr	r3, [r7, #4]
 8009162:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009164:	2b03      	cmp	r3, #3
 8009166:	d858      	bhi.n	800921a <DMA_CheckFifoParam+0xce>
 8009168:	a201      	add	r2, pc, #4	@ (adr r2, 8009170 <DMA_CheckFifoParam+0x24>)
 800916a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800916e:	bf00      	nop
 8009170:	08009181 	.word	0x08009181
 8009174:	08009193 	.word	0x08009193
 8009178:	08009181 	.word	0x08009181
 800917c:	0800921b 	.word	0x0800921b
 8009180:	687b      	ldr	r3, [r7, #4]
 8009182:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009184:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8009188:	2b00      	cmp	r3, #0
 800918a:	d048      	beq.n	800921e <DMA_CheckFifoParam+0xd2>
 800918c:	2301      	movs	r3, #1
 800918e:	73fb      	strb	r3, [r7, #15]
 8009190:	e045      	b.n	800921e <DMA_CheckFifoParam+0xd2>
 8009192:	687b      	ldr	r3, [r7, #4]
 8009194:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009196:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 800919a:	d142      	bne.n	8009222 <DMA_CheckFifoParam+0xd6>
 800919c:	2301      	movs	r3, #1
 800919e:	73fb      	strb	r3, [r7, #15]
 80091a0:	e03f      	b.n	8009222 <DMA_CheckFifoParam+0xd6>
 80091a2:	687b      	ldr	r3, [r7, #4]
 80091a4:	699b      	ldr	r3, [r3, #24]
 80091a6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80091aa:	d123      	bne.n	80091f4 <DMA_CheckFifoParam+0xa8>
 80091ac:	687b      	ldr	r3, [r7, #4]
 80091ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80091b0:	2b03      	cmp	r3, #3
 80091b2:	d838      	bhi.n	8009226 <DMA_CheckFifoParam+0xda>
 80091b4:	a201      	add	r2, pc, #4	@ (adr r2, 80091bc <DMA_CheckFifoParam+0x70>)
 80091b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80091ba:	bf00      	nop
 80091bc:	080091cd 	.word	0x080091cd
 80091c0:	080091d3 	.word	0x080091d3
 80091c4:	080091cd 	.word	0x080091cd
 80091c8:	080091e5 	.word	0x080091e5
 80091cc:	2301      	movs	r3, #1
 80091ce:	73fb      	strb	r3, [r7, #15]
 80091d0:	e030      	b.n	8009234 <DMA_CheckFifoParam+0xe8>
 80091d2:	687b      	ldr	r3, [r7, #4]
 80091d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80091d6:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80091da:	2b00      	cmp	r3, #0
 80091dc:	d025      	beq.n	800922a <DMA_CheckFifoParam+0xde>
 80091de:	2301      	movs	r3, #1
 80091e0:	73fb      	strb	r3, [r7, #15]
 80091e2:	e022      	b.n	800922a <DMA_CheckFifoParam+0xde>
 80091e4:	687b      	ldr	r3, [r7, #4]
 80091e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80091e8:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 80091ec:	d11f      	bne.n	800922e <DMA_CheckFifoParam+0xe2>
 80091ee:	2301      	movs	r3, #1
 80091f0:	73fb      	strb	r3, [r7, #15]
 80091f2:	e01c      	b.n	800922e <DMA_CheckFifoParam+0xe2>
 80091f4:	687b      	ldr	r3, [r7, #4]
 80091f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80091f8:	2b02      	cmp	r3, #2
 80091fa:	d902      	bls.n	8009202 <DMA_CheckFifoParam+0xb6>
 80091fc:	2b03      	cmp	r3, #3
 80091fe:	d003      	beq.n	8009208 <DMA_CheckFifoParam+0xbc>
 8009200:	e018      	b.n	8009234 <DMA_CheckFifoParam+0xe8>
 8009202:	2301      	movs	r3, #1
 8009204:	73fb      	strb	r3, [r7, #15]
 8009206:	e015      	b.n	8009234 <DMA_CheckFifoParam+0xe8>
 8009208:	687b      	ldr	r3, [r7, #4]
 800920a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800920c:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8009210:	2b00      	cmp	r3, #0
 8009212:	d00e      	beq.n	8009232 <DMA_CheckFifoParam+0xe6>
 8009214:	2301      	movs	r3, #1
 8009216:	73fb      	strb	r3, [r7, #15]
 8009218:	e00b      	b.n	8009232 <DMA_CheckFifoParam+0xe6>
 800921a:	bf00      	nop
 800921c:	e00a      	b.n	8009234 <DMA_CheckFifoParam+0xe8>
 800921e:	bf00      	nop
 8009220:	e008      	b.n	8009234 <DMA_CheckFifoParam+0xe8>
 8009222:	bf00      	nop
 8009224:	e006      	b.n	8009234 <DMA_CheckFifoParam+0xe8>
 8009226:	bf00      	nop
 8009228:	e004      	b.n	8009234 <DMA_CheckFifoParam+0xe8>
 800922a:	bf00      	nop
 800922c:	e002      	b.n	8009234 <DMA_CheckFifoParam+0xe8>
 800922e:	bf00      	nop
 8009230:	e000      	b.n	8009234 <DMA_CheckFifoParam+0xe8>
 8009232:	bf00      	nop
 8009234:	7bfb      	ldrb	r3, [r7, #15]
 8009236:	4618      	mov	r0, r3
 8009238:	3714      	adds	r7, #20
 800923a:	46bd      	mov	sp, r7
 800923c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009240:	4770      	bx	lr
 8009242:	bf00      	nop

08009244 <DMA_CalcDMAMUXChannelBaseAndMask>:
 8009244:	b480      	push	{r7}
 8009246:	b085      	sub	sp, #20
 8009248:	af00      	add	r7, sp, #0
 800924a:	6078      	str	r0, [r7, #4]
 800924c:	687b      	ldr	r3, [r7, #4]
 800924e:	681b      	ldr	r3, [r3, #0]
 8009250:	60bb      	str	r3, [r7, #8]
 8009252:	687b      	ldr	r3, [r7, #4]
 8009254:	681b      	ldr	r3, [r3, #0]
 8009256:	4a38      	ldr	r2, [pc, #224]	@ (8009338 <DMA_CalcDMAMUXChannelBaseAndMask+0xf4>)
 8009258:	4293      	cmp	r3, r2
 800925a:	d022      	beq.n	80092a2 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800925c:	687b      	ldr	r3, [r7, #4]
 800925e:	681b      	ldr	r3, [r3, #0]
 8009260:	4a36      	ldr	r2, [pc, #216]	@ (800933c <DMA_CalcDMAMUXChannelBaseAndMask+0xf8>)
 8009262:	4293      	cmp	r3, r2
 8009264:	d01d      	beq.n	80092a2 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8009266:	687b      	ldr	r3, [r7, #4]
 8009268:	681b      	ldr	r3, [r3, #0]
 800926a:	4a35      	ldr	r2, [pc, #212]	@ (8009340 <DMA_CalcDMAMUXChannelBaseAndMask+0xfc>)
 800926c:	4293      	cmp	r3, r2
 800926e:	d018      	beq.n	80092a2 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8009270:	687b      	ldr	r3, [r7, #4]
 8009272:	681b      	ldr	r3, [r3, #0]
 8009274:	4a33      	ldr	r2, [pc, #204]	@ (8009344 <DMA_CalcDMAMUXChannelBaseAndMask+0x100>)
 8009276:	4293      	cmp	r3, r2
 8009278:	d013      	beq.n	80092a2 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800927a:	687b      	ldr	r3, [r7, #4]
 800927c:	681b      	ldr	r3, [r3, #0]
 800927e:	4a32      	ldr	r2, [pc, #200]	@ (8009348 <DMA_CalcDMAMUXChannelBaseAndMask+0x104>)
 8009280:	4293      	cmp	r3, r2
 8009282:	d00e      	beq.n	80092a2 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8009284:	687b      	ldr	r3, [r7, #4]
 8009286:	681b      	ldr	r3, [r3, #0]
 8009288:	4a30      	ldr	r2, [pc, #192]	@ (800934c <DMA_CalcDMAMUXChannelBaseAndMask+0x108>)
 800928a:	4293      	cmp	r3, r2
 800928c:	d009      	beq.n	80092a2 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800928e:	687b      	ldr	r3, [r7, #4]
 8009290:	681b      	ldr	r3, [r3, #0]
 8009292:	4a2f      	ldr	r2, [pc, #188]	@ (8009350 <DMA_CalcDMAMUXChannelBaseAndMask+0x10c>)
 8009294:	4293      	cmp	r3, r2
 8009296:	d004      	beq.n	80092a2 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8009298:	687b      	ldr	r3, [r7, #4]
 800929a:	681b      	ldr	r3, [r3, #0]
 800929c:	4a2d      	ldr	r2, [pc, #180]	@ (8009354 <DMA_CalcDMAMUXChannelBaseAndMask+0x110>)
 800929e:	4293      	cmp	r3, r2
 80092a0:	d101      	bne.n	80092a6 <DMA_CalcDMAMUXChannelBaseAndMask+0x62>
 80092a2:	2301      	movs	r3, #1
 80092a4:	e000      	b.n	80092a8 <DMA_CalcDMAMUXChannelBaseAndMask+0x64>
 80092a6:	2300      	movs	r3, #0
 80092a8:	2b00      	cmp	r3, #0
 80092aa:	d01a      	beq.n	80092e2 <DMA_CalcDMAMUXChannelBaseAndMask+0x9e>
 80092ac:	687b      	ldr	r3, [r7, #4]
 80092ae:	681b      	ldr	r3, [r3, #0]
 80092b0:	b2db      	uxtb	r3, r3
 80092b2:	3b08      	subs	r3, #8
 80092b4:	4a28      	ldr	r2, [pc, #160]	@ (8009358 <DMA_CalcDMAMUXChannelBaseAndMask+0x114>)
 80092b6:	fba2 2303 	umull	r2, r3, r2, r3
 80092ba:	091b      	lsrs	r3, r3, #4
 80092bc:	60fb      	str	r3, [r7, #12]
 80092be:	68fa      	ldr	r2, [r7, #12]
 80092c0:	4b26      	ldr	r3, [pc, #152]	@ (800935c <DMA_CalcDMAMUXChannelBaseAndMask+0x118>)
 80092c2:	4413      	add	r3, r2
 80092c4:	009b      	lsls	r3, r3, #2
 80092c6:	461a      	mov	r2, r3
 80092c8:	687b      	ldr	r3, [r7, #4]
 80092ca:	661a      	str	r2, [r3, #96]	@ 0x60
 80092cc:	687b      	ldr	r3, [r7, #4]
 80092ce:	4a24      	ldr	r2, [pc, #144]	@ (8009360 <DMA_CalcDMAMUXChannelBaseAndMask+0x11c>)
 80092d0:	665a      	str	r2, [r3, #100]	@ 0x64
 80092d2:	68fb      	ldr	r3, [r7, #12]
 80092d4:	f003 031f 	and.w	r3, r3, #31
 80092d8:	2201      	movs	r2, #1
 80092da:	409a      	lsls	r2, r3
 80092dc:	687b      	ldr	r3, [r7, #4]
 80092de:	669a      	str	r2, [r3, #104]	@ 0x68
 80092e0:	e024      	b.n	800932c <DMA_CalcDMAMUXChannelBaseAndMask+0xe8>
 80092e2:	687b      	ldr	r3, [r7, #4]
 80092e4:	681b      	ldr	r3, [r3, #0]
 80092e6:	b2db      	uxtb	r3, r3
 80092e8:	3b10      	subs	r3, #16
 80092ea:	4a1e      	ldr	r2, [pc, #120]	@ (8009364 <DMA_CalcDMAMUXChannelBaseAndMask+0x120>)
 80092ec:	fba2 2303 	umull	r2, r3, r2, r3
 80092f0:	091b      	lsrs	r3, r3, #4
 80092f2:	60fb      	str	r3, [r7, #12]
 80092f4:	68bb      	ldr	r3, [r7, #8]
 80092f6:	4a1c      	ldr	r2, [pc, #112]	@ (8009368 <DMA_CalcDMAMUXChannelBaseAndMask+0x124>)
 80092f8:	4293      	cmp	r3, r2
 80092fa:	d806      	bhi.n	800930a <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
 80092fc:	68bb      	ldr	r3, [r7, #8]
 80092fe:	4a1b      	ldr	r2, [pc, #108]	@ (800936c <DMA_CalcDMAMUXChannelBaseAndMask+0x128>)
 8009300:	4293      	cmp	r3, r2
 8009302:	d902      	bls.n	800930a <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
 8009304:	68fb      	ldr	r3, [r7, #12]
 8009306:	3308      	adds	r3, #8
 8009308:	60fb      	str	r3, [r7, #12]
 800930a:	68fa      	ldr	r2, [r7, #12]
 800930c:	4b18      	ldr	r3, [pc, #96]	@ (8009370 <DMA_CalcDMAMUXChannelBaseAndMask+0x12c>)
 800930e:	4413      	add	r3, r2
 8009310:	009b      	lsls	r3, r3, #2
 8009312:	461a      	mov	r2, r3
 8009314:	687b      	ldr	r3, [r7, #4]
 8009316:	661a      	str	r2, [r3, #96]	@ 0x60
 8009318:	687b      	ldr	r3, [r7, #4]
 800931a:	4a16      	ldr	r2, [pc, #88]	@ (8009374 <DMA_CalcDMAMUXChannelBaseAndMask+0x130>)
 800931c:	665a      	str	r2, [r3, #100]	@ 0x64
 800931e:	68fb      	ldr	r3, [r7, #12]
 8009320:	f003 031f 	and.w	r3, r3, #31
 8009324:	2201      	movs	r2, #1
 8009326:	409a      	lsls	r2, r3
 8009328:	687b      	ldr	r3, [r7, #4]
 800932a:	669a      	str	r2, [r3, #104]	@ 0x68
 800932c:	bf00      	nop
 800932e:	3714      	adds	r7, #20
 8009330:	46bd      	mov	sp, r7
 8009332:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009336:	4770      	bx	lr
 8009338:	58025408 	.word	0x58025408
 800933c:	5802541c 	.word	0x5802541c
 8009340:	58025430 	.word	0x58025430
 8009344:	58025444 	.word	0x58025444
 8009348:	58025458 	.word	0x58025458
 800934c:	5802546c 	.word	0x5802546c
 8009350:	58025480 	.word	0x58025480
 8009354:	58025494 	.word	0x58025494
 8009358:	cccccccd 	.word	0xcccccccd
 800935c:	16009600 	.word	0x16009600
 8009360:	58025880 	.word	0x58025880
 8009364:	aaaaaaab 	.word	0xaaaaaaab
 8009368:	400204b8 	.word	0x400204b8
 800936c:	4002040f 	.word	0x4002040f
 8009370:	10008200 	.word	0x10008200
 8009374:	40020880 	.word	0x40020880

08009378 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
 8009378:	b480      	push	{r7}
 800937a:	b085      	sub	sp, #20
 800937c:	af00      	add	r7, sp, #0
 800937e:	6078      	str	r0, [r7, #4]
 8009380:	687b      	ldr	r3, [r7, #4]
 8009382:	685b      	ldr	r3, [r3, #4]
 8009384:	b2db      	uxtb	r3, r3
 8009386:	60fb      	str	r3, [r7, #12]
 8009388:	68fb      	ldr	r3, [r7, #12]
 800938a:	2b00      	cmp	r3, #0
 800938c:	d04a      	beq.n	8009424 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
 800938e:	68fb      	ldr	r3, [r7, #12]
 8009390:	2b08      	cmp	r3, #8
 8009392:	d847      	bhi.n	8009424 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
 8009394:	687b      	ldr	r3, [r7, #4]
 8009396:	681b      	ldr	r3, [r3, #0]
 8009398:	4a25      	ldr	r2, [pc, #148]	@ (8009430 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xb8>)
 800939a:	4293      	cmp	r3, r2
 800939c:	d022      	beq.n	80093e4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 800939e:	687b      	ldr	r3, [r7, #4]
 80093a0:	681b      	ldr	r3, [r3, #0]
 80093a2:	4a24      	ldr	r2, [pc, #144]	@ (8009434 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xbc>)
 80093a4:	4293      	cmp	r3, r2
 80093a6:	d01d      	beq.n	80093e4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80093a8:	687b      	ldr	r3, [r7, #4]
 80093aa:	681b      	ldr	r3, [r3, #0]
 80093ac:	4a22      	ldr	r2, [pc, #136]	@ (8009438 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc0>)
 80093ae:	4293      	cmp	r3, r2
 80093b0:	d018      	beq.n	80093e4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80093b2:	687b      	ldr	r3, [r7, #4]
 80093b4:	681b      	ldr	r3, [r3, #0]
 80093b6:	4a21      	ldr	r2, [pc, #132]	@ (800943c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc4>)
 80093b8:	4293      	cmp	r3, r2
 80093ba:	d013      	beq.n	80093e4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80093bc:	687b      	ldr	r3, [r7, #4]
 80093be:	681b      	ldr	r3, [r3, #0]
 80093c0:	4a1f      	ldr	r2, [pc, #124]	@ (8009440 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc8>)
 80093c2:	4293      	cmp	r3, r2
 80093c4:	d00e      	beq.n	80093e4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80093c6:	687b      	ldr	r3, [r7, #4]
 80093c8:	681b      	ldr	r3, [r3, #0]
 80093ca:	4a1e      	ldr	r2, [pc, #120]	@ (8009444 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xcc>)
 80093cc:	4293      	cmp	r3, r2
 80093ce:	d009      	beq.n	80093e4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80093d0:	687b      	ldr	r3, [r7, #4]
 80093d2:	681b      	ldr	r3, [r3, #0]
 80093d4:	4a1c      	ldr	r2, [pc, #112]	@ (8009448 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd0>)
 80093d6:	4293      	cmp	r3, r2
 80093d8:	d004      	beq.n	80093e4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80093da:	687b      	ldr	r3, [r7, #4]
 80093dc:	681b      	ldr	r3, [r3, #0]
 80093de:	4a1b      	ldr	r2, [pc, #108]	@ (800944c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd4>)
 80093e0:	4293      	cmp	r3, r2
 80093e2:	d101      	bne.n	80093e8 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x70>
 80093e4:	2301      	movs	r3, #1
 80093e6:	e000      	b.n	80093ea <DMA_CalcDMAMUXRequestGenBaseAndMask+0x72>
 80093e8:	2300      	movs	r3, #0
 80093ea:	2b00      	cmp	r3, #0
 80093ec:	d00a      	beq.n	8009404 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x8c>
 80093ee:	68fa      	ldr	r2, [r7, #12]
 80093f0:	4b17      	ldr	r3, [pc, #92]	@ (8009450 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd8>)
 80093f2:	4413      	add	r3, r2
 80093f4:	009b      	lsls	r3, r3, #2
 80093f6:	461a      	mov	r2, r3
 80093f8:	687b      	ldr	r3, [r7, #4]
 80093fa:	66da      	str	r2, [r3, #108]	@ 0x6c
 80093fc:	687b      	ldr	r3, [r7, #4]
 80093fe:	4a15      	ldr	r2, [pc, #84]	@ (8009454 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xdc>)
 8009400:	671a      	str	r2, [r3, #112]	@ 0x70
 8009402:	e009      	b.n	8009418 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xa0>
 8009404:	68fa      	ldr	r2, [r7, #12]
 8009406:	4b14      	ldr	r3, [pc, #80]	@ (8009458 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe0>)
 8009408:	4413      	add	r3, r2
 800940a:	009b      	lsls	r3, r3, #2
 800940c:	461a      	mov	r2, r3
 800940e:	687b      	ldr	r3, [r7, #4]
 8009410:	66da      	str	r2, [r3, #108]	@ 0x6c
 8009412:	687b      	ldr	r3, [r7, #4]
 8009414:	4a11      	ldr	r2, [pc, #68]	@ (800945c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe4>)
 8009416:	671a      	str	r2, [r3, #112]	@ 0x70
 8009418:	68fb      	ldr	r3, [r7, #12]
 800941a:	3b01      	subs	r3, #1
 800941c:	2201      	movs	r2, #1
 800941e:	409a      	lsls	r2, r3
 8009420:	687b      	ldr	r3, [r7, #4]
 8009422:	675a      	str	r2, [r3, #116]	@ 0x74
 8009424:	bf00      	nop
 8009426:	3714      	adds	r7, #20
 8009428:	46bd      	mov	sp, r7
 800942a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800942e:	4770      	bx	lr
 8009430:	58025408 	.word	0x58025408
 8009434:	5802541c 	.word	0x5802541c
 8009438:	58025430 	.word	0x58025430
 800943c:	58025444 	.word	0x58025444
 8009440:	58025458 	.word	0x58025458
 8009444:	5802546c 	.word	0x5802546c
 8009448:	58025480 	.word	0x58025480
 800944c:	58025494 	.word	0x58025494
 8009450:	1600963f 	.word	0x1600963f
 8009454:	58025940 	.word	0x58025940
 8009458:	1000823f 	.word	0x1000823f
 800945c:	40020940 	.word	0x40020940

08009460 <HAL_GPIO_Init>:
 8009460:	b480      	push	{r7}
 8009462:	b089      	sub	sp, #36	@ 0x24
 8009464:	af00      	add	r7, sp, #0
 8009466:	6078      	str	r0, [r7, #4]
 8009468:	6039      	str	r1, [r7, #0]
 800946a:	2300      	movs	r3, #0
 800946c:	61fb      	str	r3, [r7, #28]
 800946e:	4b86      	ldr	r3, [pc, #536]	@ (8009688 <HAL_GPIO_Init+0x228>)
 8009470:	617b      	str	r3, [r7, #20]
 8009472:	e18c      	b.n	800978e <HAL_GPIO_Init+0x32e>
 8009474:	683b      	ldr	r3, [r7, #0]
 8009476:	681a      	ldr	r2, [r3, #0]
 8009478:	2101      	movs	r1, #1
 800947a:	69fb      	ldr	r3, [r7, #28]
 800947c:	fa01 f303 	lsl.w	r3, r1, r3
 8009480:	4013      	ands	r3, r2
 8009482:	613b      	str	r3, [r7, #16]
 8009484:	693b      	ldr	r3, [r7, #16]
 8009486:	2b00      	cmp	r3, #0
 8009488:	f000 817e 	beq.w	8009788 <HAL_GPIO_Init+0x328>
 800948c:	683b      	ldr	r3, [r7, #0]
 800948e:	685b      	ldr	r3, [r3, #4]
 8009490:	f003 0303 	and.w	r3, r3, #3
 8009494:	2b01      	cmp	r3, #1
 8009496:	d005      	beq.n	80094a4 <HAL_GPIO_Init+0x44>
 8009498:	683b      	ldr	r3, [r7, #0]
 800949a:	685b      	ldr	r3, [r3, #4]
 800949c:	f003 0303 	and.w	r3, r3, #3
 80094a0:	2b02      	cmp	r3, #2
 80094a2:	d130      	bne.n	8009506 <HAL_GPIO_Init+0xa6>
 80094a4:	687b      	ldr	r3, [r7, #4]
 80094a6:	689b      	ldr	r3, [r3, #8]
 80094a8:	61bb      	str	r3, [r7, #24]
 80094aa:	69fb      	ldr	r3, [r7, #28]
 80094ac:	005b      	lsls	r3, r3, #1
 80094ae:	2203      	movs	r2, #3
 80094b0:	fa02 f303 	lsl.w	r3, r2, r3
 80094b4:	43db      	mvns	r3, r3
 80094b6:	69ba      	ldr	r2, [r7, #24]
 80094b8:	4013      	ands	r3, r2
 80094ba:	61bb      	str	r3, [r7, #24]
 80094bc:	683b      	ldr	r3, [r7, #0]
 80094be:	68da      	ldr	r2, [r3, #12]
 80094c0:	69fb      	ldr	r3, [r7, #28]
 80094c2:	005b      	lsls	r3, r3, #1
 80094c4:	fa02 f303 	lsl.w	r3, r2, r3
 80094c8:	69ba      	ldr	r2, [r7, #24]
 80094ca:	4313      	orrs	r3, r2
 80094cc:	61bb      	str	r3, [r7, #24]
 80094ce:	687b      	ldr	r3, [r7, #4]
 80094d0:	69ba      	ldr	r2, [r7, #24]
 80094d2:	609a      	str	r2, [r3, #8]
 80094d4:	687b      	ldr	r3, [r7, #4]
 80094d6:	685b      	ldr	r3, [r3, #4]
 80094d8:	61bb      	str	r3, [r7, #24]
 80094da:	2201      	movs	r2, #1
 80094dc:	69fb      	ldr	r3, [r7, #28]
 80094de:	fa02 f303 	lsl.w	r3, r2, r3
 80094e2:	43db      	mvns	r3, r3
 80094e4:	69ba      	ldr	r2, [r7, #24]
 80094e6:	4013      	ands	r3, r2
 80094e8:	61bb      	str	r3, [r7, #24]
 80094ea:	683b      	ldr	r3, [r7, #0]
 80094ec:	685b      	ldr	r3, [r3, #4]
 80094ee:	091b      	lsrs	r3, r3, #4
 80094f0:	f003 0201 	and.w	r2, r3, #1
 80094f4:	69fb      	ldr	r3, [r7, #28]
 80094f6:	fa02 f303 	lsl.w	r3, r2, r3
 80094fa:	69ba      	ldr	r2, [r7, #24]
 80094fc:	4313      	orrs	r3, r2
 80094fe:	61bb      	str	r3, [r7, #24]
 8009500:	687b      	ldr	r3, [r7, #4]
 8009502:	69ba      	ldr	r2, [r7, #24]
 8009504:	605a      	str	r2, [r3, #4]
 8009506:	683b      	ldr	r3, [r7, #0]
 8009508:	685b      	ldr	r3, [r3, #4]
 800950a:	f003 0303 	and.w	r3, r3, #3
 800950e:	2b03      	cmp	r3, #3
 8009510:	d017      	beq.n	8009542 <HAL_GPIO_Init+0xe2>
 8009512:	687b      	ldr	r3, [r7, #4]
 8009514:	68db      	ldr	r3, [r3, #12]
 8009516:	61bb      	str	r3, [r7, #24]
 8009518:	69fb      	ldr	r3, [r7, #28]
 800951a:	005b      	lsls	r3, r3, #1
 800951c:	2203      	movs	r2, #3
 800951e:	fa02 f303 	lsl.w	r3, r2, r3
 8009522:	43db      	mvns	r3, r3
 8009524:	69ba      	ldr	r2, [r7, #24]
 8009526:	4013      	ands	r3, r2
 8009528:	61bb      	str	r3, [r7, #24]
 800952a:	683b      	ldr	r3, [r7, #0]
 800952c:	689a      	ldr	r2, [r3, #8]
 800952e:	69fb      	ldr	r3, [r7, #28]
 8009530:	005b      	lsls	r3, r3, #1
 8009532:	fa02 f303 	lsl.w	r3, r2, r3
 8009536:	69ba      	ldr	r2, [r7, #24]
 8009538:	4313      	orrs	r3, r2
 800953a:	61bb      	str	r3, [r7, #24]
 800953c:	687b      	ldr	r3, [r7, #4]
 800953e:	69ba      	ldr	r2, [r7, #24]
 8009540:	60da      	str	r2, [r3, #12]
 8009542:	683b      	ldr	r3, [r7, #0]
 8009544:	685b      	ldr	r3, [r3, #4]
 8009546:	f003 0303 	and.w	r3, r3, #3
 800954a:	2b02      	cmp	r3, #2
 800954c:	d123      	bne.n	8009596 <HAL_GPIO_Init+0x136>
 800954e:	69fb      	ldr	r3, [r7, #28]
 8009550:	08da      	lsrs	r2, r3, #3
 8009552:	687b      	ldr	r3, [r7, #4]
 8009554:	3208      	adds	r2, #8
 8009556:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800955a:	61bb      	str	r3, [r7, #24]
 800955c:	69fb      	ldr	r3, [r7, #28]
 800955e:	f003 0307 	and.w	r3, r3, #7
 8009562:	009b      	lsls	r3, r3, #2
 8009564:	220f      	movs	r2, #15
 8009566:	fa02 f303 	lsl.w	r3, r2, r3
 800956a:	43db      	mvns	r3, r3
 800956c:	69ba      	ldr	r2, [r7, #24]
 800956e:	4013      	ands	r3, r2
 8009570:	61bb      	str	r3, [r7, #24]
 8009572:	683b      	ldr	r3, [r7, #0]
 8009574:	691a      	ldr	r2, [r3, #16]
 8009576:	69fb      	ldr	r3, [r7, #28]
 8009578:	f003 0307 	and.w	r3, r3, #7
 800957c:	009b      	lsls	r3, r3, #2
 800957e:	fa02 f303 	lsl.w	r3, r2, r3
 8009582:	69ba      	ldr	r2, [r7, #24]
 8009584:	4313      	orrs	r3, r2
 8009586:	61bb      	str	r3, [r7, #24]
 8009588:	69fb      	ldr	r3, [r7, #28]
 800958a:	08da      	lsrs	r2, r3, #3
 800958c:	687b      	ldr	r3, [r7, #4]
 800958e:	3208      	adds	r2, #8
 8009590:	69b9      	ldr	r1, [r7, #24]
 8009592:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8009596:	687b      	ldr	r3, [r7, #4]
 8009598:	681b      	ldr	r3, [r3, #0]
 800959a:	61bb      	str	r3, [r7, #24]
 800959c:	69fb      	ldr	r3, [r7, #28]
 800959e:	005b      	lsls	r3, r3, #1
 80095a0:	2203      	movs	r2, #3
 80095a2:	fa02 f303 	lsl.w	r3, r2, r3
 80095a6:	43db      	mvns	r3, r3
 80095a8:	69ba      	ldr	r2, [r7, #24]
 80095aa:	4013      	ands	r3, r2
 80095ac:	61bb      	str	r3, [r7, #24]
 80095ae:	683b      	ldr	r3, [r7, #0]
 80095b0:	685b      	ldr	r3, [r3, #4]
 80095b2:	f003 0203 	and.w	r2, r3, #3
 80095b6:	69fb      	ldr	r3, [r7, #28]
 80095b8:	005b      	lsls	r3, r3, #1
 80095ba:	fa02 f303 	lsl.w	r3, r2, r3
 80095be:	69ba      	ldr	r2, [r7, #24]
 80095c0:	4313      	orrs	r3, r2
 80095c2:	61bb      	str	r3, [r7, #24]
 80095c4:	687b      	ldr	r3, [r7, #4]
 80095c6:	69ba      	ldr	r2, [r7, #24]
 80095c8:	601a      	str	r2, [r3, #0]
 80095ca:	683b      	ldr	r3, [r7, #0]
 80095cc:	685b      	ldr	r3, [r3, #4]
 80095ce:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80095d2:	2b00      	cmp	r3, #0
 80095d4:	f000 80d8 	beq.w	8009788 <HAL_GPIO_Init+0x328>
 80095d8:	4b2c      	ldr	r3, [pc, #176]	@ (800968c <HAL_GPIO_Init+0x22c>)
 80095da:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 80095de:	4a2b      	ldr	r2, [pc, #172]	@ (800968c <HAL_GPIO_Init+0x22c>)
 80095e0:	f043 0302 	orr.w	r3, r3, #2
 80095e4:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 80095e8:	4b28      	ldr	r3, [pc, #160]	@ (800968c <HAL_GPIO_Init+0x22c>)
 80095ea:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 80095ee:	f003 0302 	and.w	r3, r3, #2
 80095f2:	60fb      	str	r3, [r7, #12]
 80095f4:	68fb      	ldr	r3, [r7, #12]
 80095f6:	4a26      	ldr	r2, [pc, #152]	@ (8009690 <HAL_GPIO_Init+0x230>)
 80095f8:	69fb      	ldr	r3, [r7, #28]
 80095fa:	089b      	lsrs	r3, r3, #2
 80095fc:	3302      	adds	r3, #2
 80095fe:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009602:	61bb      	str	r3, [r7, #24]
 8009604:	69fb      	ldr	r3, [r7, #28]
 8009606:	f003 0303 	and.w	r3, r3, #3
 800960a:	009b      	lsls	r3, r3, #2
 800960c:	220f      	movs	r2, #15
 800960e:	fa02 f303 	lsl.w	r3, r2, r3
 8009612:	43db      	mvns	r3, r3
 8009614:	69ba      	ldr	r2, [r7, #24]
 8009616:	4013      	ands	r3, r2
 8009618:	61bb      	str	r3, [r7, #24]
 800961a:	687b      	ldr	r3, [r7, #4]
 800961c:	4a1d      	ldr	r2, [pc, #116]	@ (8009694 <HAL_GPIO_Init+0x234>)
 800961e:	4293      	cmp	r3, r2
 8009620:	d04a      	beq.n	80096b8 <HAL_GPIO_Init+0x258>
 8009622:	687b      	ldr	r3, [r7, #4]
 8009624:	4a1c      	ldr	r2, [pc, #112]	@ (8009698 <HAL_GPIO_Init+0x238>)
 8009626:	4293      	cmp	r3, r2
 8009628:	d02b      	beq.n	8009682 <HAL_GPIO_Init+0x222>
 800962a:	687b      	ldr	r3, [r7, #4]
 800962c:	4a1b      	ldr	r2, [pc, #108]	@ (800969c <HAL_GPIO_Init+0x23c>)
 800962e:	4293      	cmp	r3, r2
 8009630:	d025      	beq.n	800967e <HAL_GPIO_Init+0x21e>
 8009632:	687b      	ldr	r3, [r7, #4]
 8009634:	4a1a      	ldr	r2, [pc, #104]	@ (80096a0 <HAL_GPIO_Init+0x240>)
 8009636:	4293      	cmp	r3, r2
 8009638:	d01f      	beq.n	800967a <HAL_GPIO_Init+0x21a>
 800963a:	687b      	ldr	r3, [r7, #4]
 800963c:	4a19      	ldr	r2, [pc, #100]	@ (80096a4 <HAL_GPIO_Init+0x244>)
 800963e:	4293      	cmp	r3, r2
 8009640:	d019      	beq.n	8009676 <HAL_GPIO_Init+0x216>
 8009642:	687b      	ldr	r3, [r7, #4]
 8009644:	4a18      	ldr	r2, [pc, #96]	@ (80096a8 <HAL_GPIO_Init+0x248>)
 8009646:	4293      	cmp	r3, r2
 8009648:	d013      	beq.n	8009672 <HAL_GPIO_Init+0x212>
 800964a:	687b      	ldr	r3, [r7, #4]
 800964c:	4a17      	ldr	r2, [pc, #92]	@ (80096ac <HAL_GPIO_Init+0x24c>)
 800964e:	4293      	cmp	r3, r2
 8009650:	d00d      	beq.n	800966e <HAL_GPIO_Init+0x20e>
 8009652:	687b      	ldr	r3, [r7, #4]
 8009654:	4a16      	ldr	r2, [pc, #88]	@ (80096b0 <HAL_GPIO_Init+0x250>)
 8009656:	4293      	cmp	r3, r2
 8009658:	d007      	beq.n	800966a <HAL_GPIO_Init+0x20a>
 800965a:	687b      	ldr	r3, [r7, #4]
 800965c:	4a15      	ldr	r2, [pc, #84]	@ (80096b4 <HAL_GPIO_Init+0x254>)
 800965e:	4293      	cmp	r3, r2
 8009660:	d101      	bne.n	8009666 <HAL_GPIO_Init+0x206>
 8009662:	2309      	movs	r3, #9
 8009664:	e029      	b.n	80096ba <HAL_GPIO_Init+0x25a>
 8009666:	230a      	movs	r3, #10
 8009668:	e027      	b.n	80096ba <HAL_GPIO_Init+0x25a>
 800966a:	2307      	movs	r3, #7
 800966c:	e025      	b.n	80096ba <HAL_GPIO_Init+0x25a>
 800966e:	2306      	movs	r3, #6
 8009670:	e023      	b.n	80096ba <HAL_GPIO_Init+0x25a>
 8009672:	2305      	movs	r3, #5
 8009674:	e021      	b.n	80096ba <HAL_GPIO_Init+0x25a>
 8009676:	2304      	movs	r3, #4
 8009678:	e01f      	b.n	80096ba <HAL_GPIO_Init+0x25a>
 800967a:	2303      	movs	r3, #3
 800967c:	e01d      	b.n	80096ba <HAL_GPIO_Init+0x25a>
 800967e:	2302      	movs	r3, #2
 8009680:	e01b      	b.n	80096ba <HAL_GPIO_Init+0x25a>
 8009682:	2301      	movs	r3, #1
 8009684:	e019      	b.n	80096ba <HAL_GPIO_Init+0x25a>
 8009686:	bf00      	nop
 8009688:	58000080 	.word	0x58000080
 800968c:	58024400 	.word	0x58024400
 8009690:	58000400 	.word	0x58000400
 8009694:	58020000 	.word	0x58020000
 8009698:	58020400 	.word	0x58020400
 800969c:	58020800 	.word	0x58020800
 80096a0:	58020c00 	.word	0x58020c00
 80096a4:	58021000 	.word	0x58021000
 80096a8:	58021400 	.word	0x58021400
 80096ac:	58021800 	.word	0x58021800
 80096b0:	58021c00 	.word	0x58021c00
 80096b4:	58022400 	.word	0x58022400
 80096b8:	2300      	movs	r3, #0
 80096ba:	69fa      	ldr	r2, [r7, #28]
 80096bc:	f002 0203 	and.w	r2, r2, #3
 80096c0:	0092      	lsls	r2, r2, #2
 80096c2:	4093      	lsls	r3, r2
 80096c4:	69ba      	ldr	r2, [r7, #24]
 80096c6:	4313      	orrs	r3, r2
 80096c8:	61bb      	str	r3, [r7, #24]
 80096ca:	4938      	ldr	r1, [pc, #224]	@ (80097ac <HAL_GPIO_Init+0x34c>)
 80096cc:	69fb      	ldr	r3, [r7, #28]
 80096ce:	089b      	lsrs	r3, r3, #2
 80096d0:	3302      	adds	r3, #2
 80096d2:	69ba      	ldr	r2, [r7, #24]
 80096d4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80096d8:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 80096dc:	681b      	ldr	r3, [r3, #0]
 80096de:	61bb      	str	r3, [r7, #24]
 80096e0:	693b      	ldr	r3, [r7, #16]
 80096e2:	43db      	mvns	r3, r3
 80096e4:	69ba      	ldr	r2, [r7, #24]
 80096e6:	4013      	ands	r3, r2
 80096e8:	61bb      	str	r3, [r7, #24]
 80096ea:	683b      	ldr	r3, [r7, #0]
 80096ec:	685b      	ldr	r3, [r3, #4]
 80096ee:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80096f2:	2b00      	cmp	r3, #0
 80096f4:	d003      	beq.n	80096fe <HAL_GPIO_Init+0x29e>
 80096f6:	69ba      	ldr	r2, [r7, #24]
 80096f8:	693b      	ldr	r3, [r7, #16]
 80096fa:	4313      	orrs	r3, r2
 80096fc:	61bb      	str	r3, [r7, #24]
 80096fe:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8009702:	69bb      	ldr	r3, [r7, #24]
 8009704:	6013      	str	r3, [r2, #0]
 8009706:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 800970a:	685b      	ldr	r3, [r3, #4]
 800970c:	61bb      	str	r3, [r7, #24]
 800970e:	693b      	ldr	r3, [r7, #16]
 8009710:	43db      	mvns	r3, r3
 8009712:	69ba      	ldr	r2, [r7, #24]
 8009714:	4013      	ands	r3, r2
 8009716:	61bb      	str	r3, [r7, #24]
 8009718:	683b      	ldr	r3, [r7, #0]
 800971a:	685b      	ldr	r3, [r3, #4]
 800971c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8009720:	2b00      	cmp	r3, #0
 8009722:	d003      	beq.n	800972c <HAL_GPIO_Init+0x2cc>
 8009724:	69ba      	ldr	r2, [r7, #24]
 8009726:	693b      	ldr	r3, [r7, #16]
 8009728:	4313      	orrs	r3, r2
 800972a:	61bb      	str	r3, [r7, #24]
 800972c:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8009730:	69bb      	ldr	r3, [r7, #24]
 8009732:	6053      	str	r3, [r2, #4]
 8009734:	697b      	ldr	r3, [r7, #20]
 8009736:	685b      	ldr	r3, [r3, #4]
 8009738:	61bb      	str	r3, [r7, #24]
 800973a:	693b      	ldr	r3, [r7, #16]
 800973c:	43db      	mvns	r3, r3
 800973e:	69ba      	ldr	r2, [r7, #24]
 8009740:	4013      	ands	r3, r2
 8009742:	61bb      	str	r3, [r7, #24]
 8009744:	683b      	ldr	r3, [r7, #0]
 8009746:	685b      	ldr	r3, [r3, #4]
 8009748:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800974c:	2b00      	cmp	r3, #0
 800974e:	d003      	beq.n	8009758 <HAL_GPIO_Init+0x2f8>
 8009750:	69ba      	ldr	r2, [r7, #24]
 8009752:	693b      	ldr	r3, [r7, #16]
 8009754:	4313      	orrs	r3, r2
 8009756:	61bb      	str	r3, [r7, #24]
 8009758:	697b      	ldr	r3, [r7, #20]
 800975a:	69ba      	ldr	r2, [r7, #24]
 800975c:	605a      	str	r2, [r3, #4]
 800975e:	697b      	ldr	r3, [r7, #20]
 8009760:	681b      	ldr	r3, [r3, #0]
 8009762:	61bb      	str	r3, [r7, #24]
 8009764:	693b      	ldr	r3, [r7, #16]
 8009766:	43db      	mvns	r3, r3
 8009768:	69ba      	ldr	r2, [r7, #24]
 800976a:	4013      	ands	r3, r2
 800976c:	61bb      	str	r3, [r7, #24]
 800976e:	683b      	ldr	r3, [r7, #0]
 8009770:	685b      	ldr	r3, [r3, #4]
 8009772:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8009776:	2b00      	cmp	r3, #0
 8009778:	d003      	beq.n	8009782 <HAL_GPIO_Init+0x322>
 800977a:	69ba      	ldr	r2, [r7, #24]
 800977c:	693b      	ldr	r3, [r7, #16]
 800977e:	4313      	orrs	r3, r2
 8009780:	61bb      	str	r3, [r7, #24]
 8009782:	697b      	ldr	r3, [r7, #20]
 8009784:	69ba      	ldr	r2, [r7, #24]
 8009786:	601a      	str	r2, [r3, #0]
 8009788:	69fb      	ldr	r3, [r7, #28]
 800978a:	3301      	adds	r3, #1
 800978c:	61fb      	str	r3, [r7, #28]
 800978e:	683b      	ldr	r3, [r7, #0]
 8009790:	681a      	ldr	r2, [r3, #0]
 8009792:	69fb      	ldr	r3, [r7, #28]
 8009794:	fa22 f303 	lsr.w	r3, r2, r3
 8009798:	2b00      	cmp	r3, #0
 800979a:	f47f ae6b 	bne.w	8009474 <HAL_GPIO_Init+0x14>
 800979e:	bf00      	nop
 80097a0:	bf00      	nop
 80097a2:	3724      	adds	r7, #36	@ 0x24
 80097a4:	46bd      	mov	sp, r7
 80097a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097aa:	4770      	bx	lr
 80097ac:	58000400 	.word	0x58000400

080097b0 <HAL_GPIO_ReadPin>:
 80097b0:	b480      	push	{r7}
 80097b2:	b085      	sub	sp, #20
 80097b4:	af00      	add	r7, sp, #0
 80097b6:	6078      	str	r0, [r7, #4]
 80097b8:	460b      	mov	r3, r1
 80097ba:	807b      	strh	r3, [r7, #2]
 80097bc:	687b      	ldr	r3, [r7, #4]
 80097be:	691a      	ldr	r2, [r3, #16]
 80097c0:	887b      	ldrh	r3, [r7, #2]
 80097c2:	4013      	ands	r3, r2
 80097c4:	2b00      	cmp	r3, #0
 80097c6:	d002      	beq.n	80097ce <HAL_GPIO_ReadPin+0x1e>
 80097c8:	2301      	movs	r3, #1
 80097ca:	73fb      	strb	r3, [r7, #15]
 80097cc:	e001      	b.n	80097d2 <HAL_GPIO_ReadPin+0x22>
 80097ce:	2300      	movs	r3, #0
 80097d0:	73fb      	strb	r3, [r7, #15]
 80097d2:	7bfb      	ldrb	r3, [r7, #15]
 80097d4:	4618      	mov	r0, r3
 80097d6:	3714      	adds	r7, #20
 80097d8:	46bd      	mov	sp, r7
 80097da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097de:	4770      	bx	lr

080097e0 <HAL_GPIO_WritePin>:
 80097e0:	b480      	push	{r7}
 80097e2:	b083      	sub	sp, #12
 80097e4:	af00      	add	r7, sp, #0
 80097e6:	6078      	str	r0, [r7, #4]
 80097e8:	460b      	mov	r3, r1
 80097ea:	807b      	strh	r3, [r7, #2]
 80097ec:	4613      	mov	r3, r2
 80097ee:	707b      	strb	r3, [r7, #1]
 80097f0:	787b      	ldrb	r3, [r7, #1]
 80097f2:	2b00      	cmp	r3, #0
 80097f4:	d003      	beq.n	80097fe <HAL_GPIO_WritePin+0x1e>
 80097f6:	887a      	ldrh	r2, [r7, #2]
 80097f8:	687b      	ldr	r3, [r7, #4]
 80097fa:	619a      	str	r2, [r3, #24]
 80097fc:	e003      	b.n	8009806 <HAL_GPIO_WritePin+0x26>
 80097fe:	887b      	ldrh	r3, [r7, #2]
 8009800:	041a      	lsls	r2, r3, #16
 8009802:	687b      	ldr	r3, [r7, #4]
 8009804:	619a      	str	r2, [r3, #24]
 8009806:	bf00      	nop
 8009808:	370c      	adds	r7, #12
 800980a:	46bd      	mov	sp, r7
 800980c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009810:	4770      	bx	lr
	...

08009814 <HAL_I2C_Init>:
 8009814:	b580      	push	{r7, lr}
 8009816:	b082      	sub	sp, #8
 8009818:	af00      	add	r7, sp, #0
 800981a:	6078      	str	r0, [r7, #4]
 800981c:	687b      	ldr	r3, [r7, #4]
 800981e:	2b00      	cmp	r3, #0
 8009820:	d101      	bne.n	8009826 <HAL_I2C_Init+0x12>
 8009822:	2301      	movs	r3, #1
 8009824:	e08b      	b.n	800993e <HAL_I2C_Init+0x12a>
 8009826:	687b      	ldr	r3, [r7, #4]
 8009828:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800982c:	b2db      	uxtb	r3, r3
 800982e:	2b00      	cmp	r3, #0
 8009830:	d106      	bne.n	8009840 <HAL_I2C_Init+0x2c>
 8009832:	687b      	ldr	r3, [r7, #4]
 8009834:	2200      	movs	r2, #0
 8009836:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800983a:	6878      	ldr	r0, [r7, #4]
 800983c:	f7f8 fa56 	bl	8001cec <HAL_I2C_MspInit>
 8009840:	687b      	ldr	r3, [r7, #4]
 8009842:	2224      	movs	r2, #36	@ 0x24
 8009844:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8009848:	687b      	ldr	r3, [r7, #4]
 800984a:	681b      	ldr	r3, [r3, #0]
 800984c:	681a      	ldr	r2, [r3, #0]
 800984e:	687b      	ldr	r3, [r7, #4]
 8009850:	681b      	ldr	r3, [r3, #0]
 8009852:	f022 0201 	bic.w	r2, r2, #1
 8009856:	601a      	str	r2, [r3, #0]
 8009858:	687b      	ldr	r3, [r7, #4]
 800985a:	685a      	ldr	r2, [r3, #4]
 800985c:	687b      	ldr	r3, [r7, #4]
 800985e:	681b      	ldr	r3, [r3, #0]
 8009860:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8009864:	611a      	str	r2, [r3, #16]
 8009866:	687b      	ldr	r3, [r7, #4]
 8009868:	681b      	ldr	r3, [r3, #0]
 800986a:	689a      	ldr	r2, [r3, #8]
 800986c:	687b      	ldr	r3, [r7, #4]
 800986e:	681b      	ldr	r3, [r3, #0]
 8009870:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8009874:	609a      	str	r2, [r3, #8]
 8009876:	687b      	ldr	r3, [r7, #4]
 8009878:	68db      	ldr	r3, [r3, #12]
 800987a:	2b01      	cmp	r3, #1
 800987c:	d107      	bne.n	800988e <HAL_I2C_Init+0x7a>
 800987e:	687b      	ldr	r3, [r7, #4]
 8009880:	689a      	ldr	r2, [r3, #8]
 8009882:	687b      	ldr	r3, [r7, #4]
 8009884:	681b      	ldr	r3, [r3, #0]
 8009886:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800988a:	609a      	str	r2, [r3, #8]
 800988c:	e006      	b.n	800989c <HAL_I2C_Init+0x88>
 800988e:	687b      	ldr	r3, [r7, #4]
 8009890:	689a      	ldr	r2, [r3, #8]
 8009892:	687b      	ldr	r3, [r7, #4]
 8009894:	681b      	ldr	r3, [r3, #0]
 8009896:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 800989a:	609a      	str	r2, [r3, #8]
 800989c:	687b      	ldr	r3, [r7, #4]
 800989e:	68db      	ldr	r3, [r3, #12]
 80098a0:	2b02      	cmp	r3, #2
 80098a2:	d108      	bne.n	80098b6 <HAL_I2C_Init+0xa2>
 80098a4:	687b      	ldr	r3, [r7, #4]
 80098a6:	681b      	ldr	r3, [r3, #0]
 80098a8:	685a      	ldr	r2, [r3, #4]
 80098aa:	687b      	ldr	r3, [r7, #4]
 80098ac:	681b      	ldr	r3, [r3, #0]
 80098ae:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80098b2:	605a      	str	r2, [r3, #4]
 80098b4:	e007      	b.n	80098c6 <HAL_I2C_Init+0xb2>
 80098b6:	687b      	ldr	r3, [r7, #4]
 80098b8:	681b      	ldr	r3, [r3, #0]
 80098ba:	685a      	ldr	r2, [r3, #4]
 80098bc:	687b      	ldr	r3, [r7, #4]
 80098be:	681b      	ldr	r3, [r3, #0]
 80098c0:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80098c4:	605a      	str	r2, [r3, #4]
 80098c6:	687b      	ldr	r3, [r7, #4]
 80098c8:	681b      	ldr	r3, [r3, #0]
 80098ca:	6859      	ldr	r1, [r3, #4]
 80098cc:	687b      	ldr	r3, [r7, #4]
 80098ce:	681a      	ldr	r2, [r3, #0]
 80098d0:	4b1d      	ldr	r3, [pc, #116]	@ (8009948 <HAL_I2C_Init+0x134>)
 80098d2:	430b      	orrs	r3, r1
 80098d4:	6053      	str	r3, [r2, #4]
 80098d6:	687b      	ldr	r3, [r7, #4]
 80098d8:	681b      	ldr	r3, [r3, #0]
 80098da:	68da      	ldr	r2, [r3, #12]
 80098dc:	687b      	ldr	r3, [r7, #4]
 80098de:	681b      	ldr	r3, [r3, #0]
 80098e0:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80098e4:	60da      	str	r2, [r3, #12]
 80098e6:	687b      	ldr	r3, [r7, #4]
 80098e8:	691a      	ldr	r2, [r3, #16]
 80098ea:	687b      	ldr	r3, [r7, #4]
 80098ec:	695b      	ldr	r3, [r3, #20]
 80098ee:	ea42 0103 	orr.w	r1, r2, r3
 80098f2:	687b      	ldr	r3, [r7, #4]
 80098f4:	699b      	ldr	r3, [r3, #24]
 80098f6:	021a      	lsls	r2, r3, #8
 80098f8:	687b      	ldr	r3, [r7, #4]
 80098fa:	681b      	ldr	r3, [r3, #0]
 80098fc:	430a      	orrs	r2, r1
 80098fe:	60da      	str	r2, [r3, #12]
 8009900:	687b      	ldr	r3, [r7, #4]
 8009902:	69d9      	ldr	r1, [r3, #28]
 8009904:	687b      	ldr	r3, [r7, #4]
 8009906:	6a1a      	ldr	r2, [r3, #32]
 8009908:	687b      	ldr	r3, [r7, #4]
 800990a:	681b      	ldr	r3, [r3, #0]
 800990c:	430a      	orrs	r2, r1
 800990e:	601a      	str	r2, [r3, #0]
 8009910:	687b      	ldr	r3, [r7, #4]
 8009912:	681b      	ldr	r3, [r3, #0]
 8009914:	681a      	ldr	r2, [r3, #0]
 8009916:	687b      	ldr	r3, [r7, #4]
 8009918:	681b      	ldr	r3, [r3, #0]
 800991a:	f042 0201 	orr.w	r2, r2, #1
 800991e:	601a      	str	r2, [r3, #0]
 8009920:	687b      	ldr	r3, [r7, #4]
 8009922:	2200      	movs	r2, #0
 8009924:	645a      	str	r2, [r3, #68]	@ 0x44
 8009926:	687b      	ldr	r3, [r7, #4]
 8009928:	2220      	movs	r2, #32
 800992a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800992e:	687b      	ldr	r3, [r7, #4]
 8009930:	2200      	movs	r2, #0
 8009932:	631a      	str	r2, [r3, #48]	@ 0x30
 8009934:	687b      	ldr	r3, [r7, #4]
 8009936:	2200      	movs	r2, #0
 8009938:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800993c:	2300      	movs	r3, #0
 800993e:	4618      	mov	r0, r3
 8009940:	3708      	adds	r7, #8
 8009942:	46bd      	mov	sp, r7
 8009944:	bd80      	pop	{r7, pc}
 8009946:	bf00      	nop
 8009948:	02008000 	.word	0x02008000

0800994c <HAL_I2CEx_ConfigAnalogFilter>:
 800994c:	b480      	push	{r7}
 800994e:	b083      	sub	sp, #12
 8009950:	af00      	add	r7, sp, #0
 8009952:	6078      	str	r0, [r7, #4]
 8009954:	6039      	str	r1, [r7, #0]
 8009956:	687b      	ldr	r3, [r7, #4]
 8009958:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800995c:	b2db      	uxtb	r3, r3
 800995e:	2b20      	cmp	r3, #32
 8009960:	d138      	bne.n	80099d4 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8009962:	687b      	ldr	r3, [r7, #4]
 8009964:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8009968:	2b01      	cmp	r3, #1
 800996a:	d101      	bne.n	8009970 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 800996c:	2302      	movs	r3, #2
 800996e:	e032      	b.n	80099d6 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8009970:	687b      	ldr	r3, [r7, #4]
 8009972:	2201      	movs	r2, #1
 8009974:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8009978:	687b      	ldr	r3, [r7, #4]
 800997a:	2224      	movs	r2, #36	@ 0x24
 800997c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8009980:	687b      	ldr	r3, [r7, #4]
 8009982:	681b      	ldr	r3, [r3, #0]
 8009984:	681a      	ldr	r2, [r3, #0]
 8009986:	687b      	ldr	r3, [r7, #4]
 8009988:	681b      	ldr	r3, [r3, #0]
 800998a:	f022 0201 	bic.w	r2, r2, #1
 800998e:	601a      	str	r2, [r3, #0]
 8009990:	687b      	ldr	r3, [r7, #4]
 8009992:	681b      	ldr	r3, [r3, #0]
 8009994:	681a      	ldr	r2, [r3, #0]
 8009996:	687b      	ldr	r3, [r7, #4]
 8009998:	681b      	ldr	r3, [r3, #0]
 800999a:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800999e:	601a      	str	r2, [r3, #0]
 80099a0:	687b      	ldr	r3, [r7, #4]
 80099a2:	681b      	ldr	r3, [r3, #0]
 80099a4:	6819      	ldr	r1, [r3, #0]
 80099a6:	687b      	ldr	r3, [r7, #4]
 80099a8:	681b      	ldr	r3, [r3, #0]
 80099aa:	683a      	ldr	r2, [r7, #0]
 80099ac:	430a      	orrs	r2, r1
 80099ae:	601a      	str	r2, [r3, #0]
 80099b0:	687b      	ldr	r3, [r7, #4]
 80099b2:	681b      	ldr	r3, [r3, #0]
 80099b4:	681a      	ldr	r2, [r3, #0]
 80099b6:	687b      	ldr	r3, [r7, #4]
 80099b8:	681b      	ldr	r3, [r3, #0]
 80099ba:	f042 0201 	orr.w	r2, r2, #1
 80099be:	601a      	str	r2, [r3, #0]
 80099c0:	687b      	ldr	r3, [r7, #4]
 80099c2:	2220      	movs	r2, #32
 80099c4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80099c8:	687b      	ldr	r3, [r7, #4]
 80099ca:	2200      	movs	r2, #0
 80099cc:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80099d0:	2300      	movs	r3, #0
 80099d2:	e000      	b.n	80099d6 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80099d4:	2302      	movs	r3, #2
 80099d6:	4618      	mov	r0, r3
 80099d8:	370c      	adds	r7, #12
 80099da:	46bd      	mov	sp, r7
 80099dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099e0:	4770      	bx	lr

080099e2 <HAL_I2CEx_ConfigDigitalFilter>:
 80099e2:	b480      	push	{r7}
 80099e4:	b085      	sub	sp, #20
 80099e6:	af00      	add	r7, sp, #0
 80099e8:	6078      	str	r0, [r7, #4]
 80099ea:	6039      	str	r1, [r7, #0]
 80099ec:	687b      	ldr	r3, [r7, #4]
 80099ee:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80099f2:	b2db      	uxtb	r3, r3
 80099f4:	2b20      	cmp	r3, #32
 80099f6:	d139      	bne.n	8009a6c <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 80099f8:	687b      	ldr	r3, [r7, #4]
 80099fa:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80099fe:	2b01      	cmp	r3, #1
 8009a00:	d101      	bne.n	8009a06 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8009a02:	2302      	movs	r3, #2
 8009a04:	e033      	b.n	8009a6e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8009a06:	687b      	ldr	r3, [r7, #4]
 8009a08:	2201      	movs	r2, #1
 8009a0a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8009a0e:	687b      	ldr	r3, [r7, #4]
 8009a10:	2224      	movs	r2, #36	@ 0x24
 8009a12:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8009a16:	687b      	ldr	r3, [r7, #4]
 8009a18:	681b      	ldr	r3, [r3, #0]
 8009a1a:	681a      	ldr	r2, [r3, #0]
 8009a1c:	687b      	ldr	r3, [r7, #4]
 8009a1e:	681b      	ldr	r3, [r3, #0]
 8009a20:	f022 0201 	bic.w	r2, r2, #1
 8009a24:	601a      	str	r2, [r3, #0]
 8009a26:	687b      	ldr	r3, [r7, #4]
 8009a28:	681b      	ldr	r3, [r3, #0]
 8009a2a:	681b      	ldr	r3, [r3, #0]
 8009a2c:	60fb      	str	r3, [r7, #12]
 8009a2e:	68fb      	ldr	r3, [r7, #12]
 8009a30:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8009a34:	60fb      	str	r3, [r7, #12]
 8009a36:	683b      	ldr	r3, [r7, #0]
 8009a38:	021b      	lsls	r3, r3, #8
 8009a3a:	68fa      	ldr	r2, [r7, #12]
 8009a3c:	4313      	orrs	r3, r2
 8009a3e:	60fb      	str	r3, [r7, #12]
 8009a40:	687b      	ldr	r3, [r7, #4]
 8009a42:	681b      	ldr	r3, [r3, #0]
 8009a44:	68fa      	ldr	r2, [r7, #12]
 8009a46:	601a      	str	r2, [r3, #0]
 8009a48:	687b      	ldr	r3, [r7, #4]
 8009a4a:	681b      	ldr	r3, [r3, #0]
 8009a4c:	681a      	ldr	r2, [r3, #0]
 8009a4e:	687b      	ldr	r3, [r7, #4]
 8009a50:	681b      	ldr	r3, [r3, #0]
 8009a52:	f042 0201 	orr.w	r2, r2, #1
 8009a56:	601a      	str	r2, [r3, #0]
 8009a58:	687b      	ldr	r3, [r7, #4]
 8009a5a:	2220      	movs	r2, #32
 8009a5c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8009a60:	687b      	ldr	r3, [r7, #4]
 8009a62:	2200      	movs	r2, #0
 8009a64:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8009a68:	2300      	movs	r3, #0
 8009a6a:	e000      	b.n	8009a6e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8009a6c:	2302      	movs	r3, #2
 8009a6e:	4618      	mov	r0, r3
 8009a70:	3714      	adds	r7, #20
 8009a72:	46bd      	mov	sp, r7
 8009a74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a78:	4770      	bx	lr

08009a7a <HAL_PCD_Init>:
 8009a7a:	b580      	push	{r7, lr}
 8009a7c:	b086      	sub	sp, #24
 8009a7e:	af02      	add	r7, sp, #8
 8009a80:	6078      	str	r0, [r7, #4]
 8009a82:	687b      	ldr	r3, [r7, #4]
 8009a84:	2b00      	cmp	r3, #0
 8009a86:	d101      	bne.n	8009a8c <HAL_PCD_Init+0x12>
 8009a88:	2301      	movs	r3, #1
 8009a8a:	e0fe      	b.n	8009c8a <HAL_PCD_Init+0x210>
 8009a8c:	687b      	ldr	r3, [r7, #4]
 8009a8e:	f893 3495 	ldrb.w	r3, [r3, #1173]	@ 0x495
 8009a92:	b2db      	uxtb	r3, r3
 8009a94:	2b00      	cmp	r3, #0
 8009a96:	d106      	bne.n	8009aa6 <HAL_PCD_Init+0x2c>
 8009a98:	687b      	ldr	r3, [r7, #4]
 8009a9a:	2200      	movs	r2, #0
 8009a9c:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8009aa0:	6878      	ldr	r0, [r7, #4]
 8009aa2:	f00b fd69 	bl	8015578 <HAL_PCD_MspInit>
 8009aa6:	687b      	ldr	r3, [r7, #4]
 8009aa8:	2203      	movs	r2, #3
 8009aaa:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8009aae:	687b      	ldr	r3, [r7, #4]
 8009ab0:	681b      	ldr	r3, [r3, #0]
 8009ab2:	4618      	mov	r0, r3
 8009ab4:	f008 f925 	bl	8011d02 <USB_DisableGlobalInt>
 8009ab8:	687b      	ldr	r3, [r7, #4]
 8009aba:	6818      	ldr	r0, [r3, #0]
 8009abc:	687b      	ldr	r3, [r7, #4]
 8009abe:	7c1a      	ldrb	r2, [r3, #16]
 8009ac0:	f88d 2000 	strb.w	r2, [sp]
 8009ac4:	3304      	adds	r3, #4
 8009ac6:	cb0e      	ldmia	r3, {r1, r2, r3}
 8009ac8:	f007 fff6 	bl	8011ab8 <USB_CoreInit>
 8009acc:	4603      	mov	r3, r0
 8009ace:	2b00      	cmp	r3, #0
 8009ad0:	d005      	beq.n	8009ade <HAL_PCD_Init+0x64>
 8009ad2:	687b      	ldr	r3, [r7, #4]
 8009ad4:	2202      	movs	r2, #2
 8009ad6:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8009ada:	2301      	movs	r3, #1
 8009adc:	e0d5      	b.n	8009c8a <HAL_PCD_Init+0x210>
 8009ade:	687b      	ldr	r3, [r7, #4]
 8009ae0:	681b      	ldr	r3, [r3, #0]
 8009ae2:	2100      	movs	r1, #0
 8009ae4:	4618      	mov	r0, r3
 8009ae6:	f008 f91d 	bl	8011d24 <USB_SetCurrentMode>
 8009aea:	4603      	mov	r3, r0
 8009aec:	2b00      	cmp	r3, #0
 8009aee:	d005      	beq.n	8009afc <HAL_PCD_Init+0x82>
 8009af0:	687b      	ldr	r3, [r7, #4]
 8009af2:	2202      	movs	r2, #2
 8009af4:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8009af8:	2301      	movs	r3, #1
 8009afa:	e0c6      	b.n	8009c8a <HAL_PCD_Init+0x210>
 8009afc:	2300      	movs	r3, #0
 8009afe:	73fb      	strb	r3, [r7, #15]
 8009b00:	e04a      	b.n	8009b98 <HAL_PCD_Init+0x11e>
 8009b02:	7bfa      	ldrb	r2, [r7, #15]
 8009b04:	6879      	ldr	r1, [r7, #4]
 8009b06:	4613      	mov	r3, r2
 8009b08:	00db      	lsls	r3, r3, #3
 8009b0a:	4413      	add	r3, r2
 8009b0c:	009b      	lsls	r3, r3, #2
 8009b0e:	440b      	add	r3, r1
 8009b10:	3315      	adds	r3, #21
 8009b12:	2201      	movs	r2, #1
 8009b14:	701a      	strb	r2, [r3, #0]
 8009b16:	7bfa      	ldrb	r2, [r7, #15]
 8009b18:	6879      	ldr	r1, [r7, #4]
 8009b1a:	4613      	mov	r3, r2
 8009b1c:	00db      	lsls	r3, r3, #3
 8009b1e:	4413      	add	r3, r2
 8009b20:	009b      	lsls	r3, r3, #2
 8009b22:	440b      	add	r3, r1
 8009b24:	3314      	adds	r3, #20
 8009b26:	7bfa      	ldrb	r2, [r7, #15]
 8009b28:	701a      	strb	r2, [r3, #0]
 8009b2a:	7bfa      	ldrb	r2, [r7, #15]
 8009b2c:	7bfb      	ldrb	r3, [r7, #15]
 8009b2e:	b298      	uxth	r0, r3
 8009b30:	6879      	ldr	r1, [r7, #4]
 8009b32:	4613      	mov	r3, r2
 8009b34:	00db      	lsls	r3, r3, #3
 8009b36:	4413      	add	r3, r2
 8009b38:	009b      	lsls	r3, r3, #2
 8009b3a:	440b      	add	r3, r1
 8009b3c:	332e      	adds	r3, #46	@ 0x2e
 8009b3e:	4602      	mov	r2, r0
 8009b40:	801a      	strh	r2, [r3, #0]
 8009b42:	7bfa      	ldrb	r2, [r7, #15]
 8009b44:	6879      	ldr	r1, [r7, #4]
 8009b46:	4613      	mov	r3, r2
 8009b48:	00db      	lsls	r3, r3, #3
 8009b4a:	4413      	add	r3, r2
 8009b4c:	009b      	lsls	r3, r3, #2
 8009b4e:	440b      	add	r3, r1
 8009b50:	3318      	adds	r3, #24
 8009b52:	2200      	movs	r2, #0
 8009b54:	701a      	strb	r2, [r3, #0]
 8009b56:	7bfa      	ldrb	r2, [r7, #15]
 8009b58:	6879      	ldr	r1, [r7, #4]
 8009b5a:	4613      	mov	r3, r2
 8009b5c:	00db      	lsls	r3, r3, #3
 8009b5e:	4413      	add	r3, r2
 8009b60:	009b      	lsls	r3, r3, #2
 8009b62:	440b      	add	r3, r1
 8009b64:	331c      	adds	r3, #28
 8009b66:	2200      	movs	r2, #0
 8009b68:	601a      	str	r2, [r3, #0]
 8009b6a:	7bfa      	ldrb	r2, [r7, #15]
 8009b6c:	6879      	ldr	r1, [r7, #4]
 8009b6e:	4613      	mov	r3, r2
 8009b70:	00db      	lsls	r3, r3, #3
 8009b72:	4413      	add	r3, r2
 8009b74:	009b      	lsls	r3, r3, #2
 8009b76:	440b      	add	r3, r1
 8009b78:	3320      	adds	r3, #32
 8009b7a:	2200      	movs	r2, #0
 8009b7c:	601a      	str	r2, [r3, #0]
 8009b7e:	7bfa      	ldrb	r2, [r7, #15]
 8009b80:	6879      	ldr	r1, [r7, #4]
 8009b82:	4613      	mov	r3, r2
 8009b84:	00db      	lsls	r3, r3, #3
 8009b86:	4413      	add	r3, r2
 8009b88:	009b      	lsls	r3, r3, #2
 8009b8a:	440b      	add	r3, r1
 8009b8c:	3324      	adds	r3, #36	@ 0x24
 8009b8e:	2200      	movs	r2, #0
 8009b90:	601a      	str	r2, [r3, #0]
 8009b92:	7bfb      	ldrb	r3, [r7, #15]
 8009b94:	3301      	adds	r3, #1
 8009b96:	73fb      	strb	r3, [r7, #15]
 8009b98:	687b      	ldr	r3, [r7, #4]
 8009b9a:	791b      	ldrb	r3, [r3, #4]
 8009b9c:	7bfa      	ldrb	r2, [r7, #15]
 8009b9e:	429a      	cmp	r2, r3
 8009ba0:	d3af      	bcc.n	8009b02 <HAL_PCD_Init+0x88>
 8009ba2:	2300      	movs	r3, #0
 8009ba4:	73fb      	strb	r3, [r7, #15]
 8009ba6:	e044      	b.n	8009c32 <HAL_PCD_Init+0x1b8>
 8009ba8:	7bfa      	ldrb	r2, [r7, #15]
 8009baa:	6879      	ldr	r1, [r7, #4]
 8009bac:	4613      	mov	r3, r2
 8009bae:	00db      	lsls	r3, r3, #3
 8009bb0:	4413      	add	r3, r2
 8009bb2:	009b      	lsls	r3, r3, #2
 8009bb4:	440b      	add	r3, r1
 8009bb6:	f203 2355 	addw	r3, r3, #597	@ 0x255
 8009bba:	2200      	movs	r2, #0
 8009bbc:	701a      	strb	r2, [r3, #0]
 8009bbe:	7bfa      	ldrb	r2, [r7, #15]
 8009bc0:	6879      	ldr	r1, [r7, #4]
 8009bc2:	4613      	mov	r3, r2
 8009bc4:	00db      	lsls	r3, r3, #3
 8009bc6:	4413      	add	r3, r2
 8009bc8:	009b      	lsls	r3, r3, #2
 8009bca:	440b      	add	r3, r1
 8009bcc:	f503 7315 	add.w	r3, r3, #596	@ 0x254
 8009bd0:	7bfa      	ldrb	r2, [r7, #15]
 8009bd2:	701a      	strb	r2, [r3, #0]
 8009bd4:	7bfa      	ldrb	r2, [r7, #15]
 8009bd6:	6879      	ldr	r1, [r7, #4]
 8009bd8:	4613      	mov	r3, r2
 8009bda:	00db      	lsls	r3, r3, #3
 8009bdc:	4413      	add	r3, r2
 8009bde:	009b      	lsls	r3, r3, #2
 8009be0:	440b      	add	r3, r1
 8009be2:	f503 7316 	add.w	r3, r3, #600	@ 0x258
 8009be6:	2200      	movs	r2, #0
 8009be8:	701a      	strb	r2, [r3, #0]
 8009bea:	7bfa      	ldrb	r2, [r7, #15]
 8009bec:	6879      	ldr	r1, [r7, #4]
 8009bee:	4613      	mov	r3, r2
 8009bf0:	00db      	lsls	r3, r3, #3
 8009bf2:	4413      	add	r3, r2
 8009bf4:	009b      	lsls	r3, r3, #2
 8009bf6:	440b      	add	r3, r1
 8009bf8:	f503 7317 	add.w	r3, r3, #604	@ 0x25c
 8009bfc:	2200      	movs	r2, #0
 8009bfe:	601a      	str	r2, [r3, #0]
 8009c00:	7bfa      	ldrb	r2, [r7, #15]
 8009c02:	6879      	ldr	r1, [r7, #4]
 8009c04:	4613      	mov	r3, r2
 8009c06:	00db      	lsls	r3, r3, #3
 8009c08:	4413      	add	r3, r2
 8009c0a:	009b      	lsls	r3, r3, #2
 8009c0c:	440b      	add	r3, r1
 8009c0e:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8009c12:	2200      	movs	r2, #0
 8009c14:	601a      	str	r2, [r3, #0]
 8009c16:	7bfa      	ldrb	r2, [r7, #15]
 8009c18:	6879      	ldr	r1, [r7, #4]
 8009c1a:	4613      	mov	r3, r2
 8009c1c:	00db      	lsls	r3, r3, #3
 8009c1e:	4413      	add	r3, r2
 8009c20:	009b      	lsls	r3, r3, #2
 8009c22:	440b      	add	r3, r1
 8009c24:	f503 7319 	add.w	r3, r3, #612	@ 0x264
 8009c28:	2200      	movs	r2, #0
 8009c2a:	601a      	str	r2, [r3, #0]
 8009c2c:	7bfb      	ldrb	r3, [r7, #15]
 8009c2e:	3301      	adds	r3, #1
 8009c30:	73fb      	strb	r3, [r7, #15]
 8009c32:	687b      	ldr	r3, [r7, #4]
 8009c34:	791b      	ldrb	r3, [r3, #4]
 8009c36:	7bfa      	ldrb	r2, [r7, #15]
 8009c38:	429a      	cmp	r2, r3
 8009c3a:	d3b5      	bcc.n	8009ba8 <HAL_PCD_Init+0x12e>
 8009c3c:	687b      	ldr	r3, [r7, #4]
 8009c3e:	6818      	ldr	r0, [r3, #0]
 8009c40:	687b      	ldr	r3, [r7, #4]
 8009c42:	7c1a      	ldrb	r2, [r3, #16]
 8009c44:	f88d 2000 	strb.w	r2, [sp]
 8009c48:	3304      	adds	r3, #4
 8009c4a:	cb0e      	ldmia	r3, {r1, r2, r3}
 8009c4c:	f008 f8b6 	bl	8011dbc <USB_DevInit>
 8009c50:	4603      	mov	r3, r0
 8009c52:	2b00      	cmp	r3, #0
 8009c54:	d005      	beq.n	8009c62 <HAL_PCD_Init+0x1e8>
 8009c56:	687b      	ldr	r3, [r7, #4]
 8009c58:	2202      	movs	r2, #2
 8009c5a:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8009c5e:	2301      	movs	r3, #1
 8009c60:	e013      	b.n	8009c8a <HAL_PCD_Init+0x210>
 8009c62:	687b      	ldr	r3, [r7, #4]
 8009c64:	2200      	movs	r2, #0
 8009c66:	745a      	strb	r2, [r3, #17]
 8009c68:	687b      	ldr	r3, [r7, #4]
 8009c6a:	2201      	movs	r2, #1
 8009c6c:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8009c70:	687b      	ldr	r3, [r7, #4]
 8009c72:	7b1b      	ldrb	r3, [r3, #12]
 8009c74:	2b01      	cmp	r3, #1
 8009c76:	d102      	bne.n	8009c7e <HAL_PCD_Init+0x204>
 8009c78:	6878      	ldr	r0, [r7, #4]
 8009c7a:	f001 f96d 	bl	800af58 <HAL_PCDEx_ActivateLPM>
 8009c7e:	687b      	ldr	r3, [r7, #4]
 8009c80:	681b      	ldr	r3, [r3, #0]
 8009c82:	4618      	mov	r0, r3
 8009c84:	f009 f8f5 	bl	8012e72 <USB_DevDisconnect>
 8009c88:	2300      	movs	r3, #0
 8009c8a:	4618      	mov	r0, r3
 8009c8c:	3710      	adds	r7, #16
 8009c8e:	46bd      	mov	sp, r7
 8009c90:	bd80      	pop	{r7, pc}

08009c92 <HAL_PCD_Start>:
 8009c92:	b580      	push	{r7, lr}
 8009c94:	b084      	sub	sp, #16
 8009c96:	af00      	add	r7, sp, #0
 8009c98:	6078      	str	r0, [r7, #4]
 8009c9a:	687b      	ldr	r3, [r7, #4]
 8009c9c:	681b      	ldr	r3, [r3, #0]
 8009c9e:	60fb      	str	r3, [r7, #12]
 8009ca0:	687b      	ldr	r3, [r7, #4]
 8009ca2:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 8009ca6:	2b01      	cmp	r3, #1
 8009ca8:	d101      	bne.n	8009cae <HAL_PCD_Start+0x1c>
 8009caa:	2302      	movs	r3, #2
 8009cac:	e022      	b.n	8009cf4 <HAL_PCD_Start+0x62>
 8009cae:	687b      	ldr	r3, [r7, #4]
 8009cb0:	2201      	movs	r2, #1
 8009cb2:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8009cb6:	68fb      	ldr	r3, [r7, #12]
 8009cb8:	68db      	ldr	r3, [r3, #12]
 8009cba:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009cbe:	2b00      	cmp	r3, #0
 8009cc0:	d009      	beq.n	8009cd6 <HAL_PCD_Start+0x44>
 8009cc2:	687b      	ldr	r3, [r7, #4]
 8009cc4:	7b5b      	ldrb	r3, [r3, #13]
 8009cc6:	2b01      	cmp	r3, #1
 8009cc8:	d105      	bne.n	8009cd6 <HAL_PCD_Start+0x44>
 8009cca:	68fb      	ldr	r3, [r7, #12]
 8009ccc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009cce:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 8009cd2:	68fb      	ldr	r3, [r7, #12]
 8009cd4:	639a      	str	r2, [r3, #56]	@ 0x38
 8009cd6:	687b      	ldr	r3, [r7, #4]
 8009cd8:	681b      	ldr	r3, [r3, #0]
 8009cda:	4618      	mov	r0, r3
 8009cdc:	f008 f800 	bl	8011ce0 <USB_EnableGlobalInt>
 8009ce0:	687b      	ldr	r3, [r7, #4]
 8009ce2:	681b      	ldr	r3, [r3, #0]
 8009ce4:	4618      	mov	r0, r3
 8009ce6:	f009 f8a3 	bl	8012e30 <USB_DevConnect>
 8009cea:	687b      	ldr	r3, [r7, #4]
 8009cec:	2200      	movs	r2, #0
 8009cee:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8009cf2:	2300      	movs	r3, #0
 8009cf4:	4618      	mov	r0, r3
 8009cf6:	3710      	adds	r7, #16
 8009cf8:	46bd      	mov	sp, r7
 8009cfa:	bd80      	pop	{r7, pc}

08009cfc <HAL_PCD_IRQHandler>:
 8009cfc:	b590      	push	{r4, r7, lr}
 8009cfe:	b08d      	sub	sp, #52	@ 0x34
 8009d00:	af00      	add	r7, sp, #0
 8009d02:	6078      	str	r0, [r7, #4]
 8009d04:	687b      	ldr	r3, [r7, #4]
 8009d06:	681b      	ldr	r3, [r3, #0]
 8009d08:	623b      	str	r3, [r7, #32]
 8009d0a:	6a3b      	ldr	r3, [r7, #32]
 8009d0c:	61fb      	str	r3, [r7, #28]
 8009d0e:	687b      	ldr	r3, [r7, #4]
 8009d10:	681b      	ldr	r3, [r3, #0]
 8009d12:	4618      	mov	r0, r3
 8009d14:	f009 f961 	bl	8012fda <USB_GetMode>
 8009d18:	4603      	mov	r3, r0
 8009d1a:	2b00      	cmp	r3, #0
 8009d1c:	f040 84b9 	bne.w	800a692 <HAL_PCD_IRQHandler+0x996>
 8009d20:	687b      	ldr	r3, [r7, #4]
 8009d22:	681b      	ldr	r3, [r3, #0]
 8009d24:	4618      	mov	r0, r3
 8009d26:	f009 f8c5 	bl	8012eb4 <USB_ReadInterrupts>
 8009d2a:	4603      	mov	r3, r0
 8009d2c:	2b00      	cmp	r3, #0
 8009d2e:	f000 84af 	beq.w	800a690 <HAL_PCD_IRQHandler+0x994>
 8009d32:	69fb      	ldr	r3, [r7, #28]
 8009d34:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8009d38:	689b      	ldr	r3, [r3, #8]
 8009d3a:	0a1b      	lsrs	r3, r3, #8
 8009d3c:	f3c3 020d 	ubfx	r2, r3, #0, #14
 8009d40:	687b      	ldr	r3, [r7, #4]
 8009d42:	f8c3 24d4 	str.w	r2, [r3, #1236]	@ 0x4d4
 8009d46:	687b      	ldr	r3, [r7, #4]
 8009d48:	681b      	ldr	r3, [r3, #0]
 8009d4a:	4618      	mov	r0, r3
 8009d4c:	f009 f8b2 	bl	8012eb4 <USB_ReadInterrupts>
 8009d50:	4603      	mov	r3, r0
 8009d52:	f003 0302 	and.w	r3, r3, #2
 8009d56:	2b02      	cmp	r3, #2
 8009d58:	d107      	bne.n	8009d6a <HAL_PCD_IRQHandler+0x6e>
 8009d5a:	687b      	ldr	r3, [r7, #4]
 8009d5c:	681b      	ldr	r3, [r3, #0]
 8009d5e:	695a      	ldr	r2, [r3, #20]
 8009d60:	687b      	ldr	r3, [r7, #4]
 8009d62:	681b      	ldr	r3, [r3, #0]
 8009d64:	f002 0202 	and.w	r2, r2, #2
 8009d68:	615a      	str	r2, [r3, #20]
 8009d6a:	687b      	ldr	r3, [r7, #4]
 8009d6c:	681b      	ldr	r3, [r3, #0]
 8009d6e:	4618      	mov	r0, r3
 8009d70:	f009 f8a0 	bl	8012eb4 <USB_ReadInterrupts>
 8009d74:	4603      	mov	r3, r0
 8009d76:	f003 0310 	and.w	r3, r3, #16
 8009d7a:	2b10      	cmp	r3, #16
 8009d7c:	d161      	bne.n	8009e42 <HAL_PCD_IRQHandler+0x146>
 8009d7e:	687b      	ldr	r3, [r7, #4]
 8009d80:	681b      	ldr	r3, [r3, #0]
 8009d82:	699a      	ldr	r2, [r3, #24]
 8009d84:	687b      	ldr	r3, [r7, #4]
 8009d86:	681b      	ldr	r3, [r3, #0]
 8009d88:	f022 0210 	bic.w	r2, r2, #16
 8009d8c:	619a      	str	r2, [r3, #24]
 8009d8e:	6a3b      	ldr	r3, [r7, #32]
 8009d90:	6a1b      	ldr	r3, [r3, #32]
 8009d92:	61bb      	str	r3, [r7, #24]
 8009d94:	69bb      	ldr	r3, [r7, #24]
 8009d96:	f003 020f 	and.w	r2, r3, #15
 8009d9a:	4613      	mov	r3, r2
 8009d9c:	00db      	lsls	r3, r3, #3
 8009d9e:	4413      	add	r3, r2
 8009da0:	009b      	lsls	r3, r3, #2
 8009da2:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 8009da6:	687a      	ldr	r2, [r7, #4]
 8009da8:	4413      	add	r3, r2
 8009daa:	3304      	adds	r3, #4
 8009dac:	617b      	str	r3, [r7, #20]
 8009dae:	69bb      	ldr	r3, [r7, #24]
 8009db0:	0c5b      	lsrs	r3, r3, #17
 8009db2:	f003 030f 	and.w	r3, r3, #15
 8009db6:	2b02      	cmp	r3, #2
 8009db8:	d124      	bne.n	8009e04 <HAL_PCD_IRQHandler+0x108>
 8009dba:	69ba      	ldr	r2, [r7, #24]
 8009dbc:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 8009dc0:	4013      	ands	r3, r2
 8009dc2:	2b00      	cmp	r3, #0
 8009dc4:	d035      	beq.n	8009e32 <HAL_PCD_IRQHandler+0x136>
 8009dc6:	697b      	ldr	r3, [r7, #20]
 8009dc8:	68d9      	ldr	r1, [r3, #12]
 8009dca:	69bb      	ldr	r3, [r7, #24]
 8009dcc:	091b      	lsrs	r3, r3, #4
 8009dce:	b29b      	uxth	r3, r3
 8009dd0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8009dd4:	b29b      	uxth	r3, r3
 8009dd6:	461a      	mov	r2, r3
 8009dd8:	6a38      	ldr	r0, [r7, #32]
 8009dda:	f008 fed7 	bl	8012b8c <USB_ReadPacket>
 8009dde:	697b      	ldr	r3, [r7, #20]
 8009de0:	68da      	ldr	r2, [r3, #12]
 8009de2:	69bb      	ldr	r3, [r7, #24]
 8009de4:	091b      	lsrs	r3, r3, #4
 8009de6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8009dea:	441a      	add	r2, r3
 8009dec:	697b      	ldr	r3, [r7, #20]
 8009dee:	60da      	str	r2, [r3, #12]
 8009df0:	697b      	ldr	r3, [r7, #20]
 8009df2:	695a      	ldr	r2, [r3, #20]
 8009df4:	69bb      	ldr	r3, [r7, #24]
 8009df6:	091b      	lsrs	r3, r3, #4
 8009df8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8009dfc:	441a      	add	r2, r3
 8009dfe:	697b      	ldr	r3, [r7, #20]
 8009e00:	615a      	str	r2, [r3, #20]
 8009e02:	e016      	b.n	8009e32 <HAL_PCD_IRQHandler+0x136>
 8009e04:	69bb      	ldr	r3, [r7, #24]
 8009e06:	0c5b      	lsrs	r3, r3, #17
 8009e08:	f003 030f 	and.w	r3, r3, #15
 8009e0c:	2b06      	cmp	r3, #6
 8009e0e:	d110      	bne.n	8009e32 <HAL_PCD_IRQHandler+0x136>
 8009e10:	687b      	ldr	r3, [r7, #4]
 8009e12:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 8009e16:	2208      	movs	r2, #8
 8009e18:	4619      	mov	r1, r3
 8009e1a:	6a38      	ldr	r0, [r7, #32]
 8009e1c:	f008 feb6 	bl	8012b8c <USB_ReadPacket>
 8009e20:	697b      	ldr	r3, [r7, #20]
 8009e22:	695a      	ldr	r2, [r3, #20]
 8009e24:	69bb      	ldr	r3, [r7, #24]
 8009e26:	091b      	lsrs	r3, r3, #4
 8009e28:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8009e2c:	441a      	add	r2, r3
 8009e2e:	697b      	ldr	r3, [r7, #20]
 8009e30:	615a      	str	r2, [r3, #20]
 8009e32:	687b      	ldr	r3, [r7, #4]
 8009e34:	681b      	ldr	r3, [r3, #0]
 8009e36:	699a      	ldr	r2, [r3, #24]
 8009e38:	687b      	ldr	r3, [r7, #4]
 8009e3a:	681b      	ldr	r3, [r3, #0]
 8009e3c:	f042 0210 	orr.w	r2, r2, #16
 8009e40:	619a      	str	r2, [r3, #24]
 8009e42:	687b      	ldr	r3, [r7, #4]
 8009e44:	681b      	ldr	r3, [r3, #0]
 8009e46:	4618      	mov	r0, r3
 8009e48:	f009 f834 	bl	8012eb4 <USB_ReadInterrupts>
 8009e4c:	4603      	mov	r3, r0
 8009e4e:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8009e52:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8009e56:	f040 80a7 	bne.w	8009fa8 <HAL_PCD_IRQHandler+0x2ac>
 8009e5a:	2300      	movs	r3, #0
 8009e5c:	627b      	str	r3, [r7, #36]	@ 0x24
 8009e5e:	687b      	ldr	r3, [r7, #4]
 8009e60:	681b      	ldr	r3, [r3, #0]
 8009e62:	4618      	mov	r0, r3
 8009e64:	f009 f839 	bl	8012eda <USB_ReadDevAllOutEpInterrupt>
 8009e68:	62b8      	str	r0, [r7, #40]	@ 0x28
 8009e6a:	e099      	b.n	8009fa0 <HAL_PCD_IRQHandler+0x2a4>
 8009e6c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009e6e:	f003 0301 	and.w	r3, r3, #1
 8009e72:	2b00      	cmp	r3, #0
 8009e74:	f000 808e 	beq.w	8009f94 <HAL_PCD_IRQHandler+0x298>
 8009e78:	687b      	ldr	r3, [r7, #4]
 8009e7a:	681b      	ldr	r3, [r3, #0]
 8009e7c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8009e7e:	b2d2      	uxtb	r2, r2
 8009e80:	4611      	mov	r1, r2
 8009e82:	4618      	mov	r0, r3
 8009e84:	f009 f85d 	bl	8012f42 <USB_ReadDevOutEPInterrupt>
 8009e88:	6138      	str	r0, [r7, #16]
 8009e8a:	693b      	ldr	r3, [r7, #16]
 8009e8c:	f003 0301 	and.w	r3, r3, #1
 8009e90:	2b00      	cmp	r3, #0
 8009e92:	d00c      	beq.n	8009eae <HAL_PCD_IRQHandler+0x1b2>
 8009e94:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009e96:	015a      	lsls	r2, r3, #5
 8009e98:	69fb      	ldr	r3, [r7, #28]
 8009e9a:	4413      	add	r3, r2
 8009e9c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8009ea0:	461a      	mov	r2, r3
 8009ea2:	2301      	movs	r3, #1
 8009ea4:	6093      	str	r3, [r2, #8]
 8009ea6:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8009ea8:	6878      	ldr	r0, [r7, #4]
 8009eaa:	f000 fecf 	bl	800ac4c <PCD_EP_OutXfrComplete_int>
 8009eae:	693b      	ldr	r3, [r7, #16]
 8009eb0:	f003 0308 	and.w	r3, r3, #8
 8009eb4:	2b00      	cmp	r3, #0
 8009eb6:	d00c      	beq.n	8009ed2 <HAL_PCD_IRQHandler+0x1d6>
 8009eb8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009eba:	015a      	lsls	r2, r3, #5
 8009ebc:	69fb      	ldr	r3, [r7, #28]
 8009ebe:	4413      	add	r3, r2
 8009ec0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8009ec4:	461a      	mov	r2, r3
 8009ec6:	2308      	movs	r3, #8
 8009ec8:	6093      	str	r3, [r2, #8]
 8009eca:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8009ecc:	6878      	ldr	r0, [r7, #4]
 8009ece:	f000 ffa5 	bl	800ae1c <PCD_EP_OutSetupPacket_int>
 8009ed2:	693b      	ldr	r3, [r7, #16]
 8009ed4:	f003 0310 	and.w	r3, r3, #16
 8009ed8:	2b00      	cmp	r3, #0
 8009eda:	d008      	beq.n	8009eee <HAL_PCD_IRQHandler+0x1f2>
 8009edc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009ede:	015a      	lsls	r2, r3, #5
 8009ee0:	69fb      	ldr	r3, [r7, #28]
 8009ee2:	4413      	add	r3, r2
 8009ee4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8009ee8:	461a      	mov	r2, r3
 8009eea:	2310      	movs	r3, #16
 8009eec:	6093      	str	r3, [r2, #8]
 8009eee:	693b      	ldr	r3, [r7, #16]
 8009ef0:	f003 0302 	and.w	r3, r3, #2
 8009ef4:	2b00      	cmp	r3, #0
 8009ef6:	d030      	beq.n	8009f5a <HAL_PCD_IRQHandler+0x25e>
 8009ef8:	6a3b      	ldr	r3, [r7, #32]
 8009efa:	695b      	ldr	r3, [r3, #20]
 8009efc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8009f00:	2b80      	cmp	r3, #128	@ 0x80
 8009f02:	d109      	bne.n	8009f18 <HAL_PCD_IRQHandler+0x21c>
 8009f04:	69fb      	ldr	r3, [r7, #28]
 8009f06:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8009f0a:	685b      	ldr	r3, [r3, #4]
 8009f0c:	69fa      	ldr	r2, [r7, #28]
 8009f0e:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8009f12:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8009f16:	6053      	str	r3, [r2, #4]
 8009f18:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8009f1a:	4613      	mov	r3, r2
 8009f1c:	00db      	lsls	r3, r3, #3
 8009f1e:	4413      	add	r3, r2
 8009f20:	009b      	lsls	r3, r3, #2
 8009f22:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 8009f26:	687a      	ldr	r2, [r7, #4]
 8009f28:	4413      	add	r3, r2
 8009f2a:	3304      	adds	r3, #4
 8009f2c:	617b      	str	r3, [r7, #20]
 8009f2e:	697b      	ldr	r3, [r7, #20]
 8009f30:	78db      	ldrb	r3, [r3, #3]
 8009f32:	2b01      	cmp	r3, #1
 8009f34:	d108      	bne.n	8009f48 <HAL_PCD_IRQHandler+0x24c>
 8009f36:	697b      	ldr	r3, [r7, #20]
 8009f38:	2200      	movs	r2, #0
 8009f3a:	70da      	strb	r2, [r3, #3]
 8009f3c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009f3e:	b2db      	uxtb	r3, r3
 8009f40:	4619      	mov	r1, r3
 8009f42:	6878      	ldr	r0, [r7, #4]
 8009f44:	f00b fc10 	bl	8015768 <HAL_PCD_ISOOUTIncompleteCallback>
 8009f48:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009f4a:	015a      	lsls	r2, r3, #5
 8009f4c:	69fb      	ldr	r3, [r7, #28]
 8009f4e:	4413      	add	r3, r2
 8009f50:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8009f54:	461a      	mov	r2, r3
 8009f56:	2302      	movs	r3, #2
 8009f58:	6093      	str	r3, [r2, #8]
 8009f5a:	693b      	ldr	r3, [r7, #16]
 8009f5c:	f003 0320 	and.w	r3, r3, #32
 8009f60:	2b00      	cmp	r3, #0
 8009f62:	d008      	beq.n	8009f76 <HAL_PCD_IRQHandler+0x27a>
 8009f64:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009f66:	015a      	lsls	r2, r3, #5
 8009f68:	69fb      	ldr	r3, [r7, #28]
 8009f6a:	4413      	add	r3, r2
 8009f6c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8009f70:	461a      	mov	r2, r3
 8009f72:	2320      	movs	r3, #32
 8009f74:	6093      	str	r3, [r2, #8]
 8009f76:	693b      	ldr	r3, [r7, #16]
 8009f78:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8009f7c:	2b00      	cmp	r3, #0
 8009f7e:	d009      	beq.n	8009f94 <HAL_PCD_IRQHandler+0x298>
 8009f80:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009f82:	015a      	lsls	r2, r3, #5
 8009f84:	69fb      	ldr	r3, [r7, #28]
 8009f86:	4413      	add	r3, r2
 8009f88:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8009f8c:	461a      	mov	r2, r3
 8009f8e:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8009f92:	6093      	str	r3, [r2, #8]
 8009f94:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009f96:	3301      	adds	r3, #1
 8009f98:	627b      	str	r3, [r7, #36]	@ 0x24
 8009f9a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009f9c:	085b      	lsrs	r3, r3, #1
 8009f9e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009fa0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009fa2:	2b00      	cmp	r3, #0
 8009fa4:	f47f af62 	bne.w	8009e6c <HAL_PCD_IRQHandler+0x170>
 8009fa8:	687b      	ldr	r3, [r7, #4]
 8009faa:	681b      	ldr	r3, [r3, #0]
 8009fac:	4618      	mov	r0, r3
 8009fae:	f008 ff81 	bl	8012eb4 <USB_ReadInterrupts>
 8009fb2:	4603      	mov	r3, r0
 8009fb4:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8009fb8:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8009fbc:	f040 80db 	bne.w	800a176 <HAL_PCD_IRQHandler+0x47a>
 8009fc0:	687b      	ldr	r3, [r7, #4]
 8009fc2:	681b      	ldr	r3, [r3, #0]
 8009fc4:	4618      	mov	r0, r3
 8009fc6:	f008 ffa2 	bl	8012f0e <USB_ReadDevAllInEpInterrupt>
 8009fca:	62b8      	str	r0, [r7, #40]	@ 0x28
 8009fcc:	2300      	movs	r3, #0
 8009fce:	627b      	str	r3, [r7, #36]	@ 0x24
 8009fd0:	e0cd      	b.n	800a16e <HAL_PCD_IRQHandler+0x472>
 8009fd2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009fd4:	f003 0301 	and.w	r3, r3, #1
 8009fd8:	2b00      	cmp	r3, #0
 8009fda:	f000 80c2 	beq.w	800a162 <HAL_PCD_IRQHandler+0x466>
 8009fde:	687b      	ldr	r3, [r7, #4]
 8009fe0:	681b      	ldr	r3, [r3, #0]
 8009fe2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8009fe4:	b2d2      	uxtb	r2, r2
 8009fe6:	4611      	mov	r1, r2
 8009fe8:	4618      	mov	r0, r3
 8009fea:	f008 ffc8 	bl	8012f7e <USB_ReadDevInEPInterrupt>
 8009fee:	6138      	str	r0, [r7, #16]
 8009ff0:	693b      	ldr	r3, [r7, #16]
 8009ff2:	f003 0301 	and.w	r3, r3, #1
 8009ff6:	2b00      	cmp	r3, #0
 8009ff8:	d057      	beq.n	800a0aa <HAL_PCD_IRQHandler+0x3ae>
 8009ffa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009ffc:	f003 030f 	and.w	r3, r3, #15
 800a000:	2201      	movs	r2, #1
 800a002:	fa02 f303 	lsl.w	r3, r2, r3
 800a006:	60fb      	str	r3, [r7, #12]
 800a008:	69fb      	ldr	r3, [r7, #28]
 800a00a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a00e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800a010:	68fb      	ldr	r3, [r7, #12]
 800a012:	43db      	mvns	r3, r3
 800a014:	69f9      	ldr	r1, [r7, #28]
 800a016:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800a01a:	4013      	ands	r3, r2
 800a01c:	634b      	str	r3, [r1, #52]	@ 0x34
 800a01e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a020:	015a      	lsls	r2, r3, #5
 800a022:	69fb      	ldr	r3, [r7, #28]
 800a024:	4413      	add	r3, r2
 800a026:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800a02a:	461a      	mov	r2, r3
 800a02c:	2301      	movs	r3, #1
 800a02e:	6093      	str	r3, [r2, #8]
 800a030:	687b      	ldr	r3, [r7, #4]
 800a032:	799b      	ldrb	r3, [r3, #6]
 800a034:	2b01      	cmp	r3, #1
 800a036:	d132      	bne.n	800a09e <HAL_PCD_IRQHandler+0x3a2>
 800a038:	6879      	ldr	r1, [r7, #4]
 800a03a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a03c:	4613      	mov	r3, r2
 800a03e:	00db      	lsls	r3, r3, #3
 800a040:	4413      	add	r3, r2
 800a042:	009b      	lsls	r3, r3, #2
 800a044:	440b      	add	r3, r1
 800a046:	3320      	adds	r3, #32
 800a048:	6819      	ldr	r1, [r3, #0]
 800a04a:	6878      	ldr	r0, [r7, #4]
 800a04c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a04e:	4613      	mov	r3, r2
 800a050:	00db      	lsls	r3, r3, #3
 800a052:	4413      	add	r3, r2
 800a054:	009b      	lsls	r3, r3, #2
 800a056:	4403      	add	r3, r0
 800a058:	331c      	adds	r3, #28
 800a05a:	681b      	ldr	r3, [r3, #0]
 800a05c:	4419      	add	r1, r3
 800a05e:	6878      	ldr	r0, [r7, #4]
 800a060:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a062:	4613      	mov	r3, r2
 800a064:	00db      	lsls	r3, r3, #3
 800a066:	4413      	add	r3, r2
 800a068:	009b      	lsls	r3, r3, #2
 800a06a:	4403      	add	r3, r0
 800a06c:	3320      	adds	r3, #32
 800a06e:	6019      	str	r1, [r3, #0]
 800a070:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a072:	2b00      	cmp	r3, #0
 800a074:	d113      	bne.n	800a09e <HAL_PCD_IRQHandler+0x3a2>
 800a076:	6879      	ldr	r1, [r7, #4]
 800a078:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a07a:	4613      	mov	r3, r2
 800a07c:	00db      	lsls	r3, r3, #3
 800a07e:	4413      	add	r3, r2
 800a080:	009b      	lsls	r3, r3, #2
 800a082:	440b      	add	r3, r1
 800a084:	3324      	adds	r3, #36	@ 0x24
 800a086:	681b      	ldr	r3, [r3, #0]
 800a088:	2b00      	cmp	r3, #0
 800a08a:	d108      	bne.n	800a09e <HAL_PCD_IRQHandler+0x3a2>
 800a08c:	687b      	ldr	r3, [r7, #4]
 800a08e:	6818      	ldr	r0, [r3, #0]
 800a090:	687b      	ldr	r3, [r7, #4]
 800a092:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 800a096:	461a      	mov	r2, r3
 800a098:	2101      	movs	r1, #1
 800a09a:	f008 ffd1 	bl	8013040 <USB_EP0_OutStart>
 800a09e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a0a0:	b2db      	uxtb	r3, r3
 800a0a2:	4619      	mov	r1, r3
 800a0a4:	6878      	ldr	r0, [r7, #4]
 800a0a6:	f00b fada 	bl	801565e <HAL_PCD_DataInStageCallback>
 800a0aa:	693b      	ldr	r3, [r7, #16]
 800a0ac:	f003 0308 	and.w	r3, r3, #8
 800a0b0:	2b00      	cmp	r3, #0
 800a0b2:	d008      	beq.n	800a0c6 <HAL_PCD_IRQHandler+0x3ca>
 800a0b4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a0b6:	015a      	lsls	r2, r3, #5
 800a0b8:	69fb      	ldr	r3, [r7, #28]
 800a0ba:	4413      	add	r3, r2
 800a0bc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800a0c0:	461a      	mov	r2, r3
 800a0c2:	2308      	movs	r3, #8
 800a0c4:	6093      	str	r3, [r2, #8]
 800a0c6:	693b      	ldr	r3, [r7, #16]
 800a0c8:	f003 0310 	and.w	r3, r3, #16
 800a0cc:	2b00      	cmp	r3, #0
 800a0ce:	d008      	beq.n	800a0e2 <HAL_PCD_IRQHandler+0x3e6>
 800a0d0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a0d2:	015a      	lsls	r2, r3, #5
 800a0d4:	69fb      	ldr	r3, [r7, #28]
 800a0d6:	4413      	add	r3, r2
 800a0d8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800a0dc:	461a      	mov	r2, r3
 800a0de:	2310      	movs	r3, #16
 800a0e0:	6093      	str	r3, [r2, #8]
 800a0e2:	693b      	ldr	r3, [r7, #16]
 800a0e4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a0e8:	2b00      	cmp	r3, #0
 800a0ea:	d008      	beq.n	800a0fe <HAL_PCD_IRQHandler+0x402>
 800a0ec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a0ee:	015a      	lsls	r2, r3, #5
 800a0f0:	69fb      	ldr	r3, [r7, #28]
 800a0f2:	4413      	add	r3, r2
 800a0f4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800a0f8:	461a      	mov	r2, r3
 800a0fa:	2340      	movs	r3, #64	@ 0x40
 800a0fc:	6093      	str	r3, [r2, #8]
 800a0fe:	693b      	ldr	r3, [r7, #16]
 800a100:	f003 0302 	and.w	r3, r3, #2
 800a104:	2b00      	cmp	r3, #0
 800a106:	d023      	beq.n	800a150 <HAL_PCD_IRQHandler+0x454>
 800a108:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800a10a:	6a38      	ldr	r0, [r7, #32]
 800a10c:	f007 ffb4 	bl	8012078 <USB_FlushTxFifo>
 800a110:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a112:	4613      	mov	r3, r2
 800a114:	00db      	lsls	r3, r3, #3
 800a116:	4413      	add	r3, r2
 800a118:	009b      	lsls	r3, r3, #2
 800a11a:	3310      	adds	r3, #16
 800a11c:	687a      	ldr	r2, [r7, #4]
 800a11e:	4413      	add	r3, r2
 800a120:	3304      	adds	r3, #4
 800a122:	617b      	str	r3, [r7, #20]
 800a124:	697b      	ldr	r3, [r7, #20]
 800a126:	78db      	ldrb	r3, [r3, #3]
 800a128:	2b01      	cmp	r3, #1
 800a12a:	d108      	bne.n	800a13e <HAL_PCD_IRQHandler+0x442>
 800a12c:	697b      	ldr	r3, [r7, #20]
 800a12e:	2200      	movs	r2, #0
 800a130:	70da      	strb	r2, [r3, #3]
 800a132:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a134:	b2db      	uxtb	r3, r3
 800a136:	4619      	mov	r1, r3
 800a138:	6878      	ldr	r0, [r7, #4]
 800a13a:	f00b fb27 	bl	801578c <HAL_PCD_ISOINIncompleteCallback>
 800a13e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a140:	015a      	lsls	r2, r3, #5
 800a142:	69fb      	ldr	r3, [r7, #28]
 800a144:	4413      	add	r3, r2
 800a146:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800a14a:	461a      	mov	r2, r3
 800a14c:	2302      	movs	r3, #2
 800a14e:	6093      	str	r3, [r2, #8]
 800a150:	693b      	ldr	r3, [r7, #16]
 800a152:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a156:	2b00      	cmp	r3, #0
 800a158:	d003      	beq.n	800a162 <HAL_PCD_IRQHandler+0x466>
 800a15a:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800a15c:	6878      	ldr	r0, [r7, #4]
 800a15e:	f000 fce8 	bl	800ab32 <PCD_WriteEmptyTxFifo>
 800a162:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a164:	3301      	adds	r3, #1
 800a166:	627b      	str	r3, [r7, #36]	@ 0x24
 800a168:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a16a:	085b      	lsrs	r3, r3, #1
 800a16c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a16e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a170:	2b00      	cmp	r3, #0
 800a172:	f47f af2e 	bne.w	8009fd2 <HAL_PCD_IRQHandler+0x2d6>
 800a176:	687b      	ldr	r3, [r7, #4]
 800a178:	681b      	ldr	r3, [r3, #0]
 800a17a:	4618      	mov	r0, r3
 800a17c:	f008 fe9a 	bl	8012eb4 <USB_ReadInterrupts>
 800a180:	4603      	mov	r3, r0
 800a182:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800a186:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800a18a:	d122      	bne.n	800a1d2 <HAL_PCD_IRQHandler+0x4d6>
 800a18c:	69fb      	ldr	r3, [r7, #28]
 800a18e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a192:	685b      	ldr	r3, [r3, #4]
 800a194:	69fa      	ldr	r2, [r7, #28]
 800a196:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800a19a:	f023 0301 	bic.w	r3, r3, #1
 800a19e:	6053      	str	r3, [r2, #4]
 800a1a0:	687b      	ldr	r3, [r7, #4]
 800a1a2:	f893 34cc 	ldrb.w	r3, [r3, #1228]	@ 0x4cc
 800a1a6:	2b01      	cmp	r3, #1
 800a1a8:	d108      	bne.n	800a1bc <HAL_PCD_IRQHandler+0x4c0>
 800a1aa:	687b      	ldr	r3, [r7, #4]
 800a1ac:	2200      	movs	r2, #0
 800a1ae:	f883 24cc 	strb.w	r2, [r3, #1228]	@ 0x4cc
 800a1b2:	2100      	movs	r1, #0
 800a1b4:	6878      	ldr	r0, [r7, #4]
 800a1b6:	f000 fef3 	bl	800afa0 <HAL_PCDEx_LPM_Callback>
 800a1ba:	e002      	b.n	800a1c2 <HAL_PCD_IRQHandler+0x4c6>
 800a1bc:	6878      	ldr	r0, [r7, #4]
 800a1be:	f00b fac5 	bl	801574c <HAL_PCD_ResumeCallback>
 800a1c2:	687b      	ldr	r3, [r7, #4]
 800a1c4:	681b      	ldr	r3, [r3, #0]
 800a1c6:	695a      	ldr	r2, [r3, #20]
 800a1c8:	687b      	ldr	r3, [r7, #4]
 800a1ca:	681b      	ldr	r3, [r3, #0]
 800a1cc:	f002 4200 	and.w	r2, r2, #2147483648	@ 0x80000000
 800a1d0:	615a      	str	r2, [r3, #20]
 800a1d2:	687b      	ldr	r3, [r7, #4]
 800a1d4:	681b      	ldr	r3, [r3, #0]
 800a1d6:	4618      	mov	r0, r3
 800a1d8:	f008 fe6c 	bl	8012eb4 <USB_ReadInterrupts>
 800a1dc:	4603      	mov	r3, r0
 800a1de:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800a1e2:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800a1e6:	d112      	bne.n	800a20e <HAL_PCD_IRQHandler+0x512>
 800a1e8:	69fb      	ldr	r3, [r7, #28]
 800a1ea:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a1ee:	689b      	ldr	r3, [r3, #8]
 800a1f0:	f003 0301 	and.w	r3, r3, #1
 800a1f4:	2b01      	cmp	r3, #1
 800a1f6:	d102      	bne.n	800a1fe <HAL_PCD_IRQHandler+0x502>
 800a1f8:	6878      	ldr	r0, [r7, #4]
 800a1fa:	f00b fa81 	bl	8015700 <HAL_PCD_SuspendCallback>
 800a1fe:	687b      	ldr	r3, [r7, #4]
 800a200:	681b      	ldr	r3, [r3, #0]
 800a202:	695a      	ldr	r2, [r3, #20]
 800a204:	687b      	ldr	r3, [r7, #4]
 800a206:	681b      	ldr	r3, [r3, #0]
 800a208:	f402 6200 	and.w	r2, r2, #2048	@ 0x800
 800a20c:	615a      	str	r2, [r3, #20]
 800a20e:	687b      	ldr	r3, [r7, #4]
 800a210:	681b      	ldr	r3, [r3, #0]
 800a212:	4618      	mov	r0, r3
 800a214:	f008 fe4e 	bl	8012eb4 <USB_ReadInterrupts>
 800a218:	4603      	mov	r3, r0
 800a21a:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800a21e:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800a222:	d121      	bne.n	800a268 <HAL_PCD_IRQHandler+0x56c>
 800a224:	687b      	ldr	r3, [r7, #4]
 800a226:	681b      	ldr	r3, [r3, #0]
 800a228:	695a      	ldr	r2, [r3, #20]
 800a22a:	687b      	ldr	r3, [r7, #4]
 800a22c:	681b      	ldr	r3, [r3, #0]
 800a22e:	f002 6200 	and.w	r2, r2, #134217728	@ 0x8000000
 800a232:	615a      	str	r2, [r3, #20]
 800a234:	687b      	ldr	r3, [r7, #4]
 800a236:	f893 34cc 	ldrb.w	r3, [r3, #1228]	@ 0x4cc
 800a23a:	2b00      	cmp	r3, #0
 800a23c:	d111      	bne.n	800a262 <HAL_PCD_IRQHandler+0x566>
 800a23e:	687b      	ldr	r3, [r7, #4]
 800a240:	2201      	movs	r2, #1
 800a242:	f883 24cc 	strb.w	r2, [r3, #1228]	@ 0x4cc
 800a246:	687b      	ldr	r3, [r7, #4]
 800a248:	681b      	ldr	r3, [r3, #0]
 800a24a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a24c:	089b      	lsrs	r3, r3, #2
 800a24e:	f003 020f 	and.w	r2, r3, #15
 800a252:	687b      	ldr	r3, [r7, #4]
 800a254:	f8c3 24d0 	str.w	r2, [r3, #1232]	@ 0x4d0
 800a258:	2101      	movs	r1, #1
 800a25a:	6878      	ldr	r0, [r7, #4]
 800a25c:	f000 fea0 	bl	800afa0 <HAL_PCDEx_LPM_Callback>
 800a260:	e002      	b.n	800a268 <HAL_PCD_IRQHandler+0x56c>
 800a262:	6878      	ldr	r0, [r7, #4]
 800a264:	f00b fa4c 	bl	8015700 <HAL_PCD_SuspendCallback>
 800a268:	687b      	ldr	r3, [r7, #4]
 800a26a:	681b      	ldr	r3, [r3, #0]
 800a26c:	4618      	mov	r0, r3
 800a26e:	f008 fe21 	bl	8012eb4 <USB_ReadInterrupts>
 800a272:	4603      	mov	r3, r0
 800a274:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800a278:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800a27c:	f040 80b7 	bne.w	800a3ee <HAL_PCD_IRQHandler+0x6f2>
 800a280:	69fb      	ldr	r3, [r7, #28]
 800a282:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a286:	685b      	ldr	r3, [r3, #4]
 800a288:	69fa      	ldr	r2, [r7, #28]
 800a28a:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800a28e:	f023 0301 	bic.w	r3, r3, #1
 800a292:	6053      	str	r3, [r2, #4]
 800a294:	687b      	ldr	r3, [r7, #4]
 800a296:	681b      	ldr	r3, [r3, #0]
 800a298:	2110      	movs	r1, #16
 800a29a:	4618      	mov	r0, r3
 800a29c:	f007 feec 	bl	8012078 <USB_FlushTxFifo>
 800a2a0:	2300      	movs	r3, #0
 800a2a2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a2a4:	e046      	b.n	800a334 <HAL_PCD_IRQHandler+0x638>
 800a2a6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2a8:	015a      	lsls	r2, r3, #5
 800a2aa:	69fb      	ldr	r3, [r7, #28]
 800a2ac:	4413      	add	r3, r2
 800a2ae:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800a2b2:	461a      	mov	r2, r3
 800a2b4:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 800a2b8:	6093      	str	r3, [r2, #8]
 800a2ba:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2bc:	015a      	lsls	r2, r3, #5
 800a2be:	69fb      	ldr	r3, [r7, #28]
 800a2c0:	4413      	add	r3, r2
 800a2c2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800a2c6:	681b      	ldr	r3, [r3, #0]
 800a2c8:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a2ca:	0151      	lsls	r1, r2, #5
 800a2cc:	69fa      	ldr	r2, [r7, #28]
 800a2ce:	440a      	add	r2, r1
 800a2d0:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800a2d4:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800a2d8:	6013      	str	r3, [r2, #0]
 800a2da:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2dc:	015a      	lsls	r2, r3, #5
 800a2de:	69fb      	ldr	r3, [r7, #28]
 800a2e0:	4413      	add	r3, r2
 800a2e2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800a2e6:	461a      	mov	r2, r3
 800a2e8:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 800a2ec:	6093      	str	r3, [r2, #8]
 800a2ee:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a2f0:	015a      	lsls	r2, r3, #5
 800a2f2:	69fb      	ldr	r3, [r7, #28]
 800a2f4:	4413      	add	r3, r2
 800a2f6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800a2fa:	681b      	ldr	r3, [r3, #0]
 800a2fc:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a2fe:	0151      	lsls	r1, r2, #5
 800a300:	69fa      	ldr	r2, [r7, #28]
 800a302:	440a      	add	r2, r1
 800a304:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800a308:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800a30c:	6013      	str	r3, [r2, #0]
 800a30e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a310:	015a      	lsls	r2, r3, #5
 800a312:	69fb      	ldr	r3, [r7, #28]
 800a314:	4413      	add	r3, r2
 800a316:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800a31a:	681b      	ldr	r3, [r3, #0]
 800a31c:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a31e:	0151      	lsls	r1, r2, #5
 800a320:	69fa      	ldr	r2, [r7, #28]
 800a322:	440a      	add	r2, r1
 800a324:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800a328:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 800a32c:	6013      	str	r3, [r2, #0]
 800a32e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a330:	3301      	adds	r3, #1
 800a332:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a334:	687b      	ldr	r3, [r7, #4]
 800a336:	791b      	ldrb	r3, [r3, #4]
 800a338:	461a      	mov	r2, r3
 800a33a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a33c:	4293      	cmp	r3, r2
 800a33e:	d3b2      	bcc.n	800a2a6 <HAL_PCD_IRQHandler+0x5aa>
 800a340:	69fb      	ldr	r3, [r7, #28]
 800a342:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a346:	69db      	ldr	r3, [r3, #28]
 800a348:	69fa      	ldr	r2, [r7, #28]
 800a34a:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800a34e:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 800a352:	61d3      	str	r3, [r2, #28]
 800a354:	687b      	ldr	r3, [r7, #4]
 800a356:	7bdb      	ldrb	r3, [r3, #15]
 800a358:	2b00      	cmp	r3, #0
 800a35a:	d016      	beq.n	800a38a <HAL_PCD_IRQHandler+0x68e>
 800a35c:	69fb      	ldr	r3, [r7, #28]
 800a35e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a362:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800a366:	69fa      	ldr	r2, [r7, #28]
 800a368:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800a36c:	f043 030b 	orr.w	r3, r3, #11
 800a370:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
 800a374:	69fb      	ldr	r3, [r7, #28]
 800a376:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a37a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800a37c:	69fa      	ldr	r2, [r7, #28]
 800a37e:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800a382:	f043 030b 	orr.w	r3, r3, #11
 800a386:	6453      	str	r3, [r2, #68]	@ 0x44
 800a388:	e015      	b.n	800a3b6 <HAL_PCD_IRQHandler+0x6ba>
 800a38a:	69fb      	ldr	r3, [r7, #28]
 800a38c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a390:	695a      	ldr	r2, [r3, #20]
 800a392:	69fb      	ldr	r3, [r7, #28]
 800a394:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a398:	4619      	mov	r1, r3
 800a39a:	f242 032b 	movw	r3, #8235	@ 0x202b
 800a39e:	4313      	orrs	r3, r2
 800a3a0:	614b      	str	r3, [r1, #20]
 800a3a2:	69fb      	ldr	r3, [r7, #28]
 800a3a4:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a3a8:	691b      	ldr	r3, [r3, #16]
 800a3aa:	69fa      	ldr	r2, [r7, #28]
 800a3ac:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800a3b0:	f043 030b 	orr.w	r3, r3, #11
 800a3b4:	6113      	str	r3, [r2, #16]
 800a3b6:	69fb      	ldr	r3, [r7, #28]
 800a3b8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a3bc:	681b      	ldr	r3, [r3, #0]
 800a3be:	69fa      	ldr	r2, [r7, #28]
 800a3c0:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800a3c4:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 800a3c8:	6013      	str	r3, [r2, #0]
 800a3ca:	687b      	ldr	r3, [r7, #4]
 800a3cc:	6818      	ldr	r0, [r3, #0]
 800a3ce:	687b      	ldr	r3, [r7, #4]
 800a3d0:	7999      	ldrb	r1, [r3, #6]
 800a3d2:	687b      	ldr	r3, [r7, #4]
 800a3d4:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 800a3d8:	461a      	mov	r2, r3
 800a3da:	f008 fe31 	bl	8013040 <USB_EP0_OutStart>
 800a3de:	687b      	ldr	r3, [r7, #4]
 800a3e0:	681b      	ldr	r3, [r3, #0]
 800a3e2:	695a      	ldr	r2, [r3, #20]
 800a3e4:	687b      	ldr	r3, [r7, #4]
 800a3e6:	681b      	ldr	r3, [r3, #0]
 800a3e8:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
 800a3ec:	615a      	str	r2, [r3, #20]
 800a3ee:	687b      	ldr	r3, [r7, #4]
 800a3f0:	681b      	ldr	r3, [r3, #0]
 800a3f2:	4618      	mov	r0, r3
 800a3f4:	f008 fd5e 	bl	8012eb4 <USB_ReadInterrupts>
 800a3f8:	4603      	mov	r3, r0
 800a3fa:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800a3fe:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800a402:	d123      	bne.n	800a44c <HAL_PCD_IRQHandler+0x750>
 800a404:	687b      	ldr	r3, [r7, #4]
 800a406:	681b      	ldr	r3, [r3, #0]
 800a408:	4618      	mov	r0, r3
 800a40a:	f008 fdf5 	bl	8012ff8 <USB_ActivateSetup>
 800a40e:	687b      	ldr	r3, [r7, #4]
 800a410:	681b      	ldr	r3, [r3, #0]
 800a412:	4618      	mov	r0, r3
 800a414:	f007 fea9 	bl	801216a <USB_GetDevSpeed>
 800a418:	4603      	mov	r3, r0
 800a41a:	461a      	mov	r2, r3
 800a41c:	687b      	ldr	r3, [r7, #4]
 800a41e:	71da      	strb	r2, [r3, #7]
 800a420:	687b      	ldr	r3, [r7, #4]
 800a422:	681c      	ldr	r4, [r3, #0]
 800a424:	f001 fd1c 	bl	800be60 <HAL_RCC_GetHCLKFreq>
 800a428:	4601      	mov	r1, r0
 800a42a:	687b      	ldr	r3, [r7, #4]
 800a42c:	79db      	ldrb	r3, [r3, #7]
 800a42e:	461a      	mov	r2, r3
 800a430:	4620      	mov	r0, r4
 800a432:	f007 fbb3 	bl	8011b9c <USB_SetTurnaroundTime>
 800a436:	6878      	ldr	r0, [r7, #4]
 800a438:	f00b f939 	bl	80156ae <HAL_PCD_ResetCallback>
 800a43c:	687b      	ldr	r3, [r7, #4]
 800a43e:	681b      	ldr	r3, [r3, #0]
 800a440:	695a      	ldr	r2, [r3, #20]
 800a442:	687b      	ldr	r3, [r7, #4]
 800a444:	681b      	ldr	r3, [r3, #0]
 800a446:	f402 5200 	and.w	r2, r2, #8192	@ 0x2000
 800a44a:	615a      	str	r2, [r3, #20]
 800a44c:	687b      	ldr	r3, [r7, #4]
 800a44e:	681b      	ldr	r3, [r3, #0]
 800a450:	4618      	mov	r0, r3
 800a452:	f008 fd2f 	bl	8012eb4 <USB_ReadInterrupts>
 800a456:	4603      	mov	r3, r0
 800a458:	f003 0308 	and.w	r3, r3, #8
 800a45c:	2b08      	cmp	r3, #8
 800a45e:	d10a      	bne.n	800a476 <HAL_PCD_IRQHandler+0x77a>
 800a460:	6878      	ldr	r0, [r7, #4]
 800a462:	f00b f916 	bl	8015692 <HAL_PCD_SOFCallback>
 800a466:	687b      	ldr	r3, [r7, #4]
 800a468:	681b      	ldr	r3, [r3, #0]
 800a46a:	695a      	ldr	r2, [r3, #20]
 800a46c:	687b      	ldr	r3, [r7, #4]
 800a46e:	681b      	ldr	r3, [r3, #0]
 800a470:	f002 0208 	and.w	r2, r2, #8
 800a474:	615a      	str	r2, [r3, #20]
 800a476:	687b      	ldr	r3, [r7, #4]
 800a478:	681b      	ldr	r3, [r3, #0]
 800a47a:	4618      	mov	r0, r3
 800a47c:	f008 fd1a 	bl	8012eb4 <USB_ReadInterrupts>
 800a480:	4603      	mov	r3, r0
 800a482:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a486:	2b80      	cmp	r3, #128	@ 0x80
 800a488:	d123      	bne.n	800a4d2 <HAL_PCD_IRQHandler+0x7d6>
 800a48a:	6a3b      	ldr	r3, [r7, #32]
 800a48c:	699b      	ldr	r3, [r3, #24]
 800a48e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800a492:	6a3b      	ldr	r3, [r7, #32]
 800a494:	619a      	str	r2, [r3, #24]
 800a496:	2301      	movs	r3, #1
 800a498:	627b      	str	r3, [r7, #36]	@ 0x24
 800a49a:	e014      	b.n	800a4c6 <HAL_PCD_IRQHandler+0x7ca>
 800a49c:	6879      	ldr	r1, [r7, #4]
 800a49e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a4a0:	4613      	mov	r3, r2
 800a4a2:	00db      	lsls	r3, r3, #3
 800a4a4:	4413      	add	r3, r2
 800a4a6:	009b      	lsls	r3, r3, #2
 800a4a8:	440b      	add	r3, r1
 800a4aa:	f203 2357 	addw	r3, r3, #599	@ 0x257
 800a4ae:	781b      	ldrb	r3, [r3, #0]
 800a4b0:	2b01      	cmp	r3, #1
 800a4b2:	d105      	bne.n	800a4c0 <HAL_PCD_IRQHandler+0x7c4>
 800a4b4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a4b6:	b2db      	uxtb	r3, r3
 800a4b8:	4619      	mov	r1, r3
 800a4ba:	6878      	ldr	r0, [r7, #4]
 800a4bc:	f000 fb08 	bl	800aad0 <HAL_PCD_EP_Abort>
 800a4c0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a4c2:	3301      	adds	r3, #1
 800a4c4:	627b      	str	r3, [r7, #36]	@ 0x24
 800a4c6:	687b      	ldr	r3, [r7, #4]
 800a4c8:	791b      	ldrb	r3, [r3, #4]
 800a4ca:	461a      	mov	r2, r3
 800a4cc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a4ce:	4293      	cmp	r3, r2
 800a4d0:	d3e4      	bcc.n	800a49c <HAL_PCD_IRQHandler+0x7a0>
 800a4d2:	687b      	ldr	r3, [r7, #4]
 800a4d4:	681b      	ldr	r3, [r3, #0]
 800a4d6:	4618      	mov	r0, r3
 800a4d8:	f008 fcec 	bl	8012eb4 <USB_ReadInterrupts>
 800a4dc:	4603      	mov	r3, r0
 800a4de:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800a4e2:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800a4e6:	d13c      	bne.n	800a562 <HAL_PCD_IRQHandler+0x866>
 800a4e8:	2301      	movs	r3, #1
 800a4ea:	627b      	str	r3, [r7, #36]	@ 0x24
 800a4ec:	e02b      	b.n	800a546 <HAL_PCD_IRQHandler+0x84a>
 800a4ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a4f0:	015a      	lsls	r2, r3, #5
 800a4f2:	69fb      	ldr	r3, [r7, #28]
 800a4f4:	4413      	add	r3, r2
 800a4f6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800a4fa:	681b      	ldr	r3, [r3, #0]
 800a4fc:	61bb      	str	r3, [r7, #24]
 800a4fe:	6879      	ldr	r1, [r7, #4]
 800a500:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a502:	4613      	mov	r3, r2
 800a504:	00db      	lsls	r3, r3, #3
 800a506:	4413      	add	r3, r2
 800a508:	009b      	lsls	r3, r3, #2
 800a50a:	440b      	add	r3, r1
 800a50c:	3318      	adds	r3, #24
 800a50e:	781b      	ldrb	r3, [r3, #0]
 800a510:	2b01      	cmp	r3, #1
 800a512:	d115      	bne.n	800a540 <HAL_PCD_IRQHandler+0x844>
 800a514:	69bb      	ldr	r3, [r7, #24]
 800a516:	2b00      	cmp	r3, #0
 800a518:	da12      	bge.n	800a540 <HAL_PCD_IRQHandler+0x844>
 800a51a:	6879      	ldr	r1, [r7, #4]
 800a51c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a51e:	4613      	mov	r3, r2
 800a520:	00db      	lsls	r3, r3, #3
 800a522:	4413      	add	r3, r2
 800a524:	009b      	lsls	r3, r3, #2
 800a526:	440b      	add	r3, r1
 800a528:	3317      	adds	r3, #23
 800a52a:	2201      	movs	r2, #1
 800a52c:	701a      	strb	r2, [r3, #0]
 800a52e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a530:	b2db      	uxtb	r3, r3
 800a532:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800a536:	b2db      	uxtb	r3, r3
 800a538:	4619      	mov	r1, r3
 800a53a:	6878      	ldr	r0, [r7, #4]
 800a53c:	f000 fac8 	bl	800aad0 <HAL_PCD_EP_Abort>
 800a540:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a542:	3301      	adds	r3, #1
 800a544:	627b      	str	r3, [r7, #36]	@ 0x24
 800a546:	687b      	ldr	r3, [r7, #4]
 800a548:	791b      	ldrb	r3, [r3, #4]
 800a54a:	461a      	mov	r2, r3
 800a54c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a54e:	4293      	cmp	r3, r2
 800a550:	d3cd      	bcc.n	800a4ee <HAL_PCD_IRQHandler+0x7f2>
 800a552:	687b      	ldr	r3, [r7, #4]
 800a554:	681b      	ldr	r3, [r3, #0]
 800a556:	695a      	ldr	r2, [r3, #20]
 800a558:	687b      	ldr	r3, [r7, #4]
 800a55a:	681b      	ldr	r3, [r3, #0]
 800a55c:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 800a560:	615a      	str	r2, [r3, #20]
 800a562:	687b      	ldr	r3, [r7, #4]
 800a564:	681b      	ldr	r3, [r3, #0]
 800a566:	4618      	mov	r0, r3
 800a568:	f008 fca4 	bl	8012eb4 <USB_ReadInterrupts>
 800a56c:	4603      	mov	r3, r0
 800a56e:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800a572:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800a576:	d156      	bne.n	800a626 <HAL_PCD_IRQHandler+0x92a>
 800a578:	2301      	movs	r3, #1
 800a57a:	627b      	str	r3, [r7, #36]	@ 0x24
 800a57c:	e045      	b.n	800a60a <HAL_PCD_IRQHandler+0x90e>
 800a57e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a580:	015a      	lsls	r2, r3, #5
 800a582:	69fb      	ldr	r3, [r7, #28]
 800a584:	4413      	add	r3, r2
 800a586:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800a58a:	681b      	ldr	r3, [r3, #0]
 800a58c:	61bb      	str	r3, [r7, #24]
 800a58e:	6879      	ldr	r1, [r7, #4]
 800a590:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a592:	4613      	mov	r3, r2
 800a594:	00db      	lsls	r3, r3, #3
 800a596:	4413      	add	r3, r2
 800a598:	009b      	lsls	r3, r3, #2
 800a59a:	440b      	add	r3, r1
 800a59c:	f503 7316 	add.w	r3, r3, #600	@ 0x258
 800a5a0:	781b      	ldrb	r3, [r3, #0]
 800a5a2:	2b01      	cmp	r3, #1
 800a5a4:	d12e      	bne.n	800a604 <HAL_PCD_IRQHandler+0x908>
 800a5a6:	69bb      	ldr	r3, [r7, #24]
 800a5a8:	2b00      	cmp	r3, #0
 800a5aa:	da2b      	bge.n	800a604 <HAL_PCD_IRQHandler+0x908>
 800a5ac:	69bb      	ldr	r3, [r7, #24]
 800a5ae:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 800a5b2:	687b      	ldr	r3, [r7, #4]
 800a5b4:	f8d3 34d4 	ldr.w	r3, [r3, #1236]	@ 0x4d4
 800a5b8:	f003 0301 	and.w	r3, r3, #1
 800a5bc:	429a      	cmp	r2, r3
 800a5be:	d121      	bne.n	800a604 <HAL_PCD_IRQHandler+0x908>
 800a5c0:	6879      	ldr	r1, [r7, #4]
 800a5c2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a5c4:	4613      	mov	r3, r2
 800a5c6:	00db      	lsls	r3, r3, #3
 800a5c8:	4413      	add	r3, r2
 800a5ca:	009b      	lsls	r3, r3, #2
 800a5cc:	440b      	add	r3, r1
 800a5ce:	f203 2357 	addw	r3, r3, #599	@ 0x257
 800a5d2:	2201      	movs	r2, #1
 800a5d4:	701a      	strb	r2, [r3, #0]
 800a5d6:	6a3b      	ldr	r3, [r7, #32]
 800a5d8:	699b      	ldr	r3, [r3, #24]
 800a5da:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 800a5de:	6a3b      	ldr	r3, [r7, #32]
 800a5e0:	619a      	str	r2, [r3, #24]
 800a5e2:	6a3b      	ldr	r3, [r7, #32]
 800a5e4:	695b      	ldr	r3, [r3, #20]
 800a5e6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a5ea:	2b00      	cmp	r3, #0
 800a5ec:	d10a      	bne.n	800a604 <HAL_PCD_IRQHandler+0x908>
 800a5ee:	69fb      	ldr	r3, [r7, #28]
 800a5f0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800a5f4:	685b      	ldr	r3, [r3, #4]
 800a5f6:	69fa      	ldr	r2, [r7, #28]
 800a5f8:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800a5fc:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800a600:	6053      	str	r3, [r2, #4]
 800a602:	e008      	b.n	800a616 <HAL_PCD_IRQHandler+0x91a>
 800a604:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a606:	3301      	adds	r3, #1
 800a608:	627b      	str	r3, [r7, #36]	@ 0x24
 800a60a:	687b      	ldr	r3, [r7, #4]
 800a60c:	791b      	ldrb	r3, [r3, #4]
 800a60e:	461a      	mov	r2, r3
 800a610:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a612:	4293      	cmp	r3, r2
 800a614:	d3b3      	bcc.n	800a57e <HAL_PCD_IRQHandler+0x882>
 800a616:	687b      	ldr	r3, [r7, #4]
 800a618:	681b      	ldr	r3, [r3, #0]
 800a61a:	695a      	ldr	r2, [r3, #20]
 800a61c:	687b      	ldr	r3, [r7, #4]
 800a61e:	681b      	ldr	r3, [r3, #0]
 800a620:	f402 1200 	and.w	r2, r2, #2097152	@ 0x200000
 800a624:	615a      	str	r2, [r3, #20]
 800a626:	687b      	ldr	r3, [r7, #4]
 800a628:	681b      	ldr	r3, [r3, #0]
 800a62a:	4618      	mov	r0, r3
 800a62c:	f008 fc42 	bl	8012eb4 <USB_ReadInterrupts>
 800a630:	4603      	mov	r3, r0
 800a632:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 800a636:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800a63a:	d10a      	bne.n	800a652 <HAL_PCD_IRQHandler+0x956>
 800a63c:	6878      	ldr	r0, [r7, #4]
 800a63e:	f00b f8b7 	bl	80157b0 <HAL_PCD_ConnectCallback>
 800a642:	687b      	ldr	r3, [r7, #4]
 800a644:	681b      	ldr	r3, [r3, #0]
 800a646:	695a      	ldr	r2, [r3, #20]
 800a648:	687b      	ldr	r3, [r7, #4]
 800a64a:	681b      	ldr	r3, [r3, #0]
 800a64c:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 800a650:	615a      	str	r2, [r3, #20]
 800a652:	687b      	ldr	r3, [r7, #4]
 800a654:	681b      	ldr	r3, [r3, #0]
 800a656:	4618      	mov	r0, r3
 800a658:	f008 fc2c 	bl	8012eb4 <USB_ReadInterrupts>
 800a65c:	4603      	mov	r3, r0
 800a65e:	f003 0304 	and.w	r3, r3, #4
 800a662:	2b04      	cmp	r3, #4
 800a664:	d115      	bne.n	800a692 <HAL_PCD_IRQHandler+0x996>
 800a666:	687b      	ldr	r3, [r7, #4]
 800a668:	681b      	ldr	r3, [r3, #0]
 800a66a:	685b      	ldr	r3, [r3, #4]
 800a66c:	61bb      	str	r3, [r7, #24]
 800a66e:	69bb      	ldr	r3, [r7, #24]
 800a670:	f003 0304 	and.w	r3, r3, #4
 800a674:	2b00      	cmp	r3, #0
 800a676:	d002      	beq.n	800a67e <HAL_PCD_IRQHandler+0x982>
 800a678:	6878      	ldr	r0, [r7, #4]
 800a67a:	f00b f8a7 	bl	80157cc <HAL_PCD_DisconnectCallback>
 800a67e:	687b      	ldr	r3, [r7, #4]
 800a680:	681b      	ldr	r3, [r3, #0]
 800a682:	6859      	ldr	r1, [r3, #4]
 800a684:	687b      	ldr	r3, [r7, #4]
 800a686:	681b      	ldr	r3, [r3, #0]
 800a688:	69ba      	ldr	r2, [r7, #24]
 800a68a:	430a      	orrs	r2, r1
 800a68c:	605a      	str	r2, [r3, #4]
 800a68e:	e000      	b.n	800a692 <HAL_PCD_IRQHandler+0x996>
 800a690:	bf00      	nop
 800a692:	3734      	adds	r7, #52	@ 0x34
 800a694:	46bd      	mov	sp, r7
 800a696:	bd90      	pop	{r4, r7, pc}

0800a698 <HAL_PCD_SetAddress>:
 800a698:	b580      	push	{r7, lr}
 800a69a:	b082      	sub	sp, #8
 800a69c:	af00      	add	r7, sp, #0
 800a69e:	6078      	str	r0, [r7, #4]
 800a6a0:	460b      	mov	r3, r1
 800a6a2:	70fb      	strb	r3, [r7, #3]
 800a6a4:	687b      	ldr	r3, [r7, #4]
 800a6a6:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 800a6aa:	2b01      	cmp	r3, #1
 800a6ac:	d101      	bne.n	800a6b2 <HAL_PCD_SetAddress+0x1a>
 800a6ae:	2302      	movs	r3, #2
 800a6b0:	e012      	b.n	800a6d8 <HAL_PCD_SetAddress+0x40>
 800a6b2:	687b      	ldr	r3, [r7, #4]
 800a6b4:	2201      	movs	r2, #1
 800a6b6:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800a6ba:	687b      	ldr	r3, [r7, #4]
 800a6bc:	78fa      	ldrb	r2, [r7, #3]
 800a6be:	745a      	strb	r2, [r3, #17]
 800a6c0:	687b      	ldr	r3, [r7, #4]
 800a6c2:	681b      	ldr	r3, [r3, #0]
 800a6c4:	78fa      	ldrb	r2, [r7, #3]
 800a6c6:	4611      	mov	r1, r2
 800a6c8:	4618      	mov	r0, r3
 800a6ca:	f008 fb8b 	bl	8012de4 <USB_SetDevAddress>
 800a6ce:	687b      	ldr	r3, [r7, #4]
 800a6d0:	2200      	movs	r2, #0
 800a6d2:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800a6d6:	2300      	movs	r3, #0
 800a6d8:	4618      	mov	r0, r3
 800a6da:	3708      	adds	r7, #8
 800a6dc:	46bd      	mov	sp, r7
 800a6de:	bd80      	pop	{r7, pc}

0800a6e0 <HAL_PCD_EP_Open>:
 800a6e0:	b580      	push	{r7, lr}
 800a6e2:	b084      	sub	sp, #16
 800a6e4:	af00      	add	r7, sp, #0
 800a6e6:	6078      	str	r0, [r7, #4]
 800a6e8:	4608      	mov	r0, r1
 800a6ea:	4611      	mov	r1, r2
 800a6ec:	461a      	mov	r2, r3
 800a6ee:	4603      	mov	r3, r0
 800a6f0:	70fb      	strb	r3, [r7, #3]
 800a6f2:	460b      	mov	r3, r1
 800a6f4:	803b      	strh	r3, [r7, #0]
 800a6f6:	4613      	mov	r3, r2
 800a6f8:	70bb      	strb	r3, [r7, #2]
 800a6fa:	2300      	movs	r3, #0
 800a6fc:	72fb      	strb	r3, [r7, #11]
 800a6fe:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800a702:	2b00      	cmp	r3, #0
 800a704:	da0f      	bge.n	800a726 <HAL_PCD_EP_Open+0x46>
 800a706:	78fb      	ldrb	r3, [r7, #3]
 800a708:	f003 020f 	and.w	r2, r3, #15
 800a70c:	4613      	mov	r3, r2
 800a70e:	00db      	lsls	r3, r3, #3
 800a710:	4413      	add	r3, r2
 800a712:	009b      	lsls	r3, r3, #2
 800a714:	3310      	adds	r3, #16
 800a716:	687a      	ldr	r2, [r7, #4]
 800a718:	4413      	add	r3, r2
 800a71a:	3304      	adds	r3, #4
 800a71c:	60fb      	str	r3, [r7, #12]
 800a71e:	68fb      	ldr	r3, [r7, #12]
 800a720:	2201      	movs	r2, #1
 800a722:	705a      	strb	r2, [r3, #1]
 800a724:	e00f      	b.n	800a746 <HAL_PCD_EP_Open+0x66>
 800a726:	78fb      	ldrb	r3, [r7, #3]
 800a728:	f003 020f 	and.w	r2, r3, #15
 800a72c:	4613      	mov	r3, r2
 800a72e:	00db      	lsls	r3, r3, #3
 800a730:	4413      	add	r3, r2
 800a732:	009b      	lsls	r3, r3, #2
 800a734:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800a738:	687a      	ldr	r2, [r7, #4]
 800a73a:	4413      	add	r3, r2
 800a73c:	3304      	adds	r3, #4
 800a73e:	60fb      	str	r3, [r7, #12]
 800a740:	68fb      	ldr	r3, [r7, #12]
 800a742:	2200      	movs	r2, #0
 800a744:	705a      	strb	r2, [r3, #1]
 800a746:	78fb      	ldrb	r3, [r7, #3]
 800a748:	f003 030f 	and.w	r3, r3, #15
 800a74c:	b2da      	uxtb	r2, r3
 800a74e:	68fb      	ldr	r3, [r7, #12]
 800a750:	701a      	strb	r2, [r3, #0]
 800a752:	883a      	ldrh	r2, [r7, #0]
 800a754:	68fb      	ldr	r3, [r7, #12]
 800a756:	609a      	str	r2, [r3, #8]
 800a758:	68fb      	ldr	r3, [r7, #12]
 800a75a:	78ba      	ldrb	r2, [r7, #2]
 800a75c:	711a      	strb	r2, [r3, #4]
 800a75e:	68fb      	ldr	r3, [r7, #12]
 800a760:	785b      	ldrb	r3, [r3, #1]
 800a762:	2b00      	cmp	r3, #0
 800a764:	d004      	beq.n	800a770 <HAL_PCD_EP_Open+0x90>
 800a766:	68fb      	ldr	r3, [r7, #12]
 800a768:	781b      	ldrb	r3, [r3, #0]
 800a76a:	461a      	mov	r2, r3
 800a76c:	68fb      	ldr	r3, [r7, #12]
 800a76e:	835a      	strh	r2, [r3, #26]
 800a770:	78bb      	ldrb	r3, [r7, #2]
 800a772:	2b02      	cmp	r3, #2
 800a774:	d102      	bne.n	800a77c <HAL_PCD_EP_Open+0x9c>
 800a776:	68fb      	ldr	r3, [r7, #12]
 800a778:	2200      	movs	r2, #0
 800a77a:	715a      	strb	r2, [r3, #5]
 800a77c:	687b      	ldr	r3, [r7, #4]
 800a77e:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 800a782:	2b01      	cmp	r3, #1
 800a784:	d101      	bne.n	800a78a <HAL_PCD_EP_Open+0xaa>
 800a786:	2302      	movs	r3, #2
 800a788:	e00e      	b.n	800a7a8 <HAL_PCD_EP_Open+0xc8>
 800a78a:	687b      	ldr	r3, [r7, #4]
 800a78c:	2201      	movs	r2, #1
 800a78e:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800a792:	687b      	ldr	r3, [r7, #4]
 800a794:	681b      	ldr	r3, [r3, #0]
 800a796:	68f9      	ldr	r1, [r7, #12]
 800a798:	4618      	mov	r0, r3
 800a79a:	f007 fd0b 	bl	80121b4 <USB_ActivateEndpoint>
 800a79e:	687b      	ldr	r3, [r7, #4]
 800a7a0:	2200      	movs	r2, #0
 800a7a2:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800a7a6:	7afb      	ldrb	r3, [r7, #11]
 800a7a8:	4618      	mov	r0, r3
 800a7aa:	3710      	adds	r7, #16
 800a7ac:	46bd      	mov	sp, r7
 800a7ae:	bd80      	pop	{r7, pc}

0800a7b0 <HAL_PCD_EP_Close>:
 800a7b0:	b580      	push	{r7, lr}
 800a7b2:	b084      	sub	sp, #16
 800a7b4:	af00      	add	r7, sp, #0
 800a7b6:	6078      	str	r0, [r7, #4]
 800a7b8:	460b      	mov	r3, r1
 800a7ba:	70fb      	strb	r3, [r7, #3]
 800a7bc:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800a7c0:	2b00      	cmp	r3, #0
 800a7c2:	da0f      	bge.n	800a7e4 <HAL_PCD_EP_Close+0x34>
 800a7c4:	78fb      	ldrb	r3, [r7, #3]
 800a7c6:	f003 020f 	and.w	r2, r3, #15
 800a7ca:	4613      	mov	r3, r2
 800a7cc:	00db      	lsls	r3, r3, #3
 800a7ce:	4413      	add	r3, r2
 800a7d0:	009b      	lsls	r3, r3, #2
 800a7d2:	3310      	adds	r3, #16
 800a7d4:	687a      	ldr	r2, [r7, #4]
 800a7d6:	4413      	add	r3, r2
 800a7d8:	3304      	adds	r3, #4
 800a7da:	60fb      	str	r3, [r7, #12]
 800a7dc:	68fb      	ldr	r3, [r7, #12]
 800a7de:	2201      	movs	r2, #1
 800a7e0:	705a      	strb	r2, [r3, #1]
 800a7e2:	e00f      	b.n	800a804 <HAL_PCD_EP_Close+0x54>
 800a7e4:	78fb      	ldrb	r3, [r7, #3]
 800a7e6:	f003 020f 	and.w	r2, r3, #15
 800a7ea:	4613      	mov	r3, r2
 800a7ec:	00db      	lsls	r3, r3, #3
 800a7ee:	4413      	add	r3, r2
 800a7f0:	009b      	lsls	r3, r3, #2
 800a7f2:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800a7f6:	687a      	ldr	r2, [r7, #4]
 800a7f8:	4413      	add	r3, r2
 800a7fa:	3304      	adds	r3, #4
 800a7fc:	60fb      	str	r3, [r7, #12]
 800a7fe:	68fb      	ldr	r3, [r7, #12]
 800a800:	2200      	movs	r2, #0
 800a802:	705a      	strb	r2, [r3, #1]
 800a804:	78fb      	ldrb	r3, [r7, #3]
 800a806:	f003 030f 	and.w	r3, r3, #15
 800a80a:	b2da      	uxtb	r2, r3
 800a80c:	68fb      	ldr	r3, [r7, #12]
 800a80e:	701a      	strb	r2, [r3, #0]
 800a810:	687b      	ldr	r3, [r7, #4]
 800a812:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 800a816:	2b01      	cmp	r3, #1
 800a818:	d101      	bne.n	800a81e <HAL_PCD_EP_Close+0x6e>
 800a81a:	2302      	movs	r3, #2
 800a81c:	e00e      	b.n	800a83c <HAL_PCD_EP_Close+0x8c>
 800a81e:	687b      	ldr	r3, [r7, #4]
 800a820:	2201      	movs	r2, #1
 800a822:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800a826:	687b      	ldr	r3, [r7, #4]
 800a828:	681b      	ldr	r3, [r3, #0]
 800a82a:	68f9      	ldr	r1, [r7, #12]
 800a82c:	4618      	mov	r0, r3
 800a82e:	f007 fd49 	bl	80122c4 <USB_DeactivateEndpoint>
 800a832:	687b      	ldr	r3, [r7, #4]
 800a834:	2200      	movs	r2, #0
 800a836:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800a83a:	2300      	movs	r3, #0
 800a83c:	4618      	mov	r0, r3
 800a83e:	3710      	adds	r7, #16
 800a840:	46bd      	mov	sp, r7
 800a842:	bd80      	pop	{r7, pc}

0800a844 <HAL_PCD_EP_Receive>:
 800a844:	b580      	push	{r7, lr}
 800a846:	b086      	sub	sp, #24
 800a848:	af00      	add	r7, sp, #0
 800a84a:	60f8      	str	r0, [r7, #12]
 800a84c:	607a      	str	r2, [r7, #4]
 800a84e:	603b      	str	r3, [r7, #0]
 800a850:	460b      	mov	r3, r1
 800a852:	72fb      	strb	r3, [r7, #11]
 800a854:	7afb      	ldrb	r3, [r7, #11]
 800a856:	f003 020f 	and.w	r2, r3, #15
 800a85a:	4613      	mov	r3, r2
 800a85c:	00db      	lsls	r3, r3, #3
 800a85e:	4413      	add	r3, r2
 800a860:	009b      	lsls	r3, r3, #2
 800a862:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800a866:	68fa      	ldr	r2, [r7, #12]
 800a868:	4413      	add	r3, r2
 800a86a:	3304      	adds	r3, #4
 800a86c:	617b      	str	r3, [r7, #20]
 800a86e:	697b      	ldr	r3, [r7, #20]
 800a870:	687a      	ldr	r2, [r7, #4]
 800a872:	60da      	str	r2, [r3, #12]
 800a874:	697b      	ldr	r3, [r7, #20]
 800a876:	683a      	ldr	r2, [r7, #0]
 800a878:	611a      	str	r2, [r3, #16]
 800a87a:	697b      	ldr	r3, [r7, #20]
 800a87c:	2200      	movs	r2, #0
 800a87e:	615a      	str	r2, [r3, #20]
 800a880:	697b      	ldr	r3, [r7, #20]
 800a882:	2200      	movs	r2, #0
 800a884:	705a      	strb	r2, [r3, #1]
 800a886:	7afb      	ldrb	r3, [r7, #11]
 800a888:	f003 030f 	and.w	r3, r3, #15
 800a88c:	b2da      	uxtb	r2, r3
 800a88e:	697b      	ldr	r3, [r7, #20]
 800a890:	701a      	strb	r2, [r3, #0]
 800a892:	68fb      	ldr	r3, [r7, #12]
 800a894:	799b      	ldrb	r3, [r3, #6]
 800a896:	2b01      	cmp	r3, #1
 800a898:	d102      	bne.n	800a8a0 <HAL_PCD_EP_Receive+0x5c>
 800a89a:	687a      	ldr	r2, [r7, #4]
 800a89c:	697b      	ldr	r3, [r7, #20]
 800a89e:	61da      	str	r2, [r3, #28]
 800a8a0:	68fb      	ldr	r3, [r7, #12]
 800a8a2:	6818      	ldr	r0, [r3, #0]
 800a8a4:	68fb      	ldr	r3, [r7, #12]
 800a8a6:	799b      	ldrb	r3, [r3, #6]
 800a8a8:	461a      	mov	r2, r3
 800a8aa:	6979      	ldr	r1, [r7, #20]
 800a8ac:	f007 fde6 	bl	801247c <USB_EPStartXfer>
 800a8b0:	2300      	movs	r3, #0
 800a8b2:	4618      	mov	r0, r3
 800a8b4:	3718      	adds	r7, #24
 800a8b6:	46bd      	mov	sp, r7
 800a8b8:	bd80      	pop	{r7, pc}

0800a8ba <HAL_PCD_EP_GetRxCount>:
 800a8ba:	b480      	push	{r7}
 800a8bc:	b083      	sub	sp, #12
 800a8be:	af00      	add	r7, sp, #0
 800a8c0:	6078      	str	r0, [r7, #4]
 800a8c2:	460b      	mov	r3, r1
 800a8c4:	70fb      	strb	r3, [r7, #3]
 800a8c6:	78fb      	ldrb	r3, [r7, #3]
 800a8c8:	f003 020f 	and.w	r2, r3, #15
 800a8cc:	6879      	ldr	r1, [r7, #4]
 800a8ce:	4613      	mov	r3, r2
 800a8d0:	00db      	lsls	r3, r3, #3
 800a8d2:	4413      	add	r3, r2
 800a8d4:	009b      	lsls	r3, r3, #2
 800a8d6:	440b      	add	r3, r1
 800a8d8:	f503 731a 	add.w	r3, r3, #616	@ 0x268
 800a8dc:	681b      	ldr	r3, [r3, #0]
 800a8de:	4618      	mov	r0, r3
 800a8e0:	370c      	adds	r7, #12
 800a8e2:	46bd      	mov	sp, r7
 800a8e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8e8:	4770      	bx	lr

0800a8ea <HAL_PCD_EP_Transmit>:
 800a8ea:	b580      	push	{r7, lr}
 800a8ec:	b086      	sub	sp, #24
 800a8ee:	af00      	add	r7, sp, #0
 800a8f0:	60f8      	str	r0, [r7, #12]
 800a8f2:	607a      	str	r2, [r7, #4]
 800a8f4:	603b      	str	r3, [r7, #0]
 800a8f6:	460b      	mov	r3, r1
 800a8f8:	72fb      	strb	r3, [r7, #11]
 800a8fa:	7afb      	ldrb	r3, [r7, #11]
 800a8fc:	f003 020f 	and.w	r2, r3, #15
 800a900:	4613      	mov	r3, r2
 800a902:	00db      	lsls	r3, r3, #3
 800a904:	4413      	add	r3, r2
 800a906:	009b      	lsls	r3, r3, #2
 800a908:	3310      	adds	r3, #16
 800a90a:	68fa      	ldr	r2, [r7, #12]
 800a90c:	4413      	add	r3, r2
 800a90e:	3304      	adds	r3, #4
 800a910:	617b      	str	r3, [r7, #20]
 800a912:	697b      	ldr	r3, [r7, #20]
 800a914:	687a      	ldr	r2, [r7, #4]
 800a916:	60da      	str	r2, [r3, #12]
 800a918:	697b      	ldr	r3, [r7, #20]
 800a91a:	683a      	ldr	r2, [r7, #0]
 800a91c:	611a      	str	r2, [r3, #16]
 800a91e:	697b      	ldr	r3, [r7, #20]
 800a920:	2200      	movs	r2, #0
 800a922:	615a      	str	r2, [r3, #20]
 800a924:	697b      	ldr	r3, [r7, #20]
 800a926:	2201      	movs	r2, #1
 800a928:	705a      	strb	r2, [r3, #1]
 800a92a:	7afb      	ldrb	r3, [r7, #11]
 800a92c:	f003 030f 	and.w	r3, r3, #15
 800a930:	b2da      	uxtb	r2, r3
 800a932:	697b      	ldr	r3, [r7, #20]
 800a934:	701a      	strb	r2, [r3, #0]
 800a936:	68fb      	ldr	r3, [r7, #12]
 800a938:	799b      	ldrb	r3, [r3, #6]
 800a93a:	2b01      	cmp	r3, #1
 800a93c:	d102      	bne.n	800a944 <HAL_PCD_EP_Transmit+0x5a>
 800a93e:	687a      	ldr	r2, [r7, #4]
 800a940:	697b      	ldr	r3, [r7, #20]
 800a942:	61da      	str	r2, [r3, #28]
 800a944:	68fb      	ldr	r3, [r7, #12]
 800a946:	6818      	ldr	r0, [r3, #0]
 800a948:	68fb      	ldr	r3, [r7, #12]
 800a94a:	799b      	ldrb	r3, [r3, #6]
 800a94c:	461a      	mov	r2, r3
 800a94e:	6979      	ldr	r1, [r7, #20]
 800a950:	f007 fd94 	bl	801247c <USB_EPStartXfer>
 800a954:	2300      	movs	r3, #0
 800a956:	4618      	mov	r0, r3
 800a958:	3718      	adds	r7, #24
 800a95a:	46bd      	mov	sp, r7
 800a95c:	bd80      	pop	{r7, pc}

0800a95e <HAL_PCD_EP_SetStall>:
 800a95e:	b580      	push	{r7, lr}
 800a960:	b084      	sub	sp, #16
 800a962:	af00      	add	r7, sp, #0
 800a964:	6078      	str	r0, [r7, #4]
 800a966:	460b      	mov	r3, r1
 800a968:	70fb      	strb	r3, [r7, #3]
 800a96a:	78fb      	ldrb	r3, [r7, #3]
 800a96c:	f003 030f 	and.w	r3, r3, #15
 800a970:	687a      	ldr	r2, [r7, #4]
 800a972:	7912      	ldrb	r2, [r2, #4]
 800a974:	4293      	cmp	r3, r2
 800a976:	d901      	bls.n	800a97c <HAL_PCD_EP_SetStall+0x1e>
 800a978:	2301      	movs	r3, #1
 800a97a:	e04f      	b.n	800aa1c <HAL_PCD_EP_SetStall+0xbe>
 800a97c:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800a980:	2b00      	cmp	r3, #0
 800a982:	da0f      	bge.n	800a9a4 <HAL_PCD_EP_SetStall+0x46>
 800a984:	78fb      	ldrb	r3, [r7, #3]
 800a986:	f003 020f 	and.w	r2, r3, #15
 800a98a:	4613      	mov	r3, r2
 800a98c:	00db      	lsls	r3, r3, #3
 800a98e:	4413      	add	r3, r2
 800a990:	009b      	lsls	r3, r3, #2
 800a992:	3310      	adds	r3, #16
 800a994:	687a      	ldr	r2, [r7, #4]
 800a996:	4413      	add	r3, r2
 800a998:	3304      	adds	r3, #4
 800a99a:	60fb      	str	r3, [r7, #12]
 800a99c:	68fb      	ldr	r3, [r7, #12]
 800a99e:	2201      	movs	r2, #1
 800a9a0:	705a      	strb	r2, [r3, #1]
 800a9a2:	e00d      	b.n	800a9c0 <HAL_PCD_EP_SetStall+0x62>
 800a9a4:	78fa      	ldrb	r2, [r7, #3]
 800a9a6:	4613      	mov	r3, r2
 800a9a8:	00db      	lsls	r3, r3, #3
 800a9aa:	4413      	add	r3, r2
 800a9ac:	009b      	lsls	r3, r3, #2
 800a9ae:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800a9b2:	687a      	ldr	r2, [r7, #4]
 800a9b4:	4413      	add	r3, r2
 800a9b6:	3304      	adds	r3, #4
 800a9b8:	60fb      	str	r3, [r7, #12]
 800a9ba:	68fb      	ldr	r3, [r7, #12]
 800a9bc:	2200      	movs	r2, #0
 800a9be:	705a      	strb	r2, [r3, #1]
 800a9c0:	68fb      	ldr	r3, [r7, #12]
 800a9c2:	2201      	movs	r2, #1
 800a9c4:	709a      	strb	r2, [r3, #2]
 800a9c6:	78fb      	ldrb	r3, [r7, #3]
 800a9c8:	f003 030f 	and.w	r3, r3, #15
 800a9cc:	b2da      	uxtb	r2, r3
 800a9ce:	68fb      	ldr	r3, [r7, #12]
 800a9d0:	701a      	strb	r2, [r3, #0]
 800a9d2:	687b      	ldr	r3, [r7, #4]
 800a9d4:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 800a9d8:	2b01      	cmp	r3, #1
 800a9da:	d101      	bne.n	800a9e0 <HAL_PCD_EP_SetStall+0x82>
 800a9dc:	2302      	movs	r3, #2
 800a9de:	e01d      	b.n	800aa1c <HAL_PCD_EP_SetStall+0xbe>
 800a9e0:	687b      	ldr	r3, [r7, #4]
 800a9e2:	2201      	movs	r2, #1
 800a9e4:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800a9e8:	687b      	ldr	r3, [r7, #4]
 800a9ea:	681b      	ldr	r3, [r3, #0]
 800a9ec:	68f9      	ldr	r1, [r7, #12]
 800a9ee:	4618      	mov	r0, r3
 800a9f0:	f008 f924 	bl	8012c3c <USB_EPSetStall>
 800a9f4:	78fb      	ldrb	r3, [r7, #3]
 800a9f6:	f003 030f 	and.w	r3, r3, #15
 800a9fa:	2b00      	cmp	r3, #0
 800a9fc:	d109      	bne.n	800aa12 <HAL_PCD_EP_SetStall+0xb4>
 800a9fe:	687b      	ldr	r3, [r7, #4]
 800aa00:	6818      	ldr	r0, [r3, #0]
 800aa02:	687b      	ldr	r3, [r7, #4]
 800aa04:	7999      	ldrb	r1, [r3, #6]
 800aa06:	687b      	ldr	r3, [r7, #4]
 800aa08:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 800aa0c:	461a      	mov	r2, r3
 800aa0e:	f008 fb17 	bl	8013040 <USB_EP0_OutStart>
 800aa12:	687b      	ldr	r3, [r7, #4]
 800aa14:	2200      	movs	r2, #0
 800aa16:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800aa1a:	2300      	movs	r3, #0
 800aa1c:	4618      	mov	r0, r3
 800aa1e:	3710      	adds	r7, #16
 800aa20:	46bd      	mov	sp, r7
 800aa22:	bd80      	pop	{r7, pc}

0800aa24 <HAL_PCD_EP_ClrStall>:
 800aa24:	b580      	push	{r7, lr}
 800aa26:	b084      	sub	sp, #16
 800aa28:	af00      	add	r7, sp, #0
 800aa2a:	6078      	str	r0, [r7, #4]
 800aa2c:	460b      	mov	r3, r1
 800aa2e:	70fb      	strb	r3, [r7, #3]
 800aa30:	78fb      	ldrb	r3, [r7, #3]
 800aa32:	f003 030f 	and.w	r3, r3, #15
 800aa36:	687a      	ldr	r2, [r7, #4]
 800aa38:	7912      	ldrb	r2, [r2, #4]
 800aa3a:	4293      	cmp	r3, r2
 800aa3c:	d901      	bls.n	800aa42 <HAL_PCD_EP_ClrStall+0x1e>
 800aa3e:	2301      	movs	r3, #1
 800aa40:	e042      	b.n	800aac8 <HAL_PCD_EP_ClrStall+0xa4>
 800aa42:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800aa46:	2b00      	cmp	r3, #0
 800aa48:	da0f      	bge.n	800aa6a <HAL_PCD_EP_ClrStall+0x46>
 800aa4a:	78fb      	ldrb	r3, [r7, #3]
 800aa4c:	f003 020f 	and.w	r2, r3, #15
 800aa50:	4613      	mov	r3, r2
 800aa52:	00db      	lsls	r3, r3, #3
 800aa54:	4413      	add	r3, r2
 800aa56:	009b      	lsls	r3, r3, #2
 800aa58:	3310      	adds	r3, #16
 800aa5a:	687a      	ldr	r2, [r7, #4]
 800aa5c:	4413      	add	r3, r2
 800aa5e:	3304      	adds	r3, #4
 800aa60:	60fb      	str	r3, [r7, #12]
 800aa62:	68fb      	ldr	r3, [r7, #12]
 800aa64:	2201      	movs	r2, #1
 800aa66:	705a      	strb	r2, [r3, #1]
 800aa68:	e00f      	b.n	800aa8a <HAL_PCD_EP_ClrStall+0x66>
 800aa6a:	78fb      	ldrb	r3, [r7, #3]
 800aa6c:	f003 020f 	and.w	r2, r3, #15
 800aa70:	4613      	mov	r3, r2
 800aa72:	00db      	lsls	r3, r3, #3
 800aa74:	4413      	add	r3, r2
 800aa76:	009b      	lsls	r3, r3, #2
 800aa78:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800aa7c:	687a      	ldr	r2, [r7, #4]
 800aa7e:	4413      	add	r3, r2
 800aa80:	3304      	adds	r3, #4
 800aa82:	60fb      	str	r3, [r7, #12]
 800aa84:	68fb      	ldr	r3, [r7, #12]
 800aa86:	2200      	movs	r2, #0
 800aa88:	705a      	strb	r2, [r3, #1]
 800aa8a:	68fb      	ldr	r3, [r7, #12]
 800aa8c:	2200      	movs	r2, #0
 800aa8e:	709a      	strb	r2, [r3, #2]
 800aa90:	78fb      	ldrb	r3, [r7, #3]
 800aa92:	f003 030f 	and.w	r3, r3, #15
 800aa96:	b2da      	uxtb	r2, r3
 800aa98:	68fb      	ldr	r3, [r7, #12]
 800aa9a:	701a      	strb	r2, [r3, #0]
 800aa9c:	687b      	ldr	r3, [r7, #4]
 800aa9e:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 800aaa2:	2b01      	cmp	r3, #1
 800aaa4:	d101      	bne.n	800aaaa <HAL_PCD_EP_ClrStall+0x86>
 800aaa6:	2302      	movs	r3, #2
 800aaa8:	e00e      	b.n	800aac8 <HAL_PCD_EP_ClrStall+0xa4>
 800aaaa:	687b      	ldr	r3, [r7, #4]
 800aaac:	2201      	movs	r2, #1
 800aaae:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800aab2:	687b      	ldr	r3, [r7, #4]
 800aab4:	681b      	ldr	r3, [r3, #0]
 800aab6:	68f9      	ldr	r1, [r7, #12]
 800aab8:	4618      	mov	r0, r3
 800aaba:	f008 f92d 	bl	8012d18 <USB_EPClearStall>
 800aabe:	687b      	ldr	r3, [r7, #4]
 800aac0:	2200      	movs	r2, #0
 800aac2:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800aac6:	2300      	movs	r3, #0
 800aac8:	4618      	mov	r0, r3
 800aaca:	3710      	adds	r7, #16
 800aacc:	46bd      	mov	sp, r7
 800aace:	bd80      	pop	{r7, pc}

0800aad0 <HAL_PCD_EP_Abort>:
 800aad0:	b580      	push	{r7, lr}
 800aad2:	b084      	sub	sp, #16
 800aad4:	af00      	add	r7, sp, #0
 800aad6:	6078      	str	r0, [r7, #4]
 800aad8:	460b      	mov	r3, r1
 800aada:	70fb      	strb	r3, [r7, #3]
 800aadc:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800aae0:	2b00      	cmp	r3, #0
 800aae2:	da0c      	bge.n	800aafe <HAL_PCD_EP_Abort+0x2e>
 800aae4:	78fb      	ldrb	r3, [r7, #3]
 800aae6:	f003 020f 	and.w	r2, r3, #15
 800aaea:	4613      	mov	r3, r2
 800aaec:	00db      	lsls	r3, r3, #3
 800aaee:	4413      	add	r3, r2
 800aaf0:	009b      	lsls	r3, r3, #2
 800aaf2:	3310      	adds	r3, #16
 800aaf4:	687a      	ldr	r2, [r7, #4]
 800aaf6:	4413      	add	r3, r2
 800aaf8:	3304      	adds	r3, #4
 800aafa:	60fb      	str	r3, [r7, #12]
 800aafc:	e00c      	b.n	800ab18 <HAL_PCD_EP_Abort+0x48>
 800aafe:	78fb      	ldrb	r3, [r7, #3]
 800ab00:	f003 020f 	and.w	r2, r3, #15
 800ab04:	4613      	mov	r3, r2
 800ab06:	00db      	lsls	r3, r3, #3
 800ab08:	4413      	add	r3, r2
 800ab0a:	009b      	lsls	r3, r3, #2
 800ab0c:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800ab10:	687a      	ldr	r2, [r7, #4]
 800ab12:	4413      	add	r3, r2
 800ab14:	3304      	adds	r3, #4
 800ab16:	60fb      	str	r3, [r7, #12]
 800ab18:	687b      	ldr	r3, [r7, #4]
 800ab1a:	681b      	ldr	r3, [r3, #0]
 800ab1c:	68f9      	ldr	r1, [r7, #12]
 800ab1e:	4618      	mov	r0, r3
 800ab20:	f007 ff4c 	bl	80129bc <USB_EPStopXfer>
 800ab24:	4603      	mov	r3, r0
 800ab26:	72fb      	strb	r3, [r7, #11]
 800ab28:	7afb      	ldrb	r3, [r7, #11]
 800ab2a:	4618      	mov	r0, r3
 800ab2c:	3710      	adds	r7, #16
 800ab2e:	46bd      	mov	sp, r7
 800ab30:	bd80      	pop	{r7, pc}

0800ab32 <PCD_WriteEmptyTxFifo>:
 800ab32:	b580      	push	{r7, lr}
 800ab34:	b08a      	sub	sp, #40	@ 0x28
 800ab36:	af02      	add	r7, sp, #8
 800ab38:	6078      	str	r0, [r7, #4]
 800ab3a:	6039      	str	r1, [r7, #0]
 800ab3c:	687b      	ldr	r3, [r7, #4]
 800ab3e:	681b      	ldr	r3, [r3, #0]
 800ab40:	617b      	str	r3, [r7, #20]
 800ab42:	697b      	ldr	r3, [r7, #20]
 800ab44:	613b      	str	r3, [r7, #16]
 800ab46:	683a      	ldr	r2, [r7, #0]
 800ab48:	4613      	mov	r3, r2
 800ab4a:	00db      	lsls	r3, r3, #3
 800ab4c:	4413      	add	r3, r2
 800ab4e:	009b      	lsls	r3, r3, #2
 800ab50:	3310      	adds	r3, #16
 800ab52:	687a      	ldr	r2, [r7, #4]
 800ab54:	4413      	add	r3, r2
 800ab56:	3304      	adds	r3, #4
 800ab58:	60fb      	str	r3, [r7, #12]
 800ab5a:	68fb      	ldr	r3, [r7, #12]
 800ab5c:	695a      	ldr	r2, [r3, #20]
 800ab5e:	68fb      	ldr	r3, [r7, #12]
 800ab60:	691b      	ldr	r3, [r3, #16]
 800ab62:	429a      	cmp	r2, r3
 800ab64:	d901      	bls.n	800ab6a <PCD_WriteEmptyTxFifo+0x38>
 800ab66:	2301      	movs	r3, #1
 800ab68:	e06b      	b.n	800ac42 <PCD_WriteEmptyTxFifo+0x110>
 800ab6a:	68fb      	ldr	r3, [r7, #12]
 800ab6c:	691a      	ldr	r2, [r3, #16]
 800ab6e:	68fb      	ldr	r3, [r7, #12]
 800ab70:	695b      	ldr	r3, [r3, #20]
 800ab72:	1ad3      	subs	r3, r2, r3
 800ab74:	61fb      	str	r3, [r7, #28]
 800ab76:	68fb      	ldr	r3, [r7, #12]
 800ab78:	689b      	ldr	r3, [r3, #8]
 800ab7a:	69fa      	ldr	r2, [r7, #28]
 800ab7c:	429a      	cmp	r2, r3
 800ab7e:	d902      	bls.n	800ab86 <PCD_WriteEmptyTxFifo+0x54>
 800ab80:	68fb      	ldr	r3, [r7, #12]
 800ab82:	689b      	ldr	r3, [r3, #8]
 800ab84:	61fb      	str	r3, [r7, #28]
 800ab86:	69fb      	ldr	r3, [r7, #28]
 800ab88:	3303      	adds	r3, #3
 800ab8a:	089b      	lsrs	r3, r3, #2
 800ab8c:	61bb      	str	r3, [r7, #24]
 800ab8e:	e02a      	b.n	800abe6 <PCD_WriteEmptyTxFifo+0xb4>
 800ab90:	68fb      	ldr	r3, [r7, #12]
 800ab92:	691a      	ldr	r2, [r3, #16]
 800ab94:	68fb      	ldr	r3, [r7, #12]
 800ab96:	695b      	ldr	r3, [r3, #20]
 800ab98:	1ad3      	subs	r3, r2, r3
 800ab9a:	61fb      	str	r3, [r7, #28]
 800ab9c:	68fb      	ldr	r3, [r7, #12]
 800ab9e:	689b      	ldr	r3, [r3, #8]
 800aba0:	69fa      	ldr	r2, [r7, #28]
 800aba2:	429a      	cmp	r2, r3
 800aba4:	d902      	bls.n	800abac <PCD_WriteEmptyTxFifo+0x7a>
 800aba6:	68fb      	ldr	r3, [r7, #12]
 800aba8:	689b      	ldr	r3, [r3, #8]
 800abaa:	61fb      	str	r3, [r7, #28]
 800abac:	69fb      	ldr	r3, [r7, #28]
 800abae:	3303      	adds	r3, #3
 800abb0:	089b      	lsrs	r3, r3, #2
 800abb2:	61bb      	str	r3, [r7, #24]
 800abb4:	68fb      	ldr	r3, [r7, #12]
 800abb6:	68d9      	ldr	r1, [r3, #12]
 800abb8:	683b      	ldr	r3, [r7, #0]
 800abba:	b2da      	uxtb	r2, r3
 800abbc:	69fb      	ldr	r3, [r7, #28]
 800abbe:	b298      	uxth	r0, r3
 800abc0:	687b      	ldr	r3, [r7, #4]
 800abc2:	799b      	ldrb	r3, [r3, #6]
 800abc4:	9300      	str	r3, [sp, #0]
 800abc6:	4603      	mov	r3, r0
 800abc8:	6978      	ldr	r0, [r7, #20]
 800abca:	f007 ffa1 	bl	8012b10 <USB_WritePacket>
 800abce:	68fb      	ldr	r3, [r7, #12]
 800abd0:	68da      	ldr	r2, [r3, #12]
 800abd2:	69fb      	ldr	r3, [r7, #28]
 800abd4:	441a      	add	r2, r3
 800abd6:	68fb      	ldr	r3, [r7, #12]
 800abd8:	60da      	str	r2, [r3, #12]
 800abda:	68fb      	ldr	r3, [r7, #12]
 800abdc:	695a      	ldr	r2, [r3, #20]
 800abde:	69fb      	ldr	r3, [r7, #28]
 800abe0:	441a      	add	r2, r3
 800abe2:	68fb      	ldr	r3, [r7, #12]
 800abe4:	615a      	str	r2, [r3, #20]
 800abe6:	683b      	ldr	r3, [r7, #0]
 800abe8:	015a      	lsls	r2, r3, #5
 800abea:	693b      	ldr	r3, [r7, #16]
 800abec:	4413      	add	r3, r2
 800abee:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800abf2:	699b      	ldr	r3, [r3, #24]
 800abf4:	b29b      	uxth	r3, r3
 800abf6:	69ba      	ldr	r2, [r7, #24]
 800abf8:	429a      	cmp	r2, r3
 800abfa:	d809      	bhi.n	800ac10 <PCD_WriteEmptyTxFifo+0xde>
 800abfc:	68fb      	ldr	r3, [r7, #12]
 800abfe:	695a      	ldr	r2, [r3, #20]
 800ac00:	68fb      	ldr	r3, [r7, #12]
 800ac02:	691b      	ldr	r3, [r3, #16]
 800ac04:	429a      	cmp	r2, r3
 800ac06:	d203      	bcs.n	800ac10 <PCD_WriteEmptyTxFifo+0xde>
 800ac08:	68fb      	ldr	r3, [r7, #12]
 800ac0a:	691b      	ldr	r3, [r3, #16]
 800ac0c:	2b00      	cmp	r3, #0
 800ac0e:	d1bf      	bne.n	800ab90 <PCD_WriteEmptyTxFifo+0x5e>
 800ac10:	68fb      	ldr	r3, [r7, #12]
 800ac12:	691a      	ldr	r2, [r3, #16]
 800ac14:	68fb      	ldr	r3, [r7, #12]
 800ac16:	695b      	ldr	r3, [r3, #20]
 800ac18:	429a      	cmp	r2, r3
 800ac1a:	d811      	bhi.n	800ac40 <PCD_WriteEmptyTxFifo+0x10e>
 800ac1c:	683b      	ldr	r3, [r7, #0]
 800ac1e:	f003 030f 	and.w	r3, r3, #15
 800ac22:	2201      	movs	r2, #1
 800ac24:	fa02 f303 	lsl.w	r3, r2, r3
 800ac28:	60bb      	str	r3, [r7, #8]
 800ac2a:	693b      	ldr	r3, [r7, #16]
 800ac2c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800ac30:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800ac32:	68bb      	ldr	r3, [r7, #8]
 800ac34:	43db      	mvns	r3, r3
 800ac36:	6939      	ldr	r1, [r7, #16]
 800ac38:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800ac3c:	4013      	ands	r3, r2
 800ac3e:	634b      	str	r3, [r1, #52]	@ 0x34
 800ac40:	2300      	movs	r3, #0
 800ac42:	4618      	mov	r0, r3
 800ac44:	3720      	adds	r7, #32
 800ac46:	46bd      	mov	sp, r7
 800ac48:	bd80      	pop	{r7, pc}
	...

0800ac4c <PCD_EP_OutXfrComplete_int>:
 800ac4c:	b580      	push	{r7, lr}
 800ac4e:	b088      	sub	sp, #32
 800ac50:	af00      	add	r7, sp, #0
 800ac52:	6078      	str	r0, [r7, #4]
 800ac54:	6039      	str	r1, [r7, #0]
 800ac56:	687b      	ldr	r3, [r7, #4]
 800ac58:	681b      	ldr	r3, [r3, #0]
 800ac5a:	61fb      	str	r3, [r7, #28]
 800ac5c:	69fb      	ldr	r3, [r7, #28]
 800ac5e:	61bb      	str	r3, [r7, #24]
 800ac60:	69fb      	ldr	r3, [r7, #28]
 800ac62:	333c      	adds	r3, #60	@ 0x3c
 800ac64:	3304      	adds	r3, #4
 800ac66:	681b      	ldr	r3, [r3, #0]
 800ac68:	617b      	str	r3, [r7, #20]
 800ac6a:	683b      	ldr	r3, [r7, #0]
 800ac6c:	015a      	lsls	r2, r3, #5
 800ac6e:	69bb      	ldr	r3, [r7, #24]
 800ac70:	4413      	add	r3, r2
 800ac72:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ac76:	689b      	ldr	r3, [r3, #8]
 800ac78:	613b      	str	r3, [r7, #16]
 800ac7a:	687b      	ldr	r3, [r7, #4]
 800ac7c:	799b      	ldrb	r3, [r3, #6]
 800ac7e:	2b01      	cmp	r3, #1
 800ac80:	d17b      	bne.n	800ad7a <PCD_EP_OutXfrComplete_int+0x12e>
 800ac82:	693b      	ldr	r3, [r7, #16]
 800ac84:	f003 0308 	and.w	r3, r3, #8
 800ac88:	2b00      	cmp	r3, #0
 800ac8a:	d015      	beq.n	800acb8 <PCD_EP_OutXfrComplete_int+0x6c>
 800ac8c:	697b      	ldr	r3, [r7, #20]
 800ac8e:	4a61      	ldr	r2, [pc, #388]	@ (800ae14 <PCD_EP_OutXfrComplete_int+0x1c8>)
 800ac90:	4293      	cmp	r3, r2
 800ac92:	f240 80b9 	bls.w	800ae08 <PCD_EP_OutXfrComplete_int+0x1bc>
 800ac96:	693b      	ldr	r3, [r7, #16]
 800ac98:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800ac9c:	2b00      	cmp	r3, #0
 800ac9e:	f000 80b3 	beq.w	800ae08 <PCD_EP_OutXfrComplete_int+0x1bc>
 800aca2:	683b      	ldr	r3, [r7, #0]
 800aca4:	015a      	lsls	r2, r3, #5
 800aca6:	69bb      	ldr	r3, [r7, #24]
 800aca8:	4413      	add	r3, r2
 800acaa:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800acae:	461a      	mov	r2, r3
 800acb0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800acb4:	6093      	str	r3, [r2, #8]
 800acb6:	e0a7      	b.n	800ae08 <PCD_EP_OutXfrComplete_int+0x1bc>
 800acb8:	693b      	ldr	r3, [r7, #16]
 800acba:	f003 0320 	and.w	r3, r3, #32
 800acbe:	2b00      	cmp	r3, #0
 800acc0:	d009      	beq.n	800acd6 <PCD_EP_OutXfrComplete_int+0x8a>
 800acc2:	683b      	ldr	r3, [r7, #0]
 800acc4:	015a      	lsls	r2, r3, #5
 800acc6:	69bb      	ldr	r3, [r7, #24]
 800acc8:	4413      	add	r3, r2
 800acca:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800acce:	461a      	mov	r2, r3
 800acd0:	2320      	movs	r3, #32
 800acd2:	6093      	str	r3, [r2, #8]
 800acd4:	e098      	b.n	800ae08 <PCD_EP_OutXfrComplete_int+0x1bc>
 800acd6:	693b      	ldr	r3, [r7, #16]
 800acd8:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800acdc:	2b00      	cmp	r3, #0
 800acde:	f040 8093 	bne.w	800ae08 <PCD_EP_OutXfrComplete_int+0x1bc>
 800ace2:	697b      	ldr	r3, [r7, #20]
 800ace4:	4a4b      	ldr	r2, [pc, #300]	@ (800ae14 <PCD_EP_OutXfrComplete_int+0x1c8>)
 800ace6:	4293      	cmp	r3, r2
 800ace8:	d90f      	bls.n	800ad0a <PCD_EP_OutXfrComplete_int+0xbe>
 800acea:	693b      	ldr	r3, [r7, #16]
 800acec:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800acf0:	2b00      	cmp	r3, #0
 800acf2:	d00a      	beq.n	800ad0a <PCD_EP_OutXfrComplete_int+0xbe>
 800acf4:	683b      	ldr	r3, [r7, #0]
 800acf6:	015a      	lsls	r2, r3, #5
 800acf8:	69bb      	ldr	r3, [r7, #24]
 800acfa:	4413      	add	r3, r2
 800acfc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ad00:	461a      	mov	r2, r3
 800ad02:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800ad06:	6093      	str	r3, [r2, #8]
 800ad08:	e07e      	b.n	800ae08 <PCD_EP_OutXfrComplete_int+0x1bc>
 800ad0a:	683a      	ldr	r2, [r7, #0]
 800ad0c:	4613      	mov	r3, r2
 800ad0e:	00db      	lsls	r3, r3, #3
 800ad10:	4413      	add	r3, r2
 800ad12:	009b      	lsls	r3, r3, #2
 800ad14:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800ad18:	687a      	ldr	r2, [r7, #4]
 800ad1a:	4413      	add	r3, r2
 800ad1c:	3304      	adds	r3, #4
 800ad1e:	60fb      	str	r3, [r7, #12]
 800ad20:	68fb      	ldr	r3, [r7, #12]
 800ad22:	6a1a      	ldr	r2, [r3, #32]
 800ad24:	683b      	ldr	r3, [r7, #0]
 800ad26:	0159      	lsls	r1, r3, #5
 800ad28:	69bb      	ldr	r3, [r7, #24]
 800ad2a:	440b      	add	r3, r1
 800ad2c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ad30:	691b      	ldr	r3, [r3, #16]
 800ad32:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800ad36:	1ad2      	subs	r2, r2, r3
 800ad38:	68fb      	ldr	r3, [r7, #12]
 800ad3a:	615a      	str	r2, [r3, #20]
 800ad3c:	683b      	ldr	r3, [r7, #0]
 800ad3e:	2b00      	cmp	r3, #0
 800ad40:	d114      	bne.n	800ad6c <PCD_EP_OutXfrComplete_int+0x120>
 800ad42:	68fb      	ldr	r3, [r7, #12]
 800ad44:	691b      	ldr	r3, [r3, #16]
 800ad46:	2b00      	cmp	r3, #0
 800ad48:	d109      	bne.n	800ad5e <PCD_EP_OutXfrComplete_int+0x112>
 800ad4a:	687b      	ldr	r3, [r7, #4]
 800ad4c:	6818      	ldr	r0, [r3, #0]
 800ad4e:	687b      	ldr	r3, [r7, #4]
 800ad50:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 800ad54:	461a      	mov	r2, r3
 800ad56:	2101      	movs	r1, #1
 800ad58:	f008 f972 	bl	8013040 <USB_EP0_OutStart>
 800ad5c:	e006      	b.n	800ad6c <PCD_EP_OutXfrComplete_int+0x120>
 800ad5e:	68fb      	ldr	r3, [r7, #12]
 800ad60:	68da      	ldr	r2, [r3, #12]
 800ad62:	68fb      	ldr	r3, [r7, #12]
 800ad64:	695b      	ldr	r3, [r3, #20]
 800ad66:	441a      	add	r2, r3
 800ad68:	68fb      	ldr	r3, [r7, #12]
 800ad6a:	60da      	str	r2, [r3, #12]
 800ad6c:	683b      	ldr	r3, [r7, #0]
 800ad6e:	b2db      	uxtb	r3, r3
 800ad70:	4619      	mov	r1, r3
 800ad72:	6878      	ldr	r0, [r7, #4]
 800ad74:	f00a fc58 	bl	8015628 <HAL_PCD_DataOutStageCallback>
 800ad78:	e046      	b.n	800ae08 <PCD_EP_OutXfrComplete_int+0x1bc>
 800ad7a:	697b      	ldr	r3, [r7, #20]
 800ad7c:	4a26      	ldr	r2, [pc, #152]	@ (800ae18 <PCD_EP_OutXfrComplete_int+0x1cc>)
 800ad7e:	4293      	cmp	r3, r2
 800ad80:	d124      	bne.n	800adcc <PCD_EP_OutXfrComplete_int+0x180>
 800ad82:	693b      	ldr	r3, [r7, #16]
 800ad84:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800ad88:	2b00      	cmp	r3, #0
 800ad8a:	d00a      	beq.n	800ada2 <PCD_EP_OutXfrComplete_int+0x156>
 800ad8c:	683b      	ldr	r3, [r7, #0]
 800ad8e:	015a      	lsls	r2, r3, #5
 800ad90:	69bb      	ldr	r3, [r7, #24]
 800ad92:	4413      	add	r3, r2
 800ad94:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ad98:	461a      	mov	r2, r3
 800ad9a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800ad9e:	6093      	str	r3, [r2, #8]
 800ada0:	e032      	b.n	800ae08 <PCD_EP_OutXfrComplete_int+0x1bc>
 800ada2:	693b      	ldr	r3, [r7, #16]
 800ada4:	f003 0320 	and.w	r3, r3, #32
 800ada8:	2b00      	cmp	r3, #0
 800adaa:	d008      	beq.n	800adbe <PCD_EP_OutXfrComplete_int+0x172>
 800adac:	683b      	ldr	r3, [r7, #0]
 800adae:	015a      	lsls	r2, r3, #5
 800adb0:	69bb      	ldr	r3, [r7, #24]
 800adb2:	4413      	add	r3, r2
 800adb4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800adb8:	461a      	mov	r2, r3
 800adba:	2320      	movs	r3, #32
 800adbc:	6093      	str	r3, [r2, #8]
 800adbe:	683b      	ldr	r3, [r7, #0]
 800adc0:	b2db      	uxtb	r3, r3
 800adc2:	4619      	mov	r1, r3
 800adc4:	6878      	ldr	r0, [r7, #4]
 800adc6:	f00a fc2f 	bl	8015628 <HAL_PCD_DataOutStageCallback>
 800adca:	e01d      	b.n	800ae08 <PCD_EP_OutXfrComplete_int+0x1bc>
 800adcc:	683b      	ldr	r3, [r7, #0]
 800adce:	2b00      	cmp	r3, #0
 800add0:	d114      	bne.n	800adfc <PCD_EP_OutXfrComplete_int+0x1b0>
 800add2:	6879      	ldr	r1, [r7, #4]
 800add4:	683a      	ldr	r2, [r7, #0]
 800add6:	4613      	mov	r3, r2
 800add8:	00db      	lsls	r3, r3, #3
 800adda:	4413      	add	r3, r2
 800addc:	009b      	lsls	r3, r3, #2
 800adde:	440b      	add	r3, r1
 800ade0:	f503 7319 	add.w	r3, r3, #612	@ 0x264
 800ade4:	681b      	ldr	r3, [r3, #0]
 800ade6:	2b00      	cmp	r3, #0
 800ade8:	d108      	bne.n	800adfc <PCD_EP_OutXfrComplete_int+0x1b0>
 800adea:	687b      	ldr	r3, [r7, #4]
 800adec:	6818      	ldr	r0, [r3, #0]
 800adee:	687b      	ldr	r3, [r7, #4]
 800adf0:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 800adf4:	461a      	mov	r2, r3
 800adf6:	2100      	movs	r1, #0
 800adf8:	f008 f922 	bl	8013040 <USB_EP0_OutStart>
 800adfc:	683b      	ldr	r3, [r7, #0]
 800adfe:	b2db      	uxtb	r3, r3
 800ae00:	4619      	mov	r1, r3
 800ae02:	6878      	ldr	r0, [r7, #4]
 800ae04:	f00a fc10 	bl	8015628 <HAL_PCD_DataOutStageCallback>
 800ae08:	2300      	movs	r3, #0
 800ae0a:	4618      	mov	r0, r3
 800ae0c:	3720      	adds	r7, #32
 800ae0e:	46bd      	mov	sp, r7
 800ae10:	bd80      	pop	{r7, pc}
 800ae12:	bf00      	nop
 800ae14:	4f54300a 	.word	0x4f54300a
 800ae18:	4f54310a 	.word	0x4f54310a

0800ae1c <PCD_EP_OutSetupPacket_int>:
 800ae1c:	b580      	push	{r7, lr}
 800ae1e:	b086      	sub	sp, #24
 800ae20:	af00      	add	r7, sp, #0
 800ae22:	6078      	str	r0, [r7, #4]
 800ae24:	6039      	str	r1, [r7, #0]
 800ae26:	687b      	ldr	r3, [r7, #4]
 800ae28:	681b      	ldr	r3, [r3, #0]
 800ae2a:	617b      	str	r3, [r7, #20]
 800ae2c:	697b      	ldr	r3, [r7, #20]
 800ae2e:	613b      	str	r3, [r7, #16]
 800ae30:	697b      	ldr	r3, [r7, #20]
 800ae32:	333c      	adds	r3, #60	@ 0x3c
 800ae34:	3304      	adds	r3, #4
 800ae36:	681b      	ldr	r3, [r3, #0]
 800ae38:	60fb      	str	r3, [r7, #12]
 800ae3a:	683b      	ldr	r3, [r7, #0]
 800ae3c:	015a      	lsls	r2, r3, #5
 800ae3e:	693b      	ldr	r3, [r7, #16]
 800ae40:	4413      	add	r3, r2
 800ae42:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ae46:	689b      	ldr	r3, [r3, #8]
 800ae48:	60bb      	str	r3, [r7, #8]
 800ae4a:	68fb      	ldr	r3, [r7, #12]
 800ae4c:	4a15      	ldr	r2, [pc, #84]	@ (800aea4 <PCD_EP_OutSetupPacket_int+0x88>)
 800ae4e:	4293      	cmp	r3, r2
 800ae50:	d90e      	bls.n	800ae70 <PCD_EP_OutSetupPacket_int+0x54>
 800ae52:	68bb      	ldr	r3, [r7, #8]
 800ae54:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800ae58:	2b00      	cmp	r3, #0
 800ae5a:	d009      	beq.n	800ae70 <PCD_EP_OutSetupPacket_int+0x54>
 800ae5c:	683b      	ldr	r3, [r7, #0]
 800ae5e:	015a      	lsls	r2, r3, #5
 800ae60:	693b      	ldr	r3, [r7, #16]
 800ae62:	4413      	add	r3, r2
 800ae64:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ae68:	461a      	mov	r2, r3
 800ae6a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800ae6e:	6093      	str	r3, [r2, #8]
 800ae70:	6878      	ldr	r0, [r7, #4]
 800ae72:	f00a fbc7 	bl	8015604 <HAL_PCD_SetupStageCallback>
 800ae76:	68fb      	ldr	r3, [r7, #12]
 800ae78:	4a0a      	ldr	r2, [pc, #40]	@ (800aea4 <PCD_EP_OutSetupPacket_int+0x88>)
 800ae7a:	4293      	cmp	r3, r2
 800ae7c:	d90c      	bls.n	800ae98 <PCD_EP_OutSetupPacket_int+0x7c>
 800ae7e:	687b      	ldr	r3, [r7, #4]
 800ae80:	799b      	ldrb	r3, [r3, #6]
 800ae82:	2b01      	cmp	r3, #1
 800ae84:	d108      	bne.n	800ae98 <PCD_EP_OutSetupPacket_int+0x7c>
 800ae86:	687b      	ldr	r3, [r7, #4]
 800ae88:	6818      	ldr	r0, [r3, #0]
 800ae8a:	687b      	ldr	r3, [r7, #4]
 800ae8c:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 800ae90:	461a      	mov	r2, r3
 800ae92:	2101      	movs	r1, #1
 800ae94:	f008 f8d4 	bl	8013040 <USB_EP0_OutStart>
 800ae98:	2300      	movs	r3, #0
 800ae9a:	4618      	mov	r0, r3
 800ae9c:	3718      	adds	r7, #24
 800ae9e:	46bd      	mov	sp, r7
 800aea0:	bd80      	pop	{r7, pc}
 800aea2:	bf00      	nop
 800aea4:	4f54300a 	.word	0x4f54300a

0800aea8 <HAL_PCDEx_SetTxFiFo>:
 800aea8:	b480      	push	{r7}
 800aeaa:	b085      	sub	sp, #20
 800aeac:	af00      	add	r7, sp, #0
 800aeae:	6078      	str	r0, [r7, #4]
 800aeb0:	460b      	mov	r3, r1
 800aeb2:	70fb      	strb	r3, [r7, #3]
 800aeb4:	4613      	mov	r3, r2
 800aeb6:	803b      	strh	r3, [r7, #0]
 800aeb8:	687b      	ldr	r3, [r7, #4]
 800aeba:	681b      	ldr	r3, [r3, #0]
 800aebc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800aebe:	60bb      	str	r3, [r7, #8]
 800aec0:	78fb      	ldrb	r3, [r7, #3]
 800aec2:	2b00      	cmp	r3, #0
 800aec4:	d107      	bne.n	800aed6 <HAL_PCDEx_SetTxFiFo+0x2e>
 800aec6:	883b      	ldrh	r3, [r7, #0]
 800aec8:	0419      	lsls	r1, r3, #16
 800aeca:	687b      	ldr	r3, [r7, #4]
 800aecc:	681b      	ldr	r3, [r3, #0]
 800aece:	68ba      	ldr	r2, [r7, #8]
 800aed0:	430a      	orrs	r2, r1
 800aed2:	629a      	str	r2, [r3, #40]	@ 0x28
 800aed4:	e028      	b.n	800af28 <HAL_PCDEx_SetTxFiFo+0x80>
 800aed6:	687b      	ldr	r3, [r7, #4]
 800aed8:	681b      	ldr	r3, [r3, #0]
 800aeda:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800aedc:	0c1b      	lsrs	r3, r3, #16
 800aede:	68ba      	ldr	r2, [r7, #8]
 800aee0:	4413      	add	r3, r2
 800aee2:	60bb      	str	r3, [r7, #8]
 800aee4:	2300      	movs	r3, #0
 800aee6:	73fb      	strb	r3, [r7, #15]
 800aee8:	e00d      	b.n	800af06 <HAL_PCDEx_SetTxFiFo+0x5e>
 800aeea:	687b      	ldr	r3, [r7, #4]
 800aeec:	681a      	ldr	r2, [r3, #0]
 800aeee:	7bfb      	ldrb	r3, [r7, #15]
 800aef0:	3340      	adds	r3, #64	@ 0x40
 800aef2:	009b      	lsls	r3, r3, #2
 800aef4:	4413      	add	r3, r2
 800aef6:	685b      	ldr	r3, [r3, #4]
 800aef8:	0c1b      	lsrs	r3, r3, #16
 800aefa:	68ba      	ldr	r2, [r7, #8]
 800aefc:	4413      	add	r3, r2
 800aefe:	60bb      	str	r3, [r7, #8]
 800af00:	7bfb      	ldrb	r3, [r7, #15]
 800af02:	3301      	adds	r3, #1
 800af04:	73fb      	strb	r3, [r7, #15]
 800af06:	7bfa      	ldrb	r2, [r7, #15]
 800af08:	78fb      	ldrb	r3, [r7, #3]
 800af0a:	3b01      	subs	r3, #1
 800af0c:	429a      	cmp	r2, r3
 800af0e:	d3ec      	bcc.n	800aeea <HAL_PCDEx_SetTxFiFo+0x42>
 800af10:	883b      	ldrh	r3, [r7, #0]
 800af12:	0418      	lsls	r0, r3, #16
 800af14:	687b      	ldr	r3, [r7, #4]
 800af16:	6819      	ldr	r1, [r3, #0]
 800af18:	78fb      	ldrb	r3, [r7, #3]
 800af1a:	3b01      	subs	r3, #1
 800af1c:	68ba      	ldr	r2, [r7, #8]
 800af1e:	4302      	orrs	r2, r0
 800af20:	3340      	adds	r3, #64	@ 0x40
 800af22:	009b      	lsls	r3, r3, #2
 800af24:	440b      	add	r3, r1
 800af26:	605a      	str	r2, [r3, #4]
 800af28:	2300      	movs	r3, #0
 800af2a:	4618      	mov	r0, r3
 800af2c:	3714      	adds	r7, #20
 800af2e:	46bd      	mov	sp, r7
 800af30:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af34:	4770      	bx	lr

0800af36 <HAL_PCDEx_SetRxFiFo>:
 800af36:	b480      	push	{r7}
 800af38:	b083      	sub	sp, #12
 800af3a:	af00      	add	r7, sp, #0
 800af3c:	6078      	str	r0, [r7, #4]
 800af3e:	460b      	mov	r3, r1
 800af40:	807b      	strh	r3, [r7, #2]
 800af42:	687b      	ldr	r3, [r7, #4]
 800af44:	681b      	ldr	r3, [r3, #0]
 800af46:	887a      	ldrh	r2, [r7, #2]
 800af48:	625a      	str	r2, [r3, #36]	@ 0x24
 800af4a:	2300      	movs	r3, #0
 800af4c:	4618      	mov	r0, r3
 800af4e:	370c      	adds	r7, #12
 800af50:	46bd      	mov	sp, r7
 800af52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af56:	4770      	bx	lr

0800af58 <HAL_PCDEx_ActivateLPM>:
 800af58:	b480      	push	{r7}
 800af5a:	b085      	sub	sp, #20
 800af5c:	af00      	add	r7, sp, #0
 800af5e:	6078      	str	r0, [r7, #4]
 800af60:	687b      	ldr	r3, [r7, #4]
 800af62:	681b      	ldr	r3, [r3, #0]
 800af64:	60fb      	str	r3, [r7, #12]
 800af66:	687b      	ldr	r3, [r7, #4]
 800af68:	2201      	movs	r2, #1
 800af6a:	f8c3 24d8 	str.w	r2, [r3, #1240]	@ 0x4d8
 800af6e:	687b      	ldr	r3, [r7, #4]
 800af70:	2200      	movs	r2, #0
 800af72:	f883 24cc 	strb.w	r2, [r3, #1228]	@ 0x4cc
 800af76:	68fb      	ldr	r3, [r7, #12]
 800af78:	699b      	ldr	r3, [r3, #24]
 800af7a:	f043 6200 	orr.w	r2, r3, #134217728	@ 0x8000000
 800af7e:	68fb      	ldr	r3, [r7, #12]
 800af80:	619a      	str	r2, [r3, #24]
 800af82:	68fb      	ldr	r3, [r7, #12]
 800af84:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800af86:	4b05      	ldr	r3, [pc, #20]	@ (800af9c <HAL_PCDEx_ActivateLPM+0x44>)
 800af88:	4313      	orrs	r3, r2
 800af8a:	68fa      	ldr	r2, [r7, #12]
 800af8c:	6553      	str	r3, [r2, #84]	@ 0x54
 800af8e:	2300      	movs	r3, #0
 800af90:	4618      	mov	r0, r3
 800af92:	3714      	adds	r7, #20
 800af94:	46bd      	mov	sp, r7
 800af96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af9a:	4770      	bx	lr
 800af9c:	10000003 	.word	0x10000003

0800afa0 <HAL_PCDEx_LPM_Callback>:
 800afa0:	b480      	push	{r7}
 800afa2:	b083      	sub	sp, #12
 800afa4:	af00      	add	r7, sp, #0
 800afa6:	6078      	str	r0, [r7, #4]
 800afa8:	460b      	mov	r3, r1
 800afaa:	70fb      	strb	r3, [r7, #3]
 800afac:	bf00      	nop
 800afae:	370c      	adds	r7, #12
 800afb0:	46bd      	mov	sp, r7
 800afb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afb6:	4770      	bx	lr

0800afb8 <HAL_PWREx_ConfigSupply>:
 800afb8:	b580      	push	{r7, lr}
 800afba:	b084      	sub	sp, #16
 800afbc:	af00      	add	r7, sp, #0
 800afbe:	6078      	str	r0, [r7, #4]
 800afc0:	4b19      	ldr	r3, [pc, #100]	@ (800b028 <HAL_PWREx_ConfigSupply+0x70>)
 800afc2:	68db      	ldr	r3, [r3, #12]
 800afc4:	f003 0304 	and.w	r3, r3, #4
 800afc8:	2b04      	cmp	r3, #4
 800afca:	d00a      	beq.n	800afe2 <HAL_PWREx_ConfigSupply+0x2a>
 800afcc:	4b16      	ldr	r3, [pc, #88]	@ (800b028 <HAL_PWREx_ConfigSupply+0x70>)
 800afce:	68db      	ldr	r3, [r3, #12]
 800afd0:	f003 0307 	and.w	r3, r3, #7
 800afd4:	687a      	ldr	r2, [r7, #4]
 800afd6:	429a      	cmp	r2, r3
 800afd8:	d001      	beq.n	800afde <HAL_PWREx_ConfigSupply+0x26>
 800afda:	2301      	movs	r3, #1
 800afdc:	e01f      	b.n	800b01e <HAL_PWREx_ConfigSupply+0x66>
 800afde:	2300      	movs	r3, #0
 800afe0:	e01d      	b.n	800b01e <HAL_PWREx_ConfigSupply+0x66>
 800afe2:	4b11      	ldr	r3, [pc, #68]	@ (800b028 <HAL_PWREx_ConfigSupply+0x70>)
 800afe4:	68db      	ldr	r3, [r3, #12]
 800afe6:	f023 0207 	bic.w	r2, r3, #7
 800afea:	490f      	ldr	r1, [pc, #60]	@ (800b028 <HAL_PWREx_ConfigSupply+0x70>)
 800afec:	687b      	ldr	r3, [r7, #4]
 800afee:	4313      	orrs	r3, r2
 800aff0:	60cb      	str	r3, [r1, #12]
 800aff2:	f7fa f97d 	bl	80052f0 <HAL_GetTick>
 800aff6:	60f8      	str	r0, [r7, #12]
 800aff8:	e009      	b.n	800b00e <HAL_PWREx_ConfigSupply+0x56>
 800affa:	f7fa f979 	bl	80052f0 <HAL_GetTick>
 800affe:	4602      	mov	r2, r0
 800b000:	68fb      	ldr	r3, [r7, #12]
 800b002:	1ad3      	subs	r3, r2, r3
 800b004:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800b008:	d901      	bls.n	800b00e <HAL_PWREx_ConfigSupply+0x56>
 800b00a:	2301      	movs	r3, #1
 800b00c:	e007      	b.n	800b01e <HAL_PWREx_ConfigSupply+0x66>
 800b00e:	4b06      	ldr	r3, [pc, #24]	@ (800b028 <HAL_PWREx_ConfigSupply+0x70>)
 800b010:	685b      	ldr	r3, [r3, #4]
 800b012:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800b016:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800b01a:	d1ee      	bne.n	800affa <HAL_PWREx_ConfigSupply+0x42>
 800b01c:	2300      	movs	r3, #0
 800b01e:	4618      	mov	r0, r3
 800b020:	3710      	adds	r7, #16
 800b022:	46bd      	mov	sp, r7
 800b024:	bd80      	pop	{r7, pc}
 800b026:	bf00      	nop
 800b028:	58024800 	.word	0x58024800

0800b02c <HAL_PWREx_EnableUSBVoltageDetector>:
 800b02c:	b480      	push	{r7}
 800b02e:	af00      	add	r7, sp, #0
 800b030:	4b05      	ldr	r3, [pc, #20]	@ (800b048 <HAL_PWREx_EnableUSBVoltageDetector+0x1c>)
 800b032:	68db      	ldr	r3, [r3, #12]
 800b034:	4a04      	ldr	r2, [pc, #16]	@ (800b048 <HAL_PWREx_EnableUSBVoltageDetector+0x1c>)
 800b036:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800b03a:	60d3      	str	r3, [r2, #12]
 800b03c:	bf00      	nop
 800b03e:	46bd      	mov	sp, r7
 800b040:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b044:	4770      	bx	lr
 800b046:	bf00      	nop
 800b048:	58024800 	.word	0x58024800

0800b04c <HAL_RCC_OscConfig>:
 800b04c:	b580      	push	{r7, lr}
 800b04e:	b08c      	sub	sp, #48	@ 0x30
 800b050:	af00      	add	r7, sp, #0
 800b052:	6078      	str	r0, [r7, #4]
 800b054:	687b      	ldr	r3, [r7, #4]
 800b056:	2b00      	cmp	r3, #0
 800b058:	d101      	bne.n	800b05e <HAL_RCC_OscConfig+0x12>
 800b05a:	2301      	movs	r3, #1
 800b05c:	e3c8      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b05e:	687b      	ldr	r3, [r7, #4]
 800b060:	681b      	ldr	r3, [r3, #0]
 800b062:	f003 0301 	and.w	r3, r3, #1
 800b066:	2b00      	cmp	r3, #0
 800b068:	f000 8087 	beq.w	800b17a <HAL_RCC_OscConfig+0x12e>
 800b06c:	4b88      	ldr	r3, [pc, #544]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b06e:	691b      	ldr	r3, [r3, #16]
 800b070:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800b074:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800b076:	4b86      	ldr	r3, [pc, #536]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b078:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b07a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b07c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800b07e:	2b10      	cmp	r3, #16
 800b080:	d007      	beq.n	800b092 <HAL_RCC_OscConfig+0x46>
 800b082:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800b084:	2b18      	cmp	r3, #24
 800b086:	d110      	bne.n	800b0aa <HAL_RCC_OscConfig+0x5e>
 800b088:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b08a:	f003 0303 	and.w	r3, r3, #3
 800b08e:	2b02      	cmp	r3, #2
 800b090:	d10b      	bne.n	800b0aa <HAL_RCC_OscConfig+0x5e>
 800b092:	4b7f      	ldr	r3, [pc, #508]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b094:	681b      	ldr	r3, [r3, #0]
 800b096:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800b09a:	2b00      	cmp	r3, #0
 800b09c:	d06c      	beq.n	800b178 <HAL_RCC_OscConfig+0x12c>
 800b09e:	687b      	ldr	r3, [r7, #4]
 800b0a0:	685b      	ldr	r3, [r3, #4]
 800b0a2:	2b00      	cmp	r3, #0
 800b0a4:	d168      	bne.n	800b178 <HAL_RCC_OscConfig+0x12c>
 800b0a6:	2301      	movs	r3, #1
 800b0a8:	e3a2      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b0aa:	687b      	ldr	r3, [r7, #4]
 800b0ac:	685b      	ldr	r3, [r3, #4]
 800b0ae:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800b0b2:	d106      	bne.n	800b0c2 <HAL_RCC_OscConfig+0x76>
 800b0b4:	4b76      	ldr	r3, [pc, #472]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b0b6:	681b      	ldr	r3, [r3, #0]
 800b0b8:	4a75      	ldr	r2, [pc, #468]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b0ba:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800b0be:	6013      	str	r3, [r2, #0]
 800b0c0:	e02e      	b.n	800b120 <HAL_RCC_OscConfig+0xd4>
 800b0c2:	687b      	ldr	r3, [r7, #4]
 800b0c4:	685b      	ldr	r3, [r3, #4]
 800b0c6:	2b00      	cmp	r3, #0
 800b0c8:	d10c      	bne.n	800b0e4 <HAL_RCC_OscConfig+0x98>
 800b0ca:	4b71      	ldr	r3, [pc, #452]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b0cc:	681b      	ldr	r3, [r3, #0]
 800b0ce:	4a70      	ldr	r2, [pc, #448]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b0d0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800b0d4:	6013      	str	r3, [r2, #0]
 800b0d6:	4b6e      	ldr	r3, [pc, #440]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b0d8:	681b      	ldr	r3, [r3, #0]
 800b0da:	4a6d      	ldr	r2, [pc, #436]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b0dc:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800b0e0:	6013      	str	r3, [r2, #0]
 800b0e2:	e01d      	b.n	800b120 <HAL_RCC_OscConfig+0xd4>
 800b0e4:	687b      	ldr	r3, [r7, #4]
 800b0e6:	685b      	ldr	r3, [r3, #4]
 800b0e8:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800b0ec:	d10c      	bne.n	800b108 <HAL_RCC_OscConfig+0xbc>
 800b0ee:	4b68      	ldr	r3, [pc, #416]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b0f0:	681b      	ldr	r3, [r3, #0]
 800b0f2:	4a67      	ldr	r2, [pc, #412]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b0f4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800b0f8:	6013      	str	r3, [r2, #0]
 800b0fa:	4b65      	ldr	r3, [pc, #404]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b0fc:	681b      	ldr	r3, [r3, #0]
 800b0fe:	4a64      	ldr	r2, [pc, #400]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b100:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800b104:	6013      	str	r3, [r2, #0]
 800b106:	e00b      	b.n	800b120 <HAL_RCC_OscConfig+0xd4>
 800b108:	4b61      	ldr	r3, [pc, #388]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b10a:	681b      	ldr	r3, [r3, #0]
 800b10c:	4a60      	ldr	r2, [pc, #384]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b10e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800b112:	6013      	str	r3, [r2, #0]
 800b114:	4b5e      	ldr	r3, [pc, #376]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b116:	681b      	ldr	r3, [r3, #0]
 800b118:	4a5d      	ldr	r2, [pc, #372]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b11a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800b11e:	6013      	str	r3, [r2, #0]
 800b120:	687b      	ldr	r3, [r7, #4]
 800b122:	685b      	ldr	r3, [r3, #4]
 800b124:	2b00      	cmp	r3, #0
 800b126:	d013      	beq.n	800b150 <HAL_RCC_OscConfig+0x104>
 800b128:	f7fa f8e2 	bl	80052f0 <HAL_GetTick>
 800b12c:	6278      	str	r0, [r7, #36]	@ 0x24
 800b12e:	e008      	b.n	800b142 <HAL_RCC_OscConfig+0xf6>
 800b130:	f7fa f8de 	bl	80052f0 <HAL_GetTick>
 800b134:	4602      	mov	r2, r0
 800b136:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b138:	1ad3      	subs	r3, r2, r3
 800b13a:	2b64      	cmp	r3, #100	@ 0x64
 800b13c:	d901      	bls.n	800b142 <HAL_RCC_OscConfig+0xf6>
 800b13e:	2303      	movs	r3, #3
 800b140:	e356      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b142:	4b53      	ldr	r3, [pc, #332]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b144:	681b      	ldr	r3, [r3, #0]
 800b146:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800b14a:	2b00      	cmp	r3, #0
 800b14c:	d0f0      	beq.n	800b130 <HAL_RCC_OscConfig+0xe4>
 800b14e:	e014      	b.n	800b17a <HAL_RCC_OscConfig+0x12e>
 800b150:	f7fa f8ce 	bl	80052f0 <HAL_GetTick>
 800b154:	6278      	str	r0, [r7, #36]	@ 0x24
 800b156:	e008      	b.n	800b16a <HAL_RCC_OscConfig+0x11e>
 800b158:	f7fa f8ca 	bl	80052f0 <HAL_GetTick>
 800b15c:	4602      	mov	r2, r0
 800b15e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b160:	1ad3      	subs	r3, r2, r3
 800b162:	2b64      	cmp	r3, #100	@ 0x64
 800b164:	d901      	bls.n	800b16a <HAL_RCC_OscConfig+0x11e>
 800b166:	2303      	movs	r3, #3
 800b168:	e342      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b16a:	4b49      	ldr	r3, [pc, #292]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b16c:	681b      	ldr	r3, [r3, #0]
 800b16e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800b172:	2b00      	cmp	r3, #0
 800b174:	d1f0      	bne.n	800b158 <HAL_RCC_OscConfig+0x10c>
 800b176:	e000      	b.n	800b17a <HAL_RCC_OscConfig+0x12e>
 800b178:	bf00      	nop
 800b17a:	687b      	ldr	r3, [r7, #4]
 800b17c:	681b      	ldr	r3, [r3, #0]
 800b17e:	f003 0302 	and.w	r3, r3, #2
 800b182:	2b00      	cmp	r3, #0
 800b184:	f000 808c 	beq.w	800b2a0 <HAL_RCC_OscConfig+0x254>
 800b188:	4b41      	ldr	r3, [pc, #260]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b18a:	691b      	ldr	r3, [r3, #16]
 800b18c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800b190:	623b      	str	r3, [r7, #32]
 800b192:	4b3f      	ldr	r3, [pc, #252]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b194:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b196:	61fb      	str	r3, [r7, #28]
 800b198:	6a3b      	ldr	r3, [r7, #32]
 800b19a:	2b00      	cmp	r3, #0
 800b19c:	d007      	beq.n	800b1ae <HAL_RCC_OscConfig+0x162>
 800b19e:	6a3b      	ldr	r3, [r7, #32]
 800b1a0:	2b18      	cmp	r3, #24
 800b1a2:	d137      	bne.n	800b214 <HAL_RCC_OscConfig+0x1c8>
 800b1a4:	69fb      	ldr	r3, [r7, #28]
 800b1a6:	f003 0303 	and.w	r3, r3, #3
 800b1aa:	2b00      	cmp	r3, #0
 800b1ac:	d132      	bne.n	800b214 <HAL_RCC_OscConfig+0x1c8>
 800b1ae:	4b38      	ldr	r3, [pc, #224]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b1b0:	681b      	ldr	r3, [r3, #0]
 800b1b2:	f003 0304 	and.w	r3, r3, #4
 800b1b6:	2b00      	cmp	r3, #0
 800b1b8:	d005      	beq.n	800b1c6 <HAL_RCC_OscConfig+0x17a>
 800b1ba:	687b      	ldr	r3, [r7, #4]
 800b1bc:	68db      	ldr	r3, [r3, #12]
 800b1be:	2b00      	cmp	r3, #0
 800b1c0:	d101      	bne.n	800b1c6 <HAL_RCC_OscConfig+0x17a>
 800b1c2:	2301      	movs	r3, #1
 800b1c4:	e314      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b1c6:	4b32      	ldr	r3, [pc, #200]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b1c8:	681b      	ldr	r3, [r3, #0]
 800b1ca:	f023 0219 	bic.w	r2, r3, #25
 800b1ce:	687b      	ldr	r3, [r7, #4]
 800b1d0:	68db      	ldr	r3, [r3, #12]
 800b1d2:	492f      	ldr	r1, [pc, #188]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b1d4:	4313      	orrs	r3, r2
 800b1d6:	600b      	str	r3, [r1, #0]
 800b1d8:	f7fa f88a 	bl	80052f0 <HAL_GetTick>
 800b1dc:	6278      	str	r0, [r7, #36]	@ 0x24
 800b1de:	e008      	b.n	800b1f2 <HAL_RCC_OscConfig+0x1a6>
 800b1e0:	f7fa f886 	bl	80052f0 <HAL_GetTick>
 800b1e4:	4602      	mov	r2, r0
 800b1e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b1e8:	1ad3      	subs	r3, r2, r3
 800b1ea:	2b02      	cmp	r3, #2
 800b1ec:	d901      	bls.n	800b1f2 <HAL_RCC_OscConfig+0x1a6>
 800b1ee:	2303      	movs	r3, #3
 800b1f0:	e2fe      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b1f2:	4b27      	ldr	r3, [pc, #156]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b1f4:	681b      	ldr	r3, [r3, #0]
 800b1f6:	f003 0304 	and.w	r3, r3, #4
 800b1fa:	2b00      	cmp	r3, #0
 800b1fc:	d0f0      	beq.n	800b1e0 <HAL_RCC_OscConfig+0x194>
 800b1fe:	4b24      	ldr	r3, [pc, #144]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b200:	685b      	ldr	r3, [r3, #4]
 800b202:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 800b206:	687b      	ldr	r3, [r7, #4]
 800b208:	691b      	ldr	r3, [r3, #16]
 800b20a:	061b      	lsls	r3, r3, #24
 800b20c:	4920      	ldr	r1, [pc, #128]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b20e:	4313      	orrs	r3, r2
 800b210:	604b      	str	r3, [r1, #4]
 800b212:	e045      	b.n	800b2a0 <HAL_RCC_OscConfig+0x254>
 800b214:	687b      	ldr	r3, [r7, #4]
 800b216:	68db      	ldr	r3, [r3, #12]
 800b218:	2b00      	cmp	r3, #0
 800b21a:	d026      	beq.n	800b26a <HAL_RCC_OscConfig+0x21e>
 800b21c:	4b1c      	ldr	r3, [pc, #112]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b21e:	681b      	ldr	r3, [r3, #0]
 800b220:	f023 0219 	bic.w	r2, r3, #25
 800b224:	687b      	ldr	r3, [r7, #4]
 800b226:	68db      	ldr	r3, [r3, #12]
 800b228:	4919      	ldr	r1, [pc, #100]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b22a:	4313      	orrs	r3, r2
 800b22c:	600b      	str	r3, [r1, #0]
 800b22e:	f7fa f85f 	bl	80052f0 <HAL_GetTick>
 800b232:	6278      	str	r0, [r7, #36]	@ 0x24
 800b234:	e008      	b.n	800b248 <HAL_RCC_OscConfig+0x1fc>
 800b236:	f7fa f85b 	bl	80052f0 <HAL_GetTick>
 800b23a:	4602      	mov	r2, r0
 800b23c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b23e:	1ad3      	subs	r3, r2, r3
 800b240:	2b02      	cmp	r3, #2
 800b242:	d901      	bls.n	800b248 <HAL_RCC_OscConfig+0x1fc>
 800b244:	2303      	movs	r3, #3
 800b246:	e2d3      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b248:	4b11      	ldr	r3, [pc, #68]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b24a:	681b      	ldr	r3, [r3, #0]
 800b24c:	f003 0304 	and.w	r3, r3, #4
 800b250:	2b00      	cmp	r3, #0
 800b252:	d0f0      	beq.n	800b236 <HAL_RCC_OscConfig+0x1ea>
 800b254:	4b0e      	ldr	r3, [pc, #56]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b256:	685b      	ldr	r3, [r3, #4]
 800b258:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 800b25c:	687b      	ldr	r3, [r7, #4]
 800b25e:	691b      	ldr	r3, [r3, #16]
 800b260:	061b      	lsls	r3, r3, #24
 800b262:	490b      	ldr	r1, [pc, #44]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b264:	4313      	orrs	r3, r2
 800b266:	604b      	str	r3, [r1, #4]
 800b268:	e01a      	b.n	800b2a0 <HAL_RCC_OscConfig+0x254>
 800b26a:	4b09      	ldr	r3, [pc, #36]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b26c:	681b      	ldr	r3, [r3, #0]
 800b26e:	4a08      	ldr	r2, [pc, #32]	@ (800b290 <HAL_RCC_OscConfig+0x244>)
 800b270:	f023 0301 	bic.w	r3, r3, #1
 800b274:	6013      	str	r3, [r2, #0]
 800b276:	f7fa f83b 	bl	80052f0 <HAL_GetTick>
 800b27a:	6278      	str	r0, [r7, #36]	@ 0x24
 800b27c:	e00a      	b.n	800b294 <HAL_RCC_OscConfig+0x248>
 800b27e:	f7fa f837 	bl	80052f0 <HAL_GetTick>
 800b282:	4602      	mov	r2, r0
 800b284:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b286:	1ad3      	subs	r3, r2, r3
 800b288:	2b02      	cmp	r3, #2
 800b28a:	d903      	bls.n	800b294 <HAL_RCC_OscConfig+0x248>
 800b28c:	2303      	movs	r3, #3
 800b28e:	e2af      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b290:	58024400 	.word	0x58024400
 800b294:	4b96      	ldr	r3, [pc, #600]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b296:	681b      	ldr	r3, [r3, #0]
 800b298:	f003 0304 	and.w	r3, r3, #4
 800b29c:	2b00      	cmp	r3, #0
 800b29e:	d1ee      	bne.n	800b27e <HAL_RCC_OscConfig+0x232>
 800b2a0:	687b      	ldr	r3, [r7, #4]
 800b2a2:	681b      	ldr	r3, [r3, #0]
 800b2a4:	f003 0310 	and.w	r3, r3, #16
 800b2a8:	2b00      	cmp	r3, #0
 800b2aa:	d06a      	beq.n	800b382 <HAL_RCC_OscConfig+0x336>
 800b2ac:	4b90      	ldr	r3, [pc, #576]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b2ae:	691b      	ldr	r3, [r3, #16]
 800b2b0:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800b2b4:	61bb      	str	r3, [r7, #24]
 800b2b6:	4b8e      	ldr	r3, [pc, #568]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b2b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b2ba:	617b      	str	r3, [r7, #20]
 800b2bc:	69bb      	ldr	r3, [r7, #24]
 800b2be:	2b08      	cmp	r3, #8
 800b2c0:	d007      	beq.n	800b2d2 <HAL_RCC_OscConfig+0x286>
 800b2c2:	69bb      	ldr	r3, [r7, #24]
 800b2c4:	2b18      	cmp	r3, #24
 800b2c6:	d11b      	bne.n	800b300 <HAL_RCC_OscConfig+0x2b4>
 800b2c8:	697b      	ldr	r3, [r7, #20]
 800b2ca:	f003 0303 	and.w	r3, r3, #3
 800b2ce:	2b01      	cmp	r3, #1
 800b2d0:	d116      	bne.n	800b300 <HAL_RCC_OscConfig+0x2b4>
 800b2d2:	4b87      	ldr	r3, [pc, #540]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b2d4:	681b      	ldr	r3, [r3, #0]
 800b2d6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800b2da:	2b00      	cmp	r3, #0
 800b2dc:	d005      	beq.n	800b2ea <HAL_RCC_OscConfig+0x29e>
 800b2de:	687b      	ldr	r3, [r7, #4]
 800b2e0:	69db      	ldr	r3, [r3, #28]
 800b2e2:	2b80      	cmp	r3, #128	@ 0x80
 800b2e4:	d001      	beq.n	800b2ea <HAL_RCC_OscConfig+0x29e>
 800b2e6:	2301      	movs	r3, #1
 800b2e8:	e282      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b2ea:	4b81      	ldr	r3, [pc, #516]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b2ec:	68db      	ldr	r3, [r3, #12]
 800b2ee:	f023 527c 	bic.w	r2, r3, #1056964608	@ 0x3f000000
 800b2f2:	687b      	ldr	r3, [r7, #4]
 800b2f4:	6a1b      	ldr	r3, [r3, #32]
 800b2f6:	061b      	lsls	r3, r3, #24
 800b2f8:	497d      	ldr	r1, [pc, #500]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b2fa:	4313      	orrs	r3, r2
 800b2fc:	60cb      	str	r3, [r1, #12]
 800b2fe:	e040      	b.n	800b382 <HAL_RCC_OscConfig+0x336>
 800b300:	687b      	ldr	r3, [r7, #4]
 800b302:	69db      	ldr	r3, [r3, #28]
 800b304:	2b00      	cmp	r3, #0
 800b306:	d023      	beq.n	800b350 <HAL_RCC_OscConfig+0x304>
 800b308:	4b79      	ldr	r3, [pc, #484]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b30a:	681b      	ldr	r3, [r3, #0]
 800b30c:	4a78      	ldr	r2, [pc, #480]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b30e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800b312:	6013      	str	r3, [r2, #0]
 800b314:	f7f9 ffec 	bl	80052f0 <HAL_GetTick>
 800b318:	6278      	str	r0, [r7, #36]	@ 0x24
 800b31a:	e008      	b.n	800b32e <HAL_RCC_OscConfig+0x2e2>
 800b31c:	f7f9 ffe8 	bl	80052f0 <HAL_GetTick>
 800b320:	4602      	mov	r2, r0
 800b322:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b324:	1ad3      	subs	r3, r2, r3
 800b326:	2b02      	cmp	r3, #2
 800b328:	d901      	bls.n	800b32e <HAL_RCC_OscConfig+0x2e2>
 800b32a:	2303      	movs	r3, #3
 800b32c:	e260      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b32e:	4b70      	ldr	r3, [pc, #448]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b330:	681b      	ldr	r3, [r3, #0]
 800b332:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800b336:	2b00      	cmp	r3, #0
 800b338:	d0f0      	beq.n	800b31c <HAL_RCC_OscConfig+0x2d0>
 800b33a:	4b6d      	ldr	r3, [pc, #436]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b33c:	68db      	ldr	r3, [r3, #12]
 800b33e:	f023 527c 	bic.w	r2, r3, #1056964608	@ 0x3f000000
 800b342:	687b      	ldr	r3, [r7, #4]
 800b344:	6a1b      	ldr	r3, [r3, #32]
 800b346:	061b      	lsls	r3, r3, #24
 800b348:	4969      	ldr	r1, [pc, #420]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b34a:	4313      	orrs	r3, r2
 800b34c:	60cb      	str	r3, [r1, #12]
 800b34e:	e018      	b.n	800b382 <HAL_RCC_OscConfig+0x336>
 800b350:	4b67      	ldr	r3, [pc, #412]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b352:	681b      	ldr	r3, [r3, #0]
 800b354:	4a66      	ldr	r2, [pc, #408]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b356:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800b35a:	6013      	str	r3, [r2, #0]
 800b35c:	f7f9 ffc8 	bl	80052f0 <HAL_GetTick>
 800b360:	6278      	str	r0, [r7, #36]	@ 0x24
 800b362:	e008      	b.n	800b376 <HAL_RCC_OscConfig+0x32a>
 800b364:	f7f9 ffc4 	bl	80052f0 <HAL_GetTick>
 800b368:	4602      	mov	r2, r0
 800b36a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b36c:	1ad3      	subs	r3, r2, r3
 800b36e:	2b02      	cmp	r3, #2
 800b370:	d901      	bls.n	800b376 <HAL_RCC_OscConfig+0x32a>
 800b372:	2303      	movs	r3, #3
 800b374:	e23c      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b376:	4b5e      	ldr	r3, [pc, #376]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b378:	681b      	ldr	r3, [r3, #0]
 800b37a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800b37e:	2b00      	cmp	r3, #0
 800b380:	d1f0      	bne.n	800b364 <HAL_RCC_OscConfig+0x318>
 800b382:	687b      	ldr	r3, [r7, #4]
 800b384:	681b      	ldr	r3, [r3, #0]
 800b386:	f003 0308 	and.w	r3, r3, #8
 800b38a:	2b00      	cmp	r3, #0
 800b38c:	d036      	beq.n	800b3fc <HAL_RCC_OscConfig+0x3b0>
 800b38e:	687b      	ldr	r3, [r7, #4]
 800b390:	695b      	ldr	r3, [r3, #20]
 800b392:	2b00      	cmp	r3, #0
 800b394:	d019      	beq.n	800b3ca <HAL_RCC_OscConfig+0x37e>
 800b396:	4b56      	ldr	r3, [pc, #344]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b398:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800b39a:	4a55      	ldr	r2, [pc, #340]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b39c:	f043 0301 	orr.w	r3, r3, #1
 800b3a0:	6753      	str	r3, [r2, #116]	@ 0x74
 800b3a2:	f7f9 ffa5 	bl	80052f0 <HAL_GetTick>
 800b3a6:	6278      	str	r0, [r7, #36]	@ 0x24
 800b3a8:	e008      	b.n	800b3bc <HAL_RCC_OscConfig+0x370>
 800b3aa:	f7f9 ffa1 	bl	80052f0 <HAL_GetTick>
 800b3ae:	4602      	mov	r2, r0
 800b3b0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b3b2:	1ad3      	subs	r3, r2, r3
 800b3b4:	2b02      	cmp	r3, #2
 800b3b6:	d901      	bls.n	800b3bc <HAL_RCC_OscConfig+0x370>
 800b3b8:	2303      	movs	r3, #3
 800b3ba:	e219      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b3bc:	4b4c      	ldr	r3, [pc, #304]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b3be:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800b3c0:	f003 0302 	and.w	r3, r3, #2
 800b3c4:	2b00      	cmp	r3, #0
 800b3c6:	d0f0      	beq.n	800b3aa <HAL_RCC_OscConfig+0x35e>
 800b3c8:	e018      	b.n	800b3fc <HAL_RCC_OscConfig+0x3b0>
 800b3ca:	4b49      	ldr	r3, [pc, #292]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b3cc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800b3ce:	4a48      	ldr	r2, [pc, #288]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b3d0:	f023 0301 	bic.w	r3, r3, #1
 800b3d4:	6753      	str	r3, [r2, #116]	@ 0x74
 800b3d6:	f7f9 ff8b 	bl	80052f0 <HAL_GetTick>
 800b3da:	6278      	str	r0, [r7, #36]	@ 0x24
 800b3dc:	e008      	b.n	800b3f0 <HAL_RCC_OscConfig+0x3a4>
 800b3de:	f7f9 ff87 	bl	80052f0 <HAL_GetTick>
 800b3e2:	4602      	mov	r2, r0
 800b3e4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b3e6:	1ad3      	subs	r3, r2, r3
 800b3e8:	2b02      	cmp	r3, #2
 800b3ea:	d901      	bls.n	800b3f0 <HAL_RCC_OscConfig+0x3a4>
 800b3ec:	2303      	movs	r3, #3
 800b3ee:	e1ff      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b3f0:	4b3f      	ldr	r3, [pc, #252]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b3f2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800b3f4:	f003 0302 	and.w	r3, r3, #2
 800b3f8:	2b00      	cmp	r3, #0
 800b3fa:	d1f0      	bne.n	800b3de <HAL_RCC_OscConfig+0x392>
 800b3fc:	687b      	ldr	r3, [r7, #4]
 800b3fe:	681b      	ldr	r3, [r3, #0]
 800b400:	f003 0320 	and.w	r3, r3, #32
 800b404:	2b00      	cmp	r3, #0
 800b406:	d036      	beq.n	800b476 <HAL_RCC_OscConfig+0x42a>
 800b408:	687b      	ldr	r3, [r7, #4]
 800b40a:	699b      	ldr	r3, [r3, #24]
 800b40c:	2b00      	cmp	r3, #0
 800b40e:	d019      	beq.n	800b444 <HAL_RCC_OscConfig+0x3f8>
 800b410:	4b37      	ldr	r3, [pc, #220]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b412:	681b      	ldr	r3, [r3, #0]
 800b414:	4a36      	ldr	r2, [pc, #216]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b416:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800b41a:	6013      	str	r3, [r2, #0]
 800b41c:	f7f9 ff68 	bl	80052f0 <HAL_GetTick>
 800b420:	6278      	str	r0, [r7, #36]	@ 0x24
 800b422:	e008      	b.n	800b436 <HAL_RCC_OscConfig+0x3ea>
 800b424:	f7f9 ff64 	bl	80052f0 <HAL_GetTick>
 800b428:	4602      	mov	r2, r0
 800b42a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b42c:	1ad3      	subs	r3, r2, r3
 800b42e:	2b02      	cmp	r3, #2
 800b430:	d901      	bls.n	800b436 <HAL_RCC_OscConfig+0x3ea>
 800b432:	2303      	movs	r3, #3
 800b434:	e1dc      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b436:	4b2e      	ldr	r3, [pc, #184]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b438:	681b      	ldr	r3, [r3, #0]
 800b43a:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800b43e:	2b00      	cmp	r3, #0
 800b440:	d0f0      	beq.n	800b424 <HAL_RCC_OscConfig+0x3d8>
 800b442:	e018      	b.n	800b476 <HAL_RCC_OscConfig+0x42a>
 800b444:	4b2a      	ldr	r3, [pc, #168]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b446:	681b      	ldr	r3, [r3, #0]
 800b448:	4a29      	ldr	r2, [pc, #164]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b44a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800b44e:	6013      	str	r3, [r2, #0]
 800b450:	f7f9 ff4e 	bl	80052f0 <HAL_GetTick>
 800b454:	6278      	str	r0, [r7, #36]	@ 0x24
 800b456:	e008      	b.n	800b46a <HAL_RCC_OscConfig+0x41e>
 800b458:	f7f9 ff4a 	bl	80052f0 <HAL_GetTick>
 800b45c:	4602      	mov	r2, r0
 800b45e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b460:	1ad3      	subs	r3, r2, r3
 800b462:	2b02      	cmp	r3, #2
 800b464:	d901      	bls.n	800b46a <HAL_RCC_OscConfig+0x41e>
 800b466:	2303      	movs	r3, #3
 800b468:	e1c2      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b46a:	4b21      	ldr	r3, [pc, #132]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b46c:	681b      	ldr	r3, [r3, #0]
 800b46e:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800b472:	2b00      	cmp	r3, #0
 800b474:	d1f0      	bne.n	800b458 <HAL_RCC_OscConfig+0x40c>
 800b476:	687b      	ldr	r3, [r7, #4]
 800b478:	681b      	ldr	r3, [r3, #0]
 800b47a:	f003 0304 	and.w	r3, r3, #4
 800b47e:	2b00      	cmp	r3, #0
 800b480:	f000 8086 	beq.w	800b590 <HAL_RCC_OscConfig+0x544>
 800b484:	4b1b      	ldr	r3, [pc, #108]	@ (800b4f4 <HAL_RCC_OscConfig+0x4a8>)
 800b486:	681b      	ldr	r3, [r3, #0]
 800b488:	4a1a      	ldr	r2, [pc, #104]	@ (800b4f4 <HAL_RCC_OscConfig+0x4a8>)
 800b48a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800b48e:	6013      	str	r3, [r2, #0]
 800b490:	f7f9 ff2e 	bl	80052f0 <HAL_GetTick>
 800b494:	6278      	str	r0, [r7, #36]	@ 0x24
 800b496:	e008      	b.n	800b4aa <HAL_RCC_OscConfig+0x45e>
 800b498:	f7f9 ff2a 	bl	80052f0 <HAL_GetTick>
 800b49c:	4602      	mov	r2, r0
 800b49e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b4a0:	1ad3      	subs	r3, r2, r3
 800b4a2:	2b64      	cmp	r3, #100	@ 0x64
 800b4a4:	d901      	bls.n	800b4aa <HAL_RCC_OscConfig+0x45e>
 800b4a6:	2303      	movs	r3, #3
 800b4a8:	e1a2      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b4aa:	4b12      	ldr	r3, [pc, #72]	@ (800b4f4 <HAL_RCC_OscConfig+0x4a8>)
 800b4ac:	681b      	ldr	r3, [r3, #0]
 800b4ae:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800b4b2:	2b00      	cmp	r3, #0
 800b4b4:	d0f0      	beq.n	800b498 <HAL_RCC_OscConfig+0x44c>
 800b4b6:	687b      	ldr	r3, [r7, #4]
 800b4b8:	689b      	ldr	r3, [r3, #8]
 800b4ba:	2b01      	cmp	r3, #1
 800b4bc:	d106      	bne.n	800b4cc <HAL_RCC_OscConfig+0x480>
 800b4be:	4b0c      	ldr	r3, [pc, #48]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b4c0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b4c2:	4a0b      	ldr	r2, [pc, #44]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b4c4:	f043 0301 	orr.w	r3, r3, #1
 800b4c8:	6713      	str	r3, [r2, #112]	@ 0x70
 800b4ca:	e032      	b.n	800b532 <HAL_RCC_OscConfig+0x4e6>
 800b4cc:	687b      	ldr	r3, [r7, #4]
 800b4ce:	689b      	ldr	r3, [r3, #8]
 800b4d0:	2b00      	cmp	r3, #0
 800b4d2:	d111      	bne.n	800b4f8 <HAL_RCC_OscConfig+0x4ac>
 800b4d4:	4b06      	ldr	r3, [pc, #24]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b4d6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b4d8:	4a05      	ldr	r2, [pc, #20]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b4da:	f023 0301 	bic.w	r3, r3, #1
 800b4de:	6713      	str	r3, [r2, #112]	@ 0x70
 800b4e0:	4b03      	ldr	r3, [pc, #12]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b4e2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b4e4:	4a02      	ldr	r2, [pc, #8]	@ (800b4f0 <HAL_RCC_OscConfig+0x4a4>)
 800b4e6:	f023 0304 	bic.w	r3, r3, #4
 800b4ea:	6713      	str	r3, [r2, #112]	@ 0x70
 800b4ec:	e021      	b.n	800b532 <HAL_RCC_OscConfig+0x4e6>
 800b4ee:	bf00      	nop
 800b4f0:	58024400 	.word	0x58024400
 800b4f4:	58024800 	.word	0x58024800
 800b4f8:	687b      	ldr	r3, [r7, #4]
 800b4fa:	689b      	ldr	r3, [r3, #8]
 800b4fc:	2b05      	cmp	r3, #5
 800b4fe:	d10c      	bne.n	800b51a <HAL_RCC_OscConfig+0x4ce>
 800b500:	4b83      	ldr	r3, [pc, #524]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b502:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b504:	4a82      	ldr	r2, [pc, #520]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b506:	f043 0304 	orr.w	r3, r3, #4
 800b50a:	6713      	str	r3, [r2, #112]	@ 0x70
 800b50c:	4b80      	ldr	r3, [pc, #512]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b50e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b510:	4a7f      	ldr	r2, [pc, #508]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b512:	f043 0301 	orr.w	r3, r3, #1
 800b516:	6713      	str	r3, [r2, #112]	@ 0x70
 800b518:	e00b      	b.n	800b532 <HAL_RCC_OscConfig+0x4e6>
 800b51a:	4b7d      	ldr	r3, [pc, #500]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b51c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b51e:	4a7c      	ldr	r2, [pc, #496]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b520:	f023 0301 	bic.w	r3, r3, #1
 800b524:	6713      	str	r3, [r2, #112]	@ 0x70
 800b526:	4b7a      	ldr	r3, [pc, #488]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b528:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b52a:	4a79      	ldr	r2, [pc, #484]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b52c:	f023 0304 	bic.w	r3, r3, #4
 800b530:	6713      	str	r3, [r2, #112]	@ 0x70
 800b532:	687b      	ldr	r3, [r7, #4]
 800b534:	689b      	ldr	r3, [r3, #8]
 800b536:	2b00      	cmp	r3, #0
 800b538:	d015      	beq.n	800b566 <HAL_RCC_OscConfig+0x51a>
 800b53a:	f7f9 fed9 	bl	80052f0 <HAL_GetTick>
 800b53e:	6278      	str	r0, [r7, #36]	@ 0x24
 800b540:	e00a      	b.n	800b558 <HAL_RCC_OscConfig+0x50c>
 800b542:	f7f9 fed5 	bl	80052f0 <HAL_GetTick>
 800b546:	4602      	mov	r2, r0
 800b548:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b54a:	1ad3      	subs	r3, r2, r3
 800b54c:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b550:	4293      	cmp	r3, r2
 800b552:	d901      	bls.n	800b558 <HAL_RCC_OscConfig+0x50c>
 800b554:	2303      	movs	r3, #3
 800b556:	e14b      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b558:	4b6d      	ldr	r3, [pc, #436]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b55a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b55c:	f003 0302 	and.w	r3, r3, #2
 800b560:	2b00      	cmp	r3, #0
 800b562:	d0ee      	beq.n	800b542 <HAL_RCC_OscConfig+0x4f6>
 800b564:	e014      	b.n	800b590 <HAL_RCC_OscConfig+0x544>
 800b566:	f7f9 fec3 	bl	80052f0 <HAL_GetTick>
 800b56a:	6278      	str	r0, [r7, #36]	@ 0x24
 800b56c:	e00a      	b.n	800b584 <HAL_RCC_OscConfig+0x538>
 800b56e:	f7f9 febf 	bl	80052f0 <HAL_GetTick>
 800b572:	4602      	mov	r2, r0
 800b574:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b576:	1ad3      	subs	r3, r2, r3
 800b578:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b57c:	4293      	cmp	r3, r2
 800b57e:	d901      	bls.n	800b584 <HAL_RCC_OscConfig+0x538>
 800b580:	2303      	movs	r3, #3
 800b582:	e135      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b584:	4b62      	ldr	r3, [pc, #392]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b586:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800b588:	f003 0302 	and.w	r3, r3, #2
 800b58c:	2b00      	cmp	r3, #0
 800b58e:	d1ee      	bne.n	800b56e <HAL_RCC_OscConfig+0x522>
 800b590:	687b      	ldr	r3, [r7, #4]
 800b592:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b594:	2b00      	cmp	r3, #0
 800b596:	f000 812a 	beq.w	800b7ee <HAL_RCC_OscConfig+0x7a2>
 800b59a:	4b5d      	ldr	r3, [pc, #372]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b59c:	691b      	ldr	r3, [r3, #16]
 800b59e:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800b5a2:	2b18      	cmp	r3, #24
 800b5a4:	f000 80ba 	beq.w	800b71c <HAL_RCC_OscConfig+0x6d0>
 800b5a8:	687b      	ldr	r3, [r7, #4]
 800b5aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b5ac:	2b02      	cmp	r3, #2
 800b5ae:	f040 8095 	bne.w	800b6dc <HAL_RCC_OscConfig+0x690>
 800b5b2:	4b57      	ldr	r3, [pc, #348]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b5b4:	681b      	ldr	r3, [r3, #0]
 800b5b6:	4a56      	ldr	r2, [pc, #344]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b5b8:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800b5bc:	6013      	str	r3, [r2, #0]
 800b5be:	f7f9 fe97 	bl	80052f0 <HAL_GetTick>
 800b5c2:	6278      	str	r0, [r7, #36]	@ 0x24
 800b5c4:	e008      	b.n	800b5d8 <HAL_RCC_OscConfig+0x58c>
 800b5c6:	f7f9 fe93 	bl	80052f0 <HAL_GetTick>
 800b5ca:	4602      	mov	r2, r0
 800b5cc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b5ce:	1ad3      	subs	r3, r2, r3
 800b5d0:	2b02      	cmp	r3, #2
 800b5d2:	d901      	bls.n	800b5d8 <HAL_RCC_OscConfig+0x58c>
 800b5d4:	2303      	movs	r3, #3
 800b5d6:	e10b      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b5d8:	4b4d      	ldr	r3, [pc, #308]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b5da:	681b      	ldr	r3, [r3, #0]
 800b5dc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800b5e0:	2b00      	cmp	r3, #0
 800b5e2:	d1f0      	bne.n	800b5c6 <HAL_RCC_OscConfig+0x57a>
 800b5e4:	4b4a      	ldr	r3, [pc, #296]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b5e6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800b5e8:	4b4a      	ldr	r3, [pc, #296]	@ (800b714 <HAL_RCC_OscConfig+0x6c8>)
 800b5ea:	4013      	ands	r3, r2
 800b5ec:	687a      	ldr	r2, [r7, #4]
 800b5ee:	6a91      	ldr	r1, [r2, #40]	@ 0x28
 800b5f0:	687a      	ldr	r2, [r7, #4]
 800b5f2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800b5f4:	0112      	lsls	r2, r2, #4
 800b5f6:	430a      	orrs	r2, r1
 800b5f8:	4945      	ldr	r1, [pc, #276]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b5fa:	4313      	orrs	r3, r2
 800b5fc:	628b      	str	r3, [r1, #40]	@ 0x28
 800b5fe:	687b      	ldr	r3, [r7, #4]
 800b600:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b602:	3b01      	subs	r3, #1
 800b604:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800b608:	687b      	ldr	r3, [r7, #4]
 800b60a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b60c:	3b01      	subs	r3, #1
 800b60e:	025b      	lsls	r3, r3, #9
 800b610:	b29b      	uxth	r3, r3
 800b612:	431a      	orrs	r2, r3
 800b614:	687b      	ldr	r3, [r7, #4]
 800b616:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b618:	3b01      	subs	r3, #1
 800b61a:	041b      	lsls	r3, r3, #16
 800b61c:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 800b620:	431a      	orrs	r2, r3
 800b622:	687b      	ldr	r3, [r7, #4]
 800b624:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b626:	3b01      	subs	r3, #1
 800b628:	061b      	lsls	r3, r3, #24
 800b62a:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 800b62e:	4938      	ldr	r1, [pc, #224]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b630:	4313      	orrs	r3, r2
 800b632:	630b      	str	r3, [r1, #48]	@ 0x30
 800b634:	4b36      	ldr	r3, [pc, #216]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b636:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b638:	4a35      	ldr	r2, [pc, #212]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b63a:	f023 0301 	bic.w	r3, r3, #1
 800b63e:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800b640:	4b33      	ldr	r3, [pc, #204]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b642:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800b644:	4b34      	ldr	r3, [pc, #208]	@ (800b718 <HAL_RCC_OscConfig+0x6cc>)
 800b646:	4013      	ands	r3, r2
 800b648:	687a      	ldr	r2, [r7, #4]
 800b64a:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 800b64c:	00d2      	lsls	r2, r2, #3
 800b64e:	4930      	ldr	r1, [pc, #192]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b650:	4313      	orrs	r3, r2
 800b652:	634b      	str	r3, [r1, #52]	@ 0x34
 800b654:	4b2e      	ldr	r3, [pc, #184]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b656:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b658:	f023 020c 	bic.w	r2, r3, #12
 800b65c:	687b      	ldr	r3, [r7, #4]
 800b65e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b660:	492b      	ldr	r1, [pc, #172]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b662:	4313      	orrs	r3, r2
 800b664:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800b666:	4b2a      	ldr	r3, [pc, #168]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b668:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b66a:	f023 0202 	bic.w	r2, r3, #2
 800b66e:	687b      	ldr	r3, [r7, #4]
 800b670:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800b672:	4927      	ldr	r1, [pc, #156]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b674:	4313      	orrs	r3, r2
 800b676:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800b678:	4b25      	ldr	r3, [pc, #148]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b67a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b67c:	4a24      	ldr	r2, [pc, #144]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b67e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800b682:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800b684:	4b22      	ldr	r3, [pc, #136]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b686:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b688:	4a21      	ldr	r2, [pc, #132]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b68a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800b68e:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800b690:	4b1f      	ldr	r3, [pc, #124]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b692:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b694:	4a1e      	ldr	r2, [pc, #120]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b696:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800b69a:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800b69c:	4b1c      	ldr	r3, [pc, #112]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b69e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b6a0:	4a1b      	ldr	r2, [pc, #108]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b6a2:	f043 0301 	orr.w	r3, r3, #1
 800b6a6:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800b6a8:	4b19      	ldr	r3, [pc, #100]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b6aa:	681b      	ldr	r3, [r3, #0]
 800b6ac:	4a18      	ldr	r2, [pc, #96]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b6ae:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800b6b2:	6013      	str	r3, [r2, #0]
 800b6b4:	f7f9 fe1c 	bl	80052f0 <HAL_GetTick>
 800b6b8:	6278      	str	r0, [r7, #36]	@ 0x24
 800b6ba:	e008      	b.n	800b6ce <HAL_RCC_OscConfig+0x682>
 800b6bc:	f7f9 fe18 	bl	80052f0 <HAL_GetTick>
 800b6c0:	4602      	mov	r2, r0
 800b6c2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b6c4:	1ad3      	subs	r3, r2, r3
 800b6c6:	2b02      	cmp	r3, #2
 800b6c8:	d901      	bls.n	800b6ce <HAL_RCC_OscConfig+0x682>
 800b6ca:	2303      	movs	r3, #3
 800b6cc:	e090      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b6ce:	4b10      	ldr	r3, [pc, #64]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b6d0:	681b      	ldr	r3, [r3, #0]
 800b6d2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800b6d6:	2b00      	cmp	r3, #0
 800b6d8:	d0f0      	beq.n	800b6bc <HAL_RCC_OscConfig+0x670>
 800b6da:	e088      	b.n	800b7ee <HAL_RCC_OscConfig+0x7a2>
 800b6dc:	4b0c      	ldr	r3, [pc, #48]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b6de:	681b      	ldr	r3, [r3, #0]
 800b6e0:	4a0b      	ldr	r2, [pc, #44]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b6e2:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800b6e6:	6013      	str	r3, [r2, #0]
 800b6e8:	f7f9 fe02 	bl	80052f0 <HAL_GetTick>
 800b6ec:	6278      	str	r0, [r7, #36]	@ 0x24
 800b6ee:	e008      	b.n	800b702 <HAL_RCC_OscConfig+0x6b6>
 800b6f0:	f7f9 fdfe 	bl	80052f0 <HAL_GetTick>
 800b6f4:	4602      	mov	r2, r0
 800b6f6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b6f8:	1ad3      	subs	r3, r2, r3
 800b6fa:	2b02      	cmp	r3, #2
 800b6fc:	d901      	bls.n	800b702 <HAL_RCC_OscConfig+0x6b6>
 800b6fe:	2303      	movs	r3, #3
 800b700:	e076      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b702:	4b03      	ldr	r3, [pc, #12]	@ (800b710 <HAL_RCC_OscConfig+0x6c4>)
 800b704:	681b      	ldr	r3, [r3, #0]
 800b706:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800b70a:	2b00      	cmp	r3, #0
 800b70c:	d1f0      	bne.n	800b6f0 <HAL_RCC_OscConfig+0x6a4>
 800b70e:	e06e      	b.n	800b7ee <HAL_RCC_OscConfig+0x7a2>
 800b710:	58024400 	.word	0x58024400
 800b714:	fffffc0c 	.word	0xfffffc0c
 800b718:	ffff0007 	.word	0xffff0007
 800b71c:	4b36      	ldr	r3, [pc, #216]	@ (800b7f8 <HAL_RCC_OscConfig+0x7ac>)
 800b71e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b720:	613b      	str	r3, [r7, #16]
 800b722:	4b35      	ldr	r3, [pc, #212]	@ (800b7f8 <HAL_RCC_OscConfig+0x7ac>)
 800b724:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b726:	60fb      	str	r3, [r7, #12]
 800b728:	687b      	ldr	r3, [r7, #4]
 800b72a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b72c:	2b01      	cmp	r3, #1
 800b72e:	d031      	beq.n	800b794 <HAL_RCC_OscConfig+0x748>
 800b730:	693b      	ldr	r3, [r7, #16]
 800b732:	f003 0203 	and.w	r2, r3, #3
 800b736:	687b      	ldr	r3, [r7, #4]
 800b738:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b73a:	429a      	cmp	r2, r3
 800b73c:	d12a      	bne.n	800b794 <HAL_RCC_OscConfig+0x748>
 800b73e:	693b      	ldr	r3, [r7, #16]
 800b740:	091b      	lsrs	r3, r3, #4
 800b742:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800b746:	687b      	ldr	r3, [r7, #4]
 800b748:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b74a:	429a      	cmp	r2, r3
 800b74c:	d122      	bne.n	800b794 <HAL_RCC_OscConfig+0x748>
 800b74e:	68fb      	ldr	r3, [r7, #12]
 800b750:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800b754:	687b      	ldr	r3, [r7, #4]
 800b756:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b758:	3b01      	subs	r3, #1
 800b75a:	429a      	cmp	r2, r3
 800b75c:	d11a      	bne.n	800b794 <HAL_RCC_OscConfig+0x748>
 800b75e:	68fb      	ldr	r3, [r7, #12]
 800b760:	0a5b      	lsrs	r3, r3, #9
 800b762:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800b766:	687b      	ldr	r3, [r7, #4]
 800b768:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b76a:	3b01      	subs	r3, #1
 800b76c:	429a      	cmp	r2, r3
 800b76e:	d111      	bne.n	800b794 <HAL_RCC_OscConfig+0x748>
 800b770:	68fb      	ldr	r3, [r7, #12]
 800b772:	0c1b      	lsrs	r3, r3, #16
 800b774:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800b778:	687b      	ldr	r3, [r7, #4]
 800b77a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b77c:	3b01      	subs	r3, #1
 800b77e:	429a      	cmp	r2, r3
 800b780:	d108      	bne.n	800b794 <HAL_RCC_OscConfig+0x748>
 800b782:	68fb      	ldr	r3, [r7, #12]
 800b784:	0e1b      	lsrs	r3, r3, #24
 800b786:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800b78a:	687b      	ldr	r3, [r7, #4]
 800b78c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b78e:	3b01      	subs	r3, #1
 800b790:	429a      	cmp	r2, r3
 800b792:	d001      	beq.n	800b798 <HAL_RCC_OscConfig+0x74c>
 800b794:	2301      	movs	r3, #1
 800b796:	e02b      	b.n	800b7f0 <HAL_RCC_OscConfig+0x7a4>
 800b798:	4b17      	ldr	r3, [pc, #92]	@ (800b7f8 <HAL_RCC_OscConfig+0x7ac>)
 800b79a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b79c:	08db      	lsrs	r3, r3, #3
 800b79e:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800b7a2:	613b      	str	r3, [r7, #16]
 800b7a4:	687b      	ldr	r3, [r7, #4]
 800b7a6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800b7a8:	693a      	ldr	r2, [r7, #16]
 800b7aa:	429a      	cmp	r2, r3
 800b7ac:	d01f      	beq.n	800b7ee <HAL_RCC_OscConfig+0x7a2>
 800b7ae:	4b12      	ldr	r3, [pc, #72]	@ (800b7f8 <HAL_RCC_OscConfig+0x7ac>)
 800b7b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b7b2:	4a11      	ldr	r2, [pc, #68]	@ (800b7f8 <HAL_RCC_OscConfig+0x7ac>)
 800b7b4:	f023 0301 	bic.w	r3, r3, #1
 800b7b8:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800b7ba:	f7f9 fd99 	bl	80052f0 <HAL_GetTick>
 800b7be:	6278      	str	r0, [r7, #36]	@ 0x24
 800b7c0:	bf00      	nop
 800b7c2:	f7f9 fd95 	bl	80052f0 <HAL_GetTick>
 800b7c6:	4602      	mov	r2, r0
 800b7c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b7ca:	4293      	cmp	r3, r2
 800b7cc:	d0f9      	beq.n	800b7c2 <HAL_RCC_OscConfig+0x776>
 800b7ce:	4b0a      	ldr	r3, [pc, #40]	@ (800b7f8 <HAL_RCC_OscConfig+0x7ac>)
 800b7d0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800b7d2:	4b0a      	ldr	r3, [pc, #40]	@ (800b7fc <HAL_RCC_OscConfig+0x7b0>)
 800b7d4:	4013      	ands	r3, r2
 800b7d6:	687a      	ldr	r2, [r7, #4]
 800b7d8:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 800b7da:	00d2      	lsls	r2, r2, #3
 800b7dc:	4906      	ldr	r1, [pc, #24]	@ (800b7f8 <HAL_RCC_OscConfig+0x7ac>)
 800b7de:	4313      	orrs	r3, r2
 800b7e0:	634b      	str	r3, [r1, #52]	@ 0x34
 800b7e2:	4b05      	ldr	r3, [pc, #20]	@ (800b7f8 <HAL_RCC_OscConfig+0x7ac>)
 800b7e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b7e6:	4a04      	ldr	r2, [pc, #16]	@ (800b7f8 <HAL_RCC_OscConfig+0x7ac>)
 800b7e8:	f043 0301 	orr.w	r3, r3, #1
 800b7ec:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800b7ee:	2300      	movs	r3, #0
 800b7f0:	4618      	mov	r0, r3
 800b7f2:	3730      	adds	r7, #48	@ 0x30
 800b7f4:	46bd      	mov	sp, r7
 800b7f6:	bd80      	pop	{r7, pc}
 800b7f8:	58024400 	.word	0x58024400
 800b7fc:	ffff0007 	.word	0xffff0007

0800b800 <HAL_RCC_ClockConfig>:
 800b800:	b580      	push	{r7, lr}
 800b802:	b086      	sub	sp, #24
 800b804:	af00      	add	r7, sp, #0
 800b806:	6078      	str	r0, [r7, #4]
 800b808:	6039      	str	r1, [r7, #0]
 800b80a:	687b      	ldr	r3, [r7, #4]
 800b80c:	2b00      	cmp	r3, #0
 800b80e:	d101      	bne.n	800b814 <HAL_RCC_ClockConfig+0x14>
 800b810:	2301      	movs	r3, #1
 800b812:	e19c      	b.n	800bb4e <HAL_RCC_ClockConfig+0x34e>
 800b814:	4b8a      	ldr	r3, [pc, #552]	@ (800ba40 <HAL_RCC_ClockConfig+0x240>)
 800b816:	681b      	ldr	r3, [r3, #0]
 800b818:	f003 030f 	and.w	r3, r3, #15
 800b81c:	683a      	ldr	r2, [r7, #0]
 800b81e:	429a      	cmp	r2, r3
 800b820:	d910      	bls.n	800b844 <HAL_RCC_ClockConfig+0x44>
 800b822:	4b87      	ldr	r3, [pc, #540]	@ (800ba40 <HAL_RCC_ClockConfig+0x240>)
 800b824:	681b      	ldr	r3, [r3, #0]
 800b826:	f023 020f 	bic.w	r2, r3, #15
 800b82a:	4985      	ldr	r1, [pc, #532]	@ (800ba40 <HAL_RCC_ClockConfig+0x240>)
 800b82c:	683b      	ldr	r3, [r7, #0]
 800b82e:	4313      	orrs	r3, r2
 800b830:	600b      	str	r3, [r1, #0]
 800b832:	4b83      	ldr	r3, [pc, #524]	@ (800ba40 <HAL_RCC_ClockConfig+0x240>)
 800b834:	681b      	ldr	r3, [r3, #0]
 800b836:	f003 030f 	and.w	r3, r3, #15
 800b83a:	683a      	ldr	r2, [r7, #0]
 800b83c:	429a      	cmp	r2, r3
 800b83e:	d001      	beq.n	800b844 <HAL_RCC_ClockConfig+0x44>
 800b840:	2301      	movs	r3, #1
 800b842:	e184      	b.n	800bb4e <HAL_RCC_ClockConfig+0x34e>
 800b844:	687b      	ldr	r3, [r7, #4]
 800b846:	681b      	ldr	r3, [r3, #0]
 800b848:	f003 0304 	and.w	r3, r3, #4
 800b84c:	2b00      	cmp	r3, #0
 800b84e:	d010      	beq.n	800b872 <HAL_RCC_ClockConfig+0x72>
 800b850:	687b      	ldr	r3, [r7, #4]
 800b852:	691a      	ldr	r2, [r3, #16]
 800b854:	4b7b      	ldr	r3, [pc, #492]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b856:	699b      	ldr	r3, [r3, #24]
 800b858:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800b85c:	429a      	cmp	r2, r3
 800b85e:	d908      	bls.n	800b872 <HAL_RCC_ClockConfig+0x72>
 800b860:	4b78      	ldr	r3, [pc, #480]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b862:	699b      	ldr	r3, [r3, #24]
 800b864:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800b868:	687b      	ldr	r3, [r7, #4]
 800b86a:	691b      	ldr	r3, [r3, #16]
 800b86c:	4975      	ldr	r1, [pc, #468]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b86e:	4313      	orrs	r3, r2
 800b870:	618b      	str	r3, [r1, #24]
 800b872:	687b      	ldr	r3, [r7, #4]
 800b874:	681b      	ldr	r3, [r3, #0]
 800b876:	f003 0308 	and.w	r3, r3, #8
 800b87a:	2b00      	cmp	r3, #0
 800b87c:	d010      	beq.n	800b8a0 <HAL_RCC_ClockConfig+0xa0>
 800b87e:	687b      	ldr	r3, [r7, #4]
 800b880:	695a      	ldr	r2, [r3, #20]
 800b882:	4b70      	ldr	r3, [pc, #448]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b884:	69db      	ldr	r3, [r3, #28]
 800b886:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800b88a:	429a      	cmp	r2, r3
 800b88c:	d908      	bls.n	800b8a0 <HAL_RCC_ClockConfig+0xa0>
 800b88e:	4b6d      	ldr	r3, [pc, #436]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b890:	69db      	ldr	r3, [r3, #28]
 800b892:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800b896:	687b      	ldr	r3, [r7, #4]
 800b898:	695b      	ldr	r3, [r3, #20]
 800b89a:	496a      	ldr	r1, [pc, #424]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b89c:	4313      	orrs	r3, r2
 800b89e:	61cb      	str	r3, [r1, #28]
 800b8a0:	687b      	ldr	r3, [r7, #4]
 800b8a2:	681b      	ldr	r3, [r3, #0]
 800b8a4:	f003 0310 	and.w	r3, r3, #16
 800b8a8:	2b00      	cmp	r3, #0
 800b8aa:	d010      	beq.n	800b8ce <HAL_RCC_ClockConfig+0xce>
 800b8ac:	687b      	ldr	r3, [r7, #4]
 800b8ae:	699a      	ldr	r2, [r3, #24]
 800b8b0:	4b64      	ldr	r3, [pc, #400]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b8b2:	69db      	ldr	r3, [r3, #28]
 800b8b4:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800b8b8:	429a      	cmp	r2, r3
 800b8ba:	d908      	bls.n	800b8ce <HAL_RCC_ClockConfig+0xce>
 800b8bc:	4b61      	ldr	r3, [pc, #388]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b8be:	69db      	ldr	r3, [r3, #28]
 800b8c0:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 800b8c4:	687b      	ldr	r3, [r7, #4]
 800b8c6:	699b      	ldr	r3, [r3, #24]
 800b8c8:	495e      	ldr	r1, [pc, #376]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b8ca:	4313      	orrs	r3, r2
 800b8cc:	61cb      	str	r3, [r1, #28]
 800b8ce:	687b      	ldr	r3, [r7, #4]
 800b8d0:	681b      	ldr	r3, [r3, #0]
 800b8d2:	f003 0320 	and.w	r3, r3, #32
 800b8d6:	2b00      	cmp	r3, #0
 800b8d8:	d010      	beq.n	800b8fc <HAL_RCC_ClockConfig+0xfc>
 800b8da:	687b      	ldr	r3, [r7, #4]
 800b8dc:	69da      	ldr	r2, [r3, #28]
 800b8de:	4b59      	ldr	r3, [pc, #356]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b8e0:	6a1b      	ldr	r3, [r3, #32]
 800b8e2:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800b8e6:	429a      	cmp	r2, r3
 800b8e8:	d908      	bls.n	800b8fc <HAL_RCC_ClockConfig+0xfc>
 800b8ea:	4b56      	ldr	r3, [pc, #344]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b8ec:	6a1b      	ldr	r3, [r3, #32]
 800b8ee:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800b8f2:	687b      	ldr	r3, [r7, #4]
 800b8f4:	69db      	ldr	r3, [r3, #28]
 800b8f6:	4953      	ldr	r1, [pc, #332]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b8f8:	4313      	orrs	r3, r2
 800b8fa:	620b      	str	r3, [r1, #32]
 800b8fc:	687b      	ldr	r3, [r7, #4]
 800b8fe:	681b      	ldr	r3, [r3, #0]
 800b900:	f003 0302 	and.w	r3, r3, #2
 800b904:	2b00      	cmp	r3, #0
 800b906:	d010      	beq.n	800b92a <HAL_RCC_ClockConfig+0x12a>
 800b908:	687b      	ldr	r3, [r7, #4]
 800b90a:	68da      	ldr	r2, [r3, #12]
 800b90c:	4b4d      	ldr	r3, [pc, #308]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b90e:	699b      	ldr	r3, [r3, #24]
 800b910:	f003 030f 	and.w	r3, r3, #15
 800b914:	429a      	cmp	r2, r3
 800b916:	d908      	bls.n	800b92a <HAL_RCC_ClockConfig+0x12a>
 800b918:	4b4a      	ldr	r3, [pc, #296]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b91a:	699b      	ldr	r3, [r3, #24]
 800b91c:	f023 020f 	bic.w	r2, r3, #15
 800b920:	687b      	ldr	r3, [r7, #4]
 800b922:	68db      	ldr	r3, [r3, #12]
 800b924:	4947      	ldr	r1, [pc, #284]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b926:	4313      	orrs	r3, r2
 800b928:	618b      	str	r3, [r1, #24]
 800b92a:	687b      	ldr	r3, [r7, #4]
 800b92c:	681b      	ldr	r3, [r3, #0]
 800b92e:	f003 0301 	and.w	r3, r3, #1
 800b932:	2b00      	cmp	r3, #0
 800b934:	d055      	beq.n	800b9e2 <HAL_RCC_ClockConfig+0x1e2>
 800b936:	4b43      	ldr	r3, [pc, #268]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b938:	699b      	ldr	r3, [r3, #24]
 800b93a:	f423 6270 	bic.w	r2, r3, #3840	@ 0xf00
 800b93e:	687b      	ldr	r3, [r7, #4]
 800b940:	689b      	ldr	r3, [r3, #8]
 800b942:	4940      	ldr	r1, [pc, #256]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b944:	4313      	orrs	r3, r2
 800b946:	618b      	str	r3, [r1, #24]
 800b948:	687b      	ldr	r3, [r7, #4]
 800b94a:	685b      	ldr	r3, [r3, #4]
 800b94c:	2b02      	cmp	r3, #2
 800b94e:	d107      	bne.n	800b960 <HAL_RCC_ClockConfig+0x160>
 800b950:	4b3c      	ldr	r3, [pc, #240]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b952:	681b      	ldr	r3, [r3, #0]
 800b954:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800b958:	2b00      	cmp	r3, #0
 800b95a:	d121      	bne.n	800b9a0 <HAL_RCC_ClockConfig+0x1a0>
 800b95c:	2301      	movs	r3, #1
 800b95e:	e0f6      	b.n	800bb4e <HAL_RCC_ClockConfig+0x34e>
 800b960:	687b      	ldr	r3, [r7, #4]
 800b962:	685b      	ldr	r3, [r3, #4]
 800b964:	2b03      	cmp	r3, #3
 800b966:	d107      	bne.n	800b978 <HAL_RCC_ClockConfig+0x178>
 800b968:	4b36      	ldr	r3, [pc, #216]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b96a:	681b      	ldr	r3, [r3, #0]
 800b96c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800b970:	2b00      	cmp	r3, #0
 800b972:	d115      	bne.n	800b9a0 <HAL_RCC_ClockConfig+0x1a0>
 800b974:	2301      	movs	r3, #1
 800b976:	e0ea      	b.n	800bb4e <HAL_RCC_ClockConfig+0x34e>
 800b978:	687b      	ldr	r3, [r7, #4]
 800b97a:	685b      	ldr	r3, [r3, #4]
 800b97c:	2b01      	cmp	r3, #1
 800b97e:	d107      	bne.n	800b990 <HAL_RCC_ClockConfig+0x190>
 800b980:	4b30      	ldr	r3, [pc, #192]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b982:	681b      	ldr	r3, [r3, #0]
 800b984:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800b988:	2b00      	cmp	r3, #0
 800b98a:	d109      	bne.n	800b9a0 <HAL_RCC_ClockConfig+0x1a0>
 800b98c:	2301      	movs	r3, #1
 800b98e:	e0de      	b.n	800bb4e <HAL_RCC_ClockConfig+0x34e>
 800b990:	4b2c      	ldr	r3, [pc, #176]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b992:	681b      	ldr	r3, [r3, #0]
 800b994:	f003 0304 	and.w	r3, r3, #4
 800b998:	2b00      	cmp	r3, #0
 800b99a:	d101      	bne.n	800b9a0 <HAL_RCC_ClockConfig+0x1a0>
 800b99c:	2301      	movs	r3, #1
 800b99e:	e0d6      	b.n	800bb4e <HAL_RCC_ClockConfig+0x34e>
 800b9a0:	4b28      	ldr	r3, [pc, #160]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b9a2:	691b      	ldr	r3, [r3, #16]
 800b9a4:	f023 0207 	bic.w	r2, r3, #7
 800b9a8:	687b      	ldr	r3, [r7, #4]
 800b9aa:	685b      	ldr	r3, [r3, #4]
 800b9ac:	4925      	ldr	r1, [pc, #148]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b9ae:	4313      	orrs	r3, r2
 800b9b0:	610b      	str	r3, [r1, #16]
 800b9b2:	f7f9 fc9d 	bl	80052f0 <HAL_GetTick>
 800b9b6:	6178      	str	r0, [r7, #20]
 800b9b8:	e00a      	b.n	800b9d0 <HAL_RCC_ClockConfig+0x1d0>
 800b9ba:	f7f9 fc99 	bl	80052f0 <HAL_GetTick>
 800b9be:	4602      	mov	r2, r0
 800b9c0:	697b      	ldr	r3, [r7, #20]
 800b9c2:	1ad3      	subs	r3, r2, r3
 800b9c4:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b9c8:	4293      	cmp	r3, r2
 800b9ca:	d901      	bls.n	800b9d0 <HAL_RCC_ClockConfig+0x1d0>
 800b9cc:	2303      	movs	r3, #3
 800b9ce:	e0be      	b.n	800bb4e <HAL_RCC_ClockConfig+0x34e>
 800b9d0:	4b1c      	ldr	r3, [pc, #112]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b9d2:	691b      	ldr	r3, [r3, #16]
 800b9d4:	f003 0238 	and.w	r2, r3, #56	@ 0x38
 800b9d8:	687b      	ldr	r3, [r7, #4]
 800b9da:	685b      	ldr	r3, [r3, #4]
 800b9dc:	00db      	lsls	r3, r3, #3
 800b9de:	429a      	cmp	r2, r3
 800b9e0:	d1eb      	bne.n	800b9ba <HAL_RCC_ClockConfig+0x1ba>
 800b9e2:	687b      	ldr	r3, [r7, #4]
 800b9e4:	681b      	ldr	r3, [r3, #0]
 800b9e6:	f003 0302 	and.w	r3, r3, #2
 800b9ea:	2b00      	cmp	r3, #0
 800b9ec:	d010      	beq.n	800ba10 <HAL_RCC_ClockConfig+0x210>
 800b9ee:	687b      	ldr	r3, [r7, #4]
 800b9f0:	68da      	ldr	r2, [r3, #12]
 800b9f2:	4b14      	ldr	r3, [pc, #80]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800b9f4:	699b      	ldr	r3, [r3, #24]
 800b9f6:	f003 030f 	and.w	r3, r3, #15
 800b9fa:	429a      	cmp	r2, r3
 800b9fc:	d208      	bcs.n	800ba10 <HAL_RCC_ClockConfig+0x210>
 800b9fe:	4b11      	ldr	r3, [pc, #68]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800ba00:	699b      	ldr	r3, [r3, #24]
 800ba02:	f023 020f 	bic.w	r2, r3, #15
 800ba06:	687b      	ldr	r3, [r7, #4]
 800ba08:	68db      	ldr	r3, [r3, #12]
 800ba0a:	490e      	ldr	r1, [pc, #56]	@ (800ba44 <HAL_RCC_ClockConfig+0x244>)
 800ba0c:	4313      	orrs	r3, r2
 800ba0e:	618b      	str	r3, [r1, #24]
 800ba10:	4b0b      	ldr	r3, [pc, #44]	@ (800ba40 <HAL_RCC_ClockConfig+0x240>)
 800ba12:	681b      	ldr	r3, [r3, #0]
 800ba14:	f003 030f 	and.w	r3, r3, #15
 800ba18:	683a      	ldr	r2, [r7, #0]
 800ba1a:	429a      	cmp	r2, r3
 800ba1c:	d214      	bcs.n	800ba48 <HAL_RCC_ClockConfig+0x248>
 800ba1e:	4b08      	ldr	r3, [pc, #32]	@ (800ba40 <HAL_RCC_ClockConfig+0x240>)
 800ba20:	681b      	ldr	r3, [r3, #0]
 800ba22:	f023 020f 	bic.w	r2, r3, #15
 800ba26:	4906      	ldr	r1, [pc, #24]	@ (800ba40 <HAL_RCC_ClockConfig+0x240>)
 800ba28:	683b      	ldr	r3, [r7, #0]
 800ba2a:	4313      	orrs	r3, r2
 800ba2c:	600b      	str	r3, [r1, #0]
 800ba2e:	4b04      	ldr	r3, [pc, #16]	@ (800ba40 <HAL_RCC_ClockConfig+0x240>)
 800ba30:	681b      	ldr	r3, [r3, #0]
 800ba32:	f003 030f 	and.w	r3, r3, #15
 800ba36:	683a      	ldr	r2, [r7, #0]
 800ba38:	429a      	cmp	r2, r3
 800ba3a:	d005      	beq.n	800ba48 <HAL_RCC_ClockConfig+0x248>
 800ba3c:	2301      	movs	r3, #1
 800ba3e:	e086      	b.n	800bb4e <HAL_RCC_ClockConfig+0x34e>
 800ba40:	52002000 	.word	0x52002000
 800ba44:	58024400 	.word	0x58024400
 800ba48:	687b      	ldr	r3, [r7, #4]
 800ba4a:	681b      	ldr	r3, [r3, #0]
 800ba4c:	f003 0304 	and.w	r3, r3, #4
 800ba50:	2b00      	cmp	r3, #0
 800ba52:	d010      	beq.n	800ba76 <HAL_RCC_ClockConfig+0x276>
 800ba54:	687b      	ldr	r3, [r7, #4]
 800ba56:	691a      	ldr	r2, [r3, #16]
 800ba58:	4b3f      	ldr	r3, [pc, #252]	@ (800bb58 <HAL_RCC_ClockConfig+0x358>)
 800ba5a:	699b      	ldr	r3, [r3, #24]
 800ba5c:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800ba60:	429a      	cmp	r2, r3
 800ba62:	d208      	bcs.n	800ba76 <HAL_RCC_ClockConfig+0x276>
 800ba64:	4b3c      	ldr	r3, [pc, #240]	@ (800bb58 <HAL_RCC_ClockConfig+0x358>)
 800ba66:	699b      	ldr	r3, [r3, #24]
 800ba68:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800ba6c:	687b      	ldr	r3, [r7, #4]
 800ba6e:	691b      	ldr	r3, [r3, #16]
 800ba70:	4939      	ldr	r1, [pc, #228]	@ (800bb58 <HAL_RCC_ClockConfig+0x358>)
 800ba72:	4313      	orrs	r3, r2
 800ba74:	618b      	str	r3, [r1, #24]
 800ba76:	687b      	ldr	r3, [r7, #4]
 800ba78:	681b      	ldr	r3, [r3, #0]
 800ba7a:	f003 0308 	and.w	r3, r3, #8
 800ba7e:	2b00      	cmp	r3, #0
 800ba80:	d010      	beq.n	800baa4 <HAL_RCC_ClockConfig+0x2a4>
 800ba82:	687b      	ldr	r3, [r7, #4]
 800ba84:	695a      	ldr	r2, [r3, #20]
 800ba86:	4b34      	ldr	r3, [pc, #208]	@ (800bb58 <HAL_RCC_ClockConfig+0x358>)
 800ba88:	69db      	ldr	r3, [r3, #28]
 800ba8a:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800ba8e:	429a      	cmp	r2, r3
 800ba90:	d208      	bcs.n	800baa4 <HAL_RCC_ClockConfig+0x2a4>
 800ba92:	4b31      	ldr	r3, [pc, #196]	@ (800bb58 <HAL_RCC_ClockConfig+0x358>)
 800ba94:	69db      	ldr	r3, [r3, #28]
 800ba96:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800ba9a:	687b      	ldr	r3, [r7, #4]
 800ba9c:	695b      	ldr	r3, [r3, #20]
 800ba9e:	492e      	ldr	r1, [pc, #184]	@ (800bb58 <HAL_RCC_ClockConfig+0x358>)
 800baa0:	4313      	orrs	r3, r2
 800baa2:	61cb      	str	r3, [r1, #28]
 800baa4:	687b      	ldr	r3, [r7, #4]
 800baa6:	681b      	ldr	r3, [r3, #0]
 800baa8:	f003 0310 	and.w	r3, r3, #16
 800baac:	2b00      	cmp	r3, #0
 800baae:	d010      	beq.n	800bad2 <HAL_RCC_ClockConfig+0x2d2>
 800bab0:	687b      	ldr	r3, [r7, #4]
 800bab2:	699a      	ldr	r2, [r3, #24]
 800bab4:	4b28      	ldr	r3, [pc, #160]	@ (800bb58 <HAL_RCC_ClockConfig+0x358>)
 800bab6:	69db      	ldr	r3, [r3, #28]
 800bab8:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800babc:	429a      	cmp	r2, r3
 800babe:	d208      	bcs.n	800bad2 <HAL_RCC_ClockConfig+0x2d2>
 800bac0:	4b25      	ldr	r3, [pc, #148]	@ (800bb58 <HAL_RCC_ClockConfig+0x358>)
 800bac2:	69db      	ldr	r3, [r3, #28]
 800bac4:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 800bac8:	687b      	ldr	r3, [r7, #4]
 800baca:	699b      	ldr	r3, [r3, #24]
 800bacc:	4922      	ldr	r1, [pc, #136]	@ (800bb58 <HAL_RCC_ClockConfig+0x358>)
 800bace:	4313      	orrs	r3, r2
 800bad0:	61cb      	str	r3, [r1, #28]
 800bad2:	687b      	ldr	r3, [r7, #4]
 800bad4:	681b      	ldr	r3, [r3, #0]
 800bad6:	f003 0320 	and.w	r3, r3, #32
 800bada:	2b00      	cmp	r3, #0
 800badc:	d010      	beq.n	800bb00 <HAL_RCC_ClockConfig+0x300>
 800bade:	687b      	ldr	r3, [r7, #4]
 800bae0:	69da      	ldr	r2, [r3, #28]
 800bae2:	4b1d      	ldr	r3, [pc, #116]	@ (800bb58 <HAL_RCC_ClockConfig+0x358>)
 800bae4:	6a1b      	ldr	r3, [r3, #32]
 800bae6:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800baea:	429a      	cmp	r2, r3
 800baec:	d208      	bcs.n	800bb00 <HAL_RCC_ClockConfig+0x300>
 800baee:	4b1a      	ldr	r3, [pc, #104]	@ (800bb58 <HAL_RCC_ClockConfig+0x358>)
 800baf0:	6a1b      	ldr	r3, [r3, #32]
 800baf2:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800baf6:	687b      	ldr	r3, [r7, #4]
 800baf8:	69db      	ldr	r3, [r3, #28]
 800bafa:	4917      	ldr	r1, [pc, #92]	@ (800bb58 <HAL_RCC_ClockConfig+0x358>)
 800bafc:	4313      	orrs	r3, r2
 800bafe:	620b      	str	r3, [r1, #32]
 800bb00:	f000 f834 	bl	800bb6c <HAL_RCC_GetSysClockFreq>
 800bb04:	4602      	mov	r2, r0
 800bb06:	4b14      	ldr	r3, [pc, #80]	@ (800bb58 <HAL_RCC_ClockConfig+0x358>)
 800bb08:	699b      	ldr	r3, [r3, #24]
 800bb0a:	0a1b      	lsrs	r3, r3, #8
 800bb0c:	f003 030f 	and.w	r3, r3, #15
 800bb10:	4912      	ldr	r1, [pc, #72]	@ (800bb5c <HAL_RCC_ClockConfig+0x35c>)
 800bb12:	5ccb      	ldrb	r3, [r1, r3]
 800bb14:	f003 031f 	and.w	r3, r3, #31
 800bb18:	fa22 f303 	lsr.w	r3, r2, r3
 800bb1c:	613b      	str	r3, [r7, #16]
 800bb1e:	4b0e      	ldr	r3, [pc, #56]	@ (800bb58 <HAL_RCC_ClockConfig+0x358>)
 800bb20:	699b      	ldr	r3, [r3, #24]
 800bb22:	f003 030f 	and.w	r3, r3, #15
 800bb26:	4a0d      	ldr	r2, [pc, #52]	@ (800bb5c <HAL_RCC_ClockConfig+0x35c>)
 800bb28:	5cd3      	ldrb	r3, [r2, r3]
 800bb2a:	f003 031f 	and.w	r3, r3, #31
 800bb2e:	693a      	ldr	r2, [r7, #16]
 800bb30:	fa22 f303 	lsr.w	r3, r2, r3
 800bb34:	4a0a      	ldr	r2, [pc, #40]	@ (800bb60 <HAL_RCC_ClockConfig+0x360>)
 800bb36:	6013      	str	r3, [r2, #0]
 800bb38:	4a0a      	ldr	r2, [pc, #40]	@ (800bb64 <HAL_RCC_ClockConfig+0x364>)
 800bb3a:	693b      	ldr	r3, [r7, #16]
 800bb3c:	6013      	str	r3, [r2, #0]
 800bb3e:	4b0a      	ldr	r3, [pc, #40]	@ (800bb68 <HAL_RCC_ClockConfig+0x368>)
 800bb40:	681b      	ldr	r3, [r3, #0]
 800bb42:	4618      	mov	r0, r3
 800bb44:	f7f9 fb8a 	bl	800525c <HAL_InitTick>
 800bb48:	4603      	mov	r3, r0
 800bb4a:	73fb      	strb	r3, [r7, #15]
 800bb4c:	7bfb      	ldrb	r3, [r7, #15]
 800bb4e:	4618      	mov	r0, r3
 800bb50:	3718      	adds	r7, #24
 800bb52:	46bd      	mov	sp, r7
 800bb54:	bd80      	pop	{r7, pc}
 800bb56:	bf00      	nop
 800bb58:	58024400 	.word	0x58024400
 800bb5c:	0801aba8 	.word	0x0801aba8
 800bb60:	24000004 	.word	0x24000004
 800bb64:	24000000 	.word	0x24000000
 800bb68:	24000008 	.word	0x24000008

0800bb6c <HAL_RCC_GetSysClockFreq>:
 800bb6c:	b480      	push	{r7}
 800bb6e:	b089      	sub	sp, #36	@ 0x24
 800bb70:	af00      	add	r7, sp, #0
 800bb72:	4bb3      	ldr	r3, [pc, #716]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bb74:	691b      	ldr	r3, [r3, #16]
 800bb76:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800bb7a:	2b18      	cmp	r3, #24
 800bb7c:	f200 8155 	bhi.w	800be2a <HAL_RCC_GetSysClockFreq+0x2be>
 800bb80:	a201      	add	r2, pc, #4	@ (adr r2, 800bb88 <HAL_RCC_GetSysClockFreq+0x1c>)
 800bb82:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800bb86:	bf00      	nop
 800bb88:	0800bbed 	.word	0x0800bbed
 800bb8c:	0800be2b 	.word	0x0800be2b
 800bb90:	0800be2b 	.word	0x0800be2b
 800bb94:	0800be2b 	.word	0x0800be2b
 800bb98:	0800be2b 	.word	0x0800be2b
 800bb9c:	0800be2b 	.word	0x0800be2b
 800bba0:	0800be2b 	.word	0x0800be2b
 800bba4:	0800be2b 	.word	0x0800be2b
 800bba8:	0800bc13 	.word	0x0800bc13
 800bbac:	0800be2b 	.word	0x0800be2b
 800bbb0:	0800be2b 	.word	0x0800be2b
 800bbb4:	0800be2b 	.word	0x0800be2b
 800bbb8:	0800be2b 	.word	0x0800be2b
 800bbbc:	0800be2b 	.word	0x0800be2b
 800bbc0:	0800be2b 	.word	0x0800be2b
 800bbc4:	0800be2b 	.word	0x0800be2b
 800bbc8:	0800bc19 	.word	0x0800bc19
 800bbcc:	0800be2b 	.word	0x0800be2b
 800bbd0:	0800be2b 	.word	0x0800be2b
 800bbd4:	0800be2b 	.word	0x0800be2b
 800bbd8:	0800be2b 	.word	0x0800be2b
 800bbdc:	0800be2b 	.word	0x0800be2b
 800bbe0:	0800be2b 	.word	0x0800be2b
 800bbe4:	0800be2b 	.word	0x0800be2b
 800bbe8:	0800bc1f 	.word	0x0800bc1f
 800bbec:	4b94      	ldr	r3, [pc, #592]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bbee:	681b      	ldr	r3, [r3, #0]
 800bbf0:	f003 0320 	and.w	r3, r3, #32
 800bbf4:	2b00      	cmp	r3, #0
 800bbf6:	d009      	beq.n	800bc0c <HAL_RCC_GetSysClockFreq+0xa0>
 800bbf8:	4b91      	ldr	r3, [pc, #580]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bbfa:	681b      	ldr	r3, [r3, #0]
 800bbfc:	08db      	lsrs	r3, r3, #3
 800bbfe:	f003 0303 	and.w	r3, r3, #3
 800bc02:	4a90      	ldr	r2, [pc, #576]	@ (800be44 <HAL_RCC_GetSysClockFreq+0x2d8>)
 800bc04:	fa22 f303 	lsr.w	r3, r2, r3
 800bc08:	61bb      	str	r3, [r7, #24]
 800bc0a:	e111      	b.n	800be30 <HAL_RCC_GetSysClockFreq+0x2c4>
 800bc0c:	4b8d      	ldr	r3, [pc, #564]	@ (800be44 <HAL_RCC_GetSysClockFreq+0x2d8>)
 800bc0e:	61bb      	str	r3, [r7, #24]
 800bc10:	e10e      	b.n	800be30 <HAL_RCC_GetSysClockFreq+0x2c4>
 800bc12:	4b8d      	ldr	r3, [pc, #564]	@ (800be48 <HAL_RCC_GetSysClockFreq+0x2dc>)
 800bc14:	61bb      	str	r3, [r7, #24]
 800bc16:	e10b      	b.n	800be30 <HAL_RCC_GetSysClockFreq+0x2c4>
 800bc18:	4b8c      	ldr	r3, [pc, #560]	@ (800be4c <HAL_RCC_GetSysClockFreq+0x2e0>)
 800bc1a:	61bb      	str	r3, [r7, #24]
 800bc1c:	e108      	b.n	800be30 <HAL_RCC_GetSysClockFreq+0x2c4>
 800bc1e:	4b88      	ldr	r3, [pc, #544]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bc20:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800bc22:	f003 0303 	and.w	r3, r3, #3
 800bc26:	617b      	str	r3, [r7, #20]
 800bc28:	4b85      	ldr	r3, [pc, #532]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bc2a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800bc2c:	091b      	lsrs	r3, r3, #4
 800bc2e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800bc32:	613b      	str	r3, [r7, #16]
 800bc34:	4b82      	ldr	r3, [pc, #520]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bc36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bc38:	f003 0301 	and.w	r3, r3, #1
 800bc3c:	60fb      	str	r3, [r7, #12]
 800bc3e:	4b80      	ldr	r3, [pc, #512]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bc40:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bc42:	08db      	lsrs	r3, r3, #3
 800bc44:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800bc48:	68fa      	ldr	r2, [r7, #12]
 800bc4a:	fb02 f303 	mul.w	r3, r2, r3
 800bc4e:	ee07 3a90 	vmov	s15, r3
 800bc52:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800bc56:	edc7 7a02 	vstr	s15, [r7, #8]
 800bc5a:	693b      	ldr	r3, [r7, #16]
 800bc5c:	2b00      	cmp	r3, #0
 800bc5e:	f000 80e1 	beq.w	800be24 <HAL_RCC_GetSysClockFreq+0x2b8>
 800bc62:	697b      	ldr	r3, [r7, #20]
 800bc64:	2b02      	cmp	r3, #2
 800bc66:	f000 8083 	beq.w	800bd70 <HAL_RCC_GetSysClockFreq+0x204>
 800bc6a:	697b      	ldr	r3, [r7, #20]
 800bc6c:	2b02      	cmp	r3, #2
 800bc6e:	f200 80a1 	bhi.w	800bdb4 <HAL_RCC_GetSysClockFreq+0x248>
 800bc72:	697b      	ldr	r3, [r7, #20]
 800bc74:	2b00      	cmp	r3, #0
 800bc76:	d003      	beq.n	800bc80 <HAL_RCC_GetSysClockFreq+0x114>
 800bc78:	697b      	ldr	r3, [r7, #20]
 800bc7a:	2b01      	cmp	r3, #1
 800bc7c:	d056      	beq.n	800bd2c <HAL_RCC_GetSysClockFreq+0x1c0>
 800bc7e:	e099      	b.n	800bdb4 <HAL_RCC_GetSysClockFreq+0x248>
 800bc80:	4b6f      	ldr	r3, [pc, #444]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bc82:	681b      	ldr	r3, [r3, #0]
 800bc84:	f003 0320 	and.w	r3, r3, #32
 800bc88:	2b00      	cmp	r3, #0
 800bc8a:	d02d      	beq.n	800bce8 <HAL_RCC_GetSysClockFreq+0x17c>
 800bc8c:	4b6c      	ldr	r3, [pc, #432]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bc8e:	681b      	ldr	r3, [r3, #0]
 800bc90:	08db      	lsrs	r3, r3, #3
 800bc92:	f003 0303 	and.w	r3, r3, #3
 800bc96:	4a6b      	ldr	r2, [pc, #428]	@ (800be44 <HAL_RCC_GetSysClockFreq+0x2d8>)
 800bc98:	fa22 f303 	lsr.w	r3, r2, r3
 800bc9c:	607b      	str	r3, [r7, #4]
 800bc9e:	687b      	ldr	r3, [r7, #4]
 800bca0:	ee07 3a90 	vmov	s15, r3
 800bca4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800bca8:	693b      	ldr	r3, [r7, #16]
 800bcaa:	ee07 3a90 	vmov	s15, r3
 800bcae:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800bcb2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800bcb6:	4b62      	ldr	r3, [pc, #392]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bcb8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bcba:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800bcbe:	ee07 3a90 	vmov	s15, r3
 800bcc2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800bcc6:	ed97 6a02 	vldr	s12, [r7, #8]
 800bcca:	eddf 5a61 	vldr	s11, [pc, #388]	@ 800be50 <HAL_RCC_GetSysClockFreq+0x2e4>
 800bcce:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800bcd2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800bcd6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800bcda:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bcde:	ee67 7a27 	vmul.f32	s15, s14, s15
 800bce2:	edc7 7a07 	vstr	s15, [r7, #28]
 800bce6:	e087      	b.n	800bdf8 <HAL_RCC_GetSysClockFreq+0x28c>
 800bce8:	693b      	ldr	r3, [r7, #16]
 800bcea:	ee07 3a90 	vmov	s15, r3
 800bcee:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800bcf2:	eddf 6a58 	vldr	s13, [pc, #352]	@ 800be54 <HAL_RCC_GetSysClockFreq+0x2e8>
 800bcf6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800bcfa:	4b51      	ldr	r3, [pc, #324]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bcfc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bcfe:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800bd02:	ee07 3a90 	vmov	s15, r3
 800bd06:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800bd0a:	ed97 6a02 	vldr	s12, [r7, #8]
 800bd0e:	eddf 5a50 	vldr	s11, [pc, #320]	@ 800be50 <HAL_RCC_GetSysClockFreq+0x2e4>
 800bd12:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800bd16:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800bd1a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800bd1e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bd22:	ee67 7a27 	vmul.f32	s15, s14, s15
 800bd26:	edc7 7a07 	vstr	s15, [r7, #28]
 800bd2a:	e065      	b.n	800bdf8 <HAL_RCC_GetSysClockFreq+0x28c>
 800bd2c:	693b      	ldr	r3, [r7, #16]
 800bd2e:	ee07 3a90 	vmov	s15, r3
 800bd32:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800bd36:	eddf 6a48 	vldr	s13, [pc, #288]	@ 800be58 <HAL_RCC_GetSysClockFreq+0x2ec>
 800bd3a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800bd3e:	4b40      	ldr	r3, [pc, #256]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bd40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bd42:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800bd46:	ee07 3a90 	vmov	s15, r3
 800bd4a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800bd4e:	ed97 6a02 	vldr	s12, [r7, #8]
 800bd52:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 800be50 <HAL_RCC_GetSysClockFreq+0x2e4>
 800bd56:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800bd5a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800bd5e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800bd62:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bd66:	ee67 7a27 	vmul.f32	s15, s14, s15
 800bd6a:	edc7 7a07 	vstr	s15, [r7, #28]
 800bd6e:	e043      	b.n	800bdf8 <HAL_RCC_GetSysClockFreq+0x28c>
 800bd70:	693b      	ldr	r3, [r7, #16]
 800bd72:	ee07 3a90 	vmov	s15, r3
 800bd76:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800bd7a:	eddf 6a38 	vldr	s13, [pc, #224]	@ 800be5c <HAL_RCC_GetSysClockFreq+0x2f0>
 800bd7e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800bd82:	4b2f      	ldr	r3, [pc, #188]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bd84:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bd86:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800bd8a:	ee07 3a90 	vmov	s15, r3
 800bd8e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800bd92:	ed97 6a02 	vldr	s12, [r7, #8]
 800bd96:	eddf 5a2e 	vldr	s11, [pc, #184]	@ 800be50 <HAL_RCC_GetSysClockFreq+0x2e4>
 800bd9a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800bd9e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800bda2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800bda6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bdaa:	ee67 7a27 	vmul.f32	s15, s14, s15
 800bdae:	edc7 7a07 	vstr	s15, [r7, #28]
 800bdb2:	e021      	b.n	800bdf8 <HAL_RCC_GetSysClockFreq+0x28c>
 800bdb4:	693b      	ldr	r3, [r7, #16]
 800bdb6:	ee07 3a90 	vmov	s15, r3
 800bdba:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800bdbe:	eddf 6a26 	vldr	s13, [pc, #152]	@ 800be58 <HAL_RCC_GetSysClockFreq+0x2ec>
 800bdc2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800bdc6:	4b1e      	ldr	r3, [pc, #120]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bdc8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bdca:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800bdce:	ee07 3a90 	vmov	s15, r3
 800bdd2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800bdd6:	ed97 6a02 	vldr	s12, [r7, #8]
 800bdda:	eddf 5a1d 	vldr	s11, [pc, #116]	@ 800be50 <HAL_RCC_GetSysClockFreq+0x2e4>
 800bdde:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800bde2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800bde6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800bdea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bdee:	ee67 7a27 	vmul.f32	s15, s14, s15
 800bdf2:	edc7 7a07 	vstr	s15, [r7, #28]
 800bdf6:	bf00      	nop
 800bdf8:	4b11      	ldr	r3, [pc, #68]	@ (800be40 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800bdfa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bdfc:	0a5b      	lsrs	r3, r3, #9
 800bdfe:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800be02:	3301      	adds	r3, #1
 800be04:	603b      	str	r3, [r7, #0]
 800be06:	683b      	ldr	r3, [r7, #0]
 800be08:	ee07 3a90 	vmov	s15, r3
 800be0c:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800be10:	edd7 6a07 	vldr	s13, [r7, #28]
 800be14:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800be18:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800be1c:	ee17 3a90 	vmov	r3, s15
 800be20:	61bb      	str	r3, [r7, #24]
 800be22:	e005      	b.n	800be30 <HAL_RCC_GetSysClockFreq+0x2c4>
 800be24:	2300      	movs	r3, #0
 800be26:	61bb      	str	r3, [r7, #24]
 800be28:	e002      	b.n	800be30 <HAL_RCC_GetSysClockFreq+0x2c4>
 800be2a:	4b07      	ldr	r3, [pc, #28]	@ (800be48 <HAL_RCC_GetSysClockFreq+0x2dc>)
 800be2c:	61bb      	str	r3, [r7, #24]
 800be2e:	bf00      	nop
 800be30:	69bb      	ldr	r3, [r7, #24]
 800be32:	4618      	mov	r0, r3
 800be34:	3724      	adds	r7, #36	@ 0x24
 800be36:	46bd      	mov	sp, r7
 800be38:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be3c:	4770      	bx	lr
 800be3e:	bf00      	nop
 800be40:	58024400 	.word	0x58024400
 800be44:	03d09000 	.word	0x03d09000
 800be48:	003d0900 	.word	0x003d0900
 800be4c:	016e3600 	.word	0x016e3600
 800be50:	46000000 	.word	0x46000000
 800be54:	4c742400 	.word	0x4c742400
 800be58:	4a742400 	.word	0x4a742400
 800be5c:	4bb71b00 	.word	0x4bb71b00

0800be60 <HAL_RCC_GetHCLKFreq>:
 800be60:	b580      	push	{r7, lr}
 800be62:	b082      	sub	sp, #8
 800be64:	af00      	add	r7, sp, #0
 800be66:	f7ff fe81 	bl	800bb6c <HAL_RCC_GetSysClockFreq>
 800be6a:	4602      	mov	r2, r0
 800be6c:	4b10      	ldr	r3, [pc, #64]	@ (800beb0 <HAL_RCC_GetHCLKFreq+0x50>)
 800be6e:	699b      	ldr	r3, [r3, #24]
 800be70:	0a1b      	lsrs	r3, r3, #8
 800be72:	f003 030f 	and.w	r3, r3, #15
 800be76:	490f      	ldr	r1, [pc, #60]	@ (800beb4 <HAL_RCC_GetHCLKFreq+0x54>)
 800be78:	5ccb      	ldrb	r3, [r1, r3]
 800be7a:	f003 031f 	and.w	r3, r3, #31
 800be7e:	fa22 f303 	lsr.w	r3, r2, r3
 800be82:	607b      	str	r3, [r7, #4]
 800be84:	4b0a      	ldr	r3, [pc, #40]	@ (800beb0 <HAL_RCC_GetHCLKFreq+0x50>)
 800be86:	699b      	ldr	r3, [r3, #24]
 800be88:	f003 030f 	and.w	r3, r3, #15
 800be8c:	4a09      	ldr	r2, [pc, #36]	@ (800beb4 <HAL_RCC_GetHCLKFreq+0x54>)
 800be8e:	5cd3      	ldrb	r3, [r2, r3]
 800be90:	f003 031f 	and.w	r3, r3, #31
 800be94:	687a      	ldr	r2, [r7, #4]
 800be96:	fa22 f303 	lsr.w	r3, r2, r3
 800be9a:	4a07      	ldr	r2, [pc, #28]	@ (800beb8 <HAL_RCC_GetHCLKFreq+0x58>)
 800be9c:	6013      	str	r3, [r2, #0]
 800be9e:	4a07      	ldr	r2, [pc, #28]	@ (800bebc <HAL_RCC_GetHCLKFreq+0x5c>)
 800bea0:	687b      	ldr	r3, [r7, #4]
 800bea2:	6013      	str	r3, [r2, #0]
 800bea4:	4b04      	ldr	r3, [pc, #16]	@ (800beb8 <HAL_RCC_GetHCLKFreq+0x58>)
 800bea6:	681b      	ldr	r3, [r3, #0]
 800bea8:	4618      	mov	r0, r3
 800beaa:	3708      	adds	r7, #8
 800beac:	46bd      	mov	sp, r7
 800beae:	bd80      	pop	{r7, pc}
 800beb0:	58024400 	.word	0x58024400
 800beb4:	0801aba8 	.word	0x0801aba8
 800beb8:	24000004 	.word	0x24000004
 800bebc:	24000000 	.word	0x24000000

0800bec0 <HAL_RCC_GetPCLK1Freq>:
 800bec0:	b580      	push	{r7, lr}
 800bec2:	af00      	add	r7, sp, #0
 800bec4:	f7ff ffcc 	bl	800be60 <HAL_RCC_GetHCLKFreq>
 800bec8:	4602      	mov	r2, r0
 800beca:	4b06      	ldr	r3, [pc, #24]	@ (800bee4 <HAL_RCC_GetPCLK1Freq+0x24>)
 800becc:	69db      	ldr	r3, [r3, #28]
 800bece:	091b      	lsrs	r3, r3, #4
 800bed0:	f003 0307 	and.w	r3, r3, #7
 800bed4:	4904      	ldr	r1, [pc, #16]	@ (800bee8 <HAL_RCC_GetPCLK1Freq+0x28>)
 800bed6:	5ccb      	ldrb	r3, [r1, r3]
 800bed8:	f003 031f 	and.w	r3, r3, #31
 800bedc:	fa22 f303 	lsr.w	r3, r2, r3
 800bee0:	4618      	mov	r0, r3
 800bee2:	bd80      	pop	{r7, pc}
 800bee4:	58024400 	.word	0x58024400
 800bee8:	0801aba8 	.word	0x0801aba8

0800beec <HAL_RCC_GetPCLK2Freq>:
 800beec:	b580      	push	{r7, lr}
 800beee:	af00      	add	r7, sp, #0
 800bef0:	f7ff ffb6 	bl	800be60 <HAL_RCC_GetHCLKFreq>
 800bef4:	4602      	mov	r2, r0
 800bef6:	4b06      	ldr	r3, [pc, #24]	@ (800bf10 <HAL_RCC_GetPCLK2Freq+0x24>)
 800bef8:	69db      	ldr	r3, [r3, #28]
 800befa:	0a1b      	lsrs	r3, r3, #8
 800befc:	f003 0307 	and.w	r3, r3, #7
 800bf00:	4904      	ldr	r1, [pc, #16]	@ (800bf14 <HAL_RCC_GetPCLK2Freq+0x28>)
 800bf02:	5ccb      	ldrb	r3, [r1, r3]
 800bf04:	f003 031f 	and.w	r3, r3, #31
 800bf08:	fa22 f303 	lsr.w	r3, r2, r3
 800bf0c:	4618      	mov	r0, r3
 800bf0e:	bd80      	pop	{r7, pc}
 800bf10:	58024400 	.word	0x58024400
 800bf14:	0801aba8 	.word	0x0801aba8

0800bf18 <HAL_RCCEx_PeriphCLKConfig>:
 800bf18:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800bf1c:	b0c6      	sub	sp, #280	@ 0x118
 800bf1e:	af00      	add	r7, sp, #0
 800bf20:	f8c7 0104 	str.w	r0, [r7, #260]	@ 0x104
 800bf24:	2300      	movs	r3, #0
 800bf26:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800bf2a:	2300      	movs	r3, #0
 800bf2c:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800bf30:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800bf34:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bf38:	f002 6400 	and.w	r4, r2, #134217728	@ 0x8000000
 800bf3c:	2500      	movs	r5, #0
 800bf3e:	ea54 0305 	orrs.w	r3, r4, r5
 800bf42:	d049      	beq.n	800bfd8 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 800bf44:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800bf48:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800bf4a:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 800bf4e:	d02f      	beq.n	800bfb0 <HAL_RCCEx_PeriphCLKConfig+0x98>
 800bf50:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 800bf54:	d828      	bhi.n	800bfa8 <HAL_RCCEx_PeriphCLKConfig+0x90>
 800bf56:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800bf5a:	d01a      	beq.n	800bf92 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 800bf5c:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800bf60:	d822      	bhi.n	800bfa8 <HAL_RCCEx_PeriphCLKConfig+0x90>
 800bf62:	2b00      	cmp	r3, #0
 800bf64:	d003      	beq.n	800bf6e <HAL_RCCEx_PeriphCLKConfig+0x56>
 800bf66:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800bf6a:	d007      	beq.n	800bf7c <HAL_RCCEx_PeriphCLKConfig+0x64>
 800bf6c:	e01c      	b.n	800bfa8 <HAL_RCCEx_PeriphCLKConfig+0x90>
 800bf6e:	4bab      	ldr	r3, [pc, #684]	@ (800c21c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800bf70:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bf72:	4aaa      	ldr	r2, [pc, #680]	@ (800c21c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800bf74:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800bf78:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800bf7a:	e01a      	b.n	800bfb2 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800bf7c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800bf80:	3308      	adds	r3, #8
 800bf82:	2102      	movs	r1, #2
 800bf84:	4618      	mov	r0, r3
 800bf86:	f002 fa49 	bl	800e41c <RCCEx_PLL2_Config>
 800bf8a:	4603      	mov	r3, r0
 800bf8c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800bf90:	e00f      	b.n	800bfb2 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800bf92:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800bf96:	3328      	adds	r3, #40	@ 0x28
 800bf98:	2102      	movs	r1, #2
 800bf9a:	4618      	mov	r0, r3
 800bf9c:	f002 faf0 	bl	800e580 <RCCEx_PLL3_Config>
 800bfa0:	4603      	mov	r3, r0
 800bfa2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800bfa6:	e004      	b.n	800bfb2 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800bfa8:	2301      	movs	r3, #1
 800bfaa:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800bfae:	e000      	b.n	800bfb2 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800bfb0:	bf00      	nop
 800bfb2:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800bfb6:	2b00      	cmp	r3, #0
 800bfb8:	d10a      	bne.n	800bfd0 <HAL_RCCEx_PeriphCLKConfig+0xb8>
 800bfba:	4b98      	ldr	r3, [pc, #608]	@ (800c21c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800bfbc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800bfbe:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 800bfc2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800bfc6:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800bfc8:	4a94      	ldr	r2, [pc, #592]	@ (800c21c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800bfca:	430b      	orrs	r3, r1
 800bfcc:	6513      	str	r3, [r2, #80]	@ 0x50
 800bfce:	e003      	b.n	800bfd8 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 800bfd0:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800bfd4:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800bfd8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800bfdc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bfe0:	f402 7880 	and.w	r8, r2, #256	@ 0x100
 800bfe4:	f04f 0900 	mov.w	r9, #0
 800bfe8:	ea58 0309 	orrs.w	r3, r8, r9
 800bfec:	d047      	beq.n	800c07e <HAL_RCCEx_PeriphCLKConfig+0x166>
 800bfee:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800bff2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800bff4:	2b04      	cmp	r3, #4
 800bff6:	d82a      	bhi.n	800c04e <HAL_RCCEx_PeriphCLKConfig+0x136>
 800bff8:	a201      	add	r2, pc, #4	@ (adr r2, 800c000 <HAL_RCCEx_PeriphCLKConfig+0xe8>)
 800bffa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800bffe:	bf00      	nop
 800c000:	0800c015 	.word	0x0800c015
 800c004:	0800c023 	.word	0x0800c023
 800c008:	0800c039 	.word	0x0800c039
 800c00c:	0800c057 	.word	0x0800c057
 800c010:	0800c057 	.word	0x0800c057
 800c014:	4b81      	ldr	r3, [pc, #516]	@ (800c21c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c016:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c018:	4a80      	ldr	r2, [pc, #512]	@ (800c21c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c01a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c01e:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800c020:	e01a      	b.n	800c058 <HAL_RCCEx_PeriphCLKConfig+0x140>
 800c022:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c026:	3308      	adds	r3, #8
 800c028:	2100      	movs	r1, #0
 800c02a:	4618      	mov	r0, r3
 800c02c:	f002 f9f6 	bl	800e41c <RCCEx_PLL2_Config>
 800c030:	4603      	mov	r3, r0
 800c032:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c036:	e00f      	b.n	800c058 <HAL_RCCEx_PeriphCLKConfig+0x140>
 800c038:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c03c:	3328      	adds	r3, #40	@ 0x28
 800c03e:	2100      	movs	r1, #0
 800c040:	4618      	mov	r0, r3
 800c042:	f002 fa9d 	bl	800e580 <RCCEx_PLL3_Config>
 800c046:	4603      	mov	r3, r0
 800c048:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c04c:	e004      	b.n	800c058 <HAL_RCCEx_PeriphCLKConfig+0x140>
 800c04e:	2301      	movs	r3, #1
 800c050:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c054:	e000      	b.n	800c058 <HAL_RCCEx_PeriphCLKConfig+0x140>
 800c056:	bf00      	nop
 800c058:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c05c:	2b00      	cmp	r3, #0
 800c05e:	d10a      	bne.n	800c076 <HAL_RCCEx_PeriphCLKConfig+0x15e>
 800c060:	4b6e      	ldr	r3, [pc, #440]	@ (800c21c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c062:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c064:	f023 0107 	bic.w	r1, r3, #7
 800c068:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c06c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c06e:	4a6b      	ldr	r2, [pc, #428]	@ (800c21c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c070:	430b      	orrs	r3, r1
 800c072:	6513      	str	r3, [r2, #80]	@ 0x50
 800c074:	e003      	b.n	800c07e <HAL_RCCEx_PeriphCLKConfig+0x166>
 800c076:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c07a:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c07e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c082:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c086:	f402 6a80 	and.w	sl, r2, #1024	@ 0x400
 800c08a:	f04f 0b00 	mov.w	fp, #0
 800c08e:	ea5a 030b 	orrs.w	r3, sl, fp
 800c092:	d05b      	beq.n	800c14c <HAL_RCCEx_PeriphCLKConfig+0x234>
 800c094:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c098:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800c09c:	f5b3 0f20 	cmp.w	r3, #10485760	@ 0xa00000
 800c0a0:	d03b      	beq.n	800c11a <HAL_RCCEx_PeriphCLKConfig+0x202>
 800c0a2:	f5b3 0f20 	cmp.w	r3, #10485760	@ 0xa00000
 800c0a6:	d834      	bhi.n	800c112 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800c0a8:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800c0ac:	d037      	beq.n	800c11e <HAL_RCCEx_PeriphCLKConfig+0x206>
 800c0ae:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800c0b2:	d82e      	bhi.n	800c112 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800c0b4:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 800c0b8:	d033      	beq.n	800c122 <HAL_RCCEx_PeriphCLKConfig+0x20a>
 800c0ba:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 800c0be:	d828      	bhi.n	800c112 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800c0c0:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800c0c4:	d01a      	beq.n	800c0fc <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800c0c6:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800c0ca:	d822      	bhi.n	800c112 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800c0cc:	2b00      	cmp	r3, #0
 800c0ce:	d003      	beq.n	800c0d8 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
 800c0d0:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800c0d4:	d007      	beq.n	800c0e6 <HAL_RCCEx_PeriphCLKConfig+0x1ce>
 800c0d6:	e01c      	b.n	800c112 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800c0d8:	4b50      	ldr	r3, [pc, #320]	@ (800c21c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c0da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c0dc:	4a4f      	ldr	r2, [pc, #316]	@ (800c21c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c0de:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c0e2:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800c0e4:	e01e      	b.n	800c124 <HAL_RCCEx_PeriphCLKConfig+0x20c>
 800c0e6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c0ea:	3308      	adds	r3, #8
 800c0ec:	2100      	movs	r1, #0
 800c0ee:	4618      	mov	r0, r3
 800c0f0:	f002 f994 	bl	800e41c <RCCEx_PLL2_Config>
 800c0f4:	4603      	mov	r3, r0
 800c0f6:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c0fa:	e013      	b.n	800c124 <HAL_RCCEx_PeriphCLKConfig+0x20c>
 800c0fc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c100:	3328      	adds	r3, #40	@ 0x28
 800c102:	2100      	movs	r1, #0
 800c104:	4618      	mov	r0, r3
 800c106:	f002 fa3b 	bl	800e580 <RCCEx_PLL3_Config>
 800c10a:	4603      	mov	r3, r0
 800c10c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c110:	e008      	b.n	800c124 <HAL_RCCEx_PeriphCLKConfig+0x20c>
 800c112:	2301      	movs	r3, #1
 800c114:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c118:	e004      	b.n	800c124 <HAL_RCCEx_PeriphCLKConfig+0x20c>
 800c11a:	bf00      	nop
 800c11c:	e002      	b.n	800c124 <HAL_RCCEx_PeriphCLKConfig+0x20c>
 800c11e:	bf00      	nop
 800c120:	e000      	b.n	800c124 <HAL_RCCEx_PeriphCLKConfig+0x20c>
 800c122:	bf00      	nop
 800c124:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c128:	2b00      	cmp	r3, #0
 800c12a:	d10b      	bne.n	800c144 <HAL_RCCEx_PeriphCLKConfig+0x22c>
 800c12c:	4b3b      	ldr	r3, [pc, #236]	@ (800c21c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c12e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c130:	f423 0160 	bic.w	r1, r3, #14680064	@ 0xe00000
 800c134:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c138:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800c13c:	4a37      	ldr	r2, [pc, #220]	@ (800c21c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c13e:	430b      	orrs	r3, r1
 800c140:	6593      	str	r3, [r2, #88]	@ 0x58
 800c142:	e003      	b.n	800c14c <HAL_RCCEx_PeriphCLKConfig+0x234>
 800c144:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c148:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c14c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c150:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c154:	f402 6300 	and.w	r3, r2, #2048	@ 0x800
 800c158:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 800c15c:	2300      	movs	r3, #0
 800c15e:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 800c162:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	@ 0xf8
 800c166:	460b      	mov	r3, r1
 800c168:	4313      	orrs	r3, r2
 800c16a:	d05d      	beq.n	800c228 <HAL_RCCEx_PeriphCLKConfig+0x310>
 800c16c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c170:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800c174:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 800c178:	d03b      	beq.n	800c1f2 <HAL_RCCEx_PeriphCLKConfig+0x2da>
 800c17a:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 800c17e:	d834      	bhi.n	800c1ea <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 800c180:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800c184:	d037      	beq.n	800c1f6 <HAL_RCCEx_PeriphCLKConfig+0x2de>
 800c186:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800c18a:	d82e      	bhi.n	800c1ea <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 800c18c:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 800c190:	d033      	beq.n	800c1fa <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 800c192:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 800c196:	d828      	bhi.n	800c1ea <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 800c198:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800c19c:	d01a      	beq.n	800c1d4 <HAL_RCCEx_PeriphCLKConfig+0x2bc>
 800c19e:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800c1a2:	d822      	bhi.n	800c1ea <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 800c1a4:	2b00      	cmp	r3, #0
 800c1a6:	d003      	beq.n	800c1b0 <HAL_RCCEx_PeriphCLKConfig+0x298>
 800c1a8:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800c1ac:	d007      	beq.n	800c1be <HAL_RCCEx_PeriphCLKConfig+0x2a6>
 800c1ae:	e01c      	b.n	800c1ea <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 800c1b0:	4b1a      	ldr	r3, [pc, #104]	@ (800c21c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c1b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c1b4:	4a19      	ldr	r2, [pc, #100]	@ (800c21c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c1b6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c1ba:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800c1bc:	e01e      	b.n	800c1fc <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 800c1be:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c1c2:	3308      	adds	r3, #8
 800c1c4:	2100      	movs	r1, #0
 800c1c6:	4618      	mov	r0, r3
 800c1c8:	f002 f928 	bl	800e41c <RCCEx_PLL2_Config>
 800c1cc:	4603      	mov	r3, r0
 800c1ce:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c1d2:	e013      	b.n	800c1fc <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 800c1d4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c1d8:	3328      	adds	r3, #40	@ 0x28
 800c1da:	2100      	movs	r1, #0
 800c1dc:	4618      	mov	r0, r3
 800c1de:	f002 f9cf 	bl	800e580 <RCCEx_PLL3_Config>
 800c1e2:	4603      	mov	r3, r0
 800c1e4:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c1e8:	e008      	b.n	800c1fc <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 800c1ea:	2301      	movs	r3, #1
 800c1ec:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c1f0:	e004      	b.n	800c1fc <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 800c1f2:	bf00      	nop
 800c1f4:	e002      	b.n	800c1fc <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 800c1f6:	bf00      	nop
 800c1f8:	e000      	b.n	800c1fc <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 800c1fa:	bf00      	nop
 800c1fc:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c200:	2b00      	cmp	r3, #0
 800c202:	d10d      	bne.n	800c220 <HAL_RCCEx_PeriphCLKConfig+0x308>
 800c204:	4b05      	ldr	r3, [pc, #20]	@ (800c21c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c206:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c208:	f023 61e0 	bic.w	r1, r3, #117440512	@ 0x7000000
 800c20c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c210:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800c214:	4a01      	ldr	r2, [pc, #4]	@ (800c21c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800c216:	430b      	orrs	r3, r1
 800c218:	6593      	str	r3, [r2, #88]	@ 0x58
 800c21a:	e005      	b.n	800c228 <HAL_RCCEx_PeriphCLKConfig+0x310>
 800c21c:	58024400 	.word	0x58024400
 800c220:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c224:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c228:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c22c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c230:	f002 7300 	and.w	r3, r2, #33554432	@ 0x2000000
 800c234:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 800c238:	2300      	movs	r3, #0
 800c23a:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 800c23e:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	@ 0xf0
 800c242:	460b      	mov	r3, r1
 800c244:	4313      	orrs	r3, r2
 800c246:	d03a      	beq.n	800c2be <HAL_RCCEx_PeriphCLKConfig+0x3a6>
 800c248:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c24c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c24e:	2b30      	cmp	r3, #48	@ 0x30
 800c250:	d01f      	beq.n	800c292 <HAL_RCCEx_PeriphCLKConfig+0x37a>
 800c252:	2b30      	cmp	r3, #48	@ 0x30
 800c254:	d819      	bhi.n	800c28a <HAL_RCCEx_PeriphCLKConfig+0x372>
 800c256:	2b20      	cmp	r3, #32
 800c258:	d00c      	beq.n	800c274 <HAL_RCCEx_PeriphCLKConfig+0x35c>
 800c25a:	2b20      	cmp	r3, #32
 800c25c:	d815      	bhi.n	800c28a <HAL_RCCEx_PeriphCLKConfig+0x372>
 800c25e:	2b00      	cmp	r3, #0
 800c260:	d019      	beq.n	800c296 <HAL_RCCEx_PeriphCLKConfig+0x37e>
 800c262:	2b10      	cmp	r3, #16
 800c264:	d111      	bne.n	800c28a <HAL_RCCEx_PeriphCLKConfig+0x372>
 800c266:	4baa      	ldr	r3, [pc, #680]	@ (800c510 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c268:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c26a:	4aa9      	ldr	r2, [pc, #676]	@ (800c510 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c26c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c270:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800c272:	e011      	b.n	800c298 <HAL_RCCEx_PeriphCLKConfig+0x380>
 800c274:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c278:	3308      	adds	r3, #8
 800c27a:	2102      	movs	r1, #2
 800c27c:	4618      	mov	r0, r3
 800c27e:	f002 f8cd 	bl	800e41c <RCCEx_PLL2_Config>
 800c282:	4603      	mov	r3, r0
 800c284:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c288:	e006      	b.n	800c298 <HAL_RCCEx_PeriphCLKConfig+0x380>
 800c28a:	2301      	movs	r3, #1
 800c28c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c290:	e002      	b.n	800c298 <HAL_RCCEx_PeriphCLKConfig+0x380>
 800c292:	bf00      	nop
 800c294:	e000      	b.n	800c298 <HAL_RCCEx_PeriphCLKConfig+0x380>
 800c296:	bf00      	nop
 800c298:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c29c:	2b00      	cmp	r3, #0
 800c29e:	d10a      	bne.n	800c2b6 <HAL_RCCEx_PeriphCLKConfig+0x39e>
 800c2a0:	4b9b      	ldr	r3, [pc, #620]	@ (800c510 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c2a2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c2a4:	f023 0130 	bic.w	r1, r3, #48	@ 0x30
 800c2a8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c2ac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c2ae:	4a98      	ldr	r2, [pc, #608]	@ (800c510 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c2b0:	430b      	orrs	r3, r1
 800c2b2:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800c2b4:	e003      	b.n	800c2be <HAL_RCCEx_PeriphCLKConfig+0x3a6>
 800c2b6:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c2ba:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c2be:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c2c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c2c6:	f402 5380 	and.w	r3, r2, #4096	@ 0x1000
 800c2ca:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800c2ce:	2300      	movs	r3, #0
 800c2d0:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 800c2d4:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	@ 0xe8
 800c2d8:	460b      	mov	r3, r1
 800c2da:	4313      	orrs	r3, r2
 800c2dc:	d051      	beq.n	800c382 <HAL_RCCEx_PeriphCLKConfig+0x46a>
 800c2de:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c2e2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c2e4:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800c2e8:	d035      	beq.n	800c356 <HAL_RCCEx_PeriphCLKConfig+0x43e>
 800c2ea:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800c2ee:	d82e      	bhi.n	800c34e <HAL_RCCEx_PeriphCLKConfig+0x436>
 800c2f0:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800c2f4:	d031      	beq.n	800c35a <HAL_RCCEx_PeriphCLKConfig+0x442>
 800c2f6:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800c2fa:	d828      	bhi.n	800c34e <HAL_RCCEx_PeriphCLKConfig+0x436>
 800c2fc:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800c300:	d01a      	beq.n	800c338 <HAL_RCCEx_PeriphCLKConfig+0x420>
 800c302:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800c306:	d822      	bhi.n	800c34e <HAL_RCCEx_PeriphCLKConfig+0x436>
 800c308:	2b00      	cmp	r3, #0
 800c30a:	d003      	beq.n	800c314 <HAL_RCCEx_PeriphCLKConfig+0x3fc>
 800c30c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800c310:	d007      	beq.n	800c322 <HAL_RCCEx_PeriphCLKConfig+0x40a>
 800c312:	e01c      	b.n	800c34e <HAL_RCCEx_PeriphCLKConfig+0x436>
 800c314:	4b7e      	ldr	r3, [pc, #504]	@ (800c510 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c316:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c318:	4a7d      	ldr	r2, [pc, #500]	@ (800c510 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c31a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c31e:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800c320:	e01c      	b.n	800c35c <HAL_RCCEx_PeriphCLKConfig+0x444>
 800c322:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c326:	3308      	adds	r3, #8
 800c328:	2100      	movs	r1, #0
 800c32a:	4618      	mov	r0, r3
 800c32c:	f002 f876 	bl	800e41c <RCCEx_PLL2_Config>
 800c330:	4603      	mov	r3, r0
 800c332:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c336:	e011      	b.n	800c35c <HAL_RCCEx_PeriphCLKConfig+0x444>
 800c338:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c33c:	3328      	adds	r3, #40	@ 0x28
 800c33e:	2100      	movs	r1, #0
 800c340:	4618      	mov	r0, r3
 800c342:	f002 f91d 	bl	800e580 <RCCEx_PLL3_Config>
 800c346:	4603      	mov	r3, r0
 800c348:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c34c:	e006      	b.n	800c35c <HAL_RCCEx_PeriphCLKConfig+0x444>
 800c34e:	2301      	movs	r3, #1
 800c350:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c354:	e002      	b.n	800c35c <HAL_RCCEx_PeriphCLKConfig+0x444>
 800c356:	bf00      	nop
 800c358:	e000      	b.n	800c35c <HAL_RCCEx_PeriphCLKConfig+0x444>
 800c35a:	bf00      	nop
 800c35c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c360:	2b00      	cmp	r3, #0
 800c362:	d10a      	bne.n	800c37a <HAL_RCCEx_PeriphCLKConfig+0x462>
 800c364:	4b6a      	ldr	r3, [pc, #424]	@ (800c510 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c366:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c368:	f423 41e0 	bic.w	r1, r3, #28672	@ 0x7000
 800c36c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c370:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c372:	4a67      	ldr	r2, [pc, #412]	@ (800c510 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c374:	430b      	orrs	r3, r1
 800c376:	6513      	str	r3, [r2, #80]	@ 0x50
 800c378:	e003      	b.n	800c382 <HAL_RCCEx_PeriphCLKConfig+0x46a>
 800c37a:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c37e:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c382:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c386:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c38a:	f402 5300 	and.w	r3, r2, #8192	@ 0x2000
 800c38e:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800c392:	2300      	movs	r3, #0
 800c394:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800c398:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	@ 0xe0
 800c39c:	460b      	mov	r3, r1
 800c39e:	4313      	orrs	r3, r2
 800c3a0:	d053      	beq.n	800c44a <HAL_RCCEx_PeriphCLKConfig+0x532>
 800c3a2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c3a6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800c3a8:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800c3ac:	d033      	beq.n	800c416 <HAL_RCCEx_PeriphCLKConfig+0x4fe>
 800c3ae:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800c3b2:	d82c      	bhi.n	800c40e <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 800c3b4:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 800c3b8:	d02f      	beq.n	800c41a <HAL_RCCEx_PeriphCLKConfig+0x502>
 800c3ba:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 800c3be:	d826      	bhi.n	800c40e <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 800c3c0:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800c3c4:	d02b      	beq.n	800c41e <HAL_RCCEx_PeriphCLKConfig+0x506>
 800c3c6:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800c3ca:	d820      	bhi.n	800c40e <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 800c3cc:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800c3d0:	d012      	beq.n	800c3f8 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 800c3d2:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800c3d6:	d81a      	bhi.n	800c40e <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 800c3d8:	2b00      	cmp	r3, #0
 800c3da:	d022      	beq.n	800c422 <HAL_RCCEx_PeriphCLKConfig+0x50a>
 800c3dc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800c3e0:	d115      	bne.n	800c40e <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 800c3e2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c3e6:	3308      	adds	r3, #8
 800c3e8:	2101      	movs	r1, #1
 800c3ea:	4618      	mov	r0, r3
 800c3ec:	f002 f816 	bl	800e41c <RCCEx_PLL2_Config>
 800c3f0:	4603      	mov	r3, r0
 800c3f2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c3f6:	e015      	b.n	800c424 <HAL_RCCEx_PeriphCLKConfig+0x50c>
 800c3f8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c3fc:	3328      	adds	r3, #40	@ 0x28
 800c3fe:	2101      	movs	r1, #1
 800c400:	4618      	mov	r0, r3
 800c402:	f002 f8bd 	bl	800e580 <RCCEx_PLL3_Config>
 800c406:	4603      	mov	r3, r0
 800c408:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c40c:	e00a      	b.n	800c424 <HAL_RCCEx_PeriphCLKConfig+0x50c>
 800c40e:	2301      	movs	r3, #1
 800c410:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c414:	e006      	b.n	800c424 <HAL_RCCEx_PeriphCLKConfig+0x50c>
 800c416:	bf00      	nop
 800c418:	e004      	b.n	800c424 <HAL_RCCEx_PeriphCLKConfig+0x50c>
 800c41a:	bf00      	nop
 800c41c:	e002      	b.n	800c424 <HAL_RCCEx_PeriphCLKConfig+0x50c>
 800c41e:	bf00      	nop
 800c420:	e000      	b.n	800c424 <HAL_RCCEx_PeriphCLKConfig+0x50c>
 800c422:	bf00      	nop
 800c424:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c428:	2b00      	cmp	r3, #0
 800c42a:	d10a      	bne.n	800c442 <HAL_RCCEx_PeriphCLKConfig+0x52a>
 800c42c:	4b38      	ldr	r3, [pc, #224]	@ (800c510 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c42e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c430:	f423 21e0 	bic.w	r1, r3, #458752	@ 0x70000
 800c434:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c438:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800c43a:	4a35      	ldr	r2, [pc, #212]	@ (800c510 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c43c:	430b      	orrs	r3, r1
 800c43e:	6513      	str	r3, [r2, #80]	@ 0x50
 800c440:	e003      	b.n	800c44a <HAL_RCCEx_PeriphCLKConfig+0x532>
 800c442:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c446:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c44a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c44e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c452:	f402 4380 	and.w	r3, r2, #16384	@ 0x4000
 800c456:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800c45a:	2300      	movs	r3, #0
 800c45c:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 800c460:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 800c464:	460b      	mov	r3, r1
 800c466:	4313      	orrs	r3, r2
 800c468:	d058      	beq.n	800c51c <HAL_RCCEx_PeriphCLKConfig+0x604>
 800c46a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c46e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c472:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800c476:	d033      	beq.n	800c4e0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
 800c478:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800c47c:	d82c      	bhi.n	800c4d8 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800c47e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800c482:	d02f      	beq.n	800c4e4 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
 800c484:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800c488:	d826      	bhi.n	800c4d8 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800c48a:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 800c48e:	d02b      	beq.n	800c4e8 <HAL_RCCEx_PeriphCLKConfig+0x5d0>
 800c490:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 800c494:	d820      	bhi.n	800c4d8 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800c496:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800c49a:	d012      	beq.n	800c4c2 <HAL_RCCEx_PeriphCLKConfig+0x5aa>
 800c49c:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800c4a0:	d81a      	bhi.n	800c4d8 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800c4a2:	2b00      	cmp	r3, #0
 800c4a4:	d022      	beq.n	800c4ec <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 800c4a6:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800c4aa:	d115      	bne.n	800c4d8 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800c4ac:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c4b0:	3308      	adds	r3, #8
 800c4b2:	2101      	movs	r1, #1
 800c4b4:	4618      	mov	r0, r3
 800c4b6:	f001 ffb1 	bl	800e41c <RCCEx_PLL2_Config>
 800c4ba:	4603      	mov	r3, r0
 800c4bc:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c4c0:	e015      	b.n	800c4ee <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 800c4c2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c4c6:	3328      	adds	r3, #40	@ 0x28
 800c4c8:	2101      	movs	r1, #1
 800c4ca:	4618      	mov	r0, r3
 800c4cc:	f002 f858 	bl	800e580 <RCCEx_PLL3_Config>
 800c4d0:	4603      	mov	r3, r0
 800c4d2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c4d6:	e00a      	b.n	800c4ee <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 800c4d8:	2301      	movs	r3, #1
 800c4da:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c4de:	e006      	b.n	800c4ee <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 800c4e0:	bf00      	nop
 800c4e2:	e004      	b.n	800c4ee <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 800c4e4:	bf00      	nop
 800c4e6:	e002      	b.n	800c4ee <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 800c4e8:	bf00      	nop
 800c4ea:	e000      	b.n	800c4ee <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 800c4ec:	bf00      	nop
 800c4ee:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c4f2:	2b00      	cmp	r3, #0
 800c4f4:	d10e      	bne.n	800c514 <HAL_RCCEx_PeriphCLKConfig+0x5fc>
 800c4f6:	4b06      	ldr	r3, [pc, #24]	@ (800c510 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c4f8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c4fa:	f023 41e0 	bic.w	r1, r3, #1879048192	@ 0x70000000
 800c4fe:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c502:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c506:	4a02      	ldr	r2, [pc, #8]	@ (800c510 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800c508:	430b      	orrs	r3, r1
 800c50a:	6593      	str	r3, [r2, #88]	@ 0x58
 800c50c:	e006      	b.n	800c51c <HAL_RCCEx_PeriphCLKConfig+0x604>
 800c50e:	bf00      	nop
 800c510:	58024400 	.word	0x58024400
 800c514:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c518:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c51c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c520:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c524:	f402 4300 	and.w	r3, r2, #32768	@ 0x8000
 800c528:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800c52c:	2300      	movs	r3, #0
 800c52e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800c532:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	@ 0xd0
 800c536:	460b      	mov	r3, r1
 800c538:	4313      	orrs	r3, r2
 800c53a:	d037      	beq.n	800c5ac <HAL_RCCEx_PeriphCLKConfig+0x694>
 800c53c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c540:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800c542:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800c546:	d00e      	beq.n	800c566 <HAL_RCCEx_PeriphCLKConfig+0x64e>
 800c548:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800c54c:	d816      	bhi.n	800c57c <HAL_RCCEx_PeriphCLKConfig+0x664>
 800c54e:	2b00      	cmp	r3, #0
 800c550:	d018      	beq.n	800c584 <HAL_RCCEx_PeriphCLKConfig+0x66c>
 800c552:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800c556:	d111      	bne.n	800c57c <HAL_RCCEx_PeriphCLKConfig+0x664>
 800c558:	4bc4      	ldr	r3, [pc, #784]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c55a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c55c:	4ac3      	ldr	r2, [pc, #780]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c55e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c562:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800c564:	e00f      	b.n	800c586 <HAL_RCCEx_PeriphCLKConfig+0x66e>
 800c566:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c56a:	3308      	adds	r3, #8
 800c56c:	2101      	movs	r1, #1
 800c56e:	4618      	mov	r0, r3
 800c570:	f001 ff54 	bl	800e41c <RCCEx_PLL2_Config>
 800c574:	4603      	mov	r3, r0
 800c576:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c57a:	e004      	b.n	800c586 <HAL_RCCEx_PeriphCLKConfig+0x66e>
 800c57c:	2301      	movs	r3, #1
 800c57e:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c582:	e000      	b.n	800c586 <HAL_RCCEx_PeriphCLKConfig+0x66e>
 800c584:	bf00      	nop
 800c586:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c58a:	2b00      	cmp	r3, #0
 800c58c:	d10a      	bne.n	800c5a4 <HAL_RCCEx_PeriphCLKConfig+0x68c>
 800c58e:	4bb7      	ldr	r3, [pc, #732]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c590:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c592:	f023 5140 	bic.w	r1, r3, #805306368	@ 0x30000000
 800c596:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c59a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800c59c:	4ab3      	ldr	r2, [pc, #716]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c59e:	430b      	orrs	r3, r1
 800c5a0:	6513      	str	r3, [r2, #80]	@ 0x50
 800c5a2:	e003      	b.n	800c5ac <HAL_RCCEx_PeriphCLKConfig+0x694>
 800c5a4:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c5a8:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c5ac:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c5b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c5b4:	f002 7380 	and.w	r3, r2, #16777216	@ 0x1000000
 800c5b8:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800c5bc:	2300      	movs	r3, #0
 800c5be:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 800c5c2:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	@ 0xc8
 800c5c6:	460b      	mov	r3, r1
 800c5c8:	4313      	orrs	r3, r2
 800c5ca:	d039      	beq.n	800c640 <HAL_RCCEx_PeriphCLKConfig+0x728>
 800c5cc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c5d0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c5d2:	2b03      	cmp	r3, #3
 800c5d4:	d81c      	bhi.n	800c610 <HAL_RCCEx_PeriphCLKConfig+0x6f8>
 800c5d6:	a201      	add	r2, pc, #4	@ (adr r2, 800c5dc <HAL_RCCEx_PeriphCLKConfig+0x6c4>)
 800c5d8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c5dc:	0800c619 	.word	0x0800c619
 800c5e0:	0800c5ed 	.word	0x0800c5ed
 800c5e4:	0800c5fb 	.word	0x0800c5fb
 800c5e8:	0800c619 	.word	0x0800c619
 800c5ec:	4b9f      	ldr	r3, [pc, #636]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c5ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c5f0:	4a9e      	ldr	r2, [pc, #632]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c5f2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c5f6:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800c5f8:	e00f      	b.n	800c61a <HAL_RCCEx_PeriphCLKConfig+0x702>
 800c5fa:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c5fe:	3308      	adds	r3, #8
 800c600:	2102      	movs	r1, #2
 800c602:	4618      	mov	r0, r3
 800c604:	f001 ff0a 	bl	800e41c <RCCEx_PLL2_Config>
 800c608:	4603      	mov	r3, r0
 800c60a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c60e:	e004      	b.n	800c61a <HAL_RCCEx_PeriphCLKConfig+0x702>
 800c610:	2301      	movs	r3, #1
 800c612:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c616:	e000      	b.n	800c61a <HAL_RCCEx_PeriphCLKConfig+0x702>
 800c618:	bf00      	nop
 800c61a:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c61e:	2b00      	cmp	r3, #0
 800c620:	d10a      	bne.n	800c638 <HAL_RCCEx_PeriphCLKConfig+0x720>
 800c622:	4b92      	ldr	r3, [pc, #584]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c624:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c626:	f023 0103 	bic.w	r1, r3, #3
 800c62a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c62e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c630:	4a8e      	ldr	r2, [pc, #568]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c632:	430b      	orrs	r3, r1
 800c634:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800c636:	e003      	b.n	800c640 <HAL_RCCEx_PeriphCLKConfig+0x728>
 800c638:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c63c:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c640:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c644:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c648:	f402 0380 	and.w	r3, r2, #4194304	@ 0x400000
 800c64c:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800c650:	2300      	movs	r3, #0
 800c652:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800c656:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 800c65a:	460b      	mov	r3, r1
 800c65c:	4313      	orrs	r3, r2
 800c65e:	f000 8099 	beq.w	800c794 <HAL_RCCEx_PeriphCLKConfig+0x87c>
 800c662:	4b83      	ldr	r3, [pc, #524]	@ (800c870 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 800c664:	681b      	ldr	r3, [r3, #0]
 800c666:	4a82      	ldr	r2, [pc, #520]	@ (800c870 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 800c668:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800c66c:	6013      	str	r3, [r2, #0]
 800c66e:	f7f8 fe3f 	bl	80052f0 <HAL_GetTick>
 800c672:	f8c7 0110 	str.w	r0, [r7, #272]	@ 0x110
 800c676:	e00b      	b.n	800c690 <HAL_RCCEx_PeriphCLKConfig+0x778>
 800c678:	f7f8 fe3a 	bl	80052f0 <HAL_GetTick>
 800c67c:	4602      	mov	r2, r0
 800c67e:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 800c682:	1ad3      	subs	r3, r2, r3
 800c684:	2b64      	cmp	r3, #100	@ 0x64
 800c686:	d903      	bls.n	800c690 <HAL_RCCEx_PeriphCLKConfig+0x778>
 800c688:	2303      	movs	r3, #3
 800c68a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c68e:	e005      	b.n	800c69c <HAL_RCCEx_PeriphCLKConfig+0x784>
 800c690:	4b77      	ldr	r3, [pc, #476]	@ (800c870 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 800c692:	681b      	ldr	r3, [r3, #0]
 800c694:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800c698:	2b00      	cmp	r3, #0
 800c69a:	d0ed      	beq.n	800c678 <HAL_RCCEx_PeriphCLKConfig+0x760>
 800c69c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c6a0:	2b00      	cmp	r3, #0
 800c6a2:	d173      	bne.n	800c78c <HAL_RCCEx_PeriphCLKConfig+0x874>
 800c6a4:	4b71      	ldr	r3, [pc, #452]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c6a6:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 800c6a8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c6ac:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800c6b0:	4053      	eors	r3, r2
 800c6b2:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800c6b6:	2b00      	cmp	r3, #0
 800c6b8:	d015      	beq.n	800c6e6 <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 800c6ba:	4b6c      	ldr	r3, [pc, #432]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c6bc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800c6be:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800c6c2:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 800c6c6:	4b69      	ldr	r3, [pc, #420]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c6c8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800c6ca:	4a68      	ldr	r2, [pc, #416]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c6cc:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800c6d0:	6713      	str	r3, [r2, #112]	@ 0x70
 800c6d2:	4b66      	ldr	r3, [pc, #408]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c6d4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800c6d6:	4a65      	ldr	r2, [pc, #404]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c6d8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800c6dc:	6713      	str	r3, [r2, #112]	@ 0x70
 800c6de:	4a63      	ldr	r2, [pc, #396]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c6e0:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800c6e4:	6713      	str	r3, [r2, #112]	@ 0x70
 800c6e6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c6ea:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800c6ee:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800c6f2:	d118      	bne.n	800c726 <HAL_RCCEx_PeriphCLKConfig+0x80e>
 800c6f4:	f7f8 fdfc 	bl	80052f0 <HAL_GetTick>
 800c6f8:	f8c7 0110 	str.w	r0, [r7, #272]	@ 0x110
 800c6fc:	e00d      	b.n	800c71a <HAL_RCCEx_PeriphCLKConfig+0x802>
 800c6fe:	f7f8 fdf7 	bl	80052f0 <HAL_GetTick>
 800c702:	4602      	mov	r2, r0
 800c704:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 800c708:	1ad2      	subs	r2, r2, r3
 800c70a:	f241 3388 	movw	r3, #5000	@ 0x1388
 800c70e:	429a      	cmp	r2, r3
 800c710:	d903      	bls.n	800c71a <HAL_RCCEx_PeriphCLKConfig+0x802>
 800c712:	2303      	movs	r3, #3
 800c714:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c718:	e005      	b.n	800c726 <HAL_RCCEx_PeriphCLKConfig+0x80e>
 800c71a:	4b54      	ldr	r3, [pc, #336]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c71c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800c71e:	f003 0302 	and.w	r3, r3, #2
 800c722:	2b00      	cmp	r3, #0
 800c724:	d0eb      	beq.n	800c6fe <HAL_RCCEx_PeriphCLKConfig+0x7e6>
 800c726:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c72a:	2b00      	cmp	r3, #0
 800c72c:	d129      	bne.n	800c782 <HAL_RCCEx_PeriphCLKConfig+0x86a>
 800c72e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c732:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800c736:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800c73a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800c73e:	d10e      	bne.n	800c75e <HAL_RCCEx_PeriphCLKConfig+0x846>
 800c740:	4b4a      	ldr	r3, [pc, #296]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c742:	691b      	ldr	r3, [r3, #16]
 800c744:	f423 517c 	bic.w	r1, r3, #16128	@ 0x3f00
 800c748:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c74c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800c750:	091a      	lsrs	r2, r3, #4
 800c752:	4b48      	ldr	r3, [pc, #288]	@ (800c874 <HAL_RCCEx_PeriphCLKConfig+0x95c>)
 800c754:	4013      	ands	r3, r2
 800c756:	4a45      	ldr	r2, [pc, #276]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c758:	430b      	orrs	r3, r1
 800c75a:	6113      	str	r3, [r2, #16]
 800c75c:	e005      	b.n	800c76a <HAL_RCCEx_PeriphCLKConfig+0x852>
 800c75e:	4b43      	ldr	r3, [pc, #268]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c760:	691b      	ldr	r3, [r3, #16]
 800c762:	4a42      	ldr	r2, [pc, #264]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c764:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 800c768:	6113      	str	r3, [r2, #16]
 800c76a:	4b40      	ldr	r3, [pc, #256]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c76c:	6f19      	ldr	r1, [r3, #112]	@ 0x70
 800c76e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c772:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800c776:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c77a:	4a3c      	ldr	r2, [pc, #240]	@ (800c86c <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800c77c:	430b      	orrs	r3, r1
 800c77e:	6713      	str	r3, [r2, #112]	@ 0x70
 800c780:	e008      	b.n	800c794 <HAL_RCCEx_PeriphCLKConfig+0x87c>
 800c782:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c786:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c78a:	e003      	b.n	800c794 <HAL_RCCEx_PeriphCLKConfig+0x87c>
 800c78c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c790:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c794:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c798:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c79c:	f002 0301 	and.w	r3, r2, #1
 800c7a0:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800c7a4:	2300      	movs	r3, #0
 800c7a6:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 800c7aa:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	@ 0xb8
 800c7ae:	460b      	mov	r3, r1
 800c7b0:	4313      	orrs	r3, r2
 800c7b2:	f000 808f 	beq.w	800c8d4 <HAL_RCCEx_PeriphCLKConfig+0x9bc>
 800c7b6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c7ba:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800c7bc:	2b28      	cmp	r3, #40	@ 0x28
 800c7be:	d871      	bhi.n	800c8a4 <HAL_RCCEx_PeriphCLKConfig+0x98c>
 800c7c0:	a201      	add	r2, pc, #4	@ (adr r2, 800c7c8 <HAL_RCCEx_PeriphCLKConfig+0x8b0>)
 800c7c2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c7c6:	bf00      	nop
 800c7c8:	0800c8ad 	.word	0x0800c8ad
 800c7cc:	0800c8a5 	.word	0x0800c8a5
 800c7d0:	0800c8a5 	.word	0x0800c8a5
 800c7d4:	0800c8a5 	.word	0x0800c8a5
 800c7d8:	0800c8a5 	.word	0x0800c8a5
 800c7dc:	0800c8a5 	.word	0x0800c8a5
 800c7e0:	0800c8a5 	.word	0x0800c8a5
 800c7e4:	0800c8a5 	.word	0x0800c8a5
 800c7e8:	0800c879 	.word	0x0800c879
 800c7ec:	0800c8a5 	.word	0x0800c8a5
 800c7f0:	0800c8a5 	.word	0x0800c8a5
 800c7f4:	0800c8a5 	.word	0x0800c8a5
 800c7f8:	0800c8a5 	.word	0x0800c8a5
 800c7fc:	0800c8a5 	.word	0x0800c8a5
 800c800:	0800c8a5 	.word	0x0800c8a5
 800c804:	0800c8a5 	.word	0x0800c8a5
 800c808:	0800c88f 	.word	0x0800c88f
 800c80c:	0800c8a5 	.word	0x0800c8a5
 800c810:	0800c8a5 	.word	0x0800c8a5
 800c814:	0800c8a5 	.word	0x0800c8a5
 800c818:	0800c8a5 	.word	0x0800c8a5
 800c81c:	0800c8a5 	.word	0x0800c8a5
 800c820:	0800c8a5 	.word	0x0800c8a5
 800c824:	0800c8a5 	.word	0x0800c8a5
 800c828:	0800c8ad 	.word	0x0800c8ad
 800c82c:	0800c8a5 	.word	0x0800c8a5
 800c830:	0800c8a5 	.word	0x0800c8a5
 800c834:	0800c8a5 	.word	0x0800c8a5
 800c838:	0800c8a5 	.word	0x0800c8a5
 800c83c:	0800c8a5 	.word	0x0800c8a5
 800c840:	0800c8a5 	.word	0x0800c8a5
 800c844:	0800c8a5 	.word	0x0800c8a5
 800c848:	0800c8ad 	.word	0x0800c8ad
 800c84c:	0800c8a5 	.word	0x0800c8a5
 800c850:	0800c8a5 	.word	0x0800c8a5
 800c854:	0800c8a5 	.word	0x0800c8a5
 800c858:	0800c8a5 	.word	0x0800c8a5
 800c85c:	0800c8a5 	.word	0x0800c8a5
 800c860:	0800c8a5 	.word	0x0800c8a5
 800c864:	0800c8a5 	.word	0x0800c8a5
 800c868:	0800c8ad 	.word	0x0800c8ad
 800c86c:	58024400 	.word	0x58024400
 800c870:	58024800 	.word	0x58024800
 800c874:	00ffffcf 	.word	0x00ffffcf
 800c878:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c87c:	3308      	adds	r3, #8
 800c87e:	2101      	movs	r1, #1
 800c880:	4618      	mov	r0, r3
 800c882:	f001 fdcb 	bl	800e41c <RCCEx_PLL2_Config>
 800c886:	4603      	mov	r3, r0
 800c888:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c88c:	e00f      	b.n	800c8ae <HAL_RCCEx_PeriphCLKConfig+0x996>
 800c88e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c892:	3328      	adds	r3, #40	@ 0x28
 800c894:	2101      	movs	r1, #1
 800c896:	4618      	mov	r0, r3
 800c898:	f001 fe72 	bl	800e580 <RCCEx_PLL3_Config>
 800c89c:	4603      	mov	r3, r0
 800c89e:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c8a2:	e004      	b.n	800c8ae <HAL_RCCEx_PeriphCLKConfig+0x996>
 800c8a4:	2301      	movs	r3, #1
 800c8a6:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c8aa:	e000      	b.n	800c8ae <HAL_RCCEx_PeriphCLKConfig+0x996>
 800c8ac:	bf00      	nop
 800c8ae:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c8b2:	2b00      	cmp	r3, #0
 800c8b4:	d10a      	bne.n	800c8cc <HAL_RCCEx_PeriphCLKConfig+0x9b4>
 800c8b6:	4bbf      	ldr	r3, [pc, #764]	@ (800cbb4 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800c8b8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c8ba:	f023 0138 	bic.w	r1, r3, #56	@ 0x38
 800c8be:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c8c2:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800c8c4:	4abb      	ldr	r2, [pc, #748]	@ (800cbb4 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800c8c6:	430b      	orrs	r3, r1
 800c8c8:	6553      	str	r3, [r2, #84]	@ 0x54
 800c8ca:	e003      	b.n	800c8d4 <HAL_RCCEx_PeriphCLKConfig+0x9bc>
 800c8cc:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c8d0:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c8d4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c8d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c8dc:	f002 0302 	and.w	r3, r2, #2
 800c8e0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800c8e4:	2300      	movs	r3, #0
 800c8e6:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800c8ea:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	@ 0xb0
 800c8ee:	460b      	mov	r3, r1
 800c8f0:	4313      	orrs	r3, r2
 800c8f2:	d041      	beq.n	800c978 <HAL_RCCEx_PeriphCLKConfig+0xa60>
 800c8f4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c8f8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800c8fa:	2b05      	cmp	r3, #5
 800c8fc:	d824      	bhi.n	800c948 <HAL_RCCEx_PeriphCLKConfig+0xa30>
 800c8fe:	a201      	add	r2, pc, #4	@ (adr r2, 800c904 <HAL_RCCEx_PeriphCLKConfig+0x9ec>)
 800c900:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c904:	0800c951 	.word	0x0800c951
 800c908:	0800c91d 	.word	0x0800c91d
 800c90c:	0800c933 	.word	0x0800c933
 800c910:	0800c951 	.word	0x0800c951
 800c914:	0800c951 	.word	0x0800c951
 800c918:	0800c951 	.word	0x0800c951
 800c91c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c920:	3308      	adds	r3, #8
 800c922:	2101      	movs	r1, #1
 800c924:	4618      	mov	r0, r3
 800c926:	f001 fd79 	bl	800e41c <RCCEx_PLL2_Config>
 800c92a:	4603      	mov	r3, r0
 800c92c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c930:	e00f      	b.n	800c952 <HAL_RCCEx_PeriphCLKConfig+0xa3a>
 800c932:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c936:	3328      	adds	r3, #40	@ 0x28
 800c938:	2101      	movs	r1, #1
 800c93a:	4618      	mov	r0, r3
 800c93c:	f001 fe20 	bl	800e580 <RCCEx_PLL3_Config>
 800c940:	4603      	mov	r3, r0
 800c942:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c946:	e004      	b.n	800c952 <HAL_RCCEx_PeriphCLKConfig+0xa3a>
 800c948:	2301      	movs	r3, #1
 800c94a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c94e:	e000      	b.n	800c952 <HAL_RCCEx_PeriphCLKConfig+0xa3a>
 800c950:	bf00      	nop
 800c952:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c956:	2b00      	cmp	r3, #0
 800c958:	d10a      	bne.n	800c970 <HAL_RCCEx_PeriphCLKConfig+0xa58>
 800c95a:	4b96      	ldr	r3, [pc, #600]	@ (800cbb4 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800c95c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c95e:	f023 0107 	bic.w	r1, r3, #7
 800c962:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c966:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800c968:	4a92      	ldr	r2, [pc, #584]	@ (800cbb4 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800c96a:	430b      	orrs	r3, r1
 800c96c:	6553      	str	r3, [r2, #84]	@ 0x54
 800c96e:	e003      	b.n	800c978 <HAL_RCCEx_PeriphCLKConfig+0xa60>
 800c970:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c974:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800c978:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c97c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c980:	f002 0304 	and.w	r3, r2, #4
 800c984:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 800c988:	2300      	movs	r3, #0
 800c98a:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800c98e:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 800c992:	460b      	mov	r3, r1
 800c994:	4313      	orrs	r3, r2
 800c996:	d044      	beq.n	800ca22 <HAL_RCCEx_PeriphCLKConfig+0xb0a>
 800c998:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c99c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800c9a0:	2b05      	cmp	r3, #5
 800c9a2:	d825      	bhi.n	800c9f0 <HAL_RCCEx_PeriphCLKConfig+0xad8>
 800c9a4:	a201      	add	r2, pc, #4	@ (adr r2, 800c9ac <HAL_RCCEx_PeriphCLKConfig+0xa94>)
 800c9a6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c9aa:	bf00      	nop
 800c9ac:	0800c9f9 	.word	0x0800c9f9
 800c9b0:	0800c9c5 	.word	0x0800c9c5
 800c9b4:	0800c9db 	.word	0x0800c9db
 800c9b8:	0800c9f9 	.word	0x0800c9f9
 800c9bc:	0800c9f9 	.word	0x0800c9f9
 800c9c0:	0800c9f9 	.word	0x0800c9f9
 800c9c4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c9c8:	3308      	adds	r3, #8
 800c9ca:	2101      	movs	r1, #1
 800c9cc:	4618      	mov	r0, r3
 800c9ce:	f001 fd25 	bl	800e41c <RCCEx_PLL2_Config>
 800c9d2:	4603      	mov	r3, r0
 800c9d4:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c9d8:	e00f      	b.n	800c9fa <HAL_RCCEx_PeriphCLKConfig+0xae2>
 800c9da:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800c9de:	3328      	adds	r3, #40	@ 0x28
 800c9e0:	2101      	movs	r1, #1
 800c9e2:	4618      	mov	r0, r3
 800c9e4:	f001 fdcc 	bl	800e580 <RCCEx_PLL3_Config>
 800c9e8:	4603      	mov	r3, r0
 800c9ea:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c9ee:	e004      	b.n	800c9fa <HAL_RCCEx_PeriphCLKConfig+0xae2>
 800c9f0:	2301      	movs	r3, #1
 800c9f2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800c9f6:	e000      	b.n	800c9fa <HAL_RCCEx_PeriphCLKConfig+0xae2>
 800c9f8:	bf00      	nop
 800c9fa:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800c9fe:	2b00      	cmp	r3, #0
 800ca00:	d10b      	bne.n	800ca1a <HAL_RCCEx_PeriphCLKConfig+0xb02>
 800ca02:	4b6c      	ldr	r3, [pc, #432]	@ (800cbb4 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800ca04:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800ca06:	f023 0107 	bic.w	r1, r3, #7
 800ca0a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ca0e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800ca12:	4a68      	ldr	r2, [pc, #416]	@ (800cbb4 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800ca14:	430b      	orrs	r3, r1
 800ca16:	6593      	str	r3, [r2, #88]	@ 0x58
 800ca18:	e003      	b.n	800ca22 <HAL_RCCEx_PeriphCLKConfig+0xb0a>
 800ca1a:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800ca1e:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800ca22:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ca26:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ca2a:	f002 0320 	and.w	r3, r2, #32
 800ca2e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800ca32:	2300      	movs	r3, #0
 800ca34:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800ca38:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	@ 0xa0
 800ca3c:	460b      	mov	r3, r1
 800ca3e:	4313      	orrs	r3, r2
 800ca40:	d055      	beq.n	800caee <HAL_RCCEx_PeriphCLKConfig+0xbd6>
 800ca42:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ca46:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800ca4a:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800ca4e:	d033      	beq.n	800cab8 <HAL_RCCEx_PeriphCLKConfig+0xba0>
 800ca50:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800ca54:	d82c      	bhi.n	800cab0 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800ca56:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800ca5a:	d02f      	beq.n	800cabc <HAL_RCCEx_PeriphCLKConfig+0xba4>
 800ca5c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800ca60:	d826      	bhi.n	800cab0 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800ca62:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 800ca66:	d02b      	beq.n	800cac0 <HAL_RCCEx_PeriphCLKConfig+0xba8>
 800ca68:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 800ca6c:	d820      	bhi.n	800cab0 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800ca6e:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800ca72:	d012      	beq.n	800ca9a <HAL_RCCEx_PeriphCLKConfig+0xb82>
 800ca74:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800ca78:	d81a      	bhi.n	800cab0 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800ca7a:	2b00      	cmp	r3, #0
 800ca7c:	d022      	beq.n	800cac4 <HAL_RCCEx_PeriphCLKConfig+0xbac>
 800ca7e:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800ca82:	d115      	bne.n	800cab0 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800ca84:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ca88:	3308      	adds	r3, #8
 800ca8a:	2100      	movs	r1, #0
 800ca8c:	4618      	mov	r0, r3
 800ca8e:	f001 fcc5 	bl	800e41c <RCCEx_PLL2_Config>
 800ca92:	4603      	mov	r3, r0
 800ca94:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800ca98:	e015      	b.n	800cac6 <HAL_RCCEx_PeriphCLKConfig+0xbae>
 800ca9a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ca9e:	3328      	adds	r3, #40	@ 0x28
 800caa0:	2102      	movs	r1, #2
 800caa2:	4618      	mov	r0, r3
 800caa4:	f001 fd6c 	bl	800e580 <RCCEx_PLL3_Config>
 800caa8:	4603      	mov	r3, r0
 800caaa:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800caae:	e00a      	b.n	800cac6 <HAL_RCCEx_PeriphCLKConfig+0xbae>
 800cab0:	2301      	movs	r3, #1
 800cab2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cab6:	e006      	b.n	800cac6 <HAL_RCCEx_PeriphCLKConfig+0xbae>
 800cab8:	bf00      	nop
 800caba:	e004      	b.n	800cac6 <HAL_RCCEx_PeriphCLKConfig+0xbae>
 800cabc:	bf00      	nop
 800cabe:	e002      	b.n	800cac6 <HAL_RCCEx_PeriphCLKConfig+0xbae>
 800cac0:	bf00      	nop
 800cac2:	e000      	b.n	800cac6 <HAL_RCCEx_PeriphCLKConfig+0xbae>
 800cac4:	bf00      	nop
 800cac6:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800caca:	2b00      	cmp	r3, #0
 800cacc:	d10b      	bne.n	800cae6 <HAL_RCCEx_PeriphCLKConfig+0xbce>
 800cace:	4b39      	ldr	r3, [pc, #228]	@ (800cbb4 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800cad0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800cad2:	f023 41e0 	bic.w	r1, r3, #1879048192	@ 0x70000000
 800cad6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cada:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800cade:	4a35      	ldr	r2, [pc, #212]	@ (800cbb4 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800cae0:	430b      	orrs	r3, r1
 800cae2:	6553      	str	r3, [r2, #84]	@ 0x54
 800cae4:	e003      	b.n	800caee <HAL_RCCEx_PeriphCLKConfig+0xbd6>
 800cae6:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800caea:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800caee:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800caf2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800caf6:	f002 0340 	and.w	r3, r2, #64	@ 0x40
 800cafa:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800cafe:	2300      	movs	r3, #0
 800cb00:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800cb04:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	@ 0x98
 800cb08:	460b      	mov	r3, r1
 800cb0a:	4313      	orrs	r3, r2
 800cb0c:	d058      	beq.n	800cbc0 <HAL_RCCEx_PeriphCLKConfig+0xca8>
 800cb0e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cb12:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800cb16:	f5b3 5fa0 	cmp.w	r3, #5120	@ 0x1400
 800cb1a:	d033      	beq.n	800cb84 <HAL_RCCEx_PeriphCLKConfig+0xc6c>
 800cb1c:	f5b3 5fa0 	cmp.w	r3, #5120	@ 0x1400
 800cb20:	d82c      	bhi.n	800cb7c <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800cb22:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800cb26:	d02f      	beq.n	800cb88 <HAL_RCCEx_PeriphCLKConfig+0xc70>
 800cb28:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800cb2c:	d826      	bhi.n	800cb7c <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800cb2e:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800cb32:	d02b      	beq.n	800cb8c <HAL_RCCEx_PeriphCLKConfig+0xc74>
 800cb34:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800cb38:	d820      	bhi.n	800cb7c <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800cb3a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800cb3e:	d012      	beq.n	800cb66 <HAL_RCCEx_PeriphCLKConfig+0xc4e>
 800cb40:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800cb44:	d81a      	bhi.n	800cb7c <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800cb46:	2b00      	cmp	r3, #0
 800cb48:	d022      	beq.n	800cb90 <HAL_RCCEx_PeriphCLKConfig+0xc78>
 800cb4a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800cb4e:	d115      	bne.n	800cb7c <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800cb50:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cb54:	3308      	adds	r3, #8
 800cb56:	2100      	movs	r1, #0
 800cb58:	4618      	mov	r0, r3
 800cb5a:	f001 fc5f 	bl	800e41c <RCCEx_PLL2_Config>
 800cb5e:	4603      	mov	r3, r0
 800cb60:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cb64:	e015      	b.n	800cb92 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 800cb66:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cb6a:	3328      	adds	r3, #40	@ 0x28
 800cb6c:	2102      	movs	r1, #2
 800cb6e:	4618      	mov	r0, r3
 800cb70:	f001 fd06 	bl	800e580 <RCCEx_PLL3_Config>
 800cb74:	4603      	mov	r3, r0
 800cb76:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cb7a:	e00a      	b.n	800cb92 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 800cb7c:	2301      	movs	r3, #1
 800cb7e:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cb82:	e006      	b.n	800cb92 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 800cb84:	bf00      	nop
 800cb86:	e004      	b.n	800cb92 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 800cb88:	bf00      	nop
 800cb8a:	e002      	b.n	800cb92 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 800cb8c:	bf00      	nop
 800cb8e:	e000      	b.n	800cb92 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 800cb90:	bf00      	nop
 800cb92:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cb96:	2b00      	cmp	r3, #0
 800cb98:	d10e      	bne.n	800cbb8 <HAL_RCCEx_PeriphCLKConfig+0xca0>
 800cb9a:	4b06      	ldr	r3, [pc, #24]	@ (800cbb4 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800cb9c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800cb9e:	f423 51e0 	bic.w	r1, r3, #7168	@ 0x1c00
 800cba2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cba6:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800cbaa:	4a02      	ldr	r2, [pc, #8]	@ (800cbb4 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800cbac:	430b      	orrs	r3, r1
 800cbae:	6593      	str	r3, [r2, #88]	@ 0x58
 800cbb0:	e006      	b.n	800cbc0 <HAL_RCCEx_PeriphCLKConfig+0xca8>
 800cbb2:	bf00      	nop
 800cbb4:	58024400 	.word	0x58024400
 800cbb8:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cbbc:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800cbc0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cbc4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cbc8:	f002 0380 	and.w	r3, r2, #128	@ 0x80
 800cbcc:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800cbd0:	2300      	movs	r3, #0
 800cbd2:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800cbd6:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	@ 0x90
 800cbda:	460b      	mov	r3, r1
 800cbdc:	4313      	orrs	r3, r2
 800cbde:	d055      	beq.n	800cc8c <HAL_RCCEx_PeriphCLKConfig+0xd74>
 800cbe0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cbe4:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800cbe8:	f5b3 4f20 	cmp.w	r3, #40960	@ 0xa000
 800cbec:	d033      	beq.n	800cc56 <HAL_RCCEx_PeriphCLKConfig+0xd3e>
 800cbee:	f5b3 4f20 	cmp.w	r3, #40960	@ 0xa000
 800cbf2:	d82c      	bhi.n	800cc4e <HAL_RCCEx_PeriphCLKConfig+0xd36>
 800cbf4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800cbf8:	d02f      	beq.n	800cc5a <HAL_RCCEx_PeriphCLKConfig+0xd42>
 800cbfa:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800cbfe:	d826      	bhi.n	800cc4e <HAL_RCCEx_PeriphCLKConfig+0xd36>
 800cc00:	f5b3 4fc0 	cmp.w	r3, #24576	@ 0x6000
 800cc04:	d02b      	beq.n	800cc5e <HAL_RCCEx_PeriphCLKConfig+0xd46>
 800cc06:	f5b3 4fc0 	cmp.w	r3, #24576	@ 0x6000
 800cc0a:	d820      	bhi.n	800cc4e <HAL_RCCEx_PeriphCLKConfig+0xd36>
 800cc0c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800cc10:	d012      	beq.n	800cc38 <HAL_RCCEx_PeriphCLKConfig+0xd20>
 800cc12:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800cc16:	d81a      	bhi.n	800cc4e <HAL_RCCEx_PeriphCLKConfig+0xd36>
 800cc18:	2b00      	cmp	r3, #0
 800cc1a:	d022      	beq.n	800cc62 <HAL_RCCEx_PeriphCLKConfig+0xd4a>
 800cc1c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800cc20:	d115      	bne.n	800cc4e <HAL_RCCEx_PeriphCLKConfig+0xd36>
 800cc22:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cc26:	3308      	adds	r3, #8
 800cc28:	2100      	movs	r1, #0
 800cc2a:	4618      	mov	r0, r3
 800cc2c:	f001 fbf6 	bl	800e41c <RCCEx_PLL2_Config>
 800cc30:	4603      	mov	r3, r0
 800cc32:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cc36:	e015      	b.n	800cc64 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 800cc38:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cc3c:	3328      	adds	r3, #40	@ 0x28
 800cc3e:	2102      	movs	r1, #2
 800cc40:	4618      	mov	r0, r3
 800cc42:	f001 fc9d 	bl	800e580 <RCCEx_PLL3_Config>
 800cc46:	4603      	mov	r3, r0
 800cc48:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cc4c:	e00a      	b.n	800cc64 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 800cc4e:	2301      	movs	r3, #1
 800cc50:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cc54:	e006      	b.n	800cc64 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 800cc56:	bf00      	nop
 800cc58:	e004      	b.n	800cc64 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 800cc5a:	bf00      	nop
 800cc5c:	e002      	b.n	800cc64 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 800cc5e:	bf00      	nop
 800cc60:	e000      	b.n	800cc64 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 800cc62:	bf00      	nop
 800cc64:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cc68:	2b00      	cmp	r3, #0
 800cc6a:	d10b      	bne.n	800cc84 <HAL_RCCEx_PeriphCLKConfig+0xd6c>
 800cc6c:	4ba0      	ldr	r3, [pc, #640]	@ (800cef0 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cc6e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800cc70:	f423 4160 	bic.w	r1, r3, #57344	@ 0xe000
 800cc74:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cc78:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800cc7c:	4a9c      	ldr	r2, [pc, #624]	@ (800cef0 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cc7e:	430b      	orrs	r3, r1
 800cc80:	6593      	str	r3, [r2, #88]	@ 0x58
 800cc82:	e003      	b.n	800cc8c <HAL_RCCEx_PeriphCLKConfig+0xd74>
 800cc84:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cc88:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800cc8c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cc90:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cc94:	f002 0308 	and.w	r3, r2, #8
 800cc98:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800cc9c:	2300      	movs	r3, #0
 800cc9e:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800cca2:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	@ 0x88
 800cca6:	460b      	mov	r3, r1
 800cca8:	4313      	orrs	r3, r2
 800ccaa:	d01e      	beq.n	800ccea <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 800ccac:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ccb0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ccb4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800ccb8:	d10c      	bne.n	800ccd4 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
 800ccba:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ccbe:	3328      	adds	r3, #40	@ 0x28
 800ccc0:	2102      	movs	r1, #2
 800ccc2:	4618      	mov	r0, r3
 800ccc4:	f001 fc5c 	bl	800e580 <RCCEx_PLL3_Config>
 800ccc8:	4603      	mov	r3, r0
 800ccca:	2b00      	cmp	r3, #0
 800cccc:	d002      	beq.n	800ccd4 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
 800ccce:	2301      	movs	r3, #1
 800ccd0:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800ccd4:	4b86      	ldr	r3, [pc, #536]	@ (800cef0 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800ccd6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800ccd8:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800ccdc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cce0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800cce4:	4a82      	ldr	r2, [pc, #520]	@ (800cef0 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cce6:	430b      	orrs	r3, r1
 800cce8:	6553      	str	r3, [r2, #84]	@ 0x54
 800ccea:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ccee:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ccf2:	f002 0310 	and.w	r3, r2, #16
 800ccf6:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 800ccfa:	2300      	movs	r3, #0
 800ccfc:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800cd00:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	@ 0x80
 800cd04:	460b      	mov	r3, r1
 800cd06:	4313      	orrs	r3, r2
 800cd08:	d01e      	beq.n	800cd48 <HAL_RCCEx_PeriphCLKConfig+0xe30>
 800cd0a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cd0e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800cd12:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800cd16:	d10c      	bne.n	800cd32 <HAL_RCCEx_PeriphCLKConfig+0xe1a>
 800cd18:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cd1c:	3328      	adds	r3, #40	@ 0x28
 800cd1e:	2102      	movs	r1, #2
 800cd20:	4618      	mov	r0, r3
 800cd22:	f001 fc2d 	bl	800e580 <RCCEx_PLL3_Config>
 800cd26:	4603      	mov	r3, r0
 800cd28:	2b00      	cmp	r3, #0
 800cd2a:	d002      	beq.n	800cd32 <HAL_RCCEx_PeriphCLKConfig+0xe1a>
 800cd2c:	2301      	movs	r3, #1
 800cd2e:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800cd32:	4b6f      	ldr	r3, [pc, #444]	@ (800cef0 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cd34:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800cd36:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 800cd3a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cd3e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800cd42:	4a6b      	ldr	r2, [pc, #428]	@ (800cef0 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cd44:	430b      	orrs	r3, r1
 800cd46:	6593      	str	r3, [r2, #88]	@ 0x58
 800cd48:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cd4c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cd50:	f402 2300 	and.w	r3, r2, #524288	@ 0x80000
 800cd54:	67bb      	str	r3, [r7, #120]	@ 0x78
 800cd56:	2300      	movs	r3, #0
 800cd58:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800cd5a:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	@ 0x78
 800cd5e:	460b      	mov	r3, r1
 800cd60:	4313      	orrs	r3, r2
 800cd62:	d03e      	beq.n	800cde2 <HAL_RCCEx_PeriphCLKConfig+0xeca>
 800cd64:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cd68:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800cd6c:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800cd70:	d022      	beq.n	800cdb8 <HAL_RCCEx_PeriphCLKConfig+0xea0>
 800cd72:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800cd76:	d81b      	bhi.n	800cdb0 <HAL_RCCEx_PeriphCLKConfig+0xe98>
 800cd78:	2b00      	cmp	r3, #0
 800cd7a:	d003      	beq.n	800cd84 <HAL_RCCEx_PeriphCLKConfig+0xe6c>
 800cd7c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800cd80:	d00b      	beq.n	800cd9a <HAL_RCCEx_PeriphCLKConfig+0xe82>
 800cd82:	e015      	b.n	800cdb0 <HAL_RCCEx_PeriphCLKConfig+0xe98>
 800cd84:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cd88:	3308      	adds	r3, #8
 800cd8a:	2100      	movs	r1, #0
 800cd8c:	4618      	mov	r0, r3
 800cd8e:	f001 fb45 	bl	800e41c <RCCEx_PLL2_Config>
 800cd92:	4603      	mov	r3, r0
 800cd94:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cd98:	e00f      	b.n	800cdba <HAL_RCCEx_PeriphCLKConfig+0xea2>
 800cd9a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cd9e:	3328      	adds	r3, #40	@ 0x28
 800cda0:	2102      	movs	r1, #2
 800cda2:	4618      	mov	r0, r3
 800cda4:	f001 fbec 	bl	800e580 <RCCEx_PLL3_Config>
 800cda8:	4603      	mov	r3, r0
 800cdaa:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cdae:	e004      	b.n	800cdba <HAL_RCCEx_PeriphCLKConfig+0xea2>
 800cdb0:	2301      	movs	r3, #1
 800cdb2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cdb6:	e000      	b.n	800cdba <HAL_RCCEx_PeriphCLKConfig+0xea2>
 800cdb8:	bf00      	nop
 800cdba:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cdbe:	2b00      	cmp	r3, #0
 800cdc0:	d10b      	bne.n	800cdda <HAL_RCCEx_PeriphCLKConfig+0xec2>
 800cdc2:	4b4b      	ldr	r3, [pc, #300]	@ (800cef0 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cdc4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800cdc6:	f423 3140 	bic.w	r1, r3, #196608	@ 0x30000
 800cdca:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cdce:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800cdd2:	4a47      	ldr	r2, [pc, #284]	@ (800cef0 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cdd4:	430b      	orrs	r3, r1
 800cdd6:	6593      	str	r3, [r2, #88]	@ 0x58
 800cdd8:	e003      	b.n	800cde2 <HAL_RCCEx_PeriphCLKConfig+0xeca>
 800cdda:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cdde:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800cde2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cde6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cdea:	f402 2380 	and.w	r3, r2, #262144	@ 0x40000
 800cdee:	673b      	str	r3, [r7, #112]	@ 0x70
 800cdf0:	2300      	movs	r3, #0
 800cdf2:	677b      	str	r3, [r7, #116]	@ 0x74
 800cdf4:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	@ 0x70
 800cdf8:	460b      	mov	r3, r1
 800cdfa:	4313      	orrs	r3, r2
 800cdfc:	d03b      	beq.n	800ce76 <HAL_RCCEx_PeriphCLKConfig+0xf5e>
 800cdfe:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ce02:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800ce06:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 800ce0a:	d01f      	beq.n	800ce4c <HAL_RCCEx_PeriphCLKConfig+0xf34>
 800ce0c:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 800ce10:	d818      	bhi.n	800ce44 <HAL_RCCEx_PeriphCLKConfig+0xf2c>
 800ce12:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800ce16:	d003      	beq.n	800ce20 <HAL_RCCEx_PeriphCLKConfig+0xf08>
 800ce18:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800ce1c:	d007      	beq.n	800ce2e <HAL_RCCEx_PeriphCLKConfig+0xf16>
 800ce1e:	e011      	b.n	800ce44 <HAL_RCCEx_PeriphCLKConfig+0xf2c>
 800ce20:	4b33      	ldr	r3, [pc, #204]	@ (800cef0 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800ce22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ce24:	4a32      	ldr	r2, [pc, #200]	@ (800cef0 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800ce26:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800ce2a:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800ce2c:	e00f      	b.n	800ce4e <HAL_RCCEx_PeriphCLKConfig+0xf36>
 800ce2e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ce32:	3328      	adds	r3, #40	@ 0x28
 800ce34:	2101      	movs	r1, #1
 800ce36:	4618      	mov	r0, r3
 800ce38:	f001 fba2 	bl	800e580 <RCCEx_PLL3_Config>
 800ce3c:	4603      	mov	r3, r0
 800ce3e:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800ce42:	e004      	b.n	800ce4e <HAL_RCCEx_PeriphCLKConfig+0xf36>
 800ce44:	2301      	movs	r3, #1
 800ce46:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800ce4a:	e000      	b.n	800ce4e <HAL_RCCEx_PeriphCLKConfig+0xf36>
 800ce4c:	bf00      	nop
 800ce4e:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800ce52:	2b00      	cmp	r3, #0
 800ce54:	d10b      	bne.n	800ce6e <HAL_RCCEx_PeriphCLKConfig+0xf56>
 800ce56:	4b26      	ldr	r3, [pc, #152]	@ (800cef0 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800ce58:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800ce5a:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 800ce5e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ce62:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800ce66:	4a22      	ldr	r2, [pc, #136]	@ (800cef0 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800ce68:	430b      	orrs	r3, r1
 800ce6a:	6553      	str	r3, [r2, #84]	@ 0x54
 800ce6c:	e003      	b.n	800ce76 <HAL_RCCEx_PeriphCLKConfig+0xf5e>
 800ce6e:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800ce72:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800ce76:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ce7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ce7e:	f402 3380 	and.w	r3, r2, #65536	@ 0x10000
 800ce82:	66bb      	str	r3, [r7, #104]	@ 0x68
 800ce84:	2300      	movs	r3, #0
 800ce86:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800ce88:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	@ 0x68
 800ce8c:	460b      	mov	r3, r1
 800ce8e:	4313      	orrs	r3, r2
 800ce90:	d034      	beq.n	800cefc <HAL_RCCEx_PeriphCLKConfig+0xfe4>
 800ce92:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ce96:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800ce98:	2b00      	cmp	r3, #0
 800ce9a:	d003      	beq.n	800cea4 <HAL_RCCEx_PeriphCLKConfig+0xf8c>
 800ce9c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800cea0:	d007      	beq.n	800ceb2 <HAL_RCCEx_PeriphCLKConfig+0xf9a>
 800cea2:	e011      	b.n	800cec8 <HAL_RCCEx_PeriphCLKConfig+0xfb0>
 800cea4:	4b12      	ldr	r3, [pc, #72]	@ (800cef0 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cea6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cea8:	4a11      	ldr	r2, [pc, #68]	@ (800cef0 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800ceaa:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800ceae:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800ceb0:	e00e      	b.n	800ced0 <HAL_RCCEx_PeriphCLKConfig+0xfb8>
 800ceb2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800ceb6:	3308      	adds	r3, #8
 800ceb8:	2102      	movs	r1, #2
 800ceba:	4618      	mov	r0, r3
 800cebc:	f001 faae 	bl	800e41c <RCCEx_PLL2_Config>
 800cec0:	4603      	mov	r3, r0
 800cec2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cec6:	e003      	b.n	800ced0 <HAL_RCCEx_PeriphCLKConfig+0xfb8>
 800cec8:	2301      	movs	r3, #1
 800ceca:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cece:	bf00      	nop
 800ced0:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800ced4:	2b00      	cmp	r3, #0
 800ced6:	d10d      	bne.n	800cef4 <HAL_RCCEx_PeriphCLKConfig+0xfdc>
 800ced8:	4b05      	ldr	r3, [pc, #20]	@ (800cef0 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800ceda:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800cedc:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 800cee0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cee4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800cee6:	4a02      	ldr	r2, [pc, #8]	@ (800cef0 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800cee8:	430b      	orrs	r3, r1
 800ceea:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800ceec:	e006      	b.n	800cefc <HAL_RCCEx_PeriphCLKConfig+0xfe4>
 800ceee:	bf00      	nop
 800cef0:	58024400 	.word	0x58024400
 800cef4:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cef8:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800cefc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cf00:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cf04:	f002 5300 	and.w	r3, r2, #536870912	@ 0x20000000
 800cf08:	663b      	str	r3, [r7, #96]	@ 0x60
 800cf0a:	2300      	movs	r3, #0
 800cf0c:	667b      	str	r3, [r7, #100]	@ 0x64
 800cf0e:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	@ 0x60
 800cf12:	460b      	mov	r3, r1
 800cf14:	4313      	orrs	r3, r2
 800cf16:	d00c      	beq.n	800cf32 <HAL_RCCEx_PeriphCLKConfig+0x101a>
 800cf18:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cf1c:	3328      	adds	r3, #40	@ 0x28
 800cf1e:	2102      	movs	r1, #2
 800cf20:	4618      	mov	r0, r3
 800cf22:	f001 fb2d 	bl	800e580 <RCCEx_PLL3_Config>
 800cf26:	4603      	mov	r3, r0
 800cf28:	2b00      	cmp	r3, #0
 800cf2a:	d002      	beq.n	800cf32 <HAL_RCCEx_PeriphCLKConfig+0x101a>
 800cf2c:	2301      	movs	r3, #1
 800cf2e:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800cf32:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cf36:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cf3a:	f402 3300 	and.w	r3, r2, #131072	@ 0x20000
 800cf3e:	65bb      	str	r3, [r7, #88]	@ 0x58
 800cf40:	2300      	movs	r3, #0
 800cf42:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800cf44:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	@ 0x58
 800cf48:	460b      	mov	r3, r1
 800cf4a:	4313      	orrs	r3, r2
 800cf4c:	d036      	beq.n	800cfbc <HAL_RCCEx_PeriphCLKConfig+0x10a4>
 800cf4e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cf52:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800cf54:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800cf58:	d018      	beq.n	800cf8c <HAL_RCCEx_PeriphCLKConfig+0x1074>
 800cf5a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800cf5e:	d811      	bhi.n	800cf84 <HAL_RCCEx_PeriphCLKConfig+0x106c>
 800cf60:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800cf64:	d014      	beq.n	800cf90 <HAL_RCCEx_PeriphCLKConfig+0x1078>
 800cf66:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800cf6a:	d80b      	bhi.n	800cf84 <HAL_RCCEx_PeriphCLKConfig+0x106c>
 800cf6c:	2b00      	cmp	r3, #0
 800cf6e:	d011      	beq.n	800cf94 <HAL_RCCEx_PeriphCLKConfig+0x107c>
 800cf70:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800cf74:	d106      	bne.n	800cf84 <HAL_RCCEx_PeriphCLKConfig+0x106c>
 800cf76:	4bb7      	ldr	r3, [pc, #732]	@ (800d254 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800cf78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cf7a:	4ab6      	ldr	r2, [pc, #728]	@ (800d254 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800cf7c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800cf80:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800cf82:	e008      	b.n	800cf96 <HAL_RCCEx_PeriphCLKConfig+0x107e>
 800cf84:	2301      	movs	r3, #1
 800cf86:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800cf8a:	e004      	b.n	800cf96 <HAL_RCCEx_PeriphCLKConfig+0x107e>
 800cf8c:	bf00      	nop
 800cf8e:	e002      	b.n	800cf96 <HAL_RCCEx_PeriphCLKConfig+0x107e>
 800cf90:	bf00      	nop
 800cf92:	e000      	b.n	800cf96 <HAL_RCCEx_PeriphCLKConfig+0x107e>
 800cf94:	bf00      	nop
 800cf96:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cf9a:	2b00      	cmp	r3, #0
 800cf9c:	d10a      	bne.n	800cfb4 <HAL_RCCEx_PeriphCLKConfig+0x109c>
 800cf9e:	4bad      	ldr	r3, [pc, #692]	@ (800d254 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800cfa0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800cfa2:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 800cfa6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cfaa:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800cfac:	4aa9      	ldr	r2, [pc, #676]	@ (800d254 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800cfae:	430b      	orrs	r3, r1
 800cfb0:	6553      	str	r3, [r2, #84]	@ 0x54
 800cfb2:	e003      	b.n	800cfbc <HAL_RCCEx_PeriphCLKConfig+0x10a4>
 800cfb4:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800cfb8:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800cfbc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cfc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cfc4:	f402 1380 	and.w	r3, r2, #1048576	@ 0x100000
 800cfc8:	653b      	str	r3, [r7, #80]	@ 0x50
 800cfca:	2300      	movs	r3, #0
 800cfcc:	657b      	str	r3, [r7, #84]	@ 0x54
 800cfce:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	@ 0x50
 800cfd2:	460b      	mov	r3, r1
 800cfd4:	4313      	orrs	r3, r2
 800cfd6:	d009      	beq.n	800cfec <HAL_RCCEx_PeriphCLKConfig+0x10d4>
 800cfd8:	4b9e      	ldr	r3, [pc, #632]	@ (800d254 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800cfda:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800cfdc:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 800cfe0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cfe4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800cfe6:	4a9b      	ldr	r2, [pc, #620]	@ (800d254 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800cfe8:	430b      	orrs	r3, r1
 800cfea:	6513      	str	r3, [r2, #80]	@ 0x50
 800cfec:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800cff0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cff4:	f402 1300 	and.w	r3, r2, #2097152	@ 0x200000
 800cff8:	64bb      	str	r3, [r7, #72]	@ 0x48
 800cffa:	2300      	movs	r3, #0
 800cffc:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800cffe:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	@ 0x48
 800d002:	460b      	mov	r3, r1
 800d004:	4313      	orrs	r3, r2
 800d006:	d009      	beq.n	800d01c <HAL_RCCEx_PeriphCLKConfig+0x1104>
 800d008:	4b92      	ldr	r3, [pc, #584]	@ (800d254 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d00a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d00c:	f023 7180 	bic.w	r1, r3, #16777216	@ 0x1000000
 800d010:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d014:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800d016:	4a8f      	ldr	r2, [pc, #572]	@ (800d254 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d018:	430b      	orrs	r3, r1
 800d01a:	6513      	str	r3, [r2, #80]	@ 0x50
 800d01c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d020:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d024:	f002 4380 	and.w	r3, r2, #1073741824	@ 0x40000000
 800d028:	643b      	str	r3, [r7, #64]	@ 0x40
 800d02a:	2300      	movs	r3, #0
 800d02c:	647b      	str	r3, [r7, #68]	@ 0x44
 800d02e:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	@ 0x40
 800d032:	460b      	mov	r3, r1
 800d034:	4313      	orrs	r3, r2
 800d036:	d00e      	beq.n	800d056 <HAL_RCCEx_PeriphCLKConfig+0x113e>
 800d038:	4b86      	ldr	r3, [pc, #536]	@ (800d254 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d03a:	691b      	ldr	r3, [r3, #16]
 800d03c:	4a85      	ldr	r2, [pc, #532]	@ (800d254 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d03e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800d042:	6113      	str	r3, [r2, #16]
 800d044:	4b83      	ldr	r3, [pc, #524]	@ (800d254 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d046:	6919      	ldr	r1, [r3, #16]
 800d048:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d04c:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800d050:	4a80      	ldr	r2, [pc, #512]	@ (800d254 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d052:	430b      	orrs	r3, r1
 800d054:	6113      	str	r3, [r2, #16]
 800d056:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d05a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d05e:	f002 4300 	and.w	r3, r2, #2147483648	@ 0x80000000
 800d062:	63bb      	str	r3, [r7, #56]	@ 0x38
 800d064:	2300      	movs	r3, #0
 800d066:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d068:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	@ 0x38
 800d06c:	460b      	mov	r3, r1
 800d06e:	4313      	orrs	r3, r2
 800d070:	d009      	beq.n	800d086 <HAL_RCCEx_PeriphCLKConfig+0x116e>
 800d072:	4b78      	ldr	r3, [pc, #480]	@ (800d254 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d074:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d076:	f023 5140 	bic.w	r1, r3, #805306368	@ 0x30000000
 800d07a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d07e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800d080:	4a74      	ldr	r2, [pc, #464]	@ (800d254 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d082:	430b      	orrs	r3, r1
 800d084:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800d086:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d08a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d08e:	f402 0300 	and.w	r3, r2, #8388608	@ 0x800000
 800d092:	633b      	str	r3, [r7, #48]	@ 0x30
 800d094:	2300      	movs	r3, #0
 800d096:	637b      	str	r3, [r7, #52]	@ 0x34
 800d098:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	@ 0x30
 800d09c:	460b      	mov	r3, r1
 800d09e:	4313      	orrs	r3, r2
 800d0a0:	d00a      	beq.n	800d0b8 <HAL_RCCEx_PeriphCLKConfig+0x11a0>
 800d0a2:	4b6c      	ldr	r3, [pc, #432]	@ (800d254 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d0a4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800d0a6:	f423 0140 	bic.w	r1, r3, #12582912	@ 0xc00000
 800d0aa:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d0ae:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800d0b2:	4a68      	ldr	r2, [pc, #416]	@ (800d254 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800d0b4:	430b      	orrs	r3, r1
 800d0b6:	6553      	str	r3, [r2, #84]	@ 0x54
 800d0b8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d0bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d0c0:	2100      	movs	r1, #0
 800d0c2:	62b9      	str	r1, [r7, #40]	@ 0x28
 800d0c4:	f003 0301 	and.w	r3, r3, #1
 800d0c8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800d0ca:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	@ 0x28
 800d0ce:	460b      	mov	r3, r1
 800d0d0:	4313      	orrs	r3, r2
 800d0d2:	d011      	beq.n	800d0f8 <HAL_RCCEx_PeriphCLKConfig+0x11e0>
 800d0d4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d0d8:	3308      	adds	r3, #8
 800d0da:	2100      	movs	r1, #0
 800d0dc:	4618      	mov	r0, r3
 800d0de:	f001 f99d 	bl	800e41c <RCCEx_PLL2_Config>
 800d0e2:	4603      	mov	r3, r0
 800d0e4:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800d0e8:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d0ec:	2b00      	cmp	r3, #0
 800d0ee:	d003      	beq.n	800d0f8 <HAL_RCCEx_PeriphCLKConfig+0x11e0>
 800d0f0:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d0f4:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800d0f8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d0fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d100:	2100      	movs	r1, #0
 800d102:	6239      	str	r1, [r7, #32]
 800d104:	f003 0302 	and.w	r3, r3, #2
 800d108:	627b      	str	r3, [r7, #36]	@ 0x24
 800d10a:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 800d10e:	460b      	mov	r3, r1
 800d110:	4313      	orrs	r3, r2
 800d112:	d011      	beq.n	800d138 <HAL_RCCEx_PeriphCLKConfig+0x1220>
 800d114:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d118:	3308      	adds	r3, #8
 800d11a:	2101      	movs	r1, #1
 800d11c:	4618      	mov	r0, r3
 800d11e:	f001 f97d 	bl	800e41c <RCCEx_PLL2_Config>
 800d122:	4603      	mov	r3, r0
 800d124:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800d128:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d12c:	2b00      	cmp	r3, #0
 800d12e:	d003      	beq.n	800d138 <HAL_RCCEx_PeriphCLKConfig+0x1220>
 800d130:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d134:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800d138:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d13c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d140:	2100      	movs	r1, #0
 800d142:	61b9      	str	r1, [r7, #24]
 800d144:	f003 0304 	and.w	r3, r3, #4
 800d148:	61fb      	str	r3, [r7, #28]
 800d14a:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 800d14e:	460b      	mov	r3, r1
 800d150:	4313      	orrs	r3, r2
 800d152:	d011      	beq.n	800d178 <HAL_RCCEx_PeriphCLKConfig+0x1260>
 800d154:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d158:	3308      	adds	r3, #8
 800d15a:	2102      	movs	r1, #2
 800d15c:	4618      	mov	r0, r3
 800d15e:	f001 f95d 	bl	800e41c <RCCEx_PLL2_Config>
 800d162:	4603      	mov	r3, r0
 800d164:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800d168:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d16c:	2b00      	cmp	r3, #0
 800d16e:	d003      	beq.n	800d178 <HAL_RCCEx_PeriphCLKConfig+0x1260>
 800d170:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d174:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800d178:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d17c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d180:	2100      	movs	r1, #0
 800d182:	6139      	str	r1, [r7, #16]
 800d184:	f003 0308 	and.w	r3, r3, #8
 800d188:	617b      	str	r3, [r7, #20]
 800d18a:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 800d18e:	460b      	mov	r3, r1
 800d190:	4313      	orrs	r3, r2
 800d192:	d011      	beq.n	800d1b8 <HAL_RCCEx_PeriphCLKConfig+0x12a0>
 800d194:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d198:	3328      	adds	r3, #40	@ 0x28
 800d19a:	2100      	movs	r1, #0
 800d19c:	4618      	mov	r0, r3
 800d19e:	f001 f9ef 	bl	800e580 <RCCEx_PLL3_Config>
 800d1a2:	4603      	mov	r3, r0
 800d1a4:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800d1a8:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d1ac:	2b00      	cmp	r3, #0
 800d1ae:	d003      	beq.n	800d1b8 <HAL_RCCEx_PeriphCLKConfig+0x12a0>
 800d1b0:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d1b4:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800d1b8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d1bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d1c0:	2100      	movs	r1, #0
 800d1c2:	60b9      	str	r1, [r7, #8]
 800d1c4:	f003 0310 	and.w	r3, r3, #16
 800d1c8:	60fb      	str	r3, [r7, #12]
 800d1ca:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 800d1ce:	460b      	mov	r3, r1
 800d1d0:	4313      	orrs	r3, r2
 800d1d2:	d011      	beq.n	800d1f8 <HAL_RCCEx_PeriphCLKConfig+0x12e0>
 800d1d4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d1d8:	3328      	adds	r3, #40	@ 0x28
 800d1da:	2101      	movs	r1, #1
 800d1dc:	4618      	mov	r0, r3
 800d1de:	f001 f9cf 	bl	800e580 <RCCEx_PLL3_Config>
 800d1e2:	4603      	mov	r3, r0
 800d1e4:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800d1e8:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d1ec:	2b00      	cmp	r3, #0
 800d1ee:	d003      	beq.n	800d1f8 <HAL_RCCEx_PeriphCLKConfig+0x12e0>
 800d1f0:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d1f4:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800d1f8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d1fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d200:	2100      	movs	r1, #0
 800d202:	6039      	str	r1, [r7, #0]
 800d204:	f003 0320 	and.w	r3, r3, #32
 800d208:	607b      	str	r3, [r7, #4]
 800d20a:	e9d7 1200 	ldrd	r1, r2, [r7]
 800d20e:	460b      	mov	r3, r1
 800d210:	4313      	orrs	r3, r2
 800d212:	d011      	beq.n	800d238 <HAL_RCCEx_PeriphCLKConfig+0x1320>
 800d214:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800d218:	3328      	adds	r3, #40	@ 0x28
 800d21a:	2102      	movs	r1, #2
 800d21c:	4618      	mov	r0, r3
 800d21e:	f001 f9af 	bl	800e580 <RCCEx_PLL3_Config>
 800d222:	4603      	mov	r3, r0
 800d224:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800d228:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d22c:	2b00      	cmp	r3, #0
 800d22e:	d003      	beq.n	800d238 <HAL_RCCEx_PeriphCLKConfig+0x1320>
 800d230:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800d234:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800d238:	f897 3116 	ldrb.w	r3, [r7, #278]	@ 0x116
 800d23c:	2b00      	cmp	r3, #0
 800d23e:	d101      	bne.n	800d244 <HAL_RCCEx_PeriphCLKConfig+0x132c>
 800d240:	2300      	movs	r3, #0
 800d242:	e000      	b.n	800d246 <HAL_RCCEx_PeriphCLKConfig+0x132e>
 800d244:	2301      	movs	r3, #1
 800d246:	4618      	mov	r0, r3
 800d248:	f507 778c 	add.w	r7, r7, #280	@ 0x118
 800d24c:	46bd      	mov	sp, r7
 800d24e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800d252:	bf00      	nop
 800d254:	58024400 	.word	0x58024400

0800d258 <HAL_RCCEx_GetPeriphCLKFreq>:
 800d258:	b580      	push	{r7, lr}
 800d25a:	b090      	sub	sp, #64	@ 0x40
 800d25c:	af00      	add	r7, sp, #0
 800d25e:	e9c7 0100 	strd	r0, r1, [r7]
 800d262:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d266:	f5a2 7180 	sub.w	r1, r2, #256	@ 0x100
 800d26a:	430b      	orrs	r3, r1
 800d26c:	f040 8094 	bne.w	800d398 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 800d270:	4b9b      	ldr	r3, [pc, #620]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d272:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d274:	f003 0307 	and.w	r3, r3, #7
 800d278:	633b      	str	r3, [r7, #48]	@ 0x30
 800d27a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d27c:	2b04      	cmp	r3, #4
 800d27e:	f200 8087 	bhi.w	800d390 <HAL_RCCEx_GetPeriphCLKFreq+0x138>
 800d282:	a201      	add	r2, pc, #4	@ (adr r2, 800d288 <HAL_RCCEx_GetPeriphCLKFreq+0x30>)
 800d284:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d288:	0800d29d 	.word	0x0800d29d
 800d28c:	0800d2c5 	.word	0x0800d2c5
 800d290:	0800d2ed 	.word	0x0800d2ed
 800d294:	0800d389 	.word	0x0800d389
 800d298:	0800d315 	.word	0x0800d315
 800d29c:	4b90      	ldr	r3, [pc, #576]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d29e:	681b      	ldr	r3, [r3, #0]
 800d2a0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800d2a4:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800d2a8:	d108      	bne.n	800d2bc <HAL_RCCEx_GetPeriphCLKFreq+0x64>
 800d2aa:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800d2ae:	4618      	mov	r0, r3
 800d2b0:	f000 ff62 	bl	800e178 <HAL_RCCEx_GetPLL1ClockFreq>
 800d2b4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d2b6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d2b8:	f000 bc93 	b.w	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d2bc:	2300      	movs	r3, #0
 800d2be:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d2c0:	f000 bc8f 	b.w	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d2c4:	4b86      	ldr	r3, [pc, #536]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d2c6:	681b      	ldr	r3, [r3, #0]
 800d2c8:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800d2cc:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800d2d0:	d108      	bne.n	800d2e4 <HAL_RCCEx_GetPeriphCLKFreq+0x8c>
 800d2d2:	f107 0318 	add.w	r3, r7, #24
 800d2d6:	4618      	mov	r0, r3
 800d2d8:	f000 fca6 	bl	800dc28 <HAL_RCCEx_GetPLL2ClockFreq>
 800d2dc:	69bb      	ldr	r3, [r7, #24]
 800d2de:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d2e0:	f000 bc7f 	b.w	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d2e4:	2300      	movs	r3, #0
 800d2e6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d2e8:	f000 bc7b 	b.w	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d2ec:	4b7c      	ldr	r3, [pc, #496]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d2ee:	681b      	ldr	r3, [r3, #0]
 800d2f0:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800d2f4:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d2f8:	d108      	bne.n	800d30c <HAL_RCCEx_GetPeriphCLKFreq+0xb4>
 800d2fa:	f107 030c 	add.w	r3, r7, #12
 800d2fe:	4618      	mov	r0, r3
 800d300:	f000 fde6 	bl	800ded0 <HAL_RCCEx_GetPLL3ClockFreq>
 800d304:	68fb      	ldr	r3, [r7, #12]
 800d306:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d308:	f000 bc6b 	b.w	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d30c:	2300      	movs	r3, #0
 800d30e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d310:	f000 bc67 	b.w	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d314:	4b72      	ldr	r3, [pc, #456]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d316:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d318:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800d31c:	637b      	str	r3, [r7, #52]	@ 0x34
 800d31e:	4b70      	ldr	r3, [pc, #448]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d320:	681b      	ldr	r3, [r3, #0]
 800d322:	f003 0304 	and.w	r3, r3, #4
 800d326:	2b04      	cmp	r3, #4
 800d328:	d10c      	bne.n	800d344 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
 800d32a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d32c:	2b00      	cmp	r3, #0
 800d32e:	d109      	bne.n	800d344 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
 800d330:	4b6b      	ldr	r3, [pc, #428]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d332:	681b      	ldr	r3, [r3, #0]
 800d334:	08db      	lsrs	r3, r3, #3
 800d336:	f003 0303 	and.w	r3, r3, #3
 800d33a:	4a6a      	ldr	r2, [pc, #424]	@ (800d4e4 <HAL_RCCEx_GetPeriphCLKFreq+0x28c>)
 800d33c:	fa22 f303 	lsr.w	r3, r2, r3
 800d340:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d342:	e01f      	b.n	800d384 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
 800d344:	4b66      	ldr	r3, [pc, #408]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d346:	681b      	ldr	r3, [r3, #0]
 800d348:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d34c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800d350:	d106      	bne.n	800d360 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
 800d352:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d354:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800d358:	d102      	bne.n	800d360 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
 800d35a:	4b63      	ldr	r3, [pc, #396]	@ (800d4e8 <HAL_RCCEx_GetPeriphCLKFreq+0x290>)
 800d35c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d35e:	e011      	b.n	800d384 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
 800d360:	4b5f      	ldr	r3, [pc, #380]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d362:	681b      	ldr	r3, [r3, #0]
 800d364:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800d368:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d36c:	d106      	bne.n	800d37c <HAL_RCCEx_GetPeriphCLKFreq+0x124>
 800d36e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d370:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d374:	d102      	bne.n	800d37c <HAL_RCCEx_GetPeriphCLKFreq+0x124>
 800d376:	4b5d      	ldr	r3, [pc, #372]	@ (800d4ec <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 800d378:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d37a:	e003      	b.n	800d384 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
 800d37c:	2300      	movs	r3, #0
 800d37e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d380:	f000 bc2f 	b.w	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d384:	f000 bc2d 	b.w	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d388:	4b59      	ldr	r3, [pc, #356]	@ (800d4f0 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 800d38a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d38c:	f000 bc29 	b.w	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d390:	2300      	movs	r3, #0
 800d392:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d394:	f000 bc25 	b.w	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d398:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d39c:	f5a2 6180 	sub.w	r1, r2, #1024	@ 0x400
 800d3a0:	430b      	orrs	r3, r1
 800d3a2:	f040 80a7 	bne.w	800d4f4 <HAL_RCCEx_GetPeriphCLKFreq+0x29c>
 800d3a6:	4b4e      	ldr	r3, [pc, #312]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d3a8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800d3aa:	f403 0360 	and.w	r3, r3, #14680064	@ 0xe00000
 800d3ae:	633b      	str	r3, [r7, #48]	@ 0x30
 800d3b0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d3b2:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800d3b6:	d054      	beq.n	800d462 <HAL_RCCEx_GetPeriphCLKFreq+0x20a>
 800d3b8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d3ba:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800d3be:	f200 808b 	bhi.w	800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 800d3c2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d3c4:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 800d3c8:	f000 8083 	beq.w	800d4d2 <HAL_RCCEx_GetPeriphCLKFreq+0x27a>
 800d3cc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d3ce:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 800d3d2:	f200 8081 	bhi.w	800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 800d3d6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d3d8:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800d3dc:	d02f      	beq.n	800d43e <HAL_RCCEx_GetPeriphCLKFreq+0x1e6>
 800d3de:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d3e0:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800d3e4:	d878      	bhi.n	800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 800d3e6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d3e8:	2b00      	cmp	r3, #0
 800d3ea:	d004      	beq.n	800d3f6 <HAL_RCCEx_GetPeriphCLKFreq+0x19e>
 800d3ec:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d3ee:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800d3f2:	d012      	beq.n	800d41a <HAL_RCCEx_GetPeriphCLKFreq+0x1c2>
 800d3f4:	e070      	b.n	800d4d8 <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 800d3f6:	4b3a      	ldr	r3, [pc, #232]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d3f8:	681b      	ldr	r3, [r3, #0]
 800d3fa:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800d3fe:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800d402:	d107      	bne.n	800d414 <HAL_RCCEx_GetPeriphCLKFreq+0x1bc>
 800d404:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800d408:	4618      	mov	r0, r3
 800d40a:	f000 feb5 	bl	800e178 <HAL_RCCEx_GetPLL1ClockFreq>
 800d40e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d410:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d412:	e3e6      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d414:	2300      	movs	r3, #0
 800d416:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d418:	e3e3      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d41a:	4b31      	ldr	r3, [pc, #196]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d41c:	681b      	ldr	r3, [r3, #0]
 800d41e:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800d422:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800d426:	d107      	bne.n	800d438 <HAL_RCCEx_GetPeriphCLKFreq+0x1e0>
 800d428:	f107 0318 	add.w	r3, r7, #24
 800d42c:	4618      	mov	r0, r3
 800d42e:	f000 fbfb 	bl	800dc28 <HAL_RCCEx_GetPLL2ClockFreq>
 800d432:	69bb      	ldr	r3, [r7, #24]
 800d434:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d436:	e3d4      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d438:	2300      	movs	r3, #0
 800d43a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d43c:	e3d1      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d43e:	4b28      	ldr	r3, [pc, #160]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d440:	681b      	ldr	r3, [r3, #0]
 800d442:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800d446:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d44a:	d107      	bne.n	800d45c <HAL_RCCEx_GetPeriphCLKFreq+0x204>
 800d44c:	f107 030c 	add.w	r3, r7, #12
 800d450:	4618      	mov	r0, r3
 800d452:	f000 fd3d 	bl	800ded0 <HAL_RCCEx_GetPLL3ClockFreq>
 800d456:	68fb      	ldr	r3, [r7, #12]
 800d458:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d45a:	e3c2      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d45c:	2300      	movs	r3, #0
 800d45e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d460:	e3bf      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d462:	4b1f      	ldr	r3, [pc, #124]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d464:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d466:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800d46a:	637b      	str	r3, [r7, #52]	@ 0x34
 800d46c:	4b1c      	ldr	r3, [pc, #112]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d46e:	681b      	ldr	r3, [r3, #0]
 800d470:	f003 0304 	and.w	r3, r3, #4
 800d474:	2b04      	cmp	r3, #4
 800d476:	d10c      	bne.n	800d492 <HAL_RCCEx_GetPeriphCLKFreq+0x23a>
 800d478:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d47a:	2b00      	cmp	r3, #0
 800d47c:	d109      	bne.n	800d492 <HAL_RCCEx_GetPeriphCLKFreq+0x23a>
 800d47e:	4b18      	ldr	r3, [pc, #96]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d480:	681b      	ldr	r3, [r3, #0]
 800d482:	08db      	lsrs	r3, r3, #3
 800d484:	f003 0303 	and.w	r3, r3, #3
 800d488:	4a16      	ldr	r2, [pc, #88]	@ (800d4e4 <HAL_RCCEx_GetPeriphCLKFreq+0x28c>)
 800d48a:	fa22 f303 	lsr.w	r3, r2, r3
 800d48e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d490:	e01e      	b.n	800d4d0 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
 800d492:	4b13      	ldr	r3, [pc, #76]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d494:	681b      	ldr	r3, [r3, #0]
 800d496:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d49a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800d49e:	d106      	bne.n	800d4ae <HAL_RCCEx_GetPeriphCLKFreq+0x256>
 800d4a0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d4a2:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800d4a6:	d102      	bne.n	800d4ae <HAL_RCCEx_GetPeriphCLKFreq+0x256>
 800d4a8:	4b0f      	ldr	r3, [pc, #60]	@ (800d4e8 <HAL_RCCEx_GetPeriphCLKFreq+0x290>)
 800d4aa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d4ac:	e010      	b.n	800d4d0 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
 800d4ae:	4b0c      	ldr	r3, [pc, #48]	@ (800d4e0 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800d4b0:	681b      	ldr	r3, [r3, #0]
 800d4b2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800d4b6:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d4ba:	d106      	bne.n	800d4ca <HAL_RCCEx_GetPeriphCLKFreq+0x272>
 800d4bc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d4be:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d4c2:	d102      	bne.n	800d4ca <HAL_RCCEx_GetPeriphCLKFreq+0x272>
 800d4c4:	4b09      	ldr	r3, [pc, #36]	@ (800d4ec <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 800d4c6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d4c8:	e002      	b.n	800d4d0 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
 800d4ca:	2300      	movs	r3, #0
 800d4cc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d4ce:	e388      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d4d0:	e387      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d4d2:	4b07      	ldr	r3, [pc, #28]	@ (800d4f0 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 800d4d4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d4d6:	e384      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d4d8:	2300      	movs	r3, #0
 800d4da:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d4dc:	e381      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d4de:	bf00      	nop
 800d4e0:	58024400 	.word	0x58024400
 800d4e4:	03d09000 	.word	0x03d09000
 800d4e8:	003d0900 	.word	0x003d0900
 800d4ec:	016e3600 	.word	0x016e3600
 800d4f0:	00bb8000 	.word	0x00bb8000
 800d4f4:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d4f8:	f5a2 6100 	sub.w	r1, r2, #2048	@ 0x800
 800d4fc:	430b      	orrs	r3, r1
 800d4fe:	f040 809c 	bne.w	800d63a <HAL_RCCEx_GetPeriphCLKFreq+0x3e2>
 800d502:	4b9e      	ldr	r3, [pc, #632]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d504:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800d506:	f003 63e0 	and.w	r3, r3, #117440512	@ 0x7000000
 800d50a:	633b      	str	r3, [r7, #48]	@ 0x30
 800d50c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d50e:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800d512:	d054      	beq.n	800d5be <HAL_RCCEx_GetPeriphCLKFreq+0x366>
 800d514:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d516:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800d51a:	f200 808b 	bhi.w	800d634 <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 800d51e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d520:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 800d524:	f000 8083 	beq.w	800d62e <HAL_RCCEx_GetPeriphCLKFreq+0x3d6>
 800d528:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d52a:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 800d52e:	f200 8081 	bhi.w	800d634 <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 800d532:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d534:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800d538:	d02f      	beq.n	800d59a <HAL_RCCEx_GetPeriphCLKFreq+0x342>
 800d53a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d53c:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800d540:	d878      	bhi.n	800d634 <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 800d542:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d544:	2b00      	cmp	r3, #0
 800d546:	d004      	beq.n	800d552 <HAL_RCCEx_GetPeriphCLKFreq+0x2fa>
 800d548:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d54a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800d54e:	d012      	beq.n	800d576 <HAL_RCCEx_GetPeriphCLKFreq+0x31e>
 800d550:	e070      	b.n	800d634 <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 800d552:	4b8a      	ldr	r3, [pc, #552]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d554:	681b      	ldr	r3, [r3, #0]
 800d556:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800d55a:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800d55e:	d107      	bne.n	800d570 <HAL_RCCEx_GetPeriphCLKFreq+0x318>
 800d560:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800d564:	4618      	mov	r0, r3
 800d566:	f000 fe07 	bl	800e178 <HAL_RCCEx_GetPLL1ClockFreq>
 800d56a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d56c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d56e:	e338      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d570:	2300      	movs	r3, #0
 800d572:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d574:	e335      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d576:	4b81      	ldr	r3, [pc, #516]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d578:	681b      	ldr	r3, [r3, #0]
 800d57a:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800d57e:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800d582:	d107      	bne.n	800d594 <HAL_RCCEx_GetPeriphCLKFreq+0x33c>
 800d584:	f107 0318 	add.w	r3, r7, #24
 800d588:	4618      	mov	r0, r3
 800d58a:	f000 fb4d 	bl	800dc28 <HAL_RCCEx_GetPLL2ClockFreq>
 800d58e:	69bb      	ldr	r3, [r7, #24]
 800d590:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d592:	e326      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d594:	2300      	movs	r3, #0
 800d596:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d598:	e323      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d59a:	4b78      	ldr	r3, [pc, #480]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d59c:	681b      	ldr	r3, [r3, #0]
 800d59e:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800d5a2:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d5a6:	d107      	bne.n	800d5b8 <HAL_RCCEx_GetPeriphCLKFreq+0x360>
 800d5a8:	f107 030c 	add.w	r3, r7, #12
 800d5ac:	4618      	mov	r0, r3
 800d5ae:	f000 fc8f 	bl	800ded0 <HAL_RCCEx_GetPLL3ClockFreq>
 800d5b2:	68fb      	ldr	r3, [r7, #12]
 800d5b4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d5b6:	e314      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d5b8:	2300      	movs	r3, #0
 800d5ba:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d5bc:	e311      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d5be:	4b6f      	ldr	r3, [pc, #444]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d5c0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d5c2:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800d5c6:	637b      	str	r3, [r7, #52]	@ 0x34
 800d5c8:	4b6c      	ldr	r3, [pc, #432]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d5ca:	681b      	ldr	r3, [r3, #0]
 800d5cc:	f003 0304 	and.w	r3, r3, #4
 800d5d0:	2b04      	cmp	r3, #4
 800d5d2:	d10c      	bne.n	800d5ee <HAL_RCCEx_GetPeriphCLKFreq+0x396>
 800d5d4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d5d6:	2b00      	cmp	r3, #0
 800d5d8:	d109      	bne.n	800d5ee <HAL_RCCEx_GetPeriphCLKFreq+0x396>
 800d5da:	4b68      	ldr	r3, [pc, #416]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d5dc:	681b      	ldr	r3, [r3, #0]
 800d5de:	08db      	lsrs	r3, r3, #3
 800d5e0:	f003 0303 	and.w	r3, r3, #3
 800d5e4:	4a66      	ldr	r2, [pc, #408]	@ (800d780 <HAL_RCCEx_GetPeriphCLKFreq+0x528>)
 800d5e6:	fa22 f303 	lsr.w	r3, r2, r3
 800d5ea:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d5ec:	e01e      	b.n	800d62c <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
 800d5ee:	4b63      	ldr	r3, [pc, #396]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d5f0:	681b      	ldr	r3, [r3, #0]
 800d5f2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d5f6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800d5fa:	d106      	bne.n	800d60a <HAL_RCCEx_GetPeriphCLKFreq+0x3b2>
 800d5fc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d5fe:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800d602:	d102      	bne.n	800d60a <HAL_RCCEx_GetPeriphCLKFreq+0x3b2>
 800d604:	4b5f      	ldr	r3, [pc, #380]	@ (800d784 <HAL_RCCEx_GetPeriphCLKFreq+0x52c>)
 800d606:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d608:	e010      	b.n	800d62c <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
 800d60a:	4b5c      	ldr	r3, [pc, #368]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d60c:	681b      	ldr	r3, [r3, #0]
 800d60e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800d612:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d616:	d106      	bne.n	800d626 <HAL_RCCEx_GetPeriphCLKFreq+0x3ce>
 800d618:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d61a:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d61e:	d102      	bne.n	800d626 <HAL_RCCEx_GetPeriphCLKFreq+0x3ce>
 800d620:	4b59      	ldr	r3, [pc, #356]	@ (800d788 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800d622:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d624:	e002      	b.n	800d62c <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
 800d626:	2300      	movs	r3, #0
 800d628:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d62a:	e2da      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d62c:	e2d9      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d62e:	4b57      	ldr	r3, [pc, #348]	@ (800d78c <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 800d630:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d632:	e2d6      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d634:	2300      	movs	r3, #0
 800d636:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d638:	e2d3      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d63a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d63e:	f5a2 5180 	sub.w	r1, r2, #4096	@ 0x1000
 800d642:	430b      	orrs	r3, r1
 800d644:	f040 80a7 	bne.w	800d796 <HAL_RCCEx_GetPeriphCLKFreq+0x53e>
 800d648:	4b4c      	ldr	r3, [pc, #304]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d64a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d64c:	f403 43e0 	and.w	r3, r3, #28672	@ 0x7000
 800d650:	63bb      	str	r3, [r7, #56]	@ 0x38
 800d652:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d654:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800d658:	d055      	beq.n	800d706 <HAL_RCCEx_GetPeriphCLKFreq+0x4ae>
 800d65a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d65c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800d660:	f200 8096 	bhi.w	800d790 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 800d664:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d666:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800d66a:	f000 8084 	beq.w	800d776 <HAL_RCCEx_GetPeriphCLKFreq+0x51e>
 800d66e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d670:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800d674:	f200 808c 	bhi.w	800d790 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 800d678:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d67a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800d67e:	d030      	beq.n	800d6e2 <HAL_RCCEx_GetPeriphCLKFreq+0x48a>
 800d680:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d682:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800d686:	f200 8083 	bhi.w	800d790 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 800d68a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d68c:	2b00      	cmp	r3, #0
 800d68e:	d004      	beq.n	800d69a <HAL_RCCEx_GetPeriphCLKFreq+0x442>
 800d690:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d692:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800d696:	d012      	beq.n	800d6be <HAL_RCCEx_GetPeriphCLKFreq+0x466>
 800d698:	e07a      	b.n	800d790 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 800d69a:	4b38      	ldr	r3, [pc, #224]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d69c:	681b      	ldr	r3, [r3, #0]
 800d69e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800d6a2:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800d6a6:	d107      	bne.n	800d6b8 <HAL_RCCEx_GetPeriphCLKFreq+0x460>
 800d6a8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800d6ac:	4618      	mov	r0, r3
 800d6ae:	f000 fd63 	bl	800e178 <HAL_RCCEx_GetPLL1ClockFreq>
 800d6b2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d6b4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d6b6:	e294      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d6b8:	2300      	movs	r3, #0
 800d6ba:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d6bc:	e291      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d6be:	4b2f      	ldr	r3, [pc, #188]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d6c0:	681b      	ldr	r3, [r3, #0]
 800d6c2:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800d6c6:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800d6ca:	d107      	bne.n	800d6dc <HAL_RCCEx_GetPeriphCLKFreq+0x484>
 800d6cc:	f107 0318 	add.w	r3, r7, #24
 800d6d0:	4618      	mov	r0, r3
 800d6d2:	f000 faa9 	bl	800dc28 <HAL_RCCEx_GetPLL2ClockFreq>
 800d6d6:	69bb      	ldr	r3, [r7, #24]
 800d6d8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d6da:	e282      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d6dc:	2300      	movs	r3, #0
 800d6de:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d6e0:	e27f      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d6e2:	4b26      	ldr	r3, [pc, #152]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d6e4:	681b      	ldr	r3, [r3, #0]
 800d6e6:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800d6ea:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d6ee:	d107      	bne.n	800d700 <HAL_RCCEx_GetPeriphCLKFreq+0x4a8>
 800d6f0:	f107 030c 	add.w	r3, r7, #12
 800d6f4:	4618      	mov	r0, r3
 800d6f6:	f000 fbeb 	bl	800ded0 <HAL_RCCEx_GetPLL3ClockFreq>
 800d6fa:	68fb      	ldr	r3, [r7, #12]
 800d6fc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d6fe:	e270      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d700:	2300      	movs	r3, #0
 800d702:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d704:	e26d      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d706:	4b1d      	ldr	r3, [pc, #116]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d708:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d70a:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800d70e:	637b      	str	r3, [r7, #52]	@ 0x34
 800d710:	4b1a      	ldr	r3, [pc, #104]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d712:	681b      	ldr	r3, [r3, #0]
 800d714:	f003 0304 	and.w	r3, r3, #4
 800d718:	2b04      	cmp	r3, #4
 800d71a:	d10c      	bne.n	800d736 <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
 800d71c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d71e:	2b00      	cmp	r3, #0
 800d720:	d109      	bne.n	800d736 <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
 800d722:	4b16      	ldr	r3, [pc, #88]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d724:	681b      	ldr	r3, [r3, #0]
 800d726:	08db      	lsrs	r3, r3, #3
 800d728:	f003 0303 	and.w	r3, r3, #3
 800d72c:	4a14      	ldr	r2, [pc, #80]	@ (800d780 <HAL_RCCEx_GetPeriphCLKFreq+0x528>)
 800d72e:	fa22 f303 	lsr.w	r3, r2, r3
 800d732:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d734:	e01e      	b.n	800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
 800d736:	4b11      	ldr	r3, [pc, #68]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d738:	681b      	ldr	r3, [r3, #0]
 800d73a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d73e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800d742:	d106      	bne.n	800d752 <HAL_RCCEx_GetPeriphCLKFreq+0x4fa>
 800d744:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d746:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800d74a:	d102      	bne.n	800d752 <HAL_RCCEx_GetPeriphCLKFreq+0x4fa>
 800d74c:	4b0d      	ldr	r3, [pc, #52]	@ (800d784 <HAL_RCCEx_GetPeriphCLKFreq+0x52c>)
 800d74e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d750:	e010      	b.n	800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
 800d752:	4b0a      	ldr	r3, [pc, #40]	@ (800d77c <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800d754:	681b      	ldr	r3, [r3, #0]
 800d756:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800d75a:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d75e:	d106      	bne.n	800d76e <HAL_RCCEx_GetPeriphCLKFreq+0x516>
 800d760:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d762:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d766:	d102      	bne.n	800d76e <HAL_RCCEx_GetPeriphCLKFreq+0x516>
 800d768:	4b07      	ldr	r3, [pc, #28]	@ (800d788 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800d76a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d76c:	e002      	b.n	800d774 <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
 800d76e:	2300      	movs	r3, #0
 800d770:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d772:	e236      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d774:	e235      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d776:	4b05      	ldr	r3, [pc, #20]	@ (800d78c <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 800d778:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d77a:	e232      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d77c:	58024400 	.word	0x58024400
 800d780:	03d09000 	.word	0x03d09000
 800d784:	003d0900 	.word	0x003d0900
 800d788:	016e3600 	.word	0x016e3600
 800d78c:	00bb8000 	.word	0x00bb8000
 800d790:	2300      	movs	r3, #0
 800d792:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d794:	e225      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d796:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d79a:	f5a2 5100 	sub.w	r1, r2, #8192	@ 0x2000
 800d79e:	430b      	orrs	r3, r1
 800d7a0:	f040 8085 	bne.w	800d8ae <HAL_RCCEx_GetPeriphCLKFreq+0x656>
 800d7a4:	4b9c      	ldr	r3, [pc, #624]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d7a6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d7a8:	f403 23e0 	and.w	r3, r3, #458752	@ 0x70000
 800d7ac:	63bb      	str	r3, [r7, #56]	@ 0x38
 800d7ae:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7b0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800d7b4:	d06b      	beq.n	800d88e <HAL_RCCEx_GetPeriphCLKFreq+0x636>
 800d7b6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7b8:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800d7bc:	d874      	bhi.n	800d8a8 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 800d7be:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7c0:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 800d7c4:	d056      	beq.n	800d874 <HAL_RCCEx_GetPeriphCLKFreq+0x61c>
 800d7c6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7c8:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 800d7cc:	d86c      	bhi.n	800d8a8 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 800d7ce:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7d0:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800d7d4:	d03b      	beq.n	800d84e <HAL_RCCEx_GetPeriphCLKFreq+0x5f6>
 800d7d6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7d8:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800d7dc:	d864      	bhi.n	800d8a8 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 800d7de:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7e0:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d7e4:	d021      	beq.n	800d82a <HAL_RCCEx_GetPeriphCLKFreq+0x5d2>
 800d7e6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7e8:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d7ec:	d85c      	bhi.n	800d8a8 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 800d7ee:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7f0:	2b00      	cmp	r3, #0
 800d7f2:	d004      	beq.n	800d7fe <HAL_RCCEx_GetPeriphCLKFreq+0x5a6>
 800d7f4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7f6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800d7fa:	d004      	beq.n	800d806 <HAL_RCCEx_GetPeriphCLKFreq+0x5ae>
 800d7fc:	e054      	b.n	800d8a8 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 800d7fe:	f7fe fb5f 	bl	800bec0 <HAL_RCC_GetPCLK1Freq>
 800d802:	63f8      	str	r0, [r7, #60]	@ 0x3c
 800d804:	e1ed      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d806:	4b84      	ldr	r3, [pc, #528]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d808:	681b      	ldr	r3, [r3, #0]
 800d80a:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800d80e:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800d812:	d107      	bne.n	800d824 <HAL_RCCEx_GetPeriphCLKFreq+0x5cc>
 800d814:	f107 0318 	add.w	r3, r7, #24
 800d818:	4618      	mov	r0, r3
 800d81a:	f000 fa05 	bl	800dc28 <HAL_RCCEx_GetPLL2ClockFreq>
 800d81e:	69fb      	ldr	r3, [r7, #28]
 800d820:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d822:	e1de      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d824:	2300      	movs	r3, #0
 800d826:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d828:	e1db      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d82a:	4b7b      	ldr	r3, [pc, #492]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d82c:	681b      	ldr	r3, [r3, #0]
 800d82e:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800d832:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d836:	d107      	bne.n	800d848 <HAL_RCCEx_GetPeriphCLKFreq+0x5f0>
 800d838:	f107 030c 	add.w	r3, r7, #12
 800d83c:	4618      	mov	r0, r3
 800d83e:	f000 fb47 	bl	800ded0 <HAL_RCCEx_GetPLL3ClockFreq>
 800d842:	693b      	ldr	r3, [r7, #16]
 800d844:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d846:	e1cc      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d848:	2300      	movs	r3, #0
 800d84a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d84c:	e1c9      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d84e:	4b72      	ldr	r3, [pc, #456]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d850:	681b      	ldr	r3, [r3, #0]
 800d852:	f003 0304 	and.w	r3, r3, #4
 800d856:	2b04      	cmp	r3, #4
 800d858:	d109      	bne.n	800d86e <HAL_RCCEx_GetPeriphCLKFreq+0x616>
 800d85a:	4b6f      	ldr	r3, [pc, #444]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d85c:	681b      	ldr	r3, [r3, #0]
 800d85e:	08db      	lsrs	r3, r3, #3
 800d860:	f003 0303 	and.w	r3, r3, #3
 800d864:	4a6d      	ldr	r2, [pc, #436]	@ (800da1c <HAL_RCCEx_GetPeriphCLKFreq+0x7c4>)
 800d866:	fa22 f303 	lsr.w	r3, r2, r3
 800d86a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d86c:	e1b9      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d86e:	2300      	movs	r3, #0
 800d870:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d872:	e1b6      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d874:	4b68      	ldr	r3, [pc, #416]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d876:	681b      	ldr	r3, [r3, #0]
 800d878:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d87c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800d880:	d102      	bne.n	800d888 <HAL_RCCEx_GetPeriphCLKFreq+0x630>
 800d882:	4b67      	ldr	r3, [pc, #412]	@ (800da20 <HAL_RCCEx_GetPeriphCLKFreq+0x7c8>)
 800d884:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d886:	e1ac      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d888:	2300      	movs	r3, #0
 800d88a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d88c:	e1a9      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d88e:	4b62      	ldr	r3, [pc, #392]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d890:	681b      	ldr	r3, [r3, #0]
 800d892:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800d896:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d89a:	d102      	bne.n	800d8a2 <HAL_RCCEx_GetPeriphCLKFreq+0x64a>
 800d89c:	4b61      	ldr	r3, [pc, #388]	@ (800da24 <HAL_RCCEx_GetPeriphCLKFreq+0x7cc>)
 800d89e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d8a0:	e19f      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d8a2:	2300      	movs	r3, #0
 800d8a4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d8a6:	e19c      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d8a8:	2300      	movs	r3, #0
 800d8aa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d8ac:	e199      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d8ae:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d8b2:	f5a2 2100 	sub.w	r1, r2, #524288	@ 0x80000
 800d8b6:	430b      	orrs	r3, r1
 800d8b8:	d173      	bne.n	800d9a2 <HAL_RCCEx_GetPeriphCLKFreq+0x74a>
 800d8ba:	4b57      	ldr	r3, [pc, #348]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d8bc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800d8be:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800d8c2:	63bb      	str	r3, [r7, #56]	@ 0x38
 800d8c4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d8c6:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d8ca:	d02f      	beq.n	800d92c <HAL_RCCEx_GetPeriphCLKFreq+0x6d4>
 800d8cc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d8ce:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d8d2:	d863      	bhi.n	800d99c <HAL_RCCEx_GetPeriphCLKFreq+0x744>
 800d8d4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d8d6:	2b00      	cmp	r3, #0
 800d8d8:	d004      	beq.n	800d8e4 <HAL_RCCEx_GetPeriphCLKFreq+0x68c>
 800d8da:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d8dc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800d8e0:	d012      	beq.n	800d908 <HAL_RCCEx_GetPeriphCLKFreq+0x6b0>
 800d8e2:	e05b      	b.n	800d99c <HAL_RCCEx_GetPeriphCLKFreq+0x744>
 800d8e4:	4b4c      	ldr	r3, [pc, #304]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d8e6:	681b      	ldr	r3, [r3, #0]
 800d8e8:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800d8ec:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800d8f0:	d107      	bne.n	800d902 <HAL_RCCEx_GetPeriphCLKFreq+0x6aa>
 800d8f2:	f107 0318 	add.w	r3, r7, #24
 800d8f6:	4618      	mov	r0, r3
 800d8f8:	f000 f996 	bl	800dc28 <HAL_RCCEx_GetPLL2ClockFreq>
 800d8fc:	69bb      	ldr	r3, [r7, #24]
 800d8fe:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d900:	e16f      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d902:	2300      	movs	r3, #0
 800d904:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d906:	e16c      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d908:	4b43      	ldr	r3, [pc, #268]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d90a:	681b      	ldr	r3, [r3, #0]
 800d90c:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800d910:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d914:	d107      	bne.n	800d926 <HAL_RCCEx_GetPeriphCLKFreq+0x6ce>
 800d916:	f107 030c 	add.w	r3, r7, #12
 800d91a:	4618      	mov	r0, r3
 800d91c:	f000 fad8 	bl	800ded0 <HAL_RCCEx_GetPLL3ClockFreq>
 800d920:	697b      	ldr	r3, [r7, #20]
 800d922:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d924:	e15d      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d926:	2300      	movs	r3, #0
 800d928:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d92a:	e15a      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d92c:	4b3a      	ldr	r3, [pc, #232]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d92e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d930:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800d934:	637b      	str	r3, [r7, #52]	@ 0x34
 800d936:	4b38      	ldr	r3, [pc, #224]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d938:	681b      	ldr	r3, [r3, #0]
 800d93a:	f003 0304 	and.w	r3, r3, #4
 800d93e:	2b04      	cmp	r3, #4
 800d940:	d10c      	bne.n	800d95c <HAL_RCCEx_GetPeriphCLKFreq+0x704>
 800d942:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d944:	2b00      	cmp	r3, #0
 800d946:	d109      	bne.n	800d95c <HAL_RCCEx_GetPeriphCLKFreq+0x704>
 800d948:	4b33      	ldr	r3, [pc, #204]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d94a:	681b      	ldr	r3, [r3, #0]
 800d94c:	08db      	lsrs	r3, r3, #3
 800d94e:	f003 0303 	and.w	r3, r3, #3
 800d952:	4a32      	ldr	r2, [pc, #200]	@ (800da1c <HAL_RCCEx_GetPeriphCLKFreq+0x7c4>)
 800d954:	fa22 f303 	lsr.w	r3, r2, r3
 800d958:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d95a:	e01e      	b.n	800d99a <HAL_RCCEx_GetPeriphCLKFreq+0x742>
 800d95c:	4b2e      	ldr	r3, [pc, #184]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d95e:	681b      	ldr	r3, [r3, #0]
 800d960:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d964:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800d968:	d106      	bne.n	800d978 <HAL_RCCEx_GetPeriphCLKFreq+0x720>
 800d96a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d96c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800d970:	d102      	bne.n	800d978 <HAL_RCCEx_GetPeriphCLKFreq+0x720>
 800d972:	4b2b      	ldr	r3, [pc, #172]	@ (800da20 <HAL_RCCEx_GetPeriphCLKFreq+0x7c8>)
 800d974:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d976:	e010      	b.n	800d99a <HAL_RCCEx_GetPeriphCLKFreq+0x742>
 800d978:	4b27      	ldr	r3, [pc, #156]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d97a:	681b      	ldr	r3, [r3, #0]
 800d97c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800d980:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800d984:	d106      	bne.n	800d994 <HAL_RCCEx_GetPeriphCLKFreq+0x73c>
 800d986:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d988:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800d98c:	d102      	bne.n	800d994 <HAL_RCCEx_GetPeriphCLKFreq+0x73c>
 800d98e:	4b25      	ldr	r3, [pc, #148]	@ (800da24 <HAL_RCCEx_GetPeriphCLKFreq+0x7cc>)
 800d990:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d992:	e002      	b.n	800d99a <HAL_RCCEx_GetPeriphCLKFreq+0x742>
 800d994:	2300      	movs	r3, #0
 800d996:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d998:	e123      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d99a:	e122      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d99c:	2300      	movs	r3, #0
 800d99e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d9a0:	e11f      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d9a2:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d9a6:	f5a2 3180 	sub.w	r1, r2, #65536	@ 0x10000
 800d9aa:	430b      	orrs	r3, r1
 800d9ac:	d13c      	bne.n	800da28 <HAL_RCCEx_GetPeriphCLKFreq+0x7d0>
 800d9ae:	4b1a      	ldr	r3, [pc, #104]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d9b0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d9b2:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800d9b6:	63bb      	str	r3, [r7, #56]	@ 0x38
 800d9b8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d9ba:	2b00      	cmp	r3, #0
 800d9bc:	d004      	beq.n	800d9c8 <HAL_RCCEx_GetPeriphCLKFreq+0x770>
 800d9be:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d9c0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800d9c4:	d012      	beq.n	800d9ec <HAL_RCCEx_GetPeriphCLKFreq+0x794>
 800d9c6:	e023      	b.n	800da10 <HAL_RCCEx_GetPeriphCLKFreq+0x7b8>
 800d9c8:	4b13      	ldr	r3, [pc, #76]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d9ca:	681b      	ldr	r3, [r3, #0]
 800d9cc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800d9d0:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800d9d4:	d107      	bne.n	800d9e6 <HAL_RCCEx_GetPeriphCLKFreq+0x78e>
 800d9d6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800d9da:	4618      	mov	r0, r3
 800d9dc:	f000 fbcc 	bl	800e178 <HAL_RCCEx_GetPLL1ClockFreq>
 800d9e0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d9e2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d9e4:	e0fd      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d9e6:	2300      	movs	r3, #0
 800d9e8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800d9ea:	e0fa      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800d9ec:	4b0a      	ldr	r3, [pc, #40]	@ (800da18 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800d9ee:	681b      	ldr	r3, [r3, #0]
 800d9f0:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800d9f4:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800d9f8:	d107      	bne.n	800da0a <HAL_RCCEx_GetPeriphCLKFreq+0x7b2>
 800d9fa:	f107 0318 	add.w	r3, r7, #24
 800d9fe:	4618      	mov	r0, r3
 800da00:	f000 f912 	bl	800dc28 <HAL_RCCEx_GetPLL2ClockFreq>
 800da04:	6a3b      	ldr	r3, [r7, #32]
 800da06:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800da08:	e0eb      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800da0a:	2300      	movs	r3, #0
 800da0c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800da0e:	e0e8      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800da10:	2300      	movs	r3, #0
 800da12:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800da14:	e0e5      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800da16:	bf00      	nop
 800da18:	58024400 	.word	0x58024400
 800da1c:	03d09000 	.word	0x03d09000
 800da20:	003d0900 	.word	0x003d0900
 800da24:	016e3600 	.word	0x016e3600
 800da28:	e9d7 2300 	ldrd	r2, r3, [r7]
 800da2c:	f5a2 4180 	sub.w	r1, r2, #16384	@ 0x4000
 800da30:	430b      	orrs	r3, r1
 800da32:	f040 8085 	bne.w	800db40 <HAL_RCCEx_GetPeriphCLKFreq+0x8e8>
 800da36:	4b6d      	ldr	r3, [pc, #436]	@ (800dbec <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800da38:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800da3a:	f003 43e0 	and.w	r3, r3, #1879048192	@ 0x70000000
 800da3e:	63bb      	str	r3, [r7, #56]	@ 0x38
 800da40:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da42:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800da46:	d06b      	beq.n	800db20 <HAL_RCCEx_GetPeriphCLKFreq+0x8c8>
 800da48:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da4a:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800da4e:	d874      	bhi.n	800db3a <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 800da50:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da52:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800da56:	d056      	beq.n	800db06 <HAL_RCCEx_GetPeriphCLKFreq+0x8ae>
 800da58:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da5a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800da5e:	d86c      	bhi.n	800db3a <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 800da60:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da62:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 800da66:	d03b      	beq.n	800dae0 <HAL_RCCEx_GetPeriphCLKFreq+0x888>
 800da68:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da6a:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 800da6e:	d864      	bhi.n	800db3a <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 800da70:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da72:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800da76:	d021      	beq.n	800dabc <HAL_RCCEx_GetPeriphCLKFreq+0x864>
 800da78:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da7a:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800da7e:	d85c      	bhi.n	800db3a <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 800da80:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da82:	2b00      	cmp	r3, #0
 800da84:	d004      	beq.n	800da90 <HAL_RCCEx_GetPeriphCLKFreq+0x838>
 800da86:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800da88:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800da8c:	d004      	beq.n	800da98 <HAL_RCCEx_GetPeriphCLKFreq+0x840>
 800da8e:	e054      	b.n	800db3a <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 800da90:	f000 f8b4 	bl	800dbfc <HAL_RCCEx_GetD3PCLK1Freq>
 800da94:	63f8      	str	r0, [r7, #60]	@ 0x3c
 800da96:	e0a4      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800da98:	4b54      	ldr	r3, [pc, #336]	@ (800dbec <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800da9a:	681b      	ldr	r3, [r3, #0]
 800da9c:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800daa0:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800daa4:	d107      	bne.n	800dab6 <HAL_RCCEx_GetPeriphCLKFreq+0x85e>
 800daa6:	f107 0318 	add.w	r3, r7, #24
 800daaa:	4618      	mov	r0, r3
 800daac:	f000 f8bc 	bl	800dc28 <HAL_RCCEx_GetPLL2ClockFreq>
 800dab0:	69fb      	ldr	r3, [r7, #28]
 800dab2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dab4:	e095      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dab6:	2300      	movs	r3, #0
 800dab8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800daba:	e092      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dabc:	4b4b      	ldr	r3, [pc, #300]	@ (800dbec <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800dabe:	681b      	ldr	r3, [r3, #0]
 800dac0:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800dac4:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800dac8:	d107      	bne.n	800dada <HAL_RCCEx_GetPeriphCLKFreq+0x882>
 800daca:	f107 030c 	add.w	r3, r7, #12
 800dace:	4618      	mov	r0, r3
 800dad0:	f000 f9fe 	bl	800ded0 <HAL_RCCEx_GetPLL3ClockFreq>
 800dad4:	693b      	ldr	r3, [r7, #16]
 800dad6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dad8:	e083      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dada:	2300      	movs	r3, #0
 800dadc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dade:	e080      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dae0:	4b42      	ldr	r3, [pc, #264]	@ (800dbec <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800dae2:	681b      	ldr	r3, [r3, #0]
 800dae4:	f003 0304 	and.w	r3, r3, #4
 800dae8:	2b04      	cmp	r3, #4
 800daea:	d109      	bne.n	800db00 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
 800daec:	4b3f      	ldr	r3, [pc, #252]	@ (800dbec <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800daee:	681b      	ldr	r3, [r3, #0]
 800daf0:	08db      	lsrs	r3, r3, #3
 800daf2:	f003 0303 	and.w	r3, r3, #3
 800daf6:	4a3e      	ldr	r2, [pc, #248]	@ (800dbf0 <HAL_RCCEx_GetPeriphCLKFreq+0x998>)
 800daf8:	fa22 f303 	lsr.w	r3, r2, r3
 800dafc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dafe:	e070      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800db00:	2300      	movs	r3, #0
 800db02:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800db04:	e06d      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800db06:	4b39      	ldr	r3, [pc, #228]	@ (800dbec <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800db08:	681b      	ldr	r3, [r3, #0]
 800db0a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800db0e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800db12:	d102      	bne.n	800db1a <HAL_RCCEx_GetPeriphCLKFreq+0x8c2>
 800db14:	4b37      	ldr	r3, [pc, #220]	@ (800dbf4 <HAL_RCCEx_GetPeriphCLKFreq+0x99c>)
 800db16:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800db18:	e063      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800db1a:	2300      	movs	r3, #0
 800db1c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800db1e:	e060      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800db20:	4b32      	ldr	r3, [pc, #200]	@ (800dbec <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800db22:	681b      	ldr	r3, [r3, #0]
 800db24:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800db28:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800db2c:	d102      	bne.n	800db34 <HAL_RCCEx_GetPeriphCLKFreq+0x8dc>
 800db2e:	4b32      	ldr	r3, [pc, #200]	@ (800dbf8 <HAL_RCCEx_GetPeriphCLKFreq+0x9a0>)
 800db30:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800db32:	e056      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800db34:	2300      	movs	r3, #0
 800db36:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800db38:	e053      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800db3a:	2300      	movs	r3, #0
 800db3c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800db3e:	e050      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800db40:	e9d7 2300 	ldrd	r2, r3, [r7]
 800db44:	f5a2 4100 	sub.w	r1, r2, #32768	@ 0x8000
 800db48:	430b      	orrs	r3, r1
 800db4a:	d148      	bne.n	800dbde <HAL_RCCEx_GetPeriphCLKFreq+0x986>
 800db4c:	4b27      	ldr	r3, [pc, #156]	@ (800dbec <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800db4e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800db50:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800db54:	63bb      	str	r3, [r7, #56]	@ 0x38
 800db56:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800db58:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800db5c:	d02a      	beq.n	800dbb4 <HAL_RCCEx_GetPeriphCLKFreq+0x95c>
 800db5e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800db60:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800db64:	d838      	bhi.n	800dbd8 <HAL_RCCEx_GetPeriphCLKFreq+0x980>
 800db66:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800db68:	2b00      	cmp	r3, #0
 800db6a:	d004      	beq.n	800db76 <HAL_RCCEx_GetPeriphCLKFreq+0x91e>
 800db6c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800db6e:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800db72:	d00d      	beq.n	800db90 <HAL_RCCEx_GetPeriphCLKFreq+0x938>
 800db74:	e030      	b.n	800dbd8 <HAL_RCCEx_GetPeriphCLKFreq+0x980>
 800db76:	4b1d      	ldr	r3, [pc, #116]	@ (800dbec <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800db78:	681b      	ldr	r3, [r3, #0]
 800db7a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800db7e:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800db82:	d102      	bne.n	800db8a <HAL_RCCEx_GetPeriphCLKFreq+0x932>
 800db84:	4b1c      	ldr	r3, [pc, #112]	@ (800dbf8 <HAL_RCCEx_GetPeriphCLKFreq+0x9a0>)
 800db86:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800db88:	e02b      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800db8a:	2300      	movs	r3, #0
 800db8c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800db8e:	e028      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800db90:	4b16      	ldr	r3, [pc, #88]	@ (800dbec <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800db92:	681b      	ldr	r3, [r3, #0]
 800db94:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800db98:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800db9c:	d107      	bne.n	800dbae <HAL_RCCEx_GetPeriphCLKFreq+0x956>
 800db9e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800dba2:	4618      	mov	r0, r3
 800dba4:	f000 fae8 	bl	800e178 <HAL_RCCEx_GetPLL1ClockFreq>
 800dba8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800dbaa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dbac:	e019      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dbae:	2300      	movs	r3, #0
 800dbb0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dbb2:	e016      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dbb4:	4b0d      	ldr	r3, [pc, #52]	@ (800dbec <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800dbb6:	681b      	ldr	r3, [r3, #0]
 800dbb8:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800dbbc:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800dbc0:	d107      	bne.n	800dbd2 <HAL_RCCEx_GetPeriphCLKFreq+0x97a>
 800dbc2:	f107 0318 	add.w	r3, r7, #24
 800dbc6:	4618      	mov	r0, r3
 800dbc8:	f000 f82e 	bl	800dc28 <HAL_RCCEx_GetPLL2ClockFreq>
 800dbcc:	69fb      	ldr	r3, [r7, #28]
 800dbce:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dbd0:	e007      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dbd2:	2300      	movs	r3, #0
 800dbd4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dbd6:	e004      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dbd8:	2300      	movs	r3, #0
 800dbda:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dbdc:	e001      	b.n	800dbe2 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800dbde:	2300      	movs	r3, #0
 800dbe0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800dbe2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800dbe4:	4618      	mov	r0, r3
 800dbe6:	3740      	adds	r7, #64	@ 0x40
 800dbe8:	46bd      	mov	sp, r7
 800dbea:	bd80      	pop	{r7, pc}
 800dbec:	58024400 	.word	0x58024400
 800dbf0:	03d09000 	.word	0x03d09000
 800dbf4:	003d0900 	.word	0x003d0900
 800dbf8:	016e3600 	.word	0x016e3600

0800dbfc <HAL_RCCEx_GetD3PCLK1Freq>:
 800dbfc:	b580      	push	{r7, lr}
 800dbfe:	af00      	add	r7, sp, #0
 800dc00:	f7fe f92e 	bl	800be60 <HAL_RCC_GetHCLKFreq>
 800dc04:	4602      	mov	r2, r0
 800dc06:	4b06      	ldr	r3, [pc, #24]	@ (800dc20 <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 800dc08:	6a1b      	ldr	r3, [r3, #32]
 800dc0a:	091b      	lsrs	r3, r3, #4
 800dc0c:	f003 0307 	and.w	r3, r3, #7
 800dc10:	4904      	ldr	r1, [pc, #16]	@ (800dc24 <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 800dc12:	5ccb      	ldrb	r3, [r1, r3]
 800dc14:	f003 031f 	and.w	r3, r3, #31
 800dc18:	fa22 f303 	lsr.w	r3, r2, r3
 800dc1c:	4618      	mov	r0, r3
 800dc1e:	bd80      	pop	{r7, pc}
 800dc20:	58024400 	.word	0x58024400
 800dc24:	0801aba8 	.word	0x0801aba8

0800dc28 <HAL_RCCEx_GetPLL2ClockFreq>:
 800dc28:	b480      	push	{r7}
 800dc2a:	b089      	sub	sp, #36	@ 0x24
 800dc2c:	af00      	add	r7, sp, #0
 800dc2e:	6078      	str	r0, [r7, #4]
 800dc30:	4ba1      	ldr	r3, [pc, #644]	@ (800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dc32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800dc34:	f003 0303 	and.w	r3, r3, #3
 800dc38:	61bb      	str	r3, [r7, #24]
 800dc3a:	4b9f      	ldr	r3, [pc, #636]	@ (800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dc3c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800dc3e:	0b1b      	lsrs	r3, r3, #12
 800dc40:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800dc44:	617b      	str	r3, [r7, #20]
 800dc46:	4b9c      	ldr	r3, [pc, #624]	@ (800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dc48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dc4a:	091b      	lsrs	r3, r3, #4
 800dc4c:	f003 0301 	and.w	r3, r3, #1
 800dc50:	613b      	str	r3, [r7, #16]
 800dc52:	4b99      	ldr	r3, [pc, #612]	@ (800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dc54:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800dc56:	08db      	lsrs	r3, r3, #3
 800dc58:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800dc5c:	693a      	ldr	r2, [r7, #16]
 800dc5e:	fb02 f303 	mul.w	r3, r2, r3
 800dc62:	ee07 3a90 	vmov	s15, r3
 800dc66:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800dc6a:	edc7 7a03 	vstr	s15, [r7, #12]
 800dc6e:	697b      	ldr	r3, [r7, #20]
 800dc70:	2b00      	cmp	r3, #0
 800dc72:	f000 8111 	beq.w	800de98 <HAL_RCCEx_GetPLL2ClockFreq+0x270>
 800dc76:	69bb      	ldr	r3, [r7, #24]
 800dc78:	2b02      	cmp	r3, #2
 800dc7a:	f000 8083 	beq.w	800dd84 <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 800dc7e:	69bb      	ldr	r3, [r7, #24]
 800dc80:	2b02      	cmp	r3, #2
 800dc82:	f200 80a1 	bhi.w	800ddc8 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 800dc86:	69bb      	ldr	r3, [r7, #24]
 800dc88:	2b00      	cmp	r3, #0
 800dc8a:	d003      	beq.n	800dc94 <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 800dc8c:	69bb      	ldr	r3, [r7, #24]
 800dc8e:	2b01      	cmp	r3, #1
 800dc90:	d056      	beq.n	800dd40 <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 800dc92:	e099      	b.n	800ddc8 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 800dc94:	4b88      	ldr	r3, [pc, #544]	@ (800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dc96:	681b      	ldr	r3, [r3, #0]
 800dc98:	f003 0320 	and.w	r3, r3, #32
 800dc9c:	2b00      	cmp	r3, #0
 800dc9e:	d02d      	beq.n	800dcfc <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
 800dca0:	4b85      	ldr	r3, [pc, #532]	@ (800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dca2:	681b      	ldr	r3, [r3, #0]
 800dca4:	08db      	lsrs	r3, r3, #3
 800dca6:	f003 0303 	and.w	r3, r3, #3
 800dcaa:	4a84      	ldr	r2, [pc, #528]	@ (800debc <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 800dcac:	fa22 f303 	lsr.w	r3, r2, r3
 800dcb0:	60bb      	str	r3, [r7, #8]
 800dcb2:	68bb      	ldr	r3, [r7, #8]
 800dcb4:	ee07 3a90 	vmov	s15, r3
 800dcb8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800dcbc:	697b      	ldr	r3, [r7, #20]
 800dcbe:	ee07 3a90 	vmov	s15, r3
 800dcc2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800dcc6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800dcca:	4b7b      	ldr	r3, [pc, #492]	@ (800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dccc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dcce:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800dcd2:	ee07 3a90 	vmov	s15, r3
 800dcd6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800dcda:	ed97 6a03 	vldr	s12, [r7, #12]
 800dcde:	eddf 5a78 	vldr	s11, [pc, #480]	@ 800dec0 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800dce2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800dce6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800dcea:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800dcee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dcf2:	ee67 7a27 	vmul.f32	s15, s14, s15
 800dcf6:	edc7 7a07 	vstr	s15, [r7, #28]
 800dcfa:	e087      	b.n	800de0c <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 800dcfc:	697b      	ldr	r3, [r7, #20]
 800dcfe:	ee07 3a90 	vmov	s15, r3
 800dd02:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800dd06:	eddf 6a6f 	vldr	s13, [pc, #444]	@ 800dec4 <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 800dd0a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800dd0e:	4b6a      	ldr	r3, [pc, #424]	@ (800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dd10:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dd12:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800dd16:	ee07 3a90 	vmov	s15, r3
 800dd1a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800dd1e:	ed97 6a03 	vldr	s12, [r7, #12]
 800dd22:	eddf 5a67 	vldr	s11, [pc, #412]	@ 800dec0 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800dd26:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800dd2a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800dd2e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800dd32:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dd36:	ee67 7a27 	vmul.f32	s15, s14, s15
 800dd3a:	edc7 7a07 	vstr	s15, [r7, #28]
 800dd3e:	e065      	b.n	800de0c <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 800dd40:	697b      	ldr	r3, [r7, #20]
 800dd42:	ee07 3a90 	vmov	s15, r3
 800dd46:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800dd4a:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 800dec8 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 800dd4e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800dd52:	4b59      	ldr	r3, [pc, #356]	@ (800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dd54:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dd56:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800dd5a:	ee07 3a90 	vmov	s15, r3
 800dd5e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800dd62:	ed97 6a03 	vldr	s12, [r7, #12]
 800dd66:	eddf 5a56 	vldr	s11, [pc, #344]	@ 800dec0 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800dd6a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800dd6e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800dd72:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800dd76:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dd7a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800dd7e:	edc7 7a07 	vstr	s15, [r7, #28]
 800dd82:	e043      	b.n	800de0c <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 800dd84:	697b      	ldr	r3, [r7, #20]
 800dd86:	ee07 3a90 	vmov	s15, r3
 800dd8a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800dd8e:	eddf 6a4f 	vldr	s13, [pc, #316]	@ 800decc <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 800dd92:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800dd96:	4b48      	ldr	r3, [pc, #288]	@ (800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dd98:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dd9a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800dd9e:	ee07 3a90 	vmov	s15, r3
 800dda2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800dda6:	ed97 6a03 	vldr	s12, [r7, #12]
 800ddaa:	eddf 5a45 	vldr	s11, [pc, #276]	@ 800dec0 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800ddae:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800ddb2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800ddb6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800ddba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ddbe:	ee67 7a27 	vmul.f32	s15, s14, s15
 800ddc2:	edc7 7a07 	vstr	s15, [r7, #28]
 800ddc6:	e021      	b.n	800de0c <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 800ddc8:	697b      	ldr	r3, [r7, #20]
 800ddca:	ee07 3a90 	vmov	s15, r3
 800ddce:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800ddd2:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 800dec8 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 800ddd6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800ddda:	4b37      	ldr	r3, [pc, #220]	@ (800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800dddc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ddde:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800dde2:	ee07 3a90 	vmov	s15, r3
 800dde6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800ddea:	ed97 6a03 	vldr	s12, [r7, #12]
 800ddee:	eddf 5a34 	vldr	s11, [pc, #208]	@ 800dec0 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800ddf2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800ddf6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800ddfa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800ddfe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800de02:	ee67 7a27 	vmul.f32	s15, s14, s15
 800de06:	edc7 7a07 	vstr	s15, [r7, #28]
 800de0a:	bf00      	nop
 800de0c:	4b2a      	ldr	r3, [pc, #168]	@ (800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800de0e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800de10:	0a5b      	lsrs	r3, r3, #9
 800de12:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800de16:	ee07 3a90 	vmov	s15, r3
 800de1a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800de1e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800de22:	ee37 7a87 	vadd.f32	s14, s15, s14
 800de26:	edd7 6a07 	vldr	s13, [r7, #28]
 800de2a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800de2e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800de32:	ee17 2a90 	vmov	r2, s15
 800de36:	687b      	ldr	r3, [r7, #4]
 800de38:	601a      	str	r2, [r3, #0]
 800de3a:	4b1f      	ldr	r3, [pc, #124]	@ (800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800de3c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800de3e:	0c1b      	lsrs	r3, r3, #16
 800de40:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800de44:	ee07 3a90 	vmov	s15, r3
 800de48:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800de4c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800de50:	ee37 7a87 	vadd.f32	s14, s15, s14
 800de54:	edd7 6a07 	vldr	s13, [r7, #28]
 800de58:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800de5c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800de60:	ee17 2a90 	vmov	r2, s15
 800de64:	687b      	ldr	r3, [r7, #4]
 800de66:	605a      	str	r2, [r3, #4]
 800de68:	4b13      	ldr	r3, [pc, #76]	@ (800deb8 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800de6a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800de6c:	0e1b      	lsrs	r3, r3, #24
 800de6e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800de72:	ee07 3a90 	vmov	s15, r3
 800de76:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800de7a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800de7e:	ee37 7a87 	vadd.f32	s14, s15, s14
 800de82:	edd7 6a07 	vldr	s13, [r7, #28]
 800de86:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800de8a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800de8e:	ee17 2a90 	vmov	r2, s15
 800de92:	687b      	ldr	r3, [r7, #4]
 800de94:	609a      	str	r2, [r3, #8]
 800de96:	e008      	b.n	800deaa <HAL_RCCEx_GetPLL2ClockFreq+0x282>
 800de98:	687b      	ldr	r3, [r7, #4]
 800de9a:	2200      	movs	r2, #0
 800de9c:	601a      	str	r2, [r3, #0]
 800de9e:	687b      	ldr	r3, [r7, #4]
 800dea0:	2200      	movs	r2, #0
 800dea2:	605a      	str	r2, [r3, #4]
 800dea4:	687b      	ldr	r3, [r7, #4]
 800dea6:	2200      	movs	r2, #0
 800dea8:	609a      	str	r2, [r3, #8]
 800deaa:	bf00      	nop
 800deac:	3724      	adds	r7, #36	@ 0x24
 800deae:	46bd      	mov	sp, r7
 800deb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800deb4:	4770      	bx	lr
 800deb6:	bf00      	nop
 800deb8:	58024400 	.word	0x58024400
 800debc:	03d09000 	.word	0x03d09000
 800dec0:	46000000 	.word	0x46000000
 800dec4:	4c742400 	.word	0x4c742400
 800dec8:	4a742400 	.word	0x4a742400
 800decc:	4bb71b00 	.word	0x4bb71b00

0800ded0 <HAL_RCCEx_GetPLL3ClockFreq>:
 800ded0:	b480      	push	{r7}
 800ded2:	b089      	sub	sp, #36	@ 0x24
 800ded4:	af00      	add	r7, sp, #0
 800ded6:	6078      	str	r0, [r7, #4]
 800ded8:	4ba1      	ldr	r3, [pc, #644]	@ (800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800deda:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800dedc:	f003 0303 	and.w	r3, r3, #3
 800dee0:	61bb      	str	r3, [r7, #24]
 800dee2:	4b9f      	ldr	r3, [pc, #636]	@ (800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800dee4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800dee6:	0d1b      	lsrs	r3, r3, #20
 800dee8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800deec:	617b      	str	r3, [r7, #20]
 800deee:	4b9c      	ldr	r3, [pc, #624]	@ (800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800def0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800def2:	0a1b      	lsrs	r3, r3, #8
 800def4:	f003 0301 	and.w	r3, r3, #1
 800def8:	613b      	str	r3, [r7, #16]
 800defa:	4b99      	ldr	r3, [pc, #612]	@ (800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800defc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800defe:	08db      	lsrs	r3, r3, #3
 800df00:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800df04:	693a      	ldr	r2, [r7, #16]
 800df06:	fb02 f303 	mul.w	r3, r2, r3
 800df0a:	ee07 3a90 	vmov	s15, r3
 800df0e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800df12:	edc7 7a03 	vstr	s15, [r7, #12]
 800df16:	697b      	ldr	r3, [r7, #20]
 800df18:	2b00      	cmp	r3, #0
 800df1a:	f000 8111 	beq.w	800e140 <HAL_RCCEx_GetPLL3ClockFreq+0x270>
 800df1e:	69bb      	ldr	r3, [r7, #24]
 800df20:	2b02      	cmp	r3, #2
 800df22:	f000 8083 	beq.w	800e02c <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 800df26:	69bb      	ldr	r3, [r7, #24]
 800df28:	2b02      	cmp	r3, #2
 800df2a:	f200 80a1 	bhi.w	800e070 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 800df2e:	69bb      	ldr	r3, [r7, #24]
 800df30:	2b00      	cmp	r3, #0
 800df32:	d003      	beq.n	800df3c <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 800df34:	69bb      	ldr	r3, [r7, #24]
 800df36:	2b01      	cmp	r3, #1
 800df38:	d056      	beq.n	800dfe8 <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 800df3a:	e099      	b.n	800e070 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 800df3c:	4b88      	ldr	r3, [pc, #544]	@ (800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800df3e:	681b      	ldr	r3, [r3, #0]
 800df40:	f003 0320 	and.w	r3, r3, #32
 800df44:	2b00      	cmp	r3, #0
 800df46:	d02d      	beq.n	800dfa4 <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
 800df48:	4b85      	ldr	r3, [pc, #532]	@ (800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800df4a:	681b      	ldr	r3, [r3, #0]
 800df4c:	08db      	lsrs	r3, r3, #3
 800df4e:	f003 0303 	and.w	r3, r3, #3
 800df52:	4a84      	ldr	r2, [pc, #528]	@ (800e164 <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 800df54:	fa22 f303 	lsr.w	r3, r2, r3
 800df58:	60bb      	str	r3, [r7, #8]
 800df5a:	68bb      	ldr	r3, [r7, #8]
 800df5c:	ee07 3a90 	vmov	s15, r3
 800df60:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800df64:	697b      	ldr	r3, [r7, #20]
 800df66:	ee07 3a90 	vmov	s15, r3
 800df6a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800df6e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800df72:	4b7b      	ldr	r3, [pc, #492]	@ (800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800df74:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800df76:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800df7a:	ee07 3a90 	vmov	s15, r3
 800df7e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800df82:	ed97 6a03 	vldr	s12, [r7, #12]
 800df86:	eddf 5a78 	vldr	s11, [pc, #480]	@ 800e168 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800df8a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800df8e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800df92:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800df96:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800df9a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800df9e:	edc7 7a07 	vstr	s15, [r7, #28]
 800dfa2:	e087      	b.n	800e0b4 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800dfa4:	697b      	ldr	r3, [r7, #20]
 800dfa6:	ee07 3a90 	vmov	s15, r3
 800dfaa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800dfae:	eddf 6a6f 	vldr	s13, [pc, #444]	@ 800e16c <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 800dfb2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800dfb6:	4b6a      	ldr	r3, [pc, #424]	@ (800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800dfb8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dfba:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800dfbe:	ee07 3a90 	vmov	s15, r3
 800dfc2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800dfc6:	ed97 6a03 	vldr	s12, [r7, #12]
 800dfca:	eddf 5a67 	vldr	s11, [pc, #412]	@ 800e168 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800dfce:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800dfd2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800dfd6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800dfda:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dfde:	ee67 7a27 	vmul.f32	s15, s14, s15
 800dfe2:	edc7 7a07 	vstr	s15, [r7, #28]
 800dfe6:	e065      	b.n	800e0b4 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800dfe8:	697b      	ldr	r3, [r7, #20]
 800dfea:	ee07 3a90 	vmov	s15, r3
 800dfee:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800dff2:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 800e170 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 800dff6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800dffa:	4b59      	ldr	r3, [pc, #356]	@ (800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800dffc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dffe:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800e002:	ee07 3a90 	vmov	s15, r3
 800e006:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e00a:	ed97 6a03 	vldr	s12, [r7, #12]
 800e00e:	eddf 5a56 	vldr	s11, [pc, #344]	@ 800e168 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800e012:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800e016:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800e01a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e01e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e022:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e026:	edc7 7a07 	vstr	s15, [r7, #28]
 800e02a:	e043      	b.n	800e0b4 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800e02c:	697b      	ldr	r3, [r7, #20]
 800e02e:	ee07 3a90 	vmov	s15, r3
 800e032:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e036:	eddf 6a4f 	vldr	s13, [pc, #316]	@ 800e174 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 800e03a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e03e:	4b48      	ldr	r3, [pc, #288]	@ (800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800e040:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e042:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800e046:	ee07 3a90 	vmov	s15, r3
 800e04a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e04e:	ed97 6a03 	vldr	s12, [r7, #12]
 800e052:	eddf 5a45 	vldr	s11, [pc, #276]	@ 800e168 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800e056:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800e05a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800e05e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e062:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e066:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e06a:	edc7 7a07 	vstr	s15, [r7, #28]
 800e06e:	e021      	b.n	800e0b4 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800e070:	697b      	ldr	r3, [r7, #20]
 800e072:	ee07 3a90 	vmov	s15, r3
 800e076:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e07a:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 800e170 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 800e07e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e082:	4b37      	ldr	r3, [pc, #220]	@ (800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800e084:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e086:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800e08a:	ee07 3a90 	vmov	s15, r3
 800e08e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e092:	ed97 6a03 	vldr	s12, [r7, #12]
 800e096:	eddf 5a34 	vldr	s11, [pc, #208]	@ 800e168 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800e09a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800e09e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800e0a2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e0a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e0aa:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e0ae:	edc7 7a07 	vstr	s15, [r7, #28]
 800e0b2:	bf00      	nop
 800e0b4:	4b2a      	ldr	r3, [pc, #168]	@ (800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800e0b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e0b8:	0a5b      	lsrs	r3, r3, #9
 800e0ba:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800e0be:	ee07 3a90 	vmov	s15, r3
 800e0c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e0c6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800e0ca:	ee37 7a87 	vadd.f32	s14, s15, s14
 800e0ce:	edd7 6a07 	vldr	s13, [r7, #28]
 800e0d2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e0d6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800e0da:	ee17 2a90 	vmov	r2, s15
 800e0de:	687b      	ldr	r3, [r7, #4]
 800e0e0:	601a      	str	r2, [r3, #0]
 800e0e2:	4b1f      	ldr	r3, [pc, #124]	@ (800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800e0e4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e0e6:	0c1b      	lsrs	r3, r3, #16
 800e0e8:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800e0ec:	ee07 3a90 	vmov	s15, r3
 800e0f0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e0f4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800e0f8:	ee37 7a87 	vadd.f32	s14, s15, s14
 800e0fc:	edd7 6a07 	vldr	s13, [r7, #28]
 800e100:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e104:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800e108:	ee17 2a90 	vmov	r2, s15
 800e10c:	687b      	ldr	r3, [r7, #4]
 800e10e:	605a      	str	r2, [r3, #4]
 800e110:	4b13      	ldr	r3, [pc, #76]	@ (800e160 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800e112:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e114:	0e1b      	lsrs	r3, r3, #24
 800e116:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800e11a:	ee07 3a90 	vmov	s15, r3
 800e11e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e122:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800e126:	ee37 7a87 	vadd.f32	s14, s15, s14
 800e12a:	edd7 6a07 	vldr	s13, [r7, #28]
 800e12e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e132:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800e136:	ee17 2a90 	vmov	r2, s15
 800e13a:	687b      	ldr	r3, [r7, #4]
 800e13c:	609a      	str	r2, [r3, #8]
 800e13e:	e008      	b.n	800e152 <HAL_RCCEx_GetPLL3ClockFreq+0x282>
 800e140:	687b      	ldr	r3, [r7, #4]
 800e142:	2200      	movs	r2, #0
 800e144:	601a      	str	r2, [r3, #0]
 800e146:	687b      	ldr	r3, [r7, #4]
 800e148:	2200      	movs	r2, #0
 800e14a:	605a      	str	r2, [r3, #4]
 800e14c:	687b      	ldr	r3, [r7, #4]
 800e14e:	2200      	movs	r2, #0
 800e150:	609a      	str	r2, [r3, #8]
 800e152:	bf00      	nop
 800e154:	3724      	adds	r7, #36	@ 0x24
 800e156:	46bd      	mov	sp, r7
 800e158:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e15c:	4770      	bx	lr
 800e15e:	bf00      	nop
 800e160:	58024400 	.word	0x58024400
 800e164:	03d09000 	.word	0x03d09000
 800e168:	46000000 	.word	0x46000000
 800e16c:	4c742400 	.word	0x4c742400
 800e170:	4a742400 	.word	0x4a742400
 800e174:	4bb71b00 	.word	0x4bb71b00

0800e178 <HAL_RCCEx_GetPLL1ClockFreq>:
 800e178:	b480      	push	{r7}
 800e17a:	b089      	sub	sp, #36	@ 0x24
 800e17c:	af00      	add	r7, sp, #0
 800e17e:	6078      	str	r0, [r7, #4]
 800e180:	4ba0      	ldr	r3, [pc, #640]	@ (800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e182:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e184:	f003 0303 	and.w	r3, r3, #3
 800e188:	61bb      	str	r3, [r7, #24]
 800e18a:	4b9e      	ldr	r3, [pc, #632]	@ (800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e18c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e18e:	091b      	lsrs	r3, r3, #4
 800e190:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800e194:	617b      	str	r3, [r7, #20]
 800e196:	4b9b      	ldr	r3, [pc, #620]	@ (800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e198:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e19a:	f003 0301 	and.w	r3, r3, #1
 800e19e:	613b      	str	r3, [r7, #16]
 800e1a0:	4b98      	ldr	r3, [pc, #608]	@ (800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e1a2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e1a4:	08db      	lsrs	r3, r3, #3
 800e1a6:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800e1aa:	693a      	ldr	r2, [r7, #16]
 800e1ac:	fb02 f303 	mul.w	r3, r2, r3
 800e1b0:	ee07 3a90 	vmov	s15, r3
 800e1b4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e1b8:	edc7 7a03 	vstr	s15, [r7, #12]
 800e1bc:	697b      	ldr	r3, [r7, #20]
 800e1be:	2b00      	cmp	r3, #0
 800e1c0:	f000 8111 	beq.w	800e3e6 <HAL_RCCEx_GetPLL1ClockFreq+0x26e>
 800e1c4:	69bb      	ldr	r3, [r7, #24]
 800e1c6:	2b02      	cmp	r3, #2
 800e1c8:	f000 8083 	beq.w	800e2d2 <HAL_RCCEx_GetPLL1ClockFreq+0x15a>
 800e1cc:	69bb      	ldr	r3, [r7, #24]
 800e1ce:	2b02      	cmp	r3, #2
 800e1d0:	f200 80a1 	bhi.w	800e316 <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
 800e1d4:	69bb      	ldr	r3, [r7, #24]
 800e1d6:	2b00      	cmp	r3, #0
 800e1d8:	d003      	beq.n	800e1e2 <HAL_RCCEx_GetPLL1ClockFreq+0x6a>
 800e1da:	69bb      	ldr	r3, [r7, #24]
 800e1dc:	2b01      	cmp	r3, #1
 800e1de:	d056      	beq.n	800e28e <HAL_RCCEx_GetPLL1ClockFreq+0x116>
 800e1e0:	e099      	b.n	800e316 <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
 800e1e2:	4b88      	ldr	r3, [pc, #544]	@ (800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e1e4:	681b      	ldr	r3, [r3, #0]
 800e1e6:	f003 0320 	and.w	r3, r3, #32
 800e1ea:	2b00      	cmp	r3, #0
 800e1ec:	d02d      	beq.n	800e24a <HAL_RCCEx_GetPLL1ClockFreq+0xd2>
 800e1ee:	4b85      	ldr	r3, [pc, #532]	@ (800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e1f0:	681b      	ldr	r3, [r3, #0]
 800e1f2:	08db      	lsrs	r3, r3, #3
 800e1f4:	f003 0303 	and.w	r3, r3, #3
 800e1f8:	4a83      	ldr	r2, [pc, #524]	@ (800e408 <HAL_RCCEx_GetPLL1ClockFreq+0x290>)
 800e1fa:	fa22 f303 	lsr.w	r3, r2, r3
 800e1fe:	60bb      	str	r3, [r7, #8]
 800e200:	68bb      	ldr	r3, [r7, #8]
 800e202:	ee07 3a90 	vmov	s15, r3
 800e206:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e20a:	697b      	ldr	r3, [r7, #20]
 800e20c:	ee07 3a90 	vmov	s15, r3
 800e210:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e214:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e218:	4b7a      	ldr	r3, [pc, #488]	@ (800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e21a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e21c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800e220:	ee07 3a90 	vmov	s15, r3
 800e224:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e228:	ed97 6a03 	vldr	s12, [r7, #12]
 800e22c:	eddf 5a77 	vldr	s11, [pc, #476]	@ 800e40c <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800e230:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800e234:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800e238:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e23c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e240:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e244:	edc7 7a07 	vstr	s15, [r7, #28]
 800e248:	e087      	b.n	800e35a <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 800e24a:	697b      	ldr	r3, [r7, #20]
 800e24c:	ee07 3a90 	vmov	s15, r3
 800e250:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e254:	eddf 6a6e 	vldr	s13, [pc, #440]	@ 800e410 <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 800e258:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e25c:	4b69      	ldr	r3, [pc, #420]	@ (800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e25e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e260:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800e264:	ee07 3a90 	vmov	s15, r3
 800e268:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e26c:	ed97 6a03 	vldr	s12, [r7, #12]
 800e270:	eddf 5a66 	vldr	s11, [pc, #408]	@ 800e40c <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800e274:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800e278:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800e27c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e280:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e284:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e288:	edc7 7a07 	vstr	s15, [r7, #28]
 800e28c:	e065      	b.n	800e35a <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 800e28e:	697b      	ldr	r3, [r7, #20]
 800e290:	ee07 3a90 	vmov	s15, r3
 800e294:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e298:	eddf 6a5e 	vldr	s13, [pc, #376]	@ 800e414 <HAL_RCCEx_GetPLL1ClockFreq+0x29c>
 800e29c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e2a0:	4b58      	ldr	r3, [pc, #352]	@ (800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e2a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e2a4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800e2a8:	ee07 3a90 	vmov	s15, r3
 800e2ac:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e2b0:	ed97 6a03 	vldr	s12, [r7, #12]
 800e2b4:	eddf 5a55 	vldr	s11, [pc, #340]	@ 800e40c <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800e2b8:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800e2bc:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800e2c0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e2c4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e2c8:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e2cc:	edc7 7a07 	vstr	s15, [r7, #28]
 800e2d0:	e043      	b.n	800e35a <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 800e2d2:	697b      	ldr	r3, [r7, #20]
 800e2d4:	ee07 3a90 	vmov	s15, r3
 800e2d8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e2dc:	eddf 6a4e 	vldr	s13, [pc, #312]	@ 800e418 <HAL_RCCEx_GetPLL1ClockFreq+0x2a0>
 800e2e0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e2e4:	4b47      	ldr	r3, [pc, #284]	@ (800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e2e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e2e8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800e2ec:	ee07 3a90 	vmov	s15, r3
 800e2f0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e2f4:	ed97 6a03 	vldr	s12, [r7, #12]
 800e2f8:	eddf 5a44 	vldr	s11, [pc, #272]	@ 800e40c <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800e2fc:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800e300:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800e304:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e308:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e30c:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e310:	edc7 7a07 	vstr	s15, [r7, #28]
 800e314:	e021      	b.n	800e35a <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 800e316:	697b      	ldr	r3, [r7, #20]
 800e318:	ee07 3a90 	vmov	s15, r3
 800e31c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e320:	eddf 6a3b 	vldr	s13, [pc, #236]	@ 800e410 <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 800e324:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e328:	4b36      	ldr	r3, [pc, #216]	@ (800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e32a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e32c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800e330:	ee07 3a90 	vmov	s15, r3
 800e334:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e338:	ed97 6a03 	vldr	s12, [r7, #12]
 800e33c:	eddf 5a33 	vldr	s11, [pc, #204]	@ 800e40c <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800e340:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800e344:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800e348:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e34c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e350:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e354:	edc7 7a07 	vstr	s15, [r7, #28]
 800e358:	bf00      	nop
 800e35a:	4b2a      	ldr	r3, [pc, #168]	@ (800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e35c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e35e:	0a5b      	lsrs	r3, r3, #9
 800e360:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800e364:	ee07 3a90 	vmov	s15, r3
 800e368:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e36c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800e370:	ee37 7a87 	vadd.f32	s14, s15, s14
 800e374:	edd7 6a07 	vldr	s13, [r7, #28]
 800e378:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e37c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800e380:	ee17 2a90 	vmov	r2, s15
 800e384:	687b      	ldr	r3, [r7, #4]
 800e386:	601a      	str	r2, [r3, #0]
 800e388:	4b1e      	ldr	r3, [pc, #120]	@ (800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e38a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e38c:	0c1b      	lsrs	r3, r3, #16
 800e38e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800e392:	ee07 3a90 	vmov	s15, r3
 800e396:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e39a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800e39e:	ee37 7a87 	vadd.f32	s14, s15, s14
 800e3a2:	edd7 6a07 	vldr	s13, [r7, #28]
 800e3a6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e3aa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800e3ae:	ee17 2a90 	vmov	r2, s15
 800e3b2:	687b      	ldr	r3, [r7, #4]
 800e3b4:	605a      	str	r2, [r3, #4]
 800e3b6:	4b13      	ldr	r3, [pc, #76]	@ (800e404 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800e3b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e3ba:	0e1b      	lsrs	r3, r3, #24
 800e3bc:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800e3c0:	ee07 3a90 	vmov	s15, r3
 800e3c4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e3c8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800e3cc:	ee37 7a87 	vadd.f32	s14, s15, s14
 800e3d0:	edd7 6a07 	vldr	s13, [r7, #28]
 800e3d4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e3d8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800e3dc:	ee17 2a90 	vmov	r2, s15
 800e3e0:	687b      	ldr	r3, [r7, #4]
 800e3e2:	609a      	str	r2, [r3, #8]
 800e3e4:	e008      	b.n	800e3f8 <HAL_RCCEx_GetPLL1ClockFreq+0x280>
 800e3e6:	687b      	ldr	r3, [r7, #4]
 800e3e8:	2200      	movs	r2, #0
 800e3ea:	601a      	str	r2, [r3, #0]
 800e3ec:	687b      	ldr	r3, [r7, #4]
 800e3ee:	2200      	movs	r2, #0
 800e3f0:	605a      	str	r2, [r3, #4]
 800e3f2:	687b      	ldr	r3, [r7, #4]
 800e3f4:	2200      	movs	r2, #0
 800e3f6:	609a      	str	r2, [r3, #8]
 800e3f8:	bf00      	nop
 800e3fa:	3724      	adds	r7, #36	@ 0x24
 800e3fc:	46bd      	mov	sp, r7
 800e3fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e402:	4770      	bx	lr
 800e404:	58024400 	.word	0x58024400
 800e408:	03d09000 	.word	0x03d09000
 800e40c:	46000000 	.word	0x46000000
 800e410:	4c742400 	.word	0x4c742400
 800e414:	4a742400 	.word	0x4a742400
 800e418:	4bb71b00 	.word	0x4bb71b00

0800e41c <RCCEx_PLL2_Config>:
 800e41c:	b580      	push	{r7, lr}
 800e41e:	b084      	sub	sp, #16
 800e420:	af00      	add	r7, sp, #0
 800e422:	6078      	str	r0, [r7, #4]
 800e424:	6039      	str	r1, [r7, #0]
 800e426:	2300      	movs	r3, #0
 800e428:	73fb      	strb	r3, [r7, #15]
 800e42a:	4b53      	ldr	r3, [pc, #332]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e42c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e42e:	f003 0303 	and.w	r3, r3, #3
 800e432:	2b03      	cmp	r3, #3
 800e434:	d101      	bne.n	800e43a <RCCEx_PLL2_Config+0x1e>
 800e436:	2301      	movs	r3, #1
 800e438:	e099      	b.n	800e56e <RCCEx_PLL2_Config+0x152>
 800e43a:	4b4f      	ldr	r3, [pc, #316]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e43c:	681b      	ldr	r3, [r3, #0]
 800e43e:	4a4e      	ldr	r2, [pc, #312]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e440:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800e444:	6013      	str	r3, [r2, #0]
 800e446:	f7f6 ff53 	bl	80052f0 <HAL_GetTick>
 800e44a:	60b8      	str	r0, [r7, #8]
 800e44c:	e008      	b.n	800e460 <RCCEx_PLL2_Config+0x44>
 800e44e:	f7f6 ff4f 	bl	80052f0 <HAL_GetTick>
 800e452:	4602      	mov	r2, r0
 800e454:	68bb      	ldr	r3, [r7, #8]
 800e456:	1ad3      	subs	r3, r2, r3
 800e458:	2b02      	cmp	r3, #2
 800e45a:	d901      	bls.n	800e460 <RCCEx_PLL2_Config+0x44>
 800e45c:	2303      	movs	r3, #3
 800e45e:	e086      	b.n	800e56e <RCCEx_PLL2_Config+0x152>
 800e460:	4b45      	ldr	r3, [pc, #276]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e462:	681b      	ldr	r3, [r3, #0]
 800e464:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800e468:	2b00      	cmp	r3, #0
 800e46a:	d1f0      	bne.n	800e44e <RCCEx_PLL2_Config+0x32>
 800e46c:	4b42      	ldr	r3, [pc, #264]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e46e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e470:	f423 327c 	bic.w	r2, r3, #258048	@ 0x3f000
 800e474:	687b      	ldr	r3, [r7, #4]
 800e476:	681b      	ldr	r3, [r3, #0]
 800e478:	031b      	lsls	r3, r3, #12
 800e47a:	493f      	ldr	r1, [pc, #252]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e47c:	4313      	orrs	r3, r2
 800e47e:	628b      	str	r3, [r1, #40]	@ 0x28
 800e480:	687b      	ldr	r3, [r7, #4]
 800e482:	685b      	ldr	r3, [r3, #4]
 800e484:	3b01      	subs	r3, #1
 800e486:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800e48a:	687b      	ldr	r3, [r7, #4]
 800e48c:	689b      	ldr	r3, [r3, #8]
 800e48e:	3b01      	subs	r3, #1
 800e490:	025b      	lsls	r3, r3, #9
 800e492:	b29b      	uxth	r3, r3
 800e494:	431a      	orrs	r2, r3
 800e496:	687b      	ldr	r3, [r7, #4]
 800e498:	68db      	ldr	r3, [r3, #12]
 800e49a:	3b01      	subs	r3, #1
 800e49c:	041b      	lsls	r3, r3, #16
 800e49e:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 800e4a2:	431a      	orrs	r2, r3
 800e4a4:	687b      	ldr	r3, [r7, #4]
 800e4a6:	691b      	ldr	r3, [r3, #16]
 800e4a8:	3b01      	subs	r3, #1
 800e4aa:	061b      	lsls	r3, r3, #24
 800e4ac:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 800e4b0:	4931      	ldr	r1, [pc, #196]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e4b2:	4313      	orrs	r3, r2
 800e4b4:	638b      	str	r3, [r1, #56]	@ 0x38
 800e4b6:	4b30      	ldr	r3, [pc, #192]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e4b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e4ba:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 800e4be:	687b      	ldr	r3, [r7, #4]
 800e4c0:	695b      	ldr	r3, [r3, #20]
 800e4c2:	492d      	ldr	r1, [pc, #180]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e4c4:	4313      	orrs	r3, r2
 800e4c6:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800e4c8:	4b2b      	ldr	r3, [pc, #172]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e4ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e4cc:	f023 0220 	bic.w	r2, r3, #32
 800e4d0:	687b      	ldr	r3, [r7, #4]
 800e4d2:	699b      	ldr	r3, [r3, #24]
 800e4d4:	4928      	ldr	r1, [pc, #160]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e4d6:	4313      	orrs	r3, r2
 800e4d8:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800e4da:	4b27      	ldr	r3, [pc, #156]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e4dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e4de:	4a26      	ldr	r2, [pc, #152]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e4e0:	f023 0310 	bic.w	r3, r3, #16
 800e4e4:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e4e6:	4b24      	ldr	r3, [pc, #144]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e4e8:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800e4ea:	4b24      	ldr	r3, [pc, #144]	@ (800e57c <RCCEx_PLL2_Config+0x160>)
 800e4ec:	4013      	ands	r3, r2
 800e4ee:	687a      	ldr	r2, [r7, #4]
 800e4f0:	69d2      	ldr	r2, [r2, #28]
 800e4f2:	00d2      	lsls	r2, r2, #3
 800e4f4:	4920      	ldr	r1, [pc, #128]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e4f6:	4313      	orrs	r3, r2
 800e4f8:	63cb      	str	r3, [r1, #60]	@ 0x3c
 800e4fa:	4b1f      	ldr	r3, [pc, #124]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e4fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e4fe:	4a1e      	ldr	r2, [pc, #120]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e500:	f043 0310 	orr.w	r3, r3, #16
 800e504:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e506:	683b      	ldr	r3, [r7, #0]
 800e508:	2b00      	cmp	r3, #0
 800e50a:	d106      	bne.n	800e51a <RCCEx_PLL2_Config+0xfe>
 800e50c:	4b1a      	ldr	r3, [pc, #104]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e50e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e510:	4a19      	ldr	r2, [pc, #100]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e512:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800e516:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e518:	e00f      	b.n	800e53a <RCCEx_PLL2_Config+0x11e>
 800e51a:	683b      	ldr	r3, [r7, #0]
 800e51c:	2b01      	cmp	r3, #1
 800e51e:	d106      	bne.n	800e52e <RCCEx_PLL2_Config+0x112>
 800e520:	4b15      	ldr	r3, [pc, #84]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e522:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e524:	4a14      	ldr	r2, [pc, #80]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e526:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800e52a:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e52c:	e005      	b.n	800e53a <RCCEx_PLL2_Config+0x11e>
 800e52e:	4b12      	ldr	r3, [pc, #72]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e530:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e532:	4a11      	ldr	r2, [pc, #68]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e534:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800e538:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e53a:	4b0f      	ldr	r3, [pc, #60]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e53c:	681b      	ldr	r3, [r3, #0]
 800e53e:	4a0e      	ldr	r2, [pc, #56]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e540:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800e544:	6013      	str	r3, [r2, #0]
 800e546:	f7f6 fed3 	bl	80052f0 <HAL_GetTick>
 800e54a:	60b8      	str	r0, [r7, #8]
 800e54c:	e008      	b.n	800e560 <RCCEx_PLL2_Config+0x144>
 800e54e:	f7f6 fecf 	bl	80052f0 <HAL_GetTick>
 800e552:	4602      	mov	r2, r0
 800e554:	68bb      	ldr	r3, [r7, #8]
 800e556:	1ad3      	subs	r3, r2, r3
 800e558:	2b02      	cmp	r3, #2
 800e55a:	d901      	bls.n	800e560 <RCCEx_PLL2_Config+0x144>
 800e55c:	2303      	movs	r3, #3
 800e55e:	e006      	b.n	800e56e <RCCEx_PLL2_Config+0x152>
 800e560:	4b05      	ldr	r3, [pc, #20]	@ (800e578 <RCCEx_PLL2_Config+0x15c>)
 800e562:	681b      	ldr	r3, [r3, #0]
 800e564:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800e568:	2b00      	cmp	r3, #0
 800e56a:	d0f0      	beq.n	800e54e <RCCEx_PLL2_Config+0x132>
 800e56c:	7bfb      	ldrb	r3, [r7, #15]
 800e56e:	4618      	mov	r0, r3
 800e570:	3710      	adds	r7, #16
 800e572:	46bd      	mov	sp, r7
 800e574:	bd80      	pop	{r7, pc}
 800e576:	bf00      	nop
 800e578:	58024400 	.word	0x58024400
 800e57c:	ffff0007 	.word	0xffff0007

0800e580 <RCCEx_PLL3_Config>:
 800e580:	b580      	push	{r7, lr}
 800e582:	b084      	sub	sp, #16
 800e584:	af00      	add	r7, sp, #0
 800e586:	6078      	str	r0, [r7, #4]
 800e588:	6039      	str	r1, [r7, #0]
 800e58a:	2300      	movs	r3, #0
 800e58c:	73fb      	strb	r3, [r7, #15]
 800e58e:	4b53      	ldr	r3, [pc, #332]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e590:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e592:	f003 0303 	and.w	r3, r3, #3
 800e596:	2b03      	cmp	r3, #3
 800e598:	d101      	bne.n	800e59e <RCCEx_PLL3_Config+0x1e>
 800e59a:	2301      	movs	r3, #1
 800e59c:	e099      	b.n	800e6d2 <RCCEx_PLL3_Config+0x152>
 800e59e:	4b4f      	ldr	r3, [pc, #316]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e5a0:	681b      	ldr	r3, [r3, #0]
 800e5a2:	4a4e      	ldr	r2, [pc, #312]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e5a4:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800e5a8:	6013      	str	r3, [r2, #0]
 800e5aa:	f7f6 fea1 	bl	80052f0 <HAL_GetTick>
 800e5ae:	60b8      	str	r0, [r7, #8]
 800e5b0:	e008      	b.n	800e5c4 <RCCEx_PLL3_Config+0x44>
 800e5b2:	f7f6 fe9d 	bl	80052f0 <HAL_GetTick>
 800e5b6:	4602      	mov	r2, r0
 800e5b8:	68bb      	ldr	r3, [r7, #8]
 800e5ba:	1ad3      	subs	r3, r2, r3
 800e5bc:	2b02      	cmp	r3, #2
 800e5be:	d901      	bls.n	800e5c4 <RCCEx_PLL3_Config+0x44>
 800e5c0:	2303      	movs	r3, #3
 800e5c2:	e086      	b.n	800e6d2 <RCCEx_PLL3_Config+0x152>
 800e5c4:	4b45      	ldr	r3, [pc, #276]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e5c6:	681b      	ldr	r3, [r3, #0]
 800e5c8:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800e5cc:	2b00      	cmp	r3, #0
 800e5ce:	d1f0      	bne.n	800e5b2 <RCCEx_PLL3_Config+0x32>
 800e5d0:	4b42      	ldr	r3, [pc, #264]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e5d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e5d4:	f023 727c 	bic.w	r2, r3, #66060288	@ 0x3f00000
 800e5d8:	687b      	ldr	r3, [r7, #4]
 800e5da:	681b      	ldr	r3, [r3, #0]
 800e5dc:	051b      	lsls	r3, r3, #20
 800e5de:	493f      	ldr	r1, [pc, #252]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e5e0:	4313      	orrs	r3, r2
 800e5e2:	628b      	str	r3, [r1, #40]	@ 0x28
 800e5e4:	687b      	ldr	r3, [r7, #4]
 800e5e6:	685b      	ldr	r3, [r3, #4]
 800e5e8:	3b01      	subs	r3, #1
 800e5ea:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800e5ee:	687b      	ldr	r3, [r7, #4]
 800e5f0:	689b      	ldr	r3, [r3, #8]
 800e5f2:	3b01      	subs	r3, #1
 800e5f4:	025b      	lsls	r3, r3, #9
 800e5f6:	b29b      	uxth	r3, r3
 800e5f8:	431a      	orrs	r2, r3
 800e5fa:	687b      	ldr	r3, [r7, #4]
 800e5fc:	68db      	ldr	r3, [r3, #12]
 800e5fe:	3b01      	subs	r3, #1
 800e600:	041b      	lsls	r3, r3, #16
 800e602:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 800e606:	431a      	orrs	r2, r3
 800e608:	687b      	ldr	r3, [r7, #4]
 800e60a:	691b      	ldr	r3, [r3, #16]
 800e60c:	3b01      	subs	r3, #1
 800e60e:	061b      	lsls	r3, r3, #24
 800e610:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 800e614:	4931      	ldr	r1, [pc, #196]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e616:	4313      	orrs	r3, r2
 800e618:	640b      	str	r3, [r1, #64]	@ 0x40
 800e61a:	4b30      	ldr	r3, [pc, #192]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e61c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e61e:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 800e622:	687b      	ldr	r3, [r7, #4]
 800e624:	695b      	ldr	r3, [r3, #20]
 800e626:	492d      	ldr	r1, [pc, #180]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e628:	4313      	orrs	r3, r2
 800e62a:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800e62c:	4b2b      	ldr	r3, [pc, #172]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e62e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e630:	f423 7200 	bic.w	r2, r3, #512	@ 0x200
 800e634:	687b      	ldr	r3, [r7, #4]
 800e636:	699b      	ldr	r3, [r3, #24]
 800e638:	4928      	ldr	r1, [pc, #160]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e63a:	4313      	orrs	r3, r2
 800e63c:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800e63e:	4b27      	ldr	r3, [pc, #156]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e640:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e642:	4a26      	ldr	r2, [pc, #152]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e644:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800e648:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e64a:	4b24      	ldr	r3, [pc, #144]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e64c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800e64e:	4b24      	ldr	r3, [pc, #144]	@ (800e6e0 <RCCEx_PLL3_Config+0x160>)
 800e650:	4013      	ands	r3, r2
 800e652:	687a      	ldr	r2, [r7, #4]
 800e654:	69d2      	ldr	r2, [r2, #28]
 800e656:	00d2      	lsls	r2, r2, #3
 800e658:	4920      	ldr	r1, [pc, #128]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e65a:	4313      	orrs	r3, r2
 800e65c:	644b      	str	r3, [r1, #68]	@ 0x44
 800e65e:	4b1f      	ldr	r3, [pc, #124]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e660:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e662:	4a1e      	ldr	r2, [pc, #120]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e664:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800e668:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e66a:	683b      	ldr	r3, [r7, #0]
 800e66c:	2b00      	cmp	r3, #0
 800e66e:	d106      	bne.n	800e67e <RCCEx_PLL3_Config+0xfe>
 800e670:	4b1a      	ldr	r3, [pc, #104]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e672:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e674:	4a19      	ldr	r2, [pc, #100]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e676:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 800e67a:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e67c:	e00f      	b.n	800e69e <RCCEx_PLL3_Config+0x11e>
 800e67e:	683b      	ldr	r3, [r7, #0]
 800e680:	2b01      	cmp	r3, #1
 800e682:	d106      	bne.n	800e692 <RCCEx_PLL3_Config+0x112>
 800e684:	4b15      	ldr	r3, [pc, #84]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e686:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e688:	4a14      	ldr	r2, [pc, #80]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e68a:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800e68e:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e690:	e005      	b.n	800e69e <RCCEx_PLL3_Config+0x11e>
 800e692:	4b12      	ldr	r3, [pc, #72]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e694:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e696:	4a11      	ldr	r2, [pc, #68]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e698:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800e69c:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800e69e:	4b0f      	ldr	r3, [pc, #60]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e6a0:	681b      	ldr	r3, [r3, #0]
 800e6a2:	4a0e      	ldr	r2, [pc, #56]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e6a4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800e6a8:	6013      	str	r3, [r2, #0]
 800e6aa:	f7f6 fe21 	bl	80052f0 <HAL_GetTick>
 800e6ae:	60b8      	str	r0, [r7, #8]
 800e6b0:	e008      	b.n	800e6c4 <RCCEx_PLL3_Config+0x144>
 800e6b2:	f7f6 fe1d 	bl	80052f0 <HAL_GetTick>
 800e6b6:	4602      	mov	r2, r0
 800e6b8:	68bb      	ldr	r3, [r7, #8]
 800e6ba:	1ad3      	subs	r3, r2, r3
 800e6bc:	2b02      	cmp	r3, #2
 800e6be:	d901      	bls.n	800e6c4 <RCCEx_PLL3_Config+0x144>
 800e6c0:	2303      	movs	r3, #3
 800e6c2:	e006      	b.n	800e6d2 <RCCEx_PLL3_Config+0x152>
 800e6c4:	4b05      	ldr	r3, [pc, #20]	@ (800e6dc <RCCEx_PLL3_Config+0x15c>)
 800e6c6:	681b      	ldr	r3, [r3, #0]
 800e6c8:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800e6cc:	2b00      	cmp	r3, #0
 800e6ce:	d0f0      	beq.n	800e6b2 <RCCEx_PLL3_Config+0x132>
 800e6d0:	7bfb      	ldrb	r3, [r7, #15]
 800e6d2:	4618      	mov	r0, r3
 800e6d4:	3710      	adds	r7, #16
 800e6d6:	46bd      	mov	sp, r7
 800e6d8:	bd80      	pop	{r7, pc}
 800e6da:	bf00      	nop
 800e6dc:	58024400 	.word	0x58024400
 800e6e0:	ffff0007 	.word	0xffff0007

0800e6e4 <HAL_SPI_Init>:
 800e6e4:	b580      	push	{r7, lr}
 800e6e6:	b084      	sub	sp, #16
 800e6e8:	af00      	add	r7, sp, #0
 800e6ea:	6078      	str	r0, [r7, #4]
 800e6ec:	687b      	ldr	r3, [r7, #4]
 800e6ee:	2b00      	cmp	r3, #0
 800e6f0:	d101      	bne.n	800e6f6 <HAL_SPI_Init+0x12>
 800e6f2:	2301      	movs	r3, #1
 800e6f4:	e10f      	b.n	800e916 <HAL_SPI_Init+0x232>
 800e6f6:	687b      	ldr	r3, [r7, #4]
 800e6f8:	2200      	movs	r2, #0
 800e6fa:	629a      	str	r2, [r3, #40]	@ 0x28
 800e6fc:	687b      	ldr	r3, [r7, #4]
 800e6fe:	681b      	ldr	r3, [r3, #0]
 800e700:	4a87      	ldr	r2, [pc, #540]	@ (800e920 <HAL_SPI_Init+0x23c>)
 800e702:	4293      	cmp	r3, r2
 800e704:	d00f      	beq.n	800e726 <HAL_SPI_Init+0x42>
 800e706:	687b      	ldr	r3, [r7, #4]
 800e708:	681b      	ldr	r3, [r3, #0]
 800e70a:	4a86      	ldr	r2, [pc, #536]	@ (800e924 <HAL_SPI_Init+0x240>)
 800e70c:	4293      	cmp	r3, r2
 800e70e:	d00a      	beq.n	800e726 <HAL_SPI_Init+0x42>
 800e710:	687b      	ldr	r3, [r7, #4]
 800e712:	681b      	ldr	r3, [r3, #0]
 800e714:	4a84      	ldr	r2, [pc, #528]	@ (800e928 <HAL_SPI_Init+0x244>)
 800e716:	4293      	cmp	r3, r2
 800e718:	d005      	beq.n	800e726 <HAL_SPI_Init+0x42>
 800e71a:	687b      	ldr	r3, [r7, #4]
 800e71c:	68db      	ldr	r3, [r3, #12]
 800e71e:	2b0f      	cmp	r3, #15
 800e720:	d901      	bls.n	800e726 <HAL_SPI_Init+0x42>
 800e722:	2301      	movs	r3, #1
 800e724:	e0f7      	b.n	800e916 <HAL_SPI_Init+0x232>
 800e726:	6878      	ldr	r0, [r7, #4]
 800e728:	f000 f900 	bl	800e92c <SPI_GetPacketSize>
 800e72c:	60f8      	str	r0, [r7, #12]
 800e72e:	687b      	ldr	r3, [r7, #4]
 800e730:	681b      	ldr	r3, [r3, #0]
 800e732:	4a7b      	ldr	r2, [pc, #492]	@ (800e920 <HAL_SPI_Init+0x23c>)
 800e734:	4293      	cmp	r3, r2
 800e736:	d00c      	beq.n	800e752 <HAL_SPI_Init+0x6e>
 800e738:	687b      	ldr	r3, [r7, #4]
 800e73a:	681b      	ldr	r3, [r3, #0]
 800e73c:	4a79      	ldr	r2, [pc, #484]	@ (800e924 <HAL_SPI_Init+0x240>)
 800e73e:	4293      	cmp	r3, r2
 800e740:	d007      	beq.n	800e752 <HAL_SPI_Init+0x6e>
 800e742:	687b      	ldr	r3, [r7, #4]
 800e744:	681b      	ldr	r3, [r3, #0]
 800e746:	4a78      	ldr	r2, [pc, #480]	@ (800e928 <HAL_SPI_Init+0x244>)
 800e748:	4293      	cmp	r3, r2
 800e74a:	d002      	beq.n	800e752 <HAL_SPI_Init+0x6e>
 800e74c:	68fb      	ldr	r3, [r7, #12]
 800e74e:	2b08      	cmp	r3, #8
 800e750:	d811      	bhi.n	800e776 <HAL_SPI_Init+0x92>
 800e752:	687b      	ldr	r3, [r7, #4]
 800e754:	681b      	ldr	r3, [r3, #0]
 800e756:	4a72      	ldr	r2, [pc, #456]	@ (800e920 <HAL_SPI_Init+0x23c>)
 800e758:	4293      	cmp	r3, r2
 800e75a:	d009      	beq.n	800e770 <HAL_SPI_Init+0x8c>
 800e75c:	687b      	ldr	r3, [r7, #4]
 800e75e:	681b      	ldr	r3, [r3, #0]
 800e760:	4a70      	ldr	r2, [pc, #448]	@ (800e924 <HAL_SPI_Init+0x240>)
 800e762:	4293      	cmp	r3, r2
 800e764:	d004      	beq.n	800e770 <HAL_SPI_Init+0x8c>
 800e766:	687b      	ldr	r3, [r7, #4]
 800e768:	681b      	ldr	r3, [r3, #0]
 800e76a:	4a6f      	ldr	r2, [pc, #444]	@ (800e928 <HAL_SPI_Init+0x244>)
 800e76c:	4293      	cmp	r3, r2
 800e76e:	d104      	bne.n	800e77a <HAL_SPI_Init+0x96>
 800e770:	68fb      	ldr	r3, [r7, #12]
 800e772:	2b10      	cmp	r3, #16
 800e774:	d901      	bls.n	800e77a <HAL_SPI_Init+0x96>
 800e776:	2301      	movs	r3, #1
 800e778:	e0cd      	b.n	800e916 <HAL_SPI_Init+0x232>
 800e77a:	687b      	ldr	r3, [r7, #4]
 800e77c:	f893 3081 	ldrb.w	r3, [r3, #129]	@ 0x81
 800e780:	b2db      	uxtb	r3, r3
 800e782:	2b00      	cmp	r3, #0
 800e784:	d106      	bne.n	800e794 <HAL_SPI_Init+0xb0>
 800e786:	687b      	ldr	r3, [r7, #4]
 800e788:	2200      	movs	r2, #0
 800e78a:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 800e78e:	6878      	ldr	r0, [r7, #4]
 800e790:	f7f3 fb16 	bl	8001dc0 <HAL_SPI_MspInit>
 800e794:	687b      	ldr	r3, [r7, #4]
 800e796:	2202      	movs	r2, #2
 800e798:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
 800e79c:	687b      	ldr	r3, [r7, #4]
 800e79e:	681b      	ldr	r3, [r3, #0]
 800e7a0:	681a      	ldr	r2, [r3, #0]
 800e7a2:	687b      	ldr	r3, [r7, #4]
 800e7a4:	681b      	ldr	r3, [r3, #0]
 800e7a6:	f022 0201 	bic.w	r2, r2, #1
 800e7aa:	601a      	str	r2, [r3, #0]
 800e7ac:	687b      	ldr	r3, [r7, #4]
 800e7ae:	681b      	ldr	r3, [r3, #0]
 800e7b0:	689b      	ldr	r3, [r3, #8]
 800e7b2:	f403 13f8 	and.w	r3, r3, #2031616	@ 0x1f0000
 800e7b6:	60bb      	str	r3, [r7, #8]
 800e7b8:	687b      	ldr	r3, [r7, #4]
 800e7ba:	699b      	ldr	r3, [r3, #24]
 800e7bc:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800e7c0:	d119      	bne.n	800e7f6 <HAL_SPI_Init+0x112>
 800e7c2:	687b      	ldr	r3, [r7, #4]
 800e7c4:	685b      	ldr	r3, [r3, #4]
 800e7c6:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800e7ca:	d103      	bne.n	800e7d4 <HAL_SPI_Init+0xf0>
 800e7cc:	687b      	ldr	r3, [r7, #4]
 800e7ce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e7d0:	2b00      	cmp	r3, #0
 800e7d2:	d008      	beq.n	800e7e6 <HAL_SPI_Init+0x102>
 800e7d4:	687b      	ldr	r3, [r7, #4]
 800e7d6:	685b      	ldr	r3, [r3, #4]
 800e7d8:	2b00      	cmp	r3, #0
 800e7da:	d10c      	bne.n	800e7f6 <HAL_SPI_Init+0x112>
 800e7dc:	687b      	ldr	r3, [r7, #4]
 800e7de:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e7e0:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800e7e4:	d107      	bne.n	800e7f6 <HAL_SPI_Init+0x112>
 800e7e6:	687b      	ldr	r3, [r7, #4]
 800e7e8:	681b      	ldr	r3, [r3, #0]
 800e7ea:	681a      	ldr	r2, [r3, #0]
 800e7ec:	687b      	ldr	r3, [r7, #4]
 800e7ee:	681b      	ldr	r3, [r3, #0]
 800e7f0:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800e7f4:	601a      	str	r2, [r3, #0]
 800e7f6:	687b      	ldr	r3, [r7, #4]
 800e7f8:	685b      	ldr	r3, [r3, #4]
 800e7fa:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800e7fe:	2b00      	cmp	r3, #0
 800e800:	d00f      	beq.n	800e822 <HAL_SPI_Init+0x13e>
 800e802:	687b      	ldr	r3, [r7, #4]
 800e804:	68db      	ldr	r3, [r3, #12]
 800e806:	2b06      	cmp	r3, #6
 800e808:	d90b      	bls.n	800e822 <HAL_SPI_Init+0x13e>
 800e80a:	687b      	ldr	r3, [r7, #4]
 800e80c:	681b      	ldr	r3, [r3, #0]
 800e80e:	681b      	ldr	r3, [r3, #0]
 800e810:	f423 7180 	bic.w	r1, r3, #256	@ 0x100
 800e814:	687b      	ldr	r3, [r7, #4]
 800e816:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800e818:	687b      	ldr	r3, [r7, #4]
 800e81a:	681b      	ldr	r3, [r3, #0]
 800e81c:	430a      	orrs	r2, r1
 800e81e:	601a      	str	r2, [r3, #0]
 800e820:	e007      	b.n	800e832 <HAL_SPI_Init+0x14e>
 800e822:	687b      	ldr	r3, [r7, #4]
 800e824:	681b      	ldr	r3, [r3, #0]
 800e826:	681a      	ldr	r2, [r3, #0]
 800e828:	687b      	ldr	r3, [r7, #4]
 800e82a:	681b      	ldr	r3, [r3, #0]
 800e82c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800e830:	601a      	str	r2, [r3, #0]
 800e832:	687b      	ldr	r3, [r7, #4]
 800e834:	69da      	ldr	r2, [r3, #28]
 800e836:	687b      	ldr	r3, [r7, #4]
 800e838:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e83a:	431a      	orrs	r2, r3
 800e83c:	68bb      	ldr	r3, [r7, #8]
 800e83e:	431a      	orrs	r2, r3
 800e840:	687b      	ldr	r3, [r7, #4]
 800e842:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e844:	ea42 0103 	orr.w	r1, r2, r3
 800e848:	687b      	ldr	r3, [r7, #4]
 800e84a:	68da      	ldr	r2, [r3, #12]
 800e84c:	687b      	ldr	r3, [r7, #4]
 800e84e:	681b      	ldr	r3, [r3, #0]
 800e850:	430a      	orrs	r2, r1
 800e852:	609a      	str	r2, [r3, #8]
 800e854:	687b      	ldr	r3, [r7, #4]
 800e856:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800e858:	687b      	ldr	r3, [r7, #4]
 800e85a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e85c:	431a      	orrs	r2, r3
 800e85e:	687b      	ldr	r3, [r7, #4]
 800e860:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e862:	431a      	orrs	r2, r3
 800e864:	687b      	ldr	r3, [r7, #4]
 800e866:	699b      	ldr	r3, [r3, #24]
 800e868:	431a      	orrs	r2, r3
 800e86a:	687b      	ldr	r3, [r7, #4]
 800e86c:	691b      	ldr	r3, [r3, #16]
 800e86e:	431a      	orrs	r2, r3
 800e870:	687b      	ldr	r3, [r7, #4]
 800e872:	695b      	ldr	r3, [r3, #20]
 800e874:	431a      	orrs	r2, r3
 800e876:	687b      	ldr	r3, [r7, #4]
 800e878:	6a1b      	ldr	r3, [r3, #32]
 800e87a:	431a      	orrs	r2, r3
 800e87c:	687b      	ldr	r3, [r7, #4]
 800e87e:	685b      	ldr	r3, [r3, #4]
 800e880:	431a      	orrs	r2, r3
 800e882:	687b      	ldr	r3, [r7, #4]
 800e884:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e886:	431a      	orrs	r2, r3
 800e888:	687b      	ldr	r3, [r7, #4]
 800e88a:	689b      	ldr	r3, [r3, #8]
 800e88c:	431a      	orrs	r2, r3
 800e88e:	687b      	ldr	r3, [r7, #4]
 800e890:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800e892:	ea42 0103 	orr.w	r1, r2, r3
 800e896:	687b      	ldr	r3, [r7, #4]
 800e898:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 800e89a:	687b      	ldr	r3, [r7, #4]
 800e89c:	681b      	ldr	r3, [r3, #0]
 800e89e:	430a      	orrs	r2, r1
 800e8a0:	60da      	str	r2, [r3, #12]
 800e8a2:	687b      	ldr	r3, [r7, #4]
 800e8a4:	685b      	ldr	r3, [r3, #4]
 800e8a6:	2b00      	cmp	r3, #0
 800e8a8:	d113      	bne.n	800e8d2 <HAL_SPI_Init+0x1ee>
 800e8aa:	687b      	ldr	r3, [r7, #4]
 800e8ac:	681b      	ldr	r3, [r3, #0]
 800e8ae:	689b      	ldr	r3, [r3, #8]
 800e8b0:	f423 52c0 	bic.w	r2, r3, #6144	@ 0x1800
 800e8b4:	687b      	ldr	r3, [r7, #4]
 800e8b6:	681b      	ldr	r3, [r3, #0]
 800e8b8:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800e8bc:	609a      	str	r2, [r3, #8]
 800e8be:	687b      	ldr	r3, [r7, #4]
 800e8c0:	681b      	ldr	r3, [r3, #0]
 800e8c2:	689b      	ldr	r3, [r3, #8]
 800e8c4:	f423 62c0 	bic.w	r2, r3, #1536	@ 0x600
 800e8c8:	687b      	ldr	r3, [r7, #4]
 800e8ca:	681b      	ldr	r3, [r3, #0]
 800e8cc:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800e8d0:	609a      	str	r2, [r3, #8]
 800e8d2:	687b      	ldr	r3, [r7, #4]
 800e8d4:	681b      	ldr	r3, [r3, #0]
 800e8d6:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800e8d8:	687b      	ldr	r3, [r7, #4]
 800e8da:	681b      	ldr	r3, [r3, #0]
 800e8dc:	f022 0201 	bic.w	r2, r2, #1
 800e8e0:	651a      	str	r2, [r3, #80]	@ 0x50
 800e8e2:	687b      	ldr	r3, [r7, #4]
 800e8e4:	685b      	ldr	r3, [r3, #4]
 800e8e6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800e8ea:	2b00      	cmp	r3, #0
 800e8ec:	d00a      	beq.n	800e904 <HAL_SPI_Init+0x220>
 800e8ee:	687b      	ldr	r3, [r7, #4]
 800e8f0:	681b      	ldr	r3, [r3, #0]
 800e8f2:	68db      	ldr	r3, [r3, #12]
 800e8f4:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 800e8f8:	687b      	ldr	r3, [r7, #4]
 800e8fa:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800e8fc:	687b      	ldr	r3, [r7, #4]
 800e8fe:	681b      	ldr	r3, [r3, #0]
 800e900:	430a      	orrs	r2, r1
 800e902:	60da      	str	r2, [r3, #12]
 800e904:	687b      	ldr	r3, [r7, #4]
 800e906:	2200      	movs	r2, #0
 800e908:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800e90c:	687b      	ldr	r3, [r7, #4]
 800e90e:	2201      	movs	r2, #1
 800e910:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
 800e914:	2300      	movs	r3, #0
 800e916:	4618      	mov	r0, r3
 800e918:	3710      	adds	r7, #16
 800e91a:	46bd      	mov	sp, r7
 800e91c:	bd80      	pop	{r7, pc}
 800e91e:	bf00      	nop
 800e920:	40013000 	.word	0x40013000
 800e924:	40003800 	.word	0x40003800
 800e928:	40003c00 	.word	0x40003c00

0800e92c <SPI_GetPacketSize>:
 800e92c:	b480      	push	{r7}
 800e92e:	b085      	sub	sp, #20
 800e930:	af00      	add	r7, sp, #0
 800e932:	6078      	str	r0, [r7, #4]
 800e934:	687b      	ldr	r3, [r7, #4]
 800e936:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e938:	095b      	lsrs	r3, r3, #5
 800e93a:	3301      	adds	r3, #1
 800e93c:	60fb      	str	r3, [r7, #12]
 800e93e:	687b      	ldr	r3, [r7, #4]
 800e940:	68db      	ldr	r3, [r3, #12]
 800e942:	3301      	adds	r3, #1
 800e944:	60bb      	str	r3, [r7, #8]
 800e946:	68bb      	ldr	r3, [r7, #8]
 800e948:	3307      	adds	r3, #7
 800e94a:	08db      	lsrs	r3, r3, #3
 800e94c:	60bb      	str	r3, [r7, #8]
 800e94e:	68bb      	ldr	r3, [r7, #8]
 800e950:	68fa      	ldr	r2, [r7, #12]
 800e952:	fb02 f303 	mul.w	r3, r2, r3
 800e956:	4618      	mov	r0, r3
 800e958:	3714      	adds	r7, #20
 800e95a:	46bd      	mov	sp, r7
 800e95c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e960:	4770      	bx	lr

0800e962 <HAL_TIM_Base_Init>:
 800e962:	b580      	push	{r7, lr}
 800e964:	b082      	sub	sp, #8
 800e966:	af00      	add	r7, sp, #0
 800e968:	6078      	str	r0, [r7, #4]
 800e96a:	687b      	ldr	r3, [r7, #4]
 800e96c:	2b00      	cmp	r3, #0
 800e96e:	d101      	bne.n	800e974 <HAL_TIM_Base_Init+0x12>
 800e970:	2301      	movs	r3, #1
 800e972:	e049      	b.n	800ea08 <HAL_TIM_Base_Init+0xa6>
 800e974:	687b      	ldr	r3, [r7, #4]
 800e976:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800e97a:	b2db      	uxtb	r3, r3
 800e97c:	2b00      	cmp	r3, #0
 800e97e:	d106      	bne.n	800e98e <HAL_TIM_Base_Init+0x2c>
 800e980:	687b      	ldr	r3, [r7, #4]
 800e982:	2200      	movs	r2, #0
 800e984:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800e988:	6878      	ldr	r0, [r7, #4]
 800e98a:	f7f3 fb21 	bl	8001fd0 <HAL_TIM_Base_MspInit>
 800e98e:	687b      	ldr	r3, [r7, #4]
 800e990:	2202      	movs	r2, #2
 800e992:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e996:	687b      	ldr	r3, [r7, #4]
 800e998:	681a      	ldr	r2, [r3, #0]
 800e99a:	687b      	ldr	r3, [r7, #4]
 800e99c:	3304      	adds	r3, #4
 800e99e:	4619      	mov	r1, r3
 800e9a0:	4610      	mov	r0, r2
 800e9a2:	f001 f9a3 	bl	800fcec <TIM_Base_SetConfig>
 800e9a6:	687b      	ldr	r3, [r7, #4]
 800e9a8:	2201      	movs	r2, #1
 800e9aa:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 800e9ae:	687b      	ldr	r3, [r7, #4]
 800e9b0:	2201      	movs	r2, #1
 800e9b2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e9b6:	687b      	ldr	r3, [r7, #4]
 800e9b8:	2201      	movs	r2, #1
 800e9ba:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800e9be:	687b      	ldr	r3, [r7, #4]
 800e9c0:	2201      	movs	r2, #1
 800e9c2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800e9c6:	687b      	ldr	r3, [r7, #4]
 800e9c8:	2201      	movs	r2, #1
 800e9ca:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800e9ce:	687b      	ldr	r3, [r7, #4]
 800e9d0:	2201      	movs	r2, #1
 800e9d2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800e9d6:	687b      	ldr	r3, [r7, #4]
 800e9d8:	2201      	movs	r2, #1
 800e9da:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800e9de:	687b      	ldr	r3, [r7, #4]
 800e9e0:	2201      	movs	r2, #1
 800e9e2:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800e9e6:	687b      	ldr	r3, [r7, #4]
 800e9e8:	2201      	movs	r2, #1
 800e9ea:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800e9ee:	687b      	ldr	r3, [r7, #4]
 800e9f0:	2201      	movs	r2, #1
 800e9f2:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800e9f6:	687b      	ldr	r3, [r7, #4]
 800e9f8:	2201      	movs	r2, #1
 800e9fa:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 800e9fe:	687b      	ldr	r3, [r7, #4]
 800ea00:	2201      	movs	r2, #1
 800ea02:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ea06:	2300      	movs	r3, #0
 800ea08:	4618      	mov	r0, r3
 800ea0a:	3708      	adds	r7, #8
 800ea0c:	46bd      	mov	sp, r7
 800ea0e:	bd80      	pop	{r7, pc}

0800ea10 <HAL_TIM_Base_Start>:
 800ea10:	b480      	push	{r7}
 800ea12:	b085      	sub	sp, #20
 800ea14:	af00      	add	r7, sp, #0
 800ea16:	6078      	str	r0, [r7, #4]
 800ea18:	687b      	ldr	r3, [r7, #4]
 800ea1a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800ea1e:	b2db      	uxtb	r3, r3
 800ea20:	2b01      	cmp	r3, #1
 800ea22:	d001      	beq.n	800ea28 <HAL_TIM_Base_Start+0x18>
 800ea24:	2301      	movs	r3, #1
 800ea26:	e056      	b.n	800ead6 <HAL_TIM_Base_Start+0xc6>
 800ea28:	687b      	ldr	r3, [r7, #4]
 800ea2a:	2202      	movs	r2, #2
 800ea2c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ea30:	687b      	ldr	r3, [r7, #4]
 800ea32:	681b      	ldr	r3, [r3, #0]
 800ea34:	4a2b      	ldr	r2, [pc, #172]	@ (800eae4 <HAL_TIM_Base_Start+0xd4>)
 800ea36:	4293      	cmp	r3, r2
 800ea38:	d02c      	beq.n	800ea94 <HAL_TIM_Base_Start+0x84>
 800ea3a:	687b      	ldr	r3, [r7, #4]
 800ea3c:	681b      	ldr	r3, [r3, #0]
 800ea3e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800ea42:	d027      	beq.n	800ea94 <HAL_TIM_Base_Start+0x84>
 800ea44:	687b      	ldr	r3, [r7, #4]
 800ea46:	681b      	ldr	r3, [r3, #0]
 800ea48:	4a27      	ldr	r2, [pc, #156]	@ (800eae8 <HAL_TIM_Base_Start+0xd8>)
 800ea4a:	4293      	cmp	r3, r2
 800ea4c:	d022      	beq.n	800ea94 <HAL_TIM_Base_Start+0x84>
 800ea4e:	687b      	ldr	r3, [r7, #4]
 800ea50:	681b      	ldr	r3, [r3, #0]
 800ea52:	4a26      	ldr	r2, [pc, #152]	@ (800eaec <HAL_TIM_Base_Start+0xdc>)
 800ea54:	4293      	cmp	r3, r2
 800ea56:	d01d      	beq.n	800ea94 <HAL_TIM_Base_Start+0x84>
 800ea58:	687b      	ldr	r3, [r7, #4]
 800ea5a:	681b      	ldr	r3, [r3, #0]
 800ea5c:	4a24      	ldr	r2, [pc, #144]	@ (800eaf0 <HAL_TIM_Base_Start+0xe0>)
 800ea5e:	4293      	cmp	r3, r2
 800ea60:	d018      	beq.n	800ea94 <HAL_TIM_Base_Start+0x84>
 800ea62:	687b      	ldr	r3, [r7, #4]
 800ea64:	681b      	ldr	r3, [r3, #0]
 800ea66:	4a23      	ldr	r2, [pc, #140]	@ (800eaf4 <HAL_TIM_Base_Start+0xe4>)
 800ea68:	4293      	cmp	r3, r2
 800ea6a:	d013      	beq.n	800ea94 <HAL_TIM_Base_Start+0x84>
 800ea6c:	687b      	ldr	r3, [r7, #4]
 800ea6e:	681b      	ldr	r3, [r3, #0]
 800ea70:	4a21      	ldr	r2, [pc, #132]	@ (800eaf8 <HAL_TIM_Base_Start+0xe8>)
 800ea72:	4293      	cmp	r3, r2
 800ea74:	d00e      	beq.n	800ea94 <HAL_TIM_Base_Start+0x84>
 800ea76:	687b      	ldr	r3, [r7, #4]
 800ea78:	681b      	ldr	r3, [r3, #0]
 800ea7a:	4a20      	ldr	r2, [pc, #128]	@ (800eafc <HAL_TIM_Base_Start+0xec>)
 800ea7c:	4293      	cmp	r3, r2
 800ea7e:	d009      	beq.n	800ea94 <HAL_TIM_Base_Start+0x84>
 800ea80:	687b      	ldr	r3, [r7, #4]
 800ea82:	681b      	ldr	r3, [r3, #0]
 800ea84:	4a1e      	ldr	r2, [pc, #120]	@ (800eb00 <HAL_TIM_Base_Start+0xf0>)
 800ea86:	4293      	cmp	r3, r2
 800ea88:	d004      	beq.n	800ea94 <HAL_TIM_Base_Start+0x84>
 800ea8a:	687b      	ldr	r3, [r7, #4]
 800ea8c:	681b      	ldr	r3, [r3, #0]
 800ea8e:	4a1d      	ldr	r2, [pc, #116]	@ (800eb04 <HAL_TIM_Base_Start+0xf4>)
 800ea90:	4293      	cmp	r3, r2
 800ea92:	d115      	bne.n	800eac0 <HAL_TIM_Base_Start+0xb0>
 800ea94:	687b      	ldr	r3, [r7, #4]
 800ea96:	681b      	ldr	r3, [r3, #0]
 800ea98:	689a      	ldr	r2, [r3, #8]
 800ea9a:	4b1b      	ldr	r3, [pc, #108]	@ (800eb08 <HAL_TIM_Base_Start+0xf8>)
 800ea9c:	4013      	ands	r3, r2
 800ea9e:	60fb      	str	r3, [r7, #12]
 800eaa0:	68fb      	ldr	r3, [r7, #12]
 800eaa2:	2b06      	cmp	r3, #6
 800eaa4:	d015      	beq.n	800ead2 <HAL_TIM_Base_Start+0xc2>
 800eaa6:	68fb      	ldr	r3, [r7, #12]
 800eaa8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800eaac:	d011      	beq.n	800ead2 <HAL_TIM_Base_Start+0xc2>
 800eaae:	687b      	ldr	r3, [r7, #4]
 800eab0:	681b      	ldr	r3, [r3, #0]
 800eab2:	681a      	ldr	r2, [r3, #0]
 800eab4:	687b      	ldr	r3, [r7, #4]
 800eab6:	681b      	ldr	r3, [r3, #0]
 800eab8:	f042 0201 	orr.w	r2, r2, #1
 800eabc:	601a      	str	r2, [r3, #0]
 800eabe:	e008      	b.n	800ead2 <HAL_TIM_Base_Start+0xc2>
 800eac0:	687b      	ldr	r3, [r7, #4]
 800eac2:	681b      	ldr	r3, [r3, #0]
 800eac4:	681a      	ldr	r2, [r3, #0]
 800eac6:	687b      	ldr	r3, [r7, #4]
 800eac8:	681b      	ldr	r3, [r3, #0]
 800eaca:	f042 0201 	orr.w	r2, r2, #1
 800eace:	601a      	str	r2, [r3, #0]
 800ead0:	e000      	b.n	800ead4 <HAL_TIM_Base_Start+0xc4>
 800ead2:	bf00      	nop
 800ead4:	2300      	movs	r3, #0
 800ead6:	4618      	mov	r0, r3
 800ead8:	3714      	adds	r7, #20
 800eada:	46bd      	mov	sp, r7
 800eadc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eae0:	4770      	bx	lr
 800eae2:	bf00      	nop
 800eae4:	40010000 	.word	0x40010000
 800eae8:	40000400 	.word	0x40000400
 800eaec:	40000800 	.word	0x40000800
 800eaf0:	40000c00 	.word	0x40000c00
 800eaf4:	40010400 	.word	0x40010400
 800eaf8:	40001800 	.word	0x40001800
 800eafc:	40014000 	.word	0x40014000
 800eb00:	4000e000 	.word	0x4000e000
 800eb04:	4000e400 	.word	0x4000e400
 800eb08:	00010007 	.word	0x00010007

0800eb0c <HAL_TIM_Base_Start_IT>:
 800eb0c:	b480      	push	{r7}
 800eb0e:	b085      	sub	sp, #20
 800eb10:	af00      	add	r7, sp, #0
 800eb12:	6078      	str	r0, [r7, #4]
 800eb14:	687b      	ldr	r3, [r7, #4]
 800eb16:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800eb1a:	b2db      	uxtb	r3, r3
 800eb1c:	2b01      	cmp	r3, #1
 800eb1e:	d001      	beq.n	800eb24 <HAL_TIM_Base_Start_IT+0x18>
 800eb20:	2301      	movs	r3, #1
 800eb22:	e05e      	b.n	800ebe2 <HAL_TIM_Base_Start_IT+0xd6>
 800eb24:	687b      	ldr	r3, [r7, #4]
 800eb26:	2202      	movs	r2, #2
 800eb28:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800eb2c:	687b      	ldr	r3, [r7, #4]
 800eb2e:	681b      	ldr	r3, [r3, #0]
 800eb30:	68da      	ldr	r2, [r3, #12]
 800eb32:	687b      	ldr	r3, [r7, #4]
 800eb34:	681b      	ldr	r3, [r3, #0]
 800eb36:	f042 0201 	orr.w	r2, r2, #1
 800eb3a:	60da      	str	r2, [r3, #12]
 800eb3c:	687b      	ldr	r3, [r7, #4]
 800eb3e:	681b      	ldr	r3, [r3, #0]
 800eb40:	4a2b      	ldr	r2, [pc, #172]	@ (800ebf0 <HAL_TIM_Base_Start_IT+0xe4>)
 800eb42:	4293      	cmp	r3, r2
 800eb44:	d02c      	beq.n	800eba0 <HAL_TIM_Base_Start_IT+0x94>
 800eb46:	687b      	ldr	r3, [r7, #4]
 800eb48:	681b      	ldr	r3, [r3, #0]
 800eb4a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800eb4e:	d027      	beq.n	800eba0 <HAL_TIM_Base_Start_IT+0x94>
 800eb50:	687b      	ldr	r3, [r7, #4]
 800eb52:	681b      	ldr	r3, [r3, #0]
 800eb54:	4a27      	ldr	r2, [pc, #156]	@ (800ebf4 <HAL_TIM_Base_Start_IT+0xe8>)
 800eb56:	4293      	cmp	r3, r2
 800eb58:	d022      	beq.n	800eba0 <HAL_TIM_Base_Start_IT+0x94>
 800eb5a:	687b      	ldr	r3, [r7, #4]
 800eb5c:	681b      	ldr	r3, [r3, #0]
 800eb5e:	4a26      	ldr	r2, [pc, #152]	@ (800ebf8 <HAL_TIM_Base_Start_IT+0xec>)
 800eb60:	4293      	cmp	r3, r2
 800eb62:	d01d      	beq.n	800eba0 <HAL_TIM_Base_Start_IT+0x94>
 800eb64:	687b      	ldr	r3, [r7, #4]
 800eb66:	681b      	ldr	r3, [r3, #0]
 800eb68:	4a24      	ldr	r2, [pc, #144]	@ (800ebfc <HAL_TIM_Base_Start_IT+0xf0>)
 800eb6a:	4293      	cmp	r3, r2
 800eb6c:	d018      	beq.n	800eba0 <HAL_TIM_Base_Start_IT+0x94>
 800eb6e:	687b      	ldr	r3, [r7, #4]
 800eb70:	681b      	ldr	r3, [r3, #0]
 800eb72:	4a23      	ldr	r2, [pc, #140]	@ (800ec00 <HAL_TIM_Base_Start_IT+0xf4>)
 800eb74:	4293      	cmp	r3, r2
 800eb76:	d013      	beq.n	800eba0 <HAL_TIM_Base_Start_IT+0x94>
 800eb78:	687b      	ldr	r3, [r7, #4]
 800eb7a:	681b      	ldr	r3, [r3, #0]
 800eb7c:	4a21      	ldr	r2, [pc, #132]	@ (800ec04 <HAL_TIM_Base_Start_IT+0xf8>)
 800eb7e:	4293      	cmp	r3, r2
 800eb80:	d00e      	beq.n	800eba0 <HAL_TIM_Base_Start_IT+0x94>
 800eb82:	687b      	ldr	r3, [r7, #4]
 800eb84:	681b      	ldr	r3, [r3, #0]
 800eb86:	4a20      	ldr	r2, [pc, #128]	@ (800ec08 <HAL_TIM_Base_Start_IT+0xfc>)
 800eb88:	4293      	cmp	r3, r2
 800eb8a:	d009      	beq.n	800eba0 <HAL_TIM_Base_Start_IT+0x94>
 800eb8c:	687b      	ldr	r3, [r7, #4]
 800eb8e:	681b      	ldr	r3, [r3, #0]
 800eb90:	4a1e      	ldr	r2, [pc, #120]	@ (800ec0c <HAL_TIM_Base_Start_IT+0x100>)
 800eb92:	4293      	cmp	r3, r2
 800eb94:	d004      	beq.n	800eba0 <HAL_TIM_Base_Start_IT+0x94>
 800eb96:	687b      	ldr	r3, [r7, #4]
 800eb98:	681b      	ldr	r3, [r3, #0]
 800eb9a:	4a1d      	ldr	r2, [pc, #116]	@ (800ec10 <HAL_TIM_Base_Start_IT+0x104>)
 800eb9c:	4293      	cmp	r3, r2
 800eb9e:	d115      	bne.n	800ebcc <HAL_TIM_Base_Start_IT+0xc0>
 800eba0:	687b      	ldr	r3, [r7, #4]
 800eba2:	681b      	ldr	r3, [r3, #0]
 800eba4:	689a      	ldr	r2, [r3, #8]
 800eba6:	4b1b      	ldr	r3, [pc, #108]	@ (800ec14 <HAL_TIM_Base_Start_IT+0x108>)
 800eba8:	4013      	ands	r3, r2
 800ebaa:	60fb      	str	r3, [r7, #12]
 800ebac:	68fb      	ldr	r3, [r7, #12]
 800ebae:	2b06      	cmp	r3, #6
 800ebb0:	d015      	beq.n	800ebde <HAL_TIM_Base_Start_IT+0xd2>
 800ebb2:	68fb      	ldr	r3, [r7, #12]
 800ebb4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800ebb8:	d011      	beq.n	800ebde <HAL_TIM_Base_Start_IT+0xd2>
 800ebba:	687b      	ldr	r3, [r7, #4]
 800ebbc:	681b      	ldr	r3, [r3, #0]
 800ebbe:	681a      	ldr	r2, [r3, #0]
 800ebc0:	687b      	ldr	r3, [r7, #4]
 800ebc2:	681b      	ldr	r3, [r3, #0]
 800ebc4:	f042 0201 	orr.w	r2, r2, #1
 800ebc8:	601a      	str	r2, [r3, #0]
 800ebca:	e008      	b.n	800ebde <HAL_TIM_Base_Start_IT+0xd2>
 800ebcc:	687b      	ldr	r3, [r7, #4]
 800ebce:	681b      	ldr	r3, [r3, #0]
 800ebd0:	681a      	ldr	r2, [r3, #0]
 800ebd2:	687b      	ldr	r3, [r7, #4]
 800ebd4:	681b      	ldr	r3, [r3, #0]
 800ebd6:	f042 0201 	orr.w	r2, r2, #1
 800ebda:	601a      	str	r2, [r3, #0]
 800ebdc:	e000      	b.n	800ebe0 <HAL_TIM_Base_Start_IT+0xd4>
 800ebde:	bf00      	nop
 800ebe0:	2300      	movs	r3, #0
 800ebe2:	4618      	mov	r0, r3
 800ebe4:	3714      	adds	r7, #20
 800ebe6:	46bd      	mov	sp, r7
 800ebe8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ebec:	4770      	bx	lr
 800ebee:	bf00      	nop
 800ebf0:	40010000 	.word	0x40010000
 800ebf4:	40000400 	.word	0x40000400
 800ebf8:	40000800 	.word	0x40000800
 800ebfc:	40000c00 	.word	0x40000c00
 800ec00:	40010400 	.word	0x40010400
 800ec04:	40001800 	.word	0x40001800
 800ec08:	40014000 	.word	0x40014000
 800ec0c:	4000e000 	.word	0x4000e000
 800ec10:	4000e400 	.word	0x4000e400
 800ec14:	00010007 	.word	0x00010007

0800ec18 <HAL_TIM_PWM_Init>:
 800ec18:	b580      	push	{r7, lr}
 800ec1a:	b082      	sub	sp, #8
 800ec1c:	af00      	add	r7, sp, #0
 800ec1e:	6078      	str	r0, [r7, #4]
 800ec20:	687b      	ldr	r3, [r7, #4]
 800ec22:	2b00      	cmp	r3, #0
 800ec24:	d101      	bne.n	800ec2a <HAL_TIM_PWM_Init+0x12>
 800ec26:	2301      	movs	r3, #1
 800ec28:	e049      	b.n	800ecbe <HAL_TIM_PWM_Init+0xa6>
 800ec2a:	687b      	ldr	r3, [r7, #4]
 800ec2c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800ec30:	b2db      	uxtb	r3, r3
 800ec32:	2b00      	cmp	r3, #0
 800ec34:	d106      	bne.n	800ec44 <HAL_TIM_PWM_Init+0x2c>
 800ec36:	687b      	ldr	r3, [r7, #4]
 800ec38:	2200      	movs	r2, #0
 800ec3a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800ec3e:	6878      	ldr	r0, [r7, #4]
 800ec40:	f000 f841 	bl	800ecc6 <HAL_TIM_PWM_MspInit>
 800ec44:	687b      	ldr	r3, [r7, #4]
 800ec46:	2202      	movs	r2, #2
 800ec48:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ec4c:	687b      	ldr	r3, [r7, #4]
 800ec4e:	681a      	ldr	r2, [r3, #0]
 800ec50:	687b      	ldr	r3, [r7, #4]
 800ec52:	3304      	adds	r3, #4
 800ec54:	4619      	mov	r1, r3
 800ec56:	4610      	mov	r0, r2
 800ec58:	f001 f848 	bl	800fcec <TIM_Base_SetConfig>
 800ec5c:	687b      	ldr	r3, [r7, #4]
 800ec5e:	2201      	movs	r2, #1
 800ec60:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 800ec64:	687b      	ldr	r3, [r7, #4]
 800ec66:	2201      	movs	r2, #1
 800ec68:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800ec6c:	687b      	ldr	r3, [r7, #4]
 800ec6e:	2201      	movs	r2, #1
 800ec70:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800ec74:	687b      	ldr	r3, [r7, #4]
 800ec76:	2201      	movs	r2, #1
 800ec78:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800ec7c:	687b      	ldr	r3, [r7, #4]
 800ec7e:	2201      	movs	r2, #1
 800ec80:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800ec84:	687b      	ldr	r3, [r7, #4]
 800ec86:	2201      	movs	r2, #1
 800ec88:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800ec8c:	687b      	ldr	r3, [r7, #4]
 800ec8e:	2201      	movs	r2, #1
 800ec90:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800ec94:	687b      	ldr	r3, [r7, #4]
 800ec96:	2201      	movs	r2, #1
 800ec98:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800ec9c:	687b      	ldr	r3, [r7, #4]
 800ec9e:	2201      	movs	r2, #1
 800eca0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800eca4:	687b      	ldr	r3, [r7, #4]
 800eca6:	2201      	movs	r2, #1
 800eca8:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800ecac:	687b      	ldr	r3, [r7, #4]
 800ecae:	2201      	movs	r2, #1
 800ecb0:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 800ecb4:	687b      	ldr	r3, [r7, #4]
 800ecb6:	2201      	movs	r2, #1
 800ecb8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ecbc:	2300      	movs	r3, #0
 800ecbe:	4618      	mov	r0, r3
 800ecc0:	3708      	adds	r7, #8
 800ecc2:	46bd      	mov	sp, r7
 800ecc4:	bd80      	pop	{r7, pc}

0800ecc6 <HAL_TIM_PWM_MspInit>:
 800ecc6:	b480      	push	{r7}
 800ecc8:	b083      	sub	sp, #12
 800ecca:	af00      	add	r7, sp, #0
 800eccc:	6078      	str	r0, [r7, #4]
 800ecce:	bf00      	nop
 800ecd0:	370c      	adds	r7, #12
 800ecd2:	46bd      	mov	sp, r7
 800ecd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecd8:	4770      	bx	lr
	...

0800ecdc <HAL_TIM_PWM_Start>:
 800ecdc:	b580      	push	{r7, lr}
 800ecde:	b084      	sub	sp, #16
 800ece0:	af00      	add	r7, sp, #0
 800ece2:	6078      	str	r0, [r7, #4]
 800ece4:	6039      	str	r1, [r7, #0]
 800ece6:	683b      	ldr	r3, [r7, #0]
 800ece8:	2b00      	cmp	r3, #0
 800ecea:	d109      	bne.n	800ed00 <HAL_TIM_PWM_Start+0x24>
 800ecec:	687b      	ldr	r3, [r7, #4]
 800ecee:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800ecf2:	b2db      	uxtb	r3, r3
 800ecf4:	2b01      	cmp	r3, #1
 800ecf6:	bf14      	ite	ne
 800ecf8:	2301      	movne	r3, #1
 800ecfa:	2300      	moveq	r3, #0
 800ecfc:	b2db      	uxtb	r3, r3
 800ecfe:	e03c      	b.n	800ed7a <HAL_TIM_PWM_Start+0x9e>
 800ed00:	683b      	ldr	r3, [r7, #0]
 800ed02:	2b04      	cmp	r3, #4
 800ed04:	d109      	bne.n	800ed1a <HAL_TIM_PWM_Start+0x3e>
 800ed06:	687b      	ldr	r3, [r7, #4]
 800ed08:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 800ed0c:	b2db      	uxtb	r3, r3
 800ed0e:	2b01      	cmp	r3, #1
 800ed10:	bf14      	ite	ne
 800ed12:	2301      	movne	r3, #1
 800ed14:	2300      	moveq	r3, #0
 800ed16:	b2db      	uxtb	r3, r3
 800ed18:	e02f      	b.n	800ed7a <HAL_TIM_PWM_Start+0x9e>
 800ed1a:	683b      	ldr	r3, [r7, #0]
 800ed1c:	2b08      	cmp	r3, #8
 800ed1e:	d109      	bne.n	800ed34 <HAL_TIM_PWM_Start+0x58>
 800ed20:	687b      	ldr	r3, [r7, #4]
 800ed22:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800ed26:	b2db      	uxtb	r3, r3
 800ed28:	2b01      	cmp	r3, #1
 800ed2a:	bf14      	ite	ne
 800ed2c:	2301      	movne	r3, #1
 800ed2e:	2300      	moveq	r3, #0
 800ed30:	b2db      	uxtb	r3, r3
 800ed32:	e022      	b.n	800ed7a <HAL_TIM_PWM_Start+0x9e>
 800ed34:	683b      	ldr	r3, [r7, #0]
 800ed36:	2b0c      	cmp	r3, #12
 800ed38:	d109      	bne.n	800ed4e <HAL_TIM_PWM_Start+0x72>
 800ed3a:	687b      	ldr	r3, [r7, #4]
 800ed3c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800ed40:	b2db      	uxtb	r3, r3
 800ed42:	2b01      	cmp	r3, #1
 800ed44:	bf14      	ite	ne
 800ed46:	2301      	movne	r3, #1
 800ed48:	2300      	moveq	r3, #0
 800ed4a:	b2db      	uxtb	r3, r3
 800ed4c:	e015      	b.n	800ed7a <HAL_TIM_PWM_Start+0x9e>
 800ed4e:	683b      	ldr	r3, [r7, #0]
 800ed50:	2b10      	cmp	r3, #16
 800ed52:	d109      	bne.n	800ed68 <HAL_TIM_PWM_Start+0x8c>
 800ed54:	687b      	ldr	r3, [r7, #4]
 800ed56:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800ed5a:	b2db      	uxtb	r3, r3
 800ed5c:	2b01      	cmp	r3, #1
 800ed5e:	bf14      	ite	ne
 800ed60:	2301      	movne	r3, #1
 800ed62:	2300      	moveq	r3, #0
 800ed64:	b2db      	uxtb	r3, r3
 800ed66:	e008      	b.n	800ed7a <HAL_TIM_PWM_Start+0x9e>
 800ed68:	687b      	ldr	r3, [r7, #4]
 800ed6a:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 800ed6e:	b2db      	uxtb	r3, r3
 800ed70:	2b01      	cmp	r3, #1
 800ed72:	bf14      	ite	ne
 800ed74:	2301      	movne	r3, #1
 800ed76:	2300      	moveq	r3, #0
 800ed78:	b2db      	uxtb	r3, r3
 800ed7a:	2b00      	cmp	r3, #0
 800ed7c:	d001      	beq.n	800ed82 <HAL_TIM_PWM_Start+0xa6>
 800ed7e:	2301      	movs	r3, #1
 800ed80:	e0ab      	b.n	800eeda <HAL_TIM_PWM_Start+0x1fe>
 800ed82:	683b      	ldr	r3, [r7, #0]
 800ed84:	2b00      	cmp	r3, #0
 800ed86:	d104      	bne.n	800ed92 <HAL_TIM_PWM_Start+0xb6>
 800ed88:	687b      	ldr	r3, [r7, #4]
 800ed8a:	2202      	movs	r2, #2
 800ed8c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800ed90:	e023      	b.n	800edda <HAL_TIM_PWM_Start+0xfe>
 800ed92:	683b      	ldr	r3, [r7, #0]
 800ed94:	2b04      	cmp	r3, #4
 800ed96:	d104      	bne.n	800eda2 <HAL_TIM_PWM_Start+0xc6>
 800ed98:	687b      	ldr	r3, [r7, #4]
 800ed9a:	2202      	movs	r2, #2
 800ed9c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800eda0:	e01b      	b.n	800edda <HAL_TIM_PWM_Start+0xfe>
 800eda2:	683b      	ldr	r3, [r7, #0]
 800eda4:	2b08      	cmp	r3, #8
 800eda6:	d104      	bne.n	800edb2 <HAL_TIM_PWM_Start+0xd6>
 800eda8:	687b      	ldr	r3, [r7, #4]
 800edaa:	2202      	movs	r2, #2
 800edac:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800edb0:	e013      	b.n	800edda <HAL_TIM_PWM_Start+0xfe>
 800edb2:	683b      	ldr	r3, [r7, #0]
 800edb4:	2b0c      	cmp	r3, #12
 800edb6:	d104      	bne.n	800edc2 <HAL_TIM_PWM_Start+0xe6>
 800edb8:	687b      	ldr	r3, [r7, #4]
 800edba:	2202      	movs	r2, #2
 800edbc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800edc0:	e00b      	b.n	800edda <HAL_TIM_PWM_Start+0xfe>
 800edc2:	683b      	ldr	r3, [r7, #0]
 800edc4:	2b10      	cmp	r3, #16
 800edc6:	d104      	bne.n	800edd2 <HAL_TIM_PWM_Start+0xf6>
 800edc8:	687b      	ldr	r3, [r7, #4]
 800edca:	2202      	movs	r2, #2
 800edcc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800edd0:	e003      	b.n	800edda <HAL_TIM_PWM_Start+0xfe>
 800edd2:	687b      	ldr	r3, [r7, #4]
 800edd4:	2202      	movs	r2, #2
 800edd6:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800edda:	687b      	ldr	r3, [r7, #4]
 800eddc:	681b      	ldr	r3, [r3, #0]
 800edde:	2201      	movs	r2, #1
 800ede0:	6839      	ldr	r1, [r7, #0]
 800ede2:	4618      	mov	r0, r3
 800ede4:	f001 fba8 	bl	8010538 <TIM_CCxChannelCmd>
 800ede8:	687b      	ldr	r3, [r7, #4]
 800edea:	681b      	ldr	r3, [r3, #0]
 800edec:	4a3d      	ldr	r2, [pc, #244]	@ (800eee4 <HAL_TIM_PWM_Start+0x208>)
 800edee:	4293      	cmp	r3, r2
 800edf0:	d013      	beq.n	800ee1a <HAL_TIM_PWM_Start+0x13e>
 800edf2:	687b      	ldr	r3, [r7, #4]
 800edf4:	681b      	ldr	r3, [r3, #0]
 800edf6:	4a3c      	ldr	r2, [pc, #240]	@ (800eee8 <HAL_TIM_PWM_Start+0x20c>)
 800edf8:	4293      	cmp	r3, r2
 800edfa:	d00e      	beq.n	800ee1a <HAL_TIM_PWM_Start+0x13e>
 800edfc:	687b      	ldr	r3, [r7, #4]
 800edfe:	681b      	ldr	r3, [r3, #0]
 800ee00:	4a3a      	ldr	r2, [pc, #232]	@ (800eeec <HAL_TIM_PWM_Start+0x210>)
 800ee02:	4293      	cmp	r3, r2
 800ee04:	d009      	beq.n	800ee1a <HAL_TIM_PWM_Start+0x13e>
 800ee06:	687b      	ldr	r3, [r7, #4]
 800ee08:	681b      	ldr	r3, [r3, #0]
 800ee0a:	4a39      	ldr	r2, [pc, #228]	@ (800eef0 <HAL_TIM_PWM_Start+0x214>)
 800ee0c:	4293      	cmp	r3, r2
 800ee0e:	d004      	beq.n	800ee1a <HAL_TIM_PWM_Start+0x13e>
 800ee10:	687b      	ldr	r3, [r7, #4]
 800ee12:	681b      	ldr	r3, [r3, #0]
 800ee14:	4a37      	ldr	r2, [pc, #220]	@ (800eef4 <HAL_TIM_PWM_Start+0x218>)
 800ee16:	4293      	cmp	r3, r2
 800ee18:	d101      	bne.n	800ee1e <HAL_TIM_PWM_Start+0x142>
 800ee1a:	2301      	movs	r3, #1
 800ee1c:	e000      	b.n	800ee20 <HAL_TIM_PWM_Start+0x144>
 800ee1e:	2300      	movs	r3, #0
 800ee20:	2b00      	cmp	r3, #0
 800ee22:	d007      	beq.n	800ee34 <HAL_TIM_PWM_Start+0x158>
 800ee24:	687b      	ldr	r3, [r7, #4]
 800ee26:	681b      	ldr	r3, [r3, #0]
 800ee28:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800ee2a:	687b      	ldr	r3, [r7, #4]
 800ee2c:	681b      	ldr	r3, [r3, #0]
 800ee2e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800ee32:	645a      	str	r2, [r3, #68]	@ 0x44
 800ee34:	687b      	ldr	r3, [r7, #4]
 800ee36:	681b      	ldr	r3, [r3, #0]
 800ee38:	4a2a      	ldr	r2, [pc, #168]	@ (800eee4 <HAL_TIM_PWM_Start+0x208>)
 800ee3a:	4293      	cmp	r3, r2
 800ee3c:	d02c      	beq.n	800ee98 <HAL_TIM_PWM_Start+0x1bc>
 800ee3e:	687b      	ldr	r3, [r7, #4]
 800ee40:	681b      	ldr	r3, [r3, #0]
 800ee42:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800ee46:	d027      	beq.n	800ee98 <HAL_TIM_PWM_Start+0x1bc>
 800ee48:	687b      	ldr	r3, [r7, #4]
 800ee4a:	681b      	ldr	r3, [r3, #0]
 800ee4c:	4a2a      	ldr	r2, [pc, #168]	@ (800eef8 <HAL_TIM_PWM_Start+0x21c>)
 800ee4e:	4293      	cmp	r3, r2
 800ee50:	d022      	beq.n	800ee98 <HAL_TIM_PWM_Start+0x1bc>
 800ee52:	687b      	ldr	r3, [r7, #4]
 800ee54:	681b      	ldr	r3, [r3, #0]
 800ee56:	4a29      	ldr	r2, [pc, #164]	@ (800eefc <HAL_TIM_PWM_Start+0x220>)
 800ee58:	4293      	cmp	r3, r2
 800ee5a:	d01d      	beq.n	800ee98 <HAL_TIM_PWM_Start+0x1bc>
 800ee5c:	687b      	ldr	r3, [r7, #4]
 800ee5e:	681b      	ldr	r3, [r3, #0]
 800ee60:	4a27      	ldr	r2, [pc, #156]	@ (800ef00 <HAL_TIM_PWM_Start+0x224>)
 800ee62:	4293      	cmp	r3, r2
 800ee64:	d018      	beq.n	800ee98 <HAL_TIM_PWM_Start+0x1bc>
 800ee66:	687b      	ldr	r3, [r7, #4]
 800ee68:	681b      	ldr	r3, [r3, #0]
 800ee6a:	4a1f      	ldr	r2, [pc, #124]	@ (800eee8 <HAL_TIM_PWM_Start+0x20c>)
 800ee6c:	4293      	cmp	r3, r2
 800ee6e:	d013      	beq.n	800ee98 <HAL_TIM_PWM_Start+0x1bc>
 800ee70:	687b      	ldr	r3, [r7, #4]
 800ee72:	681b      	ldr	r3, [r3, #0]
 800ee74:	4a23      	ldr	r2, [pc, #140]	@ (800ef04 <HAL_TIM_PWM_Start+0x228>)
 800ee76:	4293      	cmp	r3, r2
 800ee78:	d00e      	beq.n	800ee98 <HAL_TIM_PWM_Start+0x1bc>
 800ee7a:	687b      	ldr	r3, [r7, #4]
 800ee7c:	681b      	ldr	r3, [r3, #0]
 800ee7e:	4a1b      	ldr	r2, [pc, #108]	@ (800eeec <HAL_TIM_PWM_Start+0x210>)
 800ee80:	4293      	cmp	r3, r2
 800ee82:	d009      	beq.n	800ee98 <HAL_TIM_PWM_Start+0x1bc>
 800ee84:	687b      	ldr	r3, [r7, #4]
 800ee86:	681b      	ldr	r3, [r3, #0]
 800ee88:	4a1f      	ldr	r2, [pc, #124]	@ (800ef08 <HAL_TIM_PWM_Start+0x22c>)
 800ee8a:	4293      	cmp	r3, r2
 800ee8c:	d004      	beq.n	800ee98 <HAL_TIM_PWM_Start+0x1bc>
 800ee8e:	687b      	ldr	r3, [r7, #4]
 800ee90:	681b      	ldr	r3, [r3, #0]
 800ee92:	4a1e      	ldr	r2, [pc, #120]	@ (800ef0c <HAL_TIM_PWM_Start+0x230>)
 800ee94:	4293      	cmp	r3, r2
 800ee96:	d115      	bne.n	800eec4 <HAL_TIM_PWM_Start+0x1e8>
 800ee98:	687b      	ldr	r3, [r7, #4]
 800ee9a:	681b      	ldr	r3, [r3, #0]
 800ee9c:	689a      	ldr	r2, [r3, #8]
 800ee9e:	4b1c      	ldr	r3, [pc, #112]	@ (800ef10 <HAL_TIM_PWM_Start+0x234>)
 800eea0:	4013      	ands	r3, r2
 800eea2:	60fb      	str	r3, [r7, #12]
 800eea4:	68fb      	ldr	r3, [r7, #12]
 800eea6:	2b06      	cmp	r3, #6
 800eea8:	d015      	beq.n	800eed6 <HAL_TIM_PWM_Start+0x1fa>
 800eeaa:	68fb      	ldr	r3, [r7, #12]
 800eeac:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800eeb0:	d011      	beq.n	800eed6 <HAL_TIM_PWM_Start+0x1fa>
 800eeb2:	687b      	ldr	r3, [r7, #4]
 800eeb4:	681b      	ldr	r3, [r3, #0]
 800eeb6:	681a      	ldr	r2, [r3, #0]
 800eeb8:	687b      	ldr	r3, [r7, #4]
 800eeba:	681b      	ldr	r3, [r3, #0]
 800eebc:	f042 0201 	orr.w	r2, r2, #1
 800eec0:	601a      	str	r2, [r3, #0]
 800eec2:	e008      	b.n	800eed6 <HAL_TIM_PWM_Start+0x1fa>
 800eec4:	687b      	ldr	r3, [r7, #4]
 800eec6:	681b      	ldr	r3, [r3, #0]
 800eec8:	681a      	ldr	r2, [r3, #0]
 800eeca:	687b      	ldr	r3, [r7, #4]
 800eecc:	681b      	ldr	r3, [r3, #0]
 800eece:	f042 0201 	orr.w	r2, r2, #1
 800eed2:	601a      	str	r2, [r3, #0]
 800eed4:	e000      	b.n	800eed8 <HAL_TIM_PWM_Start+0x1fc>
 800eed6:	bf00      	nop
 800eed8:	2300      	movs	r3, #0
 800eeda:	4618      	mov	r0, r3
 800eedc:	3710      	adds	r7, #16
 800eede:	46bd      	mov	sp, r7
 800eee0:	bd80      	pop	{r7, pc}
 800eee2:	bf00      	nop
 800eee4:	40010000 	.word	0x40010000
 800eee8:	40010400 	.word	0x40010400
 800eeec:	40014000 	.word	0x40014000
 800eef0:	40014400 	.word	0x40014400
 800eef4:	40014800 	.word	0x40014800
 800eef8:	40000400 	.word	0x40000400
 800eefc:	40000800 	.word	0x40000800
 800ef00:	40000c00 	.word	0x40000c00
 800ef04:	40001800 	.word	0x40001800
 800ef08:	4000e000 	.word	0x4000e000
 800ef0c:	4000e400 	.word	0x4000e400
 800ef10:	00010007 	.word	0x00010007

0800ef14 <HAL_TIM_PWM_Stop>:
 800ef14:	b580      	push	{r7, lr}
 800ef16:	b082      	sub	sp, #8
 800ef18:	af00      	add	r7, sp, #0
 800ef1a:	6078      	str	r0, [r7, #4]
 800ef1c:	6039      	str	r1, [r7, #0]
 800ef1e:	687b      	ldr	r3, [r7, #4]
 800ef20:	681b      	ldr	r3, [r3, #0]
 800ef22:	2200      	movs	r2, #0
 800ef24:	6839      	ldr	r1, [r7, #0]
 800ef26:	4618      	mov	r0, r3
 800ef28:	f001 fb06 	bl	8010538 <TIM_CCxChannelCmd>
 800ef2c:	687b      	ldr	r3, [r7, #4]
 800ef2e:	681b      	ldr	r3, [r3, #0]
 800ef30:	4a3e      	ldr	r2, [pc, #248]	@ (800f02c <HAL_TIM_PWM_Stop+0x118>)
 800ef32:	4293      	cmp	r3, r2
 800ef34:	d013      	beq.n	800ef5e <HAL_TIM_PWM_Stop+0x4a>
 800ef36:	687b      	ldr	r3, [r7, #4]
 800ef38:	681b      	ldr	r3, [r3, #0]
 800ef3a:	4a3d      	ldr	r2, [pc, #244]	@ (800f030 <HAL_TIM_PWM_Stop+0x11c>)
 800ef3c:	4293      	cmp	r3, r2
 800ef3e:	d00e      	beq.n	800ef5e <HAL_TIM_PWM_Stop+0x4a>
 800ef40:	687b      	ldr	r3, [r7, #4]
 800ef42:	681b      	ldr	r3, [r3, #0]
 800ef44:	4a3b      	ldr	r2, [pc, #236]	@ (800f034 <HAL_TIM_PWM_Stop+0x120>)
 800ef46:	4293      	cmp	r3, r2
 800ef48:	d009      	beq.n	800ef5e <HAL_TIM_PWM_Stop+0x4a>
 800ef4a:	687b      	ldr	r3, [r7, #4]
 800ef4c:	681b      	ldr	r3, [r3, #0]
 800ef4e:	4a3a      	ldr	r2, [pc, #232]	@ (800f038 <HAL_TIM_PWM_Stop+0x124>)
 800ef50:	4293      	cmp	r3, r2
 800ef52:	d004      	beq.n	800ef5e <HAL_TIM_PWM_Stop+0x4a>
 800ef54:	687b      	ldr	r3, [r7, #4]
 800ef56:	681b      	ldr	r3, [r3, #0]
 800ef58:	4a38      	ldr	r2, [pc, #224]	@ (800f03c <HAL_TIM_PWM_Stop+0x128>)
 800ef5a:	4293      	cmp	r3, r2
 800ef5c:	d101      	bne.n	800ef62 <HAL_TIM_PWM_Stop+0x4e>
 800ef5e:	2301      	movs	r3, #1
 800ef60:	e000      	b.n	800ef64 <HAL_TIM_PWM_Stop+0x50>
 800ef62:	2300      	movs	r3, #0
 800ef64:	2b00      	cmp	r3, #0
 800ef66:	d017      	beq.n	800ef98 <HAL_TIM_PWM_Stop+0x84>
 800ef68:	687b      	ldr	r3, [r7, #4]
 800ef6a:	681b      	ldr	r3, [r3, #0]
 800ef6c:	6a1a      	ldr	r2, [r3, #32]
 800ef6e:	f241 1311 	movw	r3, #4369	@ 0x1111
 800ef72:	4013      	ands	r3, r2
 800ef74:	2b00      	cmp	r3, #0
 800ef76:	d10f      	bne.n	800ef98 <HAL_TIM_PWM_Stop+0x84>
 800ef78:	687b      	ldr	r3, [r7, #4]
 800ef7a:	681b      	ldr	r3, [r3, #0]
 800ef7c:	6a1a      	ldr	r2, [r3, #32]
 800ef7e:	f240 4344 	movw	r3, #1092	@ 0x444
 800ef82:	4013      	ands	r3, r2
 800ef84:	2b00      	cmp	r3, #0
 800ef86:	d107      	bne.n	800ef98 <HAL_TIM_PWM_Stop+0x84>
 800ef88:	687b      	ldr	r3, [r7, #4]
 800ef8a:	681b      	ldr	r3, [r3, #0]
 800ef8c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800ef8e:	687b      	ldr	r3, [r7, #4]
 800ef90:	681b      	ldr	r3, [r3, #0]
 800ef92:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800ef96:	645a      	str	r2, [r3, #68]	@ 0x44
 800ef98:	687b      	ldr	r3, [r7, #4]
 800ef9a:	681b      	ldr	r3, [r3, #0]
 800ef9c:	6a1a      	ldr	r2, [r3, #32]
 800ef9e:	f241 1311 	movw	r3, #4369	@ 0x1111
 800efa2:	4013      	ands	r3, r2
 800efa4:	2b00      	cmp	r3, #0
 800efa6:	d10f      	bne.n	800efc8 <HAL_TIM_PWM_Stop+0xb4>
 800efa8:	687b      	ldr	r3, [r7, #4]
 800efaa:	681b      	ldr	r3, [r3, #0]
 800efac:	6a1a      	ldr	r2, [r3, #32]
 800efae:	f240 4344 	movw	r3, #1092	@ 0x444
 800efb2:	4013      	ands	r3, r2
 800efb4:	2b00      	cmp	r3, #0
 800efb6:	d107      	bne.n	800efc8 <HAL_TIM_PWM_Stop+0xb4>
 800efb8:	687b      	ldr	r3, [r7, #4]
 800efba:	681b      	ldr	r3, [r3, #0]
 800efbc:	681a      	ldr	r2, [r3, #0]
 800efbe:	687b      	ldr	r3, [r7, #4]
 800efc0:	681b      	ldr	r3, [r3, #0]
 800efc2:	f022 0201 	bic.w	r2, r2, #1
 800efc6:	601a      	str	r2, [r3, #0]
 800efc8:	683b      	ldr	r3, [r7, #0]
 800efca:	2b00      	cmp	r3, #0
 800efcc:	d104      	bne.n	800efd8 <HAL_TIM_PWM_Stop+0xc4>
 800efce:	687b      	ldr	r3, [r7, #4]
 800efd0:	2201      	movs	r2, #1
 800efd2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800efd6:	e023      	b.n	800f020 <HAL_TIM_PWM_Stop+0x10c>
 800efd8:	683b      	ldr	r3, [r7, #0]
 800efda:	2b04      	cmp	r3, #4
 800efdc:	d104      	bne.n	800efe8 <HAL_TIM_PWM_Stop+0xd4>
 800efde:	687b      	ldr	r3, [r7, #4]
 800efe0:	2201      	movs	r2, #1
 800efe2:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800efe6:	e01b      	b.n	800f020 <HAL_TIM_PWM_Stop+0x10c>
 800efe8:	683b      	ldr	r3, [r7, #0]
 800efea:	2b08      	cmp	r3, #8
 800efec:	d104      	bne.n	800eff8 <HAL_TIM_PWM_Stop+0xe4>
 800efee:	687b      	ldr	r3, [r7, #4]
 800eff0:	2201      	movs	r2, #1
 800eff2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800eff6:	e013      	b.n	800f020 <HAL_TIM_PWM_Stop+0x10c>
 800eff8:	683b      	ldr	r3, [r7, #0]
 800effa:	2b0c      	cmp	r3, #12
 800effc:	d104      	bne.n	800f008 <HAL_TIM_PWM_Stop+0xf4>
 800effe:	687b      	ldr	r3, [r7, #4]
 800f000:	2201      	movs	r2, #1
 800f002:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800f006:	e00b      	b.n	800f020 <HAL_TIM_PWM_Stop+0x10c>
 800f008:	683b      	ldr	r3, [r7, #0]
 800f00a:	2b10      	cmp	r3, #16
 800f00c:	d104      	bne.n	800f018 <HAL_TIM_PWM_Stop+0x104>
 800f00e:	687b      	ldr	r3, [r7, #4]
 800f010:	2201      	movs	r2, #1
 800f012:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800f016:	e003      	b.n	800f020 <HAL_TIM_PWM_Stop+0x10c>
 800f018:	687b      	ldr	r3, [r7, #4]
 800f01a:	2201      	movs	r2, #1
 800f01c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800f020:	2300      	movs	r3, #0
 800f022:	4618      	mov	r0, r3
 800f024:	3708      	adds	r7, #8
 800f026:	46bd      	mov	sp, r7
 800f028:	bd80      	pop	{r7, pc}
 800f02a:	bf00      	nop
 800f02c:	40010000 	.word	0x40010000
 800f030:	40010400 	.word	0x40010400
 800f034:	40014000 	.word	0x40014000
 800f038:	40014400 	.word	0x40014400
 800f03c:	40014800 	.word	0x40014800

0800f040 <HAL_TIM_PWM_Start_DMA>:
 800f040:	b580      	push	{r7, lr}
 800f042:	b086      	sub	sp, #24
 800f044:	af00      	add	r7, sp, #0
 800f046:	60f8      	str	r0, [r7, #12]
 800f048:	60b9      	str	r1, [r7, #8]
 800f04a:	607a      	str	r2, [r7, #4]
 800f04c:	807b      	strh	r3, [r7, #2]
 800f04e:	2300      	movs	r3, #0
 800f050:	75fb      	strb	r3, [r7, #23]
 800f052:	68bb      	ldr	r3, [r7, #8]
 800f054:	2b00      	cmp	r3, #0
 800f056:	d109      	bne.n	800f06c <HAL_TIM_PWM_Start_DMA+0x2c>
 800f058:	68fb      	ldr	r3, [r7, #12]
 800f05a:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800f05e:	b2db      	uxtb	r3, r3
 800f060:	2b02      	cmp	r3, #2
 800f062:	bf0c      	ite	eq
 800f064:	2301      	moveq	r3, #1
 800f066:	2300      	movne	r3, #0
 800f068:	b2db      	uxtb	r3, r3
 800f06a:	e03c      	b.n	800f0e6 <HAL_TIM_PWM_Start_DMA+0xa6>
 800f06c:	68bb      	ldr	r3, [r7, #8]
 800f06e:	2b04      	cmp	r3, #4
 800f070:	d109      	bne.n	800f086 <HAL_TIM_PWM_Start_DMA+0x46>
 800f072:	68fb      	ldr	r3, [r7, #12]
 800f074:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 800f078:	b2db      	uxtb	r3, r3
 800f07a:	2b02      	cmp	r3, #2
 800f07c:	bf0c      	ite	eq
 800f07e:	2301      	moveq	r3, #1
 800f080:	2300      	movne	r3, #0
 800f082:	b2db      	uxtb	r3, r3
 800f084:	e02f      	b.n	800f0e6 <HAL_TIM_PWM_Start_DMA+0xa6>
 800f086:	68bb      	ldr	r3, [r7, #8]
 800f088:	2b08      	cmp	r3, #8
 800f08a:	d109      	bne.n	800f0a0 <HAL_TIM_PWM_Start_DMA+0x60>
 800f08c:	68fb      	ldr	r3, [r7, #12]
 800f08e:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800f092:	b2db      	uxtb	r3, r3
 800f094:	2b02      	cmp	r3, #2
 800f096:	bf0c      	ite	eq
 800f098:	2301      	moveq	r3, #1
 800f09a:	2300      	movne	r3, #0
 800f09c:	b2db      	uxtb	r3, r3
 800f09e:	e022      	b.n	800f0e6 <HAL_TIM_PWM_Start_DMA+0xa6>
 800f0a0:	68bb      	ldr	r3, [r7, #8]
 800f0a2:	2b0c      	cmp	r3, #12
 800f0a4:	d109      	bne.n	800f0ba <HAL_TIM_PWM_Start_DMA+0x7a>
 800f0a6:	68fb      	ldr	r3, [r7, #12]
 800f0a8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800f0ac:	b2db      	uxtb	r3, r3
 800f0ae:	2b02      	cmp	r3, #2
 800f0b0:	bf0c      	ite	eq
 800f0b2:	2301      	moveq	r3, #1
 800f0b4:	2300      	movne	r3, #0
 800f0b6:	b2db      	uxtb	r3, r3
 800f0b8:	e015      	b.n	800f0e6 <HAL_TIM_PWM_Start_DMA+0xa6>
 800f0ba:	68bb      	ldr	r3, [r7, #8]
 800f0bc:	2b10      	cmp	r3, #16
 800f0be:	d109      	bne.n	800f0d4 <HAL_TIM_PWM_Start_DMA+0x94>
 800f0c0:	68fb      	ldr	r3, [r7, #12]
 800f0c2:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800f0c6:	b2db      	uxtb	r3, r3
 800f0c8:	2b02      	cmp	r3, #2
 800f0ca:	bf0c      	ite	eq
 800f0cc:	2301      	moveq	r3, #1
 800f0ce:	2300      	movne	r3, #0
 800f0d0:	b2db      	uxtb	r3, r3
 800f0d2:	e008      	b.n	800f0e6 <HAL_TIM_PWM_Start_DMA+0xa6>
 800f0d4:	68fb      	ldr	r3, [r7, #12]
 800f0d6:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 800f0da:	b2db      	uxtb	r3, r3
 800f0dc:	2b02      	cmp	r3, #2
 800f0de:	bf0c      	ite	eq
 800f0e0:	2301      	moveq	r3, #1
 800f0e2:	2300      	movne	r3, #0
 800f0e4:	b2db      	uxtb	r3, r3
 800f0e6:	2b00      	cmp	r3, #0
 800f0e8:	d001      	beq.n	800f0ee <HAL_TIM_PWM_Start_DMA+0xae>
 800f0ea:	2302      	movs	r3, #2
 800f0ec:	e1ba      	b.n	800f464 <HAL_TIM_PWM_Start_DMA+0x424>
 800f0ee:	68bb      	ldr	r3, [r7, #8]
 800f0f0:	2b00      	cmp	r3, #0
 800f0f2:	d109      	bne.n	800f108 <HAL_TIM_PWM_Start_DMA+0xc8>
 800f0f4:	68fb      	ldr	r3, [r7, #12]
 800f0f6:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800f0fa:	b2db      	uxtb	r3, r3
 800f0fc:	2b01      	cmp	r3, #1
 800f0fe:	bf0c      	ite	eq
 800f100:	2301      	moveq	r3, #1
 800f102:	2300      	movne	r3, #0
 800f104:	b2db      	uxtb	r3, r3
 800f106:	e03c      	b.n	800f182 <HAL_TIM_PWM_Start_DMA+0x142>
 800f108:	68bb      	ldr	r3, [r7, #8]
 800f10a:	2b04      	cmp	r3, #4
 800f10c:	d109      	bne.n	800f122 <HAL_TIM_PWM_Start_DMA+0xe2>
 800f10e:	68fb      	ldr	r3, [r7, #12]
 800f110:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 800f114:	b2db      	uxtb	r3, r3
 800f116:	2b01      	cmp	r3, #1
 800f118:	bf0c      	ite	eq
 800f11a:	2301      	moveq	r3, #1
 800f11c:	2300      	movne	r3, #0
 800f11e:	b2db      	uxtb	r3, r3
 800f120:	e02f      	b.n	800f182 <HAL_TIM_PWM_Start_DMA+0x142>
 800f122:	68bb      	ldr	r3, [r7, #8]
 800f124:	2b08      	cmp	r3, #8
 800f126:	d109      	bne.n	800f13c <HAL_TIM_PWM_Start_DMA+0xfc>
 800f128:	68fb      	ldr	r3, [r7, #12]
 800f12a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800f12e:	b2db      	uxtb	r3, r3
 800f130:	2b01      	cmp	r3, #1
 800f132:	bf0c      	ite	eq
 800f134:	2301      	moveq	r3, #1
 800f136:	2300      	movne	r3, #0
 800f138:	b2db      	uxtb	r3, r3
 800f13a:	e022      	b.n	800f182 <HAL_TIM_PWM_Start_DMA+0x142>
 800f13c:	68bb      	ldr	r3, [r7, #8]
 800f13e:	2b0c      	cmp	r3, #12
 800f140:	d109      	bne.n	800f156 <HAL_TIM_PWM_Start_DMA+0x116>
 800f142:	68fb      	ldr	r3, [r7, #12]
 800f144:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800f148:	b2db      	uxtb	r3, r3
 800f14a:	2b01      	cmp	r3, #1
 800f14c:	bf0c      	ite	eq
 800f14e:	2301      	moveq	r3, #1
 800f150:	2300      	movne	r3, #0
 800f152:	b2db      	uxtb	r3, r3
 800f154:	e015      	b.n	800f182 <HAL_TIM_PWM_Start_DMA+0x142>
 800f156:	68bb      	ldr	r3, [r7, #8]
 800f158:	2b10      	cmp	r3, #16
 800f15a:	d109      	bne.n	800f170 <HAL_TIM_PWM_Start_DMA+0x130>
 800f15c:	68fb      	ldr	r3, [r7, #12]
 800f15e:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800f162:	b2db      	uxtb	r3, r3
 800f164:	2b01      	cmp	r3, #1
 800f166:	bf0c      	ite	eq
 800f168:	2301      	moveq	r3, #1
 800f16a:	2300      	movne	r3, #0
 800f16c:	b2db      	uxtb	r3, r3
 800f16e:	e008      	b.n	800f182 <HAL_TIM_PWM_Start_DMA+0x142>
 800f170:	68fb      	ldr	r3, [r7, #12]
 800f172:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 800f176:	b2db      	uxtb	r3, r3
 800f178:	2b01      	cmp	r3, #1
 800f17a:	bf0c      	ite	eq
 800f17c:	2301      	moveq	r3, #1
 800f17e:	2300      	movne	r3, #0
 800f180:	b2db      	uxtb	r3, r3
 800f182:	2b00      	cmp	r3, #0
 800f184:	d034      	beq.n	800f1f0 <HAL_TIM_PWM_Start_DMA+0x1b0>
 800f186:	687b      	ldr	r3, [r7, #4]
 800f188:	2b00      	cmp	r3, #0
 800f18a:	d002      	beq.n	800f192 <HAL_TIM_PWM_Start_DMA+0x152>
 800f18c:	887b      	ldrh	r3, [r7, #2]
 800f18e:	2b00      	cmp	r3, #0
 800f190:	d101      	bne.n	800f196 <HAL_TIM_PWM_Start_DMA+0x156>
 800f192:	2301      	movs	r3, #1
 800f194:	e166      	b.n	800f464 <HAL_TIM_PWM_Start_DMA+0x424>
 800f196:	68bb      	ldr	r3, [r7, #8]
 800f198:	2b00      	cmp	r3, #0
 800f19a:	d104      	bne.n	800f1a6 <HAL_TIM_PWM_Start_DMA+0x166>
 800f19c:	68fb      	ldr	r3, [r7, #12]
 800f19e:	2202      	movs	r2, #2
 800f1a0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800f1a4:	e026      	b.n	800f1f4 <HAL_TIM_PWM_Start_DMA+0x1b4>
 800f1a6:	68bb      	ldr	r3, [r7, #8]
 800f1a8:	2b04      	cmp	r3, #4
 800f1aa:	d104      	bne.n	800f1b6 <HAL_TIM_PWM_Start_DMA+0x176>
 800f1ac:	68fb      	ldr	r3, [r7, #12]
 800f1ae:	2202      	movs	r2, #2
 800f1b0:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800f1b4:	e01e      	b.n	800f1f4 <HAL_TIM_PWM_Start_DMA+0x1b4>
 800f1b6:	68bb      	ldr	r3, [r7, #8]
 800f1b8:	2b08      	cmp	r3, #8
 800f1ba:	d104      	bne.n	800f1c6 <HAL_TIM_PWM_Start_DMA+0x186>
 800f1bc:	68fb      	ldr	r3, [r7, #12]
 800f1be:	2202      	movs	r2, #2
 800f1c0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800f1c4:	e016      	b.n	800f1f4 <HAL_TIM_PWM_Start_DMA+0x1b4>
 800f1c6:	68bb      	ldr	r3, [r7, #8]
 800f1c8:	2b0c      	cmp	r3, #12
 800f1ca:	d104      	bne.n	800f1d6 <HAL_TIM_PWM_Start_DMA+0x196>
 800f1cc:	68fb      	ldr	r3, [r7, #12]
 800f1ce:	2202      	movs	r2, #2
 800f1d0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800f1d4:	e00e      	b.n	800f1f4 <HAL_TIM_PWM_Start_DMA+0x1b4>
 800f1d6:	68bb      	ldr	r3, [r7, #8]
 800f1d8:	2b10      	cmp	r3, #16
 800f1da:	d104      	bne.n	800f1e6 <HAL_TIM_PWM_Start_DMA+0x1a6>
 800f1dc:	68fb      	ldr	r3, [r7, #12]
 800f1de:	2202      	movs	r2, #2
 800f1e0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800f1e4:	e006      	b.n	800f1f4 <HAL_TIM_PWM_Start_DMA+0x1b4>
 800f1e6:	68fb      	ldr	r3, [r7, #12]
 800f1e8:	2202      	movs	r2, #2
 800f1ea:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800f1ee:	e001      	b.n	800f1f4 <HAL_TIM_PWM_Start_DMA+0x1b4>
 800f1f0:	2301      	movs	r3, #1
 800f1f2:	e137      	b.n	800f464 <HAL_TIM_PWM_Start_DMA+0x424>
 800f1f4:	68bb      	ldr	r3, [r7, #8]
 800f1f6:	2b0c      	cmp	r3, #12
 800f1f8:	f200 80ae 	bhi.w	800f358 <HAL_TIM_PWM_Start_DMA+0x318>
 800f1fc:	a201      	add	r2, pc, #4	@ (adr r2, 800f204 <HAL_TIM_PWM_Start_DMA+0x1c4>)
 800f1fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f202:	bf00      	nop
 800f204:	0800f239 	.word	0x0800f239
 800f208:	0800f359 	.word	0x0800f359
 800f20c:	0800f359 	.word	0x0800f359
 800f210:	0800f359 	.word	0x0800f359
 800f214:	0800f281 	.word	0x0800f281
 800f218:	0800f359 	.word	0x0800f359
 800f21c:	0800f359 	.word	0x0800f359
 800f220:	0800f359 	.word	0x0800f359
 800f224:	0800f2c9 	.word	0x0800f2c9
 800f228:	0800f359 	.word	0x0800f359
 800f22c:	0800f359 	.word	0x0800f359
 800f230:	0800f359 	.word	0x0800f359
 800f234:	0800f311 	.word	0x0800f311
 800f238:	68fb      	ldr	r3, [r7, #12]
 800f23a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f23c:	4a8b      	ldr	r2, [pc, #556]	@ (800f46c <HAL_TIM_PWM_Start_DMA+0x42c>)
 800f23e:	63da      	str	r2, [r3, #60]	@ 0x3c
 800f240:	68fb      	ldr	r3, [r7, #12]
 800f242:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f244:	4a8a      	ldr	r2, [pc, #552]	@ (800f470 <HAL_TIM_PWM_Start_DMA+0x430>)
 800f246:	641a      	str	r2, [r3, #64]	@ 0x40
 800f248:	68fb      	ldr	r3, [r7, #12]
 800f24a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f24c:	4a89      	ldr	r2, [pc, #548]	@ (800f474 <HAL_TIM_PWM_Start_DMA+0x434>)
 800f24e:	64da      	str	r2, [r3, #76]	@ 0x4c
 800f250:	68fb      	ldr	r3, [r7, #12]
 800f252:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 800f254:	6879      	ldr	r1, [r7, #4]
 800f256:	68fb      	ldr	r3, [r7, #12]
 800f258:	681b      	ldr	r3, [r3, #0]
 800f25a:	3334      	adds	r3, #52	@ 0x34
 800f25c:	461a      	mov	r2, r3
 800f25e:	887b      	ldrh	r3, [r7, #2]
 800f260:	f7f8 fb82 	bl	8007968 <HAL_DMA_Start_IT>
 800f264:	4603      	mov	r3, r0
 800f266:	2b00      	cmp	r3, #0
 800f268:	d001      	beq.n	800f26e <HAL_TIM_PWM_Start_DMA+0x22e>
 800f26a:	2301      	movs	r3, #1
 800f26c:	e0fa      	b.n	800f464 <HAL_TIM_PWM_Start_DMA+0x424>
 800f26e:	68fb      	ldr	r3, [r7, #12]
 800f270:	681b      	ldr	r3, [r3, #0]
 800f272:	68da      	ldr	r2, [r3, #12]
 800f274:	68fb      	ldr	r3, [r7, #12]
 800f276:	681b      	ldr	r3, [r3, #0]
 800f278:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800f27c:	60da      	str	r2, [r3, #12]
 800f27e:	e06e      	b.n	800f35e <HAL_TIM_PWM_Start_DMA+0x31e>
 800f280:	68fb      	ldr	r3, [r7, #12]
 800f282:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f284:	4a79      	ldr	r2, [pc, #484]	@ (800f46c <HAL_TIM_PWM_Start_DMA+0x42c>)
 800f286:	63da      	str	r2, [r3, #60]	@ 0x3c
 800f288:	68fb      	ldr	r3, [r7, #12]
 800f28a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f28c:	4a78      	ldr	r2, [pc, #480]	@ (800f470 <HAL_TIM_PWM_Start_DMA+0x430>)
 800f28e:	641a      	str	r2, [r3, #64]	@ 0x40
 800f290:	68fb      	ldr	r3, [r7, #12]
 800f292:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f294:	4a77      	ldr	r2, [pc, #476]	@ (800f474 <HAL_TIM_PWM_Start_DMA+0x434>)
 800f296:	64da      	str	r2, [r3, #76]	@ 0x4c
 800f298:	68fb      	ldr	r3, [r7, #12]
 800f29a:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 800f29c:	6879      	ldr	r1, [r7, #4]
 800f29e:	68fb      	ldr	r3, [r7, #12]
 800f2a0:	681b      	ldr	r3, [r3, #0]
 800f2a2:	3338      	adds	r3, #56	@ 0x38
 800f2a4:	461a      	mov	r2, r3
 800f2a6:	887b      	ldrh	r3, [r7, #2]
 800f2a8:	f7f8 fb5e 	bl	8007968 <HAL_DMA_Start_IT>
 800f2ac:	4603      	mov	r3, r0
 800f2ae:	2b00      	cmp	r3, #0
 800f2b0:	d001      	beq.n	800f2b6 <HAL_TIM_PWM_Start_DMA+0x276>
 800f2b2:	2301      	movs	r3, #1
 800f2b4:	e0d6      	b.n	800f464 <HAL_TIM_PWM_Start_DMA+0x424>
 800f2b6:	68fb      	ldr	r3, [r7, #12]
 800f2b8:	681b      	ldr	r3, [r3, #0]
 800f2ba:	68da      	ldr	r2, [r3, #12]
 800f2bc:	68fb      	ldr	r3, [r7, #12]
 800f2be:	681b      	ldr	r3, [r3, #0]
 800f2c0:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800f2c4:	60da      	str	r2, [r3, #12]
 800f2c6:	e04a      	b.n	800f35e <HAL_TIM_PWM_Start_DMA+0x31e>
 800f2c8:	68fb      	ldr	r3, [r7, #12]
 800f2ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f2cc:	4a67      	ldr	r2, [pc, #412]	@ (800f46c <HAL_TIM_PWM_Start_DMA+0x42c>)
 800f2ce:	63da      	str	r2, [r3, #60]	@ 0x3c
 800f2d0:	68fb      	ldr	r3, [r7, #12]
 800f2d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f2d4:	4a66      	ldr	r2, [pc, #408]	@ (800f470 <HAL_TIM_PWM_Start_DMA+0x430>)
 800f2d6:	641a      	str	r2, [r3, #64]	@ 0x40
 800f2d8:	68fb      	ldr	r3, [r7, #12]
 800f2da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f2dc:	4a65      	ldr	r2, [pc, #404]	@ (800f474 <HAL_TIM_PWM_Start_DMA+0x434>)
 800f2de:	64da      	str	r2, [r3, #76]	@ 0x4c
 800f2e0:	68fb      	ldr	r3, [r7, #12]
 800f2e2:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 800f2e4:	6879      	ldr	r1, [r7, #4]
 800f2e6:	68fb      	ldr	r3, [r7, #12]
 800f2e8:	681b      	ldr	r3, [r3, #0]
 800f2ea:	333c      	adds	r3, #60	@ 0x3c
 800f2ec:	461a      	mov	r2, r3
 800f2ee:	887b      	ldrh	r3, [r7, #2]
 800f2f0:	f7f8 fb3a 	bl	8007968 <HAL_DMA_Start_IT>
 800f2f4:	4603      	mov	r3, r0
 800f2f6:	2b00      	cmp	r3, #0
 800f2f8:	d001      	beq.n	800f2fe <HAL_TIM_PWM_Start_DMA+0x2be>
 800f2fa:	2301      	movs	r3, #1
 800f2fc:	e0b2      	b.n	800f464 <HAL_TIM_PWM_Start_DMA+0x424>
 800f2fe:	68fb      	ldr	r3, [r7, #12]
 800f300:	681b      	ldr	r3, [r3, #0]
 800f302:	68da      	ldr	r2, [r3, #12]
 800f304:	68fb      	ldr	r3, [r7, #12]
 800f306:	681b      	ldr	r3, [r3, #0]
 800f308:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800f30c:	60da      	str	r2, [r3, #12]
 800f30e:	e026      	b.n	800f35e <HAL_TIM_PWM_Start_DMA+0x31e>
 800f310:	68fb      	ldr	r3, [r7, #12]
 800f312:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f314:	4a55      	ldr	r2, [pc, #340]	@ (800f46c <HAL_TIM_PWM_Start_DMA+0x42c>)
 800f316:	63da      	str	r2, [r3, #60]	@ 0x3c
 800f318:	68fb      	ldr	r3, [r7, #12]
 800f31a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f31c:	4a54      	ldr	r2, [pc, #336]	@ (800f470 <HAL_TIM_PWM_Start_DMA+0x430>)
 800f31e:	641a      	str	r2, [r3, #64]	@ 0x40
 800f320:	68fb      	ldr	r3, [r7, #12]
 800f322:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f324:	4a53      	ldr	r2, [pc, #332]	@ (800f474 <HAL_TIM_PWM_Start_DMA+0x434>)
 800f326:	64da      	str	r2, [r3, #76]	@ 0x4c
 800f328:	68fb      	ldr	r3, [r7, #12]
 800f32a:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 800f32c:	6879      	ldr	r1, [r7, #4]
 800f32e:	68fb      	ldr	r3, [r7, #12]
 800f330:	681b      	ldr	r3, [r3, #0]
 800f332:	3340      	adds	r3, #64	@ 0x40
 800f334:	461a      	mov	r2, r3
 800f336:	887b      	ldrh	r3, [r7, #2]
 800f338:	f7f8 fb16 	bl	8007968 <HAL_DMA_Start_IT>
 800f33c:	4603      	mov	r3, r0
 800f33e:	2b00      	cmp	r3, #0
 800f340:	d001      	beq.n	800f346 <HAL_TIM_PWM_Start_DMA+0x306>
 800f342:	2301      	movs	r3, #1
 800f344:	e08e      	b.n	800f464 <HAL_TIM_PWM_Start_DMA+0x424>
 800f346:	68fb      	ldr	r3, [r7, #12]
 800f348:	681b      	ldr	r3, [r3, #0]
 800f34a:	68da      	ldr	r2, [r3, #12]
 800f34c:	68fb      	ldr	r3, [r7, #12]
 800f34e:	681b      	ldr	r3, [r3, #0]
 800f350:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800f354:	60da      	str	r2, [r3, #12]
 800f356:	e002      	b.n	800f35e <HAL_TIM_PWM_Start_DMA+0x31e>
 800f358:	2301      	movs	r3, #1
 800f35a:	75fb      	strb	r3, [r7, #23]
 800f35c:	bf00      	nop
 800f35e:	7dfb      	ldrb	r3, [r7, #23]
 800f360:	2b00      	cmp	r3, #0
 800f362:	d17e      	bne.n	800f462 <HAL_TIM_PWM_Start_DMA+0x422>
 800f364:	68fb      	ldr	r3, [r7, #12]
 800f366:	681b      	ldr	r3, [r3, #0]
 800f368:	2201      	movs	r2, #1
 800f36a:	68b9      	ldr	r1, [r7, #8]
 800f36c:	4618      	mov	r0, r3
 800f36e:	f001 f8e3 	bl	8010538 <TIM_CCxChannelCmd>
 800f372:	68fb      	ldr	r3, [r7, #12]
 800f374:	681b      	ldr	r3, [r3, #0]
 800f376:	4a40      	ldr	r2, [pc, #256]	@ (800f478 <HAL_TIM_PWM_Start_DMA+0x438>)
 800f378:	4293      	cmp	r3, r2
 800f37a:	d013      	beq.n	800f3a4 <HAL_TIM_PWM_Start_DMA+0x364>
 800f37c:	68fb      	ldr	r3, [r7, #12]
 800f37e:	681b      	ldr	r3, [r3, #0]
 800f380:	4a3e      	ldr	r2, [pc, #248]	@ (800f47c <HAL_TIM_PWM_Start_DMA+0x43c>)
 800f382:	4293      	cmp	r3, r2
 800f384:	d00e      	beq.n	800f3a4 <HAL_TIM_PWM_Start_DMA+0x364>
 800f386:	68fb      	ldr	r3, [r7, #12]
 800f388:	681b      	ldr	r3, [r3, #0]
 800f38a:	4a3d      	ldr	r2, [pc, #244]	@ (800f480 <HAL_TIM_PWM_Start_DMA+0x440>)
 800f38c:	4293      	cmp	r3, r2
 800f38e:	d009      	beq.n	800f3a4 <HAL_TIM_PWM_Start_DMA+0x364>
 800f390:	68fb      	ldr	r3, [r7, #12]
 800f392:	681b      	ldr	r3, [r3, #0]
 800f394:	4a3b      	ldr	r2, [pc, #236]	@ (800f484 <HAL_TIM_PWM_Start_DMA+0x444>)
 800f396:	4293      	cmp	r3, r2
 800f398:	d004      	beq.n	800f3a4 <HAL_TIM_PWM_Start_DMA+0x364>
 800f39a:	68fb      	ldr	r3, [r7, #12]
 800f39c:	681b      	ldr	r3, [r3, #0]
 800f39e:	4a3a      	ldr	r2, [pc, #232]	@ (800f488 <HAL_TIM_PWM_Start_DMA+0x448>)
 800f3a0:	4293      	cmp	r3, r2
 800f3a2:	d101      	bne.n	800f3a8 <HAL_TIM_PWM_Start_DMA+0x368>
 800f3a4:	2301      	movs	r3, #1
 800f3a6:	e000      	b.n	800f3aa <HAL_TIM_PWM_Start_DMA+0x36a>
 800f3a8:	2300      	movs	r3, #0
 800f3aa:	2b00      	cmp	r3, #0
 800f3ac:	d007      	beq.n	800f3be <HAL_TIM_PWM_Start_DMA+0x37e>
 800f3ae:	68fb      	ldr	r3, [r7, #12]
 800f3b0:	681b      	ldr	r3, [r3, #0]
 800f3b2:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800f3b4:	68fb      	ldr	r3, [r7, #12]
 800f3b6:	681b      	ldr	r3, [r3, #0]
 800f3b8:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800f3bc:	645a      	str	r2, [r3, #68]	@ 0x44
 800f3be:	68fb      	ldr	r3, [r7, #12]
 800f3c0:	681b      	ldr	r3, [r3, #0]
 800f3c2:	4a2d      	ldr	r2, [pc, #180]	@ (800f478 <HAL_TIM_PWM_Start_DMA+0x438>)
 800f3c4:	4293      	cmp	r3, r2
 800f3c6:	d02c      	beq.n	800f422 <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f3c8:	68fb      	ldr	r3, [r7, #12]
 800f3ca:	681b      	ldr	r3, [r3, #0]
 800f3cc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800f3d0:	d027      	beq.n	800f422 <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f3d2:	68fb      	ldr	r3, [r7, #12]
 800f3d4:	681b      	ldr	r3, [r3, #0]
 800f3d6:	4a2d      	ldr	r2, [pc, #180]	@ (800f48c <HAL_TIM_PWM_Start_DMA+0x44c>)
 800f3d8:	4293      	cmp	r3, r2
 800f3da:	d022      	beq.n	800f422 <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f3dc:	68fb      	ldr	r3, [r7, #12]
 800f3de:	681b      	ldr	r3, [r3, #0]
 800f3e0:	4a2b      	ldr	r2, [pc, #172]	@ (800f490 <HAL_TIM_PWM_Start_DMA+0x450>)
 800f3e2:	4293      	cmp	r3, r2
 800f3e4:	d01d      	beq.n	800f422 <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f3e6:	68fb      	ldr	r3, [r7, #12]
 800f3e8:	681b      	ldr	r3, [r3, #0]
 800f3ea:	4a2a      	ldr	r2, [pc, #168]	@ (800f494 <HAL_TIM_PWM_Start_DMA+0x454>)
 800f3ec:	4293      	cmp	r3, r2
 800f3ee:	d018      	beq.n	800f422 <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f3f0:	68fb      	ldr	r3, [r7, #12]
 800f3f2:	681b      	ldr	r3, [r3, #0]
 800f3f4:	4a21      	ldr	r2, [pc, #132]	@ (800f47c <HAL_TIM_PWM_Start_DMA+0x43c>)
 800f3f6:	4293      	cmp	r3, r2
 800f3f8:	d013      	beq.n	800f422 <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f3fa:	68fb      	ldr	r3, [r7, #12]
 800f3fc:	681b      	ldr	r3, [r3, #0]
 800f3fe:	4a26      	ldr	r2, [pc, #152]	@ (800f498 <HAL_TIM_PWM_Start_DMA+0x458>)
 800f400:	4293      	cmp	r3, r2
 800f402:	d00e      	beq.n	800f422 <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f404:	68fb      	ldr	r3, [r7, #12]
 800f406:	681b      	ldr	r3, [r3, #0]
 800f408:	4a1d      	ldr	r2, [pc, #116]	@ (800f480 <HAL_TIM_PWM_Start_DMA+0x440>)
 800f40a:	4293      	cmp	r3, r2
 800f40c:	d009      	beq.n	800f422 <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f40e:	68fb      	ldr	r3, [r7, #12]
 800f410:	681b      	ldr	r3, [r3, #0]
 800f412:	4a22      	ldr	r2, [pc, #136]	@ (800f49c <HAL_TIM_PWM_Start_DMA+0x45c>)
 800f414:	4293      	cmp	r3, r2
 800f416:	d004      	beq.n	800f422 <HAL_TIM_PWM_Start_DMA+0x3e2>
 800f418:	68fb      	ldr	r3, [r7, #12]
 800f41a:	681b      	ldr	r3, [r3, #0]
 800f41c:	4a20      	ldr	r2, [pc, #128]	@ (800f4a0 <HAL_TIM_PWM_Start_DMA+0x460>)
 800f41e:	4293      	cmp	r3, r2
 800f420:	d115      	bne.n	800f44e <HAL_TIM_PWM_Start_DMA+0x40e>
 800f422:	68fb      	ldr	r3, [r7, #12]
 800f424:	681b      	ldr	r3, [r3, #0]
 800f426:	689a      	ldr	r2, [r3, #8]
 800f428:	4b1e      	ldr	r3, [pc, #120]	@ (800f4a4 <HAL_TIM_PWM_Start_DMA+0x464>)
 800f42a:	4013      	ands	r3, r2
 800f42c:	613b      	str	r3, [r7, #16]
 800f42e:	693b      	ldr	r3, [r7, #16]
 800f430:	2b06      	cmp	r3, #6
 800f432:	d015      	beq.n	800f460 <HAL_TIM_PWM_Start_DMA+0x420>
 800f434:	693b      	ldr	r3, [r7, #16]
 800f436:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800f43a:	d011      	beq.n	800f460 <HAL_TIM_PWM_Start_DMA+0x420>
 800f43c:	68fb      	ldr	r3, [r7, #12]
 800f43e:	681b      	ldr	r3, [r3, #0]
 800f440:	681a      	ldr	r2, [r3, #0]
 800f442:	68fb      	ldr	r3, [r7, #12]
 800f444:	681b      	ldr	r3, [r3, #0]
 800f446:	f042 0201 	orr.w	r2, r2, #1
 800f44a:	601a      	str	r2, [r3, #0]
 800f44c:	e008      	b.n	800f460 <HAL_TIM_PWM_Start_DMA+0x420>
 800f44e:	68fb      	ldr	r3, [r7, #12]
 800f450:	681b      	ldr	r3, [r3, #0]
 800f452:	681a      	ldr	r2, [r3, #0]
 800f454:	68fb      	ldr	r3, [r7, #12]
 800f456:	681b      	ldr	r3, [r3, #0]
 800f458:	f042 0201 	orr.w	r2, r2, #1
 800f45c:	601a      	str	r2, [r3, #0]
 800f45e:	e000      	b.n	800f462 <HAL_TIM_PWM_Start_DMA+0x422>
 800f460:	bf00      	nop
 800f462:	7dfb      	ldrb	r3, [r7, #23]
 800f464:	4618      	mov	r0, r3
 800f466:	3718      	adds	r7, #24
 800f468:	46bd      	mov	sp, r7
 800f46a:	bd80      	pop	{r7, pc}
 800f46c:	0800fbdb 	.word	0x0800fbdb
 800f470:	0800fc83 	.word	0x0800fc83
 800f474:	0800fb49 	.word	0x0800fb49
 800f478:	40010000 	.word	0x40010000
 800f47c:	40010400 	.word	0x40010400
 800f480:	40014000 	.word	0x40014000
 800f484:	40014400 	.word	0x40014400
 800f488:	40014800 	.word	0x40014800
 800f48c:	40000400 	.word	0x40000400
 800f490:	40000800 	.word	0x40000800
 800f494:	40000c00 	.word	0x40000c00
 800f498:	40001800 	.word	0x40001800
 800f49c:	4000e000 	.word	0x4000e000
 800f4a0:	4000e400 	.word	0x4000e400
 800f4a4:	00010007 	.word	0x00010007

0800f4a8 <HAL_TIM_IRQHandler>:
 800f4a8:	b580      	push	{r7, lr}
 800f4aa:	b084      	sub	sp, #16
 800f4ac:	af00      	add	r7, sp, #0
 800f4ae:	6078      	str	r0, [r7, #4]
 800f4b0:	687b      	ldr	r3, [r7, #4]
 800f4b2:	681b      	ldr	r3, [r3, #0]
 800f4b4:	68db      	ldr	r3, [r3, #12]
 800f4b6:	60fb      	str	r3, [r7, #12]
 800f4b8:	687b      	ldr	r3, [r7, #4]
 800f4ba:	681b      	ldr	r3, [r3, #0]
 800f4bc:	691b      	ldr	r3, [r3, #16]
 800f4be:	60bb      	str	r3, [r7, #8]
 800f4c0:	68bb      	ldr	r3, [r7, #8]
 800f4c2:	f003 0302 	and.w	r3, r3, #2
 800f4c6:	2b00      	cmp	r3, #0
 800f4c8:	d020      	beq.n	800f50c <HAL_TIM_IRQHandler+0x64>
 800f4ca:	68fb      	ldr	r3, [r7, #12]
 800f4cc:	f003 0302 	and.w	r3, r3, #2
 800f4d0:	2b00      	cmp	r3, #0
 800f4d2:	d01b      	beq.n	800f50c <HAL_TIM_IRQHandler+0x64>
 800f4d4:	687b      	ldr	r3, [r7, #4]
 800f4d6:	681b      	ldr	r3, [r3, #0]
 800f4d8:	f06f 0202 	mvn.w	r2, #2
 800f4dc:	611a      	str	r2, [r3, #16]
 800f4de:	687b      	ldr	r3, [r7, #4]
 800f4e0:	2201      	movs	r2, #1
 800f4e2:	771a      	strb	r2, [r3, #28]
 800f4e4:	687b      	ldr	r3, [r7, #4]
 800f4e6:	681b      	ldr	r3, [r3, #0]
 800f4e8:	699b      	ldr	r3, [r3, #24]
 800f4ea:	f003 0303 	and.w	r3, r3, #3
 800f4ee:	2b00      	cmp	r3, #0
 800f4f0:	d003      	beq.n	800f4fa <HAL_TIM_IRQHandler+0x52>
 800f4f2:	6878      	ldr	r0, [r7, #4]
 800f4f4:	f000 faf6 	bl	800fae4 <HAL_TIM_IC_CaptureCallback>
 800f4f8:	e005      	b.n	800f506 <HAL_TIM_IRQHandler+0x5e>
 800f4fa:	6878      	ldr	r0, [r7, #4]
 800f4fc:	f000 fae8 	bl	800fad0 <HAL_TIM_OC_DelayElapsedCallback>
 800f500:	6878      	ldr	r0, [r7, #4]
 800f502:	f000 faf9 	bl	800faf8 <HAL_TIM_PWM_PulseFinishedCallback>
 800f506:	687b      	ldr	r3, [r7, #4]
 800f508:	2200      	movs	r2, #0
 800f50a:	771a      	strb	r2, [r3, #28]
 800f50c:	68bb      	ldr	r3, [r7, #8]
 800f50e:	f003 0304 	and.w	r3, r3, #4
 800f512:	2b00      	cmp	r3, #0
 800f514:	d020      	beq.n	800f558 <HAL_TIM_IRQHandler+0xb0>
 800f516:	68fb      	ldr	r3, [r7, #12]
 800f518:	f003 0304 	and.w	r3, r3, #4
 800f51c:	2b00      	cmp	r3, #0
 800f51e:	d01b      	beq.n	800f558 <HAL_TIM_IRQHandler+0xb0>
 800f520:	687b      	ldr	r3, [r7, #4]
 800f522:	681b      	ldr	r3, [r3, #0]
 800f524:	f06f 0204 	mvn.w	r2, #4
 800f528:	611a      	str	r2, [r3, #16]
 800f52a:	687b      	ldr	r3, [r7, #4]
 800f52c:	2202      	movs	r2, #2
 800f52e:	771a      	strb	r2, [r3, #28]
 800f530:	687b      	ldr	r3, [r7, #4]
 800f532:	681b      	ldr	r3, [r3, #0]
 800f534:	699b      	ldr	r3, [r3, #24]
 800f536:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800f53a:	2b00      	cmp	r3, #0
 800f53c:	d003      	beq.n	800f546 <HAL_TIM_IRQHandler+0x9e>
 800f53e:	6878      	ldr	r0, [r7, #4]
 800f540:	f000 fad0 	bl	800fae4 <HAL_TIM_IC_CaptureCallback>
 800f544:	e005      	b.n	800f552 <HAL_TIM_IRQHandler+0xaa>
 800f546:	6878      	ldr	r0, [r7, #4]
 800f548:	f000 fac2 	bl	800fad0 <HAL_TIM_OC_DelayElapsedCallback>
 800f54c:	6878      	ldr	r0, [r7, #4]
 800f54e:	f000 fad3 	bl	800faf8 <HAL_TIM_PWM_PulseFinishedCallback>
 800f552:	687b      	ldr	r3, [r7, #4]
 800f554:	2200      	movs	r2, #0
 800f556:	771a      	strb	r2, [r3, #28]
 800f558:	68bb      	ldr	r3, [r7, #8]
 800f55a:	f003 0308 	and.w	r3, r3, #8
 800f55e:	2b00      	cmp	r3, #0
 800f560:	d020      	beq.n	800f5a4 <HAL_TIM_IRQHandler+0xfc>
 800f562:	68fb      	ldr	r3, [r7, #12]
 800f564:	f003 0308 	and.w	r3, r3, #8
 800f568:	2b00      	cmp	r3, #0
 800f56a:	d01b      	beq.n	800f5a4 <HAL_TIM_IRQHandler+0xfc>
 800f56c:	687b      	ldr	r3, [r7, #4]
 800f56e:	681b      	ldr	r3, [r3, #0]
 800f570:	f06f 0208 	mvn.w	r2, #8
 800f574:	611a      	str	r2, [r3, #16]
 800f576:	687b      	ldr	r3, [r7, #4]
 800f578:	2204      	movs	r2, #4
 800f57a:	771a      	strb	r2, [r3, #28]
 800f57c:	687b      	ldr	r3, [r7, #4]
 800f57e:	681b      	ldr	r3, [r3, #0]
 800f580:	69db      	ldr	r3, [r3, #28]
 800f582:	f003 0303 	and.w	r3, r3, #3
 800f586:	2b00      	cmp	r3, #0
 800f588:	d003      	beq.n	800f592 <HAL_TIM_IRQHandler+0xea>
 800f58a:	6878      	ldr	r0, [r7, #4]
 800f58c:	f000 faaa 	bl	800fae4 <HAL_TIM_IC_CaptureCallback>
 800f590:	e005      	b.n	800f59e <HAL_TIM_IRQHandler+0xf6>
 800f592:	6878      	ldr	r0, [r7, #4]
 800f594:	f000 fa9c 	bl	800fad0 <HAL_TIM_OC_DelayElapsedCallback>
 800f598:	6878      	ldr	r0, [r7, #4]
 800f59a:	f000 faad 	bl	800faf8 <HAL_TIM_PWM_PulseFinishedCallback>
 800f59e:	687b      	ldr	r3, [r7, #4]
 800f5a0:	2200      	movs	r2, #0
 800f5a2:	771a      	strb	r2, [r3, #28]
 800f5a4:	68bb      	ldr	r3, [r7, #8]
 800f5a6:	f003 0310 	and.w	r3, r3, #16
 800f5aa:	2b00      	cmp	r3, #0
 800f5ac:	d020      	beq.n	800f5f0 <HAL_TIM_IRQHandler+0x148>
 800f5ae:	68fb      	ldr	r3, [r7, #12]
 800f5b0:	f003 0310 	and.w	r3, r3, #16
 800f5b4:	2b00      	cmp	r3, #0
 800f5b6:	d01b      	beq.n	800f5f0 <HAL_TIM_IRQHandler+0x148>
 800f5b8:	687b      	ldr	r3, [r7, #4]
 800f5ba:	681b      	ldr	r3, [r3, #0]
 800f5bc:	f06f 0210 	mvn.w	r2, #16
 800f5c0:	611a      	str	r2, [r3, #16]
 800f5c2:	687b      	ldr	r3, [r7, #4]
 800f5c4:	2208      	movs	r2, #8
 800f5c6:	771a      	strb	r2, [r3, #28]
 800f5c8:	687b      	ldr	r3, [r7, #4]
 800f5ca:	681b      	ldr	r3, [r3, #0]
 800f5cc:	69db      	ldr	r3, [r3, #28]
 800f5ce:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800f5d2:	2b00      	cmp	r3, #0
 800f5d4:	d003      	beq.n	800f5de <HAL_TIM_IRQHandler+0x136>
 800f5d6:	6878      	ldr	r0, [r7, #4]
 800f5d8:	f000 fa84 	bl	800fae4 <HAL_TIM_IC_CaptureCallback>
 800f5dc:	e005      	b.n	800f5ea <HAL_TIM_IRQHandler+0x142>
 800f5de:	6878      	ldr	r0, [r7, #4]
 800f5e0:	f000 fa76 	bl	800fad0 <HAL_TIM_OC_DelayElapsedCallback>
 800f5e4:	6878      	ldr	r0, [r7, #4]
 800f5e6:	f000 fa87 	bl	800faf8 <HAL_TIM_PWM_PulseFinishedCallback>
 800f5ea:	687b      	ldr	r3, [r7, #4]
 800f5ec:	2200      	movs	r2, #0
 800f5ee:	771a      	strb	r2, [r3, #28]
 800f5f0:	68bb      	ldr	r3, [r7, #8]
 800f5f2:	f003 0301 	and.w	r3, r3, #1
 800f5f6:	2b00      	cmp	r3, #0
 800f5f8:	d00c      	beq.n	800f614 <HAL_TIM_IRQHandler+0x16c>
 800f5fa:	68fb      	ldr	r3, [r7, #12]
 800f5fc:	f003 0301 	and.w	r3, r3, #1
 800f600:	2b00      	cmp	r3, #0
 800f602:	d007      	beq.n	800f614 <HAL_TIM_IRQHandler+0x16c>
 800f604:	687b      	ldr	r3, [r7, #4]
 800f606:	681b      	ldr	r3, [r3, #0]
 800f608:	f06f 0201 	mvn.w	r2, #1
 800f60c:	611a      	str	r2, [r3, #16]
 800f60e:	6878      	ldr	r0, [r7, #4]
 800f610:	f7f1 fa52 	bl	8000ab8 <HAL_TIM_PeriodElapsedCallback>
 800f614:	68bb      	ldr	r3, [r7, #8]
 800f616:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f61a:	2b00      	cmp	r3, #0
 800f61c:	d104      	bne.n	800f628 <HAL_TIM_IRQHandler+0x180>
 800f61e:	68bb      	ldr	r3, [r7, #8]
 800f620:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800f624:	2b00      	cmp	r3, #0
 800f626:	d00c      	beq.n	800f642 <HAL_TIM_IRQHandler+0x19a>
 800f628:	68fb      	ldr	r3, [r7, #12]
 800f62a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f62e:	2b00      	cmp	r3, #0
 800f630:	d007      	beq.n	800f642 <HAL_TIM_IRQHandler+0x19a>
 800f632:	687b      	ldr	r3, [r7, #4]
 800f634:	681b      	ldr	r3, [r3, #0]
 800f636:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 800f63a:	611a      	str	r2, [r3, #16]
 800f63c:	6878      	ldr	r0, [r7, #4]
 800f63e:	f001 f847 	bl	80106d0 <HAL_TIMEx_BreakCallback>
 800f642:	68bb      	ldr	r3, [r7, #8]
 800f644:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f648:	2b00      	cmp	r3, #0
 800f64a:	d00c      	beq.n	800f666 <HAL_TIM_IRQHandler+0x1be>
 800f64c:	68fb      	ldr	r3, [r7, #12]
 800f64e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f652:	2b00      	cmp	r3, #0
 800f654:	d007      	beq.n	800f666 <HAL_TIM_IRQHandler+0x1be>
 800f656:	687b      	ldr	r3, [r7, #4]
 800f658:	681b      	ldr	r3, [r3, #0]
 800f65a:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 800f65e:	611a      	str	r2, [r3, #16]
 800f660:	6878      	ldr	r0, [r7, #4]
 800f662:	f001 f83f 	bl	80106e4 <HAL_TIMEx_Break2Callback>
 800f666:	68bb      	ldr	r3, [r7, #8]
 800f668:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800f66c:	2b00      	cmp	r3, #0
 800f66e:	d00c      	beq.n	800f68a <HAL_TIM_IRQHandler+0x1e2>
 800f670:	68fb      	ldr	r3, [r7, #12]
 800f672:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800f676:	2b00      	cmp	r3, #0
 800f678:	d007      	beq.n	800f68a <HAL_TIM_IRQHandler+0x1e2>
 800f67a:	687b      	ldr	r3, [r7, #4]
 800f67c:	681b      	ldr	r3, [r3, #0]
 800f67e:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800f682:	611a      	str	r2, [r3, #16]
 800f684:	6878      	ldr	r0, [r7, #4]
 800f686:	f000 fa4b 	bl	800fb20 <HAL_TIM_TriggerCallback>
 800f68a:	68bb      	ldr	r3, [r7, #8]
 800f68c:	f003 0320 	and.w	r3, r3, #32
 800f690:	2b00      	cmp	r3, #0
 800f692:	d00c      	beq.n	800f6ae <HAL_TIM_IRQHandler+0x206>
 800f694:	68fb      	ldr	r3, [r7, #12]
 800f696:	f003 0320 	and.w	r3, r3, #32
 800f69a:	2b00      	cmp	r3, #0
 800f69c:	d007      	beq.n	800f6ae <HAL_TIM_IRQHandler+0x206>
 800f69e:	687b      	ldr	r3, [r7, #4]
 800f6a0:	681b      	ldr	r3, [r3, #0]
 800f6a2:	f06f 0220 	mvn.w	r2, #32
 800f6a6:	611a      	str	r2, [r3, #16]
 800f6a8:	6878      	ldr	r0, [r7, #4]
 800f6aa:	f001 f807 	bl	80106bc <HAL_TIMEx_CommutCallback>
 800f6ae:	bf00      	nop
 800f6b0:	3710      	adds	r7, #16
 800f6b2:	46bd      	mov	sp, r7
 800f6b4:	bd80      	pop	{r7, pc}
	...

0800f6b8 <HAL_TIM_PWM_ConfigChannel>:
 800f6b8:	b580      	push	{r7, lr}
 800f6ba:	b086      	sub	sp, #24
 800f6bc:	af00      	add	r7, sp, #0
 800f6be:	60f8      	str	r0, [r7, #12]
 800f6c0:	60b9      	str	r1, [r7, #8]
 800f6c2:	607a      	str	r2, [r7, #4]
 800f6c4:	2300      	movs	r3, #0
 800f6c6:	75fb      	strb	r3, [r7, #23]
 800f6c8:	68fb      	ldr	r3, [r7, #12]
 800f6ca:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800f6ce:	2b01      	cmp	r3, #1
 800f6d0:	d101      	bne.n	800f6d6 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800f6d2:	2302      	movs	r3, #2
 800f6d4:	e0ff      	b.n	800f8d6 <HAL_TIM_PWM_ConfigChannel+0x21e>
 800f6d6:	68fb      	ldr	r3, [r7, #12]
 800f6d8:	2201      	movs	r2, #1
 800f6da:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800f6de:	687b      	ldr	r3, [r7, #4]
 800f6e0:	2b14      	cmp	r3, #20
 800f6e2:	f200 80f0 	bhi.w	800f8c6 <HAL_TIM_PWM_ConfigChannel+0x20e>
 800f6e6:	a201      	add	r2, pc, #4	@ (adr r2, 800f6ec <HAL_TIM_PWM_ConfigChannel+0x34>)
 800f6e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f6ec:	0800f741 	.word	0x0800f741
 800f6f0:	0800f8c7 	.word	0x0800f8c7
 800f6f4:	0800f8c7 	.word	0x0800f8c7
 800f6f8:	0800f8c7 	.word	0x0800f8c7
 800f6fc:	0800f781 	.word	0x0800f781
 800f700:	0800f8c7 	.word	0x0800f8c7
 800f704:	0800f8c7 	.word	0x0800f8c7
 800f708:	0800f8c7 	.word	0x0800f8c7
 800f70c:	0800f7c3 	.word	0x0800f7c3
 800f710:	0800f8c7 	.word	0x0800f8c7
 800f714:	0800f8c7 	.word	0x0800f8c7
 800f718:	0800f8c7 	.word	0x0800f8c7
 800f71c:	0800f803 	.word	0x0800f803
 800f720:	0800f8c7 	.word	0x0800f8c7
 800f724:	0800f8c7 	.word	0x0800f8c7
 800f728:	0800f8c7 	.word	0x0800f8c7
 800f72c:	0800f845 	.word	0x0800f845
 800f730:	0800f8c7 	.word	0x0800f8c7
 800f734:	0800f8c7 	.word	0x0800f8c7
 800f738:	0800f8c7 	.word	0x0800f8c7
 800f73c:	0800f885 	.word	0x0800f885
 800f740:	68fb      	ldr	r3, [r7, #12]
 800f742:	681b      	ldr	r3, [r3, #0]
 800f744:	68b9      	ldr	r1, [r7, #8]
 800f746:	4618      	mov	r0, r3
 800f748:	f000 fb82 	bl	800fe50 <TIM_OC1_SetConfig>
 800f74c:	68fb      	ldr	r3, [r7, #12]
 800f74e:	681b      	ldr	r3, [r3, #0]
 800f750:	699a      	ldr	r2, [r3, #24]
 800f752:	68fb      	ldr	r3, [r7, #12]
 800f754:	681b      	ldr	r3, [r3, #0]
 800f756:	f042 0208 	orr.w	r2, r2, #8
 800f75a:	619a      	str	r2, [r3, #24]
 800f75c:	68fb      	ldr	r3, [r7, #12]
 800f75e:	681b      	ldr	r3, [r3, #0]
 800f760:	699a      	ldr	r2, [r3, #24]
 800f762:	68fb      	ldr	r3, [r7, #12]
 800f764:	681b      	ldr	r3, [r3, #0]
 800f766:	f022 0204 	bic.w	r2, r2, #4
 800f76a:	619a      	str	r2, [r3, #24]
 800f76c:	68fb      	ldr	r3, [r7, #12]
 800f76e:	681b      	ldr	r3, [r3, #0]
 800f770:	6999      	ldr	r1, [r3, #24]
 800f772:	68bb      	ldr	r3, [r7, #8]
 800f774:	691a      	ldr	r2, [r3, #16]
 800f776:	68fb      	ldr	r3, [r7, #12]
 800f778:	681b      	ldr	r3, [r3, #0]
 800f77a:	430a      	orrs	r2, r1
 800f77c:	619a      	str	r2, [r3, #24]
 800f77e:	e0a5      	b.n	800f8cc <HAL_TIM_PWM_ConfigChannel+0x214>
 800f780:	68fb      	ldr	r3, [r7, #12]
 800f782:	681b      	ldr	r3, [r3, #0]
 800f784:	68b9      	ldr	r1, [r7, #8]
 800f786:	4618      	mov	r0, r3
 800f788:	f000 fbf2 	bl	800ff70 <TIM_OC2_SetConfig>
 800f78c:	68fb      	ldr	r3, [r7, #12]
 800f78e:	681b      	ldr	r3, [r3, #0]
 800f790:	699a      	ldr	r2, [r3, #24]
 800f792:	68fb      	ldr	r3, [r7, #12]
 800f794:	681b      	ldr	r3, [r3, #0]
 800f796:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800f79a:	619a      	str	r2, [r3, #24]
 800f79c:	68fb      	ldr	r3, [r7, #12]
 800f79e:	681b      	ldr	r3, [r3, #0]
 800f7a0:	699a      	ldr	r2, [r3, #24]
 800f7a2:	68fb      	ldr	r3, [r7, #12]
 800f7a4:	681b      	ldr	r3, [r3, #0]
 800f7a6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800f7aa:	619a      	str	r2, [r3, #24]
 800f7ac:	68fb      	ldr	r3, [r7, #12]
 800f7ae:	681b      	ldr	r3, [r3, #0]
 800f7b0:	6999      	ldr	r1, [r3, #24]
 800f7b2:	68bb      	ldr	r3, [r7, #8]
 800f7b4:	691b      	ldr	r3, [r3, #16]
 800f7b6:	021a      	lsls	r2, r3, #8
 800f7b8:	68fb      	ldr	r3, [r7, #12]
 800f7ba:	681b      	ldr	r3, [r3, #0]
 800f7bc:	430a      	orrs	r2, r1
 800f7be:	619a      	str	r2, [r3, #24]
 800f7c0:	e084      	b.n	800f8cc <HAL_TIM_PWM_ConfigChannel+0x214>
 800f7c2:	68fb      	ldr	r3, [r7, #12]
 800f7c4:	681b      	ldr	r3, [r3, #0]
 800f7c6:	68b9      	ldr	r1, [r7, #8]
 800f7c8:	4618      	mov	r0, r3
 800f7ca:	f000 fc5b 	bl	8010084 <TIM_OC3_SetConfig>
 800f7ce:	68fb      	ldr	r3, [r7, #12]
 800f7d0:	681b      	ldr	r3, [r3, #0]
 800f7d2:	69da      	ldr	r2, [r3, #28]
 800f7d4:	68fb      	ldr	r3, [r7, #12]
 800f7d6:	681b      	ldr	r3, [r3, #0]
 800f7d8:	f042 0208 	orr.w	r2, r2, #8
 800f7dc:	61da      	str	r2, [r3, #28]
 800f7de:	68fb      	ldr	r3, [r7, #12]
 800f7e0:	681b      	ldr	r3, [r3, #0]
 800f7e2:	69da      	ldr	r2, [r3, #28]
 800f7e4:	68fb      	ldr	r3, [r7, #12]
 800f7e6:	681b      	ldr	r3, [r3, #0]
 800f7e8:	f022 0204 	bic.w	r2, r2, #4
 800f7ec:	61da      	str	r2, [r3, #28]
 800f7ee:	68fb      	ldr	r3, [r7, #12]
 800f7f0:	681b      	ldr	r3, [r3, #0]
 800f7f2:	69d9      	ldr	r1, [r3, #28]
 800f7f4:	68bb      	ldr	r3, [r7, #8]
 800f7f6:	691a      	ldr	r2, [r3, #16]
 800f7f8:	68fb      	ldr	r3, [r7, #12]
 800f7fa:	681b      	ldr	r3, [r3, #0]
 800f7fc:	430a      	orrs	r2, r1
 800f7fe:	61da      	str	r2, [r3, #28]
 800f800:	e064      	b.n	800f8cc <HAL_TIM_PWM_ConfigChannel+0x214>
 800f802:	68fb      	ldr	r3, [r7, #12]
 800f804:	681b      	ldr	r3, [r3, #0]
 800f806:	68b9      	ldr	r1, [r7, #8]
 800f808:	4618      	mov	r0, r3
 800f80a:	f000 fcc3 	bl	8010194 <TIM_OC4_SetConfig>
 800f80e:	68fb      	ldr	r3, [r7, #12]
 800f810:	681b      	ldr	r3, [r3, #0]
 800f812:	69da      	ldr	r2, [r3, #28]
 800f814:	68fb      	ldr	r3, [r7, #12]
 800f816:	681b      	ldr	r3, [r3, #0]
 800f818:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800f81c:	61da      	str	r2, [r3, #28]
 800f81e:	68fb      	ldr	r3, [r7, #12]
 800f820:	681b      	ldr	r3, [r3, #0]
 800f822:	69da      	ldr	r2, [r3, #28]
 800f824:	68fb      	ldr	r3, [r7, #12]
 800f826:	681b      	ldr	r3, [r3, #0]
 800f828:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800f82c:	61da      	str	r2, [r3, #28]
 800f82e:	68fb      	ldr	r3, [r7, #12]
 800f830:	681b      	ldr	r3, [r3, #0]
 800f832:	69d9      	ldr	r1, [r3, #28]
 800f834:	68bb      	ldr	r3, [r7, #8]
 800f836:	691b      	ldr	r3, [r3, #16]
 800f838:	021a      	lsls	r2, r3, #8
 800f83a:	68fb      	ldr	r3, [r7, #12]
 800f83c:	681b      	ldr	r3, [r3, #0]
 800f83e:	430a      	orrs	r2, r1
 800f840:	61da      	str	r2, [r3, #28]
 800f842:	e043      	b.n	800f8cc <HAL_TIM_PWM_ConfigChannel+0x214>
 800f844:	68fb      	ldr	r3, [r7, #12]
 800f846:	681b      	ldr	r3, [r3, #0]
 800f848:	68b9      	ldr	r1, [r7, #8]
 800f84a:	4618      	mov	r0, r3
 800f84c:	f000 fd0c 	bl	8010268 <TIM_OC5_SetConfig>
 800f850:	68fb      	ldr	r3, [r7, #12]
 800f852:	681b      	ldr	r3, [r3, #0]
 800f854:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800f856:	68fb      	ldr	r3, [r7, #12]
 800f858:	681b      	ldr	r3, [r3, #0]
 800f85a:	f042 0208 	orr.w	r2, r2, #8
 800f85e:	655a      	str	r2, [r3, #84]	@ 0x54
 800f860:	68fb      	ldr	r3, [r7, #12]
 800f862:	681b      	ldr	r3, [r3, #0]
 800f864:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800f866:	68fb      	ldr	r3, [r7, #12]
 800f868:	681b      	ldr	r3, [r3, #0]
 800f86a:	f022 0204 	bic.w	r2, r2, #4
 800f86e:	655a      	str	r2, [r3, #84]	@ 0x54
 800f870:	68fb      	ldr	r3, [r7, #12]
 800f872:	681b      	ldr	r3, [r3, #0]
 800f874:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 800f876:	68bb      	ldr	r3, [r7, #8]
 800f878:	691a      	ldr	r2, [r3, #16]
 800f87a:	68fb      	ldr	r3, [r7, #12]
 800f87c:	681b      	ldr	r3, [r3, #0]
 800f87e:	430a      	orrs	r2, r1
 800f880:	655a      	str	r2, [r3, #84]	@ 0x54
 800f882:	e023      	b.n	800f8cc <HAL_TIM_PWM_ConfigChannel+0x214>
 800f884:	68fb      	ldr	r3, [r7, #12]
 800f886:	681b      	ldr	r3, [r3, #0]
 800f888:	68b9      	ldr	r1, [r7, #8]
 800f88a:	4618      	mov	r0, r3
 800f88c:	f000 fd50 	bl	8010330 <TIM_OC6_SetConfig>
 800f890:	68fb      	ldr	r3, [r7, #12]
 800f892:	681b      	ldr	r3, [r3, #0]
 800f894:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800f896:	68fb      	ldr	r3, [r7, #12]
 800f898:	681b      	ldr	r3, [r3, #0]
 800f89a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800f89e:	655a      	str	r2, [r3, #84]	@ 0x54
 800f8a0:	68fb      	ldr	r3, [r7, #12]
 800f8a2:	681b      	ldr	r3, [r3, #0]
 800f8a4:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800f8a6:	68fb      	ldr	r3, [r7, #12]
 800f8a8:	681b      	ldr	r3, [r3, #0]
 800f8aa:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800f8ae:	655a      	str	r2, [r3, #84]	@ 0x54
 800f8b0:	68fb      	ldr	r3, [r7, #12]
 800f8b2:	681b      	ldr	r3, [r3, #0]
 800f8b4:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 800f8b6:	68bb      	ldr	r3, [r7, #8]
 800f8b8:	691b      	ldr	r3, [r3, #16]
 800f8ba:	021a      	lsls	r2, r3, #8
 800f8bc:	68fb      	ldr	r3, [r7, #12]
 800f8be:	681b      	ldr	r3, [r3, #0]
 800f8c0:	430a      	orrs	r2, r1
 800f8c2:	655a      	str	r2, [r3, #84]	@ 0x54
 800f8c4:	e002      	b.n	800f8cc <HAL_TIM_PWM_ConfigChannel+0x214>
 800f8c6:	2301      	movs	r3, #1
 800f8c8:	75fb      	strb	r3, [r7, #23]
 800f8ca:	bf00      	nop
 800f8cc:	68fb      	ldr	r3, [r7, #12]
 800f8ce:	2200      	movs	r2, #0
 800f8d0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800f8d4:	7dfb      	ldrb	r3, [r7, #23]
 800f8d6:	4618      	mov	r0, r3
 800f8d8:	3718      	adds	r7, #24
 800f8da:	46bd      	mov	sp, r7
 800f8dc:	bd80      	pop	{r7, pc}
 800f8de:	bf00      	nop

0800f8e0 <HAL_TIM_ConfigClockSource>:
 800f8e0:	b580      	push	{r7, lr}
 800f8e2:	b084      	sub	sp, #16
 800f8e4:	af00      	add	r7, sp, #0
 800f8e6:	6078      	str	r0, [r7, #4]
 800f8e8:	6039      	str	r1, [r7, #0]
 800f8ea:	2300      	movs	r3, #0
 800f8ec:	73fb      	strb	r3, [r7, #15]
 800f8ee:	687b      	ldr	r3, [r7, #4]
 800f8f0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800f8f4:	2b01      	cmp	r3, #1
 800f8f6:	d101      	bne.n	800f8fc <HAL_TIM_ConfigClockSource+0x1c>
 800f8f8:	2302      	movs	r3, #2
 800f8fa:	e0dc      	b.n	800fab6 <HAL_TIM_ConfigClockSource+0x1d6>
 800f8fc:	687b      	ldr	r3, [r7, #4]
 800f8fe:	2201      	movs	r2, #1
 800f900:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800f904:	687b      	ldr	r3, [r7, #4]
 800f906:	2202      	movs	r2, #2
 800f908:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800f90c:	687b      	ldr	r3, [r7, #4]
 800f90e:	681b      	ldr	r3, [r3, #0]
 800f910:	689b      	ldr	r3, [r3, #8]
 800f912:	60bb      	str	r3, [r7, #8]
 800f914:	68ba      	ldr	r2, [r7, #8]
 800f916:	4b6a      	ldr	r3, [pc, #424]	@ (800fac0 <HAL_TIM_ConfigClockSource+0x1e0>)
 800f918:	4013      	ands	r3, r2
 800f91a:	60bb      	str	r3, [r7, #8]
 800f91c:	68bb      	ldr	r3, [r7, #8]
 800f91e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800f922:	60bb      	str	r3, [r7, #8]
 800f924:	687b      	ldr	r3, [r7, #4]
 800f926:	681b      	ldr	r3, [r3, #0]
 800f928:	68ba      	ldr	r2, [r7, #8]
 800f92a:	609a      	str	r2, [r3, #8]
 800f92c:	683b      	ldr	r3, [r7, #0]
 800f92e:	681b      	ldr	r3, [r3, #0]
 800f930:	4a64      	ldr	r2, [pc, #400]	@ (800fac4 <HAL_TIM_ConfigClockSource+0x1e4>)
 800f932:	4293      	cmp	r3, r2
 800f934:	f000 80a9 	beq.w	800fa8a <HAL_TIM_ConfigClockSource+0x1aa>
 800f938:	4a62      	ldr	r2, [pc, #392]	@ (800fac4 <HAL_TIM_ConfigClockSource+0x1e4>)
 800f93a:	4293      	cmp	r3, r2
 800f93c:	f200 80ae 	bhi.w	800fa9c <HAL_TIM_ConfigClockSource+0x1bc>
 800f940:	4a61      	ldr	r2, [pc, #388]	@ (800fac8 <HAL_TIM_ConfigClockSource+0x1e8>)
 800f942:	4293      	cmp	r3, r2
 800f944:	f000 80a1 	beq.w	800fa8a <HAL_TIM_ConfigClockSource+0x1aa>
 800f948:	4a5f      	ldr	r2, [pc, #380]	@ (800fac8 <HAL_TIM_ConfigClockSource+0x1e8>)
 800f94a:	4293      	cmp	r3, r2
 800f94c:	f200 80a6 	bhi.w	800fa9c <HAL_TIM_ConfigClockSource+0x1bc>
 800f950:	4a5e      	ldr	r2, [pc, #376]	@ (800facc <HAL_TIM_ConfigClockSource+0x1ec>)
 800f952:	4293      	cmp	r3, r2
 800f954:	f000 8099 	beq.w	800fa8a <HAL_TIM_ConfigClockSource+0x1aa>
 800f958:	4a5c      	ldr	r2, [pc, #368]	@ (800facc <HAL_TIM_ConfigClockSource+0x1ec>)
 800f95a:	4293      	cmp	r3, r2
 800f95c:	f200 809e 	bhi.w	800fa9c <HAL_TIM_ConfigClockSource+0x1bc>
 800f960:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 800f964:	f000 8091 	beq.w	800fa8a <HAL_TIM_ConfigClockSource+0x1aa>
 800f968:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 800f96c:	f200 8096 	bhi.w	800fa9c <HAL_TIM_ConfigClockSource+0x1bc>
 800f970:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800f974:	f000 8089 	beq.w	800fa8a <HAL_TIM_ConfigClockSource+0x1aa>
 800f978:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800f97c:	f200 808e 	bhi.w	800fa9c <HAL_TIM_ConfigClockSource+0x1bc>
 800f980:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800f984:	d03e      	beq.n	800fa04 <HAL_TIM_ConfigClockSource+0x124>
 800f986:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800f98a:	f200 8087 	bhi.w	800fa9c <HAL_TIM_ConfigClockSource+0x1bc>
 800f98e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800f992:	f000 8086 	beq.w	800faa2 <HAL_TIM_ConfigClockSource+0x1c2>
 800f996:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800f99a:	d87f      	bhi.n	800fa9c <HAL_TIM_ConfigClockSource+0x1bc>
 800f99c:	2b70      	cmp	r3, #112	@ 0x70
 800f99e:	d01a      	beq.n	800f9d6 <HAL_TIM_ConfigClockSource+0xf6>
 800f9a0:	2b70      	cmp	r3, #112	@ 0x70
 800f9a2:	d87b      	bhi.n	800fa9c <HAL_TIM_ConfigClockSource+0x1bc>
 800f9a4:	2b60      	cmp	r3, #96	@ 0x60
 800f9a6:	d050      	beq.n	800fa4a <HAL_TIM_ConfigClockSource+0x16a>
 800f9a8:	2b60      	cmp	r3, #96	@ 0x60
 800f9aa:	d877      	bhi.n	800fa9c <HAL_TIM_ConfigClockSource+0x1bc>
 800f9ac:	2b50      	cmp	r3, #80	@ 0x50
 800f9ae:	d03c      	beq.n	800fa2a <HAL_TIM_ConfigClockSource+0x14a>
 800f9b0:	2b50      	cmp	r3, #80	@ 0x50
 800f9b2:	d873      	bhi.n	800fa9c <HAL_TIM_ConfigClockSource+0x1bc>
 800f9b4:	2b40      	cmp	r3, #64	@ 0x40
 800f9b6:	d058      	beq.n	800fa6a <HAL_TIM_ConfigClockSource+0x18a>
 800f9b8:	2b40      	cmp	r3, #64	@ 0x40
 800f9ba:	d86f      	bhi.n	800fa9c <HAL_TIM_ConfigClockSource+0x1bc>
 800f9bc:	2b30      	cmp	r3, #48	@ 0x30
 800f9be:	d064      	beq.n	800fa8a <HAL_TIM_ConfigClockSource+0x1aa>
 800f9c0:	2b30      	cmp	r3, #48	@ 0x30
 800f9c2:	d86b      	bhi.n	800fa9c <HAL_TIM_ConfigClockSource+0x1bc>
 800f9c4:	2b20      	cmp	r3, #32
 800f9c6:	d060      	beq.n	800fa8a <HAL_TIM_ConfigClockSource+0x1aa>
 800f9c8:	2b20      	cmp	r3, #32
 800f9ca:	d867      	bhi.n	800fa9c <HAL_TIM_ConfigClockSource+0x1bc>
 800f9cc:	2b00      	cmp	r3, #0
 800f9ce:	d05c      	beq.n	800fa8a <HAL_TIM_ConfigClockSource+0x1aa>
 800f9d0:	2b10      	cmp	r3, #16
 800f9d2:	d05a      	beq.n	800fa8a <HAL_TIM_ConfigClockSource+0x1aa>
 800f9d4:	e062      	b.n	800fa9c <HAL_TIM_ConfigClockSource+0x1bc>
 800f9d6:	687b      	ldr	r3, [r7, #4]
 800f9d8:	6818      	ldr	r0, [r3, #0]
 800f9da:	683b      	ldr	r3, [r7, #0]
 800f9dc:	6899      	ldr	r1, [r3, #8]
 800f9de:	683b      	ldr	r3, [r7, #0]
 800f9e0:	685a      	ldr	r2, [r3, #4]
 800f9e2:	683b      	ldr	r3, [r7, #0]
 800f9e4:	68db      	ldr	r3, [r3, #12]
 800f9e6:	f000 fd87 	bl	80104f8 <TIM_ETR_SetConfig>
 800f9ea:	687b      	ldr	r3, [r7, #4]
 800f9ec:	681b      	ldr	r3, [r3, #0]
 800f9ee:	689b      	ldr	r3, [r3, #8]
 800f9f0:	60bb      	str	r3, [r7, #8]
 800f9f2:	68bb      	ldr	r3, [r7, #8]
 800f9f4:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 800f9f8:	60bb      	str	r3, [r7, #8]
 800f9fa:	687b      	ldr	r3, [r7, #4]
 800f9fc:	681b      	ldr	r3, [r3, #0]
 800f9fe:	68ba      	ldr	r2, [r7, #8]
 800fa00:	609a      	str	r2, [r3, #8]
 800fa02:	e04f      	b.n	800faa4 <HAL_TIM_ConfigClockSource+0x1c4>
 800fa04:	687b      	ldr	r3, [r7, #4]
 800fa06:	6818      	ldr	r0, [r3, #0]
 800fa08:	683b      	ldr	r3, [r7, #0]
 800fa0a:	6899      	ldr	r1, [r3, #8]
 800fa0c:	683b      	ldr	r3, [r7, #0]
 800fa0e:	685a      	ldr	r2, [r3, #4]
 800fa10:	683b      	ldr	r3, [r7, #0]
 800fa12:	68db      	ldr	r3, [r3, #12]
 800fa14:	f000 fd70 	bl	80104f8 <TIM_ETR_SetConfig>
 800fa18:	687b      	ldr	r3, [r7, #4]
 800fa1a:	681b      	ldr	r3, [r3, #0]
 800fa1c:	689a      	ldr	r2, [r3, #8]
 800fa1e:	687b      	ldr	r3, [r7, #4]
 800fa20:	681b      	ldr	r3, [r3, #0]
 800fa22:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800fa26:	609a      	str	r2, [r3, #8]
 800fa28:	e03c      	b.n	800faa4 <HAL_TIM_ConfigClockSource+0x1c4>
 800fa2a:	687b      	ldr	r3, [r7, #4]
 800fa2c:	6818      	ldr	r0, [r3, #0]
 800fa2e:	683b      	ldr	r3, [r7, #0]
 800fa30:	6859      	ldr	r1, [r3, #4]
 800fa32:	683b      	ldr	r3, [r7, #0]
 800fa34:	68db      	ldr	r3, [r3, #12]
 800fa36:	461a      	mov	r2, r3
 800fa38:	f000 fce0 	bl	80103fc <TIM_TI1_ConfigInputStage>
 800fa3c:	687b      	ldr	r3, [r7, #4]
 800fa3e:	681b      	ldr	r3, [r3, #0]
 800fa40:	2150      	movs	r1, #80	@ 0x50
 800fa42:	4618      	mov	r0, r3
 800fa44:	f000 fd3a 	bl	80104bc <TIM_ITRx_SetConfig>
 800fa48:	e02c      	b.n	800faa4 <HAL_TIM_ConfigClockSource+0x1c4>
 800fa4a:	687b      	ldr	r3, [r7, #4]
 800fa4c:	6818      	ldr	r0, [r3, #0]
 800fa4e:	683b      	ldr	r3, [r7, #0]
 800fa50:	6859      	ldr	r1, [r3, #4]
 800fa52:	683b      	ldr	r3, [r7, #0]
 800fa54:	68db      	ldr	r3, [r3, #12]
 800fa56:	461a      	mov	r2, r3
 800fa58:	f000 fcff 	bl	801045a <TIM_TI2_ConfigInputStage>
 800fa5c:	687b      	ldr	r3, [r7, #4]
 800fa5e:	681b      	ldr	r3, [r3, #0]
 800fa60:	2160      	movs	r1, #96	@ 0x60
 800fa62:	4618      	mov	r0, r3
 800fa64:	f000 fd2a 	bl	80104bc <TIM_ITRx_SetConfig>
 800fa68:	e01c      	b.n	800faa4 <HAL_TIM_ConfigClockSource+0x1c4>
 800fa6a:	687b      	ldr	r3, [r7, #4]
 800fa6c:	6818      	ldr	r0, [r3, #0]
 800fa6e:	683b      	ldr	r3, [r7, #0]
 800fa70:	6859      	ldr	r1, [r3, #4]
 800fa72:	683b      	ldr	r3, [r7, #0]
 800fa74:	68db      	ldr	r3, [r3, #12]
 800fa76:	461a      	mov	r2, r3
 800fa78:	f000 fcc0 	bl	80103fc <TIM_TI1_ConfigInputStage>
 800fa7c:	687b      	ldr	r3, [r7, #4]
 800fa7e:	681b      	ldr	r3, [r3, #0]
 800fa80:	2140      	movs	r1, #64	@ 0x40
 800fa82:	4618      	mov	r0, r3
 800fa84:	f000 fd1a 	bl	80104bc <TIM_ITRx_SetConfig>
 800fa88:	e00c      	b.n	800faa4 <HAL_TIM_ConfigClockSource+0x1c4>
 800fa8a:	687b      	ldr	r3, [r7, #4]
 800fa8c:	681a      	ldr	r2, [r3, #0]
 800fa8e:	683b      	ldr	r3, [r7, #0]
 800fa90:	681b      	ldr	r3, [r3, #0]
 800fa92:	4619      	mov	r1, r3
 800fa94:	4610      	mov	r0, r2
 800fa96:	f000 fd11 	bl	80104bc <TIM_ITRx_SetConfig>
 800fa9a:	e003      	b.n	800faa4 <HAL_TIM_ConfigClockSource+0x1c4>
 800fa9c:	2301      	movs	r3, #1
 800fa9e:	73fb      	strb	r3, [r7, #15]
 800faa0:	e000      	b.n	800faa4 <HAL_TIM_ConfigClockSource+0x1c4>
 800faa2:	bf00      	nop
 800faa4:	687b      	ldr	r3, [r7, #4]
 800faa6:	2201      	movs	r2, #1
 800faa8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800faac:	687b      	ldr	r3, [r7, #4]
 800faae:	2200      	movs	r2, #0
 800fab0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800fab4:	7bfb      	ldrb	r3, [r7, #15]
 800fab6:	4618      	mov	r0, r3
 800fab8:	3710      	adds	r7, #16
 800faba:	46bd      	mov	sp, r7
 800fabc:	bd80      	pop	{r7, pc}
 800fabe:	bf00      	nop
 800fac0:	ffceff88 	.word	0xffceff88
 800fac4:	00100040 	.word	0x00100040
 800fac8:	00100030 	.word	0x00100030
 800facc:	00100020 	.word	0x00100020

0800fad0 <HAL_TIM_OC_DelayElapsedCallback>:
 800fad0:	b480      	push	{r7}
 800fad2:	b083      	sub	sp, #12
 800fad4:	af00      	add	r7, sp, #0
 800fad6:	6078      	str	r0, [r7, #4]
 800fad8:	bf00      	nop
 800fada:	370c      	adds	r7, #12
 800fadc:	46bd      	mov	sp, r7
 800fade:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fae2:	4770      	bx	lr

0800fae4 <HAL_TIM_IC_CaptureCallback>:
 800fae4:	b480      	push	{r7}
 800fae6:	b083      	sub	sp, #12
 800fae8:	af00      	add	r7, sp, #0
 800faea:	6078      	str	r0, [r7, #4]
 800faec:	bf00      	nop
 800faee:	370c      	adds	r7, #12
 800faf0:	46bd      	mov	sp, r7
 800faf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800faf6:	4770      	bx	lr

0800faf8 <HAL_TIM_PWM_PulseFinishedCallback>:
 800faf8:	b480      	push	{r7}
 800fafa:	b083      	sub	sp, #12
 800fafc:	af00      	add	r7, sp, #0
 800fafe:	6078      	str	r0, [r7, #4]
 800fb00:	bf00      	nop
 800fb02:	370c      	adds	r7, #12
 800fb04:	46bd      	mov	sp, r7
 800fb06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb0a:	4770      	bx	lr

0800fb0c <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>:
 800fb0c:	b480      	push	{r7}
 800fb0e:	b083      	sub	sp, #12
 800fb10:	af00      	add	r7, sp, #0
 800fb12:	6078      	str	r0, [r7, #4]
 800fb14:	bf00      	nop
 800fb16:	370c      	adds	r7, #12
 800fb18:	46bd      	mov	sp, r7
 800fb1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb1e:	4770      	bx	lr

0800fb20 <HAL_TIM_TriggerCallback>:
 800fb20:	b480      	push	{r7}
 800fb22:	b083      	sub	sp, #12
 800fb24:	af00      	add	r7, sp, #0
 800fb26:	6078      	str	r0, [r7, #4]
 800fb28:	bf00      	nop
 800fb2a:	370c      	adds	r7, #12
 800fb2c:	46bd      	mov	sp, r7
 800fb2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb32:	4770      	bx	lr

0800fb34 <HAL_TIM_ErrorCallback>:
 800fb34:	b480      	push	{r7}
 800fb36:	b083      	sub	sp, #12
 800fb38:	af00      	add	r7, sp, #0
 800fb3a:	6078      	str	r0, [r7, #4]
 800fb3c:	bf00      	nop
 800fb3e:	370c      	adds	r7, #12
 800fb40:	46bd      	mov	sp, r7
 800fb42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb46:	4770      	bx	lr

0800fb48 <TIM_DMAError>:
 800fb48:	b580      	push	{r7, lr}
 800fb4a:	b084      	sub	sp, #16
 800fb4c:	af00      	add	r7, sp, #0
 800fb4e:	6078      	str	r0, [r7, #4]
 800fb50:	687b      	ldr	r3, [r7, #4]
 800fb52:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fb54:	60fb      	str	r3, [r7, #12]
 800fb56:	68fb      	ldr	r3, [r7, #12]
 800fb58:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fb5a:	687a      	ldr	r2, [r7, #4]
 800fb5c:	429a      	cmp	r2, r3
 800fb5e:	d107      	bne.n	800fb70 <TIM_DMAError+0x28>
 800fb60:	68fb      	ldr	r3, [r7, #12]
 800fb62:	2201      	movs	r2, #1
 800fb64:	771a      	strb	r2, [r3, #28]
 800fb66:	68fb      	ldr	r3, [r7, #12]
 800fb68:	2201      	movs	r2, #1
 800fb6a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800fb6e:	e02a      	b.n	800fbc6 <TIM_DMAError+0x7e>
 800fb70:	68fb      	ldr	r3, [r7, #12]
 800fb72:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800fb74:	687a      	ldr	r2, [r7, #4]
 800fb76:	429a      	cmp	r2, r3
 800fb78:	d107      	bne.n	800fb8a <TIM_DMAError+0x42>
 800fb7a:	68fb      	ldr	r3, [r7, #12]
 800fb7c:	2202      	movs	r2, #2
 800fb7e:	771a      	strb	r2, [r3, #28]
 800fb80:	68fb      	ldr	r3, [r7, #12]
 800fb82:	2201      	movs	r2, #1
 800fb84:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800fb88:	e01d      	b.n	800fbc6 <TIM_DMAError+0x7e>
 800fb8a:	68fb      	ldr	r3, [r7, #12]
 800fb8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fb8e:	687a      	ldr	r2, [r7, #4]
 800fb90:	429a      	cmp	r2, r3
 800fb92:	d107      	bne.n	800fba4 <TIM_DMAError+0x5c>
 800fb94:	68fb      	ldr	r3, [r7, #12]
 800fb96:	2204      	movs	r2, #4
 800fb98:	771a      	strb	r2, [r3, #28]
 800fb9a:	68fb      	ldr	r3, [r7, #12]
 800fb9c:	2201      	movs	r2, #1
 800fb9e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800fba2:	e010      	b.n	800fbc6 <TIM_DMAError+0x7e>
 800fba4:	68fb      	ldr	r3, [r7, #12]
 800fba6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800fba8:	687a      	ldr	r2, [r7, #4]
 800fbaa:	429a      	cmp	r2, r3
 800fbac:	d107      	bne.n	800fbbe <TIM_DMAError+0x76>
 800fbae:	68fb      	ldr	r3, [r7, #12]
 800fbb0:	2208      	movs	r2, #8
 800fbb2:	771a      	strb	r2, [r3, #28]
 800fbb4:	68fb      	ldr	r3, [r7, #12]
 800fbb6:	2201      	movs	r2, #1
 800fbb8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800fbbc:	e003      	b.n	800fbc6 <TIM_DMAError+0x7e>
 800fbbe:	68fb      	ldr	r3, [r7, #12]
 800fbc0:	2201      	movs	r2, #1
 800fbc2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800fbc6:	68f8      	ldr	r0, [r7, #12]
 800fbc8:	f7ff ffb4 	bl	800fb34 <HAL_TIM_ErrorCallback>
 800fbcc:	68fb      	ldr	r3, [r7, #12]
 800fbce:	2200      	movs	r2, #0
 800fbd0:	771a      	strb	r2, [r3, #28]
 800fbd2:	bf00      	nop
 800fbd4:	3710      	adds	r7, #16
 800fbd6:	46bd      	mov	sp, r7
 800fbd8:	bd80      	pop	{r7, pc}

0800fbda <TIM_DMADelayPulseCplt>:
 800fbda:	b580      	push	{r7, lr}
 800fbdc:	b084      	sub	sp, #16
 800fbde:	af00      	add	r7, sp, #0
 800fbe0:	6078      	str	r0, [r7, #4]
 800fbe2:	687b      	ldr	r3, [r7, #4]
 800fbe4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fbe6:	60fb      	str	r3, [r7, #12]
 800fbe8:	68fb      	ldr	r3, [r7, #12]
 800fbea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fbec:	687a      	ldr	r2, [r7, #4]
 800fbee:	429a      	cmp	r2, r3
 800fbf0:	d10b      	bne.n	800fc0a <TIM_DMADelayPulseCplt+0x30>
 800fbf2:	68fb      	ldr	r3, [r7, #12]
 800fbf4:	2201      	movs	r2, #1
 800fbf6:	771a      	strb	r2, [r3, #28]
 800fbf8:	687b      	ldr	r3, [r7, #4]
 800fbfa:	69db      	ldr	r3, [r3, #28]
 800fbfc:	2b00      	cmp	r3, #0
 800fbfe:	d136      	bne.n	800fc6e <TIM_DMADelayPulseCplt+0x94>
 800fc00:	68fb      	ldr	r3, [r7, #12]
 800fc02:	2201      	movs	r2, #1
 800fc04:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800fc08:	e031      	b.n	800fc6e <TIM_DMADelayPulseCplt+0x94>
 800fc0a:	68fb      	ldr	r3, [r7, #12]
 800fc0c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800fc0e:	687a      	ldr	r2, [r7, #4]
 800fc10:	429a      	cmp	r2, r3
 800fc12:	d10b      	bne.n	800fc2c <TIM_DMADelayPulseCplt+0x52>
 800fc14:	68fb      	ldr	r3, [r7, #12]
 800fc16:	2202      	movs	r2, #2
 800fc18:	771a      	strb	r2, [r3, #28]
 800fc1a:	687b      	ldr	r3, [r7, #4]
 800fc1c:	69db      	ldr	r3, [r3, #28]
 800fc1e:	2b00      	cmp	r3, #0
 800fc20:	d125      	bne.n	800fc6e <TIM_DMADelayPulseCplt+0x94>
 800fc22:	68fb      	ldr	r3, [r7, #12]
 800fc24:	2201      	movs	r2, #1
 800fc26:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800fc2a:	e020      	b.n	800fc6e <TIM_DMADelayPulseCplt+0x94>
 800fc2c:	68fb      	ldr	r3, [r7, #12]
 800fc2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fc30:	687a      	ldr	r2, [r7, #4]
 800fc32:	429a      	cmp	r2, r3
 800fc34:	d10b      	bne.n	800fc4e <TIM_DMADelayPulseCplt+0x74>
 800fc36:	68fb      	ldr	r3, [r7, #12]
 800fc38:	2204      	movs	r2, #4
 800fc3a:	771a      	strb	r2, [r3, #28]
 800fc3c:	687b      	ldr	r3, [r7, #4]
 800fc3e:	69db      	ldr	r3, [r3, #28]
 800fc40:	2b00      	cmp	r3, #0
 800fc42:	d114      	bne.n	800fc6e <TIM_DMADelayPulseCplt+0x94>
 800fc44:	68fb      	ldr	r3, [r7, #12]
 800fc46:	2201      	movs	r2, #1
 800fc48:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800fc4c:	e00f      	b.n	800fc6e <TIM_DMADelayPulseCplt+0x94>
 800fc4e:	68fb      	ldr	r3, [r7, #12]
 800fc50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800fc52:	687a      	ldr	r2, [r7, #4]
 800fc54:	429a      	cmp	r2, r3
 800fc56:	d10a      	bne.n	800fc6e <TIM_DMADelayPulseCplt+0x94>
 800fc58:	68fb      	ldr	r3, [r7, #12]
 800fc5a:	2208      	movs	r2, #8
 800fc5c:	771a      	strb	r2, [r3, #28]
 800fc5e:	687b      	ldr	r3, [r7, #4]
 800fc60:	69db      	ldr	r3, [r3, #28]
 800fc62:	2b00      	cmp	r3, #0
 800fc64:	d103      	bne.n	800fc6e <TIM_DMADelayPulseCplt+0x94>
 800fc66:	68fb      	ldr	r3, [r7, #12]
 800fc68:	2201      	movs	r2, #1
 800fc6a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800fc6e:	68f8      	ldr	r0, [r7, #12]
 800fc70:	f7ff ff42 	bl	800faf8 <HAL_TIM_PWM_PulseFinishedCallback>
 800fc74:	68fb      	ldr	r3, [r7, #12]
 800fc76:	2200      	movs	r2, #0
 800fc78:	771a      	strb	r2, [r3, #28]
 800fc7a:	bf00      	nop
 800fc7c:	3710      	adds	r7, #16
 800fc7e:	46bd      	mov	sp, r7
 800fc80:	bd80      	pop	{r7, pc}

0800fc82 <TIM_DMADelayPulseHalfCplt>:
 800fc82:	b580      	push	{r7, lr}
 800fc84:	b084      	sub	sp, #16
 800fc86:	af00      	add	r7, sp, #0
 800fc88:	6078      	str	r0, [r7, #4]
 800fc8a:	687b      	ldr	r3, [r7, #4]
 800fc8c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fc8e:	60fb      	str	r3, [r7, #12]
 800fc90:	68fb      	ldr	r3, [r7, #12]
 800fc92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fc94:	687a      	ldr	r2, [r7, #4]
 800fc96:	429a      	cmp	r2, r3
 800fc98:	d103      	bne.n	800fca2 <TIM_DMADelayPulseHalfCplt+0x20>
 800fc9a:	68fb      	ldr	r3, [r7, #12]
 800fc9c:	2201      	movs	r2, #1
 800fc9e:	771a      	strb	r2, [r3, #28]
 800fca0:	e019      	b.n	800fcd6 <TIM_DMADelayPulseHalfCplt+0x54>
 800fca2:	68fb      	ldr	r3, [r7, #12]
 800fca4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800fca6:	687a      	ldr	r2, [r7, #4]
 800fca8:	429a      	cmp	r2, r3
 800fcaa:	d103      	bne.n	800fcb4 <TIM_DMADelayPulseHalfCplt+0x32>
 800fcac:	68fb      	ldr	r3, [r7, #12]
 800fcae:	2202      	movs	r2, #2
 800fcb0:	771a      	strb	r2, [r3, #28]
 800fcb2:	e010      	b.n	800fcd6 <TIM_DMADelayPulseHalfCplt+0x54>
 800fcb4:	68fb      	ldr	r3, [r7, #12]
 800fcb6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fcb8:	687a      	ldr	r2, [r7, #4]
 800fcba:	429a      	cmp	r2, r3
 800fcbc:	d103      	bne.n	800fcc6 <TIM_DMADelayPulseHalfCplt+0x44>
 800fcbe:	68fb      	ldr	r3, [r7, #12]
 800fcc0:	2204      	movs	r2, #4
 800fcc2:	771a      	strb	r2, [r3, #28]
 800fcc4:	e007      	b.n	800fcd6 <TIM_DMADelayPulseHalfCplt+0x54>
 800fcc6:	68fb      	ldr	r3, [r7, #12]
 800fcc8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800fcca:	687a      	ldr	r2, [r7, #4]
 800fccc:	429a      	cmp	r2, r3
 800fcce:	d102      	bne.n	800fcd6 <TIM_DMADelayPulseHalfCplt+0x54>
 800fcd0:	68fb      	ldr	r3, [r7, #12]
 800fcd2:	2208      	movs	r2, #8
 800fcd4:	771a      	strb	r2, [r3, #28]
 800fcd6:	68f8      	ldr	r0, [r7, #12]
 800fcd8:	f7ff ff18 	bl	800fb0c <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>
 800fcdc:	68fb      	ldr	r3, [r7, #12]
 800fcde:	2200      	movs	r2, #0
 800fce0:	771a      	strb	r2, [r3, #28]
 800fce2:	bf00      	nop
 800fce4:	3710      	adds	r7, #16
 800fce6:	46bd      	mov	sp, r7
 800fce8:	bd80      	pop	{r7, pc}
	...

0800fcec <TIM_Base_SetConfig>:
 800fcec:	b480      	push	{r7}
 800fcee:	b085      	sub	sp, #20
 800fcf0:	af00      	add	r7, sp, #0
 800fcf2:	6078      	str	r0, [r7, #4]
 800fcf4:	6039      	str	r1, [r7, #0]
 800fcf6:	687b      	ldr	r3, [r7, #4]
 800fcf8:	681b      	ldr	r3, [r3, #0]
 800fcfa:	60fb      	str	r3, [r7, #12]
 800fcfc:	687b      	ldr	r3, [r7, #4]
 800fcfe:	4a4a      	ldr	r2, [pc, #296]	@ (800fe28 <TIM_Base_SetConfig+0x13c>)
 800fd00:	4293      	cmp	r3, r2
 800fd02:	d013      	beq.n	800fd2c <TIM_Base_SetConfig+0x40>
 800fd04:	687b      	ldr	r3, [r7, #4]
 800fd06:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800fd0a:	d00f      	beq.n	800fd2c <TIM_Base_SetConfig+0x40>
 800fd0c:	687b      	ldr	r3, [r7, #4]
 800fd0e:	4a47      	ldr	r2, [pc, #284]	@ (800fe2c <TIM_Base_SetConfig+0x140>)
 800fd10:	4293      	cmp	r3, r2
 800fd12:	d00b      	beq.n	800fd2c <TIM_Base_SetConfig+0x40>
 800fd14:	687b      	ldr	r3, [r7, #4]
 800fd16:	4a46      	ldr	r2, [pc, #280]	@ (800fe30 <TIM_Base_SetConfig+0x144>)
 800fd18:	4293      	cmp	r3, r2
 800fd1a:	d007      	beq.n	800fd2c <TIM_Base_SetConfig+0x40>
 800fd1c:	687b      	ldr	r3, [r7, #4]
 800fd1e:	4a45      	ldr	r2, [pc, #276]	@ (800fe34 <TIM_Base_SetConfig+0x148>)
 800fd20:	4293      	cmp	r3, r2
 800fd22:	d003      	beq.n	800fd2c <TIM_Base_SetConfig+0x40>
 800fd24:	687b      	ldr	r3, [r7, #4]
 800fd26:	4a44      	ldr	r2, [pc, #272]	@ (800fe38 <TIM_Base_SetConfig+0x14c>)
 800fd28:	4293      	cmp	r3, r2
 800fd2a:	d108      	bne.n	800fd3e <TIM_Base_SetConfig+0x52>
 800fd2c:	68fb      	ldr	r3, [r7, #12]
 800fd2e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800fd32:	60fb      	str	r3, [r7, #12]
 800fd34:	683b      	ldr	r3, [r7, #0]
 800fd36:	685b      	ldr	r3, [r3, #4]
 800fd38:	68fa      	ldr	r2, [r7, #12]
 800fd3a:	4313      	orrs	r3, r2
 800fd3c:	60fb      	str	r3, [r7, #12]
 800fd3e:	687b      	ldr	r3, [r7, #4]
 800fd40:	4a39      	ldr	r2, [pc, #228]	@ (800fe28 <TIM_Base_SetConfig+0x13c>)
 800fd42:	4293      	cmp	r3, r2
 800fd44:	d027      	beq.n	800fd96 <TIM_Base_SetConfig+0xaa>
 800fd46:	687b      	ldr	r3, [r7, #4]
 800fd48:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800fd4c:	d023      	beq.n	800fd96 <TIM_Base_SetConfig+0xaa>
 800fd4e:	687b      	ldr	r3, [r7, #4]
 800fd50:	4a36      	ldr	r2, [pc, #216]	@ (800fe2c <TIM_Base_SetConfig+0x140>)
 800fd52:	4293      	cmp	r3, r2
 800fd54:	d01f      	beq.n	800fd96 <TIM_Base_SetConfig+0xaa>
 800fd56:	687b      	ldr	r3, [r7, #4]
 800fd58:	4a35      	ldr	r2, [pc, #212]	@ (800fe30 <TIM_Base_SetConfig+0x144>)
 800fd5a:	4293      	cmp	r3, r2
 800fd5c:	d01b      	beq.n	800fd96 <TIM_Base_SetConfig+0xaa>
 800fd5e:	687b      	ldr	r3, [r7, #4]
 800fd60:	4a34      	ldr	r2, [pc, #208]	@ (800fe34 <TIM_Base_SetConfig+0x148>)
 800fd62:	4293      	cmp	r3, r2
 800fd64:	d017      	beq.n	800fd96 <TIM_Base_SetConfig+0xaa>
 800fd66:	687b      	ldr	r3, [r7, #4]
 800fd68:	4a33      	ldr	r2, [pc, #204]	@ (800fe38 <TIM_Base_SetConfig+0x14c>)
 800fd6a:	4293      	cmp	r3, r2
 800fd6c:	d013      	beq.n	800fd96 <TIM_Base_SetConfig+0xaa>
 800fd6e:	687b      	ldr	r3, [r7, #4]
 800fd70:	4a32      	ldr	r2, [pc, #200]	@ (800fe3c <TIM_Base_SetConfig+0x150>)
 800fd72:	4293      	cmp	r3, r2
 800fd74:	d00f      	beq.n	800fd96 <TIM_Base_SetConfig+0xaa>
 800fd76:	687b      	ldr	r3, [r7, #4]
 800fd78:	4a31      	ldr	r2, [pc, #196]	@ (800fe40 <TIM_Base_SetConfig+0x154>)
 800fd7a:	4293      	cmp	r3, r2
 800fd7c:	d00b      	beq.n	800fd96 <TIM_Base_SetConfig+0xaa>
 800fd7e:	687b      	ldr	r3, [r7, #4]
 800fd80:	4a30      	ldr	r2, [pc, #192]	@ (800fe44 <TIM_Base_SetConfig+0x158>)
 800fd82:	4293      	cmp	r3, r2
 800fd84:	d007      	beq.n	800fd96 <TIM_Base_SetConfig+0xaa>
 800fd86:	687b      	ldr	r3, [r7, #4]
 800fd88:	4a2f      	ldr	r2, [pc, #188]	@ (800fe48 <TIM_Base_SetConfig+0x15c>)
 800fd8a:	4293      	cmp	r3, r2
 800fd8c:	d003      	beq.n	800fd96 <TIM_Base_SetConfig+0xaa>
 800fd8e:	687b      	ldr	r3, [r7, #4]
 800fd90:	4a2e      	ldr	r2, [pc, #184]	@ (800fe4c <TIM_Base_SetConfig+0x160>)
 800fd92:	4293      	cmp	r3, r2
 800fd94:	d108      	bne.n	800fda8 <TIM_Base_SetConfig+0xbc>
 800fd96:	68fb      	ldr	r3, [r7, #12]
 800fd98:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800fd9c:	60fb      	str	r3, [r7, #12]
 800fd9e:	683b      	ldr	r3, [r7, #0]
 800fda0:	68db      	ldr	r3, [r3, #12]
 800fda2:	68fa      	ldr	r2, [r7, #12]
 800fda4:	4313      	orrs	r3, r2
 800fda6:	60fb      	str	r3, [r7, #12]
 800fda8:	68fb      	ldr	r3, [r7, #12]
 800fdaa:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800fdae:	683b      	ldr	r3, [r7, #0]
 800fdb0:	695b      	ldr	r3, [r3, #20]
 800fdb2:	4313      	orrs	r3, r2
 800fdb4:	60fb      	str	r3, [r7, #12]
 800fdb6:	687b      	ldr	r3, [r7, #4]
 800fdb8:	68fa      	ldr	r2, [r7, #12]
 800fdba:	601a      	str	r2, [r3, #0]
 800fdbc:	683b      	ldr	r3, [r7, #0]
 800fdbe:	689a      	ldr	r2, [r3, #8]
 800fdc0:	687b      	ldr	r3, [r7, #4]
 800fdc2:	62da      	str	r2, [r3, #44]	@ 0x2c
 800fdc4:	683b      	ldr	r3, [r7, #0]
 800fdc6:	681a      	ldr	r2, [r3, #0]
 800fdc8:	687b      	ldr	r3, [r7, #4]
 800fdca:	629a      	str	r2, [r3, #40]	@ 0x28
 800fdcc:	687b      	ldr	r3, [r7, #4]
 800fdce:	4a16      	ldr	r2, [pc, #88]	@ (800fe28 <TIM_Base_SetConfig+0x13c>)
 800fdd0:	4293      	cmp	r3, r2
 800fdd2:	d00f      	beq.n	800fdf4 <TIM_Base_SetConfig+0x108>
 800fdd4:	687b      	ldr	r3, [r7, #4]
 800fdd6:	4a18      	ldr	r2, [pc, #96]	@ (800fe38 <TIM_Base_SetConfig+0x14c>)
 800fdd8:	4293      	cmp	r3, r2
 800fdda:	d00b      	beq.n	800fdf4 <TIM_Base_SetConfig+0x108>
 800fddc:	687b      	ldr	r3, [r7, #4]
 800fdde:	4a17      	ldr	r2, [pc, #92]	@ (800fe3c <TIM_Base_SetConfig+0x150>)
 800fde0:	4293      	cmp	r3, r2
 800fde2:	d007      	beq.n	800fdf4 <TIM_Base_SetConfig+0x108>
 800fde4:	687b      	ldr	r3, [r7, #4]
 800fde6:	4a16      	ldr	r2, [pc, #88]	@ (800fe40 <TIM_Base_SetConfig+0x154>)
 800fde8:	4293      	cmp	r3, r2
 800fdea:	d003      	beq.n	800fdf4 <TIM_Base_SetConfig+0x108>
 800fdec:	687b      	ldr	r3, [r7, #4]
 800fdee:	4a15      	ldr	r2, [pc, #84]	@ (800fe44 <TIM_Base_SetConfig+0x158>)
 800fdf0:	4293      	cmp	r3, r2
 800fdf2:	d103      	bne.n	800fdfc <TIM_Base_SetConfig+0x110>
 800fdf4:	683b      	ldr	r3, [r7, #0]
 800fdf6:	691a      	ldr	r2, [r3, #16]
 800fdf8:	687b      	ldr	r3, [r7, #4]
 800fdfa:	631a      	str	r2, [r3, #48]	@ 0x30
 800fdfc:	687b      	ldr	r3, [r7, #4]
 800fdfe:	2201      	movs	r2, #1
 800fe00:	615a      	str	r2, [r3, #20]
 800fe02:	687b      	ldr	r3, [r7, #4]
 800fe04:	691b      	ldr	r3, [r3, #16]
 800fe06:	f003 0301 	and.w	r3, r3, #1
 800fe0a:	2b01      	cmp	r3, #1
 800fe0c:	d105      	bne.n	800fe1a <TIM_Base_SetConfig+0x12e>
 800fe0e:	687b      	ldr	r3, [r7, #4]
 800fe10:	691b      	ldr	r3, [r3, #16]
 800fe12:	f023 0201 	bic.w	r2, r3, #1
 800fe16:	687b      	ldr	r3, [r7, #4]
 800fe18:	611a      	str	r2, [r3, #16]
 800fe1a:	bf00      	nop
 800fe1c:	3714      	adds	r7, #20
 800fe1e:	46bd      	mov	sp, r7
 800fe20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe24:	4770      	bx	lr
 800fe26:	bf00      	nop
 800fe28:	40010000 	.word	0x40010000
 800fe2c:	40000400 	.word	0x40000400
 800fe30:	40000800 	.word	0x40000800
 800fe34:	40000c00 	.word	0x40000c00
 800fe38:	40010400 	.word	0x40010400
 800fe3c:	40014000 	.word	0x40014000
 800fe40:	40014400 	.word	0x40014400
 800fe44:	40014800 	.word	0x40014800
 800fe48:	4000e000 	.word	0x4000e000
 800fe4c:	4000e400 	.word	0x4000e400

0800fe50 <TIM_OC1_SetConfig>:
 800fe50:	b480      	push	{r7}
 800fe52:	b087      	sub	sp, #28
 800fe54:	af00      	add	r7, sp, #0
 800fe56:	6078      	str	r0, [r7, #4]
 800fe58:	6039      	str	r1, [r7, #0]
 800fe5a:	687b      	ldr	r3, [r7, #4]
 800fe5c:	6a1b      	ldr	r3, [r3, #32]
 800fe5e:	617b      	str	r3, [r7, #20]
 800fe60:	687b      	ldr	r3, [r7, #4]
 800fe62:	6a1b      	ldr	r3, [r3, #32]
 800fe64:	f023 0201 	bic.w	r2, r3, #1
 800fe68:	687b      	ldr	r3, [r7, #4]
 800fe6a:	621a      	str	r2, [r3, #32]
 800fe6c:	687b      	ldr	r3, [r7, #4]
 800fe6e:	685b      	ldr	r3, [r3, #4]
 800fe70:	613b      	str	r3, [r7, #16]
 800fe72:	687b      	ldr	r3, [r7, #4]
 800fe74:	699b      	ldr	r3, [r3, #24]
 800fe76:	60fb      	str	r3, [r7, #12]
 800fe78:	68fa      	ldr	r2, [r7, #12]
 800fe7a:	4b37      	ldr	r3, [pc, #220]	@ (800ff58 <TIM_OC1_SetConfig+0x108>)
 800fe7c:	4013      	ands	r3, r2
 800fe7e:	60fb      	str	r3, [r7, #12]
 800fe80:	68fb      	ldr	r3, [r7, #12]
 800fe82:	f023 0303 	bic.w	r3, r3, #3
 800fe86:	60fb      	str	r3, [r7, #12]
 800fe88:	683b      	ldr	r3, [r7, #0]
 800fe8a:	681b      	ldr	r3, [r3, #0]
 800fe8c:	68fa      	ldr	r2, [r7, #12]
 800fe8e:	4313      	orrs	r3, r2
 800fe90:	60fb      	str	r3, [r7, #12]
 800fe92:	697b      	ldr	r3, [r7, #20]
 800fe94:	f023 0302 	bic.w	r3, r3, #2
 800fe98:	617b      	str	r3, [r7, #20]
 800fe9a:	683b      	ldr	r3, [r7, #0]
 800fe9c:	689b      	ldr	r3, [r3, #8]
 800fe9e:	697a      	ldr	r2, [r7, #20]
 800fea0:	4313      	orrs	r3, r2
 800fea2:	617b      	str	r3, [r7, #20]
 800fea4:	687b      	ldr	r3, [r7, #4]
 800fea6:	4a2d      	ldr	r2, [pc, #180]	@ (800ff5c <TIM_OC1_SetConfig+0x10c>)
 800fea8:	4293      	cmp	r3, r2
 800feaa:	d00f      	beq.n	800fecc <TIM_OC1_SetConfig+0x7c>
 800feac:	687b      	ldr	r3, [r7, #4]
 800feae:	4a2c      	ldr	r2, [pc, #176]	@ (800ff60 <TIM_OC1_SetConfig+0x110>)
 800feb0:	4293      	cmp	r3, r2
 800feb2:	d00b      	beq.n	800fecc <TIM_OC1_SetConfig+0x7c>
 800feb4:	687b      	ldr	r3, [r7, #4]
 800feb6:	4a2b      	ldr	r2, [pc, #172]	@ (800ff64 <TIM_OC1_SetConfig+0x114>)
 800feb8:	4293      	cmp	r3, r2
 800feba:	d007      	beq.n	800fecc <TIM_OC1_SetConfig+0x7c>
 800febc:	687b      	ldr	r3, [r7, #4]
 800febe:	4a2a      	ldr	r2, [pc, #168]	@ (800ff68 <TIM_OC1_SetConfig+0x118>)
 800fec0:	4293      	cmp	r3, r2
 800fec2:	d003      	beq.n	800fecc <TIM_OC1_SetConfig+0x7c>
 800fec4:	687b      	ldr	r3, [r7, #4]
 800fec6:	4a29      	ldr	r2, [pc, #164]	@ (800ff6c <TIM_OC1_SetConfig+0x11c>)
 800fec8:	4293      	cmp	r3, r2
 800feca:	d10c      	bne.n	800fee6 <TIM_OC1_SetConfig+0x96>
 800fecc:	697b      	ldr	r3, [r7, #20]
 800fece:	f023 0308 	bic.w	r3, r3, #8
 800fed2:	617b      	str	r3, [r7, #20]
 800fed4:	683b      	ldr	r3, [r7, #0]
 800fed6:	68db      	ldr	r3, [r3, #12]
 800fed8:	697a      	ldr	r2, [r7, #20]
 800feda:	4313      	orrs	r3, r2
 800fedc:	617b      	str	r3, [r7, #20]
 800fede:	697b      	ldr	r3, [r7, #20]
 800fee0:	f023 0304 	bic.w	r3, r3, #4
 800fee4:	617b      	str	r3, [r7, #20]
 800fee6:	687b      	ldr	r3, [r7, #4]
 800fee8:	4a1c      	ldr	r2, [pc, #112]	@ (800ff5c <TIM_OC1_SetConfig+0x10c>)
 800feea:	4293      	cmp	r3, r2
 800feec:	d00f      	beq.n	800ff0e <TIM_OC1_SetConfig+0xbe>
 800feee:	687b      	ldr	r3, [r7, #4]
 800fef0:	4a1b      	ldr	r2, [pc, #108]	@ (800ff60 <TIM_OC1_SetConfig+0x110>)
 800fef2:	4293      	cmp	r3, r2
 800fef4:	d00b      	beq.n	800ff0e <TIM_OC1_SetConfig+0xbe>
 800fef6:	687b      	ldr	r3, [r7, #4]
 800fef8:	4a1a      	ldr	r2, [pc, #104]	@ (800ff64 <TIM_OC1_SetConfig+0x114>)
 800fefa:	4293      	cmp	r3, r2
 800fefc:	d007      	beq.n	800ff0e <TIM_OC1_SetConfig+0xbe>
 800fefe:	687b      	ldr	r3, [r7, #4]
 800ff00:	4a19      	ldr	r2, [pc, #100]	@ (800ff68 <TIM_OC1_SetConfig+0x118>)
 800ff02:	4293      	cmp	r3, r2
 800ff04:	d003      	beq.n	800ff0e <TIM_OC1_SetConfig+0xbe>
 800ff06:	687b      	ldr	r3, [r7, #4]
 800ff08:	4a18      	ldr	r2, [pc, #96]	@ (800ff6c <TIM_OC1_SetConfig+0x11c>)
 800ff0a:	4293      	cmp	r3, r2
 800ff0c:	d111      	bne.n	800ff32 <TIM_OC1_SetConfig+0xe2>
 800ff0e:	693b      	ldr	r3, [r7, #16]
 800ff10:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800ff14:	613b      	str	r3, [r7, #16]
 800ff16:	693b      	ldr	r3, [r7, #16]
 800ff18:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800ff1c:	613b      	str	r3, [r7, #16]
 800ff1e:	683b      	ldr	r3, [r7, #0]
 800ff20:	695b      	ldr	r3, [r3, #20]
 800ff22:	693a      	ldr	r2, [r7, #16]
 800ff24:	4313      	orrs	r3, r2
 800ff26:	613b      	str	r3, [r7, #16]
 800ff28:	683b      	ldr	r3, [r7, #0]
 800ff2a:	699b      	ldr	r3, [r3, #24]
 800ff2c:	693a      	ldr	r2, [r7, #16]
 800ff2e:	4313      	orrs	r3, r2
 800ff30:	613b      	str	r3, [r7, #16]
 800ff32:	687b      	ldr	r3, [r7, #4]
 800ff34:	693a      	ldr	r2, [r7, #16]
 800ff36:	605a      	str	r2, [r3, #4]
 800ff38:	687b      	ldr	r3, [r7, #4]
 800ff3a:	68fa      	ldr	r2, [r7, #12]
 800ff3c:	619a      	str	r2, [r3, #24]
 800ff3e:	683b      	ldr	r3, [r7, #0]
 800ff40:	685a      	ldr	r2, [r3, #4]
 800ff42:	687b      	ldr	r3, [r7, #4]
 800ff44:	635a      	str	r2, [r3, #52]	@ 0x34
 800ff46:	687b      	ldr	r3, [r7, #4]
 800ff48:	697a      	ldr	r2, [r7, #20]
 800ff4a:	621a      	str	r2, [r3, #32]
 800ff4c:	bf00      	nop
 800ff4e:	371c      	adds	r7, #28
 800ff50:	46bd      	mov	sp, r7
 800ff52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff56:	4770      	bx	lr
 800ff58:	fffeff8f 	.word	0xfffeff8f
 800ff5c:	40010000 	.word	0x40010000
 800ff60:	40010400 	.word	0x40010400
 800ff64:	40014000 	.word	0x40014000
 800ff68:	40014400 	.word	0x40014400
 800ff6c:	40014800 	.word	0x40014800

0800ff70 <TIM_OC2_SetConfig>:
 800ff70:	b480      	push	{r7}
 800ff72:	b087      	sub	sp, #28
 800ff74:	af00      	add	r7, sp, #0
 800ff76:	6078      	str	r0, [r7, #4]
 800ff78:	6039      	str	r1, [r7, #0]
 800ff7a:	687b      	ldr	r3, [r7, #4]
 800ff7c:	6a1b      	ldr	r3, [r3, #32]
 800ff7e:	617b      	str	r3, [r7, #20]
 800ff80:	687b      	ldr	r3, [r7, #4]
 800ff82:	6a1b      	ldr	r3, [r3, #32]
 800ff84:	f023 0210 	bic.w	r2, r3, #16
 800ff88:	687b      	ldr	r3, [r7, #4]
 800ff8a:	621a      	str	r2, [r3, #32]
 800ff8c:	687b      	ldr	r3, [r7, #4]
 800ff8e:	685b      	ldr	r3, [r3, #4]
 800ff90:	613b      	str	r3, [r7, #16]
 800ff92:	687b      	ldr	r3, [r7, #4]
 800ff94:	699b      	ldr	r3, [r3, #24]
 800ff96:	60fb      	str	r3, [r7, #12]
 800ff98:	68fa      	ldr	r2, [r7, #12]
 800ff9a:	4b34      	ldr	r3, [pc, #208]	@ (801006c <TIM_OC2_SetConfig+0xfc>)
 800ff9c:	4013      	ands	r3, r2
 800ff9e:	60fb      	str	r3, [r7, #12]
 800ffa0:	68fb      	ldr	r3, [r7, #12]
 800ffa2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800ffa6:	60fb      	str	r3, [r7, #12]
 800ffa8:	683b      	ldr	r3, [r7, #0]
 800ffaa:	681b      	ldr	r3, [r3, #0]
 800ffac:	021b      	lsls	r3, r3, #8
 800ffae:	68fa      	ldr	r2, [r7, #12]
 800ffb0:	4313      	orrs	r3, r2
 800ffb2:	60fb      	str	r3, [r7, #12]
 800ffb4:	697b      	ldr	r3, [r7, #20]
 800ffb6:	f023 0320 	bic.w	r3, r3, #32
 800ffba:	617b      	str	r3, [r7, #20]
 800ffbc:	683b      	ldr	r3, [r7, #0]
 800ffbe:	689b      	ldr	r3, [r3, #8]
 800ffc0:	011b      	lsls	r3, r3, #4
 800ffc2:	697a      	ldr	r2, [r7, #20]
 800ffc4:	4313      	orrs	r3, r2
 800ffc6:	617b      	str	r3, [r7, #20]
 800ffc8:	687b      	ldr	r3, [r7, #4]
 800ffca:	4a29      	ldr	r2, [pc, #164]	@ (8010070 <TIM_OC2_SetConfig+0x100>)
 800ffcc:	4293      	cmp	r3, r2
 800ffce:	d003      	beq.n	800ffd8 <TIM_OC2_SetConfig+0x68>
 800ffd0:	687b      	ldr	r3, [r7, #4]
 800ffd2:	4a28      	ldr	r2, [pc, #160]	@ (8010074 <TIM_OC2_SetConfig+0x104>)
 800ffd4:	4293      	cmp	r3, r2
 800ffd6:	d10d      	bne.n	800fff4 <TIM_OC2_SetConfig+0x84>
 800ffd8:	697b      	ldr	r3, [r7, #20]
 800ffda:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800ffde:	617b      	str	r3, [r7, #20]
 800ffe0:	683b      	ldr	r3, [r7, #0]
 800ffe2:	68db      	ldr	r3, [r3, #12]
 800ffe4:	011b      	lsls	r3, r3, #4
 800ffe6:	697a      	ldr	r2, [r7, #20]
 800ffe8:	4313      	orrs	r3, r2
 800ffea:	617b      	str	r3, [r7, #20]
 800ffec:	697b      	ldr	r3, [r7, #20]
 800ffee:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800fff2:	617b      	str	r3, [r7, #20]
 800fff4:	687b      	ldr	r3, [r7, #4]
 800fff6:	4a1e      	ldr	r2, [pc, #120]	@ (8010070 <TIM_OC2_SetConfig+0x100>)
 800fff8:	4293      	cmp	r3, r2
 800fffa:	d00f      	beq.n	801001c <TIM_OC2_SetConfig+0xac>
 800fffc:	687b      	ldr	r3, [r7, #4]
 800fffe:	4a1d      	ldr	r2, [pc, #116]	@ (8010074 <TIM_OC2_SetConfig+0x104>)
 8010000:	4293      	cmp	r3, r2
 8010002:	d00b      	beq.n	801001c <TIM_OC2_SetConfig+0xac>
 8010004:	687b      	ldr	r3, [r7, #4]
 8010006:	4a1c      	ldr	r2, [pc, #112]	@ (8010078 <TIM_OC2_SetConfig+0x108>)
 8010008:	4293      	cmp	r3, r2
 801000a:	d007      	beq.n	801001c <TIM_OC2_SetConfig+0xac>
 801000c:	687b      	ldr	r3, [r7, #4]
 801000e:	4a1b      	ldr	r2, [pc, #108]	@ (801007c <TIM_OC2_SetConfig+0x10c>)
 8010010:	4293      	cmp	r3, r2
 8010012:	d003      	beq.n	801001c <TIM_OC2_SetConfig+0xac>
 8010014:	687b      	ldr	r3, [r7, #4]
 8010016:	4a1a      	ldr	r2, [pc, #104]	@ (8010080 <TIM_OC2_SetConfig+0x110>)
 8010018:	4293      	cmp	r3, r2
 801001a:	d113      	bne.n	8010044 <TIM_OC2_SetConfig+0xd4>
 801001c:	693b      	ldr	r3, [r7, #16]
 801001e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8010022:	613b      	str	r3, [r7, #16]
 8010024:	693b      	ldr	r3, [r7, #16]
 8010026:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 801002a:	613b      	str	r3, [r7, #16]
 801002c:	683b      	ldr	r3, [r7, #0]
 801002e:	695b      	ldr	r3, [r3, #20]
 8010030:	009b      	lsls	r3, r3, #2
 8010032:	693a      	ldr	r2, [r7, #16]
 8010034:	4313      	orrs	r3, r2
 8010036:	613b      	str	r3, [r7, #16]
 8010038:	683b      	ldr	r3, [r7, #0]
 801003a:	699b      	ldr	r3, [r3, #24]
 801003c:	009b      	lsls	r3, r3, #2
 801003e:	693a      	ldr	r2, [r7, #16]
 8010040:	4313      	orrs	r3, r2
 8010042:	613b      	str	r3, [r7, #16]
 8010044:	687b      	ldr	r3, [r7, #4]
 8010046:	693a      	ldr	r2, [r7, #16]
 8010048:	605a      	str	r2, [r3, #4]
 801004a:	687b      	ldr	r3, [r7, #4]
 801004c:	68fa      	ldr	r2, [r7, #12]
 801004e:	619a      	str	r2, [r3, #24]
 8010050:	683b      	ldr	r3, [r7, #0]
 8010052:	685a      	ldr	r2, [r3, #4]
 8010054:	687b      	ldr	r3, [r7, #4]
 8010056:	639a      	str	r2, [r3, #56]	@ 0x38
 8010058:	687b      	ldr	r3, [r7, #4]
 801005a:	697a      	ldr	r2, [r7, #20]
 801005c:	621a      	str	r2, [r3, #32]
 801005e:	bf00      	nop
 8010060:	371c      	adds	r7, #28
 8010062:	46bd      	mov	sp, r7
 8010064:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010068:	4770      	bx	lr
 801006a:	bf00      	nop
 801006c:	feff8fff 	.word	0xfeff8fff
 8010070:	40010000 	.word	0x40010000
 8010074:	40010400 	.word	0x40010400
 8010078:	40014000 	.word	0x40014000
 801007c:	40014400 	.word	0x40014400
 8010080:	40014800 	.word	0x40014800

08010084 <TIM_OC3_SetConfig>:
 8010084:	b480      	push	{r7}
 8010086:	b087      	sub	sp, #28
 8010088:	af00      	add	r7, sp, #0
 801008a:	6078      	str	r0, [r7, #4]
 801008c:	6039      	str	r1, [r7, #0]
 801008e:	687b      	ldr	r3, [r7, #4]
 8010090:	6a1b      	ldr	r3, [r3, #32]
 8010092:	617b      	str	r3, [r7, #20]
 8010094:	687b      	ldr	r3, [r7, #4]
 8010096:	6a1b      	ldr	r3, [r3, #32]
 8010098:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 801009c:	687b      	ldr	r3, [r7, #4]
 801009e:	621a      	str	r2, [r3, #32]
 80100a0:	687b      	ldr	r3, [r7, #4]
 80100a2:	685b      	ldr	r3, [r3, #4]
 80100a4:	613b      	str	r3, [r7, #16]
 80100a6:	687b      	ldr	r3, [r7, #4]
 80100a8:	69db      	ldr	r3, [r3, #28]
 80100aa:	60fb      	str	r3, [r7, #12]
 80100ac:	68fa      	ldr	r2, [r7, #12]
 80100ae:	4b33      	ldr	r3, [pc, #204]	@ (801017c <TIM_OC3_SetConfig+0xf8>)
 80100b0:	4013      	ands	r3, r2
 80100b2:	60fb      	str	r3, [r7, #12]
 80100b4:	68fb      	ldr	r3, [r7, #12]
 80100b6:	f023 0303 	bic.w	r3, r3, #3
 80100ba:	60fb      	str	r3, [r7, #12]
 80100bc:	683b      	ldr	r3, [r7, #0]
 80100be:	681b      	ldr	r3, [r3, #0]
 80100c0:	68fa      	ldr	r2, [r7, #12]
 80100c2:	4313      	orrs	r3, r2
 80100c4:	60fb      	str	r3, [r7, #12]
 80100c6:	697b      	ldr	r3, [r7, #20]
 80100c8:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80100cc:	617b      	str	r3, [r7, #20]
 80100ce:	683b      	ldr	r3, [r7, #0]
 80100d0:	689b      	ldr	r3, [r3, #8]
 80100d2:	021b      	lsls	r3, r3, #8
 80100d4:	697a      	ldr	r2, [r7, #20]
 80100d6:	4313      	orrs	r3, r2
 80100d8:	617b      	str	r3, [r7, #20]
 80100da:	687b      	ldr	r3, [r7, #4]
 80100dc:	4a28      	ldr	r2, [pc, #160]	@ (8010180 <TIM_OC3_SetConfig+0xfc>)
 80100de:	4293      	cmp	r3, r2
 80100e0:	d003      	beq.n	80100ea <TIM_OC3_SetConfig+0x66>
 80100e2:	687b      	ldr	r3, [r7, #4]
 80100e4:	4a27      	ldr	r2, [pc, #156]	@ (8010184 <TIM_OC3_SetConfig+0x100>)
 80100e6:	4293      	cmp	r3, r2
 80100e8:	d10d      	bne.n	8010106 <TIM_OC3_SetConfig+0x82>
 80100ea:	697b      	ldr	r3, [r7, #20]
 80100ec:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80100f0:	617b      	str	r3, [r7, #20]
 80100f2:	683b      	ldr	r3, [r7, #0]
 80100f4:	68db      	ldr	r3, [r3, #12]
 80100f6:	021b      	lsls	r3, r3, #8
 80100f8:	697a      	ldr	r2, [r7, #20]
 80100fa:	4313      	orrs	r3, r2
 80100fc:	617b      	str	r3, [r7, #20]
 80100fe:	697b      	ldr	r3, [r7, #20]
 8010100:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8010104:	617b      	str	r3, [r7, #20]
 8010106:	687b      	ldr	r3, [r7, #4]
 8010108:	4a1d      	ldr	r2, [pc, #116]	@ (8010180 <TIM_OC3_SetConfig+0xfc>)
 801010a:	4293      	cmp	r3, r2
 801010c:	d00f      	beq.n	801012e <TIM_OC3_SetConfig+0xaa>
 801010e:	687b      	ldr	r3, [r7, #4]
 8010110:	4a1c      	ldr	r2, [pc, #112]	@ (8010184 <TIM_OC3_SetConfig+0x100>)
 8010112:	4293      	cmp	r3, r2
 8010114:	d00b      	beq.n	801012e <TIM_OC3_SetConfig+0xaa>
 8010116:	687b      	ldr	r3, [r7, #4]
 8010118:	4a1b      	ldr	r2, [pc, #108]	@ (8010188 <TIM_OC3_SetConfig+0x104>)
 801011a:	4293      	cmp	r3, r2
 801011c:	d007      	beq.n	801012e <TIM_OC3_SetConfig+0xaa>
 801011e:	687b      	ldr	r3, [r7, #4]
 8010120:	4a1a      	ldr	r2, [pc, #104]	@ (801018c <TIM_OC3_SetConfig+0x108>)
 8010122:	4293      	cmp	r3, r2
 8010124:	d003      	beq.n	801012e <TIM_OC3_SetConfig+0xaa>
 8010126:	687b      	ldr	r3, [r7, #4]
 8010128:	4a19      	ldr	r2, [pc, #100]	@ (8010190 <TIM_OC3_SetConfig+0x10c>)
 801012a:	4293      	cmp	r3, r2
 801012c:	d113      	bne.n	8010156 <TIM_OC3_SetConfig+0xd2>
 801012e:	693b      	ldr	r3, [r7, #16]
 8010130:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8010134:	613b      	str	r3, [r7, #16]
 8010136:	693b      	ldr	r3, [r7, #16]
 8010138:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 801013c:	613b      	str	r3, [r7, #16]
 801013e:	683b      	ldr	r3, [r7, #0]
 8010140:	695b      	ldr	r3, [r3, #20]
 8010142:	011b      	lsls	r3, r3, #4
 8010144:	693a      	ldr	r2, [r7, #16]
 8010146:	4313      	orrs	r3, r2
 8010148:	613b      	str	r3, [r7, #16]
 801014a:	683b      	ldr	r3, [r7, #0]
 801014c:	699b      	ldr	r3, [r3, #24]
 801014e:	011b      	lsls	r3, r3, #4
 8010150:	693a      	ldr	r2, [r7, #16]
 8010152:	4313      	orrs	r3, r2
 8010154:	613b      	str	r3, [r7, #16]
 8010156:	687b      	ldr	r3, [r7, #4]
 8010158:	693a      	ldr	r2, [r7, #16]
 801015a:	605a      	str	r2, [r3, #4]
 801015c:	687b      	ldr	r3, [r7, #4]
 801015e:	68fa      	ldr	r2, [r7, #12]
 8010160:	61da      	str	r2, [r3, #28]
 8010162:	683b      	ldr	r3, [r7, #0]
 8010164:	685a      	ldr	r2, [r3, #4]
 8010166:	687b      	ldr	r3, [r7, #4]
 8010168:	63da      	str	r2, [r3, #60]	@ 0x3c
 801016a:	687b      	ldr	r3, [r7, #4]
 801016c:	697a      	ldr	r2, [r7, #20]
 801016e:	621a      	str	r2, [r3, #32]
 8010170:	bf00      	nop
 8010172:	371c      	adds	r7, #28
 8010174:	46bd      	mov	sp, r7
 8010176:	f85d 7b04 	ldr.w	r7, [sp], #4
 801017a:	4770      	bx	lr
 801017c:	fffeff8f 	.word	0xfffeff8f
 8010180:	40010000 	.word	0x40010000
 8010184:	40010400 	.word	0x40010400
 8010188:	40014000 	.word	0x40014000
 801018c:	40014400 	.word	0x40014400
 8010190:	40014800 	.word	0x40014800

08010194 <TIM_OC4_SetConfig>:
 8010194:	b480      	push	{r7}
 8010196:	b087      	sub	sp, #28
 8010198:	af00      	add	r7, sp, #0
 801019a:	6078      	str	r0, [r7, #4]
 801019c:	6039      	str	r1, [r7, #0]
 801019e:	687b      	ldr	r3, [r7, #4]
 80101a0:	6a1b      	ldr	r3, [r3, #32]
 80101a2:	613b      	str	r3, [r7, #16]
 80101a4:	687b      	ldr	r3, [r7, #4]
 80101a6:	6a1b      	ldr	r3, [r3, #32]
 80101a8:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80101ac:	687b      	ldr	r3, [r7, #4]
 80101ae:	621a      	str	r2, [r3, #32]
 80101b0:	687b      	ldr	r3, [r7, #4]
 80101b2:	685b      	ldr	r3, [r3, #4]
 80101b4:	617b      	str	r3, [r7, #20]
 80101b6:	687b      	ldr	r3, [r7, #4]
 80101b8:	69db      	ldr	r3, [r3, #28]
 80101ba:	60fb      	str	r3, [r7, #12]
 80101bc:	68fa      	ldr	r2, [r7, #12]
 80101be:	4b24      	ldr	r3, [pc, #144]	@ (8010250 <TIM_OC4_SetConfig+0xbc>)
 80101c0:	4013      	ands	r3, r2
 80101c2:	60fb      	str	r3, [r7, #12]
 80101c4:	68fb      	ldr	r3, [r7, #12]
 80101c6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80101ca:	60fb      	str	r3, [r7, #12]
 80101cc:	683b      	ldr	r3, [r7, #0]
 80101ce:	681b      	ldr	r3, [r3, #0]
 80101d0:	021b      	lsls	r3, r3, #8
 80101d2:	68fa      	ldr	r2, [r7, #12]
 80101d4:	4313      	orrs	r3, r2
 80101d6:	60fb      	str	r3, [r7, #12]
 80101d8:	693b      	ldr	r3, [r7, #16]
 80101da:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80101de:	613b      	str	r3, [r7, #16]
 80101e0:	683b      	ldr	r3, [r7, #0]
 80101e2:	689b      	ldr	r3, [r3, #8]
 80101e4:	031b      	lsls	r3, r3, #12
 80101e6:	693a      	ldr	r2, [r7, #16]
 80101e8:	4313      	orrs	r3, r2
 80101ea:	613b      	str	r3, [r7, #16]
 80101ec:	687b      	ldr	r3, [r7, #4]
 80101ee:	4a19      	ldr	r2, [pc, #100]	@ (8010254 <TIM_OC4_SetConfig+0xc0>)
 80101f0:	4293      	cmp	r3, r2
 80101f2:	d00f      	beq.n	8010214 <TIM_OC4_SetConfig+0x80>
 80101f4:	687b      	ldr	r3, [r7, #4]
 80101f6:	4a18      	ldr	r2, [pc, #96]	@ (8010258 <TIM_OC4_SetConfig+0xc4>)
 80101f8:	4293      	cmp	r3, r2
 80101fa:	d00b      	beq.n	8010214 <TIM_OC4_SetConfig+0x80>
 80101fc:	687b      	ldr	r3, [r7, #4]
 80101fe:	4a17      	ldr	r2, [pc, #92]	@ (801025c <TIM_OC4_SetConfig+0xc8>)
 8010200:	4293      	cmp	r3, r2
 8010202:	d007      	beq.n	8010214 <TIM_OC4_SetConfig+0x80>
 8010204:	687b      	ldr	r3, [r7, #4]
 8010206:	4a16      	ldr	r2, [pc, #88]	@ (8010260 <TIM_OC4_SetConfig+0xcc>)
 8010208:	4293      	cmp	r3, r2
 801020a:	d003      	beq.n	8010214 <TIM_OC4_SetConfig+0x80>
 801020c:	687b      	ldr	r3, [r7, #4]
 801020e:	4a15      	ldr	r2, [pc, #84]	@ (8010264 <TIM_OC4_SetConfig+0xd0>)
 8010210:	4293      	cmp	r3, r2
 8010212:	d109      	bne.n	8010228 <TIM_OC4_SetConfig+0x94>
 8010214:	697b      	ldr	r3, [r7, #20]
 8010216:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 801021a:	617b      	str	r3, [r7, #20]
 801021c:	683b      	ldr	r3, [r7, #0]
 801021e:	695b      	ldr	r3, [r3, #20]
 8010220:	019b      	lsls	r3, r3, #6
 8010222:	697a      	ldr	r2, [r7, #20]
 8010224:	4313      	orrs	r3, r2
 8010226:	617b      	str	r3, [r7, #20]
 8010228:	687b      	ldr	r3, [r7, #4]
 801022a:	697a      	ldr	r2, [r7, #20]
 801022c:	605a      	str	r2, [r3, #4]
 801022e:	687b      	ldr	r3, [r7, #4]
 8010230:	68fa      	ldr	r2, [r7, #12]
 8010232:	61da      	str	r2, [r3, #28]
 8010234:	683b      	ldr	r3, [r7, #0]
 8010236:	685a      	ldr	r2, [r3, #4]
 8010238:	687b      	ldr	r3, [r7, #4]
 801023a:	641a      	str	r2, [r3, #64]	@ 0x40
 801023c:	687b      	ldr	r3, [r7, #4]
 801023e:	693a      	ldr	r2, [r7, #16]
 8010240:	621a      	str	r2, [r3, #32]
 8010242:	bf00      	nop
 8010244:	371c      	adds	r7, #28
 8010246:	46bd      	mov	sp, r7
 8010248:	f85d 7b04 	ldr.w	r7, [sp], #4
 801024c:	4770      	bx	lr
 801024e:	bf00      	nop
 8010250:	feff8fff 	.word	0xfeff8fff
 8010254:	40010000 	.word	0x40010000
 8010258:	40010400 	.word	0x40010400
 801025c:	40014000 	.word	0x40014000
 8010260:	40014400 	.word	0x40014400
 8010264:	40014800 	.word	0x40014800

08010268 <TIM_OC5_SetConfig>:
 8010268:	b480      	push	{r7}
 801026a:	b087      	sub	sp, #28
 801026c:	af00      	add	r7, sp, #0
 801026e:	6078      	str	r0, [r7, #4]
 8010270:	6039      	str	r1, [r7, #0]
 8010272:	687b      	ldr	r3, [r7, #4]
 8010274:	6a1b      	ldr	r3, [r3, #32]
 8010276:	613b      	str	r3, [r7, #16]
 8010278:	687b      	ldr	r3, [r7, #4]
 801027a:	6a1b      	ldr	r3, [r3, #32]
 801027c:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8010280:	687b      	ldr	r3, [r7, #4]
 8010282:	621a      	str	r2, [r3, #32]
 8010284:	687b      	ldr	r3, [r7, #4]
 8010286:	685b      	ldr	r3, [r3, #4]
 8010288:	617b      	str	r3, [r7, #20]
 801028a:	687b      	ldr	r3, [r7, #4]
 801028c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801028e:	60fb      	str	r3, [r7, #12]
 8010290:	68fa      	ldr	r2, [r7, #12]
 8010292:	4b21      	ldr	r3, [pc, #132]	@ (8010318 <TIM_OC5_SetConfig+0xb0>)
 8010294:	4013      	ands	r3, r2
 8010296:	60fb      	str	r3, [r7, #12]
 8010298:	683b      	ldr	r3, [r7, #0]
 801029a:	681b      	ldr	r3, [r3, #0]
 801029c:	68fa      	ldr	r2, [r7, #12]
 801029e:	4313      	orrs	r3, r2
 80102a0:	60fb      	str	r3, [r7, #12]
 80102a2:	693b      	ldr	r3, [r7, #16]
 80102a4:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 80102a8:	613b      	str	r3, [r7, #16]
 80102aa:	683b      	ldr	r3, [r7, #0]
 80102ac:	689b      	ldr	r3, [r3, #8]
 80102ae:	041b      	lsls	r3, r3, #16
 80102b0:	693a      	ldr	r2, [r7, #16]
 80102b2:	4313      	orrs	r3, r2
 80102b4:	613b      	str	r3, [r7, #16]
 80102b6:	687b      	ldr	r3, [r7, #4]
 80102b8:	4a18      	ldr	r2, [pc, #96]	@ (801031c <TIM_OC5_SetConfig+0xb4>)
 80102ba:	4293      	cmp	r3, r2
 80102bc:	d00f      	beq.n	80102de <TIM_OC5_SetConfig+0x76>
 80102be:	687b      	ldr	r3, [r7, #4]
 80102c0:	4a17      	ldr	r2, [pc, #92]	@ (8010320 <TIM_OC5_SetConfig+0xb8>)
 80102c2:	4293      	cmp	r3, r2
 80102c4:	d00b      	beq.n	80102de <TIM_OC5_SetConfig+0x76>
 80102c6:	687b      	ldr	r3, [r7, #4]
 80102c8:	4a16      	ldr	r2, [pc, #88]	@ (8010324 <TIM_OC5_SetConfig+0xbc>)
 80102ca:	4293      	cmp	r3, r2
 80102cc:	d007      	beq.n	80102de <TIM_OC5_SetConfig+0x76>
 80102ce:	687b      	ldr	r3, [r7, #4]
 80102d0:	4a15      	ldr	r2, [pc, #84]	@ (8010328 <TIM_OC5_SetConfig+0xc0>)
 80102d2:	4293      	cmp	r3, r2
 80102d4:	d003      	beq.n	80102de <TIM_OC5_SetConfig+0x76>
 80102d6:	687b      	ldr	r3, [r7, #4]
 80102d8:	4a14      	ldr	r2, [pc, #80]	@ (801032c <TIM_OC5_SetConfig+0xc4>)
 80102da:	4293      	cmp	r3, r2
 80102dc:	d109      	bne.n	80102f2 <TIM_OC5_SetConfig+0x8a>
 80102de:	697b      	ldr	r3, [r7, #20]
 80102e0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80102e4:	617b      	str	r3, [r7, #20]
 80102e6:	683b      	ldr	r3, [r7, #0]
 80102e8:	695b      	ldr	r3, [r3, #20]
 80102ea:	021b      	lsls	r3, r3, #8
 80102ec:	697a      	ldr	r2, [r7, #20]
 80102ee:	4313      	orrs	r3, r2
 80102f0:	617b      	str	r3, [r7, #20]
 80102f2:	687b      	ldr	r3, [r7, #4]
 80102f4:	697a      	ldr	r2, [r7, #20]
 80102f6:	605a      	str	r2, [r3, #4]
 80102f8:	687b      	ldr	r3, [r7, #4]
 80102fa:	68fa      	ldr	r2, [r7, #12]
 80102fc:	655a      	str	r2, [r3, #84]	@ 0x54
 80102fe:	683b      	ldr	r3, [r7, #0]
 8010300:	685a      	ldr	r2, [r3, #4]
 8010302:	687b      	ldr	r3, [r7, #4]
 8010304:	659a      	str	r2, [r3, #88]	@ 0x58
 8010306:	687b      	ldr	r3, [r7, #4]
 8010308:	693a      	ldr	r2, [r7, #16]
 801030a:	621a      	str	r2, [r3, #32]
 801030c:	bf00      	nop
 801030e:	371c      	adds	r7, #28
 8010310:	46bd      	mov	sp, r7
 8010312:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010316:	4770      	bx	lr
 8010318:	fffeff8f 	.word	0xfffeff8f
 801031c:	40010000 	.word	0x40010000
 8010320:	40010400 	.word	0x40010400
 8010324:	40014000 	.word	0x40014000
 8010328:	40014400 	.word	0x40014400
 801032c:	40014800 	.word	0x40014800

08010330 <TIM_OC6_SetConfig>:
 8010330:	b480      	push	{r7}
 8010332:	b087      	sub	sp, #28
 8010334:	af00      	add	r7, sp, #0
 8010336:	6078      	str	r0, [r7, #4]
 8010338:	6039      	str	r1, [r7, #0]
 801033a:	687b      	ldr	r3, [r7, #4]
 801033c:	6a1b      	ldr	r3, [r3, #32]
 801033e:	613b      	str	r3, [r7, #16]
 8010340:	687b      	ldr	r3, [r7, #4]
 8010342:	6a1b      	ldr	r3, [r3, #32]
 8010344:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8010348:	687b      	ldr	r3, [r7, #4]
 801034a:	621a      	str	r2, [r3, #32]
 801034c:	687b      	ldr	r3, [r7, #4]
 801034e:	685b      	ldr	r3, [r3, #4]
 8010350:	617b      	str	r3, [r7, #20]
 8010352:	687b      	ldr	r3, [r7, #4]
 8010354:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010356:	60fb      	str	r3, [r7, #12]
 8010358:	68fa      	ldr	r2, [r7, #12]
 801035a:	4b22      	ldr	r3, [pc, #136]	@ (80103e4 <TIM_OC6_SetConfig+0xb4>)
 801035c:	4013      	ands	r3, r2
 801035e:	60fb      	str	r3, [r7, #12]
 8010360:	683b      	ldr	r3, [r7, #0]
 8010362:	681b      	ldr	r3, [r3, #0]
 8010364:	021b      	lsls	r3, r3, #8
 8010366:	68fa      	ldr	r2, [r7, #12]
 8010368:	4313      	orrs	r3, r2
 801036a:	60fb      	str	r3, [r7, #12]
 801036c:	693b      	ldr	r3, [r7, #16]
 801036e:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8010372:	613b      	str	r3, [r7, #16]
 8010374:	683b      	ldr	r3, [r7, #0]
 8010376:	689b      	ldr	r3, [r3, #8]
 8010378:	051b      	lsls	r3, r3, #20
 801037a:	693a      	ldr	r2, [r7, #16]
 801037c:	4313      	orrs	r3, r2
 801037e:	613b      	str	r3, [r7, #16]
 8010380:	687b      	ldr	r3, [r7, #4]
 8010382:	4a19      	ldr	r2, [pc, #100]	@ (80103e8 <TIM_OC6_SetConfig+0xb8>)
 8010384:	4293      	cmp	r3, r2
 8010386:	d00f      	beq.n	80103a8 <TIM_OC6_SetConfig+0x78>
 8010388:	687b      	ldr	r3, [r7, #4]
 801038a:	4a18      	ldr	r2, [pc, #96]	@ (80103ec <TIM_OC6_SetConfig+0xbc>)
 801038c:	4293      	cmp	r3, r2
 801038e:	d00b      	beq.n	80103a8 <TIM_OC6_SetConfig+0x78>
 8010390:	687b      	ldr	r3, [r7, #4]
 8010392:	4a17      	ldr	r2, [pc, #92]	@ (80103f0 <TIM_OC6_SetConfig+0xc0>)
 8010394:	4293      	cmp	r3, r2
 8010396:	d007      	beq.n	80103a8 <TIM_OC6_SetConfig+0x78>
 8010398:	687b      	ldr	r3, [r7, #4]
 801039a:	4a16      	ldr	r2, [pc, #88]	@ (80103f4 <TIM_OC6_SetConfig+0xc4>)
 801039c:	4293      	cmp	r3, r2
 801039e:	d003      	beq.n	80103a8 <TIM_OC6_SetConfig+0x78>
 80103a0:	687b      	ldr	r3, [r7, #4]
 80103a2:	4a15      	ldr	r2, [pc, #84]	@ (80103f8 <TIM_OC6_SetConfig+0xc8>)
 80103a4:	4293      	cmp	r3, r2
 80103a6:	d109      	bne.n	80103bc <TIM_OC6_SetConfig+0x8c>
 80103a8:	697b      	ldr	r3, [r7, #20]
 80103aa:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80103ae:	617b      	str	r3, [r7, #20]
 80103b0:	683b      	ldr	r3, [r7, #0]
 80103b2:	695b      	ldr	r3, [r3, #20]
 80103b4:	029b      	lsls	r3, r3, #10
 80103b6:	697a      	ldr	r2, [r7, #20]
 80103b8:	4313      	orrs	r3, r2
 80103ba:	617b      	str	r3, [r7, #20]
 80103bc:	687b      	ldr	r3, [r7, #4]
 80103be:	697a      	ldr	r2, [r7, #20]
 80103c0:	605a      	str	r2, [r3, #4]
 80103c2:	687b      	ldr	r3, [r7, #4]
 80103c4:	68fa      	ldr	r2, [r7, #12]
 80103c6:	655a      	str	r2, [r3, #84]	@ 0x54
 80103c8:	683b      	ldr	r3, [r7, #0]
 80103ca:	685a      	ldr	r2, [r3, #4]
 80103cc:	687b      	ldr	r3, [r7, #4]
 80103ce:	65da      	str	r2, [r3, #92]	@ 0x5c
 80103d0:	687b      	ldr	r3, [r7, #4]
 80103d2:	693a      	ldr	r2, [r7, #16]
 80103d4:	621a      	str	r2, [r3, #32]
 80103d6:	bf00      	nop
 80103d8:	371c      	adds	r7, #28
 80103da:	46bd      	mov	sp, r7
 80103dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80103e0:	4770      	bx	lr
 80103e2:	bf00      	nop
 80103e4:	feff8fff 	.word	0xfeff8fff
 80103e8:	40010000 	.word	0x40010000
 80103ec:	40010400 	.word	0x40010400
 80103f0:	40014000 	.word	0x40014000
 80103f4:	40014400 	.word	0x40014400
 80103f8:	40014800 	.word	0x40014800

080103fc <TIM_TI1_ConfigInputStage>:
 80103fc:	b480      	push	{r7}
 80103fe:	b087      	sub	sp, #28
 8010400:	af00      	add	r7, sp, #0
 8010402:	60f8      	str	r0, [r7, #12]
 8010404:	60b9      	str	r1, [r7, #8]
 8010406:	607a      	str	r2, [r7, #4]
 8010408:	68fb      	ldr	r3, [r7, #12]
 801040a:	6a1b      	ldr	r3, [r3, #32]
 801040c:	617b      	str	r3, [r7, #20]
 801040e:	68fb      	ldr	r3, [r7, #12]
 8010410:	6a1b      	ldr	r3, [r3, #32]
 8010412:	f023 0201 	bic.w	r2, r3, #1
 8010416:	68fb      	ldr	r3, [r7, #12]
 8010418:	621a      	str	r2, [r3, #32]
 801041a:	68fb      	ldr	r3, [r7, #12]
 801041c:	699b      	ldr	r3, [r3, #24]
 801041e:	613b      	str	r3, [r7, #16]
 8010420:	693b      	ldr	r3, [r7, #16]
 8010422:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8010426:	613b      	str	r3, [r7, #16]
 8010428:	687b      	ldr	r3, [r7, #4]
 801042a:	011b      	lsls	r3, r3, #4
 801042c:	693a      	ldr	r2, [r7, #16]
 801042e:	4313      	orrs	r3, r2
 8010430:	613b      	str	r3, [r7, #16]
 8010432:	697b      	ldr	r3, [r7, #20]
 8010434:	f023 030a 	bic.w	r3, r3, #10
 8010438:	617b      	str	r3, [r7, #20]
 801043a:	697a      	ldr	r2, [r7, #20]
 801043c:	68bb      	ldr	r3, [r7, #8]
 801043e:	4313      	orrs	r3, r2
 8010440:	617b      	str	r3, [r7, #20]
 8010442:	68fb      	ldr	r3, [r7, #12]
 8010444:	693a      	ldr	r2, [r7, #16]
 8010446:	619a      	str	r2, [r3, #24]
 8010448:	68fb      	ldr	r3, [r7, #12]
 801044a:	697a      	ldr	r2, [r7, #20]
 801044c:	621a      	str	r2, [r3, #32]
 801044e:	bf00      	nop
 8010450:	371c      	adds	r7, #28
 8010452:	46bd      	mov	sp, r7
 8010454:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010458:	4770      	bx	lr

0801045a <TIM_TI2_ConfigInputStage>:
 801045a:	b480      	push	{r7}
 801045c:	b087      	sub	sp, #28
 801045e:	af00      	add	r7, sp, #0
 8010460:	60f8      	str	r0, [r7, #12]
 8010462:	60b9      	str	r1, [r7, #8]
 8010464:	607a      	str	r2, [r7, #4]
 8010466:	68fb      	ldr	r3, [r7, #12]
 8010468:	6a1b      	ldr	r3, [r3, #32]
 801046a:	617b      	str	r3, [r7, #20]
 801046c:	68fb      	ldr	r3, [r7, #12]
 801046e:	6a1b      	ldr	r3, [r3, #32]
 8010470:	f023 0210 	bic.w	r2, r3, #16
 8010474:	68fb      	ldr	r3, [r7, #12]
 8010476:	621a      	str	r2, [r3, #32]
 8010478:	68fb      	ldr	r3, [r7, #12]
 801047a:	699b      	ldr	r3, [r3, #24]
 801047c:	613b      	str	r3, [r7, #16]
 801047e:	693b      	ldr	r3, [r7, #16]
 8010480:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8010484:	613b      	str	r3, [r7, #16]
 8010486:	687b      	ldr	r3, [r7, #4]
 8010488:	031b      	lsls	r3, r3, #12
 801048a:	693a      	ldr	r2, [r7, #16]
 801048c:	4313      	orrs	r3, r2
 801048e:	613b      	str	r3, [r7, #16]
 8010490:	697b      	ldr	r3, [r7, #20]
 8010492:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8010496:	617b      	str	r3, [r7, #20]
 8010498:	68bb      	ldr	r3, [r7, #8]
 801049a:	011b      	lsls	r3, r3, #4
 801049c:	697a      	ldr	r2, [r7, #20]
 801049e:	4313      	orrs	r3, r2
 80104a0:	617b      	str	r3, [r7, #20]
 80104a2:	68fb      	ldr	r3, [r7, #12]
 80104a4:	693a      	ldr	r2, [r7, #16]
 80104a6:	619a      	str	r2, [r3, #24]
 80104a8:	68fb      	ldr	r3, [r7, #12]
 80104aa:	697a      	ldr	r2, [r7, #20]
 80104ac:	621a      	str	r2, [r3, #32]
 80104ae:	bf00      	nop
 80104b0:	371c      	adds	r7, #28
 80104b2:	46bd      	mov	sp, r7
 80104b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80104b8:	4770      	bx	lr
	...

080104bc <TIM_ITRx_SetConfig>:
 80104bc:	b480      	push	{r7}
 80104be:	b085      	sub	sp, #20
 80104c0:	af00      	add	r7, sp, #0
 80104c2:	6078      	str	r0, [r7, #4]
 80104c4:	6039      	str	r1, [r7, #0]
 80104c6:	687b      	ldr	r3, [r7, #4]
 80104c8:	689b      	ldr	r3, [r3, #8]
 80104ca:	60fb      	str	r3, [r7, #12]
 80104cc:	68fa      	ldr	r2, [r7, #12]
 80104ce:	4b09      	ldr	r3, [pc, #36]	@ (80104f4 <TIM_ITRx_SetConfig+0x38>)
 80104d0:	4013      	ands	r3, r2
 80104d2:	60fb      	str	r3, [r7, #12]
 80104d4:	683a      	ldr	r2, [r7, #0]
 80104d6:	68fb      	ldr	r3, [r7, #12]
 80104d8:	4313      	orrs	r3, r2
 80104da:	f043 0307 	orr.w	r3, r3, #7
 80104de:	60fb      	str	r3, [r7, #12]
 80104e0:	687b      	ldr	r3, [r7, #4]
 80104e2:	68fa      	ldr	r2, [r7, #12]
 80104e4:	609a      	str	r2, [r3, #8]
 80104e6:	bf00      	nop
 80104e8:	3714      	adds	r7, #20
 80104ea:	46bd      	mov	sp, r7
 80104ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80104f0:	4770      	bx	lr
 80104f2:	bf00      	nop
 80104f4:	ffcfff8f 	.word	0xffcfff8f

080104f8 <TIM_ETR_SetConfig>:
 80104f8:	b480      	push	{r7}
 80104fa:	b087      	sub	sp, #28
 80104fc:	af00      	add	r7, sp, #0
 80104fe:	60f8      	str	r0, [r7, #12]
 8010500:	60b9      	str	r1, [r7, #8]
 8010502:	607a      	str	r2, [r7, #4]
 8010504:	603b      	str	r3, [r7, #0]
 8010506:	68fb      	ldr	r3, [r7, #12]
 8010508:	689b      	ldr	r3, [r3, #8]
 801050a:	617b      	str	r3, [r7, #20]
 801050c:	697b      	ldr	r3, [r7, #20]
 801050e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8010512:	617b      	str	r3, [r7, #20]
 8010514:	683b      	ldr	r3, [r7, #0]
 8010516:	021a      	lsls	r2, r3, #8
 8010518:	687b      	ldr	r3, [r7, #4]
 801051a:	431a      	orrs	r2, r3
 801051c:	68bb      	ldr	r3, [r7, #8]
 801051e:	4313      	orrs	r3, r2
 8010520:	697a      	ldr	r2, [r7, #20]
 8010522:	4313      	orrs	r3, r2
 8010524:	617b      	str	r3, [r7, #20]
 8010526:	68fb      	ldr	r3, [r7, #12]
 8010528:	697a      	ldr	r2, [r7, #20]
 801052a:	609a      	str	r2, [r3, #8]
 801052c:	bf00      	nop
 801052e:	371c      	adds	r7, #28
 8010530:	46bd      	mov	sp, r7
 8010532:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010536:	4770      	bx	lr

08010538 <TIM_CCxChannelCmd>:
 8010538:	b480      	push	{r7}
 801053a:	b087      	sub	sp, #28
 801053c:	af00      	add	r7, sp, #0
 801053e:	60f8      	str	r0, [r7, #12]
 8010540:	60b9      	str	r1, [r7, #8]
 8010542:	607a      	str	r2, [r7, #4]
 8010544:	68bb      	ldr	r3, [r7, #8]
 8010546:	f003 031f 	and.w	r3, r3, #31
 801054a:	2201      	movs	r2, #1
 801054c:	fa02 f303 	lsl.w	r3, r2, r3
 8010550:	617b      	str	r3, [r7, #20]
 8010552:	68fb      	ldr	r3, [r7, #12]
 8010554:	6a1a      	ldr	r2, [r3, #32]
 8010556:	697b      	ldr	r3, [r7, #20]
 8010558:	43db      	mvns	r3, r3
 801055a:	401a      	ands	r2, r3
 801055c:	68fb      	ldr	r3, [r7, #12]
 801055e:	621a      	str	r2, [r3, #32]
 8010560:	68fb      	ldr	r3, [r7, #12]
 8010562:	6a1a      	ldr	r2, [r3, #32]
 8010564:	68bb      	ldr	r3, [r7, #8]
 8010566:	f003 031f 	and.w	r3, r3, #31
 801056a:	6879      	ldr	r1, [r7, #4]
 801056c:	fa01 f303 	lsl.w	r3, r1, r3
 8010570:	431a      	orrs	r2, r3
 8010572:	68fb      	ldr	r3, [r7, #12]
 8010574:	621a      	str	r2, [r3, #32]
 8010576:	bf00      	nop
 8010578:	371c      	adds	r7, #28
 801057a:	46bd      	mov	sp, r7
 801057c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010580:	4770      	bx	lr
	...

08010584 <HAL_TIMEx_MasterConfigSynchronization>:
 8010584:	b480      	push	{r7}
 8010586:	b085      	sub	sp, #20
 8010588:	af00      	add	r7, sp, #0
 801058a:	6078      	str	r0, [r7, #4]
 801058c:	6039      	str	r1, [r7, #0]
 801058e:	687b      	ldr	r3, [r7, #4]
 8010590:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8010594:	2b01      	cmp	r3, #1
 8010596:	d101      	bne.n	801059c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8010598:	2302      	movs	r3, #2
 801059a:	e077      	b.n	801068c <HAL_TIMEx_MasterConfigSynchronization+0x108>
 801059c:	687b      	ldr	r3, [r7, #4]
 801059e:	2201      	movs	r2, #1
 80105a0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80105a4:	687b      	ldr	r3, [r7, #4]
 80105a6:	2202      	movs	r2, #2
 80105a8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80105ac:	687b      	ldr	r3, [r7, #4]
 80105ae:	681b      	ldr	r3, [r3, #0]
 80105b0:	685b      	ldr	r3, [r3, #4]
 80105b2:	60fb      	str	r3, [r7, #12]
 80105b4:	687b      	ldr	r3, [r7, #4]
 80105b6:	681b      	ldr	r3, [r3, #0]
 80105b8:	689b      	ldr	r3, [r3, #8]
 80105ba:	60bb      	str	r3, [r7, #8]
 80105bc:	687b      	ldr	r3, [r7, #4]
 80105be:	681b      	ldr	r3, [r3, #0]
 80105c0:	4a35      	ldr	r2, [pc, #212]	@ (8010698 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 80105c2:	4293      	cmp	r3, r2
 80105c4:	d004      	beq.n	80105d0 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 80105c6:	687b      	ldr	r3, [r7, #4]
 80105c8:	681b      	ldr	r3, [r3, #0]
 80105ca:	4a34      	ldr	r2, [pc, #208]	@ (801069c <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 80105cc:	4293      	cmp	r3, r2
 80105ce:	d108      	bne.n	80105e2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80105d0:	68fb      	ldr	r3, [r7, #12]
 80105d2:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 80105d6:	60fb      	str	r3, [r7, #12]
 80105d8:	683b      	ldr	r3, [r7, #0]
 80105da:	685b      	ldr	r3, [r3, #4]
 80105dc:	68fa      	ldr	r2, [r7, #12]
 80105de:	4313      	orrs	r3, r2
 80105e0:	60fb      	str	r3, [r7, #12]
 80105e2:	68fb      	ldr	r3, [r7, #12]
 80105e4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80105e8:	60fb      	str	r3, [r7, #12]
 80105ea:	683b      	ldr	r3, [r7, #0]
 80105ec:	681b      	ldr	r3, [r3, #0]
 80105ee:	68fa      	ldr	r2, [r7, #12]
 80105f0:	4313      	orrs	r3, r2
 80105f2:	60fb      	str	r3, [r7, #12]
 80105f4:	687b      	ldr	r3, [r7, #4]
 80105f6:	681b      	ldr	r3, [r3, #0]
 80105f8:	68fa      	ldr	r2, [r7, #12]
 80105fa:	605a      	str	r2, [r3, #4]
 80105fc:	687b      	ldr	r3, [r7, #4]
 80105fe:	681b      	ldr	r3, [r3, #0]
 8010600:	4a25      	ldr	r2, [pc, #148]	@ (8010698 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 8010602:	4293      	cmp	r3, r2
 8010604:	d02c      	beq.n	8010660 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 8010606:	687b      	ldr	r3, [r7, #4]
 8010608:	681b      	ldr	r3, [r3, #0]
 801060a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 801060e:	d027      	beq.n	8010660 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 8010610:	687b      	ldr	r3, [r7, #4]
 8010612:	681b      	ldr	r3, [r3, #0]
 8010614:	4a22      	ldr	r2, [pc, #136]	@ (80106a0 <HAL_TIMEx_MasterConfigSynchronization+0x11c>)
 8010616:	4293      	cmp	r3, r2
 8010618:	d022      	beq.n	8010660 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 801061a:	687b      	ldr	r3, [r7, #4]
 801061c:	681b      	ldr	r3, [r3, #0]
 801061e:	4a21      	ldr	r2, [pc, #132]	@ (80106a4 <HAL_TIMEx_MasterConfigSynchronization+0x120>)
 8010620:	4293      	cmp	r3, r2
 8010622:	d01d      	beq.n	8010660 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 8010624:	687b      	ldr	r3, [r7, #4]
 8010626:	681b      	ldr	r3, [r3, #0]
 8010628:	4a1f      	ldr	r2, [pc, #124]	@ (80106a8 <HAL_TIMEx_MasterConfigSynchronization+0x124>)
 801062a:	4293      	cmp	r3, r2
 801062c:	d018      	beq.n	8010660 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 801062e:	687b      	ldr	r3, [r7, #4]
 8010630:	681b      	ldr	r3, [r3, #0]
 8010632:	4a1a      	ldr	r2, [pc, #104]	@ (801069c <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 8010634:	4293      	cmp	r3, r2
 8010636:	d013      	beq.n	8010660 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 8010638:	687b      	ldr	r3, [r7, #4]
 801063a:	681b      	ldr	r3, [r3, #0]
 801063c:	4a1b      	ldr	r2, [pc, #108]	@ (80106ac <HAL_TIMEx_MasterConfigSynchronization+0x128>)
 801063e:	4293      	cmp	r3, r2
 8010640:	d00e      	beq.n	8010660 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 8010642:	687b      	ldr	r3, [r7, #4]
 8010644:	681b      	ldr	r3, [r3, #0]
 8010646:	4a1a      	ldr	r2, [pc, #104]	@ (80106b0 <HAL_TIMEx_MasterConfigSynchronization+0x12c>)
 8010648:	4293      	cmp	r3, r2
 801064a:	d009      	beq.n	8010660 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 801064c:	687b      	ldr	r3, [r7, #4]
 801064e:	681b      	ldr	r3, [r3, #0]
 8010650:	4a18      	ldr	r2, [pc, #96]	@ (80106b4 <HAL_TIMEx_MasterConfigSynchronization+0x130>)
 8010652:	4293      	cmp	r3, r2
 8010654:	d004      	beq.n	8010660 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 8010656:	687b      	ldr	r3, [r7, #4]
 8010658:	681b      	ldr	r3, [r3, #0]
 801065a:	4a17      	ldr	r2, [pc, #92]	@ (80106b8 <HAL_TIMEx_MasterConfigSynchronization+0x134>)
 801065c:	4293      	cmp	r3, r2
 801065e:	d10c      	bne.n	801067a <HAL_TIMEx_MasterConfigSynchronization+0xf6>
 8010660:	68bb      	ldr	r3, [r7, #8]
 8010662:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8010666:	60bb      	str	r3, [r7, #8]
 8010668:	683b      	ldr	r3, [r7, #0]
 801066a:	689b      	ldr	r3, [r3, #8]
 801066c:	68ba      	ldr	r2, [r7, #8]
 801066e:	4313      	orrs	r3, r2
 8010670:	60bb      	str	r3, [r7, #8]
 8010672:	687b      	ldr	r3, [r7, #4]
 8010674:	681b      	ldr	r3, [r3, #0]
 8010676:	68ba      	ldr	r2, [r7, #8]
 8010678:	609a      	str	r2, [r3, #8]
 801067a:	687b      	ldr	r3, [r7, #4]
 801067c:	2201      	movs	r2, #1
 801067e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8010682:	687b      	ldr	r3, [r7, #4]
 8010684:	2200      	movs	r2, #0
 8010686:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 801068a:	2300      	movs	r3, #0
 801068c:	4618      	mov	r0, r3
 801068e:	3714      	adds	r7, #20
 8010690:	46bd      	mov	sp, r7
 8010692:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010696:	4770      	bx	lr
 8010698:	40010000 	.word	0x40010000
 801069c:	40010400 	.word	0x40010400
 80106a0:	40000400 	.word	0x40000400
 80106a4:	40000800 	.word	0x40000800
 80106a8:	40000c00 	.word	0x40000c00
 80106ac:	40001800 	.word	0x40001800
 80106b0:	40014000 	.word	0x40014000
 80106b4:	4000e000 	.word	0x4000e000
 80106b8:	4000e400 	.word	0x4000e400

080106bc <HAL_TIMEx_CommutCallback>:
 80106bc:	b480      	push	{r7}
 80106be:	b083      	sub	sp, #12
 80106c0:	af00      	add	r7, sp, #0
 80106c2:	6078      	str	r0, [r7, #4]
 80106c4:	bf00      	nop
 80106c6:	370c      	adds	r7, #12
 80106c8:	46bd      	mov	sp, r7
 80106ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106ce:	4770      	bx	lr

080106d0 <HAL_TIMEx_BreakCallback>:
 80106d0:	b480      	push	{r7}
 80106d2:	b083      	sub	sp, #12
 80106d4:	af00      	add	r7, sp, #0
 80106d6:	6078      	str	r0, [r7, #4]
 80106d8:	bf00      	nop
 80106da:	370c      	adds	r7, #12
 80106dc:	46bd      	mov	sp, r7
 80106de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106e2:	4770      	bx	lr

080106e4 <HAL_TIMEx_Break2Callback>:
 80106e4:	b480      	push	{r7}
 80106e6:	b083      	sub	sp, #12
 80106e8:	af00      	add	r7, sp, #0
 80106ea:	6078      	str	r0, [r7, #4]
 80106ec:	bf00      	nop
 80106ee:	370c      	adds	r7, #12
 80106f0:	46bd      	mov	sp, r7
 80106f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106f6:	4770      	bx	lr

080106f8 <HAL_UART_Init>:
 80106f8:	b580      	push	{r7, lr}
 80106fa:	b082      	sub	sp, #8
 80106fc:	af00      	add	r7, sp, #0
 80106fe:	6078      	str	r0, [r7, #4]
 8010700:	687b      	ldr	r3, [r7, #4]
 8010702:	2b00      	cmp	r3, #0
 8010704:	d101      	bne.n	801070a <HAL_UART_Init+0x12>
 8010706:	2301      	movs	r3, #1
 8010708:	e042      	b.n	8010790 <HAL_UART_Init+0x98>
 801070a:	687b      	ldr	r3, [r7, #4]
 801070c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8010710:	2b00      	cmp	r3, #0
 8010712:	d106      	bne.n	8010722 <HAL_UART_Init+0x2a>
 8010714:	687b      	ldr	r3, [r7, #4]
 8010716:	2200      	movs	r2, #0
 8010718:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 801071c:	6878      	ldr	r0, [r7, #4]
 801071e:	f7f1 fd5b 	bl	80021d8 <HAL_UART_MspInit>
 8010722:	687b      	ldr	r3, [r7, #4]
 8010724:	2224      	movs	r2, #36	@ 0x24
 8010726:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 801072a:	687b      	ldr	r3, [r7, #4]
 801072c:	681b      	ldr	r3, [r3, #0]
 801072e:	681a      	ldr	r2, [r3, #0]
 8010730:	687b      	ldr	r3, [r7, #4]
 8010732:	681b      	ldr	r3, [r3, #0]
 8010734:	f022 0201 	bic.w	r2, r2, #1
 8010738:	601a      	str	r2, [r3, #0]
 801073a:	687b      	ldr	r3, [r7, #4]
 801073c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801073e:	2b00      	cmp	r3, #0
 8010740:	d002      	beq.n	8010748 <HAL_UART_Init+0x50>
 8010742:	6878      	ldr	r0, [r7, #4]
 8010744:	f000 fe94 	bl	8011470 <UART_AdvFeatureConfig>
 8010748:	6878      	ldr	r0, [r7, #4]
 801074a:	f000 f825 	bl	8010798 <UART_SetConfig>
 801074e:	4603      	mov	r3, r0
 8010750:	2b01      	cmp	r3, #1
 8010752:	d101      	bne.n	8010758 <HAL_UART_Init+0x60>
 8010754:	2301      	movs	r3, #1
 8010756:	e01b      	b.n	8010790 <HAL_UART_Init+0x98>
 8010758:	687b      	ldr	r3, [r7, #4]
 801075a:	681b      	ldr	r3, [r3, #0]
 801075c:	685a      	ldr	r2, [r3, #4]
 801075e:	687b      	ldr	r3, [r7, #4]
 8010760:	681b      	ldr	r3, [r3, #0]
 8010762:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8010766:	605a      	str	r2, [r3, #4]
 8010768:	687b      	ldr	r3, [r7, #4]
 801076a:	681b      	ldr	r3, [r3, #0]
 801076c:	689a      	ldr	r2, [r3, #8]
 801076e:	687b      	ldr	r3, [r7, #4]
 8010770:	681b      	ldr	r3, [r3, #0]
 8010772:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8010776:	609a      	str	r2, [r3, #8]
 8010778:	687b      	ldr	r3, [r7, #4]
 801077a:	681b      	ldr	r3, [r3, #0]
 801077c:	681a      	ldr	r2, [r3, #0]
 801077e:	687b      	ldr	r3, [r7, #4]
 8010780:	681b      	ldr	r3, [r3, #0]
 8010782:	f042 0201 	orr.w	r2, r2, #1
 8010786:	601a      	str	r2, [r3, #0]
 8010788:	6878      	ldr	r0, [r7, #4]
 801078a:	f000 ff13 	bl	80115b4 <UART_CheckIdleState>
 801078e:	4603      	mov	r3, r0
 8010790:	4618      	mov	r0, r3
 8010792:	3708      	adds	r7, #8
 8010794:	46bd      	mov	sp, r7
 8010796:	bd80      	pop	{r7, pc}

08010798 <UART_SetConfig>:
 8010798:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 801079c:	b092      	sub	sp, #72	@ 0x48
 801079e:	af00      	add	r7, sp, #0
 80107a0:	6178      	str	r0, [r7, #20]
 80107a2:	2300      	movs	r3, #0
 80107a4:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 80107a8:	697b      	ldr	r3, [r7, #20]
 80107aa:	689a      	ldr	r2, [r3, #8]
 80107ac:	697b      	ldr	r3, [r7, #20]
 80107ae:	691b      	ldr	r3, [r3, #16]
 80107b0:	431a      	orrs	r2, r3
 80107b2:	697b      	ldr	r3, [r7, #20]
 80107b4:	695b      	ldr	r3, [r3, #20]
 80107b6:	431a      	orrs	r2, r3
 80107b8:	697b      	ldr	r3, [r7, #20]
 80107ba:	69db      	ldr	r3, [r3, #28]
 80107bc:	4313      	orrs	r3, r2
 80107be:	647b      	str	r3, [r7, #68]	@ 0x44
 80107c0:	697b      	ldr	r3, [r7, #20]
 80107c2:	681b      	ldr	r3, [r3, #0]
 80107c4:	681a      	ldr	r2, [r3, #0]
 80107c6:	4bbe      	ldr	r3, [pc, #760]	@ (8010ac0 <UART_SetConfig+0x328>)
 80107c8:	4013      	ands	r3, r2
 80107ca:	697a      	ldr	r2, [r7, #20]
 80107cc:	6812      	ldr	r2, [r2, #0]
 80107ce:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 80107d0:	430b      	orrs	r3, r1
 80107d2:	6013      	str	r3, [r2, #0]
 80107d4:	697b      	ldr	r3, [r7, #20]
 80107d6:	681b      	ldr	r3, [r3, #0]
 80107d8:	685b      	ldr	r3, [r3, #4]
 80107da:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 80107de:	697b      	ldr	r3, [r7, #20]
 80107e0:	68da      	ldr	r2, [r3, #12]
 80107e2:	697b      	ldr	r3, [r7, #20]
 80107e4:	681b      	ldr	r3, [r3, #0]
 80107e6:	430a      	orrs	r2, r1
 80107e8:	605a      	str	r2, [r3, #4]
 80107ea:	697b      	ldr	r3, [r7, #20]
 80107ec:	699b      	ldr	r3, [r3, #24]
 80107ee:	647b      	str	r3, [r7, #68]	@ 0x44
 80107f0:	697b      	ldr	r3, [r7, #20]
 80107f2:	681b      	ldr	r3, [r3, #0]
 80107f4:	4ab3      	ldr	r2, [pc, #716]	@ (8010ac4 <UART_SetConfig+0x32c>)
 80107f6:	4293      	cmp	r3, r2
 80107f8:	d004      	beq.n	8010804 <UART_SetConfig+0x6c>
 80107fa:	697b      	ldr	r3, [r7, #20]
 80107fc:	6a1b      	ldr	r3, [r3, #32]
 80107fe:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8010800:	4313      	orrs	r3, r2
 8010802:	647b      	str	r3, [r7, #68]	@ 0x44
 8010804:	697b      	ldr	r3, [r7, #20]
 8010806:	681b      	ldr	r3, [r3, #0]
 8010808:	689a      	ldr	r2, [r3, #8]
 801080a:	4baf      	ldr	r3, [pc, #700]	@ (8010ac8 <UART_SetConfig+0x330>)
 801080c:	4013      	ands	r3, r2
 801080e:	697a      	ldr	r2, [r7, #20]
 8010810:	6812      	ldr	r2, [r2, #0]
 8010812:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 8010814:	430b      	orrs	r3, r1
 8010816:	6093      	str	r3, [r2, #8]
 8010818:	697b      	ldr	r3, [r7, #20]
 801081a:	681b      	ldr	r3, [r3, #0]
 801081c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801081e:	f023 010f 	bic.w	r1, r3, #15
 8010822:	697b      	ldr	r3, [r7, #20]
 8010824:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8010826:	697b      	ldr	r3, [r7, #20]
 8010828:	681b      	ldr	r3, [r3, #0]
 801082a:	430a      	orrs	r2, r1
 801082c:	62da      	str	r2, [r3, #44]	@ 0x2c
 801082e:	697b      	ldr	r3, [r7, #20]
 8010830:	681b      	ldr	r3, [r3, #0]
 8010832:	4aa6      	ldr	r2, [pc, #664]	@ (8010acc <UART_SetConfig+0x334>)
 8010834:	4293      	cmp	r3, r2
 8010836:	d177      	bne.n	8010928 <UART_SetConfig+0x190>
 8010838:	4ba5      	ldr	r3, [pc, #660]	@ (8010ad0 <UART_SetConfig+0x338>)
 801083a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801083c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8010840:	2b28      	cmp	r3, #40	@ 0x28
 8010842:	d86d      	bhi.n	8010920 <UART_SetConfig+0x188>
 8010844:	a201      	add	r2, pc, #4	@ (adr r2, 801084c <UART_SetConfig+0xb4>)
 8010846:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801084a:	bf00      	nop
 801084c:	080108f1 	.word	0x080108f1
 8010850:	08010921 	.word	0x08010921
 8010854:	08010921 	.word	0x08010921
 8010858:	08010921 	.word	0x08010921
 801085c:	08010921 	.word	0x08010921
 8010860:	08010921 	.word	0x08010921
 8010864:	08010921 	.word	0x08010921
 8010868:	08010921 	.word	0x08010921
 801086c:	080108f9 	.word	0x080108f9
 8010870:	08010921 	.word	0x08010921
 8010874:	08010921 	.word	0x08010921
 8010878:	08010921 	.word	0x08010921
 801087c:	08010921 	.word	0x08010921
 8010880:	08010921 	.word	0x08010921
 8010884:	08010921 	.word	0x08010921
 8010888:	08010921 	.word	0x08010921
 801088c:	08010901 	.word	0x08010901
 8010890:	08010921 	.word	0x08010921
 8010894:	08010921 	.word	0x08010921
 8010898:	08010921 	.word	0x08010921
 801089c:	08010921 	.word	0x08010921
 80108a0:	08010921 	.word	0x08010921
 80108a4:	08010921 	.word	0x08010921
 80108a8:	08010921 	.word	0x08010921
 80108ac:	08010909 	.word	0x08010909
 80108b0:	08010921 	.word	0x08010921
 80108b4:	08010921 	.word	0x08010921
 80108b8:	08010921 	.word	0x08010921
 80108bc:	08010921 	.word	0x08010921
 80108c0:	08010921 	.word	0x08010921
 80108c4:	08010921 	.word	0x08010921
 80108c8:	08010921 	.word	0x08010921
 80108cc:	08010911 	.word	0x08010911
 80108d0:	08010921 	.word	0x08010921
 80108d4:	08010921 	.word	0x08010921
 80108d8:	08010921 	.word	0x08010921
 80108dc:	08010921 	.word	0x08010921
 80108e0:	08010921 	.word	0x08010921
 80108e4:	08010921 	.word	0x08010921
 80108e8:	08010921 	.word	0x08010921
 80108ec:	08010919 	.word	0x08010919
 80108f0:	2301      	movs	r3, #1
 80108f2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80108f6:	e326      	b.n	8010f46 <UART_SetConfig+0x7ae>
 80108f8:	2304      	movs	r3, #4
 80108fa:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80108fe:	e322      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010900:	2308      	movs	r3, #8
 8010902:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010906:	e31e      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010908:	2310      	movs	r3, #16
 801090a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 801090e:	e31a      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010910:	2320      	movs	r3, #32
 8010912:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010916:	e316      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010918:	2340      	movs	r3, #64	@ 0x40
 801091a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 801091e:	e312      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010920:	2380      	movs	r3, #128	@ 0x80
 8010922:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010926:	e30e      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010928:	697b      	ldr	r3, [r7, #20]
 801092a:	681b      	ldr	r3, [r3, #0]
 801092c:	4a69      	ldr	r2, [pc, #420]	@ (8010ad4 <UART_SetConfig+0x33c>)
 801092e:	4293      	cmp	r3, r2
 8010930:	d130      	bne.n	8010994 <UART_SetConfig+0x1fc>
 8010932:	4b67      	ldr	r3, [pc, #412]	@ (8010ad0 <UART_SetConfig+0x338>)
 8010934:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010936:	f003 0307 	and.w	r3, r3, #7
 801093a:	2b05      	cmp	r3, #5
 801093c:	d826      	bhi.n	801098c <UART_SetConfig+0x1f4>
 801093e:	a201      	add	r2, pc, #4	@ (adr r2, 8010944 <UART_SetConfig+0x1ac>)
 8010940:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010944:	0801095d 	.word	0x0801095d
 8010948:	08010965 	.word	0x08010965
 801094c:	0801096d 	.word	0x0801096d
 8010950:	08010975 	.word	0x08010975
 8010954:	0801097d 	.word	0x0801097d
 8010958:	08010985 	.word	0x08010985
 801095c:	2300      	movs	r3, #0
 801095e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010962:	e2f0      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010964:	2304      	movs	r3, #4
 8010966:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 801096a:	e2ec      	b.n	8010f46 <UART_SetConfig+0x7ae>
 801096c:	2308      	movs	r3, #8
 801096e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010972:	e2e8      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010974:	2310      	movs	r3, #16
 8010976:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 801097a:	e2e4      	b.n	8010f46 <UART_SetConfig+0x7ae>
 801097c:	2320      	movs	r3, #32
 801097e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010982:	e2e0      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010984:	2340      	movs	r3, #64	@ 0x40
 8010986:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 801098a:	e2dc      	b.n	8010f46 <UART_SetConfig+0x7ae>
 801098c:	2380      	movs	r3, #128	@ 0x80
 801098e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010992:	e2d8      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010994:	697b      	ldr	r3, [r7, #20]
 8010996:	681b      	ldr	r3, [r3, #0]
 8010998:	4a4f      	ldr	r2, [pc, #316]	@ (8010ad8 <UART_SetConfig+0x340>)
 801099a:	4293      	cmp	r3, r2
 801099c:	d130      	bne.n	8010a00 <UART_SetConfig+0x268>
 801099e:	4b4c      	ldr	r3, [pc, #304]	@ (8010ad0 <UART_SetConfig+0x338>)
 80109a0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80109a2:	f003 0307 	and.w	r3, r3, #7
 80109a6:	2b05      	cmp	r3, #5
 80109a8:	d826      	bhi.n	80109f8 <UART_SetConfig+0x260>
 80109aa:	a201      	add	r2, pc, #4	@ (adr r2, 80109b0 <UART_SetConfig+0x218>)
 80109ac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80109b0:	080109c9 	.word	0x080109c9
 80109b4:	080109d1 	.word	0x080109d1
 80109b8:	080109d9 	.word	0x080109d9
 80109bc:	080109e1 	.word	0x080109e1
 80109c0:	080109e9 	.word	0x080109e9
 80109c4:	080109f1 	.word	0x080109f1
 80109c8:	2300      	movs	r3, #0
 80109ca:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80109ce:	e2ba      	b.n	8010f46 <UART_SetConfig+0x7ae>
 80109d0:	2304      	movs	r3, #4
 80109d2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80109d6:	e2b6      	b.n	8010f46 <UART_SetConfig+0x7ae>
 80109d8:	2308      	movs	r3, #8
 80109da:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80109de:	e2b2      	b.n	8010f46 <UART_SetConfig+0x7ae>
 80109e0:	2310      	movs	r3, #16
 80109e2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80109e6:	e2ae      	b.n	8010f46 <UART_SetConfig+0x7ae>
 80109e8:	2320      	movs	r3, #32
 80109ea:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80109ee:	e2aa      	b.n	8010f46 <UART_SetConfig+0x7ae>
 80109f0:	2340      	movs	r3, #64	@ 0x40
 80109f2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80109f6:	e2a6      	b.n	8010f46 <UART_SetConfig+0x7ae>
 80109f8:	2380      	movs	r3, #128	@ 0x80
 80109fa:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80109fe:	e2a2      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010a00:	697b      	ldr	r3, [r7, #20]
 8010a02:	681b      	ldr	r3, [r3, #0]
 8010a04:	4a35      	ldr	r2, [pc, #212]	@ (8010adc <UART_SetConfig+0x344>)
 8010a06:	4293      	cmp	r3, r2
 8010a08:	d130      	bne.n	8010a6c <UART_SetConfig+0x2d4>
 8010a0a:	4b31      	ldr	r3, [pc, #196]	@ (8010ad0 <UART_SetConfig+0x338>)
 8010a0c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010a0e:	f003 0307 	and.w	r3, r3, #7
 8010a12:	2b05      	cmp	r3, #5
 8010a14:	d826      	bhi.n	8010a64 <UART_SetConfig+0x2cc>
 8010a16:	a201      	add	r2, pc, #4	@ (adr r2, 8010a1c <UART_SetConfig+0x284>)
 8010a18:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010a1c:	08010a35 	.word	0x08010a35
 8010a20:	08010a3d 	.word	0x08010a3d
 8010a24:	08010a45 	.word	0x08010a45
 8010a28:	08010a4d 	.word	0x08010a4d
 8010a2c:	08010a55 	.word	0x08010a55
 8010a30:	08010a5d 	.word	0x08010a5d
 8010a34:	2300      	movs	r3, #0
 8010a36:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010a3a:	e284      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010a3c:	2304      	movs	r3, #4
 8010a3e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010a42:	e280      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010a44:	2308      	movs	r3, #8
 8010a46:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010a4a:	e27c      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010a4c:	2310      	movs	r3, #16
 8010a4e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010a52:	e278      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010a54:	2320      	movs	r3, #32
 8010a56:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010a5a:	e274      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010a5c:	2340      	movs	r3, #64	@ 0x40
 8010a5e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010a62:	e270      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010a64:	2380      	movs	r3, #128	@ 0x80
 8010a66:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010a6a:	e26c      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010a6c:	697b      	ldr	r3, [r7, #20]
 8010a6e:	681b      	ldr	r3, [r3, #0]
 8010a70:	4a1b      	ldr	r2, [pc, #108]	@ (8010ae0 <UART_SetConfig+0x348>)
 8010a72:	4293      	cmp	r3, r2
 8010a74:	d142      	bne.n	8010afc <UART_SetConfig+0x364>
 8010a76:	4b16      	ldr	r3, [pc, #88]	@ (8010ad0 <UART_SetConfig+0x338>)
 8010a78:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010a7a:	f003 0307 	and.w	r3, r3, #7
 8010a7e:	2b05      	cmp	r3, #5
 8010a80:	d838      	bhi.n	8010af4 <UART_SetConfig+0x35c>
 8010a82:	a201      	add	r2, pc, #4	@ (adr r2, 8010a88 <UART_SetConfig+0x2f0>)
 8010a84:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010a88:	08010aa1 	.word	0x08010aa1
 8010a8c:	08010aa9 	.word	0x08010aa9
 8010a90:	08010ab1 	.word	0x08010ab1
 8010a94:	08010ab9 	.word	0x08010ab9
 8010a98:	08010ae5 	.word	0x08010ae5
 8010a9c:	08010aed 	.word	0x08010aed
 8010aa0:	2300      	movs	r3, #0
 8010aa2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010aa6:	e24e      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010aa8:	2304      	movs	r3, #4
 8010aaa:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010aae:	e24a      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010ab0:	2308      	movs	r3, #8
 8010ab2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010ab6:	e246      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010ab8:	2310      	movs	r3, #16
 8010aba:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010abe:	e242      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010ac0:	cfff69f3 	.word	0xcfff69f3
 8010ac4:	58000c00 	.word	0x58000c00
 8010ac8:	11fff4ff 	.word	0x11fff4ff
 8010acc:	40011000 	.word	0x40011000
 8010ad0:	58024400 	.word	0x58024400
 8010ad4:	40004400 	.word	0x40004400
 8010ad8:	40004800 	.word	0x40004800
 8010adc:	40004c00 	.word	0x40004c00
 8010ae0:	40005000 	.word	0x40005000
 8010ae4:	2320      	movs	r3, #32
 8010ae6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010aea:	e22c      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010aec:	2340      	movs	r3, #64	@ 0x40
 8010aee:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010af2:	e228      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010af4:	2380      	movs	r3, #128	@ 0x80
 8010af6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010afa:	e224      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010afc:	697b      	ldr	r3, [r7, #20]
 8010afe:	681b      	ldr	r3, [r3, #0]
 8010b00:	4ab1      	ldr	r2, [pc, #708]	@ (8010dc8 <UART_SetConfig+0x630>)
 8010b02:	4293      	cmp	r3, r2
 8010b04:	d176      	bne.n	8010bf4 <UART_SetConfig+0x45c>
 8010b06:	4bb1      	ldr	r3, [pc, #708]	@ (8010dcc <UART_SetConfig+0x634>)
 8010b08:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010b0a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8010b0e:	2b28      	cmp	r3, #40	@ 0x28
 8010b10:	d86c      	bhi.n	8010bec <UART_SetConfig+0x454>
 8010b12:	a201      	add	r2, pc, #4	@ (adr r2, 8010b18 <UART_SetConfig+0x380>)
 8010b14:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010b18:	08010bbd 	.word	0x08010bbd
 8010b1c:	08010bed 	.word	0x08010bed
 8010b20:	08010bed 	.word	0x08010bed
 8010b24:	08010bed 	.word	0x08010bed
 8010b28:	08010bed 	.word	0x08010bed
 8010b2c:	08010bed 	.word	0x08010bed
 8010b30:	08010bed 	.word	0x08010bed
 8010b34:	08010bed 	.word	0x08010bed
 8010b38:	08010bc5 	.word	0x08010bc5
 8010b3c:	08010bed 	.word	0x08010bed
 8010b40:	08010bed 	.word	0x08010bed
 8010b44:	08010bed 	.word	0x08010bed
 8010b48:	08010bed 	.word	0x08010bed
 8010b4c:	08010bed 	.word	0x08010bed
 8010b50:	08010bed 	.word	0x08010bed
 8010b54:	08010bed 	.word	0x08010bed
 8010b58:	08010bcd 	.word	0x08010bcd
 8010b5c:	08010bed 	.word	0x08010bed
 8010b60:	08010bed 	.word	0x08010bed
 8010b64:	08010bed 	.word	0x08010bed
 8010b68:	08010bed 	.word	0x08010bed
 8010b6c:	08010bed 	.word	0x08010bed
 8010b70:	08010bed 	.word	0x08010bed
 8010b74:	08010bed 	.word	0x08010bed
 8010b78:	08010bd5 	.word	0x08010bd5
 8010b7c:	08010bed 	.word	0x08010bed
 8010b80:	08010bed 	.word	0x08010bed
 8010b84:	08010bed 	.word	0x08010bed
 8010b88:	08010bed 	.word	0x08010bed
 8010b8c:	08010bed 	.word	0x08010bed
 8010b90:	08010bed 	.word	0x08010bed
 8010b94:	08010bed 	.word	0x08010bed
 8010b98:	08010bdd 	.word	0x08010bdd
 8010b9c:	08010bed 	.word	0x08010bed
 8010ba0:	08010bed 	.word	0x08010bed
 8010ba4:	08010bed 	.word	0x08010bed
 8010ba8:	08010bed 	.word	0x08010bed
 8010bac:	08010bed 	.word	0x08010bed
 8010bb0:	08010bed 	.word	0x08010bed
 8010bb4:	08010bed 	.word	0x08010bed
 8010bb8:	08010be5 	.word	0x08010be5
 8010bbc:	2301      	movs	r3, #1
 8010bbe:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010bc2:	e1c0      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010bc4:	2304      	movs	r3, #4
 8010bc6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010bca:	e1bc      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010bcc:	2308      	movs	r3, #8
 8010bce:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010bd2:	e1b8      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010bd4:	2310      	movs	r3, #16
 8010bd6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010bda:	e1b4      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010bdc:	2320      	movs	r3, #32
 8010bde:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010be2:	e1b0      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010be4:	2340      	movs	r3, #64	@ 0x40
 8010be6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010bea:	e1ac      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010bec:	2380      	movs	r3, #128	@ 0x80
 8010bee:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010bf2:	e1a8      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010bf4:	697b      	ldr	r3, [r7, #20]
 8010bf6:	681b      	ldr	r3, [r3, #0]
 8010bf8:	4a75      	ldr	r2, [pc, #468]	@ (8010dd0 <UART_SetConfig+0x638>)
 8010bfa:	4293      	cmp	r3, r2
 8010bfc:	d130      	bne.n	8010c60 <UART_SetConfig+0x4c8>
 8010bfe:	4b73      	ldr	r3, [pc, #460]	@ (8010dcc <UART_SetConfig+0x634>)
 8010c00:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010c02:	f003 0307 	and.w	r3, r3, #7
 8010c06:	2b05      	cmp	r3, #5
 8010c08:	d826      	bhi.n	8010c58 <UART_SetConfig+0x4c0>
 8010c0a:	a201      	add	r2, pc, #4	@ (adr r2, 8010c10 <UART_SetConfig+0x478>)
 8010c0c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010c10:	08010c29 	.word	0x08010c29
 8010c14:	08010c31 	.word	0x08010c31
 8010c18:	08010c39 	.word	0x08010c39
 8010c1c:	08010c41 	.word	0x08010c41
 8010c20:	08010c49 	.word	0x08010c49
 8010c24:	08010c51 	.word	0x08010c51
 8010c28:	2300      	movs	r3, #0
 8010c2a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c2e:	e18a      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010c30:	2304      	movs	r3, #4
 8010c32:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c36:	e186      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010c38:	2308      	movs	r3, #8
 8010c3a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c3e:	e182      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010c40:	2310      	movs	r3, #16
 8010c42:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c46:	e17e      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010c48:	2320      	movs	r3, #32
 8010c4a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c4e:	e17a      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010c50:	2340      	movs	r3, #64	@ 0x40
 8010c52:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c56:	e176      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010c58:	2380      	movs	r3, #128	@ 0x80
 8010c5a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c5e:	e172      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010c60:	697b      	ldr	r3, [r7, #20]
 8010c62:	681b      	ldr	r3, [r3, #0]
 8010c64:	4a5b      	ldr	r2, [pc, #364]	@ (8010dd4 <UART_SetConfig+0x63c>)
 8010c66:	4293      	cmp	r3, r2
 8010c68:	d130      	bne.n	8010ccc <UART_SetConfig+0x534>
 8010c6a:	4b58      	ldr	r3, [pc, #352]	@ (8010dcc <UART_SetConfig+0x634>)
 8010c6c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010c6e:	f003 0307 	and.w	r3, r3, #7
 8010c72:	2b05      	cmp	r3, #5
 8010c74:	d826      	bhi.n	8010cc4 <UART_SetConfig+0x52c>
 8010c76:	a201      	add	r2, pc, #4	@ (adr r2, 8010c7c <UART_SetConfig+0x4e4>)
 8010c78:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010c7c:	08010c95 	.word	0x08010c95
 8010c80:	08010c9d 	.word	0x08010c9d
 8010c84:	08010ca5 	.word	0x08010ca5
 8010c88:	08010cad 	.word	0x08010cad
 8010c8c:	08010cb5 	.word	0x08010cb5
 8010c90:	08010cbd 	.word	0x08010cbd
 8010c94:	2300      	movs	r3, #0
 8010c96:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010c9a:	e154      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010c9c:	2304      	movs	r3, #4
 8010c9e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010ca2:	e150      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010ca4:	2308      	movs	r3, #8
 8010ca6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010caa:	e14c      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010cac:	2310      	movs	r3, #16
 8010cae:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010cb2:	e148      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010cb4:	2320      	movs	r3, #32
 8010cb6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010cba:	e144      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010cbc:	2340      	movs	r3, #64	@ 0x40
 8010cbe:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010cc2:	e140      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010cc4:	2380      	movs	r3, #128	@ 0x80
 8010cc6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010cca:	e13c      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010ccc:	697b      	ldr	r3, [r7, #20]
 8010cce:	681b      	ldr	r3, [r3, #0]
 8010cd0:	4a41      	ldr	r2, [pc, #260]	@ (8010dd8 <UART_SetConfig+0x640>)
 8010cd2:	4293      	cmp	r3, r2
 8010cd4:	f040 8082 	bne.w	8010ddc <UART_SetConfig+0x644>
 8010cd8:	4b3c      	ldr	r3, [pc, #240]	@ (8010dcc <UART_SetConfig+0x634>)
 8010cda:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010cdc:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8010ce0:	2b28      	cmp	r3, #40	@ 0x28
 8010ce2:	d86d      	bhi.n	8010dc0 <UART_SetConfig+0x628>
 8010ce4:	a201      	add	r2, pc, #4	@ (adr r2, 8010cec <UART_SetConfig+0x554>)
 8010ce6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010cea:	bf00      	nop
 8010cec:	08010d91 	.word	0x08010d91
 8010cf0:	08010dc1 	.word	0x08010dc1
 8010cf4:	08010dc1 	.word	0x08010dc1
 8010cf8:	08010dc1 	.word	0x08010dc1
 8010cfc:	08010dc1 	.word	0x08010dc1
 8010d00:	08010dc1 	.word	0x08010dc1
 8010d04:	08010dc1 	.word	0x08010dc1
 8010d08:	08010dc1 	.word	0x08010dc1
 8010d0c:	08010d99 	.word	0x08010d99
 8010d10:	08010dc1 	.word	0x08010dc1
 8010d14:	08010dc1 	.word	0x08010dc1
 8010d18:	08010dc1 	.word	0x08010dc1
 8010d1c:	08010dc1 	.word	0x08010dc1
 8010d20:	08010dc1 	.word	0x08010dc1
 8010d24:	08010dc1 	.word	0x08010dc1
 8010d28:	08010dc1 	.word	0x08010dc1
 8010d2c:	08010da1 	.word	0x08010da1
 8010d30:	08010dc1 	.word	0x08010dc1
 8010d34:	08010dc1 	.word	0x08010dc1
 8010d38:	08010dc1 	.word	0x08010dc1
 8010d3c:	08010dc1 	.word	0x08010dc1
 8010d40:	08010dc1 	.word	0x08010dc1
 8010d44:	08010dc1 	.word	0x08010dc1
 8010d48:	08010dc1 	.word	0x08010dc1
 8010d4c:	08010da9 	.word	0x08010da9
 8010d50:	08010dc1 	.word	0x08010dc1
 8010d54:	08010dc1 	.word	0x08010dc1
 8010d58:	08010dc1 	.word	0x08010dc1
 8010d5c:	08010dc1 	.word	0x08010dc1
 8010d60:	08010dc1 	.word	0x08010dc1
 8010d64:	08010dc1 	.word	0x08010dc1
 8010d68:	08010dc1 	.word	0x08010dc1
 8010d6c:	08010db1 	.word	0x08010db1
 8010d70:	08010dc1 	.word	0x08010dc1
 8010d74:	08010dc1 	.word	0x08010dc1
 8010d78:	08010dc1 	.word	0x08010dc1
 8010d7c:	08010dc1 	.word	0x08010dc1
 8010d80:	08010dc1 	.word	0x08010dc1
 8010d84:	08010dc1 	.word	0x08010dc1
 8010d88:	08010dc1 	.word	0x08010dc1
 8010d8c:	08010db9 	.word	0x08010db9
 8010d90:	2301      	movs	r3, #1
 8010d92:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010d96:	e0d6      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010d98:	2304      	movs	r3, #4
 8010d9a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010d9e:	e0d2      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010da0:	2308      	movs	r3, #8
 8010da2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010da6:	e0ce      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010da8:	2310      	movs	r3, #16
 8010daa:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010dae:	e0ca      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010db0:	2320      	movs	r3, #32
 8010db2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010db6:	e0c6      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010db8:	2340      	movs	r3, #64	@ 0x40
 8010dba:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010dbe:	e0c2      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010dc0:	2380      	movs	r3, #128	@ 0x80
 8010dc2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010dc6:	e0be      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010dc8:	40011400 	.word	0x40011400
 8010dcc:	58024400 	.word	0x58024400
 8010dd0:	40007800 	.word	0x40007800
 8010dd4:	40007c00 	.word	0x40007c00
 8010dd8:	40011800 	.word	0x40011800
 8010ddc:	697b      	ldr	r3, [r7, #20]
 8010dde:	681b      	ldr	r3, [r3, #0]
 8010de0:	4aad      	ldr	r2, [pc, #692]	@ (8011098 <UART_SetConfig+0x900>)
 8010de2:	4293      	cmp	r3, r2
 8010de4:	d176      	bne.n	8010ed4 <UART_SetConfig+0x73c>
 8010de6:	4bad      	ldr	r3, [pc, #692]	@ (801109c <UART_SetConfig+0x904>)
 8010de8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010dea:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8010dee:	2b28      	cmp	r3, #40	@ 0x28
 8010df0:	d86c      	bhi.n	8010ecc <UART_SetConfig+0x734>
 8010df2:	a201      	add	r2, pc, #4	@ (adr r2, 8010df8 <UART_SetConfig+0x660>)
 8010df4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010df8:	08010e9d 	.word	0x08010e9d
 8010dfc:	08010ecd 	.word	0x08010ecd
 8010e00:	08010ecd 	.word	0x08010ecd
 8010e04:	08010ecd 	.word	0x08010ecd
 8010e08:	08010ecd 	.word	0x08010ecd
 8010e0c:	08010ecd 	.word	0x08010ecd
 8010e10:	08010ecd 	.word	0x08010ecd
 8010e14:	08010ecd 	.word	0x08010ecd
 8010e18:	08010ea5 	.word	0x08010ea5
 8010e1c:	08010ecd 	.word	0x08010ecd
 8010e20:	08010ecd 	.word	0x08010ecd
 8010e24:	08010ecd 	.word	0x08010ecd
 8010e28:	08010ecd 	.word	0x08010ecd
 8010e2c:	08010ecd 	.word	0x08010ecd
 8010e30:	08010ecd 	.word	0x08010ecd
 8010e34:	08010ecd 	.word	0x08010ecd
 8010e38:	08010ead 	.word	0x08010ead
 8010e3c:	08010ecd 	.word	0x08010ecd
 8010e40:	08010ecd 	.word	0x08010ecd
 8010e44:	08010ecd 	.word	0x08010ecd
 8010e48:	08010ecd 	.word	0x08010ecd
 8010e4c:	08010ecd 	.word	0x08010ecd
 8010e50:	08010ecd 	.word	0x08010ecd
 8010e54:	08010ecd 	.word	0x08010ecd
 8010e58:	08010eb5 	.word	0x08010eb5
 8010e5c:	08010ecd 	.word	0x08010ecd
 8010e60:	08010ecd 	.word	0x08010ecd
 8010e64:	08010ecd 	.word	0x08010ecd
 8010e68:	08010ecd 	.word	0x08010ecd
 8010e6c:	08010ecd 	.word	0x08010ecd
 8010e70:	08010ecd 	.word	0x08010ecd
 8010e74:	08010ecd 	.word	0x08010ecd
 8010e78:	08010ebd 	.word	0x08010ebd
 8010e7c:	08010ecd 	.word	0x08010ecd
 8010e80:	08010ecd 	.word	0x08010ecd
 8010e84:	08010ecd 	.word	0x08010ecd
 8010e88:	08010ecd 	.word	0x08010ecd
 8010e8c:	08010ecd 	.word	0x08010ecd
 8010e90:	08010ecd 	.word	0x08010ecd
 8010e94:	08010ecd 	.word	0x08010ecd
 8010e98:	08010ec5 	.word	0x08010ec5
 8010e9c:	2301      	movs	r3, #1
 8010e9e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010ea2:	e050      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010ea4:	2304      	movs	r3, #4
 8010ea6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010eaa:	e04c      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010eac:	2308      	movs	r3, #8
 8010eae:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010eb2:	e048      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010eb4:	2310      	movs	r3, #16
 8010eb6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010eba:	e044      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010ebc:	2320      	movs	r3, #32
 8010ebe:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010ec2:	e040      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010ec4:	2340      	movs	r3, #64	@ 0x40
 8010ec6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010eca:	e03c      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010ecc:	2380      	movs	r3, #128	@ 0x80
 8010ece:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010ed2:	e038      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010ed4:	697b      	ldr	r3, [r7, #20]
 8010ed6:	681b      	ldr	r3, [r3, #0]
 8010ed8:	4a71      	ldr	r2, [pc, #452]	@ (80110a0 <UART_SetConfig+0x908>)
 8010eda:	4293      	cmp	r3, r2
 8010edc:	d130      	bne.n	8010f40 <UART_SetConfig+0x7a8>
 8010ede:	4b6f      	ldr	r3, [pc, #444]	@ (801109c <UART_SetConfig+0x904>)
 8010ee0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8010ee2:	f003 0307 	and.w	r3, r3, #7
 8010ee6:	2b05      	cmp	r3, #5
 8010ee8:	d826      	bhi.n	8010f38 <UART_SetConfig+0x7a0>
 8010eea:	a201      	add	r2, pc, #4	@ (adr r2, 8010ef0 <UART_SetConfig+0x758>)
 8010eec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010ef0:	08010f09 	.word	0x08010f09
 8010ef4:	08010f11 	.word	0x08010f11
 8010ef8:	08010f19 	.word	0x08010f19
 8010efc:	08010f21 	.word	0x08010f21
 8010f00:	08010f29 	.word	0x08010f29
 8010f04:	08010f31 	.word	0x08010f31
 8010f08:	2302      	movs	r3, #2
 8010f0a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010f0e:	e01a      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010f10:	2304      	movs	r3, #4
 8010f12:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010f16:	e016      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010f18:	2308      	movs	r3, #8
 8010f1a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010f1e:	e012      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010f20:	2310      	movs	r3, #16
 8010f22:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010f26:	e00e      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010f28:	2320      	movs	r3, #32
 8010f2a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010f2e:	e00a      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010f30:	2340      	movs	r3, #64	@ 0x40
 8010f32:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010f36:	e006      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010f38:	2380      	movs	r3, #128	@ 0x80
 8010f3a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010f3e:	e002      	b.n	8010f46 <UART_SetConfig+0x7ae>
 8010f40:	2380      	movs	r3, #128	@ 0x80
 8010f42:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8010f46:	697b      	ldr	r3, [r7, #20]
 8010f48:	681b      	ldr	r3, [r3, #0]
 8010f4a:	4a55      	ldr	r2, [pc, #340]	@ (80110a0 <UART_SetConfig+0x908>)
 8010f4c:	4293      	cmp	r3, r2
 8010f4e:	f040 80f8 	bne.w	8011142 <UART_SetConfig+0x9aa>
 8010f52:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 8010f56:	2b20      	cmp	r3, #32
 8010f58:	dc46      	bgt.n	8010fe8 <UART_SetConfig+0x850>
 8010f5a:	2b02      	cmp	r3, #2
 8010f5c:	db75      	blt.n	801104a <UART_SetConfig+0x8b2>
 8010f5e:	3b02      	subs	r3, #2
 8010f60:	2b1e      	cmp	r3, #30
 8010f62:	d872      	bhi.n	801104a <UART_SetConfig+0x8b2>
 8010f64:	a201      	add	r2, pc, #4	@ (adr r2, 8010f6c <UART_SetConfig+0x7d4>)
 8010f66:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010f6a:	bf00      	nop
 8010f6c:	08010fef 	.word	0x08010fef
 8010f70:	0801104b 	.word	0x0801104b
 8010f74:	08010ff7 	.word	0x08010ff7
 8010f78:	0801104b 	.word	0x0801104b
 8010f7c:	0801104b 	.word	0x0801104b
 8010f80:	0801104b 	.word	0x0801104b
 8010f84:	08011007 	.word	0x08011007
 8010f88:	0801104b 	.word	0x0801104b
 8010f8c:	0801104b 	.word	0x0801104b
 8010f90:	0801104b 	.word	0x0801104b
 8010f94:	0801104b 	.word	0x0801104b
 8010f98:	0801104b 	.word	0x0801104b
 8010f9c:	0801104b 	.word	0x0801104b
 8010fa0:	0801104b 	.word	0x0801104b
 8010fa4:	08011017 	.word	0x08011017
 8010fa8:	0801104b 	.word	0x0801104b
 8010fac:	0801104b 	.word	0x0801104b
 8010fb0:	0801104b 	.word	0x0801104b
 8010fb4:	0801104b 	.word	0x0801104b
 8010fb8:	0801104b 	.word	0x0801104b
 8010fbc:	0801104b 	.word	0x0801104b
 8010fc0:	0801104b 	.word	0x0801104b
 8010fc4:	0801104b 	.word	0x0801104b
 8010fc8:	0801104b 	.word	0x0801104b
 8010fcc:	0801104b 	.word	0x0801104b
 8010fd0:	0801104b 	.word	0x0801104b
 8010fd4:	0801104b 	.word	0x0801104b
 8010fd8:	0801104b 	.word	0x0801104b
 8010fdc:	0801104b 	.word	0x0801104b
 8010fe0:	0801104b 	.word	0x0801104b
 8010fe4:	0801103d 	.word	0x0801103d
 8010fe8:	2b40      	cmp	r3, #64	@ 0x40
 8010fea:	d02a      	beq.n	8011042 <UART_SetConfig+0x8aa>
 8010fec:	e02d      	b.n	801104a <UART_SetConfig+0x8b2>
 8010fee:	f7fc fe05 	bl	800dbfc <HAL_RCCEx_GetD3PCLK1Freq>
 8010ff2:	63f8      	str	r0, [r7, #60]	@ 0x3c
 8010ff4:	e02f      	b.n	8011056 <UART_SetConfig+0x8be>
 8010ff6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8010ffa:	4618      	mov	r0, r3
 8010ffc:	f7fc fe14 	bl	800dc28 <HAL_RCCEx_GetPLL2ClockFreq>
 8011000:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8011002:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011004:	e027      	b.n	8011056 <UART_SetConfig+0x8be>
 8011006:	f107 0318 	add.w	r3, r7, #24
 801100a:	4618      	mov	r0, r3
 801100c:	f7fc ff60 	bl	800ded0 <HAL_RCCEx_GetPLL3ClockFreq>
 8011010:	69fb      	ldr	r3, [r7, #28]
 8011012:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011014:	e01f      	b.n	8011056 <UART_SetConfig+0x8be>
 8011016:	4b21      	ldr	r3, [pc, #132]	@ (801109c <UART_SetConfig+0x904>)
 8011018:	681b      	ldr	r3, [r3, #0]
 801101a:	f003 0320 	and.w	r3, r3, #32
 801101e:	2b00      	cmp	r3, #0
 8011020:	d009      	beq.n	8011036 <UART_SetConfig+0x89e>
 8011022:	4b1e      	ldr	r3, [pc, #120]	@ (801109c <UART_SetConfig+0x904>)
 8011024:	681b      	ldr	r3, [r3, #0]
 8011026:	08db      	lsrs	r3, r3, #3
 8011028:	f003 0303 	and.w	r3, r3, #3
 801102c:	4a1d      	ldr	r2, [pc, #116]	@ (80110a4 <UART_SetConfig+0x90c>)
 801102e:	fa22 f303 	lsr.w	r3, r2, r3
 8011032:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011034:	e00f      	b.n	8011056 <UART_SetConfig+0x8be>
 8011036:	4b1b      	ldr	r3, [pc, #108]	@ (80110a4 <UART_SetConfig+0x90c>)
 8011038:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801103a:	e00c      	b.n	8011056 <UART_SetConfig+0x8be>
 801103c:	4b1a      	ldr	r3, [pc, #104]	@ (80110a8 <UART_SetConfig+0x910>)
 801103e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011040:	e009      	b.n	8011056 <UART_SetConfig+0x8be>
 8011042:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011046:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011048:	e005      	b.n	8011056 <UART_SetConfig+0x8be>
 801104a:	2300      	movs	r3, #0
 801104c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801104e:	2301      	movs	r3, #1
 8011050:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 8011054:	bf00      	nop
 8011056:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8011058:	2b00      	cmp	r3, #0
 801105a:	f000 81ee 	beq.w	801143a <UART_SetConfig+0xca2>
 801105e:	697b      	ldr	r3, [r7, #20]
 8011060:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8011062:	4a12      	ldr	r2, [pc, #72]	@ (80110ac <UART_SetConfig+0x914>)
 8011064:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8011068:	461a      	mov	r2, r3
 801106a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 801106c:	fbb3 f3f2 	udiv	r3, r3, r2
 8011070:	633b      	str	r3, [r7, #48]	@ 0x30
 8011072:	697b      	ldr	r3, [r7, #20]
 8011074:	685a      	ldr	r2, [r3, #4]
 8011076:	4613      	mov	r3, r2
 8011078:	005b      	lsls	r3, r3, #1
 801107a:	4413      	add	r3, r2
 801107c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 801107e:	429a      	cmp	r2, r3
 8011080:	d305      	bcc.n	801108e <UART_SetConfig+0x8f6>
 8011082:	697b      	ldr	r3, [r7, #20]
 8011084:	685b      	ldr	r3, [r3, #4]
 8011086:	031b      	lsls	r3, r3, #12
 8011088:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 801108a:	429a      	cmp	r2, r3
 801108c:	d910      	bls.n	80110b0 <UART_SetConfig+0x918>
 801108e:	2301      	movs	r3, #1
 8011090:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 8011094:	e1d1      	b.n	801143a <UART_SetConfig+0xca2>
 8011096:	bf00      	nop
 8011098:	40011c00 	.word	0x40011c00
 801109c:	58024400 	.word	0x58024400
 80110a0:	58000c00 	.word	0x58000c00
 80110a4:	03d09000 	.word	0x03d09000
 80110a8:	003d0900 	.word	0x003d0900
 80110ac:	0801b064 	.word	0x0801b064
 80110b0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80110b2:	2200      	movs	r2, #0
 80110b4:	60bb      	str	r3, [r7, #8]
 80110b6:	60fa      	str	r2, [r7, #12]
 80110b8:	697b      	ldr	r3, [r7, #20]
 80110ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80110bc:	4ac0      	ldr	r2, [pc, #768]	@ (80113c0 <UART_SetConfig+0xc28>)
 80110be:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80110c2:	b29b      	uxth	r3, r3
 80110c4:	2200      	movs	r2, #0
 80110c6:	603b      	str	r3, [r7, #0]
 80110c8:	607a      	str	r2, [r7, #4]
 80110ca:	e9d7 2300 	ldrd	r2, r3, [r7]
 80110ce:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80110d2:	f7ef fb41 	bl	8000758 <__aeabi_uldivmod>
 80110d6:	4602      	mov	r2, r0
 80110d8:	460b      	mov	r3, r1
 80110da:	4610      	mov	r0, r2
 80110dc:	4619      	mov	r1, r3
 80110de:	f04f 0200 	mov.w	r2, #0
 80110e2:	f04f 0300 	mov.w	r3, #0
 80110e6:	020b      	lsls	r3, r1, #8
 80110e8:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 80110ec:	0202      	lsls	r2, r0, #8
 80110ee:	6979      	ldr	r1, [r7, #20]
 80110f0:	6849      	ldr	r1, [r1, #4]
 80110f2:	0849      	lsrs	r1, r1, #1
 80110f4:	2000      	movs	r0, #0
 80110f6:	460c      	mov	r4, r1
 80110f8:	4605      	mov	r5, r0
 80110fa:	eb12 0804 	adds.w	r8, r2, r4
 80110fe:	eb43 0905 	adc.w	r9, r3, r5
 8011102:	697b      	ldr	r3, [r7, #20]
 8011104:	685b      	ldr	r3, [r3, #4]
 8011106:	2200      	movs	r2, #0
 8011108:	469a      	mov	sl, r3
 801110a:	4693      	mov	fp, r2
 801110c:	4652      	mov	r2, sl
 801110e:	465b      	mov	r3, fp
 8011110:	4640      	mov	r0, r8
 8011112:	4649      	mov	r1, r9
 8011114:	f7ef fb20 	bl	8000758 <__aeabi_uldivmod>
 8011118:	4602      	mov	r2, r0
 801111a:	460b      	mov	r3, r1
 801111c:	4613      	mov	r3, r2
 801111e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8011120:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8011122:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8011126:	d308      	bcc.n	801113a <UART_SetConfig+0x9a2>
 8011128:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801112a:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 801112e:	d204      	bcs.n	801113a <UART_SetConfig+0x9a2>
 8011130:	697b      	ldr	r3, [r7, #20]
 8011132:	681b      	ldr	r3, [r3, #0]
 8011134:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8011136:	60da      	str	r2, [r3, #12]
 8011138:	e17f      	b.n	801143a <UART_SetConfig+0xca2>
 801113a:	2301      	movs	r3, #1
 801113c:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 8011140:	e17b      	b.n	801143a <UART_SetConfig+0xca2>
 8011142:	697b      	ldr	r3, [r7, #20]
 8011144:	69db      	ldr	r3, [r3, #28]
 8011146:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 801114a:	f040 80bd 	bne.w	80112c8 <UART_SetConfig+0xb30>
 801114e:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 8011152:	2b20      	cmp	r3, #32
 8011154:	dc48      	bgt.n	80111e8 <UART_SetConfig+0xa50>
 8011156:	2b00      	cmp	r3, #0
 8011158:	db7b      	blt.n	8011252 <UART_SetConfig+0xaba>
 801115a:	2b20      	cmp	r3, #32
 801115c:	d879      	bhi.n	8011252 <UART_SetConfig+0xaba>
 801115e:	a201      	add	r2, pc, #4	@ (adr r2, 8011164 <UART_SetConfig+0x9cc>)
 8011160:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8011164:	080111ef 	.word	0x080111ef
 8011168:	080111f7 	.word	0x080111f7
 801116c:	08011253 	.word	0x08011253
 8011170:	08011253 	.word	0x08011253
 8011174:	080111ff 	.word	0x080111ff
 8011178:	08011253 	.word	0x08011253
 801117c:	08011253 	.word	0x08011253
 8011180:	08011253 	.word	0x08011253
 8011184:	0801120f 	.word	0x0801120f
 8011188:	08011253 	.word	0x08011253
 801118c:	08011253 	.word	0x08011253
 8011190:	08011253 	.word	0x08011253
 8011194:	08011253 	.word	0x08011253
 8011198:	08011253 	.word	0x08011253
 801119c:	08011253 	.word	0x08011253
 80111a0:	08011253 	.word	0x08011253
 80111a4:	0801121f 	.word	0x0801121f
 80111a8:	08011253 	.word	0x08011253
 80111ac:	08011253 	.word	0x08011253
 80111b0:	08011253 	.word	0x08011253
 80111b4:	08011253 	.word	0x08011253
 80111b8:	08011253 	.word	0x08011253
 80111bc:	08011253 	.word	0x08011253
 80111c0:	08011253 	.word	0x08011253
 80111c4:	08011253 	.word	0x08011253
 80111c8:	08011253 	.word	0x08011253
 80111cc:	08011253 	.word	0x08011253
 80111d0:	08011253 	.word	0x08011253
 80111d4:	08011253 	.word	0x08011253
 80111d8:	08011253 	.word	0x08011253
 80111dc:	08011253 	.word	0x08011253
 80111e0:	08011253 	.word	0x08011253
 80111e4:	08011245 	.word	0x08011245
 80111e8:	2b40      	cmp	r3, #64	@ 0x40
 80111ea:	d02e      	beq.n	801124a <UART_SetConfig+0xab2>
 80111ec:	e031      	b.n	8011252 <UART_SetConfig+0xaba>
 80111ee:	f7fa fe67 	bl	800bec0 <HAL_RCC_GetPCLK1Freq>
 80111f2:	63f8      	str	r0, [r7, #60]	@ 0x3c
 80111f4:	e033      	b.n	801125e <UART_SetConfig+0xac6>
 80111f6:	f7fa fe79 	bl	800beec <HAL_RCC_GetPCLK2Freq>
 80111fa:	63f8      	str	r0, [r7, #60]	@ 0x3c
 80111fc:	e02f      	b.n	801125e <UART_SetConfig+0xac6>
 80111fe:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8011202:	4618      	mov	r0, r3
 8011204:	f7fc fd10 	bl	800dc28 <HAL_RCCEx_GetPLL2ClockFreq>
 8011208:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801120a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801120c:	e027      	b.n	801125e <UART_SetConfig+0xac6>
 801120e:	f107 0318 	add.w	r3, r7, #24
 8011212:	4618      	mov	r0, r3
 8011214:	f7fc fe5c 	bl	800ded0 <HAL_RCCEx_GetPLL3ClockFreq>
 8011218:	69fb      	ldr	r3, [r7, #28]
 801121a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801121c:	e01f      	b.n	801125e <UART_SetConfig+0xac6>
 801121e:	4b69      	ldr	r3, [pc, #420]	@ (80113c4 <UART_SetConfig+0xc2c>)
 8011220:	681b      	ldr	r3, [r3, #0]
 8011222:	f003 0320 	and.w	r3, r3, #32
 8011226:	2b00      	cmp	r3, #0
 8011228:	d009      	beq.n	801123e <UART_SetConfig+0xaa6>
 801122a:	4b66      	ldr	r3, [pc, #408]	@ (80113c4 <UART_SetConfig+0xc2c>)
 801122c:	681b      	ldr	r3, [r3, #0]
 801122e:	08db      	lsrs	r3, r3, #3
 8011230:	f003 0303 	and.w	r3, r3, #3
 8011234:	4a64      	ldr	r2, [pc, #400]	@ (80113c8 <UART_SetConfig+0xc30>)
 8011236:	fa22 f303 	lsr.w	r3, r2, r3
 801123a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801123c:	e00f      	b.n	801125e <UART_SetConfig+0xac6>
 801123e:	4b62      	ldr	r3, [pc, #392]	@ (80113c8 <UART_SetConfig+0xc30>)
 8011240:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011242:	e00c      	b.n	801125e <UART_SetConfig+0xac6>
 8011244:	4b61      	ldr	r3, [pc, #388]	@ (80113cc <UART_SetConfig+0xc34>)
 8011246:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011248:	e009      	b.n	801125e <UART_SetConfig+0xac6>
 801124a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801124e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011250:	e005      	b.n	801125e <UART_SetConfig+0xac6>
 8011252:	2300      	movs	r3, #0
 8011254:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8011256:	2301      	movs	r3, #1
 8011258:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 801125c:	bf00      	nop
 801125e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8011260:	2b00      	cmp	r3, #0
 8011262:	f000 80ea 	beq.w	801143a <UART_SetConfig+0xca2>
 8011266:	697b      	ldr	r3, [r7, #20]
 8011268:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801126a:	4a55      	ldr	r2, [pc, #340]	@ (80113c0 <UART_SetConfig+0xc28>)
 801126c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8011270:	461a      	mov	r2, r3
 8011272:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8011274:	fbb3 f3f2 	udiv	r3, r3, r2
 8011278:	005a      	lsls	r2, r3, #1
 801127a:	697b      	ldr	r3, [r7, #20]
 801127c:	685b      	ldr	r3, [r3, #4]
 801127e:	085b      	lsrs	r3, r3, #1
 8011280:	441a      	add	r2, r3
 8011282:	697b      	ldr	r3, [r7, #20]
 8011284:	685b      	ldr	r3, [r3, #4]
 8011286:	fbb2 f3f3 	udiv	r3, r2, r3
 801128a:	63bb      	str	r3, [r7, #56]	@ 0x38
 801128c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801128e:	2b0f      	cmp	r3, #15
 8011290:	d916      	bls.n	80112c0 <UART_SetConfig+0xb28>
 8011292:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8011294:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8011298:	d212      	bcs.n	80112c0 <UART_SetConfig+0xb28>
 801129a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801129c:	b29b      	uxth	r3, r3
 801129e:	f023 030f 	bic.w	r3, r3, #15
 80112a2:	86fb      	strh	r3, [r7, #54]	@ 0x36
 80112a4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80112a6:	085b      	lsrs	r3, r3, #1
 80112a8:	b29b      	uxth	r3, r3
 80112aa:	f003 0307 	and.w	r3, r3, #7
 80112ae:	b29a      	uxth	r2, r3
 80112b0:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 80112b2:	4313      	orrs	r3, r2
 80112b4:	86fb      	strh	r3, [r7, #54]	@ 0x36
 80112b6:	697b      	ldr	r3, [r7, #20]
 80112b8:	681b      	ldr	r3, [r3, #0]
 80112ba:	8efa      	ldrh	r2, [r7, #54]	@ 0x36
 80112bc:	60da      	str	r2, [r3, #12]
 80112be:	e0bc      	b.n	801143a <UART_SetConfig+0xca2>
 80112c0:	2301      	movs	r3, #1
 80112c2:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 80112c6:	e0b8      	b.n	801143a <UART_SetConfig+0xca2>
 80112c8:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 80112cc:	2b20      	cmp	r3, #32
 80112ce:	dc4b      	bgt.n	8011368 <UART_SetConfig+0xbd0>
 80112d0:	2b00      	cmp	r3, #0
 80112d2:	f2c0 8087 	blt.w	80113e4 <UART_SetConfig+0xc4c>
 80112d6:	2b20      	cmp	r3, #32
 80112d8:	f200 8084 	bhi.w	80113e4 <UART_SetConfig+0xc4c>
 80112dc:	a201      	add	r2, pc, #4	@ (adr r2, 80112e4 <UART_SetConfig+0xb4c>)
 80112de:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80112e2:	bf00      	nop
 80112e4:	0801136f 	.word	0x0801136f
 80112e8:	08011377 	.word	0x08011377
 80112ec:	080113e5 	.word	0x080113e5
 80112f0:	080113e5 	.word	0x080113e5
 80112f4:	0801137f 	.word	0x0801137f
 80112f8:	080113e5 	.word	0x080113e5
 80112fc:	080113e5 	.word	0x080113e5
 8011300:	080113e5 	.word	0x080113e5
 8011304:	0801138f 	.word	0x0801138f
 8011308:	080113e5 	.word	0x080113e5
 801130c:	080113e5 	.word	0x080113e5
 8011310:	080113e5 	.word	0x080113e5
 8011314:	080113e5 	.word	0x080113e5
 8011318:	080113e5 	.word	0x080113e5
 801131c:	080113e5 	.word	0x080113e5
 8011320:	080113e5 	.word	0x080113e5
 8011324:	0801139f 	.word	0x0801139f
 8011328:	080113e5 	.word	0x080113e5
 801132c:	080113e5 	.word	0x080113e5
 8011330:	080113e5 	.word	0x080113e5
 8011334:	080113e5 	.word	0x080113e5
 8011338:	080113e5 	.word	0x080113e5
 801133c:	080113e5 	.word	0x080113e5
 8011340:	080113e5 	.word	0x080113e5
 8011344:	080113e5 	.word	0x080113e5
 8011348:	080113e5 	.word	0x080113e5
 801134c:	080113e5 	.word	0x080113e5
 8011350:	080113e5 	.word	0x080113e5
 8011354:	080113e5 	.word	0x080113e5
 8011358:	080113e5 	.word	0x080113e5
 801135c:	080113e5 	.word	0x080113e5
 8011360:	080113e5 	.word	0x080113e5
 8011364:	080113d7 	.word	0x080113d7
 8011368:	2b40      	cmp	r3, #64	@ 0x40
 801136a:	d037      	beq.n	80113dc <UART_SetConfig+0xc44>
 801136c:	e03a      	b.n	80113e4 <UART_SetConfig+0xc4c>
 801136e:	f7fa fda7 	bl	800bec0 <HAL_RCC_GetPCLK1Freq>
 8011372:	63f8      	str	r0, [r7, #60]	@ 0x3c
 8011374:	e03c      	b.n	80113f0 <UART_SetConfig+0xc58>
 8011376:	f7fa fdb9 	bl	800beec <HAL_RCC_GetPCLK2Freq>
 801137a:	63f8      	str	r0, [r7, #60]	@ 0x3c
 801137c:	e038      	b.n	80113f0 <UART_SetConfig+0xc58>
 801137e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8011382:	4618      	mov	r0, r3
 8011384:	f7fc fc50 	bl	800dc28 <HAL_RCCEx_GetPLL2ClockFreq>
 8011388:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801138a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801138c:	e030      	b.n	80113f0 <UART_SetConfig+0xc58>
 801138e:	f107 0318 	add.w	r3, r7, #24
 8011392:	4618      	mov	r0, r3
 8011394:	f7fc fd9c 	bl	800ded0 <HAL_RCCEx_GetPLL3ClockFreq>
 8011398:	69fb      	ldr	r3, [r7, #28]
 801139a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801139c:	e028      	b.n	80113f0 <UART_SetConfig+0xc58>
 801139e:	4b09      	ldr	r3, [pc, #36]	@ (80113c4 <UART_SetConfig+0xc2c>)
 80113a0:	681b      	ldr	r3, [r3, #0]
 80113a2:	f003 0320 	and.w	r3, r3, #32
 80113a6:	2b00      	cmp	r3, #0
 80113a8:	d012      	beq.n	80113d0 <UART_SetConfig+0xc38>
 80113aa:	4b06      	ldr	r3, [pc, #24]	@ (80113c4 <UART_SetConfig+0xc2c>)
 80113ac:	681b      	ldr	r3, [r3, #0]
 80113ae:	08db      	lsrs	r3, r3, #3
 80113b0:	f003 0303 	and.w	r3, r3, #3
 80113b4:	4a04      	ldr	r2, [pc, #16]	@ (80113c8 <UART_SetConfig+0xc30>)
 80113b6:	fa22 f303 	lsr.w	r3, r2, r3
 80113ba:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80113bc:	e018      	b.n	80113f0 <UART_SetConfig+0xc58>
 80113be:	bf00      	nop
 80113c0:	0801b064 	.word	0x0801b064
 80113c4:	58024400 	.word	0x58024400
 80113c8:	03d09000 	.word	0x03d09000
 80113cc:	003d0900 	.word	0x003d0900
 80113d0:	4b24      	ldr	r3, [pc, #144]	@ (8011464 <UART_SetConfig+0xccc>)
 80113d2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80113d4:	e00c      	b.n	80113f0 <UART_SetConfig+0xc58>
 80113d6:	4b24      	ldr	r3, [pc, #144]	@ (8011468 <UART_SetConfig+0xcd0>)
 80113d8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80113da:	e009      	b.n	80113f0 <UART_SetConfig+0xc58>
 80113dc:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80113e0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80113e2:	e005      	b.n	80113f0 <UART_SetConfig+0xc58>
 80113e4:	2300      	movs	r3, #0
 80113e6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80113e8:	2301      	movs	r3, #1
 80113ea:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 80113ee:	bf00      	nop
 80113f0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80113f2:	2b00      	cmp	r3, #0
 80113f4:	d021      	beq.n	801143a <UART_SetConfig+0xca2>
 80113f6:	697b      	ldr	r3, [r7, #20]
 80113f8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80113fa:	4a1c      	ldr	r2, [pc, #112]	@ (801146c <UART_SetConfig+0xcd4>)
 80113fc:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8011400:	461a      	mov	r2, r3
 8011402:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8011404:	fbb3 f2f2 	udiv	r2, r3, r2
 8011408:	697b      	ldr	r3, [r7, #20]
 801140a:	685b      	ldr	r3, [r3, #4]
 801140c:	085b      	lsrs	r3, r3, #1
 801140e:	441a      	add	r2, r3
 8011410:	697b      	ldr	r3, [r7, #20]
 8011412:	685b      	ldr	r3, [r3, #4]
 8011414:	fbb2 f3f3 	udiv	r3, r2, r3
 8011418:	63bb      	str	r3, [r7, #56]	@ 0x38
 801141a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801141c:	2b0f      	cmp	r3, #15
 801141e:	d909      	bls.n	8011434 <UART_SetConfig+0xc9c>
 8011420:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8011422:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8011426:	d205      	bcs.n	8011434 <UART_SetConfig+0xc9c>
 8011428:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801142a:	b29a      	uxth	r2, r3
 801142c:	697b      	ldr	r3, [r7, #20]
 801142e:	681b      	ldr	r3, [r3, #0]
 8011430:	60da      	str	r2, [r3, #12]
 8011432:	e002      	b.n	801143a <UART_SetConfig+0xca2>
 8011434:	2301      	movs	r3, #1
 8011436:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 801143a:	697b      	ldr	r3, [r7, #20]
 801143c:	2201      	movs	r2, #1
 801143e:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8011442:	697b      	ldr	r3, [r7, #20]
 8011444:	2201      	movs	r2, #1
 8011446:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 801144a:	697b      	ldr	r3, [r7, #20]
 801144c:	2200      	movs	r2, #0
 801144e:	675a      	str	r2, [r3, #116]	@ 0x74
 8011450:	697b      	ldr	r3, [r7, #20]
 8011452:	2200      	movs	r2, #0
 8011454:	679a      	str	r2, [r3, #120]	@ 0x78
 8011456:	f897 3042 	ldrb.w	r3, [r7, #66]	@ 0x42
 801145a:	4618      	mov	r0, r3
 801145c:	3748      	adds	r7, #72	@ 0x48
 801145e:	46bd      	mov	sp, r7
 8011460:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8011464:	03d09000 	.word	0x03d09000
 8011468:	003d0900 	.word	0x003d0900
 801146c:	0801b064 	.word	0x0801b064

08011470 <UART_AdvFeatureConfig>:
 8011470:	b480      	push	{r7}
 8011472:	b083      	sub	sp, #12
 8011474:	af00      	add	r7, sp, #0
 8011476:	6078      	str	r0, [r7, #4]
 8011478:	687b      	ldr	r3, [r7, #4]
 801147a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801147c:	f003 0308 	and.w	r3, r3, #8
 8011480:	2b00      	cmp	r3, #0
 8011482:	d00a      	beq.n	801149a <UART_AdvFeatureConfig+0x2a>
 8011484:	687b      	ldr	r3, [r7, #4]
 8011486:	681b      	ldr	r3, [r3, #0]
 8011488:	685b      	ldr	r3, [r3, #4]
 801148a:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 801148e:	687b      	ldr	r3, [r7, #4]
 8011490:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8011492:	687b      	ldr	r3, [r7, #4]
 8011494:	681b      	ldr	r3, [r3, #0]
 8011496:	430a      	orrs	r2, r1
 8011498:	605a      	str	r2, [r3, #4]
 801149a:	687b      	ldr	r3, [r7, #4]
 801149c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801149e:	f003 0301 	and.w	r3, r3, #1
 80114a2:	2b00      	cmp	r3, #0
 80114a4:	d00a      	beq.n	80114bc <UART_AdvFeatureConfig+0x4c>
 80114a6:	687b      	ldr	r3, [r7, #4]
 80114a8:	681b      	ldr	r3, [r3, #0]
 80114aa:	685b      	ldr	r3, [r3, #4]
 80114ac:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 80114b0:	687b      	ldr	r3, [r7, #4]
 80114b2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80114b4:	687b      	ldr	r3, [r7, #4]
 80114b6:	681b      	ldr	r3, [r3, #0]
 80114b8:	430a      	orrs	r2, r1
 80114ba:	605a      	str	r2, [r3, #4]
 80114bc:	687b      	ldr	r3, [r7, #4]
 80114be:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80114c0:	f003 0302 	and.w	r3, r3, #2
 80114c4:	2b00      	cmp	r3, #0
 80114c6:	d00a      	beq.n	80114de <UART_AdvFeatureConfig+0x6e>
 80114c8:	687b      	ldr	r3, [r7, #4]
 80114ca:	681b      	ldr	r3, [r3, #0]
 80114cc:	685b      	ldr	r3, [r3, #4]
 80114ce:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 80114d2:	687b      	ldr	r3, [r7, #4]
 80114d4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80114d6:	687b      	ldr	r3, [r7, #4]
 80114d8:	681b      	ldr	r3, [r3, #0]
 80114da:	430a      	orrs	r2, r1
 80114dc:	605a      	str	r2, [r3, #4]
 80114de:	687b      	ldr	r3, [r7, #4]
 80114e0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80114e2:	f003 0304 	and.w	r3, r3, #4
 80114e6:	2b00      	cmp	r3, #0
 80114e8:	d00a      	beq.n	8011500 <UART_AdvFeatureConfig+0x90>
 80114ea:	687b      	ldr	r3, [r7, #4]
 80114ec:	681b      	ldr	r3, [r3, #0]
 80114ee:	685b      	ldr	r3, [r3, #4]
 80114f0:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 80114f4:	687b      	ldr	r3, [r7, #4]
 80114f6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80114f8:	687b      	ldr	r3, [r7, #4]
 80114fa:	681b      	ldr	r3, [r3, #0]
 80114fc:	430a      	orrs	r2, r1
 80114fe:	605a      	str	r2, [r3, #4]
 8011500:	687b      	ldr	r3, [r7, #4]
 8011502:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011504:	f003 0310 	and.w	r3, r3, #16
 8011508:	2b00      	cmp	r3, #0
 801150a:	d00a      	beq.n	8011522 <UART_AdvFeatureConfig+0xb2>
 801150c:	687b      	ldr	r3, [r7, #4]
 801150e:	681b      	ldr	r3, [r3, #0]
 8011510:	689b      	ldr	r3, [r3, #8]
 8011512:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 8011516:	687b      	ldr	r3, [r7, #4]
 8011518:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 801151a:	687b      	ldr	r3, [r7, #4]
 801151c:	681b      	ldr	r3, [r3, #0]
 801151e:	430a      	orrs	r2, r1
 8011520:	609a      	str	r2, [r3, #8]
 8011522:	687b      	ldr	r3, [r7, #4]
 8011524:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011526:	f003 0320 	and.w	r3, r3, #32
 801152a:	2b00      	cmp	r3, #0
 801152c:	d00a      	beq.n	8011544 <UART_AdvFeatureConfig+0xd4>
 801152e:	687b      	ldr	r3, [r7, #4]
 8011530:	681b      	ldr	r3, [r3, #0]
 8011532:	689b      	ldr	r3, [r3, #8]
 8011534:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 8011538:	687b      	ldr	r3, [r7, #4]
 801153a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 801153c:	687b      	ldr	r3, [r7, #4]
 801153e:	681b      	ldr	r3, [r3, #0]
 8011540:	430a      	orrs	r2, r1
 8011542:	609a      	str	r2, [r3, #8]
 8011544:	687b      	ldr	r3, [r7, #4]
 8011546:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011548:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 801154c:	2b00      	cmp	r3, #0
 801154e:	d01a      	beq.n	8011586 <UART_AdvFeatureConfig+0x116>
 8011550:	687b      	ldr	r3, [r7, #4]
 8011552:	681b      	ldr	r3, [r3, #0]
 8011554:	685b      	ldr	r3, [r3, #4]
 8011556:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 801155a:	687b      	ldr	r3, [r7, #4]
 801155c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 801155e:	687b      	ldr	r3, [r7, #4]
 8011560:	681b      	ldr	r3, [r3, #0]
 8011562:	430a      	orrs	r2, r1
 8011564:	605a      	str	r2, [r3, #4]
 8011566:	687b      	ldr	r3, [r7, #4]
 8011568:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801156a:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 801156e:	d10a      	bne.n	8011586 <UART_AdvFeatureConfig+0x116>
 8011570:	687b      	ldr	r3, [r7, #4]
 8011572:	681b      	ldr	r3, [r3, #0]
 8011574:	685b      	ldr	r3, [r3, #4]
 8011576:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 801157a:	687b      	ldr	r3, [r7, #4]
 801157c:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 801157e:	687b      	ldr	r3, [r7, #4]
 8011580:	681b      	ldr	r3, [r3, #0]
 8011582:	430a      	orrs	r2, r1
 8011584:	605a      	str	r2, [r3, #4]
 8011586:	687b      	ldr	r3, [r7, #4]
 8011588:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801158a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 801158e:	2b00      	cmp	r3, #0
 8011590:	d00a      	beq.n	80115a8 <UART_AdvFeatureConfig+0x138>
 8011592:	687b      	ldr	r3, [r7, #4]
 8011594:	681b      	ldr	r3, [r3, #0]
 8011596:	685b      	ldr	r3, [r3, #4]
 8011598:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 801159c:	687b      	ldr	r3, [r7, #4]
 801159e:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 80115a0:	687b      	ldr	r3, [r7, #4]
 80115a2:	681b      	ldr	r3, [r3, #0]
 80115a4:	430a      	orrs	r2, r1
 80115a6:	605a      	str	r2, [r3, #4]
 80115a8:	bf00      	nop
 80115aa:	370c      	adds	r7, #12
 80115ac:	46bd      	mov	sp, r7
 80115ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80115b2:	4770      	bx	lr

080115b4 <UART_CheckIdleState>:
 80115b4:	b580      	push	{r7, lr}
 80115b6:	b098      	sub	sp, #96	@ 0x60
 80115b8:	af02      	add	r7, sp, #8
 80115ba:	6078      	str	r0, [r7, #4]
 80115bc:	687b      	ldr	r3, [r7, #4]
 80115be:	2200      	movs	r2, #0
 80115c0:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80115c4:	f7f3 fe94 	bl	80052f0 <HAL_GetTick>
 80115c8:	6578      	str	r0, [r7, #84]	@ 0x54
 80115ca:	687b      	ldr	r3, [r7, #4]
 80115cc:	681b      	ldr	r3, [r3, #0]
 80115ce:	681b      	ldr	r3, [r3, #0]
 80115d0:	f003 0308 	and.w	r3, r3, #8
 80115d4:	2b08      	cmp	r3, #8
 80115d6:	d12f      	bne.n	8011638 <UART_CheckIdleState+0x84>
 80115d8:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 80115dc:	9300      	str	r3, [sp, #0]
 80115de:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80115e0:	2200      	movs	r2, #0
 80115e2:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 80115e6:	6878      	ldr	r0, [r7, #4]
 80115e8:	f000 f88e 	bl	8011708 <UART_WaitOnFlagUntilTimeout>
 80115ec:	4603      	mov	r3, r0
 80115ee:	2b00      	cmp	r3, #0
 80115f0:	d022      	beq.n	8011638 <UART_CheckIdleState+0x84>
 80115f2:	687b      	ldr	r3, [r7, #4]
 80115f4:	681b      	ldr	r3, [r3, #0]
 80115f6:	63bb      	str	r3, [r7, #56]	@ 0x38
 80115f8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80115fa:	e853 3f00 	ldrex	r3, [r3]
 80115fe:	637b      	str	r3, [r7, #52]	@ 0x34
 8011600:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8011602:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8011606:	653b      	str	r3, [r7, #80]	@ 0x50
 8011608:	687b      	ldr	r3, [r7, #4]
 801160a:	681b      	ldr	r3, [r3, #0]
 801160c:	461a      	mov	r2, r3
 801160e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8011610:	647b      	str	r3, [r7, #68]	@ 0x44
 8011612:	643a      	str	r2, [r7, #64]	@ 0x40
 8011614:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8011616:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8011618:	e841 2300 	strex	r3, r2, [r1]
 801161c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801161e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8011620:	2b00      	cmp	r3, #0
 8011622:	d1e6      	bne.n	80115f2 <UART_CheckIdleState+0x3e>
 8011624:	687b      	ldr	r3, [r7, #4]
 8011626:	2220      	movs	r2, #32
 8011628:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 801162c:	687b      	ldr	r3, [r7, #4]
 801162e:	2200      	movs	r2, #0
 8011630:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8011634:	2303      	movs	r3, #3
 8011636:	e063      	b.n	8011700 <UART_CheckIdleState+0x14c>
 8011638:	687b      	ldr	r3, [r7, #4]
 801163a:	681b      	ldr	r3, [r3, #0]
 801163c:	681b      	ldr	r3, [r3, #0]
 801163e:	f003 0304 	and.w	r3, r3, #4
 8011642:	2b04      	cmp	r3, #4
 8011644:	d149      	bne.n	80116da <UART_CheckIdleState+0x126>
 8011646:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 801164a:	9300      	str	r3, [sp, #0]
 801164c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 801164e:	2200      	movs	r2, #0
 8011650:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 8011654:	6878      	ldr	r0, [r7, #4]
 8011656:	f000 f857 	bl	8011708 <UART_WaitOnFlagUntilTimeout>
 801165a:	4603      	mov	r3, r0
 801165c:	2b00      	cmp	r3, #0
 801165e:	d03c      	beq.n	80116da <UART_CheckIdleState+0x126>
 8011660:	687b      	ldr	r3, [r7, #4]
 8011662:	681b      	ldr	r3, [r3, #0]
 8011664:	627b      	str	r3, [r7, #36]	@ 0x24
 8011666:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011668:	e853 3f00 	ldrex	r3, [r3]
 801166c:	623b      	str	r3, [r7, #32]
 801166e:	6a3b      	ldr	r3, [r7, #32]
 8011670:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8011674:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8011676:	687b      	ldr	r3, [r7, #4]
 8011678:	681b      	ldr	r3, [r3, #0]
 801167a:	461a      	mov	r2, r3
 801167c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 801167e:	633b      	str	r3, [r7, #48]	@ 0x30
 8011680:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8011682:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8011684:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8011686:	e841 2300 	strex	r3, r2, [r1]
 801168a:	62bb      	str	r3, [r7, #40]	@ 0x28
 801168c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801168e:	2b00      	cmp	r3, #0
 8011690:	d1e6      	bne.n	8011660 <UART_CheckIdleState+0xac>
 8011692:	687b      	ldr	r3, [r7, #4]
 8011694:	681b      	ldr	r3, [r3, #0]
 8011696:	3308      	adds	r3, #8
 8011698:	613b      	str	r3, [r7, #16]
 801169a:	693b      	ldr	r3, [r7, #16]
 801169c:	e853 3f00 	ldrex	r3, [r3]
 80116a0:	60fb      	str	r3, [r7, #12]
 80116a2:	68fb      	ldr	r3, [r7, #12]
 80116a4:	f023 0301 	bic.w	r3, r3, #1
 80116a8:	64bb      	str	r3, [r7, #72]	@ 0x48
 80116aa:	687b      	ldr	r3, [r7, #4]
 80116ac:	681b      	ldr	r3, [r3, #0]
 80116ae:	3308      	adds	r3, #8
 80116b0:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80116b2:	61fa      	str	r2, [r7, #28]
 80116b4:	61bb      	str	r3, [r7, #24]
 80116b6:	69b9      	ldr	r1, [r7, #24]
 80116b8:	69fa      	ldr	r2, [r7, #28]
 80116ba:	e841 2300 	strex	r3, r2, [r1]
 80116be:	617b      	str	r3, [r7, #20]
 80116c0:	697b      	ldr	r3, [r7, #20]
 80116c2:	2b00      	cmp	r3, #0
 80116c4:	d1e5      	bne.n	8011692 <UART_CheckIdleState+0xde>
 80116c6:	687b      	ldr	r3, [r7, #4]
 80116c8:	2220      	movs	r2, #32
 80116ca:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80116ce:	687b      	ldr	r3, [r7, #4]
 80116d0:	2200      	movs	r2, #0
 80116d2:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 80116d6:	2303      	movs	r3, #3
 80116d8:	e012      	b.n	8011700 <UART_CheckIdleState+0x14c>
 80116da:	687b      	ldr	r3, [r7, #4]
 80116dc:	2220      	movs	r2, #32
 80116de:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80116e2:	687b      	ldr	r3, [r7, #4]
 80116e4:	2220      	movs	r2, #32
 80116e6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80116ea:	687b      	ldr	r3, [r7, #4]
 80116ec:	2200      	movs	r2, #0
 80116ee:	66da      	str	r2, [r3, #108]	@ 0x6c
 80116f0:	687b      	ldr	r3, [r7, #4]
 80116f2:	2200      	movs	r2, #0
 80116f4:	671a      	str	r2, [r3, #112]	@ 0x70
 80116f6:	687b      	ldr	r3, [r7, #4]
 80116f8:	2200      	movs	r2, #0
 80116fa:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 80116fe:	2300      	movs	r3, #0
 8011700:	4618      	mov	r0, r3
 8011702:	3758      	adds	r7, #88	@ 0x58
 8011704:	46bd      	mov	sp, r7
 8011706:	bd80      	pop	{r7, pc}

08011708 <UART_WaitOnFlagUntilTimeout>:
 8011708:	b580      	push	{r7, lr}
 801170a:	b084      	sub	sp, #16
 801170c:	af00      	add	r7, sp, #0
 801170e:	60f8      	str	r0, [r7, #12]
 8011710:	60b9      	str	r1, [r7, #8]
 8011712:	603b      	str	r3, [r7, #0]
 8011714:	4613      	mov	r3, r2
 8011716:	71fb      	strb	r3, [r7, #7]
 8011718:	e04f      	b.n	80117ba <UART_WaitOnFlagUntilTimeout+0xb2>
 801171a:	69bb      	ldr	r3, [r7, #24]
 801171c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8011720:	d04b      	beq.n	80117ba <UART_WaitOnFlagUntilTimeout+0xb2>
 8011722:	f7f3 fde5 	bl	80052f0 <HAL_GetTick>
 8011726:	4602      	mov	r2, r0
 8011728:	683b      	ldr	r3, [r7, #0]
 801172a:	1ad3      	subs	r3, r2, r3
 801172c:	69ba      	ldr	r2, [r7, #24]
 801172e:	429a      	cmp	r2, r3
 8011730:	d302      	bcc.n	8011738 <UART_WaitOnFlagUntilTimeout+0x30>
 8011732:	69bb      	ldr	r3, [r7, #24]
 8011734:	2b00      	cmp	r3, #0
 8011736:	d101      	bne.n	801173c <UART_WaitOnFlagUntilTimeout+0x34>
 8011738:	2303      	movs	r3, #3
 801173a:	e04e      	b.n	80117da <UART_WaitOnFlagUntilTimeout+0xd2>
 801173c:	68fb      	ldr	r3, [r7, #12]
 801173e:	681b      	ldr	r3, [r3, #0]
 8011740:	681b      	ldr	r3, [r3, #0]
 8011742:	f003 0304 	and.w	r3, r3, #4
 8011746:	2b00      	cmp	r3, #0
 8011748:	d037      	beq.n	80117ba <UART_WaitOnFlagUntilTimeout+0xb2>
 801174a:	68bb      	ldr	r3, [r7, #8]
 801174c:	2b80      	cmp	r3, #128	@ 0x80
 801174e:	d034      	beq.n	80117ba <UART_WaitOnFlagUntilTimeout+0xb2>
 8011750:	68bb      	ldr	r3, [r7, #8]
 8011752:	2b40      	cmp	r3, #64	@ 0x40
 8011754:	d031      	beq.n	80117ba <UART_WaitOnFlagUntilTimeout+0xb2>
 8011756:	68fb      	ldr	r3, [r7, #12]
 8011758:	681b      	ldr	r3, [r3, #0]
 801175a:	69db      	ldr	r3, [r3, #28]
 801175c:	f003 0308 	and.w	r3, r3, #8
 8011760:	2b08      	cmp	r3, #8
 8011762:	d110      	bne.n	8011786 <UART_WaitOnFlagUntilTimeout+0x7e>
 8011764:	68fb      	ldr	r3, [r7, #12]
 8011766:	681b      	ldr	r3, [r3, #0]
 8011768:	2208      	movs	r2, #8
 801176a:	621a      	str	r2, [r3, #32]
 801176c:	68f8      	ldr	r0, [r7, #12]
 801176e:	f000 f839 	bl	80117e4 <UART_EndRxTransfer>
 8011772:	68fb      	ldr	r3, [r7, #12]
 8011774:	2208      	movs	r2, #8
 8011776:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 801177a:	68fb      	ldr	r3, [r7, #12]
 801177c:	2200      	movs	r2, #0
 801177e:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8011782:	2301      	movs	r3, #1
 8011784:	e029      	b.n	80117da <UART_WaitOnFlagUntilTimeout+0xd2>
 8011786:	68fb      	ldr	r3, [r7, #12]
 8011788:	681b      	ldr	r3, [r3, #0]
 801178a:	69db      	ldr	r3, [r3, #28]
 801178c:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8011790:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8011794:	d111      	bne.n	80117ba <UART_WaitOnFlagUntilTimeout+0xb2>
 8011796:	68fb      	ldr	r3, [r7, #12]
 8011798:	681b      	ldr	r3, [r3, #0]
 801179a:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 801179e:	621a      	str	r2, [r3, #32]
 80117a0:	68f8      	ldr	r0, [r7, #12]
 80117a2:	f000 f81f 	bl	80117e4 <UART_EndRxTransfer>
 80117a6:	68fb      	ldr	r3, [r7, #12]
 80117a8:	2220      	movs	r2, #32
 80117aa:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80117ae:	68fb      	ldr	r3, [r7, #12]
 80117b0:	2200      	movs	r2, #0
 80117b2:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 80117b6:	2303      	movs	r3, #3
 80117b8:	e00f      	b.n	80117da <UART_WaitOnFlagUntilTimeout+0xd2>
 80117ba:	68fb      	ldr	r3, [r7, #12]
 80117bc:	681b      	ldr	r3, [r3, #0]
 80117be:	69da      	ldr	r2, [r3, #28]
 80117c0:	68bb      	ldr	r3, [r7, #8]
 80117c2:	4013      	ands	r3, r2
 80117c4:	68ba      	ldr	r2, [r7, #8]
 80117c6:	429a      	cmp	r2, r3
 80117c8:	bf0c      	ite	eq
 80117ca:	2301      	moveq	r3, #1
 80117cc:	2300      	movne	r3, #0
 80117ce:	b2db      	uxtb	r3, r3
 80117d0:	461a      	mov	r2, r3
 80117d2:	79fb      	ldrb	r3, [r7, #7]
 80117d4:	429a      	cmp	r2, r3
 80117d6:	d0a0      	beq.n	801171a <UART_WaitOnFlagUntilTimeout+0x12>
 80117d8:	2300      	movs	r3, #0
 80117da:	4618      	mov	r0, r3
 80117dc:	3710      	adds	r7, #16
 80117de:	46bd      	mov	sp, r7
 80117e0:	bd80      	pop	{r7, pc}
	...

080117e4 <UART_EndRxTransfer>:
 80117e4:	b480      	push	{r7}
 80117e6:	b095      	sub	sp, #84	@ 0x54
 80117e8:	af00      	add	r7, sp, #0
 80117ea:	6078      	str	r0, [r7, #4]
 80117ec:	687b      	ldr	r3, [r7, #4]
 80117ee:	681b      	ldr	r3, [r3, #0]
 80117f0:	637b      	str	r3, [r7, #52]	@ 0x34
 80117f2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80117f4:	e853 3f00 	ldrex	r3, [r3]
 80117f8:	633b      	str	r3, [r7, #48]	@ 0x30
 80117fa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80117fc:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8011800:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8011802:	687b      	ldr	r3, [r7, #4]
 8011804:	681b      	ldr	r3, [r3, #0]
 8011806:	461a      	mov	r2, r3
 8011808:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 801180a:	643b      	str	r3, [r7, #64]	@ 0x40
 801180c:	63fa      	str	r2, [r7, #60]	@ 0x3c
 801180e:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8011810:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8011812:	e841 2300 	strex	r3, r2, [r1]
 8011816:	63bb      	str	r3, [r7, #56]	@ 0x38
 8011818:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801181a:	2b00      	cmp	r3, #0
 801181c:	d1e6      	bne.n	80117ec <UART_EndRxTransfer+0x8>
 801181e:	687b      	ldr	r3, [r7, #4]
 8011820:	681b      	ldr	r3, [r3, #0]
 8011822:	3308      	adds	r3, #8
 8011824:	623b      	str	r3, [r7, #32]
 8011826:	6a3b      	ldr	r3, [r7, #32]
 8011828:	e853 3f00 	ldrex	r3, [r3]
 801182c:	61fb      	str	r3, [r7, #28]
 801182e:	69fa      	ldr	r2, [r7, #28]
 8011830:	4b1e      	ldr	r3, [pc, #120]	@ (80118ac <UART_EndRxTransfer+0xc8>)
 8011832:	4013      	ands	r3, r2
 8011834:	64bb      	str	r3, [r7, #72]	@ 0x48
 8011836:	687b      	ldr	r3, [r7, #4]
 8011838:	681b      	ldr	r3, [r3, #0]
 801183a:	3308      	adds	r3, #8
 801183c:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 801183e:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8011840:	62bb      	str	r3, [r7, #40]	@ 0x28
 8011842:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8011844:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8011846:	e841 2300 	strex	r3, r2, [r1]
 801184a:	627b      	str	r3, [r7, #36]	@ 0x24
 801184c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801184e:	2b00      	cmp	r3, #0
 8011850:	d1e5      	bne.n	801181e <UART_EndRxTransfer+0x3a>
 8011852:	687b      	ldr	r3, [r7, #4]
 8011854:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8011856:	2b01      	cmp	r3, #1
 8011858:	d118      	bne.n	801188c <UART_EndRxTransfer+0xa8>
 801185a:	687b      	ldr	r3, [r7, #4]
 801185c:	681b      	ldr	r3, [r3, #0]
 801185e:	60fb      	str	r3, [r7, #12]
 8011860:	68fb      	ldr	r3, [r7, #12]
 8011862:	e853 3f00 	ldrex	r3, [r3]
 8011866:	60bb      	str	r3, [r7, #8]
 8011868:	68bb      	ldr	r3, [r7, #8]
 801186a:	f023 0310 	bic.w	r3, r3, #16
 801186e:	647b      	str	r3, [r7, #68]	@ 0x44
 8011870:	687b      	ldr	r3, [r7, #4]
 8011872:	681b      	ldr	r3, [r3, #0]
 8011874:	461a      	mov	r2, r3
 8011876:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8011878:	61bb      	str	r3, [r7, #24]
 801187a:	617a      	str	r2, [r7, #20]
 801187c:	6979      	ldr	r1, [r7, #20]
 801187e:	69ba      	ldr	r2, [r7, #24]
 8011880:	e841 2300 	strex	r3, r2, [r1]
 8011884:	613b      	str	r3, [r7, #16]
 8011886:	693b      	ldr	r3, [r7, #16]
 8011888:	2b00      	cmp	r3, #0
 801188a:	d1e6      	bne.n	801185a <UART_EndRxTransfer+0x76>
 801188c:	687b      	ldr	r3, [r7, #4]
 801188e:	2220      	movs	r2, #32
 8011890:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8011894:	687b      	ldr	r3, [r7, #4]
 8011896:	2200      	movs	r2, #0
 8011898:	66da      	str	r2, [r3, #108]	@ 0x6c
 801189a:	687b      	ldr	r3, [r7, #4]
 801189c:	2200      	movs	r2, #0
 801189e:	675a      	str	r2, [r3, #116]	@ 0x74
 80118a0:	bf00      	nop
 80118a2:	3754      	adds	r7, #84	@ 0x54
 80118a4:	46bd      	mov	sp, r7
 80118a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80118aa:	4770      	bx	lr
 80118ac:	effffffe 	.word	0xeffffffe

080118b0 <HAL_UARTEx_DisableFifoMode>:
 80118b0:	b480      	push	{r7}
 80118b2:	b085      	sub	sp, #20
 80118b4:	af00      	add	r7, sp, #0
 80118b6:	6078      	str	r0, [r7, #4]
 80118b8:	687b      	ldr	r3, [r7, #4]
 80118ba:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 80118be:	2b01      	cmp	r3, #1
 80118c0:	d101      	bne.n	80118c6 <HAL_UARTEx_DisableFifoMode+0x16>
 80118c2:	2302      	movs	r3, #2
 80118c4:	e027      	b.n	8011916 <HAL_UARTEx_DisableFifoMode+0x66>
 80118c6:	687b      	ldr	r3, [r7, #4]
 80118c8:	2201      	movs	r2, #1
 80118ca:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 80118ce:	687b      	ldr	r3, [r7, #4]
 80118d0:	2224      	movs	r2, #36	@ 0x24
 80118d2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80118d6:	687b      	ldr	r3, [r7, #4]
 80118d8:	681b      	ldr	r3, [r3, #0]
 80118da:	681b      	ldr	r3, [r3, #0]
 80118dc:	60fb      	str	r3, [r7, #12]
 80118de:	687b      	ldr	r3, [r7, #4]
 80118e0:	681b      	ldr	r3, [r3, #0]
 80118e2:	681a      	ldr	r2, [r3, #0]
 80118e4:	687b      	ldr	r3, [r7, #4]
 80118e6:	681b      	ldr	r3, [r3, #0]
 80118e8:	f022 0201 	bic.w	r2, r2, #1
 80118ec:	601a      	str	r2, [r3, #0]
 80118ee:	68fb      	ldr	r3, [r7, #12]
 80118f0:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 80118f4:	60fb      	str	r3, [r7, #12]
 80118f6:	687b      	ldr	r3, [r7, #4]
 80118f8:	2200      	movs	r2, #0
 80118fa:	665a      	str	r2, [r3, #100]	@ 0x64
 80118fc:	687b      	ldr	r3, [r7, #4]
 80118fe:	681b      	ldr	r3, [r3, #0]
 8011900:	68fa      	ldr	r2, [r7, #12]
 8011902:	601a      	str	r2, [r3, #0]
 8011904:	687b      	ldr	r3, [r7, #4]
 8011906:	2220      	movs	r2, #32
 8011908:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 801190c:	687b      	ldr	r3, [r7, #4]
 801190e:	2200      	movs	r2, #0
 8011910:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8011914:	2300      	movs	r3, #0
 8011916:	4618      	mov	r0, r3
 8011918:	3714      	adds	r7, #20
 801191a:	46bd      	mov	sp, r7
 801191c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011920:	4770      	bx	lr

08011922 <HAL_UARTEx_SetTxFifoThreshold>:
 8011922:	b580      	push	{r7, lr}
 8011924:	b084      	sub	sp, #16
 8011926:	af00      	add	r7, sp, #0
 8011928:	6078      	str	r0, [r7, #4]
 801192a:	6039      	str	r1, [r7, #0]
 801192c:	687b      	ldr	r3, [r7, #4]
 801192e:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 8011932:	2b01      	cmp	r3, #1
 8011934:	d101      	bne.n	801193a <HAL_UARTEx_SetTxFifoThreshold+0x18>
 8011936:	2302      	movs	r3, #2
 8011938:	e02d      	b.n	8011996 <HAL_UARTEx_SetTxFifoThreshold+0x74>
 801193a:	687b      	ldr	r3, [r7, #4]
 801193c:	2201      	movs	r2, #1
 801193e:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8011942:	687b      	ldr	r3, [r7, #4]
 8011944:	2224      	movs	r2, #36	@ 0x24
 8011946:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 801194a:	687b      	ldr	r3, [r7, #4]
 801194c:	681b      	ldr	r3, [r3, #0]
 801194e:	681b      	ldr	r3, [r3, #0]
 8011950:	60fb      	str	r3, [r7, #12]
 8011952:	687b      	ldr	r3, [r7, #4]
 8011954:	681b      	ldr	r3, [r3, #0]
 8011956:	681a      	ldr	r2, [r3, #0]
 8011958:	687b      	ldr	r3, [r7, #4]
 801195a:	681b      	ldr	r3, [r3, #0]
 801195c:	f022 0201 	bic.w	r2, r2, #1
 8011960:	601a      	str	r2, [r3, #0]
 8011962:	687b      	ldr	r3, [r7, #4]
 8011964:	681b      	ldr	r3, [r3, #0]
 8011966:	689b      	ldr	r3, [r3, #8]
 8011968:	f023 4160 	bic.w	r1, r3, #3758096384	@ 0xe0000000
 801196c:	687b      	ldr	r3, [r7, #4]
 801196e:	681b      	ldr	r3, [r3, #0]
 8011970:	683a      	ldr	r2, [r7, #0]
 8011972:	430a      	orrs	r2, r1
 8011974:	609a      	str	r2, [r3, #8]
 8011976:	6878      	ldr	r0, [r7, #4]
 8011978:	f000 f850 	bl	8011a1c <UARTEx_SetNbDataToProcess>
 801197c:	687b      	ldr	r3, [r7, #4]
 801197e:	681b      	ldr	r3, [r3, #0]
 8011980:	68fa      	ldr	r2, [r7, #12]
 8011982:	601a      	str	r2, [r3, #0]
 8011984:	687b      	ldr	r3, [r7, #4]
 8011986:	2220      	movs	r2, #32
 8011988:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 801198c:	687b      	ldr	r3, [r7, #4]
 801198e:	2200      	movs	r2, #0
 8011990:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8011994:	2300      	movs	r3, #0
 8011996:	4618      	mov	r0, r3
 8011998:	3710      	adds	r7, #16
 801199a:	46bd      	mov	sp, r7
 801199c:	bd80      	pop	{r7, pc}

0801199e <HAL_UARTEx_SetRxFifoThreshold>:
 801199e:	b580      	push	{r7, lr}
 80119a0:	b084      	sub	sp, #16
 80119a2:	af00      	add	r7, sp, #0
 80119a4:	6078      	str	r0, [r7, #4]
 80119a6:	6039      	str	r1, [r7, #0]
 80119a8:	687b      	ldr	r3, [r7, #4]
 80119aa:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 80119ae:	2b01      	cmp	r3, #1
 80119b0:	d101      	bne.n	80119b6 <HAL_UARTEx_SetRxFifoThreshold+0x18>
 80119b2:	2302      	movs	r3, #2
 80119b4:	e02d      	b.n	8011a12 <HAL_UARTEx_SetRxFifoThreshold+0x74>
 80119b6:	687b      	ldr	r3, [r7, #4]
 80119b8:	2201      	movs	r2, #1
 80119ba:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 80119be:	687b      	ldr	r3, [r7, #4]
 80119c0:	2224      	movs	r2, #36	@ 0x24
 80119c2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80119c6:	687b      	ldr	r3, [r7, #4]
 80119c8:	681b      	ldr	r3, [r3, #0]
 80119ca:	681b      	ldr	r3, [r3, #0]
 80119cc:	60fb      	str	r3, [r7, #12]
 80119ce:	687b      	ldr	r3, [r7, #4]
 80119d0:	681b      	ldr	r3, [r3, #0]
 80119d2:	681a      	ldr	r2, [r3, #0]
 80119d4:	687b      	ldr	r3, [r7, #4]
 80119d6:	681b      	ldr	r3, [r3, #0]
 80119d8:	f022 0201 	bic.w	r2, r2, #1
 80119dc:	601a      	str	r2, [r3, #0]
 80119de:	687b      	ldr	r3, [r7, #4]
 80119e0:	681b      	ldr	r3, [r3, #0]
 80119e2:	689b      	ldr	r3, [r3, #8]
 80119e4:	f023 6160 	bic.w	r1, r3, #234881024	@ 0xe000000
 80119e8:	687b      	ldr	r3, [r7, #4]
 80119ea:	681b      	ldr	r3, [r3, #0]
 80119ec:	683a      	ldr	r2, [r7, #0]
 80119ee:	430a      	orrs	r2, r1
 80119f0:	609a      	str	r2, [r3, #8]
 80119f2:	6878      	ldr	r0, [r7, #4]
 80119f4:	f000 f812 	bl	8011a1c <UARTEx_SetNbDataToProcess>
 80119f8:	687b      	ldr	r3, [r7, #4]
 80119fa:	681b      	ldr	r3, [r3, #0]
 80119fc:	68fa      	ldr	r2, [r7, #12]
 80119fe:	601a      	str	r2, [r3, #0]
 8011a00:	687b      	ldr	r3, [r7, #4]
 8011a02:	2220      	movs	r2, #32
 8011a04:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8011a08:	687b      	ldr	r3, [r7, #4]
 8011a0a:	2200      	movs	r2, #0
 8011a0c:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8011a10:	2300      	movs	r3, #0
 8011a12:	4618      	mov	r0, r3
 8011a14:	3710      	adds	r7, #16
 8011a16:	46bd      	mov	sp, r7
 8011a18:	bd80      	pop	{r7, pc}
	...

08011a1c <UARTEx_SetNbDataToProcess>:
 8011a1c:	b480      	push	{r7}
 8011a1e:	b085      	sub	sp, #20
 8011a20:	af00      	add	r7, sp, #0
 8011a22:	6078      	str	r0, [r7, #4]
 8011a24:	687b      	ldr	r3, [r7, #4]
 8011a26:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8011a28:	2b00      	cmp	r3, #0
 8011a2a:	d108      	bne.n	8011a3e <UARTEx_SetNbDataToProcess+0x22>
 8011a2c:	687b      	ldr	r3, [r7, #4]
 8011a2e:	2201      	movs	r2, #1
 8011a30:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8011a34:	687b      	ldr	r3, [r7, #4]
 8011a36:	2201      	movs	r2, #1
 8011a38:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 8011a3c:	e031      	b.n	8011aa2 <UARTEx_SetNbDataToProcess+0x86>
 8011a3e:	2310      	movs	r3, #16
 8011a40:	73fb      	strb	r3, [r7, #15]
 8011a42:	2310      	movs	r3, #16
 8011a44:	73bb      	strb	r3, [r7, #14]
 8011a46:	687b      	ldr	r3, [r7, #4]
 8011a48:	681b      	ldr	r3, [r3, #0]
 8011a4a:	689b      	ldr	r3, [r3, #8]
 8011a4c:	0e5b      	lsrs	r3, r3, #25
 8011a4e:	b2db      	uxtb	r3, r3
 8011a50:	f003 0307 	and.w	r3, r3, #7
 8011a54:	737b      	strb	r3, [r7, #13]
 8011a56:	687b      	ldr	r3, [r7, #4]
 8011a58:	681b      	ldr	r3, [r3, #0]
 8011a5a:	689b      	ldr	r3, [r3, #8]
 8011a5c:	0f5b      	lsrs	r3, r3, #29
 8011a5e:	b2db      	uxtb	r3, r3
 8011a60:	f003 0307 	and.w	r3, r3, #7
 8011a64:	733b      	strb	r3, [r7, #12]
 8011a66:	7bbb      	ldrb	r3, [r7, #14]
 8011a68:	7b3a      	ldrb	r2, [r7, #12]
 8011a6a:	4911      	ldr	r1, [pc, #68]	@ (8011ab0 <UARTEx_SetNbDataToProcess+0x94>)
 8011a6c:	5c8a      	ldrb	r2, [r1, r2]
 8011a6e:	fb02 f303 	mul.w	r3, r2, r3
 8011a72:	7b3a      	ldrb	r2, [r7, #12]
 8011a74:	490f      	ldr	r1, [pc, #60]	@ (8011ab4 <UARTEx_SetNbDataToProcess+0x98>)
 8011a76:	5c8a      	ldrb	r2, [r1, r2]
 8011a78:	fb93 f3f2 	sdiv	r3, r3, r2
 8011a7c:	b29a      	uxth	r2, r3
 8011a7e:	687b      	ldr	r3, [r7, #4]
 8011a80:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8011a84:	7bfb      	ldrb	r3, [r7, #15]
 8011a86:	7b7a      	ldrb	r2, [r7, #13]
 8011a88:	4909      	ldr	r1, [pc, #36]	@ (8011ab0 <UARTEx_SetNbDataToProcess+0x94>)
 8011a8a:	5c8a      	ldrb	r2, [r1, r2]
 8011a8c:	fb02 f303 	mul.w	r3, r2, r3
 8011a90:	7b7a      	ldrb	r2, [r7, #13]
 8011a92:	4908      	ldr	r1, [pc, #32]	@ (8011ab4 <UARTEx_SetNbDataToProcess+0x98>)
 8011a94:	5c8a      	ldrb	r2, [r1, r2]
 8011a96:	fb93 f3f2 	sdiv	r3, r3, r2
 8011a9a:	b29a      	uxth	r2, r3
 8011a9c:	687b      	ldr	r3, [r7, #4]
 8011a9e:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 8011aa2:	bf00      	nop
 8011aa4:	3714      	adds	r7, #20
 8011aa6:	46bd      	mov	sp, r7
 8011aa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011aac:	4770      	bx	lr
 8011aae:	bf00      	nop
 8011ab0:	0801b07c 	.word	0x0801b07c
 8011ab4:	0801b084 	.word	0x0801b084

08011ab8 <USB_CoreInit>:
 8011ab8:	b084      	sub	sp, #16
 8011aba:	b580      	push	{r7, lr}
 8011abc:	b084      	sub	sp, #16
 8011abe:	af00      	add	r7, sp, #0
 8011ac0:	6078      	str	r0, [r7, #4]
 8011ac2:	f107 001c 	add.w	r0, r7, #28
 8011ac6:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8011aca:	f897 3021 	ldrb.w	r3, [r7, #33]	@ 0x21
 8011ace:	2b01      	cmp	r3, #1
 8011ad0:	d121      	bne.n	8011b16 <USB_CoreInit+0x5e>
 8011ad2:	687b      	ldr	r3, [r7, #4]
 8011ad4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011ad6:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8011ada:	687b      	ldr	r3, [r7, #4]
 8011adc:	639a      	str	r2, [r3, #56]	@ 0x38
 8011ade:	687b      	ldr	r3, [r7, #4]
 8011ae0:	68da      	ldr	r2, [r3, #12]
 8011ae2:	4b2c      	ldr	r3, [pc, #176]	@ (8011b94 <USB_CoreInit+0xdc>)
 8011ae4:	4013      	ands	r3, r2
 8011ae6:	687a      	ldr	r2, [r7, #4]
 8011ae8:	60d3      	str	r3, [r2, #12]
 8011aea:	687b      	ldr	r3, [r7, #4]
 8011aec:	68db      	ldr	r3, [r3, #12]
 8011aee:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8011af2:	687b      	ldr	r3, [r7, #4]
 8011af4:	60da      	str	r2, [r3, #12]
 8011af6:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8011afa:	2b01      	cmp	r3, #1
 8011afc:	d105      	bne.n	8011b0a <USB_CoreInit+0x52>
 8011afe:	687b      	ldr	r3, [r7, #4]
 8011b00:	68db      	ldr	r3, [r3, #12]
 8011b02:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8011b06:	687b      	ldr	r3, [r7, #4]
 8011b08:	60da      	str	r2, [r3, #12]
 8011b0a:	6878      	ldr	r0, [r7, #4]
 8011b0c:	f001 faf6 	bl	80130fc <USB_CoreReset>
 8011b10:	4603      	mov	r3, r0
 8011b12:	73fb      	strb	r3, [r7, #15]
 8011b14:	e01b      	b.n	8011b4e <USB_CoreInit+0x96>
 8011b16:	687b      	ldr	r3, [r7, #4]
 8011b18:	68db      	ldr	r3, [r3, #12]
 8011b1a:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8011b1e:	687b      	ldr	r3, [r7, #4]
 8011b20:	60da      	str	r2, [r3, #12]
 8011b22:	6878      	ldr	r0, [r7, #4]
 8011b24:	f001 faea 	bl	80130fc <USB_CoreReset>
 8011b28:	4603      	mov	r3, r0
 8011b2a:	73fb      	strb	r3, [r7, #15]
 8011b2c:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 8011b30:	2b00      	cmp	r3, #0
 8011b32:	d106      	bne.n	8011b42 <USB_CoreInit+0x8a>
 8011b34:	687b      	ldr	r3, [r7, #4]
 8011b36:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011b38:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 8011b3c:	687b      	ldr	r3, [r7, #4]
 8011b3e:	639a      	str	r2, [r3, #56]	@ 0x38
 8011b40:	e005      	b.n	8011b4e <USB_CoreInit+0x96>
 8011b42:	687b      	ldr	r3, [r7, #4]
 8011b44:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011b46:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8011b4a:	687b      	ldr	r3, [r7, #4]
 8011b4c:	639a      	str	r2, [r3, #56]	@ 0x38
 8011b4e:	7fbb      	ldrb	r3, [r7, #30]
 8011b50:	2b01      	cmp	r3, #1
 8011b52:	d116      	bne.n	8011b82 <USB_CoreInit+0xca>
 8011b54:	687b      	ldr	r3, [r7, #4]
 8011b56:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8011b58:	b29a      	uxth	r2, r3
 8011b5a:	687b      	ldr	r3, [r7, #4]
 8011b5c:	65da      	str	r2, [r3, #92]	@ 0x5c
 8011b5e:	687b      	ldr	r3, [r7, #4]
 8011b60:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8011b62:	4b0d      	ldr	r3, [pc, #52]	@ (8011b98 <USB_CoreInit+0xe0>)
 8011b64:	4313      	orrs	r3, r2
 8011b66:	687a      	ldr	r2, [r7, #4]
 8011b68:	65d3      	str	r3, [r2, #92]	@ 0x5c
 8011b6a:	687b      	ldr	r3, [r7, #4]
 8011b6c:	689b      	ldr	r3, [r3, #8]
 8011b6e:	f043 0206 	orr.w	r2, r3, #6
 8011b72:	687b      	ldr	r3, [r7, #4]
 8011b74:	609a      	str	r2, [r3, #8]
 8011b76:	687b      	ldr	r3, [r7, #4]
 8011b78:	689b      	ldr	r3, [r3, #8]
 8011b7a:	f043 0220 	orr.w	r2, r3, #32
 8011b7e:	687b      	ldr	r3, [r7, #4]
 8011b80:	609a      	str	r2, [r3, #8]
 8011b82:	7bfb      	ldrb	r3, [r7, #15]
 8011b84:	4618      	mov	r0, r3
 8011b86:	3710      	adds	r7, #16
 8011b88:	46bd      	mov	sp, r7
 8011b8a:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8011b8e:	b004      	add	sp, #16
 8011b90:	4770      	bx	lr
 8011b92:	bf00      	nop
 8011b94:	ffbdffbf 	.word	0xffbdffbf
 8011b98:	03ee0000 	.word	0x03ee0000

08011b9c <USB_SetTurnaroundTime>:
 8011b9c:	b480      	push	{r7}
 8011b9e:	b087      	sub	sp, #28
 8011ba0:	af00      	add	r7, sp, #0
 8011ba2:	60f8      	str	r0, [r7, #12]
 8011ba4:	60b9      	str	r1, [r7, #8]
 8011ba6:	4613      	mov	r3, r2
 8011ba8:	71fb      	strb	r3, [r7, #7]
 8011baa:	79fb      	ldrb	r3, [r7, #7]
 8011bac:	2b02      	cmp	r3, #2
 8011bae:	d165      	bne.n	8011c7c <USB_SetTurnaroundTime+0xe0>
 8011bb0:	68bb      	ldr	r3, [r7, #8]
 8011bb2:	4a41      	ldr	r2, [pc, #260]	@ (8011cb8 <USB_SetTurnaroundTime+0x11c>)
 8011bb4:	4293      	cmp	r3, r2
 8011bb6:	d906      	bls.n	8011bc6 <USB_SetTurnaroundTime+0x2a>
 8011bb8:	68bb      	ldr	r3, [r7, #8]
 8011bba:	4a40      	ldr	r2, [pc, #256]	@ (8011cbc <USB_SetTurnaroundTime+0x120>)
 8011bbc:	4293      	cmp	r3, r2
 8011bbe:	d202      	bcs.n	8011bc6 <USB_SetTurnaroundTime+0x2a>
 8011bc0:	230f      	movs	r3, #15
 8011bc2:	617b      	str	r3, [r7, #20]
 8011bc4:	e062      	b.n	8011c8c <USB_SetTurnaroundTime+0xf0>
 8011bc6:	68bb      	ldr	r3, [r7, #8]
 8011bc8:	4a3c      	ldr	r2, [pc, #240]	@ (8011cbc <USB_SetTurnaroundTime+0x120>)
 8011bca:	4293      	cmp	r3, r2
 8011bcc:	d306      	bcc.n	8011bdc <USB_SetTurnaroundTime+0x40>
 8011bce:	68bb      	ldr	r3, [r7, #8]
 8011bd0:	4a3b      	ldr	r2, [pc, #236]	@ (8011cc0 <USB_SetTurnaroundTime+0x124>)
 8011bd2:	4293      	cmp	r3, r2
 8011bd4:	d202      	bcs.n	8011bdc <USB_SetTurnaroundTime+0x40>
 8011bd6:	230e      	movs	r3, #14
 8011bd8:	617b      	str	r3, [r7, #20]
 8011bda:	e057      	b.n	8011c8c <USB_SetTurnaroundTime+0xf0>
 8011bdc:	68bb      	ldr	r3, [r7, #8]
 8011bde:	4a38      	ldr	r2, [pc, #224]	@ (8011cc0 <USB_SetTurnaroundTime+0x124>)
 8011be0:	4293      	cmp	r3, r2
 8011be2:	d306      	bcc.n	8011bf2 <USB_SetTurnaroundTime+0x56>
 8011be4:	68bb      	ldr	r3, [r7, #8]
 8011be6:	4a37      	ldr	r2, [pc, #220]	@ (8011cc4 <USB_SetTurnaroundTime+0x128>)
 8011be8:	4293      	cmp	r3, r2
 8011bea:	d202      	bcs.n	8011bf2 <USB_SetTurnaroundTime+0x56>
 8011bec:	230d      	movs	r3, #13
 8011bee:	617b      	str	r3, [r7, #20]
 8011bf0:	e04c      	b.n	8011c8c <USB_SetTurnaroundTime+0xf0>
 8011bf2:	68bb      	ldr	r3, [r7, #8]
 8011bf4:	4a33      	ldr	r2, [pc, #204]	@ (8011cc4 <USB_SetTurnaroundTime+0x128>)
 8011bf6:	4293      	cmp	r3, r2
 8011bf8:	d306      	bcc.n	8011c08 <USB_SetTurnaroundTime+0x6c>
 8011bfa:	68bb      	ldr	r3, [r7, #8]
 8011bfc:	4a32      	ldr	r2, [pc, #200]	@ (8011cc8 <USB_SetTurnaroundTime+0x12c>)
 8011bfe:	4293      	cmp	r3, r2
 8011c00:	d802      	bhi.n	8011c08 <USB_SetTurnaroundTime+0x6c>
 8011c02:	230c      	movs	r3, #12
 8011c04:	617b      	str	r3, [r7, #20]
 8011c06:	e041      	b.n	8011c8c <USB_SetTurnaroundTime+0xf0>
 8011c08:	68bb      	ldr	r3, [r7, #8]
 8011c0a:	4a2f      	ldr	r2, [pc, #188]	@ (8011cc8 <USB_SetTurnaroundTime+0x12c>)
 8011c0c:	4293      	cmp	r3, r2
 8011c0e:	d906      	bls.n	8011c1e <USB_SetTurnaroundTime+0x82>
 8011c10:	68bb      	ldr	r3, [r7, #8]
 8011c12:	4a2e      	ldr	r2, [pc, #184]	@ (8011ccc <USB_SetTurnaroundTime+0x130>)
 8011c14:	4293      	cmp	r3, r2
 8011c16:	d802      	bhi.n	8011c1e <USB_SetTurnaroundTime+0x82>
 8011c18:	230b      	movs	r3, #11
 8011c1a:	617b      	str	r3, [r7, #20]
 8011c1c:	e036      	b.n	8011c8c <USB_SetTurnaroundTime+0xf0>
 8011c1e:	68bb      	ldr	r3, [r7, #8]
 8011c20:	4a2a      	ldr	r2, [pc, #168]	@ (8011ccc <USB_SetTurnaroundTime+0x130>)
 8011c22:	4293      	cmp	r3, r2
 8011c24:	d906      	bls.n	8011c34 <USB_SetTurnaroundTime+0x98>
 8011c26:	68bb      	ldr	r3, [r7, #8]
 8011c28:	4a29      	ldr	r2, [pc, #164]	@ (8011cd0 <USB_SetTurnaroundTime+0x134>)
 8011c2a:	4293      	cmp	r3, r2
 8011c2c:	d802      	bhi.n	8011c34 <USB_SetTurnaroundTime+0x98>
 8011c2e:	230a      	movs	r3, #10
 8011c30:	617b      	str	r3, [r7, #20]
 8011c32:	e02b      	b.n	8011c8c <USB_SetTurnaroundTime+0xf0>
 8011c34:	68bb      	ldr	r3, [r7, #8]
 8011c36:	4a26      	ldr	r2, [pc, #152]	@ (8011cd0 <USB_SetTurnaroundTime+0x134>)
 8011c38:	4293      	cmp	r3, r2
 8011c3a:	d906      	bls.n	8011c4a <USB_SetTurnaroundTime+0xae>
 8011c3c:	68bb      	ldr	r3, [r7, #8]
 8011c3e:	4a25      	ldr	r2, [pc, #148]	@ (8011cd4 <USB_SetTurnaroundTime+0x138>)
 8011c40:	4293      	cmp	r3, r2
 8011c42:	d202      	bcs.n	8011c4a <USB_SetTurnaroundTime+0xae>
 8011c44:	2309      	movs	r3, #9
 8011c46:	617b      	str	r3, [r7, #20]
 8011c48:	e020      	b.n	8011c8c <USB_SetTurnaroundTime+0xf0>
 8011c4a:	68bb      	ldr	r3, [r7, #8]
 8011c4c:	4a21      	ldr	r2, [pc, #132]	@ (8011cd4 <USB_SetTurnaroundTime+0x138>)
 8011c4e:	4293      	cmp	r3, r2
 8011c50:	d306      	bcc.n	8011c60 <USB_SetTurnaroundTime+0xc4>
 8011c52:	68bb      	ldr	r3, [r7, #8]
 8011c54:	4a20      	ldr	r2, [pc, #128]	@ (8011cd8 <USB_SetTurnaroundTime+0x13c>)
 8011c56:	4293      	cmp	r3, r2
 8011c58:	d802      	bhi.n	8011c60 <USB_SetTurnaroundTime+0xc4>
 8011c5a:	2308      	movs	r3, #8
 8011c5c:	617b      	str	r3, [r7, #20]
 8011c5e:	e015      	b.n	8011c8c <USB_SetTurnaroundTime+0xf0>
 8011c60:	68bb      	ldr	r3, [r7, #8]
 8011c62:	4a1d      	ldr	r2, [pc, #116]	@ (8011cd8 <USB_SetTurnaroundTime+0x13c>)
 8011c64:	4293      	cmp	r3, r2
 8011c66:	d906      	bls.n	8011c76 <USB_SetTurnaroundTime+0xda>
 8011c68:	68bb      	ldr	r3, [r7, #8]
 8011c6a:	4a1c      	ldr	r2, [pc, #112]	@ (8011cdc <USB_SetTurnaroundTime+0x140>)
 8011c6c:	4293      	cmp	r3, r2
 8011c6e:	d202      	bcs.n	8011c76 <USB_SetTurnaroundTime+0xda>
 8011c70:	2307      	movs	r3, #7
 8011c72:	617b      	str	r3, [r7, #20]
 8011c74:	e00a      	b.n	8011c8c <USB_SetTurnaroundTime+0xf0>
 8011c76:	2306      	movs	r3, #6
 8011c78:	617b      	str	r3, [r7, #20]
 8011c7a:	e007      	b.n	8011c8c <USB_SetTurnaroundTime+0xf0>
 8011c7c:	79fb      	ldrb	r3, [r7, #7]
 8011c7e:	2b00      	cmp	r3, #0
 8011c80:	d102      	bne.n	8011c88 <USB_SetTurnaroundTime+0xec>
 8011c82:	2309      	movs	r3, #9
 8011c84:	617b      	str	r3, [r7, #20]
 8011c86:	e001      	b.n	8011c8c <USB_SetTurnaroundTime+0xf0>
 8011c88:	2309      	movs	r3, #9
 8011c8a:	617b      	str	r3, [r7, #20]
 8011c8c:	68fb      	ldr	r3, [r7, #12]
 8011c8e:	68db      	ldr	r3, [r3, #12]
 8011c90:	f423 5270 	bic.w	r2, r3, #15360	@ 0x3c00
 8011c94:	68fb      	ldr	r3, [r7, #12]
 8011c96:	60da      	str	r2, [r3, #12]
 8011c98:	68fb      	ldr	r3, [r7, #12]
 8011c9a:	68da      	ldr	r2, [r3, #12]
 8011c9c:	697b      	ldr	r3, [r7, #20]
 8011c9e:	029b      	lsls	r3, r3, #10
 8011ca0:	f403 5370 	and.w	r3, r3, #15360	@ 0x3c00
 8011ca4:	431a      	orrs	r2, r3
 8011ca6:	68fb      	ldr	r3, [r7, #12]
 8011ca8:	60da      	str	r2, [r3, #12]
 8011caa:	2300      	movs	r3, #0
 8011cac:	4618      	mov	r0, r3
 8011cae:	371c      	adds	r7, #28
 8011cb0:	46bd      	mov	sp, r7
 8011cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011cb6:	4770      	bx	lr
 8011cb8:	00d8acbf 	.word	0x00d8acbf
 8011cbc:	00e4e1c0 	.word	0x00e4e1c0
 8011cc0:	00f42400 	.word	0x00f42400
 8011cc4:	01067380 	.word	0x01067380
 8011cc8:	011a499f 	.word	0x011a499f
 8011ccc:	01312cff 	.word	0x01312cff
 8011cd0:	014ca43f 	.word	0x014ca43f
 8011cd4:	016e3600 	.word	0x016e3600
 8011cd8:	01a6ab1f 	.word	0x01a6ab1f
 8011cdc:	01e84800 	.word	0x01e84800

08011ce0 <USB_EnableGlobalInt>:
 8011ce0:	b480      	push	{r7}
 8011ce2:	b083      	sub	sp, #12
 8011ce4:	af00      	add	r7, sp, #0
 8011ce6:	6078      	str	r0, [r7, #4]
 8011ce8:	687b      	ldr	r3, [r7, #4]
 8011cea:	689b      	ldr	r3, [r3, #8]
 8011cec:	f043 0201 	orr.w	r2, r3, #1
 8011cf0:	687b      	ldr	r3, [r7, #4]
 8011cf2:	609a      	str	r2, [r3, #8]
 8011cf4:	2300      	movs	r3, #0
 8011cf6:	4618      	mov	r0, r3
 8011cf8:	370c      	adds	r7, #12
 8011cfa:	46bd      	mov	sp, r7
 8011cfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011d00:	4770      	bx	lr

08011d02 <USB_DisableGlobalInt>:
 8011d02:	b480      	push	{r7}
 8011d04:	b083      	sub	sp, #12
 8011d06:	af00      	add	r7, sp, #0
 8011d08:	6078      	str	r0, [r7, #4]
 8011d0a:	687b      	ldr	r3, [r7, #4]
 8011d0c:	689b      	ldr	r3, [r3, #8]
 8011d0e:	f023 0201 	bic.w	r2, r3, #1
 8011d12:	687b      	ldr	r3, [r7, #4]
 8011d14:	609a      	str	r2, [r3, #8]
 8011d16:	2300      	movs	r3, #0
 8011d18:	4618      	mov	r0, r3
 8011d1a:	370c      	adds	r7, #12
 8011d1c:	46bd      	mov	sp, r7
 8011d1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011d22:	4770      	bx	lr

08011d24 <USB_SetCurrentMode>:
 8011d24:	b580      	push	{r7, lr}
 8011d26:	b084      	sub	sp, #16
 8011d28:	af00      	add	r7, sp, #0
 8011d2a:	6078      	str	r0, [r7, #4]
 8011d2c:	460b      	mov	r3, r1
 8011d2e:	70fb      	strb	r3, [r7, #3]
 8011d30:	2300      	movs	r3, #0
 8011d32:	60fb      	str	r3, [r7, #12]
 8011d34:	687b      	ldr	r3, [r7, #4]
 8011d36:	68db      	ldr	r3, [r3, #12]
 8011d38:	f023 42c0 	bic.w	r2, r3, #1610612736	@ 0x60000000
 8011d3c:	687b      	ldr	r3, [r7, #4]
 8011d3e:	60da      	str	r2, [r3, #12]
 8011d40:	78fb      	ldrb	r3, [r7, #3]
 8011d42:	2b01      	cmp	r3, #1
 8011d44:	d115      	bne.n	8011d72 <USB_SetCurrentMode+0x4e>
 8011d46:	687b      	ldr	r3, [r7, #4]
 8011d48:	68db      	ldr	r3, [r3, #12]
 8011d4a:	f043 5200 	orr.w	r2, r3, #536870912	@ 0x20000000
 8011d4e:	687b      	ldr	r3, [r7, #4]
 8011d50:	60da      	str	r2, [r3, #12]
 8011d52:	200a      	movs	r0, #10
 8011d54:	f7f3 fad8 	bl	8005308 <HAL_Delay>
 8011d58:	68fb      	ldr	r3, [r7, #12]
 8011d5a:	330a      	adds	r3, #10
 8011d5c:	60fb      	str	r3, [r7, #12]
 8011d5e:	6878      	ldr	r0, [r7, #4]
 8011d60:	f001 f93b 	bl	8012fda <USB_GetMode>
 8011d64:	4603      	mov	r3, r0
 8011d66:	2b01      	cmp	r3, #1
 8011d68:	d01e      	beq.n	8011da8 <USB_SetCurrentMode+0x84>
 8011d6a:	68fb      	ldr	r3, [r7, #12]
 8011d6c:	2bc7      	cmp	r3, #199	@ 0xc7
 8011d6e:	d9f0      	bls.n	8011d52 <USB_SetCurrentMode+0x2e>
 8011d70:	e01a      	b.n	8011da8 <USB_SetCurrentMode+0x84>
 8011d72:	78fb      	ldrb	r3, [r7, #3]
 8011d74:	2b00      	cmp	r3, #0
 8011d76:	d115      	bne.n	8011da4 <USB_SetCurrentMode+0x80>
 8011d78:	687b      	ldr	r3, [r7, #4]
 8011d7a:	68db      	ldr	r3, [r3, #12]
 8011d7c:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 8011d80:	687b      	ldr	r3, [r7, #4]
 8011d82:	60da      	str	r2, [r3, #12]
 8011d84:	200a      	movs	r0, #10
 8011d86:	f7f3 fabf 	bl	8005308 <HAL_Delay>
 8011d8a:	68fb      	ldr	r3, [r7, #12]
 8011d8c:	330a      	adds	r3, #10
 8011d8e:	60fb      	str	r3, [r7, #12]
 8011d90:	6878      	ldr	r0, [r7, #4]
 8011d92:	f001 f922 	bl	8012fda <USB_GetMode>
 8011d96:	4603      	mov	r3, r0
 8011d98:	2b00      	cmp	r3, #0
 8011d9a:	d005      	beq.n	8011da8 <USB_SetCurrentMode+0x84>
 8011d9c:	68fb      	ldr	r3, [r7, #12]
 8011d9e:	2bc7      	cmp	r3, #199	@ 0xc7
 8011da0:	d9f0      	bls.n	8011d84 <USB_SetCurrentMode+0x60>
 8011da2:	e001      	b.n	8011da8 <USB_SetCurrentMode+0x84>
 8011da4:	2301      	movs	r3, #1
 8011da6:	e005      	b.n	8011db4 <USB_SetCurrentMode+0x90>
 8011da8:	68fb      	ldr	r3, [r7, #12]
 8011daa:	2bc8      	cmp	r3, #200	@ 0xc8
 8011dac:	d101      	bne.n	8011db2 <USB_SetCurrentMode+0x8e>
 8011dae:	2301      	movs	r3, #1
 8011db0:	e000      	b.n	8011db4 <USB_SetCurrentMode+0x90>
 8011db2:	2300      	movs	r3, #0
 8011db4:	4618      	mov	r0, r3
 8011db6:	3710      	adds	r7, #16
 8011db8:	46bd      	mov	sp, r7
 8011dba:	bd80      	pop	{r7, pc}

08011dbc <USB_DevInit>:
 8011dbc:	b084      	sub	sp, #16
 8011dbe:	b580      	push	{r7, lr}
 8011dc0:	b086      	sub	sp, #24
 8011dc2:	af00      	add	r7, sp, #0
 8011dc4:	6078      	str	r0, [r7, #4]
 8011dc6:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 8011dca:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8011dce:	2300      	movs	r3, #0
 8011dd0:	75fb      	strb	r3, [r7, #23]
 8011dd2:	687b      	ldr	r3, [r7, #4]
 8011dd4:	60fb      	str	r3, [r7, #12]
 8011dd6:	2300      	movs	r3, #0
 8011dd8:	613b      	str	r3, [r7, #16]
 8011dda:	e009      	b.n	8011df0 <USB_DevInit+0x34>
 8011ddc:	687a      	ldr	r2, [r7, #4]
 8011dde:	693b      	ldr	r3, [r7, #16]
 8011de0:	3340      	adds	r3, #64	@ 0x40
 8011de2:	009b      	lsls	r3, r3, #2
 8011de4:	4413      	add	r3, r2
 8011de6:	2200      	movs	r2, #0
 8011de8:	605a      	str	r2, [r3, #4]
 8011dea:	693b      	ldr	r3, [r7, #16]
 8011dec:	3301      	adds	r3, #1
 8011dee:	613b      	str	r3, [r7, #16]
 8011df0:	693b      	ldr	r3, [r7, #16]
 8011df2:	2b0e      	cmp	r3, #14
 8011df4:	d9f2      	bls.n	8011ddc <USB_DevInit+0x20>
 8011df6:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 8011dfa:	2b00      	cmp	r3, #0
 8011dfc:	d11c      	bne.n	8011e38 <USB_DevInit+0x7c>
 8011dfe:	68fb      	ldr	r3, [r7, #12]
 8011e00:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011e04:	685b      	ldr	r3, [r3, #4]
 8011e06:	68fa      	ldr	r2, [r7, #12]
 8011e08:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8011e0c:	f043 0302 	orr.w	r3, r3, #2
 8011e10:	6053      	str	r3, [r2, #4]
 8011e12:	687b      	ldr	r3, [r7, #4]
 8011e14:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011e16:	f423 1200 	bic.w	r2, r3, #2097152	@ 0x200000
 8011e1a:	687b      	ldr	r3, [r7, #4]
 8011e1c:	639a      	str	r2, [r3, #56]	@ 0x38
 8011e1e:	687b      	ldr	r3, [r7, #4]
 8011e20:	681b      	ldr	r3, [r3, #0]
 8011e22:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8011e26:	687b      	ldr	r3, [r7, #4]
 8011e28:	601a      	str	r2, [r3, #0]
 8011e2a:	687b      	ldr	r3, [r7, #4]
 8011e2c:	681b      	ldr	r3, [r3, #0]
 8011e2e:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 8011e32:	687b      	ldr	r3, [r7, #4]
 8011e34:	601a      	str	r2, [r3, #0]
 8011e36:	e005      	b.n	8011e44 <USB_DevInit+0x88>
 8011e38:	687b      	ldr	r3, [r7, #4]
 8011e3a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011e3c:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8011e40:	687b      	ldr	r3, [r7, #4]
 8011e42:	639a      	str	r2, [r3, #56]	@ 0x38
 8011e44:	68fb      	ldr	r3, [r7, #12]
 8011e46:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8011e4a:	461a      	mov	r2, r3
 8011e4c:	2300      	movs	r3, #0
 8011e4e:	6013      	str	r3, [r2, #0]
 8011e50:	f897 3029 	ldrb.w	r3, [r7, #41]	@ 0x29
 8011e54:	2b01      	cmp	r3, #1
 8011e56:	d10d      	bne.n	8011e74 <USB_DevInit+0xb8>
 8011e58:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8011e5c:	2b00      	cmp	r3, #0
 8011e5e:	d104      	bne.n	8011e6a <USB_DevInit+0xae>
 8011e60:	2100      	movs	r1, #0
 8011e62:	6878      	ldr	r0, [r7, #4]
 8011e64:	f000 f968 	bl	8012138 <USB_SetDevSpeed>
 8011e68:	e008      	b.n	8011e7c <USB_DevInit+0xc0>
 8011e6a:	2101      	movs	r1, #1
 8011e6c:	6878      	ldr	r0, [r7, #4]
 8011e6e:	f000 f963 	bl	8012138 <USB_SetDevSpeed>
 8011e72:	e003      	b.n	8011e7c <USB_DevInit+0xc0>
 8011e74:	2103      	movs	r1, #3
 8011e76:	6878      	ldr	r0, [r7, #4]
 8011e78:	f000 f95e 	bl	8012138 <USB_SetDevSpeed>
 8011e7c:	2110      	movs	r1, #16
 8011e7e:	6878      	ldr	r0, [r7, #4]
 8011e80:	f000 f8fa 	bl	8012078 <USB_FlushTxFifo>
 8011e84:	4603      	mov	r3, r0
 8011e86:	2b00      	cmp	r3, #0
 8011e88:	d001      	beq.n	8011e8e <USB_DevInit+0xd2>
 8011e8a:	2301      	movs	r3, #1
 8011e8c:	75fb      	strb	r3, [r7, #23]
 8011e8e:	6878      	ldr	r0, [r7, #4]
 8011e90:	f000 f924 	bl	80120dc <USB_FlushRxFifo>
 8011e94:	4603      	mov	r3, r0
 8011e96:	2b00      	cmp	r3, #0
 8011e98:	d001      	beq.n	8011e9e <USB_DevInit+0xe2>
 8011e9a:	2301      	movs	r3, #1
 8011e9c:	75fb      	strb	r3, [r7, #23]
 8011e9e:	68fb      	ldr	r3, [r7, #12]
 8011ea0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011ea4:	461a      	mov	r2, r3
 8011ea6:	2300      	movs	r3, #0
 8011ea8:	6113      	str	r3, [r2, #16]
 8011eaa:	68fb      	ldr	r3, [r7, #12]
 8011eac:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011eb0:	461a      	mov	r2, r3
 8011eb2:	2300      	movs	r3, #0
 8011eb4:	6153      	str	r3, [r2, #20]
 8011eb6:	68fb      	ldr	r3, [r7, #12]
 8011eb8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011ebc:	461a      	mov	r2, r3
 8011ebe:	2300      	movs	r3, #0
 8011ec0:	61d3      	str	r3, [r2, #28]
 8011ec2:	2300      	movs	r3, #0
 8011ec4:	613b      	str	r3, [r7, #16]
 8011ec6:	e043      	b.n	8011f50 <USB_DevInit+0x194>
 8011ec8:	693b      	ldr	r3, [r7, #16]
 8011eca:	015a      	lsls	r2, r3, #5
 8011ecc:	68fb      	ldr	r3, [r7, #12]
 8011ece:	4413      	add	r3, r2
 8011ed0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011ed4:	681b      	ldr	r3, [r3, #0]
 8011ed6:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8011eda:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8011ede:	d118      	bne.n	8011f12 <USB_DevInit+0x156>
 8011ee0:	693b      	ldr	r3, [r7, #16]
 8011ee2:	2b00      	cmp	r3, #0
 8011ee4:	d10a      	bne.n	8011efc <USB_DevInit+0x140>
 8011ee6:	693b      	ldr	r3, [r7, #16]
 8011ee8:	015a      	lsls	r2, r3, #5
 8011eea:	68fb      	ldr	r3, [r7, #12]
 8011eec:	4413      	add	r3, r2
 8011eee:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011ef2:	461a      	mov	r2, r3
 8011ef4:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8011ef8:	6013      	str	r3, [r2, #0]
 8011efa:	e013      	b.n	8011f24 <USB_DevInit+0x168>
 8011efc:	693b      	ldr	r3, [r7, #16]
 8011efe:	015a      	lsls	r2, r3, #5
 8011f00:	68fb      	ldr	r3, [r7, #12]
 8011f02:	4413      	add	r3, r2
 8011f04:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011f08:	461a      	mov	r2, r3
 8011f0a:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8011f0e:	6013      	str	r3, [r2, #0]
 8011f10:	e008      	b.n	8011f24 <USB_DevInit+0x168>
 8011f12:	693b      	ldr	r3, [r7, #16]
 8011f14:	015a      	lsls	r2, r3, #5
 8011f16:	68fb      	ldr	r3, [r7, #12]
 8011f18:	4413      	add	r3, r2
 8011f1a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011f1e:	461a      	mov	r2, r3
 8011f20:	2300      	movs	r3, #0
 8011f22:	6013      	str	r3, [r2, #0]
 8011f24:	693b      	ldr	r3, [r7, #16]
 8011f26:	015a      	lsls	r2, r3, #5
 8011f28:	68fb      	ldr	r3, [r7, #12]
 8011f2a:	4413      	add	r3, r2
 8011f2c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011f30:	461a      	mov	r2, r3
 8011f32:	2300      	movs	r3, #0
 8011f34:	6113      	str	r3, [r2, #16]
 8011f36:	693b      	ldr	r3, [r7, #16]
 8011f38:	015a      	lsls	r2, r3, #5
 8011f3a:	68fb      	ldr	r3, [r7, #12]
 8011f3c:	4413      	add	r3, r2
 8011f3e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011f42:	461a      	mov	r2, r3
 8011f44:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8011f48:	6093      	str	r3, [r2, #8]
 8011f4a:	693b      	ldr	r3, [r7, #16]
 8011f4c:	3301      	adds	r3, #1
 8011f4e:	613b      	str	r3, [r7, #16]
 8011f50:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8011f54:	461a      	mov	r2, r3
 8011f56:	693b      	ldr	r3, [r7, #16]
 8011f58:	4293      	cmp	r3, r2
 8011f5a:	d3b5      	bcc.n	8011ec8 <USB_DevInit+0x10c>
 8011f5c:	2300      	movs	r3, #0
 8011f5e:	613b      	str	r3, [r7, #16]
 8011f60:	e043      	b.n	8011fea <USB_DevInit+0x22e>
 8011f62:	693b      	ldr	r3, [r7, #16]
 8011f64:	015a      	lsls	r2, r3, #5
 8011f66:	68fb      	ldr	r3, [r7, #12]
 8011f68:	4413      	add	r3, r2
 8011f6a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011f6e:	681b      	ldr	r3, [r3, #0]
 8011f70:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8011f74:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8011f78:	d118      	bne.n	8011fac <USB_DevInit+0x1f0>
 8011f7a:	693b      	ldr	r3, [r7, #16]
 8011f7c:	2b00      	cmp	r3, #0
 8011f7e:	d10a      	bne.n	8011f96 <USB_DevInit+0x1da>
 8011f80:	693b      	ldr	r3, [r7, #16]
 8011f82:	015a      	lsls	r2, r3, #5
 8011f84:	68fb      	ldr	r3, [r7, #12]
 8011f86:	4413      	add	r3, r2
 8011f88:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011f8c:	461a      	mov	r2, r3
 8011f8e:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8011f92:	6013      	str	r3, [r2, #0]
 8011f94:	e013      	b.n	8011fbe <USB_DevInit+0x202>
 8011f96:	693b      	ldr	r3, [r7, #16]
 8011f98:	015a      	lsls	r2, r3, #5
 8011f9a:	68fb      	ldr	r3, [r7, #12]
 8011f9c:	4413      	add	r3, r2
 8011f9e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011fa2:	461a      	mov	r2, r3
 8011fa4:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8011fa8:	6013      	str	r3, [r2, #0]
 8011faa:	e008      	b.n	8011fbe <USB_DevInit+0x202>
 8011fac:	693b      	ldr	r3, [r7, #16]
 8011fae:	015a      	lsls	r2, r3, #5
 8011fb0:	68fb      	ldr	r3, [r7, #12]
 8011fb2:	4413      	add	r3, r2
 8011fb4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011fb8:	461a      	mov	r2, r3
 8011fba:	2300      	movs	r3, #0
 8011fbc:	6013      	str	r3, [r2, #0]
 8011fbe:	693b      	ldr	r3, [r7, #16]
 8011fc0:	015a      	lsls	r2, r3, #5
 8011fc2:	68fb      	ldr	r3, [r7, #12]
 8011fc4:	4413      	add	r3, r2
 8011fc6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011fca:	461a      	mov	r2, r3
 8011fcc:	2300      	movs	r3, #0
 8011fce:	6113      	str	r3, [r2, #16]
 8011fd0:	693b      	ldr	r3, [r7, #16]
 8011fd2:	015a      	lsls	r2, r3, #5
 8011fd4:	68fb      	ldr	r3, [r7, #12]
 8011fd6:	4413      	add	r3, r2
 8011fd8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011fdc:	461a      	mov	r2, r3
 8011fde:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8011fe2:	6093      	str	r3, [r2, #8]
 8011fe4:	693b      	ldr	r3, [r7, #16]
 8011fe6:	3301      	adds	r3, #1
 8011fe8:	613b      	str	r3, [r7, #16]
 8011fea:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8011fee:	461a      	mov	r2, r3
 8011ff0:	693b      	ldr	r3, [r7, #16]
 8011ff2:	4293      	cmp	r3, r2
 8011ff4:	d3b5      	bcc.n	8011f62 <USB_DevInit+0x1a6>
 8011ff6:	68fb      	ldr	r3, [r7, #12]
 8011ff8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011ffc:	691b      	ldr	r3, [r3, #16]
 8011ffe:	68fa      	ldr	r2, [r7, #12]
 8012000:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8012004:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8012008:	6113      	str	r3, [r2, #16]
 801200a:	687b      	ldr	r3, [r7, #4]
 801200c:	2200      	movs	r2, #0
 801200e:	619a      	str	r2, [r3, #24]
 8012010:	687b      	ldr	r3, [r7, #4]
 8012012:	f06f 4280 	mvn.w	r2, #1073741824	@ 0x40000000
 8012016:	615a      	str	r2, [r3, #20]
 8012018:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 801201c:	2b00      	cmp	r3, #0
 801201e:	d105      	bne.n	801202c <USB_DevInit+0x270>
 8012020:	687b      	ldr	r3, [r7, #4]
 8012022:	699b      	ldr	r3, [r3, #24]
 8012024:	f043 0210 	orr.w	r2, r3, #16
 8012028:	687b      	ldr	r3, [r7, #4]
 801202a:	619a      	str	r2, [r3, #24]
 801202c:	687b      	ldr	r3, [r7, #4]
 801202e:	699a      	ldr	r2, [r3, #24]
 8012030:	4b0f      	ldr	r3, [pc, #60]	@ (8012070 <USB_DevInit+0x2b4>)
 8012032:	4313      	orrs	r3, r2
 8012034:	687a      	ldr	r2, [r7, #4]
 8012036:	6193      	str	r3, [r2, #24]
 8012038:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 801203c:	2b00      	cmp	r3, #0
 801203e:	d005      	beq.n	801204c <USB_DevInit+0x290>
 8012040:	687b      	ldr	r3, [r7, #4]
 8012042:	699b      	ldr	r3, [r3, #24]
 8012044:	f043 0208 	orr.w	r2, r3, #8
 8012048:	687b      	ldr	r3, [r7, #4]
 801204a:	619a      	str	r2, [r3, #24]
 801204c:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 8012050:	2b01      	cmp	r3, #1
 8012052:	d105      	bne.n	8012060 <USB_DevInit+0x2a4>
 8012054:	687b      	ldr	r3, [r7, #4]
 8012056:	699a      	ldr	r2, [r3, #24]
 8012058:	4b06      	ldr	r3, [pc, #24]	@ (8012074 <USB_DevInit+0x2b8>)
 801205a:	4313      	orrs	r3, r2
 801205c:	687a      	ldr	r2, [r7, #4]
 801205e:	6193      	str	r3, [r2, #24]
 8012060:	7dfb      	ldrb	r3, [r7, #23]
 8012062:	4618      	mov	r0, r3
 8012064:	3718      	adds	r7, #24
 8012066:	46bd      	mov	sp, r7
 8012068:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 801206c:	b004      	add	sp, #16
 801206e:	4770      	bx	lr
 8012070:	803c3800 	.word	0x803c3800
 8012074:	40000004 	.word	0x40000004

08012078 <USB_FlushTxFifo>:
 8012078:	b480      	push	{r7}
 801207a:	b085      	sub	sp, #20
 801207c:	af00      	add	r7, sp, #0
 801207e:	6078      	str	r0, [r7, #4]
 8012080:	6039      	str	r1, [r7, #0]
 8012082:	2300      	movs	r3, #0
 8012084:	60fb      	str	r3, [r7, #12]
 8012086:	68fb      	ldr	r3, [r7, #12]
 8012088:	3301      	adds	r3, #1
 801208a:	60fb      	str	r3, [r7, #12]
 801208c:	68fb      	ldr	r3, [r7, #12]
 801208e:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8012092:	d901      	bls.n	8012098 <USB_FlushTxFifo+0x20>
 8012094:	2303      	movs	r3, #3
 8012096:	e01b      	b.n	80120d0 <USB_FlushTxFifo+0x58>
 8012098:	687b      	ldr	r3, [r7, #4]
 801209a:	691b      	ldr	r3, [r3, #16]
 801209c:	2b00      	cmp	r3, #0
 801209e:	daf2      	bge.n	8012086 <USB_FlushTxFifo+0xe>
 80120a0:	2300      	movs	r3, #0
 80120a2:	60fb      	str	r3, [r7, #12]
 80120a4:	683b      	ldr	r3, [r7, #0]
 80120a6:	019b      	lsls	r3, r3, #6
 80120a8:	f043 0220 	orr.w	r2, r3, #32
 80120ac:	687b      	ldr	r3, [r7, #4]
 80120ae:	611a      	str	r2, [r3, #16]
 80120b0:	68fb      	ldr	r3, [r7, #12]
 80120b2:	3301      	adds	r3, #1
 80120b4:	60fb      	str	r3, [r7, #12]
 80120b6:	68fb      	ldr	r3, [r7, #12]
 80120b8:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80120bc:	d901      	bls.n	80120c2 <USB_FlushTxFifo+0x4a>
 80120be:	2303      	movs	r3, #3
 80120c0:	e006      	b.n	80120d0 <USB_FlushTxFifo+0x58>
 80120c2:	687b      	ldr	r3, [r7, #4]
 80120c4:	691b      	ldr	r3, [r3, #16]
 80120c6:	f003 0320 	and.w	r3, r3, #32
 80120ca:	2b20      	cmp	r3, #32
 80120cc:	d0f0      	beq.n	80120b0 <USB_FlushTxFifo+0x38>
 80120ce:	2300      	movs	r3, #0
 80120d0:	4618      	mov	r0, r3
 80120d2:	3714      	adds	r7, #20
 80120d4:	46bd      	mov	sp, r7
 80120d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80120da:	4770      	bx	lr

080120dc <USB_FlushRxFifo>:
 80120dc:	b480      	push	{r7}
 80120de:	b085      	sub	sp, #20
 80120e0:	af00      	add	r7, sp, #0
 80120e2:	6078      	str	r0, [r7, #4]
 80120e4:	2300      	movs	r3, #0
 80120e6:	60fb      	str	r3, [r7, #12]
 80120e8:	68fb      	ldr	r3, [r7, #12]
 80120ea:	3301      	adds	r3, #1
 80120ec:	60fb      	str	r3, [r7, #12]
 80120ee:	68fb      	ldr	r3, [r7, #12]
 80120f0:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80120f4:	d901      	bls.n	80120fa <USB_FlushRxFifo+0x1e>
 80120f6:	2303      	movs	r3, #3
 80120f8:	e018      	b.n	801212c <USB_FlushRxFifo+0x50>
 80120fa:	687b      	ldr	r3, [r7, #4]
 80120fc:	691b      	ldr	r3, [r3, #16]
 80120fe:	2b00      	cmp	r3, #0
 8012100:	daf2      	bge.n	80120e8 <USB_FlushRxFifo+0xc>
 8012102:	2300      	movs	r3, #0
 8012104:	60fb      	str	r3, [r7, #12]
 8012106:	687b      	ldr	r3, [r7, #4]
 8012108:	2210      	movs	r2, #16
 801210a:	611a      	str	r2, [r3, #16]
 801210c:	68fb      	ldr	r3, [r7, #12]
 801210e:	3301      	adds	r3, #1
 8012110:	60fb      	str	r3, [r7, #12]
 8012112:	68fb      	ldr	r3, [r7, #12]
 8012114:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8012118:	d901      	bls.n	801211e <USB_FlushRxFifo+0x42>
 801211a:	2303      	movs	r3, #3
 801211c:	e006      	b.n	801212c <USB_FlushRxFifo+0x50>
 801211e:	687b      	ldr	r3, [r7, #4]
 8012120:	691b      	ldr	r3, [r3, #16]
 8012122:	f003 0310 	and.w	r3, r3, #16
 8012126:	2b10      	cmp	r3, #16
 8012128:	d0f0      	beq.n	801210c <USB_FlushRxFifo+0x30>
 801212a:	2300      	movs	r3, #0
 801212c:	4618      	mov	r0, r3
 801212e:	3714      	adds	r7, #20
 8012130:	46bd      	mov	sp, r7
 8012132:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012136:	4770      	bx	lr

08012138 <USB_SetDevSpeed>:
 8012138:	b480      	push	{r7}
 801213a:	b085      	sub	sp, #20
 801213c:	af00      	add	r7, sp, #0
 801213e:	6078      	str	r0, [r7, #4]
 8012140:	460b      	mov	r3, r1
 8012142:	70fb      	strb	r3, [r7, #3]
 8012144:	687b      	ldr	r3, [r7, #4]
 8012146:	60fb      	str	r3, [r7, #12]
 8012148:	68fb      	ldr	r3, [r7, #12]
 801214a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801214e:	681a      	ldr	r2, [r3, #0]
 8012150:	78fb      	ldrb	r3, [r7, #3]
 8012152:	68f9      	ldr	r1, [r7, #12]
 8012154:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8012158:	4313      	orrs	r3, r2
 801215a:	600b      	str	r3, [r1, #0]
 801215c:	2300      	movs	r3, #0
 801215e:	4618      	mov	r0, r3
 8012160:	3714      	adds	r7, #20
 8012162:	46bd      	mov	sp, r7
 8012164:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012168:	4770      	bx	lr

0801216a <USB_GetDevSpeed>:
 801216a:	b480      	push	{r7}
 801216c:	b087      	sub	sp, #28
 801216e:	af00      	add	r7, sp, #0
 8012170:	6078      	str	r0, [r7, #4]
 8012172:	687b      	ldr	r3, [r7, #4]
 8012174:	613b      	str	r3, [r7, #16]
 8012176:	693b      	ldr	r3, [r7, #16]
 8012178:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801217c:	689b      	ldr	r3, [r3, #8]
 801217e:	f003 0306 	and.w	r3, r3, #6
 8012182:	60fb      	str	r3, [r7, #12]
 8012184:	68fb      	ldr	r3, [r7, #12]
 8012186:	2b00      	cmp	r3, #0
 8012188:	d102      	bne.n	8012190 <USB_GetDevSpeed+0x26>
 801218a:	2300      	movs	r3, #0
 801218c:	75fb      	strb	r3, [r7, #23]
 801218e:	e00a      	b.n	80121a6 <USB_GetDevSpeed+0x3c>
 8012190:	68fb      	ldr	r3, [r7, #12]
 8012192:	2b02      	cmp	r3, #2
 8012194:	d002      	beq.n	801219c <USB_GetDevSpeed+0x32>
 8012196:	68fb      	ldr	r3, [r7, #12]
 8012198:	2b06      	cmp	r3, #6
 801219a:	d102      	bne.n	80121a2 <USB_GetDevSpeed+0x38>
 801219c:	2302      	movs	r3, #2
 801219e:	75fb      	strb	r3, [r7, #23]
 80121a0:	e001      	b.n	80121a6 <USB_GetDevSpeed+0x3c>
 80121a2:	230f      	movs	r3, #15
 80121a4:	75fb      	strb	r3, [r7, #23]
 80121a6:	7dfb      	ldrb	r3, [r7, #23]
 80121a8:	4618      	mov	r0, r3
 80121aa:	371c      	adds	r7, #28
 80121ac:	46bd      	mov	sp, r7
 80121ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80121b2:	4770      	bx	lr

080121b4 <USB_ActivateEndpoint>:
 80121b4:	b480      	push	{r7}
 80121b6:	b085      	sub	sp, #20
 80121b8:	af00      	add	r7, sp, #0
 80121ba:	6078      	str	r0, [r7, #4]
 80121bc:	6039      	str	r1, [r7, #0]
 80121be:	687b      	ldr	r3, [r7, #4]
 80121c0:	60fb      	str	r3, [r7, #12]
 80121c2:	683b      	ldr	r3, [r7, #0]
 80121c4:	781b      	ldrb	r3, [r3, #0]
 80121c6:	60bb      	str	r3, [r7, #8]
 80121c8:	683b      	ldr	r3, [r7, #0]
 80121ca:	785b      	ldrb	r3, [r3, #1]
 80121cc:	2b01      	cmp	r3, #1
 80121ce:	d139      	bne.n	8012244 <USB_ActivateEndpoint+0x90>
 80121d0:	68fb      	ldr	r3, [r7, #12]
 80121d2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80121d6:	69da      	ldr	r2, [r3, #28]
 80121d8:	683b      	ldr	r3, [r7, #0]
 80121da:	781b      	ldrb	r3, [r3, #0]
 80121dc:	f003 030f 	and.w	r3, r3, #15
 80121e0:	2101      	movs	r1, #1
 80121e2:	fa01 f303 	lsl.w	r3, r1, r3
 80121e6:	b29b      	uxth	r3, r3
 80121e8:	68f9      	ldr	r1, [r7, #12]
 80121ea:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 80121ee:	4313      	orrs	r3, r2
 80121f0:	61cb      	str	r3, [r1, #28]
 80121f2:	68bb      	ldr	r3, [r7, #8]
 80121f4:	015a      	lsls	r2, r3, #5
 80121f6:	68fb      	ldr	r3, [r7, #12]
 80121f8:	4413      	add	r3, r2
 80121fa:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80121fe:	681b      	ldr	r3, [r3, #0]
 8012200:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8012204:	2b00      	cmp	r3, #0
 8012206:	d153      	bne.n	80122b0 <USB_ActivateEndpoint+0xfc>
 8012208:	68bb      	ldr	r3, [r7, #8]
 801220a:	015a      	lsls	r2, r3, #5
 801220c:	68fb      	ldr	r3, [r7, #12]
 801220e:	4413      	add	r3, r2
 8012210:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012214:	681a      	ldr	r2, [r3, #0]
 8012216:	683b      	ldr	r3, [r7, #0]
 8012218:	689b      	ldr	r3, [r3, #8]
 801221a:	f3c3 010a 	ubfx	r1, r3, #0, #11
 801221e:	683b      	ldr	r3, [r7, #0]
 8012220:	791b      	ldrb	r3, [r3, #4]
 8012222:	049b      	lsls	r3, r3, #18
 8012224:	4319      	orrs	r1, r3
 8012226:	68bb      	ldr	r3, [r7, #8]
 8012228:	059b      	lsls	r3, r3, #22
 801222a:	430b      	orrs	r3, r1
 801222c:	431a      	orrs	r2, r3
 801222e:	68bb      	ldr	r3, [r7, #8]
 8012230:	0159      	lsls	r1, r3, #5
 8012232:	68fb      	ldr	r3, [r7, #12]
 8012234:	440b      	add	r3, r1
 8012236:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801223a:	4619      	mov	r1, r3
 801223c:	4b20      	ldr	r3, [pc, #128]	@ (80122c0 <USB_ActivateEndpoint+0x10c>)
 801223e:	4313      	orrs	r3, r2
 8012240:	600b      	str	r3, [r1, #0]
 8012242:	e035      	b.n	80122b0 <USB_ActivateEndpoint+0xfc>
 8012244:	68fb      	ldr	r3, [r7, #12]
 8012246:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801224a:	69da      	ldr	r2, [r3, #28]
 801224c:	683b      	ldr	r3, [r7, #0]
 801224e:	781b      	ldrb	r3, [r3, #0]
 8012250:	f003 030f 	and.w	r3, r3, #15
 8012254:	2101      	movs	r1, #1
 8012256:	fa01 f303 	lsl.w	r3, r1, r3
 801225a:	041b      	lsls	r3, r3, #16
 801225c:	68f9      	ldr	r1, [r7, #12]
 801225e:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8012262:	4313      	orrs	r3, r2
 8012264:	61cb      	str	r3, [r1, #28]
 8012266:	68bb      	ldr	r3, [r7, #8]
 8012268:	015a      	lsls	r2, r3, #5
 801226a:	68fb      	ldr	r3, [r7, #12]
 801226c:	4413      	add	r3, r2
 801226e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012272:	681b      	ldr	r3, [r3, #0]
 8012274:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8012278:	2b00      	cmp	r3, #0
 801227a:	d119      	bne.n	80122b0 <USB_ActivateEndpoint+0xfc>
 801227c:	68bb      	ldr	r3, [r7, #8]
 801227e:	015a      	lsls	r2, r3, #5
 8012280:	68fb      	ldr	r3, [r7, #12]
 8012282:	4413      	add	r3, r2
 8012284:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012288:	681a      	ldr	r2, [r3, #0]
 801228a:	683b      	ldr	r3, [r7, #0]
 801228c:	689b      	ldr	r3, [r3, #8]
 801228e:	f3c3 010a 	ubfx	r1, r3, #0, #11
 8012292:	683b      	ldr	r3, [r7, #0]
 8012294:	791b      	ldrb	r3, [r3, #4]
 8012296:	049b      	lsls	r3, r3, #18
 8012298:	430b      	orrs	r3, r1
 801229a:	431a      	orrs	r2, r3
 801229c:	68bb      	ldr	r3, [r7, #8]
 801229e:	0159      	lsls	r1, r3, #5
 80122a0:	68fb      	ldr	r3, [r7, #12]
 80122a2:	440b      	add	r3, r1
 80122a4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80122a8:	4619      	mov	r1, r3
 80122aa:	4b05      	ldr	r3, [pc, #20]	@ (80122c0 <USB_ActivateEndpoint+0x10c>)
 80122ac:	4313      	orrs	r3, r2
 80122ae:	600b      	str	r3, [r1, #0]
 80122b0:	2300      	movs	r3, #0
 80122b2:	4618      	mov	r0, r3
 80122b4:	3714      	adds	r7, #20
 80122b6:	46bd      	mov	sp, r7
 80122b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80122bc:	4770      	bx	lr
 80122be:	bf00      	nop
 80122c0:	10008000 	.word	0x10008000

080122c4 <USB_DeactivateEndpoint>:
 80122c4:	b480      	push	{r7}
 80122c6:	b085      	sub	sp, #20
 80122c8:	af00      	add	r7, sp, #0
 80122ca:	6078      	str	r0, [r7, #4]
 80122cc:	6039      	str	r1, [r7, #0]
 80122ce:	687b      	ldr	r3, [r7, #4]
 80122d0:	60fb      	str	r3, [r7, #12]
 80122d2:	683b      	ldr	r3, [r7, #0]
 80122d4:	781b      	ldrb	r3, [r3, #0]
 80122d6:	60bb      	str	r3, [r7, #8]
 80122d8:	683b      	ldr	r3, [r7, #0]
 80122da:	785b      	ldrb	r3, [r3, #1]
 80122dc:	2b01      	cmp	r3, #1
 80122de:	d161      	bne.n	80123a4 <USB_DeactivateEndpoint+0xe0>
 80122e0:	68bb      	ldr	r3, [r7, #8]
 80122e2:	015a      	lsls	r2, r3, #5
 80122e4:	68fb      	ldr	r3, [r7, #12]
 80122e6:	4413      	add	r3, r2
 80122e8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80122ec:	681b      	ldr	r3, [r3, #0]
 80122ee:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80122f2:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80122f6:	d11f      	bne.n	8012338 <USB_DeactivateEndpoint+0x74>
 80122f8:	68bb      	ldr	r3, [r7, #8]
 80122fa:	015a      	lsls	r2, r3, #5
 80122fc:	68fb      	ldr	r3, [r7, #12]
 80122fe:	4413      	add	r3, r2
 8012300:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012304:	681b      	ldr	r3, [r3, #0]
 8012306:	68ba      	ldr	r2, [r7, #8]
 8012308:	0151      	lsls	r1, r2, #5
 801230a:	68fa      	ldr	r2, [r7, #12]
 801230c:	440a      	add	r2, r1
 801230e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012312:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8012316:	6013      	str	r3, [r2, #0]
 8012318:	68bb      	ldr	r3, [r7, #8]
 801231a:	015a      	lsls	r2, r3, #5
 801231c:	68fb      	ldr	r3, [r7, #12]
 801231e:	4413      	add	r3, r2
 8012320:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012324:	681b      	ldr	r3, [r3, #0]
 8012326:	68ba      	ldr	r2, [r7, #8]
 8012328:	0151      	lsls	r1, r2, #5
 801232a:	68fa      	ldr	r2, [r7, #12]
 801232c:	440a      	add	r2, r1
 801232e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012332:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8012336:	6013      	str	r3, [r2, #0]
 8012338:	68fb      	ldr	r3, [r7, #12]
 801233a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801233e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8012340:	683b      	ldr	r3, [r7, #0]
 8012342:	781b      	ldrb	r3, [r3, #0]
 8012344:	f003 030f 	and.w	r3, r3, #15
 8012348:	2101      	movs	r1, #1
 801234a:	fa01 f303 	lsl.w	r3, r1, r3
 801234e:	b29b      	uxth	r3, r3
 8012350:	43db      	mvns	r3, r3
 8012352:	68f9      	ldr	r1, [r7, #12]
 8012354:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8012358:	4013      	ands	r3, r2
 801235a:	63cb      	str	r3, [r1, #60]	@ 0x3c
 801235c:	68fb      	ldr	r3, [r7, #12]
 801235e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012362:	69da      	ldr	r2, [r3, #28]
 8012364:	683b      	ldr	r3, [r7, #0]
 8012366:	781b      	ldrb	r3, [r3, #0]
 8012368:	f003 030f 	and.w	r3, r3, #15
 801236c:	2101      	movs	r1, #1
 801236e:	fa01 f303 	lsl.w	r3, r1, r3
 8012372:	b29b      	uxth	r3, r3
 8012374:	43db      	mvns	r3, r3
 8012376:	68f9      	ldr	r1, [r7, #12]
 8012378:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 801237c:	4013      	ands	r3, r2
 801237e:	61cb      	str	r3, [r1, #28]
 8012380:	68bb      	ldr	r3, [r7, #8]
 8012382:	015a      	lsls	r2, r3, #5
 8012384:	68fb      	ldr	r3, [r7, #12]
 8012386:	4413      	add	r3, r2
 8012388:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801238c:	681a      	ldr	r2, [r3, #0]
 801238e:	68bb      	ldr	r3, [r7, #8]
 8012390:	0159      	lsls	r1, r3, #5
 8012392:	68fb      	ldr	r3, [r7, #12]
 8012394:	440b      	add	r3, r1
 8012396:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801239a:	4619      	mov	r1, r3
 801239c:	4b35      	ldr	r3, [pc, #212]	@ (8012474 <USB_DeactivateEndpoint+0x1b0>)
 801239e:	4013      	ands	r3, r2
 80123a0:	600b      	str	r3, [r1, #0]
 80123a2:	e060      	b.n	8012466 <USB_DeactivateEndpoint+0x1a2>
 80123a4:	68bb      	ldr	r3, [r7, #8]
 80123a6:	015a      	lsls	r2, r3, #5
 80123a8:	68fb      	ldr	r3, [r7, #12]
 80123aa:	4413      	add	r3, r2
 80123ac:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80123b0:	681b      	ldr	r3, [r3, #0]
 80123b2:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80123b6:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80123ba:	d11f      	bne.n	80123fc <USB_DeactivateEndpoint+0x138>
 80123bc:	68bb      	ldr	r3, [r7, #8]
 80123be:	015a      	lsls	r2, r3, #5
 80123c0:	68fb      	ldr	r3, [r7, #12]
 80123c2:	4413      	add	r3, r2
 80123c4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80123c8:	681b      	ldr	r3, [r3, #0]
 80123ca:	68ba      	ldr	r2, [r7, #8]
 80123cc:	0151      	lsls	r1, r2, #5
 80123ce:	68fa      	ldr	r2, [r7, #12]
 80123d0:	440a      	add	r2, r1
 80123d2:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80123d6:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 80123da:	6013      	str	r3, [r2, #0]
 80123dc:	68bb      	ldr	r3, [r7, #8]
 80123de:	015a      	lsls	r2, r3, #5
 80123e0:	68fb      	ldr	r3, [r7, #12]
 80123e2:	4413      	add	r3, r2
 80123e4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80123e8:	681b      	ldr	r3, [r3, #0]
 80123ea:	68ba      	ldr	r2, [r7, #8]
 80123ec:	0151      	lsls	r1, r2, #5
 80123ee:	68fa      	ldr	r2, [r7, #12]
 80123f0:	440a      	add	r2, r1
 80123f2:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80123f6:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80123fa:	6013      	str	r3, [r2, #0]
 80123fc:	68fb      	ldr	r3, [r7, #12]
 80123fe:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012402:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8012404:	683b      	ldr	r3, [r7, #0]
 8012406:	781b      	ldrb	r3, [r3, #0]
 8012408:	f003 030f 	and.w	r3, r3, #15
 801240c:	2101      	movs	r1, #1
 801240e:	fa01 f303 	lsl.w	r3, r1, r3
 8012412:	041b      	lsls	r3, r3, #16
 8012414:	43db      	mvns	r3, r3
 8012416:	68f9      	ldr	r1, [r7, #12]
 8012418:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 801241c:	4013      	ands	r3, r2
 801241e:	63cb      	str	r3, [r1, #60]	@ 0x3c
 8012420:	68fb      	ldr	r3, [r7, #12]
 8012422:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012426:	69da      	ldr	r2, [r3, #28]
 8012428:	683b      	ldr	r3, [r7, #0]
 801242a:	781b      	ldrb	r3, [r3, #0]
 801242c:	f003 030f 	and.w	r3, r3, #15
 8012430:	2101      	movs	r1, #1
 8012432:	fa01 f303 	lsl.w	r3, r1, r3
 8012436:	041b      	lsls	r3, r3, #16
 8012438:	43db      	mvns	r3, r3
 801243a:	68f9      	ldr	r1, [r7, #12]
 801243c:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8012440:	4013      	ands	r3, r2
 8012442:	61cb      	str	r3, [r1, #28]
 8012444:	68bb      	ldr	r3, [r7, #8]
 8012446:	015a      	lsls	r2, r3, #5
 8012448:	68fb      	ldr	r3, [r7, #12]
 801244a:	4413      	add	r3, r2
 801244c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012450:	681a      	ldr	r2, [r3, #0]
 8012452:	68bb      	ldr	r3, [r7, #8]
 8012454:	0159      	lsls	r1, r3, #5
 8012456:	68fb      	ldr	r3, [r7, #12]
 8012458:	440b      	add	r3, r1
 801245a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801245e:	4619      	mov	r1, r3
 8012460:	4b05      	ldr	r3, [pc, #20]	@ (8012478 <USB_DeactivateEndpoint+0x1b4>)
 8012462:	4013      	ands	r3, r2
 8012464:	600b      	str	r3, [r1, #0]
 8012466:	2300      	movs	r3, #0
 8012468:	4618      	mov	r0, r3
 801246a:	3714      	adds	r7, #20
 801246c:	46bd      	mov	sp, r7
 801246e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012472:	4770      	bx	lr
 8012474:	ec337800 	.word	0xec337800
 8012478:	eff37800 	.word	0xeff37800

0801247c <USB_EPStartXfer>:
 801247c:	b580      	push	{r7, lr}
 801247e:	b08a      	sub	sp, #40	@ 0x28
 8012480:	af02      	add	r7, sp, #8
 8012482:	60f8      	str	r0, [r7, #12]
 8012484:	60b9      	str	r1, [r7, #8]
 8012486:	4613      	mov	r3, r2
 8012488:	71fb      	strb	r3, [r7, #7]
 801248a:	68fb      	ldr	r3, [r7, #12]
 801248c:	61fb      	str	r3, [r7, #28]
 801248e:	68bb      	ldr	r3, [r7, #8]
 8012490:	781b      	ldrb	r3, [r3, #0]
 8012492:	61bb      	str	r3, [r7, #24]
 8012494:	68bb      	ldr	r3, [r7, #8]
 8012496:	785b      	ldrb	r3, [r3, #1]
 8012498:	2b01      	cmp	r3, #1
 801249a:	f040 8181 	bne.w	80127a0 <USB_EPStartXfer+0x324>
 801249e:	68bb      	ldr	r3, [r7, #8]
 80124a0:	691b      	ldr	r3, [r3, #16]
 80124a2:	2b00      	cmp	r3, #0
 80124a4:	d132      	bne.n	801250c <USB_EPStartXfer+0x90>
 80124a6:	69bb      	ldr	r3, [r7, #24]
 80124a8:	015a      	lsls	r2, r3, #5
 80124aa:	69fb      	ldr	r3, [r7, #28]
 80124ac:	4413      	add	r3, r2
 80124ae:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80124b2:	691a      	ldr	r2, [r3, #16]
 80124b4:	69bb      	ldr	r3, [r7, #24]
 80124b6:	0159      	lsls	r1, r3, #5
 80124b8:	69fb      	ldr	r3, [r7, #28]
 80124ba:	440b      	add	r3, r1
 80124bc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80124c0:	4619      	mov	r1, r3
 80124c2:	4ba5      	ldr	r3, [pc, #660]	@ (8012758 <USB_EPStartXfer+0x2dc>)
 80124c4:	4013      	ands	r3, r2
 80124c6:	610b      	str	r3, [r1, #16]
 80124c8:	69bb      	ldr	r3, [r7, #24]
 80124ca:	015a      	lsls	r2, r3, #5
 80124cc:	69fb      	ldr	r3, [r7, #28]
 80124ce:	4413      	add	r3, r2
 80124d0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80124d4:	691b      	ldr	r3, [r3, #16]
 80124d6:	69ba      	ldr	r2, [r7, #24]
 80124d8:	0151      	lsls	r1, r2, #5
 80124da:	69fa      	ldr	r2, [r7, #28]
 80124dc:	440a      	add	r2, r1
 80124de:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80124e2:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80124e6:	6113      	str	r3, [r2, #16]
 80124e8:	69bb      	ldr	r3, [r7, #24]
 80124ea:	015a      	lsls	r2, r3, #5
 80124ec:	69fb      	ldr	r3, [r7, #28]
 80124ee:	4413      	add	r3, r2
 80124f0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80124f4:	691a      	ldr	r2, [r3, #16]
 80124f6:	69bb      	ldr	r3, [r7, #24]
 80124f8:	0159      	lsls	r1, r3, #5
 80124fa:	69fb      	ldr	r3, [r7, #28]
 80124fc:	440b      	add	r3, r1
 80124fe:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012502:	4619      	mov	r1, r3
 8012504:	4b95      	ldr	r3, [pc, #596]	@ (801275c <USB_EPStartXfer+0x2e0>)
 8012506:	4013      	ands	r3, r2
 8012508:	610b      	str	r3, [r1, #16]
 801250a:	e092      	b.n	8012632 <USB_EPStartXfer+0x1b6>
 801250c:	69bb      	ldr	r3, [r7, #24]
 801250e:	015a      	lsls	r2, r3, #5
 8012510:	69fb      	ldr	r3, [r7, #28]
 8012512:	4413      	add	r3, r2
 8012514:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012518:	691a      	ldr	r2, [r3, #16]
 801251a:	69bb      	ldr	r3, [r7, #24]
 801251c:	0159      	lsls	r1, r3, #5
 801251e:	69fb      	ldr	r3, [r7, #28]
 8012520:	440b      	add	r3, r1
 8012522:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012526:	4619      	mov	r1, r3
 8012528:	4b8c      	ldr	r3, [pc, #560]	@ (801275c <USB_EPStartXfer+0x2e0>)
 801252a:	4013      	ands	r3, r2
 801252c:	610b      	str	r3, [r1, #16]
 801252e:	69bb      	ldr	r3, [r7, #24]
 8012530:	015a      	lsls	r2, r3, #5
 8012532:	69fb      	ldr	r3, [r7, #28]
 8012534:	4413      	add	r3, r2
 8012536:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801253a:	691a      	ldr	r2, [r3, #16]
 801253c:	69bb      	ldr	r3, [r7, #24]
 801253e:	0159      	lsls	r1, r3, #5
 8012540:	69fb      	ldr	r3, [r7, #28]
 8012542:	440b      	add	r3, r1
 8012544:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012548:	4619      	mov	r1, r3
 801254a:	4b83      	ldr	r3, [pc, #524]	@ (8012758 <USB_EPStartXfer+0x2dc>)
 801254c:	4013      	ands	r3, r2
 801254e:	610b      	str	r3, [r1, #16]
 8012550:	69bb      	ldr	r3, [r7, #24]
 8012552:	2b00      	cmp	r3, #0
 8012554:	d11a      	bne.n	801258c <USB_EPStartXfer+0x110>
 8012556:	68bb      	ldr	r3, [r7, #8]
 8012558:	691a      	ldr	r2, [r3, #16]
 801255a:	68bb      	ldr	r3, [r7, #8]
 801255c:	689b      	ldr	r3, [r3, #8]
 801255e:	429a      	cmp	r2, r3
 8012560:	d903      	bls.n	801256a <USB_EPStartXfer+0xee>
 8012562:	68bb      	ldr	r3, [r7, #8]
 8012564:	689a      	ldr	r2, [r3, #8]
 8012566:	68bb      	ldr	r3, [r7, #8]
 8012568:	611a      	str	r2, [r3, #16]
 801256a:	69bb      	ldr	r3, [r7, #24]
 801256c:	015a      	lsls	r2, r3, #5
 801256e:	69fb      	ldr	r3, [r7, #28]
 8012570:	4413      	add	r3, r2
 8012572:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012576:	691b      	ldr	r3, [r3, #16]
 8012578:	69ba      	ldr	r2, [r7, #24]
 801257a:	0151      	lsls	r1, r2, #5
 801257c:	69fa      	ldr	r2, [r7, #28]
 801257e:	440a      	add	r2, r1
 8012580:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012584:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8012588:	6113      	str	r3, [r2, #16]
 801258a:	e01b      	b.n	80125c4 <USB_EPStartXfer+0x148>
 801258c:	69bb      	ldr	r3, [r7, #24]
 801258e:	015a      	lsls	r2, r3, #5
 8012590:	69fb      	ldr	r3, [r7, #28]
 8012592:	4413      	add	r3, r2
 8012594:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012598:	691a      	ldr	r2, [r3, #16]
 801259a:	68bb      	ldr	r3, [r7, #8]
 801259c:	6919      	ldr	r1, [r3, #16]
 801259e:	68bb      	ldr	r3, [r7, #8]
 80125a0:	689b      	ldr	r3, [r3, #8]
 80125a2:	440b      	add	r3, r1
 80125a4:	1e59      	subs	r1, r3, #1
 80125a6:	68bb      	ldr	r3, [r7, #8]
 80125a8:	689b      	ldr	r3, [r3, #8]
 80125aa:	fbb1 f3f3 	udiv	r3, r1, r3
 80125ae:	04d9      	lsls	r1, r3, #19
 80125b0:	4b6b      	ldr	r3, [pc, #428]	@ (8012760 <USB_EPStartXfer+0x2e4>)
 80125b2:	400b      	ands	r3, r1
 80125b4:	69b9      	ldr	r1, [r7, #24]
 80125b6:	0148      	lsls	r0, r1, #5
 80125b8:	69f9      	ldr	r1, [r7, #28]
 80125ba:	4401      	add	r1, r0
 80125bc:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 80125c0:	4313      	orrs	r3, r2
 80125c2:	610b      	str	r3, [r1, #16]
 80125c4:	69bb      	ldr	r3, [r7, #24]
 80125c6:	015a      	lsls	r2, r3, #5
 80125c8:	69fb      	ldr	r3, [r7, #28]
 80125ca:	4413      	add	r3, r2
 80125cc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80125d0:	691a      	ldr	r2, [r3, #16]
 80125d2:	68bb      	ldr	r3, [r7, #8]
 80125d4:	691b      	ldr	r3, [r3, #16]
 80125d6:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80125da:	69b9      	ldr	r1, [r7, #24]
 80125dc:	0148      	lsls	r0, r1, #5
 80125de:	69f9      	ldr	r1, [r7, #28]
 80125e0:	4401      	add	r1, r0
 80125e2:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 80125e6:	4313      	orrs	r3, r2
 80125e8:	610b      	str	r3, [r1, #16]
 80125ea:	68bb      	ldr	r3, [r7, #8]
 80125ec:	791b      	ldrb	r3, [r3, #4]
 80125ee:	2b01      	cmp	r3, #1
 80125f0:	d11f      	bne.n	8012632 <USB_EPStartXfer+0x1b6>
 80125f2:	69bb      	ldr	r3, [r7, #24]
 80125f4:	015a      	lsls	r2, r3, #5
 80125f6:	69fb      	ldr	r3, [r7, #28]
 80125f8:	4413      	add	r3, r2
 80125fa:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80125fe:	691b      	ldr	r3, [r3, #16]
 8012600:	69ba      	ldr	r2, [r7, #24]
 8012602:	0151      	lsls	r1, r2, #5
 8012604:	69fa      	ldr	r2, [r7, #28]
 8012606:	440a      	add	r2, r1
 8012608:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801260c:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 8012610:	6113      	str	r3, [r2, #16]
 8012612:	69bb      	ldr	r3, [r7, #24]
 8012614:	015a      	lsls	r2, r3, #5
 8012616:	69fb      	ldr	r3, [r7, #28]
 8012618:	4413      	add	r3, r2
 801261a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801261e:	691b      	ldr	r3, [r3, #16]
 8012620:	69ba      	ldr	r2, [r7, #24]
 8012622:	0151      	lsls	r1, r2, #5
 8012624:	69fa      	ldr	r2, [r7, #28]
 8012626:	440a      	add	r2, r1
 8012628:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801262c:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8012630:	6113      	str	r3, [r2, #16]
 8012632:	79fb      	ldrb	r3, [r7, #7]
 8012634:	2b01      	cmp	r3, #1
 8012636:	d14b      	bne.n	80126d0 <USB_EPStartXfer+0x254>
 8012638:	68bb      	ldr	r3, [r7, #8]
 801263a:	69db      	ldr	r3, [r3, #28]
 801263c:	2b00      	cmp	r3, #0
 801263e:	d009      	beq.n	8012654 <USB_EPStartXfer+0x1d8>
 8012640:	69bb      	ldr	r3, [r7, #24]
 8012642:	015a      	lsls	r2, r3, #5
 8012644:	69fb      	ldr	r3, [r7, #28]
 8012646:	4413      	add	r3, r2
 8012648:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801264c:	461a      	mov	r2, r3
 801264e:	68bb      	ldr	r3, [r7, #8]
 8012650:	69db      	ldr	r3, [r3, #28]
 8012652:	6153      	str	r3, [r2, #20]
 8012654:	68bb      	ldr	r3, [r7, #8]
 8012656:	791b      	ldrb	r3, [r3, #4]
 8012658:	2b01      	cmp	r3, #1
 801265a:	d128      	bne.n	80126ae <USB_EPStartXfer+0x232>
 801265c:	69fb      	ldr	r3, [r7, #28]
 801265e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012662:	689b      	ldr	r3, [r3, #8]
 8012664:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012668:	2b00      	cmp	r3, #0
 801266a:	d110      	bne.n	801268e <USB_EPStartXfer+0x212>
 801266c:	69bb      	ldr	r3, [r7, #24]
 801266e:	015a      	lsls	r2, r3, #5
 8012670:	69fb      	ldr	r3, [r7, #28]
 8012672:	4413      	add	r3, r2
 8012674:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012678:	681b      	ldr	r3, [r3, #0]
 801267a:	69ba      	ldr	r2, [r7, #24]
 801267c:	0151      	lsls	r1, r2, #5
 801267e:	69fa      	ldr	r2, [r7, #28]
 8012680:	440a      	add	r2, r1
 8012682:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012686:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 801268a:	6013      	str	r3, [r2, #0]
 801268c:	e00f      	b.n	80126ae <USB_EPStartXfer+0x232>
 801268e:	69bb      	ldr	r3, [r7, #24]
 8012690:	015a      	lsls	r2, r3, #5
 8012692:	69fb      	ldr	r3, [r7, #28]
 8012694:	4413      	add	r3, r2
 8012696:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801269a:	681b      	ldr	r3, [r3, #0]
 801269c:	69ba      	ldr	r2, [r7, #24]
 801269e:	0151      	lsls	r1, r2, #5
 80126a0:	69fa      	ldr	r2, [r7, #28]
 80126a2:	440a      	add	r2, r1
 80126a4:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80126a8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80126ac:	6013      	str	r3, [r2, #0]
 80126ae:	69bb      	ldr	r3, [r7, #24]
 80126b0:	015a      	lsls	r2, r3, #5
 80126b2:	69fb      	ldr	r3, [r7, #28]
 80126b4:	4413      	add	r3, r2
 80126b6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80126ba:	681b      	ldr	r3, [r3, #0]
 80126bc:	69ba      	ldr	r2, [r7, #24]
 80126be:	0151      	lsls	r1, r2, #5
 80126c0:	69fa      	ldr	r2, [r7, #28]
 80126c2:	440a      	add	r2, r1
 80126c4:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80126c8:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80126cc:	6013      	str	r3, [r2, #0]
 80126ce:	e16a      	b.n	80129a6 <USB_EPStartXfer+0x52a>
 80126d0:	69bb      	ldr	r3, [r7, #24]
 80126d2:	015a      	lsls	r2, r3, #5
 80126d4:	69fb      	ldr	r3, [r7, #28]
 80126d6:	4413      	add	r3, r2
 80126d8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80126dc:	681b      	ldr	r3, [r3, #0]
 80126de:	69ba      	ldr	r2, [r7, #24]
 80126e0:	0151      	lsls	r1, r2, #5
 80126e2:	69fa      	ldr	r2, [r7, #28]
 80126e4:	440a      	add	r2, r1
 80126e6:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80126ea:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80126ee:	6013      	str	r3, [r2, #0]
 80126f0:	68bb      	ldr	r3, [r7, #8]
 80126f2:	791b      	ldrb	r3, [r3, #4]
 80126f4:	2b01      	cmp	r3, #1
 80126f6:	d015      	beq.n	8012724 <USB_EPStartXfer+0x2a8>
 80126f8:	68bb      	ldr	r3, [r7, #8]
 80126fa:	691b      	ldr	r3, [r3, #16]
 80126fc:	2b00      	cmp	r3, #0
 80126fe:	f000 8152 	beq.w	80129a6 <USB_EPStartXfer+0x52a>
 8012702:	69fb      	ldr	r3, [r7, #28]
 8012704:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012708:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 801270a:	68bb      	ldr	r3, [r7, #8]
 801270c:	781b      	ldrb	r3, [r3, #0]
 801270e:	f003 030f 	and.w	r3, r3, #15
 8012712:	2101      	movs	r1, #1
 8012714:	fa01 f303 	lsl.w	r3, r1, r3
 8012718:	69f9      	ldr	r1, [r7, #28]
 801271a:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 801271e:	4313      	orrs	r3, r2
 8012720:	634b      	str	r3, [r1, #52]	@ 0x34
 8012722:	e140      	b.n	80129a6 <USB_EPStartXfer+0x52a>
 8012724:	69fb      	ldr	r3, [r7, #28]
 8012726:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801272a:	689b      	ldr	r3, [r3, #8]
 801272c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012730:	2b00      	cmp	r3, #0
 8012732:	d117      	bne.n	8012764 <USB_EPStartXfer+0x2e8>
 8012734:	69bb      	ldr	r3, [r7, #24]
 8012736:	015a      	lsls	r2, r3, #5
 8012738:	69fb      	ldr	r3, [r7, #28]
 801273a:	4413      	add	r3, r2
 801273c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012740:	681b      	ldr	r3, [r3, #0]
 8012742:	69ba      	ldr	r2, [r7, #24]
 8012744:	0151      	lsls	r1, r2, #5
 8012746:	69fa      	ldr	r2, [r7, #28]
 8012748:	440a      	add	r2, r1
 801274a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801274e:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8012752:	6013      	str	r3, [r2, #0]
 8012754:	e016      	b.n	8012784 <USB_EPStartXfer+0x308>
 8012756:	bf00      	nop
 8012758:	e007ffff 	.word	0xe007ffff
 801275c:	fff80000 	.word	0xfff80000
 8012760:	1ff80000 	.word	0x1ff80000
 8012764:	69bb      	ldr	r3, [r7, #24]
 8012766:	015a      	lsls	r2, r3, #5
 8012768:	69fb      	ldr	r3, [r7, #28]
 801276a:	4413      	add	r3, r2
 801276c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012770:	681b      	ldr	r3, [r3, #0]
 8012772:	69ba      	ldr	r2, [r7, #24]
 8012774:	0151      	lsls	r1, r2, #5
 8012776:	69fa      	ldr	r2, [r7, #28]
 8012778:	440a      	add	r2, r1
 801277a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801277e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8012782:	6013      	str	r3, [r2, #0]
 8012784:	68bb      	ldr	r3, [r7, #8]
 8012786:	68d9      	ldr	r1, [r3, #12]
 8012788:	68bb      	ldr	r3, [r7, #8]
 801278a:	781a      	ldrb	r2, [r3, #0]
 801278c:	68bb      	ldr	r3, [r7, #8]
 801278e:	691b      	ldr	r3, [r3, #16]
 8012790:	b298      	uxth	r0, r3
 8012792:	79fb      	ldrb	r3, [r7, #7]
 8012794:	9300      	str	r3, [sp, #0]
 8012796:	4603      	mov	r3, r0
 8012798:	68f8      	ldr	r0, [r7, #12]
 801279a:	f000 f9b9 	bl	8012b10 <USB_WritePacket>
 801279e:	e102      	b.n	80129a6 <USB_EPStartXfer+0x52a>
 80127a0:	69bb      	ldr	r3, [r7, #24]
 80127a2:	015a      	lsls	r2, r3, #5
 80127a4:	69fb      	ldr	r3, [r7, #28]
 80127a6:	4413      	add	r3, r2
 80127a8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80127ac:	691a      	ldr	r2, [r3, #16]
 80127ae:	69bb      	ldr	r3, [r7, #24]
 80127b0:	0159      	lsls	r1, r3, #5
 80127b2:	69fb      	ldr	r3, [r7, #28]
 80127b4:	440b      	add	r3, r1
 80127b6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80127ba:	4619      	mov	r1, r3
 80127bc:	4b7c      	ldr	r3, [pc, #496]	@ (80129b0 <USB_EPStartXfer+0x534>)
 80127be:	4013      	ands	r3, r2
 80127c0:	610b      	str	r3, [r1, #16]
 80127c2:	69bb      	ldr	r3, [r7, #24]
 80127c4:	015a      	lsls	r2, r3, #5
 80127c6:	69fb      	ldr	r3, [r7, #28]
 80127c8:	4413      	add	r3, r2
 80127ca:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80127ce:	691a      	ldr	r2, [r3, #16]
 80127d0:	69bb      	ldr	r3, [r7, #24]
 80127d2:	0159      	lsls	r1, r3, #5
 80127d4:	69fb      	ldr	r3, [r7, #28]
 80127d6:	440b      	add	r3, r1
 80127d8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80127dc:	4619      	mov	r1, r3
 80127de:	4b75      	ldr	r3, [pc, #468]	@ (80129b4 <USB_EPStartXfer+0x538>)
 80127e0:	4013      	ands	r3, r2
 80127e2:	610b      	str	r3, [r1, #16]
 80127e4:	69bb      	ldr	r3, [r7, #24]
 80127e6:	2b00      	cmp	r3, #0
 80127e8:	d12f      	bne.n	801284a <USB_EPStartXfer+0x3ce>
 80127ea:	68bb      	ldr	r3, [r7, #8]
 80127ec:	691b      	ldr	r3, [r3, #16]
 80127ee:	2b00      	cmp	r3, #0
 80127f0:	d003      	beq.n	80127fa <USB_EPStartXfer+0x37e>
 80127f2:	68bb      	ldr	r3, [r7, #8]
 80127f4:	689a      	ldr	r2, [r3, #8]
 80127f6:	68bb      	ldr	r3, [r7, #8]
 80127f8:	611a      	str	r2, [r3, #16]
 80127fa:	68bb      	ldr	r3, [r7, #8]
 80127fc:	689a      	ldr	r2, [r3, #8]
 80127fe:	68bb      	ldr	r3, [r7, #8]
 8012800:	621a      	str	r2, [r3, #32]
 8012802:	69bb      	ldr	r3, [r7, #24]
 8012804:	015a      	lsls	r2, r3, #5
 8012806:	69fb      	ldr	r3, [r7, #28]
 8012808:	4413      	add	r3, r2
 801280a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801280e:	691a      	ldr	r2, [r3, #16]
 8012810:	68bb      	ldr	r3, [r7, #8]
 8012812:	6a1b      	ldr	r3, [r3, #32]
 8012814:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8012818:	69b9      	ldr	r1, [r7, #24]
 801281a:	0148      	lsls	r0, r1, #5
 801281c:	69f9      	ldr	r1, [r7, #28]
 801281e:	4401      	add	r1, r0
 8012820:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 8012824:	4313      	orrs	r3, r2
 8012826:	610b      	str	r3, [r1, #16]
 8012828:	69bb      	ldr	r3, [r7, #24]
 801282a:	015a      	lsls	r2, r3, #5
 801282c:	69fb      	ldr	r3, [r7, #28]
 801282e:	4413      	add	r3, r2
 8012830:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012834:	691b      	ldr	r3, [r3, #16]
 8012836:	69ba      	ldr	r2, [r7, #24]
 8012838:	0151      	lsls	r1, r2, #5
 801283a:	69fa      	ldr	r2, [r7, #28]
 801283c:	440a      	add	r2, r1
 801283e:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012842:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8012846:	6113      	str	r3, [r2, #16]
 8012848:	e05f      	b.n	801290a <USB_EPStartXfer+0x48e>
 801284a:	68bb      	ldr	r3, [r7, #8]
 801284c:	691b      	ldr	r3, [r3, #16]
 801284e:	2b00      	cmp	r3, #0
 8012850:	d123      	bne.n	801289a <USB_EPStartXfer+0x41e>
 8012852:	69bb      	ldr	r3, [r7, #24]
 8012854:	015a      	lsls	r2, r3, #5
 8012856:	69fb      	ldr	r3, [r7, #28]
 8012858:	4413      	add	r3, r2
 801285a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801285e:	691a      	ldr	r2, [r3, #16]
 8012860:	68bb      	ldr	r3, [r7, #8]
 8012862:	689b      	ldr	r3, [r3, #8]
 8012864:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8012868:	69b9      	ldr	r1, [r7, #24]
 801286a:	0148      	lsls	r0, r1, #5
 801286c:	69f9      	ldr	r1, [r7, #28]
 801286e:	4401      	add	r1, r0
 8012870:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 8012874:	4313      	orrs	r3, r2
 8012876:	610b      	str	r3, [r1, #16]
 8012878:	69bb      	ldr	r3, [r7, #24]
 801287a:	015a      	lsls	r2, r3, #5
 801287c:	69fb      	ldr	r3, [r7, #28]
 801287e:	4413      	add	r3, r2
 8012880:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012884:	691b      	ldr	r3, [r3, #16]
 8012886:	69ba      	ldr	r2, [r7, #24]
 8012888:	0151      	lsls	r1, r2, #5
 801288a:	69fa      	ldr	r2, [r7, #28]
 801288c:	440a      	add	r2, r1
 801288e:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012892:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8012896:	6113      	str	r3, [r2, #16]
 8012898:	e037      	b.n	801290a <USB_EPStartXfer+0x48e>
 801289a:	68bb      	ldr	r3, [r7, #8]
 801289c:	691a      	ldr	r2, [r3, #16]
 801289e:	68bb      	ldr	r3, [r7, #8]
 80128a0:	689b      	ldr	r3, [r3, #8]
 80128a2:	4413      	add	r3, r2
 80128a4:	1e5a      	subs	r2, r3, #1
 80128a6:	68bb      	ldr	r3, [r7, #8]
 80128a8:	689b      	ldr	r3, [r3, #8]
 80128aa:	fbb2 f3f3 	udiv	r3, r2, r3
 80128ae:	82fb      	strh	r3, [r7, #22]
 80128b0:	68bb      	ldr	r3, [r7, #8]
 80128b2:	689b      	ldr	r3, [r3, #8]
 80128b4:	8afa      	ldrh	r2, [r7, #22]
 80128b6:	fb03 f202 	mul.w	r2, r3, r2
 80128ba:	68bb      	ldr	r3, [r7, #8]
 80128bc:	621a      	str	r2, [r3, #32]
 80128be:	69bb      	ldr	r3, [r7, #24]
 80128c0:	015a      	lsls	r2, r3, #5
 80128c2:	69fb      	ldr	r3, [r7, #28]
 80128c4:	4413      	add	r3, r2
 80128c6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80128ca:	691a      	ldr	r2, [r3, #16]
 80128cc:	8afb      	ldrh	r3, [r7, #22]
 80128ce:	04d9      	lsls	r1, r3, #19
 80128d0:	4b39      	ldr	r3, [pc, #228]	@ (80129b8 <USB_EPStartXfer+0x53c>)
 80128d2:	400b      	ands	r3, r1
 80128d4:	69b9      	ldr	r1, [r7, #24]
 80128d6:	0148      	lsls	r0, r1, #5
 80128d8:	69f9      	ldr	r1, [r7, #28]
 80128da:	4401      	add	r1, r0
 80128dc:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 80128e0:	4313      	orrs	r3, r2
 80128e2:	610b      	str	r3, [r1, #16]
 80128e4:	69bb      	ldr	r3, [r7, #24]
 80128e6:	015a      	lsls	r2, r3, #5
 80128e8:	69fb      	ldr	r3, [r7, #28]
 80128ea:	4413      	add	r3, r2
 80128ec:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80128f0:	691a      	ldr	r2, [r3, #16]
 80128f2:	68bb      	ldr	r3, [r7, #8]
 80128f4:	6a1b      	ldr	r3, [r3, #32]
 80128f6:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80128fa:	69b9      	ldr	r1, [r7, #24]
 80128fc:	0148      	lsls	r0, r1, #5
 80128fe:	69f9      	ldr	r1, [r7, #28]
 8012900:	4401      	add	r1, r0
 8012902:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 8012906:	4313      	orrs	r3, r2
 8012908:	610b      	str	r3, [r1, #16]
 801290a:	79fb      	ldrb	r3, [r7, #7]
 801290c:	2b01      	cmp	r3, #1
 801290e:	d10d      	bne.n	801292c <USB_EPStartXfer+0x4b0>
 8012910:	68bb      	ldr	r3, [r7, #8]
 8012912:	68db      	ldr	r3, [r3, #12]
 8012914:	2b00      	cmp	r3, #0
 8012916:	d009      	beq.n	801292c <USB_EPStartXfer+0x4b0>
 8012918:	68bb      	ldr	r3, [r7, #8]
 801291a:	68d9      	ldr	r1, [r3, #12]
 801291c:	69bb      	ldr	r3, [r7, #24]
 801291e:	015a      	lsls	r2, r3, #5
 8012920:	69fb      	ldr	r3, [r7, #28]
 8012922:	4413      	add	r3, r2
 8012924:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012928:	460a      	mov	r2, r1
 801292a:	615a      	str	r2, [r3, #20]
 801292c:	68bb      	ldr	r3, [r7, #8]
 801292e:	791b      	ldrb	r3, [r3, #4]
 8012930:	2b01      	cmp	r3, #1
 8012932:	d128      	bne.n	8012986 <USB_EPStartXfer+0x50a>
 8012934:	69fb      	ldr	r3, [r7, #28]
 8012936:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801293a:	689b      	ldr	r3, [r3, #8]
 801293c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012940:	2b00      	cmp	r3, #0
 8012942:	d110      	bne.n	8012966 <USB_EPStartXfer+0x4ea>
 8012944:	69bb      	ldr	r3, [r7, #24]
 8012946:	015a      	lsls	r2, r3, #5
 8012948:	69fb      	ldr	r3, [r7, #28]
 801294a:	4413      	add	r3, r2
 801294c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012950:	681b      	ldr	r3, [r3, #0]
 8012952:	69ba      	ldr	r2, [r7, #24]
 8012954:	0151      	lsls	r1, r2, #5
 8012956:	69fa      	ldr	r2, [r7, #28]
 8012958:	440a      	add	r2, r1
 801295a:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 801295e:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8012962:	6013      	str	r3, [r2, #0]
 8012964:	e00f      	b.n	8012986 <USB_EPStartXfer+0x50a>
 8012966:	69bb      	ldr	r3, [r7, #24]
 8012968:	015a      	lsls	r2, r3, #5
 801296a:	69fb      	ldr	r3, [r7, #28]
 801296c:	4413      	add	r3, r2
 801296e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012972:	681b      	ldr	r3, [r3, #0]
 8012974:	69ba      	ldr	r2, [r7, #24]
 8012976:	0151      	lsls	r1, r2, #5
 8012978:	69fa      	ldr	r2, [r7, #28]
 801297a:	440a      	add	r2, r1
 801297c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012980:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8012984:	6013      	str	r3, [r2, #0]
 8012986:	69bb      	ldr	r3, [r7, #24]
 8012988:	015a      	lsls	r2, r3, #5
 801298a:	69fb      	ldr	r3, [r7, #28]
 801298c:	4413      	add	r3, r2
 801298e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012992:	681b      	ldr	r3, [r3, #0]
 8012994:	69ba      	ldr	r2, [r7, #24]
 8012996:	0151      	lsls	r1, r2, #5
 8012998:	69fa      	ldr	r2, [r7, #28]
 801299a:	440a      	add	r2, r1
 801299c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80129a0:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80129a4:	6013      	str	r3, [r2, #0]
 80129a6:	2300      	movs	r3, #0
 80129a8:	4618      	mov	r0, r3
 80129aa:	3720      	adds	r7, #32
 80129ac:	46bd      	mov	sp, r7
 80129ae:	bd80      	pop	{r7, pc}
 80129b0:	fff80000 	.word	0xfff80000
 80129b4:	e007ffff 	.word	0xe007ffff
 80129b8:	1ff80000 	.word	0x1ff80000

080129bc <USB_EPStopXfer>:
 80129bc:	b480      	push	{r7}
 80129be:	b087      	sub	sp, #28
 80129c0:	af00      	add	r7, sp, #0
 80129c2:	6078      	str	r0, [r7, #4]
 80129c4:	6039      	str	r1, [r7, #0]
 80129c6:	2300      	movs	r3, #0
 80129c8:	60fb      	str	r3, [r7, #12]
 80129ca:	2300      	movs	r3, #0
 80129cc:	75fb      	strb	r3, [r7, #23]
 80129ce:	687b      	ldr	r3, [r7, #4]
 80129d0:	613b      	str	r3, [r7, #16]
 80129d2:	683b      	ldr	r3, [r7, #0]
 80129d4:	785b      	ldrb	r3, [r3, #1]
 80129d6:	2b01      	cmp	r3, #1
 80129d8:	d14a      	bne.n	8012a70 <USB_EPStopXfer+0xb4>
 80129da:	683b      	ldr	r3, [r7, #0]
 80129dc:	781b      	ldrb	r3, [r3, #0]
 80129de:	015a      	lsls	r2, r3, #5
 80129e0:	693b      	ldr	r3, [r7, #16]
 80129e2:	4413      	add	r3, r2
 80129e4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80129e8:	681b      	ldr	r3, [r3, #0]
 80129ea:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80129ee:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80129f2:	f040 8086 	bne.w	8012b02 <USB_EPStopXfer+0x146>
 80129f6:	683b      	ldr	r3, [r7, #0]
 80129f8:	781b      	ldrb	r3, [r3, #0]
 80129fa:	015a      	lsls	r2, r3, #5
 80129fc:	693b      	ldr	r3, [r7, #16]
 80129fe:	4413      	add	r3, r2
 8012a00:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012a04:	681b      	ldr	r3, [r3, #0]
 8012a06:	683a      	ldr	r2, [r7, #0]
 8012a08:	7812      	ldrb	r2, [r2, #0]
 8012a0a:	0151      	lsls	r1, r2, #5
 8012a0c:	693a      	ldr	r2, [r7, #16]
 8012a0e:	440a      	add	r2, r1
 8012a10:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012a14:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8012a18:	6013      	str	r3, [r2, #0]
 8012a1a:	683b      	ldr	r3, [r7, #0]
 8012a1c:	781b      	ldrb	r3, [r3, #0]
 8012a1e:	015a      	lsls	r2, r3, #5
 8012a20:	693b      	ldr	r3, [r7, #16]
 8012a22:	4413      	add	r3, r2
 8012a24:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012a28:	681b      	ldr	r3, [r3, #0]
 8012a2a:	683a      	ldr	r2, [r7, #0]
 8012a2c:	7812      	ldrb	r2, [r2, #0]
 8012a2e:	0151      	lsls	r1, r2, #5
 8012a30:	693a      	ldr	r2, [r7, #16]
 8012a32:	440a      	add	r2, r1
 8012a34:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012a38:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8012a3c:	6013      	str	r3, [r2, #0]
 8012a3e:	68fb      	ldr	r3, [r7, #12]
 8012a40:	3301      	adds	r3, #1
 8012a42:	60fb      	str	r3, [r7, #12]
 8012a44:	68fb      	ldr	r3, [r7, #12]
 8012a46:	f242 7210 	movw	r2, #10000	@ 0x2710
 8012a4a:	4293      	cmp	r3, r2
 8012a4c:	d902      	bls.n	8012a54 <USB_EPStopXfer+0x98>
 8012a4e:	2301      	movs	r3, #1
 8012a50:	75fb      	strb	r3, [r7, #23]
 8012a52:	e056      	b.n	8012b02 <USB_EPStopXfer+0x146>
 8012a54:	683b      	ldr	r3, [r7, #0]
 8012a56:	781b      	ldrb	r3, [r3, #0]
 8012a58:	015a      	lsls	r2, r3, #5
 8012a5a:	693b      	ldr	r3, [r7, #16]
 8012a5c:	4413      	add	r3, r2
 8012a5e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012a62:	681b      	ldr	r3, [r3, #0]
 8012a64:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8012a68:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8012a6c:	d0e7      	beq.n	8012a3e <USB_EPStopXfer+0x82>
 8012a6e:	e048      	b.n	8012b02 <USB_EPStopXfer+0x146>
 8012a70:	683b      	ldr	r3, [r7, #0]
 8012a72:	781b      	ldrb	r3, [r3, #0]
 8012a74:	015a      	lsls	r2, r3, #5
 8012a76:	693b      	ldr	r3, [r7, #16]
 8012a78:	4413      	add	r3, r2
 8012a7a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012a7e:	681b      	ldr	r3, [r3, #0]
 8012a80:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8012a84:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8012a88:	d13b      	bne.n	8012b02 <USB_EPStopXfer+0x146>
 8012a8a:	683b      	ldr	r3, [r7, #0]
 8012a8c:	781b      	ldrb	r3, [r3, #0]
 8012a8e:	015a      	lsls	r2, r3, #5
 8012a90:	693b      	ldr	r3, [r7, #16]
 8012a92:	4413      	add	r3, r2
 8012a94:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012a98:	681b      	ldr	r3, [r3, #0]
 8012a9a:	683a      	ldr	r2, [r7, #0]
 8012a9c:	7812      	ldrb	r2, [r2, #0]
 8012a9e:	0151      	lsls	r1, r2, #5
 8012aa0:	693a      	ldr	r2, [r7, #16]
 8012aa2:	440a      	add	r2, r1
 8012aa4:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012aa8:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8012aac:	6013      	str	r3, [r2, #0]
 8012aae:	683b      	ldr	r3, [r7, #0]
 8012ab0:	781b      	ldrb	r3, [r3, #0]
 8012ab2:	015a      	lsls	r2, r3, #5
 8012ab4:	693b      	ldr	r3, [r7, #16]
 8012ab6:	4413      	add	r3, r2
 8012ab8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012abc:	681b      	ldr	r3, [r3, #0]
 8012abe:	683a      	ldr	r2, [r7, #0]
 8012ac0:	7812      	ldrb	r2, [r2, #0]
 8012ac2:	0151      	lsls	r1, r2, #5
 8012ac4:	693a      	ldr	r2, [r7, #16]
 8012ac6:	440a      	add	r2, r1
 8012ac8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012acc:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8012ad0:	6013      	str	r3, [r2, #0]
 8012ad2:	68fb      	ldr	r3, [r7, #12]
 8012ad4:	3301      	adds	r3, #1
 8012ad6:	60fb      	str	r3, [r7, #12]
 8012ad8:	68fb      	ldr	r3, [r7, #12]
 8012ada:	f242 7210 	movw	r2, #10000	@ 0x2710
 8012ade:	4293      	cmp	r3, r2
 8012ae0:	d902      	bls.n	8012ae8 <USB_EPStopXfer+0x12c>
 8012ae2:	2301      	movs	r3, #1
 8012ae4:	75fb      	strb	r3, [r7, #23]
 8012ae6:	e00c      	b.n	8012b02 <USB_EPStopXfer+0x146>
 8012ae8:	683b      	ldr	r3, [r7, #0]
 8012aea:	781b      	ldrb	r3, [r3, #0]
 8012aec:	015a      	lsls	r2, r3, #5
 8012aee:	693b      	ldr	r3, [r7, #16]
 8012af0:	4413      	add	r3, r2
 8012af2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012af6:	681b      	ldr	r3, [r3, #0]
 8012af8:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8012afc:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8012b00:	d0e7      	beq.n	8012ad2 <USB_EPStopXfer+0x116>
 8012b02:	7dfb      	ldrb	r3, [r7, #23]
 8012b04:	4618      	mov	r0, r3
 8012b06:	371c      	adds	r7, #28
 8012b08:	46bd      	mov	sp, r7
 8012b0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012b0e:	4770      	bx	lr

08012b10 <USB_WritePacket>:
 8012b10:	b480      	push	{r7}
 8012b12:	b089      	sub	sp, #36	@ 0x24
 8012b14:	af00      	add	r7, sp, #0
 8012b16:	60f8      	str	r0, [r7, #12]
 8012b18:	60b9      	str	r1, [r7, #8]
 8012b1a:	4611      	mov	r1, r2
 8012b1c:	461a      	mov	r2, r3
 8012b1e:	460b      	mov	r3, r1
 8012b20:	71fb      	strb	r3, [r7, #7]
 8012b22:	4613      	mov	r3, r2
 8012b24:	80bb      	strh	r3, [r7, #4]
 8012b26:	68fb      	ldr	r3, [r7, #12]
 8012b28:	617b      	str	r3, [r7, #20]
 8012b2a:	68bb      	ldr	r3, [r7, #8]
 8012b2c:	61fb      	str	r3, [r7, #28]
 8012b2e:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8012b32:	2b00      	cmp	r3, #0
 8012b34:	d123      	bne.n	8012b7e <USB_WritePacket+0x6e>
 8012b36:	88bb      	ldrh	r3, [r7, #4]
 8012b38:	3303      	adds	r3, #3
 8012b3a:	089b      	lsrs	r3, r3, #2
 8012b3c:	613b      	str	r3, [r7, #16]
 8012b3e:	2300      	movs	r3, #0
 8012b40:	61bb      	str	r3, [r7, #24]
 8012b42:	e018      	b.n	8012b76 <USB_WritePacket+0x66>
 8012b44:	79fb      	ldrb	r3, [r7, #7]
 8012b46:	031a      	lsls	r2, r3, #12
 8012b48:	697b      	ldr	r3, [r7, #20]
 8012b4a:	4413      	add	r3, r2
 8012b4c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8012b50:	461a      	mov	r2, r3
 8012b52:	69fb      	ldr	r3, [r7, #28]
 8012b54:	681b      	ldr	r3, [r3, #0]
 8012b56:	6013      	str	r3, [r2, #0]
 8012b58:	69fb      	ldr	r3, [r7, #28]
 8012b5a:	3301      	adds	r3, #1
 8012b5c:	61fb      	str	r3, [r7, #28]
 8012b5e:	69fb      	ldr	r3, [r7, #28]
 8012b60:	3301      	adds	r3, #1
 8012b62:	61fb      	str	r3, [r7, #28]
 8012b64:	69fb      	ldr	r3, [r7, #28]
 8012b66:	3301      	adds	r3, #1
 8012b68:	61fb      	str	r3, [r7, #28]
 8012b6a:	69fb      	ldr	r3, [r7, #28]
 8012b6c:	3301      	adds	r3, #1
 8012b6e:	61fb      	str	r3, [r7, #28]
 8012b70:	69bb      	ldr	r3, [r7, #24]
 8012b72:	3301      	adds	r3, #1
 8012b74:	61bb      	str	r3, [r7, #24]
 8012b76:	69ba      	ldr	r2, [r7, #24]
 8012b78:	693b      	ldr	r3, [r7, #16]
 8012b7a:	429a      	cmp	r2, r3
 8012b7c:	d3e2      	bcc.n	8012b44 <USB_WritePacket+0x34>
 8012b7e:	2300      	movs	r3, #0
 8012b80:	4618      	mov	r0, r3
 8012b82:	3724      	adds	r7, #36	@ 0x24
 8012b84:	46bd      	mov	sp, r7
 8012b86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012b8a:	4770      	bx	lr

08012b8c <USB_ReadPacket>:
 8012b8c:	b480      	push	{r7}
 8012b8e:	b08b      	sub	sp, #44	@ 0x2c
 8012b90:	af00      	add	r7, sp, #0
 8012b92:	60f8      	str	r0, [r7, #12]
 8012b94:	60b9      	str	r1, [r7, #8]
 8012b96:	4613      	mov	r3, r2
 8012b98:	80fb      	strh	r3, [r7, #6]
 8012b9a:	68fb      	ldr	r3, [r7, #12]
 8012b9c:	61bb      	str	r3, [r7, #24]
 8012b9e:	68bb      	ldr	r3, [r7, #8]
 8012ba0:	627b      	str	r3, [r7, #36]	@ 0x24
 8012ba2:	88fb      	ldrh	r3, [r7, #6]
 8012ba4:	089b      	lsrs	r3, r3, #2
 8012ba6:	b29b      	uxth	r3, r3
 8012ba8:	617b      	str	r3, [r7, #20]
 8012baa:	88fb      	ldrh	r3, [r7, #6]
 8012bac:	f003 0303 	and.w	r3, r3, #3
 8012bb0:	83fb      	strh	r3, [r7, #30]
 8012bb2:	2300      	movs	r3, #0
 8012bb4:	623b      	str	r3, [r7, #32]
 8012bb6:	e014      	b.n	8012be2 <USB_ReadPacket+0x56>
 8012bb8:	69bb      	ldr	r3, [r7, #24]
 8012bba:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8012bbe:	681a      	ldr	r2, [r3, #0]
 8012bc0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012bc2:	601a      	str	r2, [r3, #0]
 8012bc4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012bc6:	3301      	adds	r3, #1
 8012bc8:	627b      	str	r3, [r7, #36]	@ 0x24
 8012bca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012bcc:	3301      	adds	r3, #1
 8012bce:	627b      	str	r3, [r7, #36]	@ 0x24
 8012bd0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012bd2:	3301      	adds	r3, #1
 8012bd4:	627b      	str	r3, [r7, #36]	@ 0x24
 8012bd6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012bd8:	3301      	adds	r3, #1
 8012bda:	627b      	str	r3, [r7, #36]	@ 0x24
 8012bdc:	6a3b      	ldr	r3, [r7, #32]
 8012bde:	3301      	adds	r3, #1
 8012be0:	623b      	str	r3, [r7, #32]
 8012be2:	6a3a      	ldr	r2, [r7, #32]
 8012be4:	697b      	ldr	r3, [r7, #20]
 8012be6:	429a      	cmp	r2, r3
 8012be8:	d3e6      	bcc.n	8012bb8 <USB_ReadPacket+0x2c>
 8012bea:	8bfb      	ldrh	r3, [r7, #30]
 8012bec:	2b00      	cmp	r3, #0
 8012bee:	d01e      	beq.n	8012c2e <USB_ReadPacket+0xa2>
 8012bf0:	2300      	movs	r3, #0
 8012bf2:	623b      	str	r3, [r7, #32]
 8012bf4:	69bb      	ldr	r3, [r7, #24]
 8012bf6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8012bfa:	461a      	mov	r2, r3
 8012bfc:	f107 0310 	add.w	r3, r7, #16
 8012c00:	6812      	ldr	r2, [r2, #0]
 8012c02:	601a      	str	r2, [r3, #0]
 8012c04:	693a      	ldr	r2, [r7, #16]
 8012c06:	6a3b      	ldr	r3, [r7, #32]
 8012c08:	b2db      	uxtb	r3, r3
 8012c0a:	00db      	lsls	r3, r3, #3
 8012c0c:	fa22 f303 	lsr.w	r3, r2, r3
 8012c10:	b2da      	uxtb	r2, r3
 8012c12:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012c14:	701a      	strb	r2, [r3, #0]
 8012c16:	6a3b      	ldr	r3, [r7, #32]
 8012c18:	3301      	adds	r3, #1
 8012c1a:	623b      	str	r3, [r7, #32]
 8012c1c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012c1e:	3301      	adds	r3, #1
 8012c20:	627b      	str	r3, [r7, #36]	@ 0x24
 8012c22:	8bfb      	ldrh	r3, [r7, #30]
 8012c24:	3b01      	subs	r3, #1
 8012c26:	83fb      	strh	r3, [r7, #30]
 8012c28:	8bfb      	ldrh	r3, [r7, #30]
 8012c2a:	2b00      	cmp	r3, #0
 8012c2c:	d1ea      	bne.n	8012c04 <USB_ReadPacket+0x78>
 8012c2e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012c30:	4618      	mov	r0, r3
 8012c32:	372c      	adds	r7, #44	@ 0x2c
 8012c34:	46bd      	mov	sp, r7
 8012c36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c3a:	4770      	bx	lr

08012c3c <USB_EPSetStall>:
 8012c3c:	b480      	push	{r7}
 8012c3e:	b085      	sub	sp, #20
 8012c40:	af00      	add	r7, sp, #0
 8012c42:	6078      	str	r0, [r7, #4]
 8012c44:	6039      	str	r1, [r7, #0]
 8012c46:	687b      	ldr	r3, [r7, #4]
 8012c48:	60fb      	str	r3, [r7, #12]
 8012c4a:	683b      	ldr	r3, [r7, #0]
 8012c4c:	781b      	ldrb	r3, [r3, #0]
 8012c4e:	60bb      	str	r3, [r7, #8]
 8012c50:	683b      	ldr	r3, [r7, #0]
 8012c52:	785b      	ldrb	r3, [r3, #1]
 8012c54:	2b01      	cmp	r3, #1
 8012c56:	d12c      	bne.n	8012cb2 <USB_EPSetStall+0x76>
 8012c58:	68bb      	ldr	r3, [r7, #8]
 8012c5a:	015a      	lsls	r2, r3, #5
 8012c5c:	68fb      	ldr	r3, [r7, #12]
 8012c5e:	4413      	add	r3, r2
 8012c60:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012c64:	681b      	ldr	r3, [r3, #0]
 8012c66:	2b00      	cmp	r3, #0
 8012c68:	db12      	blt.n	8012c90 <USB_EPSetStall+0x54>
 8012c6a:	68bb      	ldr	r3, [r7, #8]
 8012c6c:	2b00      	cmp	r3, #0
 8012c6e:	d00f      	beq.n	8012c90 <USB_EPSetStall+0x54>
 8012c70:	68bb      	ldr	r3, [r7, #8]
 8012c72:	015a      	lsls	r2, r3, #5
 8012c74:	68fb      	ldr	r3, [r7, #12]
 8012c76:	4413      	add	r3, r2
 8012c78:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012c7c:	681b      	ldr	r3, [r3, #0]
 8012c7e:	68ba      	ldr	r2, [r7, #8]
 8012c80:	0151      	lsls	r1, r2, #5
 8012c82:	68fa      	ldr	r2, [r7, #12]
 8012c84:	440a      	add	r2, r1
 8012c86:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012c8a:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8012c8e:	6013      	str	r3, [r2, #0]
 8012c90:	68bb      	ldr	r3, [r7, #8]
 8012c92:	015a      	lsls	r2, r3, #5
 8012c94:	68fb      	ldr	r3, [r7, #12]
 8012c96:	4413      	add	r3, r2
 8012c98:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012c9c:	681b      	ldr	r3, [r3, #0]
 8012c9e:	68ba      	ldr	r2, [r7, #8]
 8012ca0:	0151      	lsls	r1, r2, #5
 8012ca2:	68fa      	ldr	r2, [r7, #12]
 8012ca4:	440a      	add	r2, r1
 8012ca6:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012caa:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8012cae:	6013      	str	r3, [r2, #0]
 8012cb0:	e02b      	b.n	8012d0a <USB_EPSetStall+0xce>
 8012cb2:	68bb      	ldr	r3, [r7, #8]
 8012cb4:	015a      	lsls	r2, r3, #5
 8012cb6:	68fb      	ldr	r3, [r7, #12]
 8012cb8:	4413      	add	r3, r2
 8012cba:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012cbe:	681b      	ldr	r3, [r3, #0]
 8012cc0:	2b00      	cmp	r3, #0
 8012cc2:	db12      	blt.n	8012cea <USB_EPSetStall+0xae>
 8012cc4:	68bb      	ldr	r3, [r7, #8]
 8012cc6:	2b00      	cmp	r3, #0
 8012cc8:	d00f      	beq.n	8012cea <USB_EPSetStall+0xae>
 8012cca:	68bb      	ldr	r3, [r7, #8]
 8012ccc:	015a      	lsls	r2, r3, #5
 8012cce:	68fb      	ldr	r3, [r7, #12]
 8012cd0:	4413      	add	r3, r2
 8012cd2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012cd6:	681b      	ldr	r3, [r3, #0]
 8012cd8:	68ba      	ldr	r2, [r7, #8]
 8012cda:	0151      	lsls	r1, r2, #5
 8012cdc:	68fa      	ldr	r2, [r7, #12]
 8012cde:	440a      	add	r2, r1
 8012ce0:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012ce4:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8012ce8:	6013      	str	r3, [r2, #0]
 8012cea:	68bb      	ldr	r3, [r7, #8]
 8012cec:	015a      	lsls	r2, r3, #5
 8012cee:	68fb      	ldr	r3, [r7, #12]
 8012cf0:	4413      	add	r3, r2
 8012cf2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012cf6:	681b      	ldr	r3, [r3, #0]
 8012cf8:	68ba      	ldr	r2, [r7, #8]
 8012cfa:	0151      	lsls	r1, r2, #5
 8012cfc:	68fa      	ldr	r2, [r7, #12]
 8012cfe:	440a      	add	r2, r1
 8012d00:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012d04:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8012d08:	6013      	str	r3, [r2, #0]
 8012d0a:	2300      	movs	r3, #0
 8012d0c:	4618      	mov	r0, r3
 8012d0e:	3714      	adds	r7, #20
 8012d10:	46bd      	mov	sp, r7
 8012d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012d16:	4770      	bx	lr

08012d18 <USB_EPClearStall>:
 8012d18:	b480      	push	{r7}
 8012d1a:	b085      	sub	sp, #20
 8012d1c:	af00      	add	r7, sp, #0
 8012d1e:	6078      	str	r0, [r7, #4]
 8012d20:	6039      	str	r1, [r7, #0]
 8012d22:	687b      	ldr	r3, [r7, #4]
 8012d24:	60fb      	str	r3, [r7, #12]
 8012d26:	683b      	ldr	r3, [r7, #0]
 8012d28:	781b      	ldrb	r3, [r3, #0]
 8012d2a:	60bb      	str	r3, [r7, #8]
 8012d2c:	683b      	ldr	r3, [r7, #0]
 8012d2e:	785b      	ldrb	r3, [r3, #1]
 8012d30:	2b01      	cmp	r3, #1
 8012d32:	d128      	bne.n	8012d86 <USB_EPClearStall+0x6e>
 8012d34:	68bb      	ldr	r3, [r7, #8]
 8012d36:	015a      	lsls	r2, r3, #5
 8012d38:	68fb      	ldr	r3, [r7, #12]
 8012d3a:	4413      	add	r3, r2
 8012d3c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012d40:	681b      	ldr	r3, [r3, #0]
 8012d42:	68ba      	ldr	r2, [r7, #8]
 8012d44:	0151      	lsls	r1, r2, #5
 8012d46:	68fa      	ldr	r2, [r7, #12]
 8012d48:	440a      	add	r2, r1
 8012d4a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012d4e:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8012d52:	6013      	str	r3, [r2, #0]
 8012d54:	683b      	ldr	r3, [r7, #0]
 8012d56:	791b      	ldrb	r3, [r3, #4]
 8012d58:	2b03      	cmp	r3, #3
 8012d5a:	d003      	beq.n	8012d64 <USB_EPClearStall+0x4c>
 8012d5c:	683b      	ldr	r3, [r7, #0]
 8012d5e:	791b      	ldrb	r3, [r3, #4]
 8012d60:	2b02      	cmp	r3, #2
 8012d62:	d138      	bne.n	8012dd6 <USB_EPClearStall+0xbe>
 8012d64:	68bb      	ldr	r3, [r7, #8]
 8012d66:	015a      	lsls	r2, r3, #5
 8012d68:	68fb      	ldr	r3, [r7, #12]
 8012d6a:	4413      	add	r3, r2
 8012d6c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012d70:	681b      	ldr	r3, [r3, #0]
 8012d72:	68ba      	ldr	r2, [r7, #8]
 8012d74:	0151      	lsls	r1, r2, #5
 8012d76:	68fa      	ldr	r2, [r7, #12]
 8012d78:	440a      	add	r2, r1
 8012d7a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8012d7e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8012d82:	6013      	str	r3, [r2, #0]
 8012d84:	e027      	b.n	8012dd6 <USB_EPClearStall+0xbe>
 8012d86:	68bb      	ldr	r3, [r7, #8]
 8012d88:	015a      	lsls	r2, r3, #5
 8012d8a:	68fb      	ldr	r3, [r7, #12]
 8012d8c:	4413      	add	r3, r2
 8012d8e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012d92:	681b      	ldr	r3, [r3, #0]
 8012d94:	68ba      	ldr	r2, [r7, #8]
 8012d96:	0151      	lsls	r1, r2, #5
 8012d98:	68fa      	ldr	r2, [r7, #12]
 8012d9a:	440a      	add	r2, r1
 8012d9c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012da0:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8012da4:	6013      	str	r3, [r2, #0]
 8012da6:	683b      	ldr	r3, [r7, #0]
 8012da8:	791b      	ldrb	r3, [r3, #4]
 8012daa:	2b03      	cmp	r3, #3
 8012dac:	d003      	beq.n	8012db6 <USB_EPClearStall+0x9e>
 8012dae:	683b      	ldr	r3, [r7, #0]
 8012db0:	791b      	ldrb	r3, [r3, #4]
 8012db2:	2b02      	cmp	r3, #2
 8012db4:	d10f      	bne.n	8012dd6 <USB_EPClearStall+0xbe>
 8012db6:	68bb      	ldr	r3, [r7, #8]
 8012db8:	015a      	lsls	r2, r3, #5
 8012dba:	68fb      	ldr	r3, [r7, #12]
 8012dbc:	4413      	add	r3, r2
 8012dbe:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012dc2:	681b      	ldr	r3, [r3, #0]
 8012dc4:	68ba      	ldr	r2, [r7, #8]
 8012dc6:	0151      	lsls	r1, r2, #5
 8012dc8:	68fa      	ldr	r2, [r7, #12]
 8012dca:	440a      	add	r2, r1
 8012dcc:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8012dd0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8012dd4:	6013      	str	r3, [r2, #0]
 8012dd6:	2300      	movs	r3, #0
 8012dd8:	4618      	mov	r0, r3
 8012dda:	3714      	adds	r7, #20
 8012ddc:	46bd      	mov	sp, r7
 8012dde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012de2:	4770      	bx	lr

08012de4 <USB_SetDevAddress>:
 8012de4:	b480      	push	{r7}
 8012de6:	b085      	sub	sp, #20
 8012de8:	af00      	add	r7, sp, #0
 8012dea:	6078      	str	r0, [r7, #4]
 8012dec:	460b      	mov	r3, r1
 8012dee:	70fb      	strb	r3, [r7, #3]
 8012df0:	687b      	ldr	r3, [r7, #4]
 8012df2:	60fb      	str	r3, [r7, #12]
 8012df4:	68fb      	ldr	r3, [r7, #12]
 8012df6:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012dfa:	681b      	ldr	r3, [r3, #0]
 8012dfc:	68fa      	ldr	r2, [r7, #12]
 8012dfe:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8012e02:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8012e06:	6013      	str	r3, [r2, #0]
 8012e08:	68fb      	ldr	r3, [r7, #12]
 8012e0a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012e0e:	681a      	ldr	r2, [r3, #0]
 8012e10:	78fb      	ldrb	r3, [r7, #3]
 8012e12:	011b      	lsls	r3, r3, #4
 8012e14:	f403 63fe 	and.w	r3, r3, #2032	@ 0x7f0
 8012e18:	68f9      	ldr	r1, [r7, #12]
 8012e1a:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8012e1e:	4313      	orrs	r3, r2
 8012e20:	600b      	str	r3, [r1, #0]
 8012e22:	2300      	movs	r3, #0
 8012e24:	4618      	mov	r0, r3
 8012e26:	3714      	adds	r7, #20
 8012e28:	46bd      	mov	sp, r7
 8012e2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012e2e:	4770      	bx	lr

08012e30 <USB_DevConnect>:
 8012e30:	b480      	push	{r7}
 8012e32:	b085      	sub	sp, #20
 8012e34:	af00      	add	r7, sp, #0
 8012e36:	6078      	str	r0, [r7, #4]
 8012e38:	687b      	ldr	r3, [r7, #4]
 8012e3a:	60fb      	str	r3, [r7, #12]
 8012e3c:	68fb      	ldr	r3, [r7, #12]
 8012e3e:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8012e42:	681b      	ldr	r3, [r3, #0]
 8012e44:	68fa      	ldr	r2, [r7, #12]
 8012e46:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 8012e4a:	f023 0303 	bic.w	r3, r3, #3
 8012e4e:	6013      	str	r3, [r2, #0]
 8012e50:	68fb      	ldr	r3, [r7, #12]
 8012e52:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012e56:	685b      	ldr	r3, [r3, #4]
 8012e58:	68fa      	ldr	r2, [r7, #12]
 8012e5a:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8012e5e:	f023 0302 	bic.w	r3, r3, #2
 8012e62:	6053      	str	r3, [r2, #4]
 8012e64:	2300      	movs	r3, #0
 8012e66:	4618      	mov	r0, r3
 8012e68:	3714      	adds	r7, #20
 8012e6a:	46bd      	mov	sp, r7
 8012e6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012e70:	4770      	bx	lr

08012e72 <USB_DevDisconnect>:
 8012e72:	b480      	push	{r7}
 8012e74:	b085      	sub	sp, #20
 8012e76:	af00      	add	r7, sp, #0
 8012e78:	6078      	str	r0, [r7, #4]
 8012e7a:	687b      	ldr	r3, [r7, #4]
 8012e7c:	60fb      	str	r3, [r7, #12]
 8012e7e:	68fb      	ldr	r3, [r7, #12]
 8012e80:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8012e84:	681b      	ldr	r3, [r3, #0]
 8012e86:	68fa      	ldr	r2, [r7, #12]
 8012e88:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 8012e8c:	f023 0303 	bic.w	r3, r3, #3
 8012e90:	6013      	str	r3, [r2, #0]
 8012e92:	68fb      	ldr	r3, [r7, #12]
 8012e94:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012e98:	685b      	ldr	r3, [r3, #4]
 8012e9a:	68fa      	ldr	r2, [r7, #12]
 8012e9c:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8012ea0:	f043 0302 	orr.w	r3, r3, #2
 8012ea4:	6053      	str	r3, [r2, #4]
 8012ea6:	2300      	movs	r3, #0
 8012ea8:	4618      	mov	r0, r3
 8012eaa:	3714      	adds	r7, #20
 8012eac:	46bd      	mov	sp, r7
 8012eae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012eb2:	4770      	bx	lr

08012eb4 <USB_ReadInterrupts>:
 8012eb4:	b480      	push	{r7}
 8012eb6:	b085      	sub	sp, #20
 8012eb8:	af00      	add	r7, sp, #0
 8012eba:	6078      	str	r0, [r7, #4]
 8012ebc:	687b      	ldr	r3, [r7, #4]
 8012ebe:	695b      	ldr	r3, [r3, #20]
 8012ec0:	60fb      	str	r3, [r7, #12]
 8012ec2:	687b      	ldr	r3, [r7, #4]
 8012ec4:	699b      	ldr	r3, [r3, #24]
 8012ec6:	68fa      	ldr	r2, [r7, #12]
 8012ec8:	4013      	ands	r3, r2
 8012eca:	60fb      	str	r3, [r7, #12]
 8012ecc:	68fb      	ldr	r3, [r7, #12]
 8012ece:	4618      	mov	r0, r3
 8012ed0:	3714      	adds	r7, #20
 8012ed2:	46bd      	mov	sp, r7
 8012ed4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012ed8:	4770      	bx	lr

08012eda <USB_ReadDevAllOutEpInterrupt>:
 8012eda:	b480      	push	{r7}
 8012edc:	b085      	sub	sp, #20
 8012ede:	af00      	add	r7, sp, #0
 8012ee0:	6078      	str	r0, [r7, #4]
 8012ee2:	687b      	ldr	r3, [r7, #4]
 8012ee4:	60fb      	str	r3, [r7, #12]
 8012ee6:	68fb      	ldr	r3, [r7, #12]
 8012ee8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012eec:	699b      	ldr	r3, [r3, #24]
 8012eee:	60bb      	str	r3, [r7, #8]
 8012ef0:	68fb      	ldr	r3, [r7, #12]
 8012ef2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012ef6:	69db      	ldr	r3, [r3, #28]
 8012ef8:	68ba      	ldr	r2, [r7, #8]
 8012efa:	4013      	ands	r3, r2
 8012efc:	60bb      	str	r3, [r7, #8]
 8012efe:	68bb      	ldr	r3, [r7, #8]
 8012f00:	0c1b      	lsrs	r3, r3, #16
 8012f02:	4618      	mov	r0, r3
 8012f04:	3714      	adds	r7, #20
 8012f06:	46bd      	mov	sp, r7
 8012f08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012f0c:	4770      	bx	lr

08012f0e <USB_ReadDevAllInEpInterrupt>:
 8012f0e:	b480      	push	{r7}
 8012f10:	b085      	sub	sp, #20
 8012f12:	af00      	add	r7, sp, #0
 8012f14:	6078      	str	r0, [r7, #4]
 8012f16:	687b      	ldr	r3, [r7, #4]
 8012f18:	60fb      	str	r3, [r7, #12]
 8012f1a:	68fb      	ldr	r3, [r7, #12]
 8012f1c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012f20:	699b      	ldr	r3, [r3, #24]
 8012f22:	60bb      	str	r3, [r7, #8]
 8012f24:	68fb      	ldr	r3, [r7, #12]
 8012f26:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012f2a:	69db      	ldr	r3, [r3, #28]
 8012f2c:	68ba      	ldr	r2, [r7, #8]
 8012f2e:	4013      	ands	r3, r2
 8012f30:	60bb      	str	r3, [r7, #8]
 8012f32:	68bb      	ldr	r3, [r7, #8]
 8012f34:	b29b      	uxth	r3, r3
 8012f36:	4618      	mov	r0, r3
 8012f38:	3714      	adds	r7, #20
 8012f3a:	46bd      	mov	sp, r7
 8012f3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012f40:	4770      	bx	lr

08012f42 <USB_ReadDevOutEPInterrupt>:
 8012f42:	b480      	push	{r7}
 8012f44:	b085      	sub	sp, #20
 8012f46:	af00      	add	r7, sp, #0
 8012f48:	6078      	str	r0, [r7, #4]
 8012f4a:	460b      	mov	r3, r1
 8012f4c:	70fb      	strb	r3, [r7, #3]
 8012f4e:	687b      	ldr	r3, [r7, #4]
 8012f50:	60fb      	str	r3, [r7, #12]
 8012f52:	78fb      	ldrb	r3, [r7, #3]
 8012f54:	015a      	lsls	r2, r3, #5
 8012f56:	68fb      	ldr	r3, [r7, #12]
 8012f58:	4413      	add	r3, r2
 8012f5a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012f5e:	689b      	ldr	r3, [r3, #8]
 8012f60:	60bb      	str	r3, [r7, #8]
 8012f62:	68fb      	ldr	r3, [r7, #12]
 8012f64:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012f68:	695b      	ldr	r3, [r3, #20]
 8012f6a:	68ba      	ldr	r2, [r7, #8]
 8012f6c:	4013      	ands	r3, r2
 8012f6e:	60bb      	str	r3, [r7, #8]
 8012f70:	68bb      	ldr	r3, [r7, #8]
 8012f72:	4618      	mov	r0, r3
 8012f74:	3714      	adds	r7, #20
 8012f76:	46bd      	mov	sp, r7
 8012f78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012f7c:	4770      	bx	lr

08012f7e <USB_ReadDevInEPInterrupt>:
 8012f7e:	b480      	push	{r7}
 8012f80:	b087      	sub	sp, #28
 8012f82:	af00      	add	r7, sp, #0
 8012f84:	6078      	str	r0, [r7, #4]
 8012f86:	460b      	mov	r3, r1
 8012f88:	70fb      	strb	r3, [r7, #3]
 8012f8a:	687b      	ldr	r3, [r7, #4]
 8012f8c:	617b      	str	r3, [r7, #20]
 8012f8e:	697b      	ldr	r3, [r7, #20]
 8012f90:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012f94:	691b      	ldr	r3, [r3, #16]
 8012f96:	613b      	str	r3, [r7, #16]
 8012f98:	697b      	ldr	r3, [r7, #20]
 8012f9a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8012f9e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012fa0:	60fb      	str	r3, [r7, #12]
 8012fa2:	78fb      	ldrb	r3, [r7, #3]
 8012fa4:	f003 030f 	and.w	r3, r3, #15
 8012fa8:	68fa      	ldr	r2, [r7, #12]
 8012faa:	fa22 f303 	lsr.w	r3, r2, r3
 8012fae:	01db      	lsls	r3, r3, #7
 8012fb0:	b2db      	uxtb	r3, r3
 8012fb2:	693a      	ldr	r2, [r7, #16]
 8012fb4:	4313      	orrs	r3, r2
 8012fb6:	613b      	str	r3, [r7, #16]
 8012fb8:	78fb      	ldrb	r3, [r7, #3]
 8012fba:	015a      	lsls	r2, r3, #5
 8012fbc:	697b      	ldr	r3, [r7, #20]
 8012fbe:	4413      	add	r3, r2
 8012fc0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012fc4:	689b      	ldr	r3, [r3, #8]
 8012fc6:	693a      	ldr	r2, [r7, #16]
 8012fc8:	4013      	ands	r3, r2
 8012fca:	60bb      	str	r3, [r7, #8]
 8012fcc:	68bb      	ldr	r3, [r7, #8]
 8012fce:	4618      	mov	r0, r3
 8012fd0:	371c      	adds	r7, #28
 8012fd2:	46bd      	mov	sp, r7
 8012fd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012fd8:	4770      	bx	lr

08012fda <USB_GetMode>:
 8012fda:	b480      	push	{r7}
 8012fdc:	b083      	sub	sp, #12
 8012fde:	af00      	add	r7, sp, #0
 8012fe0:	6078      	str	r0, [r7, #4]
 8012fe2:	687b      	ldr	r3, [r7, #4]
 8012fe4:	695b      	ldr	r3, [r3, #20]
 8012fe6:	f003 0301 	and.w	r3, r3, #1
 8012fea:	4618      	mov	r0, r3
 8012fec:	370c      	adds	r7, #12
 8012fee:	46bd      	mov	sp, r7
 8012ff0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012ff4:	4770      	bx	lr
	...

08012ff8 <USB_ActivateSetup>:
 8012ff8:	b480      	push	{r7}
 8012ffa:	b085      	sub	sp, #20
 8012ffc:	af00      	add	r7, sp, #0
 8012ffe:	6078      	str	r0, [r7, #4]
 8013000:	687b      	ldr	r3, [r7, #4]
 8013002:	60fb      	str	r3, [r7, #12]
 8013004:	68fb      	ldr	r3, [r7, #12]
 8013006:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801300a:	681a      	ldr	r2, [r3, #0]
 801300c:	68fb      	ldr	r3, [r7, #12]
 801300e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013012:	4619      	mov	r1, r3
 8013014:	4b09      	ldr	r3, [pc, #36]	@ (801303c <USB_ActivateSetup+0x44>)
 8013016:	4013      	ands	r3, r2
 8013018:	600b      	str	r3, [r1, #0]
 801301a:	68fb      	ldr	r3, [r7, #12]
 801301c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013020:	685b      	ldr	r3, [r3, #4]
 8013022:	68fa      	ldr	r2, [r7, #12]
 8013024:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8013028:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 801302c:	6053      	str	r3, [r2, #4]
 801302e:	2300      	movs	r3, #0
 8013030:	4618      	mov	r0, r3
 8013032:	3714      	adds	r7, #20
 8013034:	46bd      	mov	sp, r7
 8013036:	f85d 7b04 	ldr.w	r7, [sp], #4
 801303a:	4770      	bx	lr
 801303c:	fffff800 	.word	0xfffff800

08013040 <USB_EP0_OutStart>:
 8013040:	b480      	push	{r7}
 8013042:	b087      	sub	sp, #28
 8013044:	af00      	add	r7, sp, #0
 8013046:	60f8      	str	r0, [r7, #12]
 8013048:	460b      	mov	r3, r1
 801304a:	607a      	str	r2, [r7, #4]
 801304c:	72fb      	strb	r3, [r7, #11]
 801304e:	68fb      	ldr	r3, [r7, #12]
 8013050:	617b      	str	r3, [r7, #20]
 8013052:	68fb      	ldr	r3, [r7, #12]
 8013054:	333c      	adds	r3, #60	@ 0x3c
 8013056:	3304      	adds	r3, #4
 8013058:	681b      	ldr	r3, [r3, #0]
 801305a:	613b      	str	r3, [r7, #16]
 801305c:	693b      	ldr	r3, [r7, #16]
 801305e:	4a26      	ldr	r2, [pc, #152]	@ (80130f8 <USB_EP0_OutStart+0xb8>)
 8013060:	4293      	cmp	r3, r2
 8013062:	d90a      	bls.n	801307a <USB_EP0_OutStart+0x3a>
 8013064:	697b      	ldr	r3, [r7, #20]
 8013066:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801306a:	681b      	ldr	r3, [r3, #0]
 801306c:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8013070:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8013074:	d101      	bne.n	801307a <USB_EP0_OutStart+0x3a>
 8013076:	2300      	movs	r3, #0
 8013078:	e037      	b.n	80130ea <USB_EP0_OutStart+0xaa>
 801307a:	697b      	ldr	r3, [r7, #20]
 801307c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013080:	461a      	mov	r2, r3
 8013082:	2300      	movs	r3, #0
 8013084:	6113      	str	r3, [r2, #16]
 8013086:	697b      	ldr	r3, [r7, #20]
 8013088:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801308c:	691b      	ldr	r3, [r3, #16]
 801308e:	697a      	ldr	r2, [r7, #20]
 8013090:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8013094:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8013098:	6113      	str	r3, [r2, #16]
 801309a:	697b      	ldr	r3, [r7, #20]
 801309c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80130a0:	691b      	ldr	r3, [r3, #16]
 80130a2:	697a      	ldr	r2, [r7, #20]
 80130a4:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80130a8:	f043 0318 	orr.w	r3, r3, #24
 80130ac:	6113      	str	r3, [r2, #16]
 80130ae:	697b      	ldr	r3, [r7, #20]
 80130b0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80130b4:	691b      	ldr	r3, [r3, #16]
 80130b6:	697a      	ldr	r2, [r7, #20]
 80130b8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80130bc:	f043 43c0 	orr.w	r3, r3, #1610612736	@ 0x60000000
 80130c0:	6113      	str	r3, [r2, #16]
 80130c2:	7afb      	ldrb	r3, [r7, #11]
 80130c4:	2b01      	cmp	r3, #1
 80130c6:	d10f      	bne.n	80130e8 <USB_EP0_OutStart+0xa8>
 80130c8:	697b      	ldr	r3, [r7, #20]
 80130ca:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80130ce:	461a      	mov	r2, r3
 80130d0:	687b      	ldr	r3, [r7, #4]
 80130d2:	6153      	str	r3, [r2, #20]
 80130d4:	697b      	ldr	r3, [r7, #20]
 80130d6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80130da:	681b      	ldr	r3, [r3, #0]
 80130dc:	697a      	ldr	r2, [r7, #20]
 80130de:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80130e2:	f043 2380 	orr.w	r3, r3, #2147516416	@ 0x80008000
 80130e6:	6013      	str	r3, [r2, #0]
 80130e8:	2300      	movs	r3, #0
 80130ea:	4618      	mov	r0, r3
 80130ec:	371c      	adds	r7, #28
 80130ee:	46bd      	mov	sp, r7
 80130f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80130f4:	4770      	bx	lr
 80130f6:	bf00      	nop
 80130f8:	4f54300a 	.word	0x4f54300a

080130fc <USB_CoreReset>:
 80130fc:	b480      	push	{r7}
 80130fe:	b085      	sub	sp, #20
 8013100:	af00      	add	r7, sp, #0
 8013102:	6078      	str	r0, [r7, #4]
 8013104:	2300      	movs	r3, #0
 8013106:	60fb      	str	r3, [r7, #12]
 8013108:	68fb      	ldr	r3, [r7, #12]
 801310a:	3301      	adds	r3, #1
 801310c:	60fb      	str	r3, [r7, #12]
 801310e:	68fb      	ldr	r3, [r7, #12]
 8013110:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8013114:	d901      	bls.n	801311a <USB_CoreReset+0x1e>
 8013116:	2303      	movs	r3, #3
 8013118:	e01b      	b.n	8013152 <USB_CoreReset+0x56>
 801311a:	687b      	ldr	r3, [r7, #4]
 801311c:	691b      	ldr	r3, [r3, #16]
 801311e:	2b00      	cmp	r3, #0
 8013120:	daf2      	bge.n	8013108 <USB_CoreReset+0xc>
 8013122:	2300      	movs	r3, #0
 8013124:	60fb      	str	r3, [r7, #12]
 8013126:	687b      	ldr	r3, [r7, #4]
 8013128:	691b      	ldr	r3, [r3, #16]
 801312a:	f043 0201 	orr.w	r2, r3, #1
 801312e:	687b      	ldr	r3, [r7, #4]
 8013130:	611a      	str	r2, [r3, #16]
 8013132:	68fb      	ldr	r3, [r7, #12]
 8013134:	3301      	adds	r3, #1
 8013136:	60fb      	str	r3, [r7, #12]
 8013138:	68fb      	ldr	r3, [r7, #12]
 801313a:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 801313e:	d901      	bls.n	8013144 <USB_CoreReset+0x48>
 8013140:	2303      	movs	r3, #3
 8013142:	e006      	b.n	8013152 <USB_CoreReset+0x56>
 8013144:	687b      	ldr	r3, [r7, #4]
 8013146:	691b      	ldr	r3, [r3, #16]
 8013148:	f003 0301 	and.w	r3, r3, #1
 801314c:	2b01      	cmp	r3, #1
 801314e:	d0f0      	beq.n	8013132 <USB_CoreReset+0x36>
 8013150:	2300      	movs	r3, #0
 8013152:	4618      	mov	r0, r3
 8013154:	3714      	adds	r7, #20
 8013156:	46bd      	mov	sp, r7
 8013158:	f85d 7b04 	ldr.w	r7, [sp], #4
 801315c:	4770      	bx	lr
	...

08013160 <USBD_CDC_Init>:
 8013160:	b580      	push	{r7, lr}
 8013162:	b084      	sub	sp, #16
 8013164:	af00      	add	r7, sp, #0
 8013166:	6078      	str	r0, [r7, #4]
 8013168:	460b      	mov	r3, r1
 801316a:	70fb      	strb	r3, [r7, #3]
 801316c:	f44f 7007 	mov.w	r0, #540	@ 0x21c
 8013170:	f002 fcca 	bl	8015b08 <USBD_static_malloc>
 8013174:	60f8      	str	r0, [r7, #12]
 8013176:	68fb      	ldr	r3, [r7, #12]
 8013178:	2b00      	cmp	r3, #0
 801317a:	d109      	bne.n	8013190 <USBD_CDC_Init+0x30>
 801317c:	687b      	ldr	r3, [r7, #4]
 801317e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013182:	687b      	ldr	r3, [r7, #4]
 8013184:	32b0      	adds	r2, #176	@ 0xb0
 8013186:	2100      	movs	r1, #0
 8013188:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 801318c:	2302      	movs	r3, #2
 801318e:	e0d4      	b.n	801333a <USBD_CDC_Init+0x1da>
 8013190:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 8013194:	2100      	movs	r1, #0
 8013196:	68f8      	ldr	r0, [r7, #12]
 8013198:	f004 f89f 	bl	80172da <memset>
 801319c:	687b      	ldr	r3, [r7, #4]
 801319e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80131a2:	687b      	ldr	r3, [r7, #4]
 80131a4:	32b0      	adds	r2, #176	@ 0xb0
 80131a6:	68f9      	ldr	r1, [r7, #12]
 80131a8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80131ac:	687b      	ldr	r3, [r7, #4]
 80131ae:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80131b2:	687b      	ldr	r3, [r7, #4]
 80131b4:	32b0      	adds	r2, #176	@ 0xb0
 80131b6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80131ba:	687b      	ldr	r3, [r7, #4]
 80131bc:	f8c3 22bc 	str.w	r2, [r3, #700]	@ 0x2bc
 80131c0:	687b      	ldr	r3, [r7, #4]
 80131c2:	7c1b      	ldrb	r3, [r3, #16]
 80131c4:	2b00      	cmp	r3, #0
 80131c6:	d138      	bne.n	801323a <USBD_CDC_Init+0xda>
 80131c8:	4b5e      	ldr	r3, [pc, #376]	@ (8013344 <USBD_CDC_Init+0x1e4>)
 80131ca:	7819      	ldrb	r1, [r3, #0]
 80131cc:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80131d0:	2202      	movs	r2, #2
 80131d2:	6878      	ldr	r0, [r7, #4]
 80131d4:	f002 fb75 	bl	80158c2 <USBD_LL_OpenEP>
 80131d8:	4b5a      	ldr	r3, [pc, #360]	@ (8013344 <USBD_CDC_Init+0x1e4>)
 80131da:	781b      	ldrb	r3, [r3, #0]
 80131dc:	f003 020f 	and.w	r2, r3, #15
 80131e0:	6879      	ldr	r1, [r7, #4]
 80131e2:	4613      	mov	r3, r2
 80131e4:	009b      	lsls	r3, r3, #2
 80131e6:	4413      	add	r3, r2
 80131e8:	009b      	lsls	r3, r3, #2
 80131ea:	440b      	add	r3, r1
 80131ec:	3324      	adds	r3, #36	@ 0x24
 80131ee:	2201      	movs	r2, #1
 80131f0:	801a      	strh	r2, [r3, #0]
 80131f2:	4b55      	ldr	r3, [pc, #340]	@ (8013348 <USBD_CDC_Init+0x1e8>)
 80131f4:	7819      	ldrb	r1, [r3, #0]
 80131f6:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80131fa:	2202      	movs	r2, #2
 80131fc:	6878      	ldr	r0, [r7, #4]
 80131fe:	f002 fb60 	bl	80158c2 <USBD_LL_OpenEP>
 8013202:	4b51      	ldr	r3, [pc, #324]	@ (8013348 <USBD_CDC_Init+0x1e8>)
 8013204:	781b      	ldrb	r3, [r3, #0]
 8013206:	f003 020f 	and.w	r2, r3, #15
 801320a:	6879      	ldr	r1, [r7, #4]
 801320c:	4613      	mov	r3, r2
 801320e:	009b      	lsls	r3, r3, #2
 8013210:	4413      	add	r3, r2
 8013212:	009b      	lsls	r3, r3, #2
 8013214:	440b      	add	r3, r1
 8013216:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 801321a:	2201      	movs	r2, #1
 801321c:	801a      	strh	r2, [r3, #0]
 801321e:	4b4b      	ldr	r3, [pc, #300]	@ (801334c <USBD_CDC_Init+0x1ec>)
 8013220:	781b      	ldrb	r3, [r3, #0]
 8013222:	f003 020f 	and.w	r2, r3, #15
 8013226:	6879      	ldr	r1, [r7, #4]
 8013228:	4613      	mov	r3, r2
 801322a:	009b      	lsls	r3, r3, #2
 801322c:	4413      	add	r3, r2
 801322e:	009b      	lsls	r3, r3, #2
 8013230:	440b      	add	r3, r1
 8013232:	3326      	adds	r3, #38	@ 0x26
 8013234:	2210      	movs	r2, #16
 8013236:	801a      	strh	r2, [r3, #0]
 8013238:	e035      	b.n	80132a6 <USBD_CDC_Init+0x146>
 801323a:	4b42      	ldr	r3, [pc, #264]	@ (8013344 <USBD_CDC_Init+0x1e4>)
 801323c:	7819      	ldrb	r1, [r3, #0]
 801323e:	2340      	movs	r3, #64	@ 0x40
 8013240:	2202      	movs	r2, #2
 8013242:	6878      	ldr	r0, [r7, #4]
 8013244:	f002 fb3d 	bl	80158c2 <USBD_LL_OpenEP>
 8013248:	4b3e      	ldr	r3, [pc, #248]	@ (8013344 <USBD_CDC_Init+0x1e4>)
 801324a:	781b      	ldrb	r3, [r3, #0]
 801324c:	f003 020f 	and.w	r2, r3, #15
 8013250:	6879      	ldr	r1, [r7, #4]
 8013252:	4613      	mov	r3, r2
 8013254:	009b      	lsls	r3, r3, #2
 8013256:	4413      	add	r3, r2
 8013258:	009b      	lsls	r3, r3, #2
 801325a:	440b      	add	r3, r1
 801325c:	3324      	adds	r3, #36	@ 0x24
 801325e:	2201      	movs	r2, #1
 8013260:	801a      	strh	r2, [r3, #0]
 8013262:	4b39      	ldr	r3, [pc, #228]	@ (8013348 <USBD_CDC_Init+0x1e8>)
 8013264:	7819      	ldrb	r1, [r3, #0]
 8013266:	2340      	movs	r3, #64	@ 0x40
 8013268:	2202      	movs	r2, #2
 801326a:	6878      	ldr	r0, [r7, #4]
 801326c:	f002 fb29 	bl	80158c2 <USBD_LL_OpenEP>
 8013270:	4b35      	ldr	r3, [pc, #212]	@ (8013348 <USBD_CDC_Init+0x1e8>)
 8013272:	781b      	ldrb	r3, [r3, #0]
 8013274:	f003 020f 	and.w	r2, r3, #15
 8013278:	6879      	ldr	r1, [r7, #4]
 801327a:	4613      	mov	r3, r2
 801327c:	009b      	lsls	r3, r3, #2
 801327e:	4413      	add	r3, r2
 8013280:	009b      	lsls	r3, r3, #2
 8013282:	440b      	add	r3, r1
 8013284:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 8013288:	2201      	movs	r2, #1
 801328a:	801a      	strh	r2, [r3, #0]
 801328c:	4b2f      	ldr	r3, [pc, #188]	@ (801334c <USBD_CDC_Init+0x1ec>)
 801328e:	781b      	ldrb	r3, [r3, #0]
 8013290:	f003 020f 	and.w	r2, r3, #15
 8013294:	6879      	ldr	r1, [r7, #4]
 8013296:	4613      	mov	r3, r2
 8013298:	009b      	lsls	r3, r3, #2
 801329a:	4413      	add	r3, r2
 801329c:	009b      	lsls	r3, r3, #2
 801329e:	440b      	add	r3, r1
 80132a0:	3326      	adds	r3, #38	@ 0x26
 80132a2:	2210      	movs	r2, #16
 80132a4:	801a      	strh	r2, [r3, #0]
 80132a6:	4b29      	ldr	r3, [pc, #164]	@ (801334c <USBD_CDC_Init+0x1ec>)
 80132a8:	7819      	ldrb	r1, [r3, #0]
 80132aa:	2308      	movs	r3, #8
 80132ac:	2203      	movs	r2, #3
 80132ae:	6878      	ldr	r0, [r7, #4]
 80132b0:	f002 fb07 	bl	80158c2 <USBD_LL_OpenEP>
 80132b4:	4b25      	ldr	r3, [pc, #148]	@ (801334c <USBD_CDC_Init+0x1ec>)
 80132b6:	781b      	ldrb	r3, [r3, #0]
 80132b8:	f003 020f 	and.w	r2, r3, #15
 80132bc:	6879      	ldr	r1, [r7, #4]
 80132be:	4613      	mov	r3, r2
 80132c0:	009b      	lsls	r3, r3, #2
 80132c2:	4413      	add	r3, r2
 80132c4:	009b      	lsls	r3, r3, #2
 80132c6:	440b      	add	r3, r1
 80132c8:	3324      	adds	r3, #36	@ 0x24
 80132ca:	2201      	movs	r2, #1
 80132cc:	801a      	strh	r2, [r3, #0]
 80132ce:	68fb      	ldr	r3, [r7, #12]
 80132d0:	2200      	movs	r2, #0
 80132d2:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 80132d6:	687b      	ldr	r3, [r7, #4]
 80132d8:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80132dc:	687a      	ldr	r2, [r7, #4]
 80132de:	33b0      	adds	r3, #176	@ 0xb0
 80132e0:	009b      	lsls	r3, r3, #2
 80132e2:	4413      	add	r3, r2
 80132e4:	685b      	ldr	r3, [r3, #4]
 80132e6:	681b      	ldr	r3, [r3, #0]
 80132e8:	4798      	blx	r3
 80132ea:	68fb      	ldr	r3, [r7, #12]
 80132ec:	2200      	movs	r2, #0
 80132ee:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 80132f2:	68fb      	ldr	r3, [r7, #12]
 80132f4:	2200      	movs	r2, #0
 80132f6:	f8c3 2218 	str.w	r2, [r3, #536]	@ 0x218
 80132fa:	68fb      	ldr	r3, [r7, #12]
 80132fc:	f8d3 3204 	ldr.w	r3, [r3, #516]	@ 0x204
 8013300:	2b00      	cmp	r3, #0
 8013302:	d101      	bne.n	8013308 <USBD_CDC_Init+0x1a8>
 8013304:	2302      	movs	r3, #2
 8013306:	e018      	b.n	801333a <USBD_CDC_Init+0x1da>
 8013308:	687b      	ldr	r3, [r7, #4]
 801330a:	7c1b      	ldrb	r3, [r3, #16]
 801330c:	2b00      	cmp	r3, #0
 801330e:	d10a      	bne.n	8013326 <USBD_CDC_Init+0x1c6>
 8013310:	4b0d      	ldr	r3, [pc, #52]	@ (8013348 <USBD_CDC_Init+0x1e8>)
 8013312:	7819      	ldrb	r1, [r3, #0]
 8013314:	68fb      	ldr	r3, [r7, #12]
 8013316:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 801331a:	f44f 7300 	mov.w	r3, #512	@ 0x200
 801331e:	6878      	ldr	r0, [r7, #4]
 8013320:	f002 fbbe 	bl	8015aa0 <USBD_LL_PrepareReceive>
 8013324:	e008      	b.n	8013338 <USBD_CDC_Init+0x1d8>
 8013326:	4b08      	ldr	r3, [pc, #32]	@ (8013348 <USBD_CDC_Init+0x1e8>)
 8013328:	7819      	ldrb	r1, [r3, #0]
 801332a:	68fb      	ldr	r3, [r7, #12]
 801332c:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8013330:	2340      	movs	r3, #64	@ 0x40
 8013332:	6878      	ldr	r0, [r7, #4]
 8013334:	f002 fbb4 	bl	8015aa0 <USBD_LL_PrepareReceive>
 8013338:	2300      	movs	r3, #0
 801333a:	4618      	mov	r0, r3
 801333c:	3710      	adds	r7, #16
 801333e:	46bd      	mov	sp, r7
 8013340:	bd80      	pop	{r7, pc}
 8013342:	bf00      	nop
 8013344:	24000097 	.word	0x24000097
 8013348:	24000098 	.word	0x24000098
 801334c:	24000099 	.word	0x24000099

08013350 <USBD_CDC_DeInit>:
 8013350:	b580      	push	{r7, lr}
 8013352:	b082      	sub	sp, #8
 8013354:	af00      	add	r7, sp, #0
 8013356:	6078      	str	r0, [r7, #4]
 8013358:	460b      	mov	r3, r1
 801335a:	70fb      	strb	r3, [r7, #3]
 801335c:	4b3a      	ldr	r3, [pc, #232]	@ (8013448 <USBD_CDC_DeInit+0xf8>)
 801335e:	781b      	ldrb	r3, [r3, #0]
 8013360:	4619      	mov	r1, r3
 8013362:	6878      	ldr	r0, [r7, #4]
 8013364:	f002 fad3 	bl	801590e <USBD_LL_CloseEP>
 8013368:	4b37      	ldr	r3, [pc, #220]	@ (8013448 <USBD_CDC_DeInit+0xf8>)
 801336a:	781b      	ldrb	r3, [r3, #0]
 801336c:	f003 020f 	and.w	r2, r3, #15
 8013370:	6879      	ldr	r1, [r7, #4]
 8013372:	4613      	mov	r3, r2
 8013374:	009b      	lsls	r3, r3, #2
 8013376:	4413      	add	r3, r2
 8013378:	009b      	lsls	r3, r3, #2
 801337a:	440b      	add	r3, r1
 801337c:	3324      	adds	r3, #36	@ 0x24
 801337e:	2200      	movs	r2, #0
 8013380:	801a      	strh	r2, [r3, #0]
 8013382:	4b32      	ldr	r3, [pc, #200]	@ (801344c <USBD_CDC_DeInit+0xfc>)
 8013384:	781b      	ldrb	r3, [r3, #0]
 8013386:	4619      	mov	r1, r3
 8013388:	6878      	ldr	r0, [r7, #4]
 801338a:	f002 fac0 	bl	801590e <USBD_LL_CloseEP>
 801338e:	4b2f      	ldr	r3, [pc, #188]	@ (801344c <USBD_CDC_DeInit+0xfc>)
 8013390:	781b      	ldrb	r3, [r3, #0]
 8013392:	f003 020f 	and.w	r2, r3, #15
 8013396:	6879      	ldr	r1, [r7, #4]
 8013398:	4613      	mov	r3, r2
 801339a:	009b      	lsls	r3, r3, #2
 801339c:	4413      	add	r3, r2
 801339e:	009b      	lsls	r3, r3, #2
 80133a0:	440b      	add	r3, r1
 80133a2:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 80133a6:	2200      	movs	r2, #0
 80133a8:	801a      	strh	r2, [r3, #0]
 80133aa:	4b29      	ldr	r3, [pc, #164]	@ (8013450 <USBD_CDC_DeInit+0x100>)
 80133ac:	781b      	ldrb	r3, [r3, #0]
 80133ae:	4619      	mov	r1, r3
 80133b0:	6878      	ldr	r0, [r7, #4]
 80133b2:	f002 faac 	bl	801590e <USBD_LL_CloseEP>
 80133b6:	4b26      	ldr	r3, [pc, #152]	@ (8013450 <USBD_CDC_DeInit+0x100>)
 80133b8:	781b      	ldrb	r3, [r3, #0]
 80133ba:	f003 020f 	and.w	r2, r3, #15
 80133be:	6879      	ldr	r1, [r7, #4]
 80133c0:	4613      	mov	r3, r2
 80133c2:	009b      	lsls	r3, r3, #2
 80133c4:	4413      	add	r3, r2
 80133c6:	009b      	lsls	r3, r3, #2
 80133c8:	440b      	add	r3, r1
 80133ca:	3324      	adds	r3, #36	@ 0x24
 80133cc:	2200      	movs	r2, #0
 80133ce:	801a      	strh	r2, [r3, #0]
 80133d0:	4b1f      	ldr	r3, [pc, #124]	@ (8013450 <USBD_CDC_DeInit+0x100>)
 80133d2:	781b      	ldrb	r3, [r3, #0]
 80133d4:	f003 020f 	and.w	r2, r3, #15
 80133d8:	6879      	ldr	r1, [r7, #4]
 80133da:	4613      	mov	r3, r2
 80133dc:	009b      	lsls	r3, r3, #2
 80133de:	4413      	add	r3, r2
 80133e0:	009b      	lsls	r3, r3, #2
 80133e2:	440b      	add	r3, r1
 80133e4:	3326      	adds	r3, #38	@ 0x26
 80133e6:	2200      	movs	r2, #0
 80133e8:	801a      	strh	r2, [r3, #0]
 80133ea:	687b      	ldr	r3, [r7, #4]
 80133ec:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80133f0:	687b      	ldr	r3, [r7, #4]
 80133f2:	32b0      	adds	r2, #176	@ 0xb0
 80133f4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80133f8:	2b00      	cmp	r3, #0
 80133fa:	d01f      	beq.n	801343c <USBD_CDC_DeInit+0xec>
 80133fc:	687b      	ldr	r3, [r7, #4]
 80133fe:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8013402:	687a      	ldr	r2, [r7, #4]
 8013404:	33b0      	adds	r3, #176	@ 0xb0
 8013406:	009b      	lsls	r3, r3, #2
 8013408:	4413      	add	r3, r2
 801340a:	685b      	ldr	r3, [r3, #4]
 801340c:	685b      	ldr	r3, [r3, #4]
 801340e:	4798      	blx	r3
 8013410:	687b      	ldr	r3, [r7, #4]
 8013412:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013416:	687b      	ldr	r3, [r7, #4]
 8013418:	32b0      	adds	r2, #176	@ 0xb0
 801341a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801341e:	4618      	mov	r0, r3
 8013420:	f002 fb80 	bl	8015b24 <USBD_static_free>
 8013424:	687b      	ldr	r3, [r7, #4]
 8013426:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801342a:	687b      	ldr	r3, [r7, #4]
 801342c:	32b0      	adds	r2, #176	@ 0xb0
 801342e:	2100      	movs	r1, #0
 8013430:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8013434:	687b      	ldr	r3, [r7, #4]
 8013436:	2200      	movs	r2, #0
 8013438:	f8c3 22bc 	str.w	r2, [r3, #700]	@ 0x2bc
 801343c:	2300      	movs	r3, #0
 801343e:	4618      	mov	r0, r3
 8013440:	3708      	adds	r7, #8
 8013442:	46bd      	mov	sp, r7
 8013444:	bd80      	pop	{r7, pc}
 8013446:	bf00      	nop
 8013448:	24000097 	.word	0x24000097
 801344c:	24000098 	.word	0x24000098
 8013450:	24000099 	.word	0x24000099

08013454 <USBD_CDC_Setup>:
 8013454:	b580      	push	{r7, lr}
 8013456:	b086      	sub	sp, #24
 8013458:	af00      	add	r7, sp, #0
 801345a:	6078      	str	r0, [r7, #4]
 801345c:	6039      	str	r1, [r7, #0]
 801345e:	687b      	ldr	r3, [r7, #4]
 8013460:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013464:	687b      	ldr	r3, [r7, #4]
 8013466:	32b0      	adds	r2, #176	@ 0xb0
 8013468:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801346c:	613b      	str	r3, [r7, #16]
 801346e:	2300      	movs	r3, #0
 8013470:	737b      	strb	r3, [r7, #13]
 8013472:	2300      	movs	r3, #0
 8013474:	817b      	strh	r3, [r7, #10]
 8013476:	2300      	movs	r3, #0
 8013478:	75fb      	strb	r3, [r7, #23]
 801347a:	693b      	ldr	r3, [r7, #16]
 801347c:	2b00      	cmp	r3, #0
 801347e:	d101      	bne.n	8013484 <USBD_CDC_Setup+0x30>
 8013480:	2303      	movs	r3, #3
 8013482:	e0bf      	b.n	8013604 <USBD_CDC_Setup+0x1b0>
 8013484:	683b      	ldr	r3, [r7, #0]
 8013486:	781b      	ldrb	r3, [r3, #0]
 8013488:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801348c:	2b00      	cmp	r3, #0
 801348e:	d050      	beq.n	8013532 <USBD_CDC_Setup+0xde>
 8013490:	2b20      	cmp	r3, #32
 8013492:	f040 80af 	bne.w	80135f4 <USBD_CDC_Setup+0x1a0>
 8013496:	683b      	ldr	r3, [r7, #0]
 8013498:	88db      	ldrh	r3, [r3, #6]
 801349a:	2b00      	cmp	r3, #0
 801349c:	d03a      	beq.n	8013514 <USBD_CDC_Setup+0xc0>
 801349e:	683b      	ldr	r3, [r7, #0]
 80134a0:	781b      	ldrb	r3, [r3, #0]
 80134a2:	b25b      	sxtb	r3, r3
 80134a4:	2b00      	cmp	r3, #0
 80134a6:	da1b      	bge.n	80134e0 <USBD_CDC_Setup+0x8c>
 80134a8:	687b      	ldr	r3, [r7, #4]
 80134aa:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80134ae:	687a      	ldr	r2, [r7, #4]
 80134b0:	33b0      	adds	r3, #176	@ 0xb0
 80134b2:	009b      	lsls	r3, r3, #2
 80134b4:	4413      	add	r3, r2
 80134b6:	685b      	ldr	r3, [r3, #4]
 80134b8:	689b      	ldr	r3, [r3, #8]
 80134ba:	683a      	ldr	r2, [r7, #0]
 80134bc:	7850      	ldrb	r0, [r2, #1]
 80134be:	6939      	ldr	r1, [r7, #16]
 80134c0:	683a      	ldr	r2, [r7, #0]
 80134c2:	88d2      	ldrh	r2, [r2, #6]
 80134c4:	4798      	blx	r3
 80134c6:	683b      	ldr	r3, [r7, #0]
 80134c8:	88db      	ldrh	r3, [r3, #6]
 80134ca:	2b07      	cmp	r3, #7
 80134cc:	bf28      	it	cs
 80134ce:	2307      	movcs	r3, #7
 80134d0:	81fb      	strh	r3, [r7, #14]
 80134d2:	693b      	ldr	r3, [r7, #16]
 80134d4:	89fa      	ldrh	r2, [r7, #14]
 80134d6:	4619      	mov	r1, r3
 80134d8:	6878      	ldr	r0, [r7, #4]
 80134da:	f001 fdbd 	bl	8015058 <USBD_CtlSendData>
 80134de:	e090      	b.n	8013602 <USBD_CDC_Setup+0x1ae>
 80134e0:	683b      	ldr	r3, [r7, #0]
 80134e2:	785a      	ldrb	r2, [r3, #1]
 80134e4:	693b      	ldr	r3, [r7, #16]
 80134e6:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
 80134ea:	683b      	ldr	r3, [r7, #0]
 80134ec:	88db      	ldrh	r3, [r3, #6]
 80134ee:	2b3f      	cmp	r3, #63	@ 0x3f
 80134f0:	d803      	bhi.n	80134fa <USBD_CDC_Setup+0xa6>
 80134f2:	683b      	ldr	r3, [r7, #0]
 80134f4:	88db      	ldrh	r3, [r3, #6]
 80134f6:	b2da      	uxtb	r2, r3
 80134f8:	e000      	b.n	80134fc <USBD_CDC_Setup+0xa8>
 80134fa:	2240      	movs	r2, #64	@ 0x40
 80134fc:	693b      	ldr	r3, [r7, #16]
 80134fe:	f883 2201 	strb.w	r2, [r3, #513]	@ 0x201
 8013502:	6939      	ldr	r1, [r7, #16]
 8013504:	693b      	ldr	r3, [r7, #16]
 8013506:	f893 3201 	ldrb.w	r3, [r3, #513]	@ 0x201
 801350a:	461a      	mov	r2, r3
 801350c:	6878      	ldr	r0, [r7, #4]
 801350e:	f001 fdcf 	bl	80150b0 <USBD_CtlPrepareRx>
 8013512:	e076      	b.n	8013602 <USBD_CDC_Setup+0x1ae>
 8013514:	687b      	ldr	r3, [r7, #4]
 8013516:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 801351a:	687a      	ldr	r2, [r7, #4]
 801351c:	33b0      	adds	r3, #176	@ 0xb0
 801351e:	009b      	lsls	r3, r3, #2
 8013520:	4413      	add	r3, r2
 8013522:	685b      	ldr	r3, [r3, #4]
 8013524:	689b      	ldr	r3, [r3, #8]
 8013526:	683a      	ldr	r2, [r7, #0]
 8013528:	7850      	ldrb	r0, [r2, #1]
 801352a:	2200      	movs	r2, #0
 801352c:	6839      	ldr	r1, [r7, #0]
 801352e:	4798      	blx	r3
 8013530:	e067      	b.n	8013602 <USBD_CDC_Setup+0x1ae>
 8013532:	683b      	ldr	r3, [r7, #0]
 8013534:	785b      	ldrb	r3, [r3, #1]
 8013536:	2b0b      	cmp	r3, #11
 8013538:	d851      	bhi.n	80135de <USBD_CDC_Setup+0x18a>
 801353a:	a201      	add	r2, pc, #4	@ (adr r2, 8013540 <USBD_CDC_Setup+0xec>)
 801353c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8013540:	08013571 	.word	0x08013571
 8013544:	080135ed 	.word	0x080135ed
 8013548:	080135df 	.word	0x080135df
 801354c:	080135df 	.word	0x080135df
 8013550:	080135df 	.word	0x080135df
 8013554:	080135df 	.word	0x080135df
 8013558:	080135df 	.word	0x080135df
 801355c:	080135df 	.word	0x080135df
 8013560:	080135df 	.word	0x080135df
 8013564:	080135df 	.word	0x080135df
 8013568:	0801359b 	.word	0x0801359b
 801356c:	080135c5 	.word	0x080135c5
 8013570:	687b      	ldr	r3, [r7, #4]
 8013572:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8013576:	b2db      	uxtb	r3, r3
 8013578:	2b03      	cmp	r3, #3
 801357a:	d107      	bne.n	801358c <USBD_CDC_Setup+0x138>
 801357c:	f107 030a 	add.w	r3, r7, #10
 8013580:	2202      	movs	r2, #2
 8013582:	4619      	mov	r1, r3
 8013584:	6878      	ldr	r0, [r7, #4]
 8013586:	f001 fd67 	bl	8015058 <USBD_CtlSendData>
 801358a:	e032      	b.n	80135f2 <USBD_CDC_Setup+0x19e>
 801358c:	6839      	ldr	r1, [r7, #0]
 801358e:	6878      	ldr	r0, [r7, #4]
 8013590:	f001 fce5 	bl	8014f5e <USBD_CtlError>
 8013594:	2303      	movs	r3, #3
 8013596:	75fb      	strb	r3, [r7, #23]
 8013598:	e02b      	b.n	80135f2 <USBD_CDC_Setup+0x19e>
 801359a:	687b      	ldr	r3, [r7, #4]
 801359c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80135a0:	b2db      	uxtb	r3, r3
 80135a2:	2b03      	cmp	r3, #3
 80135a4:	d107      	bne.n	80135b6 <USBD_CDC_Setup+0x162>
 80135a6:	f107 030d 	add.w	r3, r7, #13
 80135aa:	2201      	movs	r2, #1
 80135ac:	4619      	mov	r1, r3
 80135ae:	6878      	ldr	r0, [r7, #4]
 80135b0:	f001 fd52 	bl	8015058 <USBD_CtlSendData>
 80135b4:	e01d      	b.n	80135f2 <USBD_CDC_Setup+0x19e>
 80135b6:	6839      	ldr	r1, [r7, #0]
 80135b8:	6878      	ldr	r0, [r7, #4]
 80135ba:	f001 fcd0 	bl	8014f5e <USBD_CtlError>
 80135be:	2303      	movs	r3, #3
 80135c0:	75fb      	strb	r3, [r7, #23]
 80135c2:	e016      	b.n	80135f2 <USBD_CDC_Setup+0x19e>
 80135c4:	687b      	ldr	r3, [r7, #4]
 80135c6:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80135ca:	b2db      	uxtb	r3, r3
 80135cc:	2b03      	cmp	r3, #3
 80135ce:	d00f      	beq.n	80135f0 <USBD_CDC_Setup+0x19c>
 80135d0:	6839      	ldr	r1, [r7, #0]
 80135d2:	6878      	ldr	r0, [r7, #4]
 80135d4:	f001 fcc3 	bl	8014f5e <USBD_CtlError>
 80135d8:	2303      	movs	r3, #3
 80135da:	75fb      	strb	r3, [r7, #23]
 80135dc:	e008      	b.n	80135f0 <USBD_CDC_Setup+0x19c>
 80135de:	6839      	ldr	r1, [r7, #0]
 80135e0:	6878      	ldr	r0, [r7, #4]
 80135e2:	f001 fcbc 	bl	8014f5e <USBD_CtlError>
 80135e6:	2303      	movs	r3, #3
 80135e8:	75fb      	strb	r3, [r7, #23]
 80135ea:	e002      	b.n	80135f2 <USBD_CDC_Setup+0x19e>
 80135ec:	bf00      	nop
 80135ee:	e008      	b.n	8013602 <USBD_CDC_Setup+0x1ae>
 80135f0:	bf00      	nop
 80135f2:	e006      	b.n	8013602 <USBD_CDC_Setup+0x1ae>
 80135f4:	6839      	ldr	r1, [r7, #0]
 80135f6:	6878      	ldr	r0, [r7, #4]
 80135f8:	f001 fcb1 	bl	8014f5e <USBD_CtlError>
 80135fc:	2303      	movs	r3, #3
 80135fe:	75fb      	strb	r3, [r7, #23]
 8013600:	bf00      	nop
 8013602:	7dfb      	ldrb	r3, [r7, #23]
 8013604:	4618      	mov	r0, r3
 8013606:	3718      	adds	r7, #24
 8013608:	46bd      	mov	sp, r7
 801360a:	bd80      	pop	{r7, pc}

0801360c <USBD_CDC_DataIn>:
 801360c:	b580      	push	{r7, lr}
 801360e:	b084      	sub	sp, #16
 8013610:	af00      	add	r7, sp, #0
 8013612:	6078      	str	r0, [r7, #4]
 8013614:	460b      	mov	r3, r1
 8013616:	70fb      	strb	r3, [r7, #3]
 8013618:	687b      	ldr	r3, [r7, #4]
 801361a:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801361e:	60fb      	str	r3, [r7, #12]
 8013620:	687b      	ldr	r3, [r7, #4]
 8013622:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013626:	687b      	ldr	r3, [r7, #4]
 8013628:	32b0      	adds	r2, #176	@ 0xb0
 801362a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801362e:	2b00      	cmp	r3, #0
 8013630:	d101      	bne.n	8013636 <USBD_CDC_DataIn+0x2a>
 8013632:	2303      	movs	r3, #3
 8013634:	e065      	b.n	8013702 <USBD_CDC_DataIn+0xf6>
 8013636:	687b      	ldr	r3, [r7, #4]
 8013638:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801363c:	687b      	ldr	r3, [r7, #4]
 801363e:	32b0      	adds	r2, #176	@ 0xb0
 8013640:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013644:	60bb      	str	r3, [r7, #8]
 8013646:	78fb      	ldrb	r3, [r7, #3]
 8013648:	f003 020f 	and.w	r2, r3, #15
 801364c:	6879      	ldr	r1, [r7, #4]
 801364e:	4613      	mov	r3, r2
 8013650:	009b      	lsls	r3, r3, #2
 8013652:	4413      	add	r3, r2
 8013654:	009b      	lsls	r3, r3, #2
 8013656:	440b      	add	r3, r1
 8013658:	3318      	adds	r3, #24
 801365a:	681b      	ldr	r3, [r3, #0]
 801365c:	2b00      	cmp	r3, #0
 801365e:	d02f      	beq.n	80136c0 <USBD_CDC_DataIn+0xb4>
 8013660:	78fb      	ldrb	r3, [r7, #3]
 8013662:	f003 020f 	and.w	r2, r3, #15
 8013666:	6879      	ldr	r1, [r7, #4]
 8013668:	4613      	mov	r3, r2
 801366a:	009b      	lsls	r3, r3, #2
 801366c:	4413      	add	r3, r2
 801366e:	009b      	lsls	r3, r3, #2
 8013670:	440b      	add	r3, r1
 8013672:	3318      	adds	r3, #24
 8013674:	681a      	ldr	r2, [r3, #0]
 8013676:	78fb      	ldrb	r3, [r7, #3]
 8013678:	f003 010f 	and.w	r1, r3, #15
 801367c:	68f8      	ldr	r0, [r7, #12]
 801367e:	460b      	mov	r3, r1
 8013680:	00db      	lsls	r3, r3, #3
 8013682:	440b      	add	r3, r1
 8013684:	009b      	lsls	r3, r3, #2
 8013686:	4403      	add	r3, r0
 8013688:	331c      	adds	r3, #28
 801368a:	681b      	ldr	r3, [r3, #0]
 801368c:	fbb2 f1f3 	udiv	r1, r2, r3
 8013690:	fb01 f303 	mul.w	r3, r1, r3
 8013694:	1ad3      	subs	r3, r2, r3
 8013696:	2b00      	cmp	r3, #0
 8013698:	d112      	bne.n	80136c0 <USBD_CDC_DataIn+0xb4>
 801369a:	78fb      	ldrb	r3, [r7, #3]
 801369c:	f003 020f 	and.w	r2, r3, #15
 80136a0:	6879      	ldr	r1, [r7, #4]
 80136a2:	4613      	mov	r3, r2
 80136a4:	009b      	lsls	r3, r3, #2
 80136a6:	4413      	add	r3, r2
 80136a8:	009b      	lsls	r3, r3, #2
 80136aa:	440b      	add	r3, r1
 80136ac:	3318      	adds	r3, #24
 80136ae:	2200      	movs	r2, #0
 80136b0:	601a      	str	r2, [r3, #0]
 80136b2:	78f9      	ldrb	r1, [r7, #3]
 80136b4:	2300      	movs	r3, #0
 80136b6:	2200      	movs	r2, #0
 80136b8:	6878      	ldr	r0, [r7, #4]
 80136ba:	f002 f9d0 	bl	8015a5e <USBD_LL_Transmit>
 80136be:	e01f      	b.n	8013700 <USBD_CDC_DataIn+0xf4>
 80136c0:	68bb      	ldr	r3, [r7, #8]
 80136c2:	2200      	movs	r2, #0
 80136c4:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 80136c8:	687b      	ldr	r3, [r7, #4]
 80136ca:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80136ce:	687a      	ldr	r2, [r7, #4]
 80136d0:	33b0      	adds	r3, #176	@ 0xb0
 80136d2:	009b      	lsls	r3, r3, #2
 80136d4:	4413      	add	r3, r2
 80136d6:	685b      	ldr	r3, [r3, #4]
 80136d8:	691b      	ldr	r3, [r3, #16]
 80136da:	2b00      	cmp	r3, #0
 80136dc:	d010      	beq.n	8013700 <USBD_CDC_DataIn+0xf4>
 80136de:	687b      	ldr	r3, [r7, #4]
 80136e0:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80136e4:	687a      	ldr	r2, [r7, #4]
 80136e6:	33b0      	adds	r3, #176	@ 0xb0
 80136e8:	009b      	lsls	r3, r3, #2
 80136ea:	4413      	add	r3, r2
 80136ec:	685b      	ldr	r3, [r3, #4]
 80136ee:	691b      	ldr	r3, [r3, #16]
 80136f0:	68ba      	ldr	r2, [r7, #8]
 80136f2:	f8d2 0208 	ldr.w	r0, [r2, #520]	@ 0x208
 80136f6:	68ba      	ldr	r2, [r7, #8]
 80136f8:	f502 7104 	add.w	r1, r2, #528	@ 0x210
 80136fc:	78fa      	ldrb	r2, [r7, #3]
 80136fe:	4798      	blx	r3
 8013700:	2300      	movs	r3, #0
 8013702:	4618      	mov	r0, r3
 8013704:	3710      	adds	r7, #16
 8013706:	46bd      	mov	sp, r7
 8013708:	bd80      	pop	{r7, pc}

0801370a <USBD_CDC_DataOut>:
 801370a:	b580      	push	{r7, lr}
 801370c:	b084      	sub	sp, #16
 801370e:	af00      	add	r7, sp, #0
 8013710:	6078      	str	r0, [r7, #4]
 8013712:	460b      	mov	r3, r1
 8013714:	70fb      	strb	r3, [r7, #3]
 8013716:	687b      	ldr	r3, [r7, #4]
 8013718:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801371c:	687b      	ldr	r3, [r7, #4]
 801371e:	32b0      	adds	r2, #176	@ 0xb0
 8013720:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013724:	60fb      	str	r3, [r7, #12]
 8013726:	687b      	ldr	r3, [r7, #4]
 8013728:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801372c:	687b      	ldr	r3, [r7, #4]
 801372e:	32b0      	adds	r2, #176	@ 0xb0
 8013730:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013734:	2b00      	cmp	r3, #0
 8013736:	d101      	bne.n	801373c <USBD_CDC_DataOut+0x32>
 8013738:	2303      	movs	r3, #3
 801373a:	e01a      	b.n	8013772 <USBD_CDC_DataOut+0x68>
 801373c:	78fb      	ldrb	r3, [r7, #3]
 801373e:	4619      	mov	r1, r3
 8013740:	6878      	ldr	r0, [r7, #4]
 8013742:	f002 f9ce 	bl	8015ae2 <USBD_LL_GetRxDataSize>
 8013746:	4602      	mov	r2, r0
 8013748:	68fb      	ldr	r3, [r7, #12]
 801374a:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 801374e:	687b      	ldr	r3, [r7, #4]
 8013750:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8013754:	687a      	ldr	r2, [r7, #4]
 8013756:	33b0      	adds	r3, #176	@ 0xb0
 8013758:	009b      	lsls	r3, r3, #2
 801375a:	4413      	add	r3, r2
 801375c:	685b      	ldr	r3, [r3, #4]
 801375e:	68db      	ldr	r3, [r3, #12]
 8013760:	68fa      	ldr	r2, [r7, #12]
 8013762:	f8d2 0204 	ldr.w	r0, [r2, #516]	@ 0x204
 8013766:	68fa      	ldr	r2, [r7, #12]
 8013768:	f502 7203 	add.w	r2, r2, #524	@ 0x20c
 801376c:	4611      	mov	r1, r2
 801376e:	4798      	blx	r3
 8013770:	2300      	movs	r3, #0
 8013772:	4618      	mov	r0, r3
 8013774:	3710      	adds	r7, #16
 8013776:	46bd      	mov	sp, r7
 8013778:	bd80      	pop	{r7, pc}

0801377a <USBD_CDC_EP0_RxReady>:
 801377a:	b580      	push	{r7, lr}
 801377c:	b084      	sub	sp, #16
 801377e:	af00      	add	r7, sp, #0
 8013780:	6078      	str	r0, [r7, #4]
 8013782:	687b      	ldr	r3, [r7, #4]
 8013784:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013788:	687b      	ldr	r3, [r7, #4]
 801378a:	32b0      	adds	r2, #176	@ 0xb0
 801378c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013790:	60fb      	str	r3, [r7, #12]
 8013792:	68fb      	ldr	r3, [r7, #12]
 8013794:	2b00      	cmp	r3, #0
 8013796:	d101      	bne.n	801379c <USBD_CDC_EP0_RxReady+0x22>
 8013798:	2303      	movs	r3, #3
 801379a:	e024      	b.n	80137e6 <USBD_CDC_EP0_RxReady+0x6c>
 801379c:	687b      	ldr	r3, [r7, #4]
 801379e:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80137a2:	687a      	ldr	r2, [r7, #4]
 80137a4:	33b0      	adds	r3, #176	@ 0xb0
 80137a6:	009b      	lsls	r3, r3, #2
 80137a8:	4413      	add	r3, r2
 80137aa:	685b      	ldr	r3, [r3, #4]
 80137ac:	2b00      	cmp	r3, #0
 80137ae:	d019      	beq.n	80137e4 <USBD_CDC_EP0_RxReady+0x6a>
 80137b0:	68fb      	ldr	r3, [r7, #12]
 80137b2:	f893 3200 	ldrb.w	r3, [r3, #512]	@ 0x200
 80137b6:	2bff      	cmp	r3, #255	@ 0xff
 80137b8:	d014      	beq.n	80137e4 <USBD_CDC_EP0_RxReady+0x6a>
 80137ba:	687b      	ldr	r3, [r7, #4]
 80137bc:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80137c0:	687a      	ldr	r2, [r7, #4]
 80137c2:	33b0      	adds	r3, #176	@ 0xb0
 80137c4:	009b      	lsls	r3, r3, #2
 80137c6:	4413      	add	r3, r2
 80137c8:	685b      	ldr	r3, [r3, #4]
 80137ca:	689b      	ldr	r3, [r3, #8]
 80137cc:	68fa      	ldr	r2, [r7, #12]
 80137ce:	f892 0200 	ldrb.w	r0, [r2, #512]	@ 0x200
 80137d2:	68f9      	ldr	r1, [r7, #12]
 80137d4:	68fa      	ldr	r2, [r7, #12]
 80137d6:	f892 2201 	ldrb.w	r2, [r2, #513]	@ 0x201
 80137da:	4798      	blx	r3
 80137dc:	68fb      	ldr	r3, [r7, #12]
 80137de:	22ff      	movs	r2, #255	@ 0xff
 80137e0:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
 80137e4:	2300      	movs	r3, #0
 80137e6:	4618      	mov	r0, r3
 80137e8:	3710      	adds	r7, #16
 80137ea:	46bd      	mov	sp, r7
 80137ec:	bd80      	pop	{r7, pc}
	...

080137f0 <USBD_CDC_GetFSCfgDesc>:
 80137f0:	b580      	push	{r7, lr}
 80137f2:	b086      	sub	sp, #24
 80137f4:	af00      	add	r7, sp, #0
 80137f6:	6078      	str	r0, [r7, #4]
 80137f8:	2182      	movs	r1, #130	@ 0x82
 80137fa:	4818      	ldr	r0, [pc, #96]	@ (801385c <USBD_CDC_GetFSCfgDesc+0x6c>)
 80137fc:	f000 fd4f 	bl	801429e <USBD_GetEpDesc>
 8013800:	6178      	str	r0, [r7, #20]
 8013802:	2101      	movs	r1, #1
 8013804:	4815      	ldr	r0, [pc, #84]	@ (801385c <USBD_CDC_GetFSCfgDesc+0x6c>)
 8013806:	f000 fd4a 	bl	801429e <USBD_GetEpDesc>
 801380a:	6138      	str	r0, [r7, #16]
 801380c:	2181      	movs	r1, #129	@ 0x81
 801380e:	4813      	ldr	r0, [pc, #76]	@ (801385c <USBD_CDC_GetFSCfgDesc+0x6c>)
 8013810:	f000 fd45 	bl	801429e <USBD_GetEpDesc>
 8013814:	60f8      	str	r0, [r7, #12]
 8013816:	697b      	ldr	r3, [r7, #20]
 8013818:	2b00      	cmp	r3, #0
 801381a:	d002      	beq.n	8013822 <USBD_CDC_GetFSCfgDesc+0x32>
 801381c:	697b      	ldr	r3, [r7, #20]
 801381e:	2210      	movs	r2, #16
 8013820:	719a      	strb	r2, [r3, #6]
 8013822:	693b      	ldr	r3, [r7, #16]
 8013824:	2b00      	cmp	r3, #0
 8013826:	d006      	beq.n	8013836 <USBD_CDC_GetFSCfgDesc+0x46>
 8013828:	693b      	ldr	r3, [r7, #16]
 801382a:	2200      	movs	r2, #0
 801382c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8013830:	711a      	strb	r2, [r3, #4]
 8013832:	2200      	movs	r2, #0
 8013834:	715a      	strb	r2, [r3, #5]
 8013836:	68fb      	ldr	r3, [r7, #12]
 8013838:	2b00      	cmp	r3, #0
 801383a:	d006      	beq.n	801384a <USBD_CDC_GetFSCfgDesc+0x5a>
 801383c:	68fb      	ldr	r3, [r7, #12]
 801383e:	2200      	movs	r2, #0
 8013840:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8013844:	711a      	strb	r2, [r3, #4]
 8013846:	2200      	movs	r2, #0
 8013848:	715a      	strb	r2, [r3, #5]
 801384a:	687b      	ldr	r3, [r7, #4]
 801384c:	2243      	movs	r2, #67	@ 0x43
 801384e:	801a      	strh	r2, [r3, #0]
 8013850:	4b02      	ldr	r3, [pc, #8]	@ (801385c <USBD_CDC_GetFSCfgDesc+0x6c>)
 8013852:	4618      	mov	r0, r3
 8013854:	3718      	adds	r7, #24
 8013856:	46bd      	mov	sp, r7
 8013858:	bd80      	pop	{r7, pc}
 801385a:	bf00      	nop
 801385c:	24000054 	.word	0x24000054

08013860 <USBD_CDC_GetHSCfgDesc>:
 8013860:	b580      	push	{r7, lr}
 8013862:	b086      	sub	sp, #24
 8013864:	af00      	add	r7, sp, #0
 8013866:	6078      	str	r0, [r7, #4]
 8013868:	2182      	movs	r1, #130	@ 0x82
 801386a:	4818      	ldr	r0, [pc, #96]	@ (80138cc <USBD_CDC_GetHSCfgDesc+0x6c>)
 801386c:	f000 fd17 	bl	801429e <USBD_GetEpDesc>
 8013870:	6178      	str	r0, [r7, #20]
 8013872:	2101      	movs	r1, #1
 8013874:	4815      	ldr	r0, [pc, #84]	@ (80138cc <USBD_CDC_GetHSCfgDesc+0x6c>)
 8013876:	f000 fd12 	bl	801429e <USBD_GetEpDesc>
 801387a:	6138      	str	r0, [r7, #16]
 801387c:	2181      	movs	r1, #129	@ 0x81
 801387e:	4813      	ldr	r0, [pc, #76]	@ (80138cc <USBD_CDC_GetHSCfgDesc+0x6c>)
 8013880:	f000 fd0d 	bl	801429e <USBD_GetEpDesc>
 8013884:	60f8      	str	r0, [r7, #12]
 8013886:	697b      	ldr	r3, [r7, #20]
 8013888:	2b00      	cmp	r3, #0
 801388a:	d002      	beq.n	8013892 <USBD_CDC_GetHSCfgDesc+0x32>
 801388c:	697b      	ldr	r3, [r7, #20]
 801388e:	2210      	movs	r2, #16
 8013890:	719a      	strb	r2, [r3, #6]
 8013892:	693b      	ldr	r3, [r7, #16]
 8013894:	2b00      	cmp	r3, #0
 8013896:	d006      	beq.n	80138a6 <USBD_CDC_GetHSCfgDesc+0x46>
 8013898:	693b      	ldr	r3, [r7, #16]
 801389a:	2200      	movs	r2, #0
 801389c:	711a      	strb	r2, [r3, #4]
 801389e:	2200      	movs	r2, #0
 80138a0:	f042 0202 	orr.w	r2, r2, #2
 80138a4:	715a      	strb	r2, [r3, #5]
 80138a6:	68fb      	ldr	r3, [r7, #12]
 80138a8:	2b00      	cmp	r3, #0
 80138aa:	d006      	beq.n	80138ba <USBD_CDC_GetHSCfgDesc+0x5a>
 80138ac:	68fb      	ldr	r3, [r7, #12]
 80138ae:	2200      	movs	r2, #0
 80138b0:	711a      	strb	r2, [r3, #4]
 80138b2:	2200      	movs	r2, #0
 80138b4:	f042 0202 	orr.w	r2, r2, #2
 80138b8:	715a      	strb	r2, [r3, #5]
 80138ba:	687b      	ldr	r3, [r7, #4]
 80138bc:	2243      	movs	r2, #67	@ 0x43
 80138be:	801a      	strh	r2, [r3, #0]
 80138c0:	4b02      	ldr	r3, [pc, #8]	@ (80138cc <USBD_CDC_GetHSCfgDesc+0x6c>)
 80138c2:	4618      	mov	r0, r3
 80138c4:	3718      	adds	r7, #24
 80138c6:	46bd      	mov	sp, r7
 80138c8:	bd80      	pop	{r7, pc}
 80138ca:	bf00      	nop
 80138cc:	24000054 	.word	0x24000054

080138d0 <USBD_CDC_GetOtherSpeedCfgDesc>:
 80138d0:	b580      	push	{r7, lr}
 80138d2:	b086      	sub	sp, #24
 80138d4:	af00      	add	r7, sp, #0
 80138d6:	6078      	str	r0, [r7, #4]
 80138d8:	2182      	movs	r1, #130	@ 0x82
 80138da:	4818      	ldr	r0, [pc, #96]	@ (801393c <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 80138dc:	f000 fcdf 	bl	801429e <USBD_GetEpDesc>
 80138e0:	6178      	str	r0, [r7, #20]
 80138e2:	2101      	movs	r1, #1
 80138e4:	4815      	ldr	r0, [pc, #84]	@ (801393c <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 80138e6:	f000 fcda 	bl	801429e <USBD_GetEpDesc>
 80138ea:	6138      	str	r0, [r7, #16]
 80138ec:	2181      	movs	r1, #129	@ 0x81
 80138ee:	4813      	ldr	r0, [pc, #76]	@ (801393c <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 80138f0:	f000 fcd5 	bl	801429e <USBD_GetEpDesc>
 80138f4:	60f8      	str	r0, [r7, #12]
 80138f6:	697b      	ldr	r3, [r7, #20]
 80138f8:	2b00      	cmp	r3, #0
 80138fa:	d002      	beq.n	8013902 <USBD_CDC_GetOtherSpeedCfgDesc+0x32>
 80138fc:	697b      	ldr	r3, [r7, #20]
 80138fe:	2210      	movs	r2, #16
 8013900:	719a      	strb	r2, [r3, #6]
 8013902:	693b      	ldr	r3, [r7, #16]
 8013904:	2b00      	cmp	r3, #0
 8013906:	d006      	beq.n	8013916 <USBD_CDC_GetOtherSpeedCfgDesc+0x46>
 8013908:	693b      	ldr	r3, [r7, #16]
 801390a:	2200      	movs	r2, #0
 801390c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8013910:	711a      	strb	r2, [r3, #4]
 8013912:	2200      	movs	r2, #0
 8013914:	715a      	strb	r2, [r3, #5]
 8013916:	68fb      	ldr	r3, [r7, #12]
 8013918:	2b00      	cmp	r3, #0
 801391a:	d006      	beq.n	801392a <USBD_CDC_GetOtherSpeedCfgDesc+0x5a>
 801391c:	68fb      	ldr	r3, [r7, #12]
 801391e:	2200      	movs	r2, #0
 8013920:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8013924:	711a      	strb	r2, [r3, #4]
 8013926:	2200      	movs	r2, #0
 8013928:	715a      	strb	r2, [r3, #5]
 801392a:	687b      	ldr	r3, [r7, #4]
 801392c:	2243      	movs	r2, #67	@ 0x43
 801392e:	801a      	strh	r2, [r3, #0]
 8013930:	4b02      	ldr	r3, [pc, #8]	@ (801393c <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8013932:	4618      	mov	r0, r3
 8013934:	3718      	adds	r7, #24
 8013936:	46bd      	mov	sp, r7
 8013938:	bd80      	pop	{r7, pc}
 801393a:	bf00      	nop
 801393c:	24000054 	.word	0x24000054

08013940 <USBD_CDC_GetDeviceQualifierDescriptor>:
 8013940:	b480      	push	{r7}
 8013942:	b083      	sub	sp, #12
 8013944:	af00      	add	r7, sp, #0
 8013946:	6078      	str	r0, [r7, #4]
 8013948:	687b      	ldr	r3, [r7, #4]
 801394a:	220a      	movs	r2, #10
 801394c:	801a      	strh	r2, [r3, #0]
 801394e:	4b03      	ldr	r3, [pc, #12]	@ (801395c <USBD_CDC_GetDeviceQualifierDescriptor+0x1c>)
 8013950:	4618      	mov	r0, r3
 8013952:	370c      	adds	r7, #12
 8013954:	46bd      	mov	sp, r7
 8013956:	f85d 7b04 	ldr.w	r7, [sp], #4
 801395a:	4770      	bx	lr
 801395c:	24000010 	.word	0x24000010

08013960 <USBD_CDC_RegisterInterface>:
 8013960:	b480      	push	{r7}
 8013962:	b083      	sub	sp, #12
 8013964:	af00      	add	r7, sp, #0
 8013966:	6078      	str	r0, [r7, #4]
 8013968:	6039      	str	r1, [r7, #0]
 801396a:	683b      	ldr	r3, [r7, #0]
 801396c:	2b00      	cmp	r3, #0
 801396e:	d101      	bne.n	8013974 <USBD_CDC_RegisterInterface+0x14>
 8013970:	2303      	movs	r3, #3
 8013972:	e009      	b.n	8013988 <USBD_CDC_RegisterInterface+0x28>
 8013974:	687b      	ldr	r3, [r7, #4]
 8013976:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 801397a:	687a      	ldr	r2, [r7, #4]
 801397c:	33b0      	adds	r3, #176	@ 0xb0
 801397e:	009b      	lsls	r3, r3, #2
 8013980:	4413      	add	r3, r2
 8013982:	683a      	ldr	r2, [r7, #0]
 8013984:	605a      	str	r2, [r3, #4]
 8013986:	2300      	movs	r3, #0
 8013988:	4618      	mov	r0, r3
 801398a:	370c      	adds	r7, #12
 801398c:	46bd      	mov	sp, r7
 801398e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013992:	4770      	bx	lr

08013994 <USBD_CDC_SetTxBuffer>:
 8013994:	b480      	push	{r7}
 8013996:	b087      	sub	sp, #28
 8013998:	af00      	add	r7, sp, #0
 801399a:	60f8      	str	r0, [r7, #12]
 801399c:	60b9      	str	r1, [r7, #8]
 801399e:	607a      	str	r2, [r7, #4]
 80139a0:	68fb      	ldr	r3, [r7, #12]
 80139a2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80139a6:	68fb      	ldr	r3, [r7, #12]
 80139a8:	32b0      	adds	r2, #176	@ 0xb0
 80139aa:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80139ae:	617b      	str	r3, [r7, #20]
 80139b0:	697b      	ldr	r3, [r7, #20]
 80139b2:	2b00      	cmp	r3, #0
 80139b4:	d101      	bne.n	80139ba <USBD_CDC_SetTxBuffer+0x26>
 80139b6:	2303      	movs	r3, #3
 80139b8:	e008      	b.n	80139cc <USBD_CDC_SetTxBuffer+0x38>
 80139ba:	697b      	ldr	r3, [r7, #20]
 80139bc:	68ba      	ldr	r2, [r7, #8]
 80139be:	f8c3 2208 	str.w	r2, [r3, #520]	@ 0x208
 80139c2:	697b      	ldr	r3, [r7, #20]
 80139c4:	687a      	ldr	r2, [r7, #4]
 80139c6:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
 80139ca:	2300      	movs	r3, #0
 80139cc:	4618      	mov	r0, r3
 80139ce:	371c      	adds	r7, #28
 80139d0:	46bd      	mov	sp, r7
 80139d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80139d6:	4770      	bx	lr

080139d8 <USBD_CDC_SetRxBuffer>:
 80139d8:	b480      	push	{r7}
 80139da:	b085      	sub	sp, #20
 80139dc:	af00      	add	r7, sp, #0
 80139de:	6078      	str	r0, [r7, #4]
 80139e0:	6039      	str	r1, [r7, #0]
 80139e2:	687b      	ldr	r3, [r7, #4]
 80139e4:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80139e8:	687b      	ldr	r3, [r7, #4]
 80139ea:	32b0      	adds	r2, #176	@ 0xb0
 80139ec:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80139f0:	60fb      	str	r3, [r7, #12]
 80139f2:	68fb      	ldr	r3, [r7, #12]
 80139f4:	2b00      	cmp	r3, #0
 80139f6:	d101      	bne.n	80139fc <USBD_CDC_SetRxBuffer+0x24>
 80139f8:	2303      	movs	r3, #3
 80139fa:	e004      	b.n	8013a06 <USBD_CDC_SetRxBuffer+0x2e>
 80139fc:	68fb      	ldr	r3, [r7, #12]
 80139fe:	683a      	ldr	r2, [r7, #0]
 8013a00:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 8013a04:	2300      	movs	r3, #0
 8013a06:	4618      	mov	r0, r3
 8013a08:	3714      	adds	r7, #20
 8013a0a:	46bd      	mov	sp, r7
 8013a0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013a10:	4770      	bx	lr
	...

08013a14 <USBD_CDC_TransmitPacket>:
 8013a14:	b580      	push	{r7, lr}
 8013a16:	b084      	sub	sp, #16
 8013a18:	af00      	add	r7, sp, #0
 8013a1a:	6078      	str	r0, [r7, #4]
 8013a1c:	687b      	ldr	r3, [r7, #4]
 8013a1e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013a22:	687b      	ldr	r3, [r7, #4]
 8013a24:	32b0      	adds	r2, #176	@ 0xb0
 8013a26:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013a2a:	60bb      	str	r3, [r7, #8]
 8013a2c:	2301      	movs	r3, #1
 8013a2e:	73fb      	strb	r3, [r7, #15]
 8013a30:	68bb      	ldr	r3, [r7, #8]
 8013a32:	2b00      	cmp	r3, #0
 8013a34:	d101      	bne.n	8013a3a <USBD_CDC_TransmitPacket+0x26>
 8013a36:	2303      	movs	r3, #3
 8013a38:	e025      	b.n	8013a86 <USBD_CDC_TransmitPacket+0x72>
 8013a3a:	68bb      	ldr	r3, [r7, #8]
 8013a3c:	f8d3 3214 	ldr.w	r3, [r3, #532]	@ 0x214
 8013a40:	2b00      	cmp	r3, #0
 8013a42:	d11f      	bne.n	8013a84 <USBD_CDC_TransmitPacket+0x70>
 8013a44:	68bb      	ldr	r3, [r7, #8]
 8013a46:	2201      	movs	r2, #1
 8013a48:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 8013a4c:	4b10      	ldr	r3, [pc, #64]	@ (8013a90 <USBD_CDC_TransmitPacket+0x7c>)
 8013a4e:	781b      	ldrb	r3, [r3, #0]
 8013a50:	f003 020f 	and.w	r2, r3, #15
 8013a54:	68bb      	ldr	r3, [r7, #8]
 8013a56:	f8d3 1210 	ldr.w	r1, [r3, #528]	@ 0x210
 8013a5a:	6878      	ldr	r0, [r7, #4]
 8013a5c:	4613      	mov	r3, r2
 8013a5e:	009b      	lsls	r3, r3, #2
 8013a60:	4413      	add	r3, r2
 8013a62:	009b      	lsls	r3, r3, #2
 8013a64:	4403      	add	r3, r0
 8013a66:	3318      	adds	r3, #24
 8013a68:	6019      	str	r1, [r3, #0]
 8013a6a:	4b09      	ldr	r3, [pc, #36]	@ (8013a90 <USBD_CDC_TransmitPacket+0x7c>)
 8013a6c:	7819      	ldrb	r1, [r3, #0]
 8013a6e:	68bb      	ldr	r3, [r7, #8]
 8013a70:	f8d3 2208 	ldr.w	r2, [r3, #520]	@ 0x208
 8013a74:	68bb      	ldr	r3, [r7, #8]
 8013a76:	f8d3 3210 	ldr.w	r3, [r3, #528]	@ 0x210
 8013a7a:	6878      	ldr	r0, [r7, #4]
 8013a7c:	f001 ffef 	bl	8015a5e <USBD_LL_Transmit>
 8013a80:	2300      	movs	r3, #0
 8013a82:	73fb      	strb	r3, [r7, #15]
 8013a84:	7bfb      	ldrb	r3, [r7, #15]
 8013a86:	4618      	mov	r0, r3
 8013a88:	3710      	adds	r7, #16
 8013a8a:	46bd      	mov	sp, r7
 8013a8c:	bd80      	pop	{r7, pc}
 8013a8e:	bf00      	nop
 8013a90:	24000097 	.word	0x24000097

08013a94 <USBD_CDC_ReceivePacket>:
 8013a94:	b580      	push	{r7, lr}
 8013a96:	b084      	sub	sp, #16
 8013a98:	af00      	add	r7, sp, #0
 8013a9a:	6078      	str	r0, [r7, #4]
 8013a9c:	687b      	ldr	r3, [r7, #4]
 8013a9e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013aa2:	687b      	ldr	r3, [r7, #4]
 8013aa4:	32b0      	adds	r2, #176	@ 0xb0
 8013aa6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013aaa:	60fb      	str	r3, [r7, #12]
 8013aac:	687b      	ldr	r3, [r7, #4]
 8013aae:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013ab2:	687b      	ldr	r3, [r7, #4]
 8013ab4:	32b0      	adds	r2, #176	@ 0xb0
 8013ab6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013aba:	2b00      	cmp	r3, #0
 8013abc:	d101      	bne.n	8013ac2 <USBD_CDC_ReceivePacket+0x2e>
 8013abe:	2303      	movs	r3, #3
 8013ac0:	e018      	b.n	8013af4 <USBD_CDC_ReceivePacket+0x60>
 8013ac2:	687b      	ldr	r3, [r7, #4]
 8013ac4:	7c1b      	ldrb	r3, [r3, #16]
 8013ac6:	2b00      	cmp	r3, #0
 8013ac8:	d10a      	bne.n	8013ae0 <USBD_CDC_ReceivePacket+0x4c>
 8013aca:	4b0c      	ldr	r3, [pc, #48]	@ (8013afc <USBD_CDC_ReceivePacket+0x68>)
 8013acc:	7819      	ldrb	r1, [r3, #0]
 8013ace:	68fb      	ldr	r3, [r7, #12]
 8013ad0:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8013ad4:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8013ad8:	6878      	ldr	r0, [r7, #4]
 8013ada:	f001 ffe1 	bl	8015aa0 <USBD_LL_PrepareReceive>
 8013ade:	e008      	b.n	8013af2 <USBD_CDC_ReceivePacket+0x5e>
 8013ae0:	4b06      	ldr	r3, [pc, #24]	@ (8013afc <USBD_CDC_ReceivePacket+0x68>)
 8013ae2:	7819      	ldrb	r1, [r3, #0]
 8013ae4:	68fb      	ldr	r3, [r7, #12]
 8013ae6:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8013aea:	2340      	movs	r3, #64	@ 0x40
 8013aec:	6878      	ldr	r0, [r7, #4]
 8013aee:	f001 ffd7 	bl	8015aa0 <USBD_LL_PrepareReceive>
 8013af2:	2300      	movs	r3, #0
 8013af4:	4618      	mov	r0, r3
 8013af6:	3710      	adds	r7, #16
 8013af8:	46bd      	mov	sp, r7
 8013afa:	bd80      	pop	{r7, pc}
 8013afc:	24000098 	.word	0x24000098

08013b00 <USBD_Init>:
 8013b00:	b580      	push	{r7, lr}
 8013b02:	b086      	sub	sp, #24
 8013b04:	af00      	add	r7, sp, #0
 8013b06:	60f8      	str	r0, [r7, #12]
 8013b08:	60b9      	str	r1, [r7, #8]
 8013b0a:	4613      	mov	r3, r2
 8013b0c:	71fb      	strb	r3, [r7, #7]
 8013b0e:	68fb      	ldr	r3, [r7, #12]
 8013b10:	2b00      	cmp	r3, #0
 8013b12:	d101      	bne.n	8013b18 <USBD_Init+0x18>
 8013b14:	2303      	movs	r3, #3
 8013b16:	e01f      	b.n	8013b58 <USBD_Init+0x58>
 8013b18:	68fb      	ldr	r3, [r7, #12]
 8013b1a:	2200      	movs	r2, #0
 8013b1c:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
 8013b20:	68fb      	ldr	r3, [r7, #12]
 8013b22:	2200      	movs	r2, #0
 8013b24:	f8c3 22c4 	str.w	r2, [r3, #708]	@ 0x2c4
 8013b28:	68fb      	ldr	r3, [r7, #12]
 8013b2a:	2200      	movs	r2, #0
 8013b2c:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
 8013b30:	68bb      	ldr	r3, [r7, #8]
 8013b32:	2b00      	cmp	r3, #0
 8013b34:	d003      	beq.n	8013b3e <USBD_Init+0x3e>
 8013b36:	68fb      	ldr	r3, [r7, #12]
 8013b38:	68ba      	ldr	r2, [r7, #8]
 8013b3a:	f8c3 22b4 	str.w	r2, [r3, #692]	@ 0x2b4
 8013b3e:	68fb      	ldr	r3, [r7, #12]
 8013b40:	2201      	movs	r2, #1
 8013b42:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8013b46:	68fb      	ldr	r3, [r7, #12]
 8013b48:	79fa      	ldrb	r2, [r7, #7]
 8013b4a:	701a      	strb	r2, [r3, #0]
 8013b4c:	68f8      	ldr	r0, [r7, #12]
 8013b4e:	f001 fe4b 	bl	80157e8 <USBD_LL_Init>
 8013b52:	4603      	mov	r3, r0
 8013b54:	75fb      	strb	r3, [r7, #23]
 8013b56:	7dfb      	ldrb	r3, [r7, #23]
 8013b58:	4618      	mov	r0, r3
 8013b5a:	3718      	adds	r7, #24
 8013b5c:	46bd      	mov	sp, r7
 8013b5e:	bd80      	pop	{r7, pc}

08013b60 <USBD_RegisterClass>:
 8013b60:	b580      	push	{r7, lr}
 8013b62:	b084      	sub	sp, #16
 8013b64:	af00      	add	r7, sp, #0
 8013b66:	6078      	str	r0, [r7, #4]
 8013b68:	6039      	str	r1, [r7, #0]
 8013b6a:	2300      	movs	r3, #0
 8013b6c:	81fb      	strh	r3, [r7, #14]
 8013b6e:	683b      	ldr	r3, [r7, #0]
 8013b70:	2b00      	cmp	r3, #0
 8013b72:	d101      	bne.n	8013b78 <USBD_RegisterClass+0x18>
 8013b74:	2303      	movs	r3, #3
 8013b76:	e025      	b.n	8013bc4 <USBD_RegisterClass+0x64>
 8013b78:	687b      	ldr	r3, [r7, #4]
 8013b7a:	683a      	ldr	r2, [r7, #0]
 8013b7c:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
 8013b80:	687b      	ldr	r3, [r7, #4]
 8013b82:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013b86:	687b      	ldr	r3, [r7, #4]
 8013b88:	32ae      	adds	r2, #174	@ 0xae
 8013b8a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013b8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013b90:	2b00      	cmp	r3, #0
 8013b92:	d00f      	beq.n	8013bb4 <USBD_RegisterClass+0x54>
 8013b94:	687b      	ldr	r3, [r7, #4]
 8013b96:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8013b9a:	687b      	ldr	r3, [r7, #4]
 8013b9c:	32ae      	adds	r2, #174	@ 0xae
 8013b9e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013ba2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013ba4:	f107 020e 	add.w	r2, r7, #14
 8013ba8:	4610      	mov	r0, r2
 8013baa:	4798      	blx	r3
 8013bac:	4602      	mov	r2, r0
 8013bae:	687b      	ldr	r3, [r7, #4]
 8013bb0:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
 8013bb4:	687b      	ldr	r3, [r7, #4]
 8013bb6:	f8d3 32d8 	ldr.w	r3, [r3, #728]	@ 0x2d8
 8013bba:	1c5a      	adds	r2, r3, #1
 8013bbc:	687b      	ldr	r3, [r7, #4]
 8013bbe:	f8c3 22d8 	str.w	r2, [r3, #728]	@ 0x2d8
 8013bc2:	2300      	movs	r3, #0
 8013bc4:	4618      	mov	r0, r3
 8013bc6:	3710      	adds	r7, #16
 8013bc8:	46bd      	mov	sp, r7
 8013bca:	bd80      	pop	{r7, pc}

08013bcc <USBD_Start>:
 8013bcc:	b580      	push	{r7, lr}
 8013bce:	b082      	sub	sp, #8
 8013bd0:	af00      	add	r7, sp, #0
 8013bd2:	6078      	str	r0, [r7, #4]
 8013bd4:	6878      	ldr	r0, [r7, #4]
 8013bd6:	f001 fe59 	bl	801588c <USBD_LL_Start>
 8013bda:	4603      	mov	r3, r0
 8013bdc:	4618      	mov	r0, r3
 8013bde:	3708      	adds	r7, #8
 8013be0:	46bd      	mov	sp, r7
 8013be2:	bd80      	pop	{r7, pc}

08013be4 <USBD_RunTestMode>:
 8013be4:	b480      	push	{r7}
 8013be6:	b083      	sub	sp, #12
 8013be8:	af00      	add	r7, sp, #0
 8013bea:	6078      	str	r0, [r7, #4]
 8013bec:	2300      	movs	r3, #0
 8013bee:	4618      	mov	r0, r3
 8013bf0:	370c      	adds	r7, #12
 8013bf2:	46bd      	mov	sp, r7
 8013bf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013bf8:	4770      	bx	lr

08013bfa <USBD_SetClassConfig>:
 8013bfa:	b580      	push	{r7, lr}
 8013bfc:	b084      	sub	sp, #16
 8013bfe:	af00      	add	r7, sp, #0
 8013c00:	6078      	str	r0, [r7, #4]
 8013c02:	460b      	mov	r3, r1
 8013c04:	70fb      	strb	r3, [r7, #3]
 8013c06:	2300      	movs	r3, #0
 8013c08:	73fb      	strb	r3, [r7, #15]
 8013c0a:	687b      	ldr	r3, [r7, #4]
 8013c0c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8013c10:	2b00      	cmp	r3, #0
 8013c12:	d009      	beq.n	8013c28 <USBD_SetClassConfig+0x2e>
 8013c14:	687b      	ldr	r3, [r7, #4]
 8013c16:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8013c1a:	681b      	ldr	r3, [r3, #0]
 8013c1c:	78fa      	ldrb	r2, [r7, #3]
 8013c1e:	4611      	mov	r1, r2
 8013c20:	6878      	ldr	r0, [r7, #4]
 8013c22:	4798      	blx	r3
 8013c24:	4603      	mov	r3, r0
 8013c26:	73fb      	strb	r3, [r7, #15]
 8013c28:	7bfb      	ldrb	r3, [r7, #15]
 8013c2a:	4618      	mov	r0, r3
 8013c2c:	3710      	adds	r7, #16
 8013c2e:	46bd      	mov	sp, r7
 8013c30:	bd80      	pop	{r7, pc}

08013c32 <USBD_ClrClassConfig>:
 8013c32:	b580      	push	{r7, lr}
 8013c34:	b084      	sub	sp, #16
 8013c36:	af00      	add	r7, sp, #0
 8013c38:	6078      	str	r0, [r7, #4]
 8013c3a:	460b      	mov	r3, r1
 8013c3c:	70fb      	strb	r3, [r7, #3]
 8013c3e:	2300      	movs	r3, #0
 8013c40:	73fb      	strb	r3, [r7, #15]
 8013c42:	687b      	ldr	r3, [r7, #4]
 8013c44:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8013c48:	685b      	ldr	r3, [r3, #4]
 8013c4a:	78fa      	ldrb	r2, [r7, #3]
 8013c4c:	4611      	mov	r1, r2
 8013c4e:	6878      	ldr	r0, [r7, #4]
 8013c50:	4798      	blx	r3
 8013c52:	4603      	mov	r3, r0
 8013c54:	2b00      	cmp	r3, #0
 8013c56:	d001      	beq.n	8013c5c <USBD_ClrClassConfig+0x2a>
 8013c58:	2303      	movs	r3, #3
 8013c5a:	73fb      	strb	r3, [r7, #15]
 8013c5c:	7bfb      	ldrb	r3, [r7, #15]
 8013c5e:	4618      	mov	r0, r3
 8013c60:	3710      	adds	r7, #16
 8013c62:	46bd      	mov	sp, r7
 8013c64:	bd80      	pop	{r7, pc}

08013c66 <USBD_LL_SetupStage>:
 8013c66:	b580      	push	{r7, lr}
 8013c68:	b084      	sub	sp, #16
 8013c6a:	af00      	add	r7, sp, #0
 8013c6c:	6078      	str	r0, [r7, #4]
 8013c6e:	6039      	str	r1, [r7, #0]
 8013c70:	687b      	ldr	r3, [r7, #4]
 8013c72:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8013c76:	6839      	ldr	r1, [r7, #0]
 8013c78:	4618      	mov	r0, r3
 8013c7a:	f001 f936 	bl	8014eea <USBD_ParseSetupRequest>
 8013c7e:	687b      	ldr	r3, [r7, #4]
 8013c80:	2201      	movs	r2, #1
 8013c82:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8013c86:	687b      	ldr	r3, [r7, #4]
 8013c88:	f8b3 32b0 	ldrh.w	r3, [r3, #688]	@ 0x2b0
 8013c8c:	461a      	mov	r2, r3
 8013c8e:	687b      	ldr	r3, [r7, #4]
 8013c90:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298
 8013c94:	687b      	ldr	r3, [r7, #4]
 8013c96:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8013c9a:	f003 031f 	and.w	r3, r3, #31
 8013c9e:	2b02      	cmp	r3, #2
 8013ca0:	d01a      	beq.n	8013cd8 <USBD_LL_SetupStage+0x72>
 8013ca2:	2b02      	cmp	r3, #2
 8013ca4:	d822      	bhi.n	8013cec <USBD_LL_SetupStage+0x86>
 8013ca6:	2b00      	cmp	r3, #0
 8013ca8:	d002      	beq.n	8013cb0 <USBD_LL_SetupStage+0x4a>
 8013caa:	2b01      	cmp	r3, #1
 8013cac:	d00a      	beq.n	8013cc4 <USBD_LL_SetupStage+0x5e>
 8013cae:	e01d      	b.n	8013cec <USBD_LL_SetupStage+0x86>
 8013cb0:	687b      	ldr	r3, [r7, #4]
 8013cb2:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8013cb6:	4619      	mov	r1, r3
 8013cb8:	6878      	ldr	r0, [r7, #4]
 8013cba:	f000 fb63 	bl	8014384 <USBD_StdDevReq>
 8013cbe:	4603      	mov	r3, r0
 8013cc0:	73fb      	strb	r3, [r7, #15]
 8013cc2:	e020      	b.n	8013d06 <USBD_LL_SetupStage+0xa0>
 8013cc4:	687b      	ldr	r3, [r7, #4]
 8013cc6:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8013cca:	4619      	mov	r1, r3
 8013ccc:	6878      	ldr	r0, [r7, #4]
 8013cce:	f000 fbcb 	bl	8014468 <USBD_StdItfReq>
 8013cd2:	4603      	mov	r3, r0
 8013cd4:	73fb      	strb	r3, [r7, #15]
 8013cd6:	e016      	b.n	8013d06 <USBD_LL_SetupStage+0xa0>
 8013cd8:	687b      	ldr	r3, [r7, #4]
 8013cda:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8013cde:	4619      	mov	r1, r3
 8013ce0:	6878      	ldr	r0, [r7, #4]
 8013ce2:	f000 fc2d 	bl	8014540 <USBD_StdEPReq>
 8013ce6:	4603      	mov	r3, r0
 8013ce8:	73fb      	strb	r3, [r7, #15]
 8013cea:	e00c      	b.n	8013d06 <USBD_LL_SetupStage+0xa0>
 8013cec:	687b      	ldr	r3, [r7, #4]
 8013cee:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8013cf2:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 8013cf6:	b2db      	uxtb	r3, r3
 8013cf8:	4619      	mov	r1, r3
 8013cfa:	6878      	ldr	r0, [r7, #4]
 8013cfc:	f001 fe26 	bl	801594c <USBD_LL_StallEP>
 8013d00:	4603      	mov	r3, r0
 8013d02:	73fb      	strb	r3, [r7, #15]
 8013d04:	bf00      	nop
 8013d06:	7bfb      	ldrb	r3, [r7, #15]
 8013d08:	4618      	mov	r0, r3
 8013d0a:	3710      	adds	r7, #16
 8013d0c:	46bd      	mov	sp, r7
 8013d0e:	bd80      	pop	{r7, pc}

08013d10 <USBD_LL_DataOutStage>:
 8013d10:	b580      	push	{r7, lr}
 8013d12:	b086      	sub	sp, #24
 8013d14:	af00      	add	r7, sp, #0
 8013d16:	60f8      	str	r0, [r7, #12]
 8013d18:	460b      	mov	r3, r1
 8013d1a:	607a      	str	r2, [r7, #4]
 8013d1c:	72fb      	strb	r3, [r7, #11]
 8013d1e:	2300      	movs	r3, #0
 8013d20:	75fb      	strb	r3, [r7, #23]
 8013d22:	7afb      	ldrb	r3, [r7, #11]
 8013d24:	2b00      	cmp	r3, #0
 8013d26:	d16e      	bne.n	8013e06 <USBD_LL_DataOutStage+0xf6>
 8013d28:	68fb      	ldr	r3, [r7, #12]
 8013d2a:	f503 73aa 	add.w	r3, r3, #340	@ 0x154
 8013d2e:	613b      	str	r3, [r7, #16]
 8013d30:	68fb      	ldr	r3, [r7, #12]
 8013d32:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 8013d36:	2b03      	cmp	r3, #3
 8013d38:	f040 8098 	bne.w	8013e6c <USBD_LL_DataOutStage+0x15c>
 8013d3c:	693b      	ldr	r3, [r7, #16]
 8013d3e:	689a      	ldr	r2, [r3, #8]
 8013d40:	693b      	ldr	r3, [r7, #16]
 8013d42:	68db      	ldr	r3, [r3, #12]
 8013d44:	429a      	cmp	r2, r3
 8013d46:	d913      	bls.n	8013d70 <USBD_LL_DataOutStage+0x60>
 8013d48:	693b      	ldr	r3, [r7, #16]
 8013d4a:	689a      	ldr	r2, [r3, #8]
 8013d4c:	693b      	ldr	r3, [r7, #16]
 8013d4e:	68db      	ldr	r3, [r3, #12]
 8013d50:	1ad2      	subs	r2, r2, r3
 8013d52:	693b      	ldr	r3, [r7, #16]
 8013d54:	609a      	str	r2, [r3, #8]
 8013d56:	693b      	ldr	r3, [r7, #16]
 8013d58:	68da      	ldr	r2, [r3, #12]
 8013d5a:	693b      	ldr	r3, [r7, #16]
 8013d5c:	689b      	ldr	r3, [r3, #8]
 8013d5e:	4293      	cmp	r3, r2
 8013d60:	bf28      	it	cs
 8013d62:	4613      	movcs	r3, r2
 8013d64:	461a      	mov	r2, r3
 8013d66:	6879      	ldr	r1, [r7, #4]
 8013d68:	68f8      	ldr	r0, [r7, #12]
 8013d6a:	f001 f9be 	bl	80150ea <USBD_CtlContinueRx>
 8013d6e:	e07d      	b.n	8013e6c <USBD_LL_DataOutStage+0x15c>
 8013d70:	68fb      	ldr	r3, [r7, #12]
 8013d72:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8013d76:	f003 031f 	and.w	r3, r3, #31
 8013d7a:	2b02      	cmp	r3, #2
 8013d7c:	d014      	beq.n	8013da8 <USBD_LL_DataOutStage+0x98>
 8013d7e:	2b02      	cmp	r3, #2
 8013d80:	d81d      	bhi.n	8013dbe <USBD_LL_DataOutStage+0xae>
 8013d82:	2b00      	cmp	r3, #0
 8013d84:	d002      	beq.n	8013d8c <USBD_LL_DataOutStage+0x7c>
 8013d86:	2b01      	cmp	r3, #1
 8013d88:	d003      	beq.n	8013d92 <USBD_LL_DataOutStage+0x82>
 8013d8a:	e018      	b.n	8013dbe <USBD_LL_DataOutStage+0xae>
 8013d8c:	2300      	movs	r3, #0
 8013d8e:	75bb      	strb	r3, [r7, #22]
 8013d90:	e018      	b.n	8013dc4 <USBD_LL_DataOutStage+0xb4>
 8013d92:	68fb      	ldr	r3, [r7, #12]
 8013d94:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	@ 0x2ae
 8013d98:	b2db      	uxtb	r3, r3
 8013d9a:	4619      	mov	r1, r3
 8013d9c:	68f8      	ldr	r0, [r7, #12]
 8013d9e:	f000 fa64 	bl	801426a <USBD_CoreFindIF>
 8013da2:	4603      	mov	r3, r0
 8013da4:	75bb      	strb	r3, [r7, #22]
 8013da6:	e00d      	b.n	8013dc4 <USBD_LL_DataOutStage+0xb4>
 8013da8:	68fb      	ldr	r3, [r7, #12]
 8013daa:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	@ 0x2ae
 8013dae:	b2db      	uxtb	r3, r3
 8013db0:	4619      	mov	r1, r3
 8013db2:	68f8      	ldr	r0, [r7, #12]
 8013db4:	f000 fa66 	bl	8014284 <USBD_CoreFindEP>
 8013db8:	4603      	mov	r3, r0
 8013dba:	75bb      	strb	r3, [r7, #22]
 8013dbc:	e002      	b.n	8013dc4 <USBD_LL_DataOutStage+0xb4>
 8013dbe:	2300      	movs	r3, #0
 8013dc0:	75bb      	strb	r3, [r7, #22]
 8013dc2:	bf00      	nop
 8013dc4:	7dbb      	ldrb	r3, [r7, #22]
 8013dc6:	2b00      	cmp	r3, #0
 8013dc8:	d119      	bne.n	8013dfe <USBD_LL_DataOutStage+0xee>
 8013dca:	68fb      	ldr	r3, [r7, #12]
 8013dcc:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8013dd0:	b2db      	uxtb	r3, r3
 8013dd2:	2b03      	cmp	r3, #3
 8013dd4:	d113      	bne.n	8013dfe <USBD_LL_DataOutStage+0xee>
 8013dd6:	7dba      	ldrb	r2, [r7, #22]
 8013dd8:	68fb      	ldr	r3, [r7, #12]
 8013dda:	32ae      	adds	r2, #174	@ 0xae
 8013ddc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013de0:	691b      	ldr	r3, [r3, #16]
 8013de2:	2b00      	cmp	r3, #0
 8013de4:	d00b      	beq.n	8013dfe <USBD_LL_DataOutStage+0xee>
 8013de6:	7dba      	ldrb	r2, [r7, #22]
 8013de8:	68fb      	ldr	r3, [r7, #12]
 8013dea:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8013dee:	7dba      	ldrb	r2, [r7, #22]
 8013df0:	68fb      	ldr	r3, [r7, #12]
 8013df2:	32ae      	adds	r2, #174	@ 0xae
 8013df4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013df8:	691b      	ldr	r3, [r3, #16]
 8013dfa:	68f8      	ldr	r0, [r7, #12]
 8013dfc:	4798      	blx	r3
 8013dfe:	68f8      	ldr	r0, [r7, #12]
 8013e00:	f001 f984 	bl	801510c <USBD_CtlSendStatus>
 8013e04:	e032      	b.n	8013e6c <USBD_LL_DataOutStage+0x15c>
 8013e06:	7afb      	ldrb	r3, [r7, #11]
 8013e08:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8013e0c:	b2db      	uxtb	r3, r3
 8013e0e:	4619      	mov	r1, r3
 8013e10:	68f8      	ldr	r0, [r7, #12]
 8013e12:	f000 fa37 	bl	8014284 <USBD_CoreFindEP>
 8013e16:	4603      	mov	r3, r0
 8013e18:	75bb      	strb	r3, [r7, #22]
 8013e1a:	7dbb      	ldrb	r3, [r7, #22]
 8013e1c:	2bff      	cmp	r3, #255	@ 0xff
 8013e1e:	d025      	beq.n	8013e6c <USBD_LL_DataOutStage+0x15c>
 8013e20:	7dbb      	ldrb	r3, [r7, #22]
 8013e22:	2b00      	cmp	r3, #0
 8013e24:	d122      	bne.n	8013e6c <USBD_LL_DataOutStage+0x15c>
 8013e26:	68fb      	ldr	r3, [r7, #12]
 8013e28:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8013e2c:	b2db      	uxtb	r3, r3
 8013e2e:	2b03      	cmp	r3, #3
 8013e30:	d117      	bne.n	8013e62 <USBD_LL_DataOutStage+0x152>
 8013e32:	7dba      	ldrb	r2, [r7, #22]
 8013e34:	68fb      	ldr	r3, [r7, #12]
 8013e36:	32ae      	adds	r2, #174	@ 0xae
 8013e38:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013e3c:	699b      	ldr	r3, [r3, #24]
 8013e3e:	2b00      	cmp	r3, #0
 8013e40:	d00f      	beq.n	8013e62 <USBD_LL_DataOutStage+0x152>
 8013e42:	7dba      	ldrb	r2, [r7, #22]
 8013e44:	68fb      	ldr	r3, [r7, #12]
 8013e46:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8013e4a:	7dba      	ldrb	r2, [r7, #22]
 8013e4c:	68fb      	ldr	r3, [r7, #12]
 8013e4e:	32ae      	adds	r2, #174	@ 0xae
 8013e50:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013e54:	699b      	ldr	r3, [r3, #24]
 8013e56:	7afa      	ldrb	r2, [r7, #11]
 8013e58:	4611      	mov	r1, r2
 8013e5a:	68f8      	ldr	r0, [r7, #12]
 8013e5c:	4798      	blx	r3
 8013e5e:	4603      	mov	r3, r0
 8013e60:	75fb      	strb	r3, [r7, #23]
 8013e62:	7dfb      	ldrb	r3, [r7, #23]
 8013e64:	2b00      	cmp	r3, #0
 8013e66:	d001      	beq.n	8013e6c <USBD_LL_DataOutStage+0x15c>
 8013e68:	7dfb      	ldrb	r3, [r7, #23]
 8013e6a:	e000      	b.n	8013e6e <USBD_LL_DataOutStage+0x15e>
 8013e6c:	2300      	movs	r3, #0
 8013e6e:	4618      	mov	r0, r3
 8013e70:	3718      	adds	r7, #24
 8013e72:	46bd      	mov	sp, r7
 8013e74:	bd80      	pop	{r7, pc}

08013e76 <USBD_LL_DataInStage>:
 8013e76:	b580      	push	{r7, lr}
 8013e78:	b086      	sub	sp, #24
 8013e7a:	af00      	add	r7, sp, #0
 8013e7c:	60f8      	str	r0, [r7, #12]
 8013e7e:	460b      	mov	r3, r1
 8013e80:	607a      	str	r2, [r7, #4]
 8013e82:	72fb      	strb	r3, [r7, #11]
 8013e84:	7afb      	ldrb	r3, [r7, #11]
 8013e86:	2b00      	cmp	r3, #0
 8013e88:	d16f      	bne.n	8013f6a <USBD_LL_DataInStage+0xf4>
 8013e8a:	68fb      	ldr	r3, [r7, #12]
 8013e8c:	3314      	adds	r3, #20
 8013e8e:	613b      	str	r3, [r7, #16]
 8013e90:	68fb      	ldr	r3, [r7, #12]
 8013e92:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 8013e96:	2b02      	cmp	r3, #2
 8013e98:	d15a      	bne.n	8013f50 <USBD_LL_DataInStage+0xda>
 8013e9a:	693b      	ldr	r3, [r7, #16]
 8013e9c:	689a      	ldr	r2, [r3, #8]
 8013e9e:	693b      	ldr	r3, [r7, #16]
 8013ea0:	68db      	ldr	r3, [r3, #12]
 8013ea2:	429a      	cmp	r2, r3
 8013ea4:	d914      	bls.n	8013ed0 <USBD_LL_DataInStage+0x5a>
 8013ea6:	693b      	ldr	r3, [r7, #16]
 8013ea8:	689a      	ldr	r2, [r3, #8]
 8013eaa:	693b      	ldr	r3, [r7, #16]
 8013eac:	68db      	ldr	r3, [r3, #12]
 8013eae:	1ad2      	subs	r2, r2, r3
 8013eb0:	693b      	ldr	r3, [r7, #16]
 8013eb2:	609a      	str	r2, [r3, #8]
 8013eb4:	693b      	ldr	r3, [r7, #16]
 8013eb6:	689b      	ldr	r3, [r3, #8]
 8013eb8:	461a      	mov	r2, r3
 8013eba:	6879      	ldr	r1, [r7, #4]
 8013ebc:	68f8      	ldr	r0, [r7, #12]
 8013ebe:	f001 f8e6 	bl	801508e <USBD_CtlContinueSendData>
 8013ec2:	2300      	movs	r3, #0
 8013ec4:	2200      	movs	r2, #0
 8013ec6:	2100      	movs	r1, #0
 8013ec8:	68f8      	ldr	r0, [r7, #12]
 8013eca:	f001 fde9 	bl	8015aa0 <USBD_LL_PrepareReceive>
 8013ece:	e03f      	b.n	8013f50 <USBD_LL_DataInStage+0xda>
 8013ed0:	693b      	ldr	r3, [r7, #16]
 8013ed2:	68da      	ldr	r2, [r3, #12]
 8013ed4:	693b      	ldr	r3, [r7, #16]
 8013ed6:	689b      	ldr	r3, [r3, #8]
 8013ed8:	429a      	cmp	r2, r3
 8013eda:	d11c      	bne.n	8013f16 <USBD_LL_DataInStage+0xa0>
 8013edc:	693b      	ldr	r3, [r7, #16]
 8013ede:	685a      	ldr	r2, [r3, #4]
 8013ee0:	693b      	ldr	r3, [r7, #16]
 8013ee2:	68db      	ldr	r3, [r3, #12]
 8013ee4:	429a      	cmp	r2, r3
 8013ee6:	d316      	bcc.n	8013f16 <USBD_LL_DataInStage+0xa0>
 8013ee8:	693b      	ldr	r3, [r7, #16]
 8013eea:	685a      	ldr	r2, [r3, #4]
 8013eec:	68fb      	ldr	r3, [r7, #12]
 8013eee:	f8d3 3298 	ldr.w	r3, [r3, #664]	@ 0x298
 8013ef2:	429a      	cmp	r2, r3
 8013ef4:	d20f      	bcs.n	8013f16 <USBD_LL_DataInStage+0xa0>
 8013ef6:	2200      	movs	r2, #0
 8013ef8:	2100      	movs	r1, #0
 8013efa:	68f8      	ldr	r0, [r7, #12]
 8013efc:	f001 f8c7 	bl	801508e <USBD_CtlContinueSendData>
 8013f00:	68fb      	ldr	r3, [r7, #12]
 8013f02:	2200      	movs	r2, #0
 8013f04:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298
 8013f08:	2300      	movs	r3, #0
 8013f0a:	2200      	movs	r2, #0
 8013f0c:	2100      	movs	r1, #0
 8013f0e:	68f8      	ldr	r0, [r7, #12]
 8013f10:	f001 fdc6 	bl	8015aa0 <USBD_LL_PrepareReceive>
 8013f14:	e01c      	b.n	8013f50 <USBD_LL_DataInStage+0xda>
 8013f16:	68fb      	ldr	r3, [r7, #12]
 8013f18:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8013f1c:	b2db      	uxtb	r3, r3
 8013f1e:	2b03      	cmp	r3, #3
 8013f20:	d10f      	bne.n	8013f42 <USBD_LL_DataInStage+0xcc>
 8013f22:	68fb      	ldr	r3, [r7, #12]
 8013f24:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8013f28:	68db      	ldr	r3, [r3, #12]
 8013f2a:	2b00      	cmp	r3, #0
 8013f2c:	d009      	beq.n	8013f42 <USBD_LL_DataInStage+0xcc>
 8013f2e:	68fb      	ldr	r3, [r7, #12]
 8013f30:	2200      	movs	r2, #0
 8013f32:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8013f36:	68fb      	ldr	r3, [r7, #12]
 8013f38:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8013f3c:	68db      	ldr	r3, [r3, #12]
 8013f3e:	68f8      	ldr	r0, [r7, #12]
 8013f40:	4798      	blx	r3
 8013f42:	2180      	movs	r1, #128	@ 0x80
 8013f44:	68f8      	ldr	r0, [r7, #12]
 8013f46:	f001 fd01 	bl	801594c <USBD_LL_StallEP>
 8013f4a:	68f8      	ldr	r0, [r7, #12]
 8013f4c:	f001 f8f1 	bl	8015132 <USBD_CtlReceiveStatus>
 8013f50:	68fb      	ldr	r3, [r7, #12]
 8013f52:	f893 32a0 	ldrb.w	r3, [r3, #672]	@ 0x2a0
 8013f56:	2b00      	cmp	r3, #0
 8013f58:	d03a      	beq.n	8013fd0 <USBD_LL_DataInStage+0x15a>
 8013f5a:	68f8      	ldr	r0, [r7, #12]
 8013f5c:	f7ff fe42 	bl	8013be4 <USBD_RunTestMode>
 8013f60:	68fb      	ldr	r3, [r7, #12]
 8013f62:	2200      	movs	r2, #0
 8013f64:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8013f68:	e032      	b.n	8013fd0 <USBD_LL_DataInStage+0x15a>
 8013f6a:	7afb      	ldrb	r3, [r7, #11]
 8013f6c:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8013f70:	b2db      	uxtb	r3, r3
 8013f72:	4619      	mov	r1, r3
 8013f74:	68f8      	ldr	r0, [r7, #12]
 8013f76:	f000 f985 	bl	8014284 <USBD_CoreFindEP>
 8013f7a:	4603      	mov	r3, r0
 8013f7c:	75fb      	strb	r3, [r7, #23]
 8013f7e:	7dfb      	ldrb	r3, [r7, #23]
 8013f80:	2bff      	cmp	r3, #255	@ 0xff
 8013f82:	d025      	beq.n	8013fd0 <USBD_LL_DataInStage+0x15a>
 8013f84:	7dfb      	ldrb	r3, [r7, #23]
 8013f86:	2b00      	cmp	r3, #0
 8013f88:	d122      	bne.n	8013fd0 <USBD_LL_DataInStage+0x15a>
 8013f8a:	68fb      	ldr	r3, [r7, #12]
 8013f8c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8013f90:	b2db      	uxtb	r3, r3
 8013f92:	2b03      	cmp	r3, #3
 8013f94:	d11c      	bne.n	8013fd0 <USBD_LL_DataInStage+0x15a>
 8013f96:	7dfa      	ldrb	r2, [r7, #23]
 8013f98:	68fb      	ldr	r3, [r7, #12]
 8013f9a:	32ae      	adds	r2, #174	@ 0xae
 8013f9c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013fa0:	695b      	ldr	r3, [r3, #20]
 8013fa2:	2b00      	cmp	r3, #0
 8013fa4:	d014      	beq.n	8013fd0 <USBD_LL_DataInStage+0x15a>
 8013fa6:	7dfa      	ldrb	r2, [r7, #23]
 8013fa8:	68fb      	ldr	r3, [r7, #12]
 8013faa:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8013fae:	7dfa      	ldrb	r2, [r7, #23]
 8013fb0:	68fb      	ldr	r3, [r7, #12]
 8013fb2:	32ae      	adds	r2, #174	@ 0xae
 8013fb4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013fb8:	695b      	ldr	r3, [r3, #20]
 8013fba:	7afa      	ldrb	r2, [r7, #11]
 8013fbc:	4611      	mov	r1, r2
 8013fbe:	68f8      	ldr	r0, [r7, #12]
 8013fc0:	4798      	blx	r3
 8013fc2:	4603      	mov	r3, r0
 8013fc4:	75bb      	strb	r3, [r7, #22]
 8013fc6:	7dbb      	ldrb	r3, [r7, #22]
 8013fc8:	2b00      	cmp	r3, #0
 8013fca:	d001      	beq.n	8013fd0 <USBD_LL_DataInStage+0x15a>
 8013fcc:	7dbb      	ldrb	r3, [r7, #22]
 8013fce:	e000      	b.n	8013fd2 <USBD_LL_DataInStage+0x15c>
 8013fd0:	2300      	movs	r3, #0
 8013fd2:	4618      	mov	r0, r3
 8013fd4:	3718      	adds	r7, #24
 8013fd6:	46bd      	mov	sp, r7
 8013fd8:	bd80      	pop	{r7, pc}

08013fda <USBD_LL_Reset>:
 8013fda:	b580      	push	{r7, lr}
 8013fdc:	b084      	sub	sp, #16
 8013fde:	af00      	add	r7, sp, #0
 8013fe0:	6078      	str	r0, [r7, #4]
 8013fe2:	2300      	movs	r3, #0
 8013fe4:	73fb      	strb	r3, [r7, #15]
 8013fe6:	687b      	ldr	r3, [r7, #4]
 8013fe8:	2201      	movs	r2, #1
 8013fea:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8013fee:	687b      	ldr	r3, [r7, #4]
 8013ff0:	2200      	movs	r2, #0
 8013ff2:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8013ff6:	687b      	ldr	r3, [r7, #4]
 8013ff8:	2200      	movs	r2, #0
 8013ffa:	605a      	str	r2, [r3, #4]
 8013ffc:	687b      	ldr	r3, [r7, #4]
 8013ffe:	2200      	movs	r2, #0
 8014000:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 8014004:	687b      	ldr	r3, [r7, #4]
 8014006:	2200      	movs	r2, #0
 8014008:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 801400c:	687b      	ldr	r3, [r7, #4]
 801400e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014012:	2b00      	cmp	r3, #0
 8014014:	d014      	beq.n	8014040 <USBD_LL_Reset+0x66>
 8014016:	687b      	ldr	r3, [r7, #4]
 8014018:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 801401c:	685b      	ldr	r3, [r3, #4]
 801401e:	2b00      	cmp	r3, #0
 8014020:	d00e      	beq.n	8014040 <USBD_LL_Reset+0x66>
 8014022:	687b      	ldr	r3, [r7, #4]
 8014024:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014028:	685b      	ldr	r3, [r3, #4]
 801402a:	687a      	ldr	r2, [r7, #4]
 801402c:	6852      	ldr	r2, [r2, #4]
 801402e:	b2d2      	uxtb	r2, r2
 8014030:	4611      	mov	r1, r2
 8014032:	6878      	ldr	r0, [r7, #4]
 8014034:	4798      	blx	r3
 8014036:	4603      	mov	r3, r0
 8014038:	2b00      	cmp	r3, #0
 801403a:	d001      	beq.n	8014040 <USBD_LL_Reset+0x66>
 801403c:	2303      	movs	r3, #3
 801403e:	73fb      	strb	r3, [r7, #15]
 8014040:	2340      	movs	r3, #64	@ 0x40
 8014042:	2200      	movs	r2, #0
 8014044:	2100      	movs	r1, #0
 8014046:	6878      	ldr	r0, [r7, #4]
 8014048:	f001 fc3b 	bl	80158c2 <USBD_LL_OpenEP>
 801404c:	687b      	ldr	r3, [r7, #4]
 801404e:	2201      	movs	r2, #1
 8014050:	f8a3 2164 	strh.w	r2, [r3, #356]	@ 0x164
 8014054:	687b      	ldr	r3, [r7, #4]
 8014056:	2240      	movs	r2, #64	@ 0x40
 8014058:	f8c3 2160 	str.w	r2, [r3, #352]	@ 0x160
 801405c:	2340      	movs	r3, #64	@ 0x40
 801405e:	2200      	movs	r2, #0
 8014060:	2180      	movs	r1, #128	@ 0x80
 8014062:	6878      	ldr	r0, [r7, #4]
 8014064:	f001 fc2d 	bl	80158c2 <USBD_LL_OpenEP>
 8014068:	687b      	ldr	r3, [r7, #4]
 801406a:	2201      	movs	r2, #1
 801406c:	849a      	strh	r2, [r3, #36]	@ 0x24
 801406e:	687b      	ldr	r3, [r7, #4]
 8014070:	2240      	movs	r2, #64	@ 0x40
 8014072:	621a      	str	r2, [r3, #32]
 8014074:	7bfb      	ldrb	r3, [r7, #15]
 8014076:	4618      	mov	r0, r3
 8014078:	3710      	adds	r7, #16
 801407a:	46bd      	mov	sp, r7
 801407c:	bd80      	pop	{r7, pc}

0801407e <USBD_LL_SetSpeed>:
 801407e:	b480      	push	{r7}
 8014080:	b083      	sub	sp, #12
 8014082:	af00      	add	r7, sp, #0
 8014084:	6078      	str	r0, [r7, #4]
 8014086:	460b      	mov	r3, r1
 8014088:	70fb      	strb	r3, [r7, #3]
 801408a:	687b      	ldr	r3, [r7, #4]
 801408c:	78fa      	ldrb	r2, [r7, #3]
 801408e:	741a      	strb	r2, [r3, #16]
 8014090:	2300      	movs	r3, #0
 8014092:	4618      	mov	r0, r3
 8014094:	370c      	adds	r7, #12
 8014096:	46bd      	mov	sp, r7
 8014098:	f85d 7b04 	ldr.w	r7, [sp], #4
 801409c:	4770      	bx	lr

0801409e <USBD_LL_Suspend>:
 801409e:	b480      	push	{r7}
 80140a0:	b083      	sub	sp, #12
 80140a2:	af00      	add	r7, sp, #0
 80140a4:	6078      	str	r0, [r7, #4]
 80140a6:	687b      	ldr	r3, [r7, #4]
 80140a8:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80140ac:	b2db      	uxtb	r3, r3
 80140ae:	2b04      	cmp	r3, #4
 80140b0:	d006      	beq.n	80140c0 <USBD_LL_Suspend+0x22>
 80140b2:	687b      	ldr	r3, [r7, #4]
 80140b4:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80140b8:	b2da      	uxtb	r2, r3
 80140ba:	687b      	ldr	r3, [r7, #4]
 80140bc:	f883 229d 	strb.w	r2, [r3, #669]	@ 0x29d
 80140c0:	687b      	ldr	r3, [r7, #4]
 80140c2:	2204      	movs	r2, #4
 80140c4:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 80140c8:	2300      	movs	r3, #0
 80140ca:	4618      	mov	r0, r3
 80140cc:	370c      	adds	r7, #12
 80140ce:	46bd      	mov	sp, r7
 80140d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80140d4:	4770      	bx	lr

080140d6 <USBD_LL_Resume>:
 80140d6:	b480      	push	{r7}
 80140d8:	b083      	sub	sp, #12
 80140da:	af00      	add	r7, sp, #0
 80140dc:	6078      	str	r0, [r7, #4]
 80140de:	687b      	ldr	r3, [r7, #4]
 80140e0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80140e4:	b2db      	uxtb	r3, r3
 80140e6:	2b04      	cmp	r3, #4
 80140e8:	d106      	bne.n	80140f8 <USBD_LL_Resume+0x22>
 80140ea:	687b      	ldr	r3, [r7, #4]
 80140ec:	f893 329d 	ldrb.w	r3, [r3, #669]	@ 0x29d
 80140f0:	b2da      	uxtb	r2, r3
 80140f2:	687b      	ldr	r3, [r7, #4]
 80140f4:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 80140f8:	2300      	movs	r3, #0
 80140fa:	4618      	mov	r0, r3
 80140fc:	370c      	adds	r7, #12
 80140fe:	46bd      	mov	sp, r7
 8014100:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014104:	4770      	bx	lr

08014106 <USBD_LL_SOF>:
 8014106:	b580      	push	{r7, lr}
 8014108:	b082      	sub	sp, #8
 801410a:	af00      	add	r7, sp, #0
 801410c:	6078      	str	r0, [r7, #4]
 801410e:	687b      	ldr	r3, [r7, #4]
 8014110:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014114:	b2db      	uxtb	r3, r3
 8014116:	2b03      	cmp	r3, #3
 8014118:	d110      	bne.n	801413c <USBD_LL_SOF+0x36>
 801411a:	687b      	ldr	r3, [r7, #4]
 801411c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014120:	2b00      	cmp	r3, #0
 8014122:	d00b      	beq.n	801413c <USBD_LL_SOF+0x36>
 8014124:	687b      	ldr	r3, [r7, #4]
 8014126:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 801412a:	69db      	ldr	r3, [r3, #28]
 801412c:	2b00      	cmp	r3, #0
 801412e:	d005      	beq.n	801413c <USBD_LL_SOF+0x36>
 8014130:	687b      	ldr	r3, [r7, #4]
 8014132:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014136:	69db      	ldr	r3, [r3, #28]
 8014138:	6878      	ldr	r0, [r7, #4]
 801413a:	4798      	blx	r3
 801413c:	2300      	movs	r3, #0
 801413e:	4618      	mov	r0, r3
 8014140:	3708      	adds	r7, #8
 8014142:	46bd      	mov	sp, r7
 8014144:	bd80      	pop	{r7, pc}

08014146 <USBD_LL_IsoINIncomplete>:
 8014146:	b580      	push	{r7, lr}
 8014148:	b082      	sub	sp, #8
 801414a:	af00      	add	r7, sp, #0
 801414c:	6078      	str	r0, [r7, #4]
 801414e:	460b      	mov	r3, r1
 8014150:	70fb      	strb	r3, [r7, #3]
 8014152:	687b      	ldr	r3, [r7, #4]
 8014154:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8014158:	687b      	ldr	r3, [r7, #4]
 801415a:	32ae      	adds	r2, #174	@ 0xae
 801415c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8014160:	2b00      	cmp	r3, #0
 8014162:	d101      	bne.n	8014168 <USBD_LL_IsoINIncomplete+0x22>
 8014164:	2303      	movs	r3, #3
 8014166:	e01c      	b.n	80141a2 <USBD_LL_IsoINIncomplete+0x5c>
 8014168:	687b      	ldr	r3, [r7, #4]
 801416a:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801416e:	b2db      	uxtb	r3, r3
 8014170:	2b03      	cmp	r3, #3
 8014172:	d115      	bne.n	80141a0 <USBD_LL_IsoINIncomplete+0x5a>
 8014174:	687b      	ldr	r3, [r7, #4]
 8014176:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801417a:	687b      	ldr	r3, [r7, #4]
 801417c:	32ae      	adds	r2, #174	@ 0xae
 801417e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8014182:	6a1b      	ldr	r3, [r3, #32]
 8014184:	2b00      	cmp	r3, #0
 8014186:	d00b      	beq.n	80141a0 <USBD_LL_IsoINIncomplete+0x5a>
 8014188:	687b      	ldr	r3, [r7, #4]
 801418a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801418e:	687b      	ldr	r3, [r7, #4]
 8014190:	32ae      	adds	r2, #174	@ 0xae
 8014192:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8014196:	6a1b      	ldr	r3, [r3, #32]
 8014198:	78fa      	ldrb	r2, [r7, #3]
 801419a:	4611      	mov	r1, r2
 801419c:	6878      	ldr	r0, [r7, #4]
 801419e:	4798      	blx	r3
 80141a0:	2300      	movs	r3, #0
 80141a2:	4618      	mov	r0, r3
 80141a4:	3708      	adds	r7, #8
 80141a6:	46bd      	mov	sp, r7
 80141a8:	bd80      	pop	{r7, pc}

080141aa <USBD_LL_IsoOUTIncomplete>:
 80141aa:	b580      	push	{r7, lr}
 80141ac:	b082      	sub	sp, #8
 80141ae:	af00      	add	r7, sp, #0
 80141b0:	6078      	str	r0, [r7, #4]
 80141b2:	460b      	mov	r3, r1
 80141b4:	70fb      	strb	r3, [r7, #3]
 80141b6:	687b      	ldr	r3, [r7, #4]
 80141b8:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80141bc:	687b      	ldr	r3, [r7, #4]
 80141be:	32ae      	adds	r2, #174	@ 0xae
 80141c0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80141c4:	2b00      	cmp	r3, #0
 80141c6:	d101      	bne.n	80141cc <USBD_LL_IsoOUTIncomplete+0x22>
 80141c8:	2303      	movs	r3, #3
 80141ca:	e01c      	b.n	8014206 <USBD_LL_IsoOUTIncomplete+0x5c>
 80141cc:	687b      	ldr	r3, [r7, #4]
 80141ce:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80141d2:	b2db      	uxtb	r3, r3
 80141d4:	2b03      	cmp	r3, #3
 80141d6:	d115      	bne.n	8014204 <USBD_LL_IsoOUTIncomplete+0x5a>
 80141d8:	687b      	ldr	r3, [r7, #4]
 80141da:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80141de:	687b      	ldr	r3, [r7, #4]
 80141e0:	32ae      	adds	r2, #174	@ 0xae
 80141e2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80141e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80141e8:	2b00      	cmp	r3, #0
 80141ea:	d00b      	beq.n	8014204 <USBD_LL_IsoOUTIncomplete+0x5a>
 80141ec:	687b      	ldr	r3, [r7, #4]
 80141ee:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80141f2:	687b      	ldr	r3, [r7, #4]
 80141f4:	32ae      	adds	r2, #174	@ 0xae
 80141f6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80141fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80141fc:	78fa      	ldrb	r2, [r7, #3]
 80141fe:	4611      	mov	r1, r2
 8014200:	6878      	ldr	r0, [r7, #4]
 8014202:	4798      	blx	r3
 8014204:	2300      	movs	r3, #0
 8014206:	4618      	mov	r0, r3
 8014208:	3708      	adds	r7, #8
 801420a:	46bd      	mov	sp, r7
 801420c:	bd80      	pop	{r7, pc}

0801420e <USBD_LL_DevConnected>:
 801420e:	b480      	push	{r7}
 8014210:	b083      	sub	sp, #12
 8014212:	af00      	add	r7, sp, #0
 8014214:	6078      	str	r0, [r7, #4]
 8014216:	2300      	movs	r3, #0
 8014218:	4618      	mov	r0, r3
 801421a:	370c      	adds	r7, #12
 801421c:	46bd      	mov	sp, r7
 801421e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014222:	4770      	bx	lr

08014224 <USBD_LL_DevDisconnected>:
 8014224:	b580      	push	{r7, lr}
 8014226:	b084      	sub	sp, #16
 8014228:	af00      	add	r7, sp, #0
 801422a:	6078      	str	r0, [r7, #4]
 801422c:	2300      	movs	r3, #0
 801422e:	73fb      	strb	r3, [r7, #15]
 8014230:	687b      	ldr	r3, [r7, #4]
 8014232:	2201      	movs	r2, #1
 8014234:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8014238:	687b      	ldr	r3, [r7, #4]
 801423a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 801423e:	2b00      	cmp	r3, #0
 8014240:	d00e      	beq.n	8014260 <USBD_LL_DevDisconnected+0x3c>
 8014242:	687b      	ldr	r3, [r7, #4]
 8014244:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014248:	685b      	ldr	r3, [r3, #4]
 801424a:	687a      	ldr	r2, [r7, #4]
 801424c:	6852      	ldr	r2, [r2, #4]
 801424e:	b2d2      	uxtb	r2, r2
 8014250:	4611      	mov	r1, r2
 8014252:	6878      	ldr	r0, [r7, #4]
 8014254:	4798      	blx	r3
 8014256:	4603      	mov	r3, r0
 8014258:	2b00      	cmp	r3, #0
 801425a:	d001      	beq.n	8014260 <USBD_LL_DevDisconnected+0x3c>
 801425c:	2303      	movs	r3, #3
 801425e:	73fb      	strb	r3, [r7, #15]
 8014260:	7bfb      	ldrb	r3, [r7, #15]
 8014262:	4618      	mov	r0, r3
 8014264:	3710      	adds	r7, #16
 8014266:	46bd      	mov	sp, r7
 8014268:	bd80      	pop	{r7, pc}

0801426a <USBD_CoreFindIF>:
 801426a:	b480      	push	{r7}
 801426c:	b083      	sub	sp, #12
 801426e:	af00      	add	r7, sp, #0
 8014270:	6078      	str	r0, [r7, #4]
 8014272:	460b      	mov	r3, r1
 8014274:	70fb      	strb	r3, [r7, #3]
 8014276:	2300      	movs	r3, #0
 8014278:	4618      	mov	r0, r3
 801427a:	370c      	adds	r7, #12
 801427c:	46bd      	mov	sp, r7
 801427e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014282:	4770      	bx	lr

08014284 <USBD_CoreFindEP>:
 8014284:	b480      	push	{r7}
 8014286:	b083      	sub	sp, #12
 8014288:	af00      	add	r7, sp, #0
 801428a:	6078      	str	r0, [r7, #4]
 801428c:	460b      	mov	r3, r1
 801428e:	70fb      	strb	r3, [r7, #3]
 8014290:	2300      	movs	r3, #0
 8014292:	4618      	mov	r0, r3
 8014294:	370c      	adds	r7, #12
 8014296:	46bd      	mov	sp, r7
 8014298:	f85d 7b04 	ldr.w	r7, [sp], #4
 801429c:	4770      	bx	lr

0801429e <USBD_GetEpDesc>:
 801429e:	b580      	push	{r7, lr}
 80142a0:	b086      	sub	sp, #24
 80142a2:	af00      	add	r7, sp, #0
 80142a4:	6078      	str	r0, [r7, #4]
 80142a6:	460b      	mov	r3, r1
 80142a8:	70fb      	strb	r3, [r7, #3]
 80142aa:	687b      	ldr	r3, [r7, #4]
 80142ac:	617b      	str	r3, [r7, #20]
 80142ae:	687b      	ldr	r3, [r7, #4]
 80142b0:	60fb      	str	r3, [r7, #12]
 80142b2:	2300      	movs	r3, #0
 80142b4:	613b      	str	r3, [r7, #16]
 80142b6:	68fb      	ldr	r3, [r7, #12]
 80142b8:	885b      	ldrh	r3, [r3, #2]
 80142ba:	b29b      	uxth	r3, r3
 80142bc:	68fa      	ldr	r2, [r7, #12]
 80142be:	7812      	ldrb	r2, [r2, #0]
 80142c0:	4293      	cmp	r3, r2
 80142c2:	d91f      	bls.n	8014304 <USBD_GetEpDesc+0x66>
 80142c4:	68fb      	ldr	r3, [r7, #12]
 80142c6:	781b      	ldrb	r3, [r3, #0]
 80142c8:	817b      	strh	r3, [r7, #10]
 80142ca:	e013      	b.n	80142f4 <USBD_GetEpDesc+0x56>
 80142cc:	f107 030a 	add.w	r3, r7, #10
 80142d0:	4619      	mov	r1, r3
 80142d2:	6978      	ldr	r0, [r7, #20]
 80142d4:	f000 f81b 	bl	801430e <USBD_GetNextDesc>
 80142d8:	6178      	str	r0, [r7, #20]
 80142da:	697b      	ldr	r3, [r7, #20]
 80142dc:	785b      	ldrb	r3, [r3, #1]
 80142de:	2b05      	cmp	r3, #5
 80142e0:	d108      	bne.n	80142f4 <USBD_GetEpDesc+0x56>
 80142e2:	697b      	ldr	r3, [r7, #20]
 80142e4:	613b      	str	r3, [r7, #16]
 80142e6:	693b      	ldr	r3, [r7, #16]
 80142e8:	789b      	ldrb	r3, [r3, #2]
 80142ea:	78fa      	ldrb	r2, [r7, #3]
 80142ec:	429a      	cmp	r2, r3
 80142ee:	d008      	beq.n	8014302 <USBD_GetEpDesc+0x64>
 80142f0:	2300      	movs	r3, #0
 80142f2:	613b      	str	r3, [r7, #16]
 80142f4:	68fb      	ldr	r3, [r7, #12]
 80142f6:	885b      	ldrh	r3, [r3, #2]
 80142f8:	b29a      	uxth	r2, r3
 80142fa:	897b      	ldrh	r3, [r7, #10]
 80142fc:	429a      	cmp	r2, r3
 80142fe:	d8e5      	bhi.n	80142cc <USBD_GetEpDesc+0x2e>
 8014300:	e000      	b.n	8014304 <USBD_GetEpDesc+0x66>
 8014302:	bf00      	nop
 8014304:	693b      	ldr	r3, [r7, #16]
 8014306:	4618      	mov	r0, r3
 8014308:	3718      	adds	r7, #24
 801430a:	46bd      	mov	sp, r7
 801430c:	bd80      	pop	{r7, pc}

0801430e <USBD_GetNextDesc>:
 801430e:	b480      	push	{r7}
 8014310:	b085      	sub	sp, #20
 8014312:	af00      	add	r7, sp, #0
 8014314:	6078      	str	r0, [r7, #4]
 8014316:	6039      	str	r1, [r7, #0]
 8014318:	687b      	ldr	r3, [r7, #4]
 801431a:	60fb      	str	r3, [r7, #12]
 801431c:	683b      	ldr	r3, [r7, #0]
 801431e:	881b      	ldrh	r3, [r3, #0]
 8014320:	68fa      	ldr	r2, [r7, #12]
 8014322:	7812      	ldrb	r2, [r2, #0]
 8014324:	4413      	add	r3, r2
 8014326:	b29a      	uxth	r2, r3
 8014328:	683b      	ldr	r3, [r7, #0]
 801432a:	801a      	strh	r2, [r3, #0]
 801432c:	68fb      	ldr	r3, [r7, #12]
 801432e:	781b      	ldrb	r3, [r3, #0]
 8014330:	461a      	mov	r2, r3
 8014332:	687b      	ldr	r3, [r7, #4]
 8014334:	4413      	add	r3, r2
 8014336:	60fb      	str	r3, [r7, #12]
 8014338:	68fb      	ldr	r3, [r7, #12]
 801433a:	4618      	mov	r0, r3
 801433c:	3714      	adds	r7, #20
 801433e:	46bd      	mov	sp, r7
 8014340:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014344:	4770      	bx	lr

08014346 <SWAPBYTE>:
 8014346:	b480      	push	{r7}
 8014348:	b087      	sub	sp, #28
 801434a:	af00      	add	r7, sp, #0
 801434c:	6078      	str	r0, [r7, #4]
 801434e:	687b      	ldr	r3, [r7, #4]
 8014350:	617b      	str	r3, [r7, #20]
 8014352:	697b      	ldr	r3, [r7, #20]
 8014354:	781b      	ldrb	r3, [r3, #0]
 8014356:	827b      	strh	r3, [r7, #18]
 8014358:	697b      	ldr	r3, [r7, #20]
 801435a:	3301      	adds	r3, #1
 801435c:	617b      	str	r3, [r7, #20]
 801435e:	697b      	ldr	r3, [r7, #20]
 8014360:	781b      	ldrb	r3, [r3, #0]
 8014362:	823b      	strh	r3, [r7, #16]
 8014364:	8a3b      	ldrh	r3, [r7, #16]
 8014366:	021b      	lsls	r3, r3, #8
 8014368:	b21a      	sxth	r2, r3
 801436a:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 801436e:	4313      	orrs	r3, r2
 8014370:	b21b      	sxth	r3, r3
 8014372:	81fb      	strh	r3, [r7, #14]
 8014374:	89fb      	ldrh	r3, [r7, #14]
 8014376:	4618      	mov	r0, r3
 8014378:	371c      	adds	r7, #28
 801437a:	46bd      	mov	sp, r7
 801437c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014380:	4770      	bx	lr
	...

08014384 <USBD_StdDevReq>:
 8014384:	b580      	push	{r7, lr}
 8014386:	b084      	sub	sp, #16
 8014388:	af00      	add	r7, sp, #0
 801438a:	6078      	str	r0, [r7, #4]
 801438c:	6039      	str	r1, [r7, #0]
 801438e:	2300      	movs	r3, #0
 8014390:	73fb      	strb	r3, [r7, #15]
 8014392:	683b      	ldr	r3, [r7, #0]
 8014394:	781b      	ldrb	r3, [r3, #0]
 8014396:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801439a:	2b40      	cmp	r3, #64	@ 0x40
 801439c:	d005      	beq.n	80143aa <USBD_StdDevReq+0x26>
 801439e:	2b40      	cmp	r3, #64	@ 0x40
 80143a0:	d857      	bhi.n	8014452 <USBD_StdDevReq+0xce>
 80143a2:	2b00      	cmp	r3, #0
 80143a4:	d00f      	beq.n	80143c6 <USBD_StdDevReq+0x42>
 80143a6:	2b20      	cmp	r3, #32
 80143a8:	d153      	bne.n	8014452 <USBD_StdDevReq+0xce>
 80143aa:	687b      	ldr	r3, [r7, #4]
 80143ac:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80143b0:	687b      	ldr	r3, [r7, #4]
 80143b2:	32ae      	adds	r2, #174	@ 0xae
 80143b4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80143b8:	689b      	ldr	r3, [r3, #8]
 80143ba:	6839      	ldr	r1, [r7, #0]
 80143bc:	6878      	ldr	r0, [r7, #4]
 80143be:	4798      	blx	r3
 80143c0:	4603      	mov	r3, r0
 80143c2:	73fb      	strb	r3, [r7, #15]
 80143c4:	e04a      	b.n	801445c <USBD_StdDevReq+0xd8>
 80143c6:	683b      	ldr	r3, [r7, #0]
 80143c8:	785b      	ldrb	r3, [r3, #1]
 80143ca:	2b09      	cmp	r3, #9
 80143cc:	d83b      	bhi.n	8014446 <USBD_StdDevReq+0xc2>
 80143ce:	a201      	add	r2, pc, #4	@ (adr r2, 80143d4 <USBD_StdDevReq+0x50>)
 80143d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80143d4:	08014429 	.word	0x08014429
 80143d8:	0801443d 	.word	0x0801443d
 80143dc:	08014447 	.word	0x08014447
 80143e0:	08014433 	.word	0x08014433
 80143e4:	08014447 	.word	0x08014447
 80143e8:	08014407 	.word	0x08014407
 80143ec:	080143fd 	.word	0x080143fd
 80143f0:	08014447 	.word	0x08014447
 80143f4:	0801441f 	.word	0x0801441f
 80143f8:	08014411 	.word	0x08014411
 80143fc:	6839      	ldr	r1, [r7, #0]
 80143fe:	6878      	ldr	r0, [r7, #4]
 8014400:	f000 fa3c 	bl	801487c <USBD_GetDescriptor>
 8014404:	e024      	b.n	8014450 <USBD_StdDevReq+0xcc>
 8014406:	6839      	ldr	r1, [r7, #0]
 8014408:	6878      	ldr	r0, [r7, #4]
 801440a:	f000 fbcb 	bl	8014ba4 <USBD_SetAddress>
 801440e:	e01f      	b.n	8014450 <USBD_StdDevReq+0xcc>
 8014410:	6839      	ldr	r1, [r7, #0]
 8014412:	6878      	ldr	r0, [r7, #4]
 8014414:	f000 fc0a 	bl	8014c2c <USBD_SetConfig>
 8014418:	4603      	mov	r3, r0
 801441a:	73fb      	strb	r3, [r7, #15]
 801441c:	e018      	b.n	8014450 <USBD_StdDevReq+0xcc>
 801441e:	6839      	ldr	r1, [r7, #0]
 8014420:	6878      	ldr	r0, [r7, #4]
 8014422:	f000 fcad 	bl	8014d80 <USBD_GetConfig>
 8014426:	e013      	b.n	8014450 <USBD_StdDevReq+0xcc>
 8014428:	6839      	ldr	r1, [r7, #0]
 801442a:	6878      	ldr	r0, [r7, #4]
 801442c:	f000 fcde 	bl	8014dec <USBD_GetStatus>
 8014430:	e00e      	b.n	8014450 <USBD_StdDevReq+0xcc>
 8014432:	6839      	ldr	r1, [r7, #0]
 8014434:	6878      	ldr	r0, [r7, #4]
 8014436:	f000 fd0d 	bl	8014e54 <USBD_SetFeature>
 801443a:	e009      	b.n	8014450 <USBD_StdDevReq+0xcc>
 801443c:	6839      	ldr	r1, [r7, #0]
 801443e:	6878      	ldr	r0, [r7, #4]
 8014440:	f000 fd31 	bl	8014ea6 <USBD_ClrFeature>
 8014444:	e004      	b.n	8014450 <USBD_StdDevReq+0xcc>
 8014446:	6839      	ldr	r1, [r7, #0]
 8014448:	6878      	ldr	r0, [r7, #4]
 801444a:	f000 fd88 	bl	8014f5e <USBD_CtlError>
 801444e:	bf00      	nop
 8014450:	e004      	b.n	801445c <USBD_StdDevReq+0xd8>
 8014452:	6839      	ldr	r1, [r7, #0]
 8014454:	6878      	ldr	r0, [r7, #4]
 8014456:	f000 fd82 	bl	8014f5e <USBD_CtlError>
 801445a:	bf00      	nop
 801445c:	7bfb      	ldrb	r3, [r7, #15]
 801445e:	4618      	mov	r0, r3
 8014460:	3710      	adds	r7, #16
 8014462:	46bd      	mov	sp, r7
 8014464:	bd80      	pop	{r7, pc}
 8014466:	bf00      	nop

08014468 <USBD_StdItfReq>:
 8014468:	b580      	push	{r7, lr}
 801446a:	b084      	sub	sp, #16
 801446c:	af00      	add	r7, sp, #0
 801446e:	6078      	str	r0, [r7, #4]
 8014470:	6039      	str	r1, [r7, #0]
 8014472:	2300      	movs	r3, #0
 8014474:	73fb      	strb	r3, [r7, #15]
 8014476:	683b      	ldr	r3, [r7, #0]
 8014478:	781b      	ldrb	r3, [r3, #0]
 801447a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801447e:	2b40      	cmp	r3, #64	@ 0x40
 8014480:	d005      	beq.n	801448e <USBD_StdItfReq+0x26>
 8014482:	2b40      	cmp	r3, #64	@ 0x40
 8014484:	d852      	bhi.n	801452c <USBD_StdItfReq+0xc4>
 8014486:	2b00      	cmp	r3, #0
 8014488:	d001      	beq.n	801448e <USBD_StdItfReq+0x26>
 801448a:	2b20      	cmp	r3, #32
 801448c:	d14e      	bne.n	801452c <USBD_StdItfReq+0xc4>
 801448e:	687b      	ldr	r3, [r7, #4]
 8014490:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014494:	b2db      	uxtb	r3, r3
 8014496:	3b01      	subs	r3, #1
 8014498:	2b02      	cmp	r3, #2
 801449a:	d840      	bhi.n	801451e <USBD_StdItfReq+0xb6>
 801449c:	683b      	ldr	r3, [r7, #0]
 801449e:	889b      	ldrh	r3, [r3, #4]
 80144a0:	b2db      	uxtb	r3, r3
 80144a2:	2b01      	cmp	r3, #1
 80144a4:	d836      	bhi.n	8014514 <USBD_StdItfReq+0xac>
 80144a6:	683b      	ldr	r3, [r7, #0]
 80144a8:	889b      	ldrh	r3, [r3, #4]
 80144aa:	b2db      	uxtb	r3, r3
 80144ac:	4619      	mov	r1, r3
 80144ae:	6878      	ldr	r0, [r7, #4]
 80144b0:	f7ff fedb 	bl	801426a <USBD_CoreFindIF>
 80144b4:	4603      	mov	r3, r0
 80144b6:	73bb      	strb	r3, [r7, #14]
 80144b8:	7bbb      	ldrb	r3, [r7, #14]
 80144ba:	2bff      	cmp	r3, #255	@ 0xff
 80144bc:	d01d      	beq.n	80144fa <USBD_StdItfReq+0x92>
 80144be:	7bbb      	ldrb	r3, [r7, #14]
 80144c0:	2b00      	cmp	r3, #0
 80144c2:	d11a      	bne.n	80144fa <USBD_StdItfReq+0x92>
 80144c4:	7bba      	ldrb	r2, [r7, #14]
 80144c6:	687b      	ldr	r3, [r7, #4]
 80144c8:	32ae      	adds	r2, #174	@ 0xae
 80144ca:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80144ce:	689b      	ldr	r3, [r3, #8]
 80144d0:	2b00      	cmp	r3, #0
 80144d2:	d00f      	beq.n	80144f4 <USBD_StdItfReq+0x8c>
 80144d4:	7bba      	ldrb	r2, [r7, #14]
 80144d6:	687b      	ldr	r3, [r7, #4]
 80144d8:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 80144dc:	7bba      	ldrb	r2, [r7, #14]
 80144de:	687b      	ldr	r3, [r7, #4]
 80144e0:	32ae      	adds	r2, #174	@ 0xae
 80144e2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80144e6:	689b      	ldr	r3, [r3, #8]
 80144e8:	6839      	ldr	r1, [r7, #0]
 80144ea:	6878      	ldr	r0, [r7, #4]
 80144ec:	4798      	blx	r3
 80144ee:	4603      	mov	r3, r0
 80144f0:	73fb      	strb	r3, [r7, #15]
 80144f2:	e004      	b.n	80144fe <USBD_StdItfReq+0x96>
 80144f4:	2303      	movs	r3, #3
 80144f6:	73fb      	strb	r3, [r7, #15]
 80144f8:	e001      	b.n	80144fe <USBD_StdItfReq+0x96>
 80144fa:	2303      	movs	r3, #3
 80144fc:	73fb      	strb	r3, [r7, #15]
 80144fe:	683b      	ldr	r3, [r7, #0]
 8014500:	88db      	ldrh	r3, [r3, #6]
 8014502:	2b00      	cmp	r3, #0
 8014504:	d110      	bne.n	8014528 <USBD_StdItfReq+0xc0>
 8014506:	7bfb      	ldrb	r3, [r7, #15]
 8014508:	2b00      	cmp	r3, #0
 801450a:	d10d      	bne.n	8014528 <USBD_StdItfReq+0xc0>
 801450c:	6878      	ldr	r0, [r7, #4]
 801450e:	f000 fdfd 	bl	801510c <USBD_CtlSendStatus>
 8014512:	e009      	b.n	8014528 <USBD_StdItfReq+0xc0>
 8014514:	6839      	ldr	r1, [r7, #0]
 8014516:	6878      	ldr	r0, [r7, #4]
 8014518:	f000 fd21 	bl	8014f5e <USBD_CtlError>
 801451c:	e004      	b.n	8014528 <USBD_StdItfReq+0xc0>
 801451e:	6839      	ldr	r1, [r7, #0]
 8014520:	6878      	ldr	r0, [r7, #4]
 8014522:	f000 fd1c 	bl	8014f5e <USBD_CtlError>
 8014526:	e000      	b.n	801452a <USBD_StdItfReq+0xc2>
 8014528:	bf00      	nop
 801452a:	e004      	b.n	8014536 <USBD_StdItfReq+0xce>
 801452c:	6839      	ldr	r1, [r7, #0]
 801452e:	6878      	ldr	r0, [r7, #4]
 8014530:	f000 fd15 	bl	8014f5e <USBD_CtlError>
 8014534:	bf00      	nop
 8014536:	7bfb      	ldrb	r3, [r7, #15]
 8014538:	4618      	mov	r0, r3
 801453a:	3710      	adds	r7, #16
 801453c:	46bd      	mov	sp, r7
 801453e:	bd80      	pop	{r7, pc}

08014540 <USBD_StdEPReq>:
 8014540:	b580      	push	{r7, lr}
 8014542:	b084      	sub	sp, #16
 8014544:	af00      	add	r7, sp, #0
 8014546:	6078      	str	r0, [r7, #4]
 8014548:	6039      	str	r1, [r7, #0]
 801454a:	2300      	movs	r3, #0
 801454c:	73fb      	strb	r3, [r7, #15]
 801454e:	683b      	ldr	r3, [r7, #0]
 8014550:	889b      	ldrh	r3, [r3, #4]
 8014552:	73bb      	strb	r3, [r7, #14]
 8014554:	683b      	ldr	r3, [r7, #0]
 8014556:	781b      	ldrb	r3, [r3, #0]
 8014558:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801455c:	2b40      	cmp	r3, #64	@ 0x40
 801455e:	d007      	beq.n	8014570 <USBD_StdEPReq+0x30>
 8014560:	2b40      	cmp	r3, #64	@ 0x40
 8014562:	f200 817f 	bhi.w	8014864 <USBD_StdEPReq+0x324>
 8014566:	2b00      	cmp	r3, #0
 8014568:	d02a      	beq.n	80145c0 <USBD_StdEPReq+0x80>
 801456a:	2b20      	cmp	r3, #32
 801456c:	f040 817a 	bne.w	8014864 <USBD_StdEPReq+0x324>
 8014570:	7bbb      	ldrb	r3, [r7, #14]
 8014572:	4619      	mov	r1, r3
 8014574:	6878      	ldr	r0, [r7, #4]
 8014576:	f7ff fe85 	bl	8014284 <USBD_CoreFindEP>
 801457a:	4603      	mov	r3, r0
 801457c:	737b      	strb	r3, [r7, #13]
 801457e:	7b7b      	ldrb	r3, [r7, #13]
 8014580:	2bff      	cmp	r3, #255	@ 0xff
 8014582:	f000 8174 	beq.w	801486e <USBD_StdEPReq+0x32e>
 8014586:	7b7b      	ldrb	r3, [r7, #13]
 8014588:	2b00      	cmp	r3, #0
 801458a:	f040 8170 	bne.w	801486e <USBD_StdEPReq+0x32e>
 801458e:	7b7a      	ldrb	r2, [r7, #13]
 8014590:	687b      	ldr	r3, [r7, #4]
 8014592:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8014596:	7b7a      	ldrb	r2, [r7, #13]
 8014598:	687b      	ldr	r3, [r7, #4]
 801459a:	32ae      	adds	r2, #174	@ 0xae
 801459c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80145a0:	689b      	ldr	r3, [r3, #8]
 80145a2:	2b00      	cmp	r3, #0
 80145a4:	f000 8163 	beq.w	801486e <USBD_StdEPReq+0x32e>
 80145a8:	7b7a      	ldrb	r2, [r7, #13]
 80145aa:	687b      	ldr	r3, [r7, #4]
 80145ac:	32ae      	adds	r2, #174	@ 0xae
 80145ae:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80145b2:	689b      	ldr	r3, [r3, #8]
 80145b4:	6839      	ldr	r1, [r7, #0]
 80145b6:	6878      	ldr	r0, [r7, #4]
 80145b8:	4798      	blx	r3
 80145ba:	4603      	mov	r3, r0
 80145bc:	73fb      	strb	r3, [r7, #15]
 80145be:	e156      	b.n	801486e <USBD_StdEPReq+0x32e>
 80145c0:	683b      	ldr	r3, [r7, #0]
 80145c2:	785b      	ldrb	r3, [r3, #1]
 80145c4:	2b03      	cmp	r3, #3
 80145c6:	d008      	beq.n	80145da <USBD_StdEPReq+0x9a>
 80145c8:	2b03      	cmp	r3, #3
 80145ca:	f300 8145 	bgt.w	8014858 <USBD_StdEPReq+0x318>
 80145ce:	2b00      	cmp	r3, #0
 80145d0:	f000 809b 	beq.w	801470a <USBD_StdEPReq+0x1ca>
 80145d4:	2b01      	cmp	r3, #1
 80145d6:	d03c      	beq.n	8014652 <USBD_StdEPReq+0x112>
 80145d8:	e13e      	b.n	8014858 <USBD_StdEPReq+0x318>
 80145da:	687b      	ldr	r3, [r7, #4]
 80145dc:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80145e0:	b2db      	uxtb	r3, r3
 80145e2:	2b02      	cmp	r3, #2
 80145e4:	d002      	beq.n	80145ec <USBD_StdEPReq+0xac>
 80145e6:	2b03      	cmp	r3, #3
 80145e8:	d016      	beq.n	8014618 <USBD_StdEPReq+0xd8>
 80145ea:	e02c      	b.n	8014646 <USBD_StdEPReq+0x106>
 80145ec:	7bbb      	ldrb	r3, [r7, #14]
 80145ee:	2b00      	cmp	r3, #0
 80145f0:	d00d      	beq.n	801460e <USBD_StdEPReq+0xce>
 80145f2:	7bbb      	ldrb	r3, [r7, #14]
 80145f4:	2b80      	cmp	r3, #128	@ 0x80
 80145f6:	d00a      	beq.n	801460e <USBD_StdEPReq+0xce>
 80145f8:	7bbb      	ldrb	r3, [r7, #14]
 80145fa:	4619      	mov	r1, r3
 80145fc:	6878      	ldr	r0, [r7, #4]
 80145fe:	f001 f9a5 	bl	801594c <USBD_LL_StallEP>
 8014602:	2180      	movs	r1, #128	@ 0x80
 8014604:	6878      	ldr	r0, [r7, #4]
 8014606:	f001 f9a1 	bl	801594c <USBD_LL_StallEP>
 801460a:	bf00      	nop
 801460c:	e020      	b.n	8014650 <USBD_StdEPReq+0x110>
 801460e:	6839      	ldr	r1, [r7, #0]
 8014610:	6878      	ldr	r0, [r7, #4]
 8014612:	f000 fca4 	bl	8014f5e <USBD_CtlError>
 8014616:	e01b      	b.n	8014650 <USBD_StdEPReq+0x110>
 8014618:	683b      	ldr	r3, [r7, #0]
 801461a:	885b      	ldrh	r3, [r3, #2]
 801461c:	2b00      	cmp	r3, #0
 801461e:	d10e      	bne.n	801463e <USBD_StdEPReq+0xfe>
 8014620:	7bbb      	ldrb	r3, [r7, #14]
 8014622:	2b00      	cmp	r3, #0
 8014624:	d00b      	beq.n	801463e <USBD_StdEPReq+0xfe>
 8014626:	7bbb      	ldrb	r3, [r7, #14]
 8014628:	2b80      	cmp	r3, #128	@ 0x80
 801462a:	d008      	beq.n	801463e <USBD_StdEPReq+0xfe>
 801462c:	683b      	ldr	r3, [r7, #0]
 801462e:	88db      	ldrh	r3, [r3, #6]
 8014630:	2b00      	cmp	r3, #0
 8014632:	d104      	bne.n	801463e <USBD_StdEPReq+0xfe>
 8014634:	7bbb      	ldrb	r3, [r7, #14]
 8014636:	4619      	mov	r1, r3
 8014638:	6878      	ldr	r0, [r7, #4]
 801463a:	f001 f987 	bl	801594c <USBD_LL_StallEP>
 801463e:	6878      	ldr	r0, [r7, #4]
 8014640:	f000 fd64 	bl	801510c <USBD_CtlSendStatus>
 8014644:	e004      	b.n	8014650 <USBD_StdEPReq+0x110>
 8014646:	6839      	ldr	r1, [r7, #0]
 8014648:	6878      	ldr	r0, [r7, #4]
 801464a:	f000 fc88 	bl	8014f5e <USBD_CtlError>
 801464e:	bf00      	nop
 8014650:	e107      	b.n	8014862 <USBD_StdEPReq+0x322>
 8014652:	687b      	ldr	r3, [r7, #4]
 8014654:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014658:	b2db      	uxtb	r3, r3
 801465a:	2b02      	cmp	r3, #2
 801465c:	d002      	beq.n	8014664 <USBD_StdEPReq+0x124>
 801465e:	2b03      	cmp	r3, #3
 8014660:	d016      	beq.n	8014690 <USBD_StdEPReq+0x150>
 8014662:	e04b      	b.n	80146fc <USBD_StdEPReq+0x1bc>
 8014664:	7bbb      	ldrb	r3, [r7, #14]
 8014666:	2b00      	cmp	r3, #0
 8014668:	d00d      	beq.n	8014686 <USBD_StdEPReq+0x146>
 801466a:	7bbb      	ldrb	r3, [r7, #14]
 801466c:	2b80      	cmp	r3, #128	@ 0x80
 801466e:	d00a      	beq.n	8014686 <USBD_StdEPReq+0x146>
 8014670:	7bbb      	ldrb	r3, [r7, #14]
 8014672:	4619      	mov	r1, r3
 8014674:	6878      	ldr	r0, [r7, #4]
 8014676:	f001 f969 	bl	801594c <USBD_LL_StallEP>
 801467a:	2180      	movs	r1, #128	@ 0x80
 801467c:	6878      	ldr	r0, [r7, #4]
 801467e:	f001 f965 	bl	801594c <USBD_LL_StallEP>
 8014682:	bf00      	nop
 8014684:	e040      	b.n	8014708 <USBD_StdEPReq+0x1c8>
 8014686:	6839      	ldr	r1, [r7, #0]
 8014688:	6878      	ldr	r0, [r7, #4]
 801468a:	f000 fc68 	bl	8014f5e <USBD_CtlError>
 801468e:	e03b      	b.n	8014708 <USBD_StdEPReq+0x1c8>
 8014690:	683b      	ldr	r3, [r7, #0]
 8014692:	885b      	ldrh	r3, [r3, #2]
 8014694:	2b00      	cmp	r3, #0
 8014696:	d136      	bne.n	8014706 <USBD_StdEPReq+0x1c6>
 8014698:	7bbb      	ldrb	r3, [r7, #14]
 801469a:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 801469e:	2b00      	cmp	r3, #0
 80146a0:	d004      	beq.n	80146ac <USBD_StdEPReq+0x16c>
 80146a2:	7bbb      	ldrb	r3, [r7, #14]
 80146a4:	4619      	mov	r1, r3
 80146a6:	6878      	ldr	r0, [r7, #4]
 80146a8:	f001 f96f 	bl	801598a <USBD_LL_ClearStallEP>
 80146ac:	6878      	ldr	r0, [r7, #4]
 80146ae:	f000 fd2d 	bl	801510c <USBD_CtlSendStatus>
 80146b2:	7bbb      	ldrb	r3, [r7, #14]
 80146b4:	4619      	mov	r1, r3
 80146b6:	6878      	ldr	r0, [r7, #4]
 80146b8:	f7ff fde4 	bl	8014284 <USBD_CoreFindEP>
 80146bc:	4603      	mov	r3, r0
 80146be:	737b      	strb	r3, [r7, #13]
 80146c0:	7b7b      	ldrb	r3, [r7, #13]
 80146c2:	2bff      	cmp	r3, #255	@ 0xff
 80146c4:	d01f      	beq.n	8014706 <USBD_StdEPReq+0x1c6>
 80146c6:	7b7b      	ldrb	r3, [r7, #13]
 80146c8:	2b00      	cmp	r3, #0
 80146ca:	d11c      	bne.n	8014706 <USBD_StdEPReq+0x1c6>
 80146cc:	7b7a      	ldrb	r2, [r7, #13]
 80146ce:	687b      	ldr	r3, [r7, #4]
 80146d0:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 80146d4:	7b7a      	ldrb	r2, [r7, #13]
 80146d6:	687b      	ldr	r3, [r7, #4]
 80146d8:	32ae      	adds	r2, #174	@ 0xae
 80146da:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80146de:	689b      	ldr	r3, [r3, #8]
 80146e0:	2b00      	cmp	r3, #0
 80146e2:	d010      	beq.n	8014706 <USBD_StdEPReq+0x1c6>
 80146e4:	7b7a      	ldrb	r2, [r7, #13]
 80146e6:	687b      	ldr	r3, [r7, #4]
 80146e8:	32ae      	adds	r2, #174	@ 0xae
 80146ea:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80146ee:	689b      	ldr	r3, [r3, #8]
 80146f0:	6839      	ldr	r1, [r7, #0]
 80146f2:	6878      	ldr	r0, [r7, #4]
 80146f4:	4798      	blx	r3
 80146f6:	4603      	mov	r3, r0
 80146f8:	73fb      	strb	r3, [r7, #15]
 80146fa:	e004      	b.n	8014706 <USBD_StdEPReq+0x1c6>
 80146fc:	6839      	ldr	r1, [r7, #0]
 80146fe:	6878      	ldr	r0, [r7, #4]
 8014700:	f000 fc2d 	bl	8014f5e <USBD_CtlError>
 8014704:	e000      	b.n	8014708 <USBD_StdEPReq+0x1c8>
 8014706:	bf00      	nop
 8014708:	e0ab      	b.n	8014862 <USBD_StdEPReq+0x322>
 801470a:	687b      	ldr	r3, [r7, #4]
 801470c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014710:	b2db      	uxtb	r3, r3
 8014712:	2b02      	cmp	r3, #2
 8014714:	d002      	beq.n	801471c <USBD_StdEPReq+0x1dc>
 8014716:	2b03      	cmp	r3, #3
 8014718:	d032      	beq.n	8014780 <USBD_StdEPReq+0x240>
 801471a:	e097      	b.n	801484c <USBD_StdEPReq+0x30c>
 801471c:	7bbb      	ldrb	r3, [r7, #14]
 801471e:	2b00      	cmp	r3, #0
 8014720:	d007      	beq.n	8014732 <USBD_StdEPReq+0x1f2>
 8014722:	7bbb      	ldrb	r3, [r7, #14]
 8014724:	2b80      	cmp	r3, #128	@ 0x80
 8014726:	d004      	beq.n	8014732 <USBD_StdEPReq+0x1f2>
 8014728:	6839      	ldr	r1, [r7, #0]
 801472a:	6878      	ldr	r0, [r7, #4]
 801472c:	f000 fc17 	bl	8014f5e <USBD_CtlError>
 8014730:	e091      	b.n	8014856 <USBD_StdEPReq+0x316>
 8014732:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8014736:	2b00      	cmp	r3, #0
 8014738:	da0b      	bge.n	8014752 <USBD_StdEPReq+0x212>
 801473a:	7bbb      	ldrb	r3, [r7, #14]
 801473c:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8014740:	4613      	mov	r3, r2
 8014742:	009b      	lsls	r3, r3, #2
 8014744:	4413      	add	r3, r2
 8014746:	009b      	lsls	r3, r3, #2
 8014748:	3310      	adds	r3, #16
 801474a:	687a      	ldr	r2, [r7, #4]
 801474c:	4413      	add	r3, r2
 801474e:	3304      	adds	r3, #4
 8014750:	e00b      	b.n	801476a <USBD_StdEPReq+0x22a>
 8014752:	7bbb      	ldrb	r3, [r7, #14]
 8014754:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8014758:	4613      	mov	r3, r2
 801475a:	009b      	lsls	r3, r3, #2
 801475c:	4413      	add	r3, r2
 801475e:	009b      	lsls	r3, r3, #2
 8014760:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8014764:	687a      	ldr	r2, [r7, #4]
 8014766:	4413      	add	r3, r2
 8014768:	3304      	adds	r3, #4
 801476a:	60bb      	str	r3, [r7, #8]
 801476c:	68bb      	ldr	r3, [r7, #8]
 801476e:	2200      	movs	r2, #0
 8014770:	601a      	str	r2, [r3, #0]
 8014772:	68bb      	ldr	r3, [r7, #8]
 8014774:	2202      	movs	r2, #2
 8014776:	4619      	mov	r1, r3
 8014778:	6878      	ldr	r0, [r7, #4]
 801477a:	f000 fc6d 	bl	8015058 <USBD_CtlSendData>
 801477e:	e06a      	b.n	8014856 <USBD_StdEPReq+0x316>
 8014780:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8014784:	2b00      	cmp	r3, #0
 8014786:	da11      	bge.n	80147ac <USBD_StdEPReq+0x26c>
 8014788:	7bbb      	ldrb	r3, [r7, #14]
 801478a:	f003 020f 	and.w	r2, r3, #15
 801478e:	6879      	ldr	r1, [r7, #4]
 8014790:	4613      	mov	r3, r2
 8014792:	009b      	lsls	r3, r3, #2
 8014794:	4413      	add	r3, r2
 8014796:	009b      	lsls	r3, r3, #2
 8014798:	440b      	add	r3, r1
 801479a:	3324      	adds	r3, #36	@ 0x24
 801479c:	881b      	ldrh	r3, [r3, #0]
 801479e:	2b00      	cmp	r3, #0
 80147a0:	d117      	bne.n	80147d2 <USBD_StdEPReq+0x292>
 80147a2:	6839      	ldr	r1, [r7, #0]
 80147a4:	6878      	ldr	r0, [r7, #4]
 80147a6:	f000 fbda 	bl	8014f5e <USBD_CtlError>
 80147aa:	e054      	b.n	8014856 <USBD_StdEPReq+0x316>
 80147ac:	7bbb      	ldrb	r3, [r7, #14]
 80147ae:	f003 020f 	and.w	r2, r3, #15
 80147b2:	6879      	ldr	r1, [r7, #4]
 80147b4:	4613      	mov	r3, r2
 80147b6:	009b      	lsls	r3, r3, #2
 80147b8:	4413      	add	r3, r2
 80147ba:	009b      	lsls	r3, r3, #2
 80147bc:	440b      	add	r3, r1
 80147be:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 80147c2:	881b      	ldrh	r3, [r3, #0]
 80147c4:	2b00      	cmp	r3, #0
 80147c6:	d104      	bne.n	80147d2 <USBD_StdEPReq+0x292>
 80147c8:	6839      	ldr	r1, [r7, #0]
 80147ca:	6878      	ldr	r0, [r7, #4]
 80147cc:	f000 fbc7 	bl	8014f5e <USBD_CtlError>
 80147d0:	e041      	b.n	8014856 <USBD_StdEPReq+0x316>
 80147d2:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80147d6:	2b00      	cmp	r3, #0
 80147d8:	da0b      	bge.n	80147f2 <USBD_StdEPReq+0x2b2>
 80147da:	7bbb      	ldrb	r3, [r7, #14]
 80147dc:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80147e0:	4613      	mov	r3, r2
 80147e2:	009b      	lsls	r3, r3, #2
 80147e4:	4413      	add	r3, r2
 80147e6:	009b      	lsls	r3, r3, #2
 80147e8:	3310      	adds	r3, #16
 80147ea:	687a      	ldr	r2, [r7, #4]
 80147ec:	4413      	add	r3, r2
 80147ee:	3304      	adds	r3, #4
 80147f0:	e00b      	b.n	801480a <USBD_StdEPReq+0x2ca>
 80147f2:	7bbb      	ldrb	r3, [r7, #14]
 80147f4:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80147f8:	4613      	mov	r3, r2
 80147fa:	009b      	lsls	r3, r3, #2
 80147fc:	4413      	add	r3, r2
 80147fe:	009b      	lsls	r3, r3, #2
 8014800:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8014804:	687a      	ldr	r2, [r7, #4]
 8014806:	4413      	add	r3, r2
 8014808:	3304      	adds	r3, #4
 801480a:	60bb      	str	r3, [r7, #8]
 801480c:	7bbb      	ldrb	r3, [r7, #14]
 801480e:	2b00      	cmp	r3, #0
 8014810:	d002      	beq.n	8014818 <USBD_StdEPReq+0x2d8>
 8014812:	7bbb      	ldrb	r3, [r7, #14]
 8014814:	2b80      	cmp	r3, #128	@ 0x80
 8014816:	d103      	bne.n	8014820 <USBD_StdEPReq+0x2e0>
 8014818:	68bb      	ldr	r3, [r7, #8]
 801481a:	2200      	movs	r2, #0
 801481c:	601a      	str	r2, [r3, #0]
 801481e:	e00e      	b.n	801483e <USBD_StdEPReq+0x2fe>
 8014820:	7bbb      	ldrb	r3, [r7, #14]
 8014822:	4619      	mov	r1, r3
 8014824:	6878      	ldr	r0, [r7, #4]
 8014826:	f001 f8cf 	bl	80159c8 <USBD_LL_IsStallEP>
 801482a:	4603      	mov	r3, r0
 801482c:	2b00      	cmp	r3, #0
 801482e:	d003      	beq.n	8014838 <USBD_StdEPReq+0x2f8>
 8014830:	68bb      	ldr	r3, [r7, #8]
 8014832:	2201      	movs	r2, #1
 8014834:	601a      	str	r2, [r3, #0]
 8014836:	e002      	b.n	801483e <USBD_StdEPReq+0x2fe>
 8014838:	68bb      	ldr	r3, [r7, #8]
 801483a:	2200      	movs	r2, #0
 801483c:	601a      	str	r2, [r3, #0]
 801483e:	68bb      	ldr	r3, [r7, #8]
 8014840:	2202      	movs	r2, #2
 8014842:	4619      	mov	r1, r3
 8014844:	6878      	ldr	r0, [r7, #4]
 8014846:	f000 fc07 	bl	8015058 <USBD_CtlSendData>
 801484a:	e004      	b.n	8014856 <USBD_StdEPReq+0x316>
 801484c:	6839      	ldr	r1, [r7, #0]
 801484e:	6878      	ldr	r0, [r7, #4]
 8014850:	f000 fb85 	bl	8014f5e <USBD_CtlError>
 8014854:	bf00      	nop
 8014856:	e004      	b.n	8014862 <USBD_StdEPReq+0x322>
 8014858:	6839      	ldr	r1, [r7, #0]
 801485a:	6878      	ldr	r0, [r7, #4]
 801485c:	f000 fb7f 	bl	8014f5e <USBD_CtlError>
 8014860:	bf00      	nop
 8014862:	e005      	b.n	8014870 <USBD_StdEPReq+0x330>
 8014864:	6839      	ldr	r1, [r7, #0]
 8014866:	6878      	ldr	r0, [r7, #4]
 8014868:	f000 fb79 	bl	8014f5e <USBD_CtlError>
 801486c:	e000      	b.n	8014870 <USBD_StdEPReq+0x330>
 801486e:	bf00      	nop
 8014870:	7bfb      	ldrb	r3, [r7, #15]
 8014872:	4618      	mov	r0, r3
 8014874:	3710      	adds	r7, #16
 8014876:	46bd      	mov	sp, r7
 8014878:	bd80      	pop	{r7, pc}
	...

0801487c <USBD_GetDescriptor>:
 801487c:	b580      	push	{r7, lr}
 801487e:	b084      	sub	sp, #16
 8014880:	af00      	add	r7, sp, #0
 8014882:	6078      	str	r0, [r7, #4]
 8014884:	6039      	str	r1, [r7, #0]
 8014886:	2300      	movs	r3, #0
 8014888:	813b      	strh	r3, [r7, #8]
 801488a:	2300      	movs	r3, #0
 801488c:	60fb      	str	r3, [r7, #12]
 801488e:	2300      	movs	r3, #0
 8014890:	72fb      	strb	r3, [r7, #11]
 8014892:	683b      	ldr	r3, [r7, #0]
 8014894:	885b      	ldrh	r3, [r3, #2]
 8014896:	0a1b      	lsrs	r3, r3, #8
 8014898:	b29b      	uxth	r3, r3
 801489a:	3b01      	subs	r3, #1
 801489c:	2b0e      	cmp	r3, #14
 801489e:	f200 8152 	bhi.w	8014b46 <USBD_GetDescriptor+0x2ca>
 80148a2:	a201      	add	r2, pc, #4	@ (adr r2, 80148a8 <USBD_GetDescriptor+0x2c>)
 80148a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80148a8:	08014919 	.word	0x08014919
 80148ac:	08014931 	.word	0x08014931
 80148b0:	08014971 	.word	0x08014971
 80148b4:	08014b47 	.word	0x08014b47
 80148b8:	08014b47 	.word	0x08014b47
 80148bc:	08014ae7 	.word	0x08014ae7
 80148c0:	08014b13 	.word	0x08014b13
 80148c4:	08014b47 	.word	0x08014b47
 80148c8:	08014b47 	.word	0x08014b47
 80148cc:	08014b47 	.word	0x08014b47
 80148d0:	08014b47 	.word	0x08014b47
 80148d4:	08014b47 	.word	0x08014b47
 80148d8:	08014b47 	.word	0x08014b47
 80148dc:	08014b47 	.word	0x08014b47
 80148e0:	080148e5 	.word	0x080148e5
 80148e4:	687b      	ldr	r3, [r7, #4]
 80148e6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80148ea:	69db      	ldr	r3, [r3, #28]
 80148ec:	2b00      	cmp	r3, #0
 80148ee:	d00b      	beq.n	8014908 <USBD_GetDescriptor+0x8c>
 80148f0:	687b      	ldr	r3, [r7, #4]
 80148f2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80148f6:	69db      	ldr	r3, [r3, #28]
 80148f8:	687a      	ldr	r2, [r7, #4]
 80148fa:	7c12      	ldrb	r2, [r2, #16]
 80148fc:	f107 0108 	add.w	r1, r7, #8
 8014900:	4610      	mov	r0, r2
 8014902:	4798      	blx	r3
 8014904:	60f8      	str	r0, [r7, #12]
 8014906:	e126      	b.n	8014b56 <USBD_GetDescriptor+0x2da>
 8014908:	6839      	ldr	r1, [r7, #0]
 801490a:	6878      	ldr	r0, [r7, #4]
 801490c:	f000 fb27 	bl	8014f5e <USBD_CtlError>
 8014910:	7afb      	ldrb	r3, [r7, #11]
 8014912:	3301      	adds	r3, #1
 8014914:	72fb      	strb	r3, [r7, #11]
 8014916:	e11e      	b.n	8014b56 <USBD_GetDescriptor+0x2da>
 8014918:	687b      	ldr	r3, [r7, #4]
 801491a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 801491e:	681b      	ldr	r3, [r3, #0]
 8014920:	687a      	ldr	r2, [r7, #4]
 8014922:	7c12      	ldrb	r2, [r2, #16]
 8014924:	f107 0108 	add.w	r1, r7, #8
 8014928:	4610      	mov	r0, r2
 801492a:	4798      	blx	r3
 801492c:	60f8      	str	r0, [r7, #12]
 801492e:	e112      	b.n	8014b56 <USBD_GetDescriptor+0x2da>
 8014930:	687b      	ldr	r3, [r7, #4]
 8014932:	7c1b      	ldrb	r3, [r3, #16]
 8014934:	2b00      	cmp	r3, #0
 8014936:	d10d      	bne.n	8014954 <USBD_GetDescriptor+0xd8>
 8014938:	687b      	ldr	r3, [r7, #4]
 801493a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 801493e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014940:	f107 0208 	add.w	r2, r7, #8
 8014944:	4610      	mov	r0, r2
 8014946:	4798      	blx	r3
 8014948:	60f8      	str	r0, [r7, #12]
 801494a:	68fb      	ldr	r3, [r7, #12]
 801494c:	3301      	adds	r3, #1
 801494e:	2202      	movs	r2, #2
 8014950:	701a      	strb	r2, [r3, #0]
 8014952:	e100      	b.n	8014b56 <USBD_GetDescriptor+0x2da>
 8014954:	687b      	ldr	r3, [r7, #4]
 8014956:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 801495a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801495c:	f107 0208 	add.w	r2, r7, #8
 8014960:	4610      	mov	r0, r2
 8014962:	4798      	blx	r3
 8014964:	60f8      	str	r0, [r7, #12]
 8014966:	68fb      	ldr	r3, [r7, #12]
 8014968:	3301      	adds	r3, #1
 801496a:	2202      	movs	r2, #2
 801496c:	701a      	strb	r2, [r3, #0]
 801496e:	e0f2      	b.n	8014b56 <USBD_GetDescriptor+0x2da>
 8014970:	683b      	ldr	r3, [r7, #0]
 8014972:	885b      	ldrh	r3, [r3, #2]
 8014974:	b2db      	uxtb	r3, r3
 8014976:	2b05      	cmp	r3, #5
 8014978:	f200 80ac 	bhi.w	8014ad4 <USBD_GetDescriptor+0x258>
 801497c:	a201      	add	r2, pc, #4	@ (adr r2, 8014984 <USBD_GetDescriptor+0x108>)
 801497e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8014982:	bf00      	nop
 8014984:	0801499d 	.word	0x0801499d
 8014988:	080149d1 	.word	0x080149d1
 801498c:	08014a05 	.word	0x08014a05
 8014990:	08014a39 	.word	0x08014a39
 8014994:	08014a6d 	.word	0x08014a6d
 8014998:	08014aa1 	.word	0x08014aa1
 801499c:	687b      	ldr	r3, [r7, #4]
 801499e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80149a2:	685b      	ldr	r3, [r3, #4]
 80149a4:	2b00      	cmp	r3, #0
 80149a6:	d00b      	beq.n	80149c0 <USBD_GetDescriptor+0x144>
 80149a8:	687b      	ldr	r3, [r7, #4]
 80149aa:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80149ae:	685b      	ldr	r3, [r3, #4]
 80149b0:	687a      	ldr	r2, [r7, #4]
 80149b2:	7c12      	ldrb	r2, [r2, #16]
 80149b4:	f107 0108 	add.w	r1, r7, #8
 80149b8:	4610      	mov	r0, r2
 80149ba:	4798      	blx	r3
 80149bc:	60f8      	str	r0, [r7, #12]
 80149be:	e091      	b.n	8014ae4 <USBD_GetDescriptor+0x268>
 80149c0:	6839      	ldr	r1, [r7, #0]
 80149c2:	6878      	ldr	r0, [r7, #4]
 80149c4:	f000 facb 	bl	8014f5e <USBD_CtlError>
 80149c8:	7afb      	ldrb	r3, [r7, #11]
 80149ca:	3301      	adds	r3, #1
 80149cc:	72fb      	strb	r3, [r7, #11]
 80149ce:	e089      	b.n	8014ae4 <USBD_GetDescriptor+0x268>
 80149d0:	687b      	ldr	r3, [r7, #4]
 80149d2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80149d6:	689b      	ldr	r3, [r3, #8]
 80149d8:	2b00      	cmp	r3, #0
 80149da:	d00b      	beq.n	80149f4 <USBD_GetDescriptor+0x178>
 80149dc:	687b      	ldr	r3, [r7, #4]
 80149de:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80149e2:	689b      	ldr	r3, [r3, #8]
 80149e4:	687a      	ldr	r2, [r7, #4]
 80149e6:	7c12      	ldrb	r2, [r2, #16]
 80149e8:	f107 0108 	add.w	r1, r7, #8
 80149ec:	4610      	mov	r0, r2
 80149ee:	4798      	blx	r3
 80149f0:	60f8      	str	r0, [r7, #12]
 80149f2:	e077      	b.n	8014ae4 <USBD_GetDescriptor+0x268>
 80149f4:	6839      	ldr	r1, [r7, #0]
 80149f6:	6878      	ldr	r0, [r7, #4]
 80149f8:	f000 fab1 	bl	8014f5e <USBD_CtlError>
 80149fc:	7afb      	ldrb	r3, [r7, #11]
 80149fe:	3301      	adds	r3, #1
 8014a00:	72fb      	strb	r3, [r7, #11]
 8014a02:	e06f      	b.n	8014ae4 <USBD_GetDescriptor+0x268>
 8014a04:	687b      	ldr	r3, [r7, #4]
 8014a06:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014a0a:	68db      	ldr	r3, [r3, #12]
 8014a0c:	2b00      	cmp	r3, #0
 8014a0e:	d00b      	beq.n	8014a28 <USBD_GetDescriptor+0x1ac>
 8014a10:	687b      	ldr	r3, [r7, #4]
 8014a12:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014a16:	68db      	ldr	r3, [r3, #12]
 8014a18:	687a      	ldr	r2, [r7, #4]
 8014a1a:	7c12      	ldrb	r2, [r2, #16]
 8014a1c:	f107 0108 	add.w	r1, r7, #8
 8014a20:	4610      	mov	r0, r2
 8014a22:	4798      	blx	r3
 8014a24:	60f8      	str	r0, [r7, #12]
 8014a26:	e05d      	b.n	8014ae4 <USBD_GetDescriptor+0x268>
 8014a28:	6839      	ldr	r1, [r7, #0]
 8014a2a:	6878      	ldr	r0, [r7, #4]
 8014a2c:	f000 fa97 	bl	8014f5e <USBD_CtlError>
 8014a30:	7afb      	ldrb	r3, [r7, #11]
 8014a32:	3301      	adds	r3, #1
 8014a34:	72fb      	strb	r3, [r7, #11]
 8014a36:	e055      	b.n	8014ae4 <USBD_GetDescriptor+0x268>
 8014a38:	687b      	ldr	r3, [r7, #4]
 8014a3a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014a3e:	691b      	ldr	r3, [r3, #16]
 8014a40:	2b00      	cmp	r3, #0
 8014a42:	d00b      	beq.n	8014a5c <USBD_GetDescriptor+0x1e0>
 8014a44:	687b      	ldr	r3, [r7, #4]
 8014a46:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014a4a:	691b      	ldr	r3, [r3, #16]
 8014a4c:	687a      	ldr	r2, [r7, #4]
 8014a4e:	7c12      	ldrb	r2, [r2, #16]
 8014a50:	f107 0108 	add.w	r1, r7, #8
 8014a54:	4610      	mov	r0, r2
 8014a56:	4798      	blx	r3
 8014a58:	60f8      	str	r0, [r7, #12]
 8014a5a:	e043      	b.n	8014ae4 <USBD_GetDescriptor+0x268>
 8014a5c:	6839      	ldr	r1, [r7, #0]
 8014a5e:	6878      	ldr	r0, [r7, #4]
 8014a60:	f000 fa7d 	bl	8014f5e <USBD_CtlError>
 8014a64:	7afb      	ldrb	r3, [r7, #11]
 8014a66:	3301      	adds	r3, #1
 8014a68:	72fb      	strb	r3, [r7, #11]
 8014a6a:	e03b      	b.n	8014ae4 <USBD_GetDescriptor+0x268>
 8014a6c:	687b      	ldr	r3, [r7, #4]
 8014a6e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014a72:	695b      	ldr	r3, [r3, #20]
 8014a74:	2b00      	cmp	r3, #0
 8014a76:	d00b      	beq.n	8014a90 <USBD_GetDescriptor+0x214>
 8014a78:	687b      	ldr	r3, [r7, #4]
 8014a7a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014a7e:	695b      	ldr	r3, [r3, #20]
 8014a80:	687a      	ldr	r2, [r7, #4]
 8014a82:	7c12      	ldrb	r2, [r2, #16]
 8014a84:	f107 0108 	add.w	r1, r7, #8
 8014a88:	4610      	mov	r0, r2
 8014a8a:	4798      	blx	r3
 8014a8c:	60f8      	str	r0, [r7, #12]
 8014a8e:	e029      	b.n	8014ae4 <USBD_GetDescriptor+0x268>
 8014a90:	6839      	ldr	r1, [r7, #0]
 8014a92:	6878      	ldr	r0, [r7, #4]
 8014a94:	f000 fa63 	bl	8014f5e <USBD_CtlError>
 8014a98:	7afb      	ldrb	r3, [r7, #11]
 8014a9a:	3301      	adds	r3, #1
 8014a9c:	72fb      	strb	r3, [r7, #11]
 8014a9e:	e021      	b.n	8014ae4 <USBD_GetDescriptor+0x268>
 8014aa0:	687b      	ldr	r3, [r7, #4]
 8014aa2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014aa6:	699b      	ldr	r3, [r3, #24]
 8014aa8:	2b00      	cmp	r3, #0
 8014aaa:	d00b      	beq.n	8014ac4 <USBD_GetDescriptor+0x248>
 8014aac:	687b      	ldr	r3, [r7, #4]
 8014aae:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8014ab2:	699b      	ldr	r3, [r3, #24]
 8014ab4:	687a      	ldr	r2, [r7, #4]
 8014ab6:	7c12      	ldrb	r2, [r2, #16]
 8014ab8:	f107 0108 	add.w	r1, r7, #8
 8014abc:	4610      	mov	r0, r2
 8014abe:	4798      	blx	r3
 8014ac0:	60f8      	str	r0, [r7, #12]
 8014ac2:	e00f      	b.n	8014ae4 <USBD_GetDescriptor+0x268>
 8014ac4:	6839      	ldr	r1, [r7, #0]
 8014ac6:	6878      	ldr	r0, [r7, #4]
 8014ac8:	f000 fa49 	bl	8014f5e <USBD_CtlError>
 8014acc:	7afb      	ldrb	r3, [r7, #11]
 8014ace:	3301      	adds	r3, #1
 8014ad0:	72fb      	strb	r3, [r7, #11]
 8014ad2:	e007      	b.n	8014ae4 <USBD_GetDescriptor+0x268>
 8014ad4:	6839      	ldr	r1, [r7, #0]
 8014ad6:	6878      	ldr	r0, [r7, #4]
 8014ad8:	f000 fa41 	bl	8014f5e <USBD_CtlError>
 8014adc:	7afb      	ldrb	r3, [r7, #11]
 8014ade:	3301      	adds	r3, #1
 8014ae0:	72fb      	strb	r3, [r7, #11]
 8014ae2:	bf00      	nop
 8014ae4:	e037      	b.n	8014b56 <USBD_GetDescriptor+0x2da>
 8014ae6:	687b      	ldr	r3, [r7, #4]
 8014ae8:	7c1b      	ldrb	r3, [r3, #16]
 8014aea:	2b00      	cmp	r3, #0
 8014aec:	d109      	bne.n	8014b02 <USBD_GetDescriptor+0x286>
 8014aee:	687b      	ldr	r3, [r7, #4]
 8014af0:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014af4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8014af6:	f107 0208 	add.w	r2, r7, #8
 8014afa:	4610      	mov	r0, r2
 8014afc:	4798      	blx	r3
 8014afe:	60f8      	str	r0, [r7, #12]
 8014b00:	e029      	b.n	8014b56 <USBD_GetDescriptor+0x2da>
 8014b02:	6839      	ldr	r1, [r7, #0]
 8014b04:	6878      	ldr	r0, [r7, #4]
 8014b06:	f000 fa2a 	bl	8014f5e <USBD_CtlError>
 8014b0a:	7afb      	ldrb	r3, [r7, #11]
 8014b0c:	3301      	adds	r3, #1
 8014b0e:	72fb      	strb	r3, [r7, #11]
 8014b10:	e021      	b.n	8014b56 <USBD_GetDescriptor+0x2da>
 8014b12:	687b      	ldr	r3, [r7, #4]
 8014b14:	7c1b      	ldrb	r3, [r3, #16]
 8014b16:	2b00      	cmp	r3, #0
 8014b18:	d10d      	bne.n	8014b36 <USBD_GetDescriptor+0x2ba>
 8014b1a:	687b      	ldr	r3, [r7, #4]
 8014b1c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8014b20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8014b22:	f107 0208 	add.w	r2, r7, #8
 8014b26:	4610      	mov	r0, r2
 8014b28:	4798      	blx	r3
 8014b2a:	60f8      	str	r0, [r7, #12]
 8014b2c:	68fb      	ldr	r3, [r7, #12]
 8014b2e:	3301      	adds	r3, #1
 8014b30:	2207      	movs	r2, #7
 8014b32:	701a      	strb	r2, [r3, #0]
 8014b34:	e00f      	b.n	8014b56 <USBD_GetDescriptor+0x2da>
 8014b36:	6839      	ldr	r1, [r7, #0]
 8014b38:	6878      	ldr	r0, [r7, #4]
 8014b3a:	f000 fa10 	bl	8014f5e <USBD_CtlError>
 8014b3e:	7afb      	ldrb	r3, [r7, #11]
 8014b40:	3301      	adds	r3, #1
 8014b42:	72fb      	strb	r3, [r7, #11]
 8014b44:	e007      	b.n	8014b56 <USBD_GetDescriptor+0x2da>
 8014b46:	6839      	ldr	r1, [r7, #0]
 8014b48:	6878      	ldr	r0, [r7, #4]
 8014b4a:	f000 fa08 	bl	8014f5e <USBD_CtlError>
 8014b4e:	7afb      	ldrb	r3, [r7, #11]
 8014b50:	3301      	adds	r3, #1
 8014b52:	72fb      	strb	r3, [r7, #11]
 8014b54:	bf00      	nop
 8014b56:	7afb      	ldrb	r3, [r7, #11]
 8014b58:	2b00      	cmp	r3, #0
 8014b5a:	d11e      	bne.n	8014b9a <USBD_GetDescriptor+0x31e>
 8014b5c:	683b      	ldr	r3, [r7, #0]
 8014b5e:	88db      	ldrh	r3, [r3, #6]
 8014b60:	2b00      	cmp	r3, #0
 8014b62:	d016      	beq.n	8014b92 <USBD_GetDescriptor+0x316>
 8014b64:	893b      	ldrh	r3, [r7, #8]
 8014b66:	2b00      	cmp	r3, #0
 8014b68:	d00e      	beq.n	8014b88 <USBD_GetDescriptor+0x30c>
 8014b6a:	683b      	ldr	r3, [r7, #0]
 8014b6c:	88da      	ldrh	r2, [r3, #6]
 8014b6e:	893b      	ldrh	r3, [r7, #8]
 8014b70:	4293      	cmp	r3, r2
 8014b72:	bf28      	it	cs
 8014b74:	4613      	movcs	r3, r2
 8014b76:	b29b      	uxth	r3, r3
 8014b78:	813b      	strh	r3, [r7, #8]
 8014b7a:	893b      	ldrh	r3, [r7, #8]
 8014b7c:	461a      	mov	r2, r3
 8014b7e:	68f9      	ldr	r1, [r7, #12]
 8014b80:	6878      	ldr	r0, [r7, #4]
 8014b82:	f000 fa69 	bl	8015058 <USBD_CtlSendData>
 8014b86:	e009      	b.n	8014b9c <USBD_GetDescriptor+0x320>
 8014b88:	6839      	ldr	r1, [r7, #0]
 8014b8a:	6878      	ldr	r0, [r7, #4]
 8014b8c:	f000 f9e7 	bl	8014f5e <USBD_CtlError>
 8014b90:	e004      	b.n	8014b9c <USBD_GetDescriptor+0x320>
 8014b92:	6878      	ldr	r0, [r7, #4]
 8014b94:	f000 faba 	bl	801510c <USBD_CtlSendStatus>
 8014b98:	e000      	b.n	8014b9c <USBD_GetDescriptor+0x320>
 8014b9a:	bf00      	nop
 8014b9c:	3710      	adds	r7, #16
 8014b9e:	46bd      	mov	sp, r7
 8014ba0:	bd80      	pop	{r7, pc}
 8014ba2:	bf00      	nop

08014ba4 <USBD_SetAddress>:
 8014ba4:	b580      	push	{r7, lr}
 8014ba6:	b084      	sub	sp, #16
 8014ba8:	af00      	add	r7, sp, #0
 8014baa:	6078      	str	r0, [r7, #4]
 8014bac:	6039      	str	r1, [r7, #0]
 8014bae:	683b      	ldr	r3, [r7, #0]
 8014bb0:	889b      	ldrh	r3, [r3, #4]
 8014bb2:	2b00      	cmp	r3, #0
 8014bb4:	d131      	bne.n	8014c1a <USBD_SetAddress+0x76>
 8014bb6:	683b      	ldr	r3, [r7, #0]
 8014bb8:	88db      	ldrh	r3, [r3, #6]
 8014bba:	2b00      	cmp	r3, #0
 8014bbc:	d12d      	bne.n	8014c1a <USBD_SetAddress+0x76>
 8014bbe:	683b      	ldr	r3, [r7, #0]
 8014bc0:	885b      	ldrh	r3, [r3, #2]
 8014bc2:	2b7f      	cmp	r3, #127	@ 0x7f
 8014bc4:	d829      	bhi.n	8014c1a <USBD_SetAddress+0x76>
 8014bc6:	683b      	ldr	r3, [r7, #0]
 8014bc8:	885b      	ldrh	r3, [r3, #2]
 8014bca:	b2db      	uxtb	r3, r3
 8014bcc:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8014bd0:	73fb      	strb	r3, [r7, #15]
 8014bd2:	687b      	ldr	r3, [r7, #4]
 8014bd4:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014bd8:	b2db      	uxtb	r3, r3
 8014bda:	2b03      	cmp	r3, #3
 8014bdc:	d104      	bne.n	8014be8 <USBD_SetAddress+0x44>
 8014bde:	6839      	ldr	r1, [r7, #0]
 8014be0:	6878      	ldr	r0, [r7, #4]
 8014be2:	f000 f9bc 	bl	8014f5e <USBD_CtlError>
 8014be6:	e01d      	b.n	8014c24 <USBD_SetAddress+0x80>
 8014be8:	687b      	ldr	r3, [r7, #4]
 8014bea:	7bfa      	ldrb	r2, [r7, #15]
 8014bec:	f883 229e 	strb.w	r2, [r3, #670]	@ 0x29e
 8014bf0:	7bfb      	ldrb	r3, [r7, #15]
 8014bf2:	4619      	mov	r1, r3
 8014bf4:	6878      	ldr	r0, [r7, #4]
 8014bf6:	f000 ff13 	bl	8015a20 <USBD_LL_SetUSBAddress>
 8014bfa:	6878      	ldr	r0, [r7, #4]
 8014bfc:	f000 fa86 	bl	801510c <USBD_CtlSendStatus>
 8014c00:	7bfb      	ldrb	r3, [r7, #15]
 8014c02:	2b00      	cmp	r3, #0
 8014c04:	d004      	beq.n	8014c10 <USBD_SetAddress+0x6c>
 8014c06:	687b      	ldr	r3, [r7, #4]
 8014c08:	2202      	movs	r2, #2
 8014c0a:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8014c0e:	e009      	b.n	8014c24 <USBD_SetAddress+0x80>
 8014c10:	687b      	ldr	r3, [r7, #4]
 8014c12:	2201      	movs	r2, #1
 8014c14:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8014c18:	e004      	b.n	8014c24 <USBD_SetAddress+0x80>
 8014c1a:	6839      	ldr	r1, [r7, #0]
 8014c1c:	6878      	ldr	r0, [r7, #4]
 8014c1e:	f000 f99e 	bl	8014f5e <USBD_CtlError>
 8014c22:	bf00      	nop
 8014c24:	bf00      	nop
 8014c26:	3710      	adds	r7, #16
 8014c28:	46bd      	mov	sp, r7
 8014c2a:	bd80      	pop	{r7, pc}

08014c2c <USBD_SetConfig>:
 8014c2c:	b580      	push	{r7, lr}
 8014c2e:	b084      	sub	sp, #16
 8014c30:	af00      	add	r7, sp, #0
 8014c32:	6078      	str	r0, [r7, #4]
 8014c34:	6039      	str	r1, [r7, #0]
 8014c36:	2300      	movs	r3, #0
 8014c38:	73fb      	strb	r3, [r7, #15]
 8014c3a:	683b      	ldr	r3, [r7, #0]
 8014c3c:	885b      	ldrh	r3, [r3, #2]
 8014c3e:	b2da      	uxtb	r2, r3
 8014c40:	4b4e      	ldr	r3, [pc, #312]	@ (8014d7c <USBD_SetConfig+0x150>)
 8014c42:	701a      	strb	r2, [r3, #0]
 8014c44:	4b4d      	ldr	r3, [pc, #308]	@ (8014d7c <USBD_SetConfig+0x150>)
 8014c46:	781b      	ldrb	r3, [r3, #0]
 8014c48:	2b01      	cmp	r3, #1
 8014c4a:	d905      	bls.n	8014c58 <USBD_SetConfig+0x2c>
 8014c4c:	6839      	ldr	r1, [r7, #0]
 8014c4e:	6878      	ldr	r0, [r7, #4]
 8014c50:	f000 f985 	bl	8014f5e <USBD_CtlError>
 8014c54:	2303      	movs	r3, #3
 8014c56:	e08c      	b.n	8014d72 <USBD_SetConfig+0x146>
 8014c58:	687b      	ldr	r3, [r7, #4]
 8014c5a:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014c5e:	b2db      	uxtb	r3, r3
 8014c60:	2b02      	cmp	r3, #2
 8014c62:	d002      	beq.n	8014c6a <USBD_SetConfig+0x3e>
 8014c64:	2b03      	cmp	r3, #3
 8014c66:	d029      	beq.n	8014cbc <USBD_SetConfig+0x90>
 8014c68:	e075      	b.n	8014d56 <USBD_SetConfig+0x12a>
 8014c6a:	4b44      	ldr	r3, [pc, #272]	@ (8014d7c <USBD_SetConfig+0x150>)
 8014c6c:	781b      	ldrb	r3, [r3, #0]
 8014c6e:	2b00      	cmp	r3, #0
 8014c70:	d020      	beq.n	8014cb4 <USBD_SetConfig+0x88>
 8014c72:	4b42      	ldr	r3, [pc, #264]	@ (8014d7c <USBD_SetConfig+0x150>)
 8014c74:	781b      	ldrb	r3, [r3, #0]
 8014c76:	461a      	mov	r2, r3
 8014c78:	687b      	ldr	r3, [r7, #4]
 8014c7a:	605a      	str	r2, [r3, #4]
 8014c7c:	4b3f      	ldr	r3, [pc, #252]	@ (8014d7c <USBD_SetConfig+0x150>)
 8014c7e:	781b      	ldrb	r3, [r3, #0]
 8014c80:	4619      	mov	r1, r3
 8014c82:	6878      	ldr	r0, [r7, #4]
 8014c84:	f7fe ffb9 	bl	8013bfa <USBD_SetClassConfig>
 8014c88:	4603      	mov	r3, r0
 8014c8a:	73fb      	strb	r3, [r7, #15]
 8014c8c:	7bfb      	ldrb	r3, [r7, #15]
 8014c8e:	2b00      	cmp	r3, #0
 8014c90:	d008      	beq.n	8014ca4 <USBD_SetConfig+0x78>
 8014c92:	6839      	ldr	r1, [r7, #0]
 8014c94:	6878      	ldr	r0, [r7, #4]
 8014c96:	f000 f962 	bl	8014f5e <USBD_CtlError>
 8014c9a:	687b      	ldr	r3, [r7, #4]
 8014c9c:	2202      	movs	r2, #2
 8014c9e:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8014ca2:	e065      	b.n	8014d70 <USBD_SetConfig+0x144>
 8014ca4:	6878      	ldr	r0, [r7, #4]
 8014ca6:	f000 fa31 	bl	801510c <USBD_CtlSendStatus>
 8014caa:	687b      	ldr	r3, [r7, #4]
 8014cac:	2203      	movs	r2, #3
 8014cae:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8014cb2:	e05d      	b.n	8014d70 <USBD_SetConfig+0x144>
 8014cb4:	6878      	ldr	r0, [r7, #4]
 8014cb6:	f000 fa29 	bl	801510c <USBD_CtlSendStatus>
 8014cba:	e059      	b.n	8014d70 <USBD_SetConfig+0x144>
 8014cbc:	4b2f      	ldr	r3, [pc, #188]	@ (8014d7c <USBD_SetConfig+0x150>)
 8014cbe:	781b      	ldrb	r3, [r3, #0]
 8014cc0:	2b00      	cmp	r3, #0
 8014cc2:	d112      	bne.n	8014cea <USBD_SetConfig+0xbe>
 8014cc4:	687b      	ldr	r3, [r7, #4]
 8014cc6:	2202      	movs	r2, #2
 8014cc8:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8014ccc:	4b2b      	ldr	r3, [pc, #172]	@ (8014d7c <USBD_SetConfig+0x150>)
 8014cce:	781b      	ldrb	r3, [r3, #0]
 8014cd0:	461a      	mov	r2, r3
 8014cd2:	687b      	ldr	r3, [r7, #4]
 8014cd4:	605a      	str	r2, [r3, #4]
 8014cd6:	4b29      	ldr	r3, [pc, #164]	@ (8014d7c <USBD_SetConfig+0x150>)
 8014cd8:	781b      	ldrb	r3, [r3, #0]
 8014cda:	4619      	mov	r1, r3
 8014cdc:	6878      	ldr	r0, [r7, #4]
 8014cde:	f7fe ffa8 	bl	8013c32 <USBD_ClrClassConfig>
 8014ce2:	6878      	ldr	r0, [r7, #4]
 8014ce4:	f000 fa12 	bl	801510c <USBD_CtlSendStatus>
 8014ce8:	e042      	b.n	8014d70 <USBD_SetConfig+0x144>
 8014cea:	4b24      	ldr	r3, [pc, #144]	@ (8014d7c <USBD_SetConfig+0x150>)
 8014cec:	781b      	ldrb	r3, [r3, #0]
 8014cee:	461a      	mov	r2, r3
 8014cf0:	687b      	ldr	r3, [r7, #4]
 8014cf2:	685b      	ldr	r3, [r3, #4]
 8014cf4:	429a      	cmp	r2, r3
 8014cf6:	d02a      	beq.n	8014d4e <USBD_SetConfig+0x122>
 8014cf8:	687b      	ldr	r3, [r7, #4]
 8014cfa:	685b      	ldr	r3, [r3, #4]
 8014cfc:	b2db      	uxtb	r3, r3
 8014cfe:	4619      	mov	r1, r3
 8014d00:	6878      	ldr	r0, [r7, #4]
 8014d02:	f7fe ff96 	bl	8013c32 <USBD_ClrClassConfig>
 8014d06:	4b1d      	ldr	r3, [pc, #116]	@ (8014d7c <USBD_SetConfig+0x150>)
 8014d08:	781b      	ldrb	r3, [r3, #0]
 8014d0a:	461a      	mov	r2, r3
 8014d0c:	687b      	ldr	r3, [r7, #4]
 8014d0e:	605a      	str	r2, [r3, #4]
 8014d10:	4b1a      	ldr	r3, [pc, #104]	@ (8014d7c <USBD_SetConfig+0x150>)
 8014d12:	781b      	ldrb	r3, [r3, #0]
 8014d14:	4619      	mov	r1, r3
 8014d16:	6878      	ldr	r0, [r7, #4]
 8014d18:	f7fe ff6f 	bl	8013bfa <USBD_SetClassConfig>
 8014d1c:	4603      	mov	r3, r0
 8014d1e:	73fb      	strb	r3, [r7, #15]
 8014d20:	7bfb      	ldrb	r3, [r7, #15]
 8014d22:	2b00      	cmp	r3, #0
 8014d24:	d00f      	beq.n	8014d46 <USBD_SetConfig+0x11a>
 8014d26:	6839      	ldr	r1, [r7, #0]
 8014d28:	6878      	ldr	r0, [r7, #4]
 8014d2a:	f000 f918 	bl	8014f5e <USBD_CtlError>
 8014d2e:	687b      	ldr	r3, [r7, #4]
 8014d30:	685b      	ldr	r3, [r3, #4]
 8014d32:	b2db      	uxtb	r3, r3
 8014d34:	4619      	mov	r1, r3
 8014d36:	6878      	ldr	r0, [r7, #4]
 8014d38:	f7fe ff7b 	bl	8013c32 <USBD_ClrClassConfig>
 8014d3c:	687b      	ldr	r3, [r7, #4]
 8014d3e:	2202      	movs	r2, #2
 8014d40:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8014d44:	e014      	b.n	8014d70 <USBD_SetConfig+0x144>
 8014d46:	6878      	ldr	r0, [r7, #4]
 8014d48:	f000 f9e0 	bl	801510c <USBD_CtlSendStatus>
 8014d4c:	e010      	b.n	8014d70 <USBD_SetConfig+0x144>
 8014d4e:	6878      	ldr	r0, [r7, #4]
 8014d50:	f000 f9dc 	bl	801510c <USBD_CtlSendStatus>
 8014d54:	e00c      	b.n	8014d70 <USBD_SetConfig+0x144>
 8014d56:	6839      	ldr	r1, [r7, #0]
 8014d58:	6878      	ldr	r0, [r7, #4]
 8014d5a:	f000 f900 	bl	8014f5e <USBD_CtlError>
 8014d5e:	4b07      	ldr	r3, [pc, #28]	@ (8014d7c <USBD_SetConfig+0x150>)
 8014d60:	781b      	ldrb	r3, [r3, #0]
 8014d62:	4619      	mov	r1, r3
 8014d64:	6878      	ldr	r0, [r7, #4]
 8014d66:	f7fe ff64 	bl	8013c32 <USBD_ClrClassConfig>
 8014d6a:	2303      	movs	r3, #3
 8014d6c:	73fb      	strb	r3, [r7, #15]
 8014d6e:	bf00      	nop
 8014d70:	7bfb      	ldrb	r3, [r7, #15]
 8014d72:	4618      	mov	r0, r3
 8014d74:	3710      	adds	r7, #16
 8014d76:	46bd      	mov	sp, r7
 8014d78:	bd80      	pop	{r7, pc}
 8014d7a:	bf00      	nop
 8014d7c:	24004544 	.word	0x24004544

08014d80 <USBD_GetConfig>:
 8014d80:	b580      	push	{r7, lr}
 8014d82:	b082      	sub	sp, #8
 8014d84:	af00      	add	r7, sp, #0
 8014d86:	6078      	str	r0, [r7, #4]
 8014d88:	6039      	str	r1, [r7, #0]
 8014d8a:	683b      	ldr	r3, [r7, #0]
 8014d8c:	88db      	ldrh	r3, [r3, #6]
 8014d8e:	2b01      	cmp	r3, #1
 8014d90:	d004      	beq.n	8014d9c <USBD_GetConfig+0x1c>
 8014d92:	6839      	ldr	r1, [r7, #0]
 8014d94:	6878      	ldr	r0, [r7, #4]
 8014d96:	f000 f8e2 	bl	8014f5e <USBD_CtlError>
 8014d9a:	e023      	b.n	8014de4 <USBD_GetConfig+0x64>
 8014d9c:	687b      	ldr	r3, [r7, #4]
 8014d9e:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014da2:	b2db      	uxtb	r3, r3
 8014da4:	2b02      	cmp	r3, #2
 8014da6:	dc02      	bgt.n	8014dae <USBD_GetConfig+0x2e>
 8014da8:	2b00      	cmp	r3, #0
 8014daa:	dc03      	bgt.n	8014db4 <USBD_GetConfig+0x34>
 8014dac:	e015      	b.n	8014dda <USBD_GetConfig+0x5a>
 8014dae:	2b03      	cmp	r3, #3
 8014db0:	d00b      	beq.n	8014dca <USBD_GetConfig+0x4a>
 8014db2:	e012      	b.n	8014dda <USBD_GetConfig+0x5a>
 8014db4:	687b      	ldr	r3, [r7, #4]
 8014db6:	2200      	movs	r2, #0
 8014db8:	609a      	str	r2, [r3, #8]
 8014dba:	687b      	ldr	r3, [r7, #4]
 8014dbc:	3308      	adds	r3, #8
 8014dbe:	2201      	movs	r2, #1
 8014dc0:	4619      	mov	r1, r3
 8014dc2:	6878      	ldr	r0, [r7, #4]
 8014dc4:	f000 f948 	bl	8015058 <USBD_CtlSendData>
 8014dc8:	e00c      	b.n	8014de4 <USBD_GetConfig+0x64>
 8014dca:	687b      	ldr	r3, [r7, #4]
 8014dcc:	3304      	adds	r3, #4
 8014dce:	2201      	movs	r2, #1
 8014dd0:	4619      	mov	r1, r3
 8014dd2:	6878      	ldr	r0, [r7, #4]
 8014dd4:	f000 f940 	bl	8015058 <USBD_CtlSendData>
 8014dd8:	e004      	b.n	8014de4 <USBD_GetConfig+0x64>
 8014dda:	6839      	ldr	r1, [r7, #0]
 8014ddc:	6878      	ldr	r0, [r7, #4]
 8014dde:	f000 f8be 	bl	8014f5e <USBD_CtlError>
 8014de2:	bf00      	nop
 8014de4:	bf00      	nop
 8014de6:	3708      	adds	r7, #8
 8014de8:	46bd      	mov	sp, r7
 8014dea:	bd80      	pop	{r7, pc}

08014dec <USBD_GetStatus>:
 8014dec:	b580      	push	{r7, lr}
 8014dee:	b082      	sub	sp, #8
 8014df0:	af00      	add	r7, sp, #0
 8014df2:	6078      	str	r0, [r7, #4]
 8014df4:	6039      	str	r1, [r7, #0]
 8014df6:	687b      	ldr	r3, [r7, #4]
 8014df8:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014dfc:	b2db      	uxtb	r3, r3
 8014dfe:	3b01      	subs	r3, #1
 8014e00:	2b02      	cmp	r3, #2
 8014e02:	d81e      	bhi.n	8014e42 <USBD_GetStatus+0x56>
 8014e04:	683b      	ldr	r3, [r7, #0]
 8014e06:	88db      	ldrh	r3, [r3, #6]
 8014e08:	2b02      	cmp	r3, #2
 8014e0a:	d004      	beq.n	8014e16 <USBD_GetStatus+0x2a>
 8014e0c:	6839      	ldr	r1, [r7, #0]
 8014e0e:	6878      	ldr	r0, [r7, #4]
 8014e10:	f000 f8a5 	bl	8014f5e <USBD_CtlError>
 8014e14:	e01a      	b.n	8014e4c <USBD_GetStatus+0x60>
 8014e16:	687b      	ldr	r3, [r7, #4]
 8014e18:	2201      	movs	r2, #1
 8014e1a:	60da      	str	r2, [r3, #12]
 8014e1c:	687b      	ldr	r3, [r7, #4]
 8014e1e:	f8d3 32a4 	ldr.w	r3, [r3, #676]	@ 0x2a4
 8014e22:	2b00      	cmp	r3, #0
 8014e24:	d005      	beq.n	8014e32 <USBD_GetStatus+0x46>
 8014e26:	687b      	ldr	r3, [r7, #4]
 8014e28:	68db      	ldr	r3, [r3, #12]
 8014e2a:	f043 0202 	orr.w	r2, r3, #2
 8014e2e:	687b      	ldr	r3, [r7, #4]
 8014e30:	60da      	str	r2, [r3, #12]
 8014e32:	687b      	ldr	r3, [r7, #4]
 8014e34:	330c      	adds	r3, #12
 8014e36:	2202      	movs	r2, #2
 8014e38:	4619      	mov	r1, r3
 8014e3a:	6878      	ldr	r0, [r7, #4]
 8014e3c:	f000 f90c 	bl	8015058 <USBD_CtlSendData>
 8014e40:	e004      	b.n	8014e4c <USBD_GetStatus+0x60>
 8014e42:	6839      	ldr	r1, [r7, #0]
 8014e44:	6878      	ldr	r0, [r7, #4]
 8014e46:	f000 f88a 	bl	8014f5e <USBD_CtlError>
 8014e4a:	bf00      	nop
 8014e4c:	bf00      	nop
 8014e4e:	3708      	adds	r7, #8
 8014e50:	46bd      	mov	sp, r7
 8014e52:	bd80      	pop	{r7, pc}

08014e54 <USBD_SetFeature>:
 8014e54:	b580      	push	{r7, lr}
 8014e56:	b082      	sub	sp, #8
 8014e58:	af00      	add	r7, sp, #0
 8014e5a:	6078      	str	r0, [r7, #4]
 8014e5c:	6039      	str	r1, [r7, #0]
 8014e5e:	683b      	ldr	r3, [r7, #0]
 8014e60:	885b      	ldrh	r3, [r3, #2]
 8014e62:	2b01      	cmp	r3, #1
 8014e64:	d107      	bne.n	8014e76 <USBD_SetFeature+0x22>
 8014e66:	687b      	ldr	r3, [r7, #4]
 8014e68:	2201      	movs	r2, #1
 8014e6a:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 8014e6e:	6878      	ldr	r0, [r7, #4]
 8014e70:	f000 f94c 	bl	801510c <USBD_CtlSendStatus>
 8014e74:	e013      	b.n	8014e9e <USBD_SetFeature+0x4a>
 8014e76:	683b      	ldr	r3, [r7, #0]
 8014e78:	885b      	ldrh	r3, [r3, #2]
 8014e7a:	2b02      	cmp	r3, #2
 8014e7c:	d10b      	bne.n	8014e96 <USBD_SetFeature+0x42>
 8014e7e:	683b      	ldr	r3, [r7, #0]
 8014e80:	889b      	ldrh	r3, [r3, #4]
 8014e82:	0a1b      	lsrs	r3, r3, #8
 8014e84:	b29b      	uxth	r3, r3
 8014e86:	b2da      	uxtb	r2, r3
 8014e88:	687b      	ldr	r3, [r7, #4]
 8014e8a:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8014e8e:	6878      	ldr	r0, [r7, #4]
 8014e90:	f000 f93c 	bl	801510c <USBD_CtlSendStatus>
 8014e94:	e003      	b.n	8014e9e <USBD_SetFeature+0x4a>
 8014e96:	6839      	ldr	r1, [r7, #0]
 8014e98:	6878      	ldr	r0, [r7, #4]
 8014e9a:	f000 f860 	bl	8014f5e <USBD_CtlError>
 8014e9e:	bf00      	nop
 8014ea0:	3708      	adds	r7, #8
 8014ea2:	46bd      	mov	sp, r7
 8014ea4:	bd80      	pop	{r7, pc}

08014ea6 <USBD_ClrFeature>:
 8014ea6:	b580      	push	{r7, lr}
 8014ea8:	b082      	sub	sp, #8
 8014eaa:	af00      	add	r7, sp, #0
 8014eac:	6078      	str	r0, [r7, #4]
 8014eae:	6039      	str	r1, [r7, #0]
 8014eb0:	687b      	ldr	r3, [r7, #4]
 8014eb2:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8014eb6:	b2db      	uxtb	r3, r3
 8014eb8:	3b01      	subs	r3, #1
 8014eba:	2b02      	cmp	r3, #2
 8014ebc:	d80b      	bhi.n	8014ed6 <USBD_ClrFeature+0x30>
 8014ebe:	683b      	ldr	r3, [r7, #0]
 8014ec0:	885b      	ldrh	r3, [r3, #2]
 8014ec2:	2b01      	cmp	r3, #1
 8014ec4:	d10c      	bne.n	8014ee0 <USBD_ClrFeature+0x3a>
 8014ec6:	687b      	ldr	r3, [r7, #4]
 8014ec8:	2200      	movs	r2, #0
 8014eca:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 8014ece:	6878      	ldr	r0, [r7, #4]
 8014ed0:	f000 f91c 	bl	801510c <USBD_CtlSendStatus>
 8014ed4:	e004      	b.n	8014ee0 <USBD_ClrFeature+0x3a>
 8014ed6:	6839      	ldr	r1, [r7, #0]
 8014ed8:	6878      	ldr	r0, [r7, #4]
 8014eda:	f000 f840 	bl	8014f5e <USBD_CtlError>
 8014ede:	e000      	b.n	8014ee2 <USBD_ClrFeature+0x3c>
 8014ee0:	bf00      	nop
 8014ee2:	bf00      	nop
 8014ee4:	3708      	adds	r7, #8
 8014ee6:	46bd      	mov	sp, r7
 8014ee8:	bd80      	pop	{r7, pc}

08014eea <USBD_ParseSetupRequest>:
 8014eea:	b580      	push	{r7, lr}
 8014eec:	b084      	sub	sp, #16
 8014eee:	af00      	add	r7, sp, #0
 8014ef0:	6078      	str	r0, [r7, #4]
 8014ef2:	6039      	str	r1, [r7, #0]
 8014ef4:	683b      	ldr	r3, [r7, #0]
 8014ef6:	60fb      	str	r3, [r7, #12]
 8014ef8:	68fb      	ldr	r3, [r7, #12]
 8014efa:	781a      	ldrb	r2, [r3, #0]
 8014efc:	687b      	ldr	r3, [r7, #4]
 8014efe:	701a      	strb	r2, [r3, #0]
 8014f00:	68fb      	ldr	r3, [r7, #12]
 8014f02:	3301      	adds	r3, #1
 8014f04:	60fb      	str	r3, [r7, #12]
 8014f06:	68fb      	ldr	r3, [r7, #12]
 8014f08:	781a      	ldrb	r2, [r3, #0]
 8014f0a:	687b      	ldr	r3, [r7, #4]
 8014f0c:	705a      	strb	r2, [r3, #1]
 8014f0e:	68fb      	ldr	r3, [r7, #12]
 8014f10:	3301      	adds	r3, #1
 8014f12:	60fb      	str	r3, [r7, #12]
 8014f14:	68f8      	ldr	r0, [r7, #12]
 8014f16:	f7ff fa16 	bl	8014346 <SWAPBYTE>
 8014f1a:	4603      	mov	r3, r0
 8014f1c:	461a      	mov	r2, r3
 8014f1e:	687b      	ldr	r3, [r7, #4]
 8014f20:	805a      	strh	r2, [r3, #2]
 8014f22:	68fb      	ldr	r3, [r7, #12]
 8014f24:	3301      	adds	r3, #1
 8014f26:	60fb      	str	r3, [r7, #12]
 8014f28:	68fb      	ldr	r3, [r7, #12]
 8014f2a:	3301      	adds	r3, #1
 8014f2c:	60fb      	str	r3, [r7, #12]
 8014f2e:	68f8      	ldr	r0, [r7, #12]
 8014f30:	f7ff fa09 	bl	8014346 <SWAPBYTE>
 8014f34:	4603      	mov	r3, r0
 8014f36:	461a      	mov	r2, r3
 8014f38:	687b      	ldr	r3, [r7, #4]
 8014f3a:	809a      	strh	r2, [r3, #4]
 8014f3c:	68fb      	ldr	r3, [r7, #12]
 8014f3e:	3301      	adds	r3, #1
 8014f40:	60fb      	str	r3, [r7, #12]
 8014f42:	68fb      	ldr	r3, [r7, #12]
 8014f44:	3301      	adds	r3, #1
 8014f46:	60fb      	str	r3, [r7, #12]
 8014f48:	68f8      	ldr	r0, [r7, #12]
 8014f4a:	f7ff f9fc 	bl	8014346 <SWAPBYTE>
 8014f4e:	4603      	mov	r3, r0
 8014f50:	461a      	mov	r2, r3
 8014f52:	687b      	ldr	r3, [r7, #4]
 8014f54:	80da      	strh	r2, [r3, #6]
 8014f56:	bf00      	nop
 8014f58:	3710      	adds	r7, #16
 8014f5a:	46bd      	mov	sp, r7
 8014f5c:	bd80      	pop	{r7, pc}

08014f5e <USBD_CtlError>:
 8014f5e:	b580      	push	{r7, lr}
 8014f60:	b082      	sub	sp, #8
 8014f62:	af00      	add	r7, sp, #0
 8014f64:	6078      	str	r0, [r7, #4]
 8014f66:	6039      	str	r1, [r7, #0]
 8014f68:	2180      	movs	r1, #128	@ 0x80
 8014f6a:	6878      	ldr	r0, [r7, #4]
 8014f6c:	f000 fcee 	bl	801594c <USBD_LL_StallEP>
 8014f70:	2100      	movs	r1, #0
 8014f72:	6878      	ldr	r0, [r7, #4]
 8014f74:	f000 fcea 	bl	801594c <USBD_LL_StallEP>
 8014f78:	bf00      	nop
 8014f7a:	3708      	adds	r7, #8
 8014f7c:	46bd      	mov	sp, r7
 8014f7e:	bd80      	pop	{r7, pc}

08014f80 <USBD_GetString>:
 8014f80:	b580      	push	{r7, lr}
 8014f82:	b086      	sub	sp, #24
 8014f84:	af00      	add	r7, sp, #0
 8014f86:	60f8      	str	r0, [r7, #12]
 8014f88:	60b9      	str	r1, [r7, #8]
 8014f8a:	607a      	str	r2, [r7, #4]
 8014f8c:	2300      	movs	r3, #0
 8014f8e:	75fb      	strb	r3, [r7, #23]
 8014f90:	68fb      	ldr	r3, [r7, #12]
 8014f92:	2b00      	cmp	r3, #0
 8014f94:	d042      	beq.n	801501c <USBD_GetString+0x9c>
 8014f96:	68fb      	ldr	r3, [r7, #12]
 8014f98:	613b      	str	r3, [r7, #16]
 8014f9a:	6938      	ldr	r0, [r7, #16]
 8014f9c:	f000 f842 	bl	8015024 <USBD_GetLen>
 8014fa0:	4603      	mov	r3, r0
 8014fa2:	3301      	adds	r3, #1
 8014fa4:	005b      	lsls	r3, r3, #1
 8014fa6:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8014faa:	d808      	bhi.n	8014fbe <USBD_GetString+0x3e>
 8014fac:	6938      	ldr	r0, [r7, #16]
 8014fae:	f000 f839 	bl	8015024 <USBD_GetLen>
 8014fb2:	4603      	mov	r3, r0
 8014fb4:	3301      	adds	r3, #1
 8014fb6:	b29b      	uxth	r3, r3
 8014fb8:	005b      	lsls	r3, r3, #1
 8014fba:	b29a      	uxth	r2, r3
 8014fbc:	e001      	b.n	8014fc2 <USBD_GetString+0x42>
 8014fbe:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8014fc2:	687b      	ldr	r3, [r7, #4]
 8014fc4:	801a      	strh	r2, [r3, #0]
 8014fc6:	7dfb      	ldrb	r3, [r7, #23]
 8014fc8:	68ba      	ldr	r2, [r7, #8]
 8014fca:	4413      	add	r3, r2
 8014fcc:	687a      	ldr	r2, [r7, #4]
 8014fce:	7812      	ldrb	r2, [r2, #0]
 8014fd0:	701a      	strb	r2, [r3, #0]
 8014fd2:	7dfb      	ldrb	r3, [r7, #23]
 8014fd4:	3301      	adds	r3, #1
 8014fd6:	75fb      	strb	r3, [r7, #23]
 8014fd8:	7dfb      	ldrb	r3, [r7, #23]
 8014fda:	68ba      	ldr	r2, [r7, #8]
 8014fdc:	4413      	add	r3, r2
 8014fde:	2203      	movs	r2, #3
 8014fe0:	701a      	strb	r2, [r3, #0]
 8014fe2:	7dfb      	ldrb	r3, [r7, #23]
 8014fe4:	3301      	adds	r3, #1
 8014fe6:	75fb      	strb	r3, [r7, #23]
 8014fe8:	e013      	b.n	8015012 <USBD_GetString+0x92>
 8014fea:	7dfb      	ldrb	r3, [r7, #23]
 8014fec:	68ba      	ldr	r2, [r7, #8]
 8014fee:	4413      	add	r3, r2
 8014ff0:	693a      	ldr	r2, [r7, #16]
 8014ff2:	7812      	ldrb	r2, [r2, #0]
 8014ff4:	701a      	strb	r2, [r3, #0]
 8014ff6:	693b      	ldr	r3, [r7, #16]
 8014ff8:	3301      	adds	r3, #1
 8014ffa:	613b      	str	r3, [r7, #16]
 8014ffc:	7dfb      	ldrb	r3, [r7, #23]
 8014ffe:	3301      	adds	r3, #1
 8015000:	75fb      	strb	r3, [r7, #23]
 8015002:	7dfb      	ldrb	r3, [r7, #23]
 8015004:	68ba      	ldr	r2, [r7, #8]
 8015006:	4413      	add	r3, r2
 8015008:	2200      	movs	r2, #0
 801500a:	701a      	strb	r2, [r3, #0]
 801500c:	7dfb      	ldrb	r3, [r7, #23]
 801500e:	3301      	adds	r3, #1
 8015010:	75fb      	strb	r3, [r7, #23]
 8015012:	693b      	ldr	r3, [r7, #16]
 8015014:	781b      	ldrb	r3, [r3, #0]
 8015016:	2b00      	cmp	r3, #0
 8015018:	d1e7      	bne.n	8014fea <USBD_GetString+0x6a>
 801501a:	e000      	b.n	801501e <USBD_GetString+0x9e>
 801501c:	bf00      	nop
 801501e:	3718      	adds	r7, #24
 8015020:	46bd      	mov	sp, r7
 8015022:	bd80      	pop	{r7, pc}

08015024 <USBD_GetLen>:
 8015024:	b480      	push	{r7}
 8015026:	b085      	sub	sp, #20
 8015028:	af00      	add	r7, sp, #0
 801502a:	6078      	str	r0, [r7, #4]
 801502c:	2300      	movs	r3, #0
 801502e:	73fb      	strb	r3, [r7, #15]
 8015030:	687b      	ldr	r3, [r7, #4]
 8015032:	60bb      	str	r3, [r7, #8]
 8015034:	e005      	b.n	8015042 <USBD_GetLen+0x1e>
 8015036:	7bfb      	ldrb	r3, [r7, #15]
 8015038:	3301      	adds	r3, #1
 801503a:	73fb      	strb	r3, [r7, #15]
 801503c:	68bb      	ldr	r3, [r7, #8]
 801503e:	3301      	adds	r3, #1
 8015040:	60bb      	str	r3, [r7, #8]
 8015042:	68bb      	ldr	r3, [r7, #8]
 8015044:	781b      	ldrb	r3, [r3, #0]
 8015046:	2b00      	cmp	r3, #0
 8015048:	d1f5      	bne.n	8015036 <USBD_GetLen+0x12>
 801504a:	7bfb      	ldrb	r3, [r7, #15]
 801504c:	4618      	mov	r0, r3
 801504e:	3714      	adds	r7, #20
 8015050:	46bd      	mov	sp, r7
 8015052:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015056:	4770      	bx	lr

08015058 <USBD_CtlSendData>:
 8015058:	b580      	push	{r7, lr}
 801505a:	b084      	sub	sp, #16
 801505c:	af00      	add	r7, sp, #0
 801505e:	60f8      	str	r0, [r7, #12]
 8015060:	60b9      	str	r1, [r7, #8]
 8015062:	607a      	str	r2, [r7, #4]
 8015064:	68fb      	ldr	r3, [r7, #12]
 8015066:	2202      	movs	r2, #2
 8015068:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 801506c:	68fb      	ldr	r3, [r7, #12]
 801506e:	687a      	ldr	r2, [r7, #4]
 8015070:	619a      	str	r2, [r3, #24]
 8015072:	68fb      	ldr	r3, [r7, #12]
 8015074:	687a      	ldr	r2, [r7, #4]
 8015076:	61da      	str	r2, [r3, #28]
 8015078:	687b      	ldr	r3, [r7, #4]
 801507a:	68ba      	ldr	r2, [r7, #8]
 801507c:	2100      	movs	r1, #0
 801507e:	68f8      	ldr	r0, [r7, #12]
 8015080:	f000 fced 	bl	8015a5e <USBD_LL_Transmit>
 8015084:	2300      	movs	r3, #0
 8015086:	4618      	mov	r0, r3
 8015088:	3710      	adds	r7, #16
 801508a:	46bd      	mov	sp, r7
 801508c:	bd80      	pop	{r7, pc}

0801508e <USBD_CtlContinueSendData>:
 801508e:	b580      	push	{r7, lr}
 8015090:	b084      	sub	sp, #16
 8015092:	af00      	add	r7, sp, #0
 8015094:	60f8      	str	r0, [r7, #12]
 8015096:	60b9      	str	r1, [r7, #8]
 8015098:	607a      	str	r2, [r7, #4]
 801509a:	687b      	ldr	r3, [r7, #4]
 801509c:	68ba      	ldr	r2, [r7, #8]
 801509e:	2100      	movs	r1, #0
 80150a0:	68f8      	ldr	r0, [r7, #12]
 80150a2:	f000 fcdc 	bl	8015a5e <USBD_LL_Transmit>
 80150a6:	2300      	movs	r3, #0
 80150a8:	4618      	mov	r0, r3
 80150aa:	3710      	adds	r7, #16
 80150ac:	46bd      	mov	sp, r7
 80150ae:	bd80      	pop	{r7, pc}

080150b0 <USBD_CtlPrepareRx>:
 80150b0:	b580      	push	{r7, lr}
 80150b2:	b084      	sub	sp, #16
 80150b4:	af00      	add	r7, sp, #0
 80150b6:	60f8      	str	r0, [r7, #12]
 80150b8:	60b9      	str	r1, [r7, #8]
 80150ba:	607a      	str	r2, [r7, #4]
 80150bc:	68fb      	ldr	r3, [r7, #12]
 80150be:	2203      	movs	r2, #3
 80150c0:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 80150c4:	68fb      	ldr	r3, [r7, #12]
 80150c6:	687a      	ldr	r2, [r7, #4]
 80150c8:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
 80150cc:	68fb      	ldr	r3, [r7, #12]
 80150ce:	687a      	ldr	r2, [r7, #4]
 80150d0:	f8c3 215c 	str.w	r2, [r3, #348]	@ 0x15c
 80150d4:	687b      	ldr	r3, [r7, #4]
 80150d6:	68ba      	ldr	r2, [r7, #8]
 80150d8:	2100      	movs	r1, #0
 80150da:	68f8      	ldr	r0, [r7, #12]
 80150dc:	f000 fce0 	bl	8015aa0 <USBD_LL_PrepareReceive>
 80150e0:	2300      	movs	r3, #0
 80150e2:	4618      	mov	r0, r3
 80150e4:	3710      	adds	r7, #16
 80150e6:	46bd      	mov	sp, r7
 80150e8:	bd80      	pop	{r7, pc}

080150ea <USBD_CtlContinueRx>:
 80150ea:	b580      	push	{r7, lr}
 80150ec:	b084      	sub	sp, #16
 80150ee:	af00      	add	r7, sp, #0
 80150f0:	60f8      	str	r0, [r7, #12]
 80150f2:	60b9      	str	r1, [r7, #8]
 80150f4:	607a      	str	r2, [r7, #4]
 80150f6:	687b      	ldr	r3, [r7, #4]
 80150f8:	68ba      	ldr	r2, [r7, #8]
 80150fa:	2100      	movs	r1, #0
 80150fc:	68f8      	ldr	r0, [r7, #12]
 80150fe:	f000 fccf 	bl	8015aa0 <USBD_LL_PrepareReceive>
 8015102:	2300      	movs	r3, #0
 8015104:	4618      	mov	r0, r3
 8015106:	3710      	adds	r7, #16
 8015108:	46bd      	mov	sp, r7
 801510a:	bd80      	pop	{r7, pc}

0801510c <USBD_CtlSendStatus>:
 801510c:	b580      	push	{r7, lr}
 801510e:	b082      	sub	sp, #8
 8015110:	af00      	add	r7, sp, #0
 8015112:	6078      	str	r0, [r7, #4]
 8015114:	687b      	ldr	r3, [r7, #4]
 8015116:	2204      	movs	r2, #4
 8015118:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 801511c:	2300      	movs	r3, #0
 801511e:	2200      	movs	r2, #0
 8015120:	2100      	movs	r1, #0
 8015122:	6878      	ldr	r0, [r7, #4]
 8015124:	f000 fc9b 	bl	8015a5e <USBD_LL_Transmit>
 8015128:	2300      	movs	r3, #0
 801512a:	4618      	mov	r0, r3
 801512c:	3708      	adds	r7, #8
 801512e:	46bd      	mov	sp, r7
 8015130:	bd80      	pop	{r7, pc}

08015132 <USBD_CtlReceiveStatus>:
 8015132:	b580      	push	{r7, lr}
 8015134:	b082      	sub	sp, #8
 8015136:	af00      	add	r7, sp, #0
 8015138:	6078      	str	r0, [r7, #4]
 801513a:	687b      	ldr	r3, [r7, #4]
 801513c:	2205      	movs	r2, #5
 801513e:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8015142:	2300      	movs	r3, #0
 8015144:	2200      	movs	r2, #0
 8015146:	2100      	movs	r1, #0
 8015148:	6878      	ldr	r0, [r7, #4]
 801514a:	f000 fca9 	bl	8015aa0 <USBD_LL_PrepareReceive>
 801514e:	2300      	movs	r3, #0
 8015150:	4618      	mov	r0, r3
 8015152:	3708      	adds	r7, #8
 8015154:	46bd      	mov	sp, r7
 8015156:	bd80      	pop	{r7, pc}

08015158 <MX_USB_DEVICE_Init>:
 8015158:	b580      	push	{r7, lr}
 801515a:	af00      	add	r7, sp, #0
 801515c:	2201      	movs	r2, #1
 801515e:	4913      	ldr	r1, [pc, #76]	@ (80151ac <MX_USB_DEVICE_Init+0x54>)
 8015160:	4813      	ldr	r0, [pc, #76]	@ (80151b0 <MX_USB_DEVICE_Init+0x58>)
 8015162:	f7fe fccd 	bl	8013b00 <USBD_Init>
 8015166:	4603      	mov	r3, r0
 8015168:	2b00      	cmp	r3, #0
 801516a:	d001      	beq.n	8015170 <MX_USB_DEVICE_Init+0x18>
 801516c:	f7ec fbc0 	bl	80018f0 <Error_Handler>
 8015170:	4910      	ldr	r1, [pc, #64]	@ (80151b4 <MX_USB_DEVICE_Init+0x5c>)
 8015172:	480f      	ldr	r0, [pc, #60]	@ (80151b0 <MX_USB_DEVICE_Init+0x58>)
 8015174:	f7fe fcf4 	bl	8013b60 <USBD_RegisterClass>
 8015178:	4603      	mov	r3, r0
 801517a:	2b00      	cmp	r3, #0
 801517c:	d001      	beq.n	8015182 <MX_USB_DEVICE_Init+0x2a>
 801517e:	f7ec fbb7 	bl	80018f0 <Error_Handler>
 8015182:	490d      	ldr	r1, [pc, #52]	@ (80151b8 <MX_USB_DEVICE_Init+0x60>)
 8015184:	480a      	ldr	r0, [pc, #40]	@ (80151b0 <MX_USB_DEVICE_Init+0x58>)
 8015186:	f7fe fbeb 	bl	8013960 <USBD_CDC_RegisterInterface>
 801518a:	4603      	mov	r3, r0
 801518c:	2b00      	cmp	r3, #0
 801518e:	d001      	beq.n	8015194 <MX_USB_DEVICE_Init+0x3c>
 8015190:	f7ec fbae 	bl	80018f0 <Error_Handler>
 8015194:	4806      	ldr	r0, [pc, #24]	@ (80151b0 <MX_USB_DEVICE_Init+0x58>)
 8015196:	f7fe fd19 	bl	8013bcc <USBD_Start>
 801519a:	4603      	mov	r3, r0
 801519c:	2b00      	cmp	r3, #0
 801519e:	d001      	beq.n	80151a4 <MX_USB_DEVICE_Init+0x4c>
 80151a0:	f7ec fba6 	bl	80018f0 <Error_Handler>
 80151a4:	f7f5 ff42 	bl	800b02c <HAL_PWREx_EnableUSBVoltageDetector>
 80151a8:	bf00      	nop
 80151aa:	bd80      	pop	{r7, pc}
 80151ac:	240000b0 	.word	0x240000b0
 80151b0:	24004548 	.word	0x24004548
 80151b4:	2400001c 	.word	0x2400001c
 80151b8:	2400009c 	.word	0x2400009c

080151bc <CDC_Init_HS>:
/**
  * @brief  Initializes the CDC media low layer over the USB HS IP
  * @retval USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_Init_HS(void)
{
 80151bc:	b580      	push	{r7, lr}
 80151be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 8 */
  /* Set Application Buffers */
  USBD_CDC_SetTxBuffer(&hUsbDeviceHS, UserTxBufferHS, 0);
 80151c0:	2200      	movs	r2, #0
 80151c2:	4905      	ldr	r1, [pc, #20]	@ (80151d8 <CDC_Init_HS+0x1c>)
 80151c4:	4805      	ldr	r0, [pc, #20]	@ (80151dc <CDC_Init_HS+0x20>)
 80151c6:	f7fe fbe5 	bl	8013994 <USBD_CDC_SetTxBuffer>
  USBD_CDC_SetRxBuffer(&hUsbDeviceHS, UserRxBufferHS);
 80151ca:	4905      	ldr	r1, [pc, #20]	@ (80151e0 <CDC_Init_HS+0x24>)
 80151cc:	4803      	ldr	r0, [pc, #12]	@ (80151dc <CDC_Init_HS+0x20>)
 80151ce:	f7fe fc03 	bl	80139d8 <USBD_CDC_SetRxBuffer>
  return (USBD_OK);
 80151d2:	2300      	movs	r3, #0
  /* USER CODE END 8 */
}
 80151d4:	4618      	mov	r0, r3
 80151d6:	bd80      	pop	{r7, pc}
 80151d8:	24005024 	.word	0x24005024
 80151dc:	24004548 	.word	0x24004548
 80151e0:	24004824 	.word	0x24004824

080151e4 <CDC_DeInit_HS>:
  * @brief  DeInitializes the CDC media low layer
  * @param  None
  * @retval USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_DeInit_HS(void)
{
 80151e4:	b480      	push	{r7}
 80151e6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 9 */
  return (USBD_OK);
 80151e8:	2300      	movs	r3, #0
  /* USER CODE END 9 */
}
 80151ea:	4618      	mov	r0, r3
 80151ec:	46bd      	mov	sp, r7
 80151ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80151f2:	4770      	bx	lr

080151f4 <CDC_Control_HS>:
  * @param  pbuf: Buffer containing command data (request parameters)
  * @param  length: Number of data to be sent (in bytes)
  * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_Control_HS(uint8_t cmd, uint8_t* pbuf, uint16_t length)
{
 80151f4:	b480      	push	{r7}
 80151f6:	b083      	sub	sp, #12
 80151f8:	af00      	add	r7, sp, #0
 80151fa:	4603      	mov	r3, r0
 80151fc:	6039      	str	r1, [r7, #0]
 80151fe:	71fb      	strb	r3, [r7, #7]
 8015200:	4613      	mov	r3, r2
 8015202:	80bb      	strh	r3, [r7, #4]
  /* USER CODE BEGIN 10 */
  switch(cmd)
 8015204:	79fb      	ldrb	r3, [r7, #7]
 8015206:	2b23      	cmp	r3, #35	@ 0x23
 8015208:	d84a      	bhi.n	80152a0 <CDC_Control_HS+0xac>
 801520a:	a201      	add	r2, pc, #4	@ (adr r2, 8015210 <CDC_Control_HS+0x1c>)
 801520c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015210:	080152a1 	.word	0x080152a1
 8015214:	080152a1 	.word	0x080152a1
 8015218:	080152a1 	.word	0x080152a1
 801521c:	080152a1 	.word	0x080152a1
 8015220:	080152a1 	.word	0x080152a1
 8015224:	080152a1 	.word	0x080152a1
 8015228:	080152a1 	.word	0x080152a1
 801522c:	080152a1 	.word	0x080152a1
 8015230:	080152a1 	.word	0x080152a1
 8015234:	080152a1 	.word	0x080152a1
 8015238:	080152a1 	.word	0x080152a1
 801523c:	080152a1 	.word	0x080152a1
 8015240:	080152a1 	.word	0x080152a1
 8015244:	080152a1 	.word	0x080152a1
 8015248:	080152a1 	.word	0x080152a1
 801524c:	080152a1 	.word	0x080152a1
 8015250:	080152a1 	.word	0x080152a1
 8015254:	080152a1 	.word	0x080152a1
 8015258:	080152a1 	.word	0x080152a1
 801525c:	080152a1 	.word	0x080152a1
 8015260:	080152a1 	.word	0x080152a1
 8015264:	080152a1 	.word	0x080152a1
 8015268:	080152a1 	.word	0x080152a1
 801526c:	080152a1 	.word	0x080152a1
 8015270:	080152a1 	.word	0x080152a1
 8015274:	080152a1 	.word	0x080152a1
 8015278:	080152a1 	.word	0x080152a1
 801527c:	080152a1 	.word	0x080152a1
 8015280:	080152a1 	.word	0x080152a1
 8015284:	080152a1 	.word	0x080152a1
 8015288:	080152a1 	.word	0x080152a1
 801528c:	080152a1 	.word	0x080152a1
 8015290:	080152a1 	.word	0x080152a1
 8015294:	080152a1 	.word	0x080152a1
 8015298:	080152a1 	.word	0x080152a1
 801529c:	080152a1 	.word	0x080152a1
  case CDC_SEND_BREAK:

    break;

  default:
    break;
 80152a0:	bf00      	nop
  }

  return (USBD_OK);
 80152a2:	2300      	movs	r3, #0
  /* USER CODE END 10 */
}
 80152a4:	4618      	mov	r0, r3
 80152a6:	370c      	adds	r7, #12
 80152a8:	46bd      	mov	sp, r7
 80152aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80152ae:	4770      	bx	lr

080152b0 <CDC_Receive_HS>:
  * @param  Buf: Buffer of data to be received
  * @param  Len: Number of data received (in bytes)
  * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAILL
  */
static int8_t CDC_Receive_HS(uint8_t* Buf, uint32_t *Len)
{
 80152b0:	b580      	push	{r7, lr}
 80152b2:	b082      	sub	sp, #8
 80152b4:	af00      	add	r7, sp, #0
 80152b6:	6078      	str	r0, [r7, #4]
 80152b8:	6039      	str	r1, [r7, #0]
  /* USER CODE BEGIN 11 */
	USBD_CDC_SetRxBuffer(&hUsbDeviceHS, &Buf[0]);
 80152ba:	6879      	ldr	r1, [r7, #4]
 80152bc:	4808      	ldr	r0, [pc, #32]	@ (80152e0 <CDC_Receive_HS+0x30>)
 80152be:	f7fe fb8b 	bl	80139d8 <USBD_CDC_SetRxBuffer>
	USBD_CDC_ReceivePacket(&hUsbDeviceHS);
 80152c2:	4807      	ldr	r0, [pc, #28]	@ (80152e0 <CDC_Receive_HS+0x30>)
 80152c4:	f7fe fbe6 	bl	8013a94 <USBD_CDC_ReceivePacket>

	VibeCheckShell_PutInput(&vc.shell, (char*)Buf, *Len);
 80152c8:	683b      	ldr	r3, [r7, #0]
 80152ca:	681b      	ldr	r3, [r3, #0]
 80152cc:	461a      	mov	r2, r3
 80152ce:	6879      	ldr	r1, [r7, #4]
 80152d0:	4804      	ldr	r0, [pc, #16]	@ (80152e4 <CDC_Receive_HS+0x34>)
 80152d2:	f7ee fa4f 	bl	8003774 <VibeCheckShell_PutInput>

	return (USBD_OK);
 80152d6:	2300      	movs	r3, #0
  /* USER CODE END 11 */
}
 80152d8:	4618      	mov	r0, r3
 80152da:	3708      	adds	r7, #8
 80152dc:	46bd      	mov	sp, r7
 80152de:	bd80      	pop	{r7, pc}
 80152e0:	24004548 	.word	0x24004548
 80152e4:	24000988 	.word	0x24000988

080152e8 <CDC_Transmit_HS>:
  * @param  Buf: Buffer of data to be sent
  * @param  Len: Number of data to be sent (in bytes)
  * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL or USBD_BUSY
  */
uint8_t CDC_Transmit_HS(uint8_t* Buf, uint16_t Len)
{
 80152e8:	b580      	push	{r7, lr}
 80152ea:	b084      	sub	sp, #16
 80152ec:	af00      	add	r7, sp, #0
 80152ee:	6078      	str	r0, [r7, #4]
 80152f0:	460b      	mov	r3, r1
 80152f2:	807b      	strh	r3, [r7, #2]
  uint8_t result = USBD_OK;
 80152f4:	2300      	movs	r3, #0
 80152f6:	73fb      	strb	r3, [r7, #15]
  /* USER CODE BEGIN 12 */
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceHS.pClassData;
 80152f8:	4b0d      	ldr	r3, [pc, #52]	@ (8015330 <CDC_Transmit_HS+0x48>)
 80152fa:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 80152fe:	60bb      	str	r3, [r7, #8]
  if (hcdc->TxState != 0){
 8015300:	68bb      	ldr	r3, [r7, #8]
 8015302:	f8d3 3214 	ldr.w	r3, [r3, #532]	@ 0x214
 8015306:	2b00      	cmp	r3, #0
 8015308:	d001      	beq.n	801530e <CDC_Transmit_HS+0x26>
    return USBD_BUSY;
 801530a:	2301      	movs	r3, #1
 801530c:	e00b      	b.n	8015326 <CDC_Transmit_HS+0x3e>
  }
  USBD_CDC_SetTxBuffer(&hUsbDeviceHS, Buf, Len);
 801530e:	887b      	ldrh	r3, [r7, #2]
 8015310:	461a      	mov	r2, r3
 8015312:	6879      	ldr	r1, [r7, #4]
 8015314:	4806      	ldr	r0, [pc, #24]	@ (8015330 <CDC_Transmit_HS+0x48>)
 8015316:	f7fe fb3d 	bl	8013994 <USBD_CDC_SetTxBuffer>
  result = USBD_CDC_TransmitPacket(&hUsbDeviceHS);
 801531a:	4805      	ldr	r0, [pc, #20]	@ (8015330 <CDC_Transmit_HS+0x48>)
 801531c:	f7fe fb7a 	bl	8013a14 <USBD_CDC_TransmitPacket>
 8015320:	4603      	mov	r3, r0
 8015322:	73fb      	strb	r3, [r7, #15]
  /* USER CODE END 12 */
  return result;
 8015324:	7bfb      	ldrb	r3, [r7, #15]
}
 8015326:	4618      	mov	r0, r3
 8015328:	3710      	adds	r7, #16
 801532a:	46bd      	mov	sp, r7
 801532c:	bd80      	pop	{r7, pc}
 801532e:	bf00      	nop
 8015330:	24004548 	.word	0x24004548

08015334 <CDC_TransmitCplt_HS>:
  * @param  Buf: Buffer of data to be received
  * @param  Len: Number of data received (in bytes)
  * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CDC_TransmitCplt_HS(uint8_t *Buf, uint32_t *Len, uint8_t epnum)
{
 8015334:	b480      	push	{r7}
 8015336:	b087      	sub	sp, #28
 8015338:	af00      	add	r7, sp, #0
 801533a:	60f8      	str	r0, [r7, #12]
 801533c:	60b9      	str	r1, [r7, #8]
 801533e:	4613      	mov	r3, r2
 8015340:	71fb      	strb	r3, [r7, #7]
  uint8_t result = USBD_OK;
 8015342:	2300      	movs	r3, #0
 8015344:	75fb      	strb	r3, [r7, #23]
  /* USER CODE BEGIN 14 */
  UNUSED(Buf);
  UNUSED(Len);
  UNUSED(epnum);
  /* USER CODE END 14 */
  return result;
 8015346:	f997 3017 	ldrsb.w	r3, [r7, #23]
}
 801534a:	4618      	mov	r0, r3
 801534c:	371c      	adds	r7, #28
 801534e:	46bd      	mov	sp, r7
 8015350:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015354:	4770      	bx	lr
	...

08015358 <USBD_HS_DeviceDescriptor>:
 8015358:	b480      	push	{r7}
 801535a:	b083      	sub	sp, #12
 801535c:	af00      	add	r7, sp, #0
 801535e:	4603      	mov	r3, r0
 8015360:	6039      	str	r1, [r7, #0]
 8015362:	71fb      	strb	r3, [r7, #7]
 8015364:	683b      	ldr	r3, [r7, #0]
 8015366:	2212      	movs	r2, #18
 8015368:	801a      	strh	r2, [r3, #0]
 801536a:	4b03      	ldr	r3, [pc, #12]	@ (8015378 <USBD_HS_DeviceDescriptor+0x20>)
 801536c:	4618      	mov	r0, r3
 801536e:	370c      	adds	r7, #12
 8015370:	46bd      	mov	sp, r7
 8015372:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015376:	4770      	bx	lr
 8015378:	240000d0 	.word	0x240000d0

0801537c <USBD_HS_LangIDStrDescriptor>:
 801537c:	b480      	push	{r7}
 801537e:	b083      	sub	sp, #12
 8015380:	af00      	add	r7, sp, #0
 8015382:	4603      	mov	r3, r0
 8015384:	6039      	str	r1, [r7, #0]
 8015386:	71fb      	strb	r3, [r7, #7]
 8015388:	683b      	ldr	r3, [r7, #0]
 801538a:	2204      	movs	r2, #4
 801538c:	801a      	strh	r2, [r3, #0]
 801538e:	4b03      	ldr	r3, [pc, #12]	@ (801539c <USBD_HS_LangIDStrDescriptor+0x20>)
 8015390:	4618      	mov	r0, r3
 8015392:	370c      	adds	r7, #12
 8015394:	46bd      	mov	sp, r7
 8015396:	f85d 7b04 	ldr.w	r7, [sp], #4
 801539a:	4770      	bx	lr
 801539c:	240000e4 	.word	0x240000e4

080153a0 <USBD_HS_ProductStrDescriptor>:
 80153a0:	b580      	push	{r7, lr}
 80153a2:	b082      	sub	sp, #8
 80153a4:	af00      	add	r7, sp, #0
 80153a6:	4603      	mov	r3, r0
 80153a8:	6039      	str	r1, [r7, #0]
 80153aa:	71fb      	strb	r3, [r7, #7]
 80153ac:	79fb      	ldrb	r3, [r7, #7]
 80153ae:	2b00      	cmp	r3, #0
 80153b0:	d105      	bne.n	80153be <USBD_HS_ProductStrDescriptor+0x1e>
 80153b2:	683a      	ldr	r2, [r7, #0]
 80153b4:	4907      	ldr	r1, [pc, #28]	@ (80153d4 <USBD_HS_ProductStrDescriptor+0x34>)
 80153b6:	4808      	ldr	r0, [pc, #32]	@ (80153d8 <USBD_HS_ProductStrDescriptor+0x38>)
 80153b8:	f7ff fde2 	bl	8014f80 <USBD_GetString>
 80153bc:	e004      	b.n	80153c8 <USBD_HS_ProductStrDescriptor+0x28>
 80153be:	683a      	ldr	r2, [r7, #0]
 80153c0:	4904      	ldr	r1, [pc, #16]	@ (80153d4 <USBD_HS_ProductStrDescriptor+0x34>)
 80153c2:	4805      	ldr	r0, [pc, #20]	@ (80153d8 <USBD_HS_ProductStrDescriptor+0x38>)
 80153c4:	f7ff fddc 	bl	8014f80 <USBD_GetString>
 80153c8:	4b02      	ldr	r3, [pc, #8]	@ (80153d4 <USBD_HS_ProductStrDescriptor+0x34>)
 80153ca:	4618      	mov	r0, r3
 80153cc:	3708      	adds	r7, #8
 80153ce:	46bd      	mov	sp, r7
 80153d0:	bd80      	pop	{r7, pc}
 80153d2:	bf00      	nop
 80153d4:	24005824 	.word	0x24005824
 80153d8:	0801ab74 	.word	0x0801ab74

080153dc <USBD_HS_ManufacturerStrDescriptor>:
 80153dc:	b580      	push	{r7, lr}
 80153de:	b082      	sub	sp, #8
 80153e0:	af00      	add	r7, sp, #0
 80153e2:	4603      	mov	r3, r0
 80153e4:	6039      	str	r1, [r7, #0]
 80153e6:	71fb      	strb	r3, [r7, #7]
 80153e8:	683a      	ldr	r2, [r7, #0]
 80153ea:	4904      	ldr	r1, [pc, #16]	@ (80153fc <USBD_HS_ManufacturerStrDescriptor+0x20>)
 80153ec:	4804      	ldr	r0, [pc, #16]	@ (8015400 <USBD_HS_ManufacturerStrDescriptor+0x24>)
 80153ee:	f7ff fdc7 	bl	8014f80 <USBD_GetString>
 80153f2:	4b02      	ldr	r3, [pc, #8]	@ (80153fc <USBD_HS_ManufacturerStrDescriptor+0x20>)
 80153f4:	4618      	mov	r0, r3
 80153f6:	3708      	adds	r7, #8
 80153f8:	46bd      	mov	sp, r7
 80153fa:	bd80      	pop	{r7, pc}
 80153fc:	24005824 	.word	0x24005824
 8015400:	0801ab80 	.word	0x0801ab80

08015404 <USBD_HS_SerialStrDescriptor>:
 8015404:	b580      	push	{r7, lr}
 8015406:	b082      	sub	sp, #8
 8015408:	af00      	add	r7, sp, #0
 801540a:	4603      	mov	r3, r0
 801540c:	6039      	str	r1, [r7, #0]
 801540e:	71fb      	strb	r3, [r7, #7]
 8015410:	683b      	ldr	r3, [r7, #0]
 8015412:	221a      	movs	r2, #26
 8015414:	801a      	strh	r2, [r3, #0]
 8015416:	f000 f843 	bl	80154a0 <Get_SerialNum>
 801541a:	4b02      	ldr	r3, [pc, #8]	@ (8015424 <USBD_HS_SerialStrDescriptor+0x20>)
 801541c:	4618      	mov	r0, r3
 801541e:	3708      	adds	r7, #8
 8015420:	46bd      	mov	sp, r7
 8015422:	bd80      	pop	{r7, pc}
 8015424:	240000e8 	.word	0x240000e8

08015428 <USBD_HS_ConfigStrDescriptor>:
 8015428:	b580      	push	{r7, lr}
 801542a:	b082      	sub	sp, #8
 801542c:	af00      	add	r7, sp, #0
 801542e:	4603      	mov	r3, r0
 8015430:	6039      	str	r1, [r7, #0]
 8015432:	71fb      	strb	r3, [r7, #7]
 8015434:	79fb      	ldrb	r3, [r7, #7]
 8015436:	2b00      	cmp	r3, #0
 8015438:	d105      	bne.n	8015446 <USBD_HS_ConfigStrDescriptor+0x1e>
 801543a:	683a      	ldr	r2, [r7, #0]
 801543c:	4907      	ldr	r1, [pc, #28]	@ (801545c <USBD_HS_ConfigStrDescriptor+0x34>)
 801543e:	4808      	ldr	r0, [pc, #32]	@ (8015460 <USBD_HS_ConfigStrDescriptor+0x38>)
 8015440:	f7ff fd9e 	bl	8014f80 <USBD_GetString>
 8015444:	e004      	b.n	8015450 <USBD_HS_ConfigStrDescriptor+0x28>
 8015446:	683a      	ldr	r2, [r7, #0]
 8015448:	4904      	ldr	r1, [pc, #16]	@ (801545c <USBD_HS_ConfigStrDescriptor+0x34>)
 801544a:	4805      	ldr	r0, [pc, #20]	@ (8015460 <USBD_HS_ConfigStrDescriptor+0x38>)
 801544c:	f7ff fd98 	bl	8014f80 <USBD_GetString>
 8015450:	4b02      	ldr	r3, [pc, #8]	@ (801545c <USBD_HS_ConfigStrDescriptor+0x34>)
 8015452:	4618      	mov	r0, r3
 8015454:	3708      	adds	r7, #8
 8015456:	46bd      	mov	sp, r7
 8015458:	bd80      	pop	{r7, pc}
 801545a:	bf00      	nop
 801545c:	24005824 	.word	0x24005824
 8015460:	0801ab8c 	.word	0x0801ab8c

08015464 <USBD_HS_InterfaceStrDescriptor>:
 8015464:	b580      	push	{r7, lr}
 8015466:	b082      	sub	sp, #8
 8015468:	af00      	add	r7, sp, #0
 801546a:	4603      	mov	r3, r0
 801546c:	6039      	str	r1, [r7, #0]
 801546e:	71fb      	strb	r3, [r7, #7]
 8015470:	79fb      	ldrb	r3, [r7, #7]
 8015472:	2b00      	cmp	r3, #0
 8015474:	d105      	bne.n	8015482 <USBD_HS_InterfaceStrDescriptor+0x1e>
 8015476:	683a      	ldr	r2, [r7, #0]
 8015478:	4907      	ldr	r1, [pc, #28]	@ (8015498 <USBD_HS_InterfaceStrDescriptor+0x34>)
 801547a:	4808      	ldr	r0, [pc, #32]	@ (801549c <USBD_HS_InterfaceStrDescriptor+0x38>)
 801547c:	f7ff fd80 	bl	8014f80 <USBD_GetString>
 8015480:	e004      	b.n	801548c <USBD_HS_InterfaceStrDescriptor+0x28>
 8015482:	683a      	ldr	r2, [r7, #0]
 8015484:	4904      	ldr	r1, [pc, #16]	@ (8015498 <USBD_HS_InterfaceStrDescriptor+0x34>)
 8015486:	4805      	ldr	r0, [pc, #20]	@ (801549c <USBD_HS_InterfaceStrDescriptor+0x38>)
 8015488:	f7ff fd7a 	bl	8014f80 <USBD_GetString>
 801548c:	4b02      	ldr	r3, [pc, #8]	@ (8015498 <USBD_HS_InterfaceStrDescriptor+0x34>)
 801548e:	4618      	mov	r0, r3
 8015490:	3708      	adds	r7, #8
 8015492:	46bd      	mov	sp, r7
 8015494:	bd80      	pop	{r7, pc}
 8015496:	bf00      	nop
 8015498:	24005824 	.word	0x24005824
 801549c:	0801ab98 	.word	0x0801ab98

080154a0 <Get_SerialNum>:
 80154a0:	b580      	push	{r7, lr}
 80154a2:	b084      	sub	sp, #16
 80154a4:	af00      	add	r7, sp, #0
 80154a6:	4b0f      	ldr	r3, [pc, #60]	@ (80154e4 <Get_SerialNum+0x44>)
 80154a8:	681b      	ldr	r3, [r3, #0]
 80154aa:	60fb      	str	r3, [r7, #12]
 80154ac:	4b0e      	ldr	r3, [pc, #56]	@ (80154e8 <Get_SerialNum+0x48>)
 80154ae:	681b      	ldr	r3, [r3, #0]
 80154b0:	60bb      	str	r3, [r7, #8]
 80154b2:	4b0e      	ldr	r3, [pc, #56]	@ (80154ec <Get_SerialNum+0x4c>)
 80154b4:	681b      	ldr	r3, [r3, #0]
 80154b6:	607b      	str	r3, [r7, #4]
 80154b8:	68fa      	ldr	r2, [r7, #12]
 80154ba:	687b      	ldr	r3, [r7, #4]
 80154bc:	4413      	add	r3, r2
 80154be:	60fb      	str	r3, [r7, #12]
 80154c0:	68fb      	ldr	r3, [r7, #12]
 80154c2:	2b00      	cmp	r3, #0
 80154c4:	d009      	beq.n	80154da <Get_SerialNum+0x3a>
 80154c6:	2208      	movs	r2, #8
 80154c8:	4909      	ldr	r1, [pc, #36]	@ (80154f0 <Get_SerialNum+0x50>)
 80154ca:	68f8      	ldr	r0, [r7, #12]
 80154cc:	f000 f814 	bl	80154f8 <IntToUnicode>
 80154d0:	2204      	movs	r2, #4
 80154d2:	4908      	ldr	r1, [pc, #32]	@ (80154f4 <Get_SerialNum+0x54>)
 80154d4:	68b8      	ldr	r0, [r7, #8]
 80154d6:	f000 f80f 	bl	80154f8 <IntToUnicode>
 80154da:	bf00      	nop
 80154dc:	3710      	adds	r7, #16
 80154de:	46bd      	mov	sp, r7
 80154e0:	bd80      	pop	{r7, pc}
 80154e2:	bf00      	nop
 80154e4:	1ff1e800 	.word	0x1ff1e800
 80154e8:	1ff1e804 	.word	0x1ff1e804
 80154ec:	1ff1e808 	.word	0x1ff1e808
 80154f0:	240000ea 	.word	0x240000ea
 80154f4:	240000fa 	.word	0x240000fa

080154f8 <IntToUnicode>:
 80154f8:	b480      	push	{r7}
 80154fa:	b087      	sub	sp, #28
 80154fc:	af00      	add	r7, sp, #0
 80154fe:	60f8      	str	r0, [r7, #12]
 8015500:	60b9      	str	r1, [r7, #8]
 8015502:	4613      	mov	r3, r2
 8015504:	71fb      	strb	r3, [r7, #7]
 8015506:	2300      	movs	r3, #0
 8015508:	75fb      	strb	r3, [r7, #23]
 801550a:	2300      	movs	r3, #0
 801550c:	75fb      	strb	r3, [r7, #23]
 801550e:	e027      	b.n	8015560 <IntToUnicode+0x68>
 8015510:	68fb      	ldr	r3, [r7, #12]
 8015512:	0f1b      	lsrs	r3, r3, #28
 8015514:	2b09      	cmp	r3, #9
 8015516:	d80b      	bhi.n	8015530 <IntToUnicode+0x38>
 8015518:	68fb      	ldr	r3, [r7, #12]
 801551a:	0f1b      	lsrs	r3, r3, #28
 801551c:	b2da      	uxtb	r2, r3
 801551e:	7dfb      	ldrb	r3, [r7, #23]
 8015520:	005b      	lsls	r3, r3, #1
 8015522:	4619      	mov	r1, r3
 8015524:	68bb      	ldr	r3, [r7, #8]
 8015526:	440b      	add	r3, r1
 8015528:	3230      	adds	r2, #48	@ 0x30
 801552a:	b2d2      	uxtb	r2, r2
 801552c:	701a      	strb	r2, [r3, #0]
 801552e:	e00a      	b.n	8015546 <IntToUnicode+0x4e>
 8015530:	68fb      	ldr	r3, [r7, #12]
 8015532:	0f1b      	lsrs	r3, r3, #28
 8015534:	b2da      	uxtb	r2, r3
 8015536:	7dfb      	ldrb	r3, [r7, #23]
 8015538:	005b      	lsls	r3, r3, #1
 801553a:	4619      	mov	r1, r3
 801553c:	68bb      	ldr	r3, [r7, #8]
 801553e:	440b      	add	r3, r1
 8015540:	3237      	adds	r2, #55	@ 0x37
 8015542:	b2d2      	uxtb	r2, r2
 8015544:	701a      	strb	r2, [r3, #0]
 8015546:	68fb      	ldr	r3, [r7, #12]
 8015548:	011b      	lsls	r3, r3, #4
 801554a:	60fb      	str	r3, [r7, #12]
 801554c:	7dfb      	ldrb	r3, [r7, #23]
 801554e:	005b      	lsls	r3, r3, #1
 8015550:	3301      	adds	r3, #1
 8015552:	68ba      	ldr	r2, [r7, #8]
 8015554:	4413      	add	r3, r2
 8015556:	2200      	movs	r2, #0
 8015558:	701a      	strb	r2, [r3, #0]
 801555a:	7dfb      	ldrb	r3, [r7, #23]
 801555c:	3301      	adds	r3, #1
 801555e:	75fb      	strb	r3, [r7, #23]
 8015560:	7dfa      	ldrb	r2, [r7, #23]
 8015562:	79fb      	ldrb	r3, [r7, #7]
 8015564:	429a      	cmp	r2, r3
 8015566:	d3d3      	bcc.n	8015510 <IntToUnicode+0x18>
 8015568:	bf00      	nop
 801556a:	bf00      	nop
 801556c:	371c      	adds	r7, #28
 801556e:	46bd      	mov	sp, r7
 8015570:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015574:	4770      	bx	lr
	...

08015578 <HAL_PCD_MspInit>:
 8015578:	b580      	push	{r7, lr}
 801557a:	b0b2      	sub	sp, #200	@ 0xc8
 801557c:	af00      	add	r7, sp, #0
 801557e:	6078      	str	r0, [r7, #4]
 8015580:	f107 0310 	add.w	r3, r7, #16
 8015584:	22b8      	movs	r2, #184	@ 0xb8
 8015586:	2100      	movs	r1, #0
 8015588:	4618      	mov	r0, r3
 801558a:	f001 fea6 	bl	80172da <memset>
 801558e:	687b      	ldr	r3, [r7, #4]
 8015590:	681b      	ldr	r3, [r3, #0]
 8015592:	4a1a      	ldr	r2, [pc, #104]	@ (80155fc <HAL_PCD_MspInit+0x84>)
 8015594:	4293      	cmp	r3, r2
 8015596:	d12c      	bne.n	80155f2 <HAL_PCD_MspInit+0x7a>
 8015598:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 801559c:	f04f 0300 	mov.w	r3, #0
 80155a0:	e9c7 2304 	strd	r2, r3, [r7, #16]
 80155a4:	f44f 1340 	mov.w	r3, #3145728	@ 0x300000
 80155a8:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80155ac:	f107 0310 	add.w	r3, r7, #16
 80155b0:	4618      	mov	r0, r3
 80155b2:	f7f6 fcb1 	bl	800bf18 <HAL_RCCEx_PeriphCLKConfig>
 80155b6:	4603      	mov	r3, r0
 80155b8:	2b00      	cmp	r3, #0
 80155ba:	d001      	beq.n	80155c0 <HAL_PCD_MspInit+0x48>
 80155bc:	f7ec f998 	bl	80018f0 <Error_Handler>
 80155c0:	f7f5 fd34 	bl	800b02c <HAL_PWREx_EnableUSBVoltageDetector>
 80155c4:	4b0e      	ldr	r3, [pc, #56]	@ (8015600 <HAL_PCD_MspInit+0x88>)
 80155c6:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 80155ca:	4a0d      	ldr	r2, [pc, #52]	@ (8015600 <HAL_PCD_MspInit+0x88>)
 80155cc:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80155d0:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 80155d4:	4b0a      	ldr	r3, [pc, #40]	@ (8015600 <HAL_PCD_MspInit+0x88>)
 80155d6:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 80155da:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80155de:	60fb      	str	r3, [r7, #12]
 80155e0:	68fb      	ldr	r3, [r7, #12]
 80155e2:	2200      	movs	r2, #0
 80155e4:	2100      	movs	r1, #0
 80155e6:	204d      	movs	r0, #77	@ 0x4d
 80155e8:	f7f1 fb01 	bl	8006bee <HAL_NVIC_SetPriority>
 80155ec:	204d      	movs	r0, #77	@ 0x4d
 80155ee:	f7f1 fb18 	bl	8006c22 <HAL_NVIC_EnableIRQ>
 80155f2:	bf00      	nop
 80155f4:	37c8      	adds	r7, #200	@ 0xc8
 80155f6:	46bd      	mov	sp, r7
 80155f8:	bd80      	pop	{r7, pc}
 80155fa:	bf00      	nop
 80155fc:	40040000 	.word	0x40040000
 8015600:	58024400 	.word	0x58024400

08015604 <HAL_PCD_SetupStageCallback>:
 8015604:	b580      	push	{r7, lr}
 8015606:	b082      	sub	sp, #8
 8015608:	af00      	add	r7, sp, #0
 801560a:	6078      	str	r0, [r7, #4]
 801560c:	687b      	ldr	r3, [r7, #4]
 801560e:	f8d3 24e0 	ldr.w	r2, [r3, #1248]	@ 0x4e0
 8015612:	687b      	ldr	r3, [r7, #4]
 8015614:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 8015618:	4619      	mov	r1, r3
 801561a:	4610      	mov	r0, r2
 801561c:	f7fe fb23 	bl	8013c66 <USBD_LL_SetupStage>
 8015620:	bf00      	nop
 8015622:	3708      	adds	r7, #8
 8015624:	46bd      	mov	sp, r7
 8015626:	bd80      	pop	{r7, pc}

08015628 <HAL_PCD_DataOutStageCallback>:
 8015628:	b580      	push	{r7, lr}
 801562a:	b082      	sub	sp, #8
 801562c:	af00      	add	r7, sp, #0
 801562e:	6078      	str	r0, [r7, #4]
 8015630:	460b      	mov	r3, r1
 8015632:	70fb      	strb	r3, [r7, #3]
 8015634:	687b      	ldr	r3, [r7, #4]
 8015636:	f8d3 04e0 	ldr.w	r0, [r3, #1248]	@ 0x4e0
 801563a:	78fa      	ldrb	r2, [r7, #3]
 801563c:	6879      	ldr	r1, [r7, #4]
 801563e:	4613      	mov	r3, r2
 8015640:	00db      	lsls	r3, r3, #3
 8015642:	4413      	add	r3, r2
 8015644:	009b      	lsls	r3, r3, #2
 8015646:	440b      	add	r3, r1
 8015648:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 801564c:	681a      	ldr	r2, [r3, #0]
 801564e:	78fb      	ldrb	r3, [r7, #3]
 8015650:	4619      	mov	r1, r3
 8015652:	f7fe fb5d 	bl	8013d10 <USBD_LL_DataOutStage>
 8015656:	bf00      	nop
 8015658:	3708      	adds	r7, #8
 801565a:	46bd      	mov	sp, r7
 801565c:	bd80      	pop	{r7, pc}

0801565e <HAL_PCD_DataInStageCallback>:
 801565e:	b580      	push	{r7, lr}
 8015660:	b082      	sub	sp, #8
 8015662:	af00      	add	r7, sp, #0
 8015664:	6078      	str	r0, [r7, #4]
 8015666:	460b      	mov	r3, r1
 8015668:	70fb      	strb	r3, [r7, #3]
 801566a:	687b      	ldr	r3, [r7, #4]
 801566c:	f8d3 04e0 	ldr.w	r0, [r3, #1248]	@ 0x4e0
 8015670:	78fa      	ldrb	r2, [r7, #3]
 8015672:	6879      	ldr	r1, [r7, #4]
 8015674:	4613      	mov	r3, r2
 8015676:	00db      	lsls	r3, r3, #3
 8015678:	4413      	add	r3, r2
 801567a:	009b      	lsls	r3, r3, #2
 801567c:	440b      	add	r3, r1
 801567e:	3320      	adds	r3, #32
 8015680:	681a      	ldr	r2, [r3, #0]
 8015682:	78fb      	ldrb	r3, [r7, #3]
 8015684:	4619      	mov	r1, r3
 8015686:	f7fe fbf6 	bl	8013e76 <USBD_LL_DataInStage>
 801568a:	bf00      	nop
 801568c:	3708      	adds	r7, #8
 801568e:	46bd      	mov	sp, r7
 8015690:	bd80      	pop	{r7, pc}

08015692 <HAL_PCD_SOFCallback>:
 8015692:	b580      	push	{r7, lr}
 8015694:	b082      	sub	sp, #8
 8015696:	af00      	add	r7, sp, #0
 8015698:	6078      	str	r0, [r7, #4]
 801569a:	687b      	ldr	r3, [r7, #4]
 801569c:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 80156a0:	4618      	mov	r0, r3
 80156a2:	f7fe fd30 	bl	8014106 <USBD_LL_SOF>
 80156a6:	bf00      	nop
 80156a8:	3708      	adds	r7, #8
 80156aa:	46bd      	mov	sp, r7
 80156ac:	bd80      	pop	{r7, pc}

080156ae <HAL_PCD_ResetCallback>:
 80156ae:	b580      	push	{r7, lr}
 80156b0:	b084      	sub	sp, #16
 80156b2:	af00      	add	r7, sp, #0
 80156b4:	6078      	str	r0, [r7, #4]
 80156b6:	2301      	movs	r3, #1
 80156b8:	73fb      	strb	r3, [r7, #15]
 80156ba:	687b      	ldr	r3, [r7, #4]
 80156bc:	79db      	ldrb	r3, [r3, #7]
 80156be:	2b00      	cmp	r3, #0
 80156c0:	d102      	bne.n	80156c8 <HAL_PCD_ResetCallback+0x1a>
 80156c2:	2300      	movs	r3, #0
 80156c4:	73fb      	strb	r3, [r7, #15]
 80156c6:	e008      	b.n	80156da <HAL_PCD_ResetCallback+0x2c>
 80156c8:	687b      	ldr	r3, [r7, #4]
 80156ca:	79db      	ldrb	r3, [r3, #7]
 80156cc:	2b02      	cmp	r3, #2
 80156ce:	d102      	bne.n	80156d6 <HAL_PCD_ResetCallback+0x28>
 80156d0:	2301      	movs	r3, #1
 80156d2:	73fb      	strb	r3, [r7, #15]
 80156d4:	e001      	b.n	80156da <HAL_PCD_ResetCallback+0x2c>
 80156d6:	f7ec f90b 	bl	80018f0 <Error_Handler>
 80156da:	687b      	ldr	r3, [r7, #4]
 80156dc:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 80156e0:	7bfa      	ldrb	r2, [r7, #15]
 80156e2:	4611      	mov	r1, r2
 80156e4:	4618      	mov	r0, r3
 80156e6:	f7fe fcca 	bl	801407e <USBD_LL_SetSpeed>
 80156ea:	687b      	ldr	r3, [r7, #4]
 80156ec:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 80156f0:	4618      	mov	r0, r3
 80156f2:	f7fe fc72 	bl	8013fda <USBD_LL_Reset>
 80156f6:	bf00      	nop
 80156f8:	3710      	adds	r7, #16
 80156fa:	46bd      	mov	sp, r7
 80156fc:	bd80      	pop	{r7, pc}
	...

08015700 <HAL_PCD_SuspendCallback>:
 8015700:	b580      	push	{r7, lr}
 8015702:	b082      	sub	sp, #8
 8015704:	af00      	add	r7, sp, #0
 8015706:	6078      	str	r0, [r7, #4]
 8015708:	687b      	ldr	r3, [r7, #4]
 801570a:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 801570e:	4618      	mov	r0, r3
 8015710:	f7fe fcc5 	bl	801409e <USBD_LL_Suspend>
 8015714:	687b      	ldr	r3, [r7, #4]
 8015716:	681b      	ldr	r3, [r3, #0]
 8015718:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 801571c:	681b      	ldr	r3, [r3, #0]
 801571e:	687a      	ldr	r2, [r7, #4]
 8015720:	6812      	ldr	r2, [r2, #0]
 8015722:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 8015726:	f043 0301 	orr.w	r3, r3, #1
 801572a:	6013      	str	r3, [r2, #0]
 801572c:	687b      	ldr	r3, [r7, #4]
 801572e:	7adb      	ldrb	r3, [r3, #11]
 8015730:	2b00      	cmp	r3, #0
 8015732:	d005      	beq.n	8015740 <HAL_PCD_SuspendCallback+0x40>
 8015734:	4b04      	ldr	r3, [pc, #16]	@ (8015748 <HAL_PCD_SuspendCallback+0x48>)
 8015736:	691b      	ldr	r3, [r3, #16]
 8015738:	4a03      	ldr	r2, [pc, #12]	@ (8015748 <HAL_PCD_SuspendCallback+0x48>)
 801573a:	f043 0306 	orr.w	r3, r3, #6
 801573e:	6113      	str	r3, [r2, #16]
 8015740:	bf00      	nop
 8015742:	3708      	adds	r7, #8
 8015744:	46bd      	mov	sp, r7
 8015746:	bd80      	pop	{r7, pc}
 8015748:	e000ed00 	.word	0xe000ed00

0801574c <HAL_PCD_ResumeCallback>:
 801574c:	b580      	push	{r7, lr}
 801574e:	b082      	sub	sp, #8
 8015750:	af00      	add	r7, sp, #0
 8015752:	6078      	str	r0, [r7, #4]
 8015754:	687b      	ldr	r3, [r7, #4]
 8015756:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 801575a:	4618      	mov	r0, r3
 801575c:	f7fe fcbb 	bl	80140d6 <USBD_LL_Resume>
 8015760:	bf00      	nop
 8015762:	3708      	adds	r7, #8
 8015764:	46bd      	mov	sp, r7
 8015766:	bd80      	pop	{r7, pc}

08015768 <HAL_PCD_ISOOUTIncompleteCallback>:
 8015768:	b580      	push	{r7, lr}
 801576a:	b082      	sub	sp, #8
 801576c:	af00      	add	r7, sp, #0
 801576e:	6078      	str	r0, [r7, #4]
 8015770:	460b      	mov	r3, r1
 8015772:	70fb      	strb	r3, [r7, #3]
 8015774:	687b      	ldr	r3, [r7, #4]
 8015776:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 801577a:	78fa      	ldrb	r2, [r7, #3]
 801577c:	4611      	mov	r1, r2
 801577e:	4618      	mov	r0, r3
 8015780:	f7fe fd13 	bl	80141aa <USBD_LL_IsoOUTIncomplete>
 8015784:	bf00      	nop
 8015786:	3708      	adds	r7, #8
 8015788:	46bd      	mov	sp, r7
 801578a:	bd80      	pop	{r7, pc}

0801578c <HAL_PCD_ISOINIncompleteCallback>:
 801578c:	b580      	push	{r7, lr}
 801578e:	b082      	sub	sp, #8
 8015790:	af00      	add	r7, sp, #0
 8015792:	6078      	str	r0, [r7, #4]
 8015794:	460b      	mov	r3, r1
 8015796:	70fb      	strb	r3, [r7, #3]
 8015798:	687b      	ldr	r3, [r7, #4]
 801579a:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 801579e:	78fa      	ldrb	r2, [r7, #3]
 80157a0:	4611      	mov	r1, r2
 80157a2:	4618      	mov	r0, r3
 80157a4:	f7fe fccf 	bl	8014146 <USBD_LL_IsoINIncomplete>
 80157a8:	bf00      	nop
 80157aa:	3708      	adds	r7, #8
 80157ac:	46bd      	mov	sp, r7
 80157ae:	bd80      	pop	{r7, pc}

080157b0 <HAL_PCD_ConnectCallback>:
 80157b0:	b580      	push	{r7, lr}
 80157b2:	b082      	sub	sp, #8
 80157b4:	af00      	add	r7, sp, #0
 80157b6:	6078      	str	r0, [r7, #4]
 80157b8:	687b      	ldr	r3, [r7, #4]
 80157ba:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 80157be:	4618      	mov	r0, r3
 80157c0:	f7fe fd25 	bl	801420e <USBD_LL_DevConnected>
 80157c4:	bf00      	nop
 80157c6:	3708      	adds	r7, #8
 80157c8:	46bd      	mov	sp, r7
 80157ca:	bd80      	pop	{r7, pc}

080157cc <HAL_PCD_DisconnectCallback>:
 80157cc:	b580      	push	{r7, lr}
 80157ce:	b082      	sub	sp, #8
 80157d0:	af00      	add	r7, sp, #0
 80157d2:	6078      	str	r0, [r7, #4]
 80157d4:	687b      	ldr	r3, [r7, #4]
 80157d6:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 80157da:	4618      	mov	r0, r3
 80157dc:	f7fe fd22 	bl	8014224 <USBD_LL_DevDisconnected>
 80157e0:	bf00      	nop
 80157e2:	3708      	adds	r7, #8
 80157e4:	46bd      	mov	sp, r7
 80157e6:	bd80      	pop	{r7, pc}

080157e8 <USBD_LL_Init>:
 80157e8:	b580      	push	{r7, lr}
 80157ea:	b082      	sub	sp, #8
 80157ec:	af00      	add	r7, sp, #0
 80157ee:	6078      	str	r0, [r7, #4]
 80157f0:	687b      	ldr	r3, [r7, #4]
 80157f2:	781b      	ldrb	r3, [r3, #0]
 80157f4:	2b01      	cmp	r3, #1
 80157f6:	d140      	bne.n	801587a <USBD_LL_Init+0x92>
 80157f8:	4a22      	ldr	r2, [pc, #136]	@ (8015884 <USBD_LL_Init+0x9c>)
 80157fa:	687b      	ldr	r3, [r7, #4]
 80157fc:	f8c2 34e0 	str.w	r3, [r2, #1248]	@ 0x4e0
 8015800:	687b      	ldr	r3, [r7, #4]
 8015802:	4a20      	ldr	r2, [pc, #128]	@ (8015884 <USBD_LL_Init+0x9c>)
 8015804:	f8c3 22c8 	str.w	r2, [r3, #712]	@ 0x2c8
 8015808:	4b1e      	ldr	r3, [pc, #120]	@ (8015884 <USBD_LL_Init+0x9c>)
 801580a:	4a1f      	ldr	r2, [pc, #124]	@ (8015888 <USBD_LL_Init+0xa0>)
 801580c:	601a      	str	r2, [r3, #0]
 801580e:	4b1d      	ldr	r3, [pc, #116]	@ (8015884 <USBD_LL_Init+0x9c>)
 8015810:	2209      	movs	r2, #9
 8015812:	711a      	strb	r2, [r3, #4]
 8015814:	4b1b      	ldr	r3, [pc, #108]	@ (8015884 <USBD_LL_Init+0x9c>)
 8015816:	2202      	movs	r2, #2
 8015818:	71da      	strb	r2, [r3, #7]
 801581a:	4b1a      	ldr	r3, [pc, #104]	@ (8015884 <USBD_LL_Init+0x9c>)
 801581c:	2200      	movs	r2, #0
 801581e:	719a      	strb	r2, [r3, #6]
 8015820:	4b18      	ldr	r3, [pc, #96]	@ (8015884 <USBD_LL_Init+0x9c>)
 8015822:	2202      	movs	r2, #2
 8015824:	725a      	strb	r2, [r3, #9]
 8015826:	4b17      	ldr	r3, [pc, #92]	@ (8015884 <USBD_LL_Init+0x9c>)
 8015828:	2200      	movs	r2, #0
 801582a:	729a      	strb	r2, [r3, #10]
 801582c:	4b15      	ldr	r3, [pc, #84]	@ (8015884 <USBD_LL_Init+0x9c>)
 801582e:	2200      	movs	r2, #0
 8015830:	72da      	strb	r2, [r3, #11]
 8015832:	4b14      	ldr	r3, [pc, #80]	@ (8015884 <USBD_LL_Init+0x9c>)
 8015834:	2200      	movs	r2, #0
 8015836:	731a      	strb	r2, [r3, #12]
 8015838:	4b12      	ldr	r3, [pc, #72]	@ (8015884 <USBD_LL_Init+0x9c>)
 801583a:	2200      	movs	r2, #0
 801583c:	739a      	strb	r2, [r3, #14]
 801583e:	4b11      	ldr	r3, [pc, #68]	@ (8015884 <USBD_LL_Init+0x9c>)
 8015840:	2200      	movs	r2, #0
 8015842:	73da      	strb	r2, [r3, #15]
 8015844:	4b0f      	ldr	r3, [pc, #60]	@ (8015884 <USBD_LL_Init+0x9c>)
 8015846:	2200      	movs	r2, #0
 8015848:	741a      	strb	r2, [r3, #16]
 801584a:	480e      	ldr	r0, [pc, #56]	@ (8015884 <USBD_LL_Init+0x9c>)
 801584c:	f7f4 f915 	bl	8009a7a <HAL_PCD_Init>
 8015850:	4603      	mov	r3, r0
 8015852:	2b00      	cmp	r3, #0
 8015854:	d001      	beq.n	801585a <USBD_LL_Init+0x72>
 8015856:	f7ec f84b 	bl	80018f0 <Error_Handler>
 801585a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 801585e:	4809      	ldr	r0, [pc, #36]	@ (8015884 <USBD_LL_Init+0x9c>)
 8015860:	f7f5 fb69 	bl	800af36 <HAL_PCDEx_SetRxFiFo>
 8015864:	2280      	movs	r2, #128	@ 0x80
 8015866:	2100      	movs	r1, #0
 8015868:	4806      	ldr	r0, [pc, #24]	@ (8015884 <USBD_LL_Init+0x9c>)
 801586a:	f7f5 fb1d 	bl	800aea8 <HAL_PCDEx_SetTxFiFo>
 801586e:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 8015872:	2101      	movs	r1, #1
 8015874:	4803      	ldr	r0, [pc, #12]	@ (8015884 <USBD_LL_Init+0x9c>)
 8015876:	f7f5 fb17 	bl	800aea8 <HAL_PCDEx_SetTxFiFo>
 801587a:	2300      	movs	r3, #0
 801587c:	4618      	mov	r0, r3
 801587e:	3708      	adds	r7, #8
 8015880:	46bd      	mov	sp, r7
 8015882:	bd80      	pop	{r7, pc}
 8015884:	24005a24 	.word	0x24005a24
 8015888:	40040000 	.word	0x40040000

0801588c <USBD_LL_Start>:
 801588c:	b580      	push	{r7, lr}
 801588e:	b084      	sub	sp, #16
 8015890:	af00      	add	r7, sp, #0
 8015892:	6078      	str	r0, [r7, #4]
 8015894:	2300      	movs	r3, #0
 8015896:	73fb      	strb	r3, [r7, #15]
 8015898:	2300      	movs	r3, #0
 801589a:	73bb      	strb	r3, [r7, #14]
 801589c:	687b      	ldr	r3, [r7, #4]
 801589e:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 80158a2:	4618      	mov	r0, r3
 80158a4:	f7f4 f9f5 	bl	8009c92 <HAL_PCD_Start>
 80158a8:	4603      	mov	r3, r0
 80158aa:	73fb      	strb	r3, [r7, #15]
 80158ac:	7bfb      	ldrb	r3, [r7, #15]
 80158ae:	4618      	mov	r0, r3
 80158b0:	f000 f942 	bl	8015b38 <USBD_Get_USB_Status>
 80158b4:	4603      	mov	r3, r0
 80158b6:	73bb      	strb	r3, [r7, #14]
 80158b8:	7bbb      	ldrb	r3, [r7, #14]
 80158ba:	4618      	mov	r0, r3
 80158bc:	3710      	adds	r7, #16
 80158be:	46bd      	mov	sp, r7
 80158c0:	bd80      	pop	{r7, pc}

080158c2 <USBD_LL_OpenEP>:
 80158c2:	b580      	push	{r7, lr}
 80158c4:	b084      	sub	sp, #16
 80158c6:	af00      	add	r7, sp, #0
 80158c8:	6078      	str	r0, [r7, #4]
 80158ca:	4608      	mov	r0, r1
 80158cc:	4611      	mov	r1, r2
 80158ce:	461a      	mov	r2, r3
 80158d0:	4603      	mov	r3, r0
 80158d2:	70fb      	strb	r3, [r7, #3]
 80158d4:	460b      	mov	r3, r1
 80158d6:	70bb      	strb	r3, [r7, #2]
 80158d8:	4613      	mov	r3, r2
 80158da:	803b      	strh	r3, [r7, #0]
 80158dc:	2300      	movs	r3, #0
 80158de:	73fb      	strb	r3, [r7, #15]
 80158e0:	2300      	movs	r3, #0
 80158e2:	73bb      	strb	r3, [r7, #14]
 80158e4:	687b      	ldr	r3, [r7, #4]
 80158e6:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 80158ea:	78bb      	ldrb	r3, [r7, #2]
 80158ec:	883a      	ldrh	r2, [r7, #0]
 80158ee:	78f9      	ldrb	r1, [r7, #3]
 80158f0:	f7f4 fef6 	bl	800a6e0 <HAL_PCD_EP_Open>
 80158f4:	4603      	mov	r3, r0
 80158f6:	73fb      	strb	r3, [r7, #15]
 80158f8:	7bfb      	ldrb	r3, [r7, #15]
 80158fa:	4618      	mov	r0, r3
 80158fc:	f000 f91c 	bl	8015b38 <USBD_Get_USB_Status>
 8015900:	4603      	mov	r3, r0
 8015902:	73bb      	strb	r3, [r7, #14]
 8015904:	7bbb      	ldrb	r3, [r7, #14]
 8015906:	4618      	mov	r0, r3
 8015908:	3710      	adds	r7, #16
 801590a:	46bd      	mov	sp, r7
 801590c:	bd80      	pop	{r7, pc}

0801590e <USBD_LL_CloseEP>:
 801590e:	b580      	push	{r7, lr}
 8015910:	b084      	sub	sp, #16
 8015912:	af00      	add	r7, sp, #0
 8015914:	6078      	str	r0, [r7, #4]
 8015916:	460b      	mov	r3, r1
 8015918:	70fb      	strb	r3, [r7, #3]
 801591a:	2300      	movs	r3, #0
 801591c:	73fb      	strb	r3, [r7, #15]
 801591e:	2300      	movs	r3, #0
 8015920:	73bb      	strb	r3, [r7, #14]
 8015922:	687b      	ldr	r3, [r7, #4]
 8015924:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 8015928:	78fa      	ldrb	r2, [r7, #3]
 801592a:	4611      	mov	r1, r2
 801592c:	4618      	mov	r0, r3
 801592e:	f7f4 ff3f 	bl	800a7b0 <HAL_PCD_EP_Close>
 8015932:	4603      	mov	r3, r0
 8015934:	73fb      	strb	r3, [r7, #15]
 8015936:	7bfb      	ldrb	r3, [r7, #15]
 8015938:	4618      	mov	r0, r3
 801593a:	f000 f8fd 	bl	8015b38 <USBD_Get_USB_Status>
 801593e:	4603      	mov	r3, r0
 8015940:	73bb      	strb	r3, [r7, #14]
 8015942:	7bbb      	ldrb	r3, [r7, #14]
 8015944:	4618      	mov	r0, r3
 8015946:	3710      	adds	r7, #16
 8015948:	46bd      	mov	sp, r7
 801594a:	bd80      	pop	{r7, pc}

0801594c <USBD_LL_StallEP>:
 801594c:	b580      	push	{r7, lr}
 801594e:	b084      	sub	sp, #16
 8015950:	af00      	add	r7, sp, #0
 8015952:	6078      	str	r0, [r7, #4]
 8015954:	460b      	mov	r3, r1
 8015956:	70fb      	strb	r3, [r7, #3]
 8015958:	2300      	movs	r3, #0
 801595a:	73fb      	strb	r3, [r7, #15]
 801595c:	2300      	movs	r3, #0
 801595e:	73bb      	strb	r3, [r7, #14]
 8015960:	687b      	ldr	r3, [r7, #4]
 8015962:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 8015966:	78fa      	ldrb	r2, [r7, #3]
 8015968:	4611      	mov	r1, r2
 801596a:	4618      	mov	r0, r3
 801596c:	f7f4 fff7 	bl	800a95e <HAL_PCD_EP_SetStall>
 8015970:	4603      	mov	r3, r0
 8015972:	73fb      	strb	r3, [r7, #15]
 8015974:	7bfb      	ldrb	r3, [r7, #15]
 8015976:	4618      	mov	r0, r3
 8015978:	f000 f8de 	bl	8015b38 <USBD_Get_USB_Status>
 801597c:	4603      	mov	r3, r0
 801597e:	73bb      	strb	r3, [r7, #14]
 8015980:	7bbb      	ldrb	r3, [r7, #14]
 8015982:	4618      	mov	r0, r3
 8015984:	3710      	adds	r7, #16
 8015986:	46bd      	mov	sp, r7
 8015988:	bd80      	pop	{r7, pc}

0801598a <USBD_LL_ClearStallEP>:
 801598a:	b580      	push	{r7, lr}
 801598c:	b084      	sub	sp, #16
 801598e:	af00      	add	r7, sp, #0
 8015990:	6078      	str	r0, [r7, #4]
 8015992:	460b      	mov	r3, r1
 8015994:	70fb      	strb	r3, [r7, #3]
 8015996:	2300      	movs	r3, #0
 8015998:	73fb      	strb	r3, [r7, #15]
 801599a:	2300      	movs	r3, #0
 801599c:	73bb      	strb	r3, [r7, #14]
 801599e:	687b      	ldr	r3, [r7, #4]
 80159a0:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 80159a4:	78fa      	ldrb	r2, [r7, #3]
 80159a6:	4611      	mov	r1, r2
 80159a8:	4618      	mov	r0, r3
 80159aa:	f7f5 f83b 	bl	800aa24 <HAL_PCD_EP_ClrStall>
 80159ae:	4603      	mov	r3, r0
 80159b0:	73fb      	strb	r3, [r7, #15]
 80159b2:	7bfb      	ldrb	r3, [r7, #15]
 80159b4:	4618      	mov	r0, r3
 80159b6:	f000 f8bf 	bl	8015b38 <USBD_Get_USB_Status>
 80159ba:	4603      	mov	r3, r0
 80159bc:	73bb      	strb	r3, [r7, #14]
 80159be:	7bbb      	ldrb	r3, [r7, #14]
 80159c0:	4618      	mov	r0, r3
 80159c2:	3710      	adds	r7, #16
 80159c4:	46bd      	mov	sp, r7
 80159c6:	bd80      	pop	{r7, pc}

080159c8 <USBD_LL_IsStallEP>:
 80159c8:	b480      	push	{r7}
 80159ca:	b085      	sub	sp, #20
 80159cc:	af00      	add	r7, sp, #0
 80159ce:	6078      	str	r0, [r7, #4]
 80159d0:	460b      	mov	r3, r1
 80159d2:	70fb      	strb	r3, [r7, #3]
 80159d4:	687b      	ldr	r3, [r7, #4]
 80159d6:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 80159da:	60fb      	str	r3, [r7, #12]
 80159dc:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80159e0:	2b00      	cmp	r3, #0
 80159e2:	da0b      	bge.n	80159fc <USBD_LL_IsStallEP+0x34>
 80159e4:	78fb      	ldrb	r3, [r7, #3]
 80159e6:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80159ea:	68f9      	ldr	r1, [r7, #12]
 80159ec:	4613      	mov	r3, r2
 80159ee:	00db      	lsls	r3, r3, #3
 80159f0:	4413      	add	r3, r2
 80159f2:	009b      	lsls	r3, r3, #2
 80159f4:	440b      	add	r3, r1
 80159f6:	3316      	adds	r3, #22
 80159f8:	781b      	ldrb	r3, [r3, #0]
 80159fa:	e00b      	b.n	8015a14 <USBD_LL_IsStallEP+0x4c>
 80159fc:	78fb      	ldrb	r3, [r7, #3]
 80159fe:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8015a02:	68f9      	ldr	r1, [r7, #12]
 8015a04:	4613      	mov	r3, r2
 8015a06:	00db      	lsls	r3, r3, #3
 8015a08:	4413      	add	r3, r2
 8015a0a:	009b      	lsls	r3, r3, #2
 8015a0c:	440b      	add	r3, r1
 8015a0e:	f203 2356 	addw	r3, r3, #598	@ 0x256
 8015a12:	781b      	ldrb	r3, [r3, #0]
 8015a14:	4618      	mov	r0, r3
 8015a16:	3714      	adds	r7, #20
 8015a18:	46bd      	mov	sp, r7
 8015a1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015a1e:	4770      	bx	lr

08015a20 <USBD_LL_SetUSBAddress>:
 8015a20:	b580      	push	{r7, lr}
 8015a22:	b084      	sub	sp, #16
 8015a24:	af00      	add	r7, sp, #0
 8015a26:	6078      	str	r0, [r7, #4]
 8015a28:	460b      	mov	r3, r1
 8015a2a:	70fb      	strb	r3, [r7, #3]
 8015a2c:	2300      	movs	r3, #0
 8015a2e:	73fb      	strb	r3, [r7, #15]
 8015a30:	2300      	movs	r3, #0
 8015a32:	73bb      	strb	r3, [r7, #14]
 8015a34:	687b      	ldr	r3, [r7, #4]
 8015a36:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 8015a3a:	78fa      	ldrb	r2, [r7, #3]
 8015a3c:	4611      	mov	r1, r2
 8015a3e:	4618      	mov	r0, r3
 8015a40:	f7f4 fe2a 	bl	800a698 <HAL_PCD_SetAddress>
 8015a44:	4603      	mov	r3, r0
 8015a46:	73fb      	strb	r3, [r7, #15]
 8015a48:	7bfb      	ldrb	r3, [r7, #15]
 8015a4a:	4618      	mov	r0, r3
 8015a4c:	f000 f874 	bl	8015b38 <USBD_Get_USB_Status>
 8015a50:	4603      	mov	r3, r0
 8015a52:	73bb      	strb	r3, [r7, #14]
 8015a54:	7bbb      	ldrb	r3, [r7, #14]
 8015a56:	4618      	mov	r0, r3
 8015a58:	3710      	adds	r7, #16
 8015a5a:	46bd      	mov	sp, r7
 8015a5c:	bd80      	pop	{r7, pc}

08015a5e <USBD_LL_Transmit>:
 8015a5e:	b580      	push	{r7, lr}
 8015a60:	b086      	sub	sp, #24
 8015a62:	af00      	add	r7, sp, #0
 8015a64:	60f8      	str	r0, [r7, #12]
 8015a66:	607a      	str	r2, [r7, #4]
 8015a68:	603b      	str	r3, [r7, #0]
 8015a6a:	460b      	mov	r3, r1
 8015a6c:	72fb      	strb	r3, [r7, #11]
 8015a6e:	2300      	movs	r3, #0
 8015a70:	75fb      	strb	r3, [r7, #23]
 8015a72:	2300      	movs	r3, #0
 8015a74:	75bb      	strb	r3, [r7, #22]
 8015a76:	68fb      	ldr	r3, [r7, #12]
 8015a78:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 8015a7c:	7af9      	ldrb	r1, [r7, #11]
 8015a7e:	683b      	ldr	r3, [r7, #0]
 8015a80:	687a      	ldr	r2, [r7, #4]
 8015a82:	f7f4 ff32 	bl	800a8ea <HAL_PCD_EP_Transmit>
 8015a86:	4603      	mov	r3, r0
 8015a88:	75fb      	strb	r3, [r7, #23]
 8015a8a:	7dfb      	ldrb	r3, [r7, #23]
 8015a8c:	4618      	mov	r0, r3
 8015a8e:	f000 f853 	bl	8015b38 <USBD_Get_USB_Status>
 8015a92:	4603      	mov	r3, r0
 8015a94:	75bb      	strb	r3, [r7, #22]
 8015a96:	7dbb      	ldrb	r3, [r7, #22]
 8015a98:	4618      	mov	r0, r3
 8015a9a:	3718      	adds	r7, #24
 8015a9c:	46bd      	mov	sp, r7
 8015a9e:	bd80      	pop	{r7, pc}

08015aa0 <USBD_LL_PrepareReceive>:
 8015aa0:	b580      	push	{r7, lr}
 8015aa2:	b086      	sub	sp, #24
 8015aa4:	af00      	add	r7, sp, #0
 8015aa6:	60f8      	str	r0, [r7, #12]
 8015aa8:	607a      	str	r2, [r7, #4]
 8015aaa:	603b      	str	r3, [r7, #0]
 8015aac:	460b      	mov	r3, r1
 8015aae:	72fb      	strb	r3, [r7, #11]
 8015ab0:	2300      	movs	r3, #0
 8015ab2:	75fb      	strb	r3, [r7, #23]
 8015ab4:	2300      	movs	r3, #0
 8015ab6:	75bb      	strb	r3, [r7, #22]
 8015ab8:	68fb      	ldr	r3, [r7, #12]
 8015aba:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 8015abe:	7af9      	ldrb	r1, [r7, #11]
 8015ac0:	683b      	ldr	r3, [r7, #0]
 8015ac2:	687a      	ldr	r2, [r7, #4]
 8015ac4:	f7f4 febe 	bl	800a844 <HAL_PCD_EP_Receive>
 8015ac8:	4603      	mov	r3, r0
 8015aca:	75fb      	strb	r3, [r7, #23]
 8015acc:	7dfb      	ldrb	r3, [r7, #23]
 8015ace:	4618      	mov	r0, r3
 8015ad0:	f000 f832 	bl	8015b38 <USBD_Get_USB_Status>
 8015ad4:	4603      	mov	r3, r0
 8015ad6:	75bb      	strb	r3, [r7, #22]
 8015ad8:	7dbb      	ldrb	r3, [r7, #22]
 8015ada:	4618      	mov	r0, r3
 8015adc:	3718      	adds	r7, #24
 8015ade:	46bd      	mov	sp, r7
 8015ae0:	bd80      	pop	{r7, pc}

08015ae2 <USBD_LL_GetRxDataSize>:
 8015ae2:	b580      	push	{r7, lr}
 8015ae4:	b082      	sub	sp, #8
 8015ae6:	af00      	add	r7, sp, #0
 8015ae8:	6078      	str	r0, [r7, #4]
 8015aea:	460b      	mov	r3, r1
 8015aec:	70fb      	strb	r3, [r7, #3]
 8015aee:	687b      	ldr	r3, [r7, #4]
 8015af0:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 8015af4:	78fa      	ldrb	r2, [r7, #3]
 8015af6:	4611      	mov	r1, r2
 8015af8:	4618      	mov	r0, r3
 8015afa:	f7f4 fede 	bl	800a8ba <HAL_PCD_EP_GetRxCount>
 8015afe:	4603      	mov	r3, r0
 8015b00:	4618      	mov	r0, r3
 8015b02:	3708      	adds	r7, #8
 8015b04:	46bd      	mov	sp, r7
 8015b06:	bd80      	pop	{r7, pc}

08015b08 <USBD_static_malloc>:
 8015b08:	b480      	push	{r7}
 8015b0a:	b083      	sub	sp, #12
 8015b0c:	af00      	add	r7, sp, #0
 8015b0e:	6078      	str	r0, [r7, #4]
 8015b10:	4b03      	ldr	r3, [pc, #12]	@ (8015b20 <USBD_static_malloc+0x18>)
 8015b12:	4618      	mov	r0, r3
 8015b14:	370c      	adds	r7, #12
 8015b16:	46bd      	mov	sp, r7
 8015b18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b1c:	4770      	bx	lr
 8015b1e:	bf00      	nop
 8015b20:	24005f08 	.word	0x24005f08

08015b24 <USBD_static_free>:
 8015b24:	b480      	push	{r7}
 8015b26:	b083      	sub	sp, #12
 8015b28:	af00      	add	r7, sp, #0
 8015b2a:	6078      	str	r0, [r7, #4]
 8015b2c:	bf00      	nop
 8015b2e:	370c      	adds	r7, #12
 8015b30:	46bd      	mov	sp, r7
 8015b32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b36:	4770      	bx	lr

08015b38 <USBD_Get_USB_Status>:
 8015b38:	b480      	push	{r7}
 8015b3a:	b085      	sub	sp, #20
 8015b3c:	af00      	add	r7, sp, #0
 8015b3e:	4603      	mov	r3, r0
 8015b40:	71fb      	strb	r3, [r7, #7]
 8015b42:	2300      	movs	r3, #0
 8015b44:	73fb      	strb	r3, [r7, #15]
 8015b46:	79fb      	ldrb	r3, [r7, #7]
 8015b48:	2b03      	cmp	r3, #3
 8015b4a:	d817      	bhi.n	8015b7c <USBD_Get_USB_Status+0x44>
 8015b4c:	a201      	add	r2, pc, #4	@ (adr r2, 8015b54 <USBD_Get_USB_Status+0x1c>)
 8015b4e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015b52:	bf00      	nop
 8015b54:	08015b65 	.word	0x08015b65
 8015b58:	08015b6b 	.word	0x08015b6b
 8015b5c:	08015b71 	.word	0x08015b71
 8015b60:	08015b77 	.word	0x08015b77
 8015b64:	2300      	movs	r3, #0
 8015b66:	73fb      	strb	r3, [r7, #15]
 8015b68:	e00b      	b.n	8015b82 <USBD_Get_USB_Status+0x4a>
 8015b6a:	2303      	movs	r3, #3
 8015b6c:	73fb      	strb	r3, [r7, #15]
 8015b6e:	e008      	b.n	8015b82 <USBD_Get_USB_Status+0x4a>
 8015b70:	2301      	movs	r3, #1
 8015b72:	73fb      	strb	r3, [r7, #15]
 8015b74:	e005      	b.n	8015b82 <USBD_Get_USB_Status+0x4a>
 8015b76:	2303      	movs	r3, #3
 8015b78:	73fb      	strb	r3, [r7, #15]
 8015b7a:	e002      	b.n	8015b82 <USBD_Get_USB_Status+0x4a>
 8015b7c:	2303      	movs	r3, #3
 8015b7e:	73fb      	strb	r3, [r7, #15]
 8015b80:	bf00      	nop
 8015b82:	7bfb      	ldrb	r3, [r7, #15]
 8015b84:	4618      	mov	r0, r3
 8015b86:	3714      	adds	r7, #20
 8015b88:	46bd      	mov	sp, r7
 8015b8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b8e:	4770      	bx	lr

08015b90 <atof>:
 8015b90:	2100      	movs	r1, #0
 8015b92:	f000 bdb7 	b.w	8016704 <strtod>

08015b96 <atoi>:
 8015b96:	220a      	movs	r2, #10
 8015b98:	2100      	movs	r1, #0
 8015b9a:	f000 be39 	b.w	8016810 <strtol>

08015b9e <sulp>:
 8015b9e:	b570      	push	{r4, r5, r6, lr}
 8015ba0:	4604      	mov	r4, r0
 8015ba2:	460d      	mov	r5, r1
 8015ba4:	4616      	mov	r6, r2
 8015ba6:	ec45 4b10 	vmov	d0, r4, r5
 8015baa:	f003 f9eb 	bl	8018f84 <__ulp>
 8015bae:	b17e      	cbz	r6, 8015bd0 <sulp+0x32>
 8015bb0:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8015bb4:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8015bb8:	2b00      	cmp	r3, #0
 8015bba:	dd09      	ble.n	8015bd0 <sulp+0x32>
 8015bbc:	051b      	lsls	r3, r3, #20
 8015bbe:	f103 517f 	add.w	r1, r3, #1069547520	@ 0x3fc00000
 8015bc2:	2000      	movs	r0, #0
 8015bc4:	f501 1140 	add.w	r1, r1, #3145728	@ 0x300000
 8015bc8:	ec41 0b17 	vmov	d7, r0, r1
 8015bcc:	ee20 0b07 	vmul.f64	d0, d0, d7
 8015bd0:	bd70      	pop	{r4, r5, r6, pc}
 8015bd2:	0000      	movs	r0, r0
 8015bd4:	0000      	movs	r0, r0
	...

08015bd8 <_strtod_l>:
 8015bd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015bdc:	ed2d 8b0a 	vpush	{d8-d12}
 8015be0:	b097      	sub	sp, #92	@ 0x5c
 8015be2:	4688      	mov	r8, r1
 8015be4:	920e      	str	r2, [sp, #56]	@ 0x38
 8015be6:	2200      	movs	r2, #0
 8015be8:	9212      	str	r2, [sp, #72]	@ 0x48
 8015bea:	9005      	str	r0, [sp, #20]
 8015bec:	f04f 0a00 	mov.w	sl, #0
 8015bf0:	f04f 0b00 	mov.w	fp, #0
 8015bf4:	460a      	mov	r2, r1
 8015bf6:	9211      	str	r2, [sp, #68]	@ 0x44
 8015bf8:	7811      	ldrb	r1, [r2, #0]
 8015bfa:	292b      	cmp	r1, #43	@ 0x2b
 8015bfc:	d04c      	beq.n	8015c98 <_strtod_l+0xc0>
 8015bfe:	d839      	bhi.n	8015c74 <_strtod_l+0x9c>
 8015c00:	290d      	cmp	r1, #13
 8015c02:	d833      	bhi.n	8015c6c <_strtod_l+0x94>
 8015c04:	2908      	cmp	r1, #8
 8015c06:	d833      	bhi.n	8015c70 <_strtod_l+0x98>
 8015c08:	2900      	cmp	r1, #0
 8015c0a:	d03c      	beq.n	8015c86 <_strtod_l+0xae>
 8015c0c:	2200      	movs	r2, #0
 8015c0e:	9208      	str	r2, [sp, #32]
 8015c10:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8015c12:	782a      	ldrb	r2, [r5, #0]
 8015c14:	2a30      	cmp	r2, #48	@ 0x30
 8015c16:	f040 80b5 	bne.w	8015d84 <_strtod_l+0x1ac>
 8015c1a:	786a      	ldrb	r2, [r5, #1]
 8015c1c:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8015c20:	2a58      	cmp	r2, #88	@ 0x58
 8015c22:	d170      	bne.n	8015d06 <_strtod_l+0x12e>
 8015c24:	9302      	str	r3, [sp, #8]
 8015c26:	9b08      	ldr	r3, [sp, #32]
 8015c28:	9301      	str	r3, [sp, #4]
 8015c2a:	ab12      	add	r3, sp, #72	@ 0x48
 8015c2c:	9300      	str	r3, [sp, #0]
 8015c2e:	4a8b      	ldr	r2, [pc, #556]	@ (8015e5c <_strtod_l+0x284>)
 8015c30:	9805      	ldr	r0, [sp, #20]
 8015c32:	ab13      	add	r3, sp, #76	@ 0x4c
 8015c34:	a911      	add	r1, sp, #68	@ 0x44
 8015c36:	f002 fa97 	bl	8018168 <__gethex>
 8015c3a:	f010 060f 	ands.w	r6, r0, #15
 8015c3e:	4604      	mov	r4, r0
 8015c40:	d005      	beq.n	8015c4e <_strtod_l+0x76>
 8015c42:	2e06      	cmp	r6, #6
 8015c44:	d12a      	bne.n	8015c9c <_strtod_l+0xc4>
 8015c46:	3501      	adds	r5, #1
 8015c48:	2300      	movs	r3, #0
 8015c4a:	9511      	str	r5, [sp, #68]	@ 0x44
 8015c4c:	9308      	str	r3, [sp, #32]
 8015c4e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015c50:	2b00      	cmp	r3, #0
 8015c52:	f040 852f 	bne.w	80166b4 <_strtod_l+0xadc>
 8015c56:	9b08      	ldr	r3, [sp, #32]
 8015c58:	ec4b ab10 	vmov	d0, sl, fp
 8015c5c:	b1cb      	cbz	r3, 8015c92 <_strtod_l+0xba>
 8015c5e:	eeb1 0b40 	vneg.f64	d0, d0
 8015c62:	b017      	add	sp, #92	@ 0x5c
 8015c64:	ecbd 8b0a 	vpop	{d8-d12}
 8015c68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c6c:	2920      	cmp	r1, #32
 8015c6e:	d1cd      	bne.n	8015c0c <_strtod_l+0x34>
 8015c70:	3201      	adds	r2, #1
 8015c72:	e7c0      	b.n	8015bf6 <_strtod_l+0x1e>
 8015c74:	292d      	cmp	r1, #45	@ 0x2d
 8015c76:	d1c9      	bne.n	8015c0c <_strtod_l+0x34>
 8015c78:	2101      	movs	r1, #1
 8015c7a:	9108      	str	r1, [sp, #32]
 8015c7c:	1c51      	adds	r1, r2, #1
 8015c7e:	9111      	str	r1, [sp, #68]	@ 0x44
 8015c80:	7852      	ldrb	r2, [r2, #1]
 8015c82:	2a00      	cmp	r2, #0
 8015c84:	d1c4      	bne.n	8015c10 <_strtod_l+0x38>
 8015c86:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015c88:	f8cd 8044 	str.w	r8, [sp, #68]	@ 0x44
 8015c8c:	2b00      	cmp	r3, #0
 8015c8e:	f040 850f 	bne.w	80166b0 <_strtod_l+0xad8>
 8015c92:	ec4b ab10 	vmov	d0, sl, fp
 8015c96:	e7e4      	b.n	8015c62 <_strtod_l+0x8a>
 8015c98:	2100      	movs	r1, #0
 8015c9a:	e7ee      	b.n	8015c7a <_strtod_l+0xa2>
 8015c9c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015c9e:	b13a      	cbz	r2, 8015cb0 <_strtod_l+0xd8>
 8015ca0:	2135      	movs	r1, #53	@ 0x35
 8015ca2:	a814      	add	r0, sp, #80	@ 0x50
 8015ca4:	f003 fa65 	bl	8019172 <__copybits>
 8015ca8:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8015caa:	9805      	ldr	r0, [sp, #20]
 8015cac:	f002 fe36 	bl	801891c <_Bfree>
 8015cb0:	1e73      	subs	r3, r6, #1
 8015cb2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015cb4:	2b04      	cmp	r3, #4
 8015cb6:	d806      	bhi.n	8015cc6 <_strtod_l+0xee>
 8015cb8:	e8df f003 	tbb	[pc, r3]
 8015cbc:	201d0314 	.word	0x201d0314
 8015cc0:	14          	.byte	0x14
 8015cc1:	00          	.byte	0x00
 8015cc2:	e9dd ab14 	ldrd	sl, fp, [sp, #80]	@ 0x50
 8015cc6:	05e3      	lsls	r3, r4, #23
 8015cc8:	bf48      	it	mi
 8015cca:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8015cce:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8015cd2:	0d1b      	lsrs	r3, r3, #20
 8015cd4:	051b      	lsls	r3, r3, #20
 8015cd6:	2b00      	cmp	r3, #0
 8015cd8:	d1b9      	bne.n	8015c4e <_strtod_l+0x76>
 8015cda:	f001 fb6f 	bl	80173bc <__errno>
 8015cde:	2322      	movs	r3, #34	@ 0x22
 8015ce0:	6003      	str	r3, [r0, #0]
 8015ce2:	e7b4      	b.n	8015c4e <_strtod_l+0x76>
 8015ce4:	e9dd a314 	ldrd	sl, r3, [sp, #80]	@ 0x50
 8015ce8:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8015cec:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8015cf0:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8015cf4:	e7e7      	b.n	8015cc6 <_strtod_l+0xee>
 8015cf6:	f8df b16c 	ldr.w	fp, [pc, #364]	@ 8015e64 <_strtod_l+0x28c>
 8015cfa:	e7e4      	b.n	8015cc6 <_strtod_l+0xee>
 8015cfc:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8015d00:	f04f 3aff 	mov.w	sl, #4294967295
 8015d04:	e7df      	b.n	8015cc6 <_strtod_l+0xee>
 8015d06:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015d08:	1c5a      	adds	r2, r3, #1
 8015d0a:	9211      	str	r2, [sp, #68]	@ 0x44
 8015d0c:	785b      	ldrb	r3, [r3, #1]
 8015d0e:	2b30      	cmp	r3, #48	@ 0x30
 8015d10:	d0f9      	beq.n	8015d06 <_strtod_l+0x12e>
 8015d12:	2b00      	cmp	r3, #0
 8015d14:	d09b      	beq.n	8015c4e <_strtod_l+0x76>
 8015d16:	2301      	movs	r3, #1
 8015d18:	2600      	movs	r6, #0
 8015d1a:	9307      	str	r3, [sp, #28]
 8015d1c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015d1e:	930a      	str	r3, [sp, #40]	@ 0x28
 8015d20:	46b1      	mov	r9, r6
 8015d22:	4635      	mov	r5, r6
 8015d24:	220a      	movs	r2, #10
 8015d26:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015d28:	7804      	ldrb	r4, [r0, #0]
 8015d2a:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8015d2e:	b2d9      	uxtb	r1, r3
 8015d30:	2909      	cmp	r1, #9
 8015d32:	d929      	bls.n	8015d88 <_strtod_l+0x1b0>
 8015d34:	494a      	ldr	r1, [pc, #296]	@ (8015e60 <_strtod_l+0x288>)
 8015d36:	2201      	movs	r2, #1
 8015d38:	f001 fae4 	bl	8017304 <strncmp>
 8015d3c:	b378      	cbz	r0, 8015d9e <_strtod_l+0x1c6>
 8015d3e:	2000      	movs	r0, #0
 8015d40:	4622      	mov	r2, r4
 8015d42:	462b      	mov	r3, r5
 8015d44:	4607      	mov	r7, r0
 8015d46:	9006      	str	r0, [sp, #24]
 8015d48:	2a65      	cmp	r2, #101	@ 0x65
 8015d4a:	d001      	beq.n	8015d50 <_strtod_l+0x178>
 8015d4c:	2a45      	cmp	r2, #69	@ 0x45
 8015d4e:	d117      	bne.n	8015d80 <_strtod_l+0x1a8>
 8015d50:	b91b      	cbnz	r3, 8015d5a <_strtod_l+0x182>
 8015d52:	9b07      	ldr	r3, [sp, #28]
 8015d54:	4303      	orrs	r3, r0
 8015d56:	d096      	beq.n	8015c86 <_strtod_l+0xae>
 8015d58:	2300      	movs	r3, #0
 8015d5a:	f8dd 8044 	ldr.w	r8, [sp, #68]	@ 0x44
 8015d5e:	f108 0201 	add.w	r2, r8, #1
 8015d62:	9211      	str	r2, [sp, #68]	@ 0x44
 8015d64:	f898 2001 	ldrb.w	r2, [r8, #1]
 8015d68:	2a2b      	cmp	r2, #43	@ 0x2b
 8015d6a:	d06b      	beq.n	8015e44 <_strtod_l+0x26c>
 8015d6c:	2a2d      	cmp	r2, #45	@ 0x2d
 8015d6e:	d071      	beq.n	8015e54 <_strtod_l+0x27c>
 8015d70:	f04f 0e00 	mov.w	lr, #0
 8015d74:	f1a2 0430 	sub.w	r4, r2, #48	@ 0x30
 8015d78:	2c09      	cmp	r4, #9
 8015d7a:	d979      	bls.n	8015e70 <_strtod_l+0x298>
 8015d7c:	f8cd 8044 	str.w	r8, [sp, #68]	@ 0x44
 8015d80:	2400      	movs	r4, #0
 8015d82:	e094      	b.n	8015eae <_strtod_l+0x2d6>
 8015d84:	2300      	movs	r3, #0
 8015d86:	e7c7      	b.n	8015d18 <_strtod_l+0x140>
 8015d88:	2d08      	cmp	r5, #8
 8015d8a:	f100 0001 	add.w	r0, r0, #1
 8015d8e:	bfd4      	ite	le
 8015d90:	fb02 3909 	mlale	r9, r2, r9, r3
 8015d94:	fb02 3606 	mlagt	r6, r2, r6, r3
 8015d98:	3501      	adds	r5, #1
 8015d9a:	9011      	str	r0, [sp, #68]	@ 0x44
 8015d9c:	e7c3      	b.n	8015d26 <_strtod_l+0x14e>
 8015d9e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015da0:	1c5a      	adds	r2, r3, #1
 8015da2:	9211      	str	r2, [sp, #68]	@ 0x44
 8015da4:	785a      	ldrb	r2, [r3, #1]
 8015da6:	b375      	cbz	r5, 8015e06 <_strtod_l+0x22e>
 8015da8:	4607      	mov	r7, r0
 8015daa:	462b      	mov	r3, r5
 8015dac:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 8015db0:	2909      	cmp	r1, #9
 8015db2:	d913      	bls.n	8015ddc <_strtod_l+0x204>
 8015db4:	2101      	movs	r1, #1
 8015db6:	9106      	str	r1, [sp, #24]
 8015db8:	e7c6      	b.n	8015d48 <_strtod_l+0x170>
 8015dba:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015dbc:	1c5a      	adds	r2, r3, #1
 8015dbe:	9211      	str	r2, [sp, #68]	@ 0x44
 8015dc0:	785a      	ldrb	r2, [r3, #1]
 8015dc2:	3001      	adds	r0, #1
 8015dc4:	2a30      	cmp	r2, #48	@ 0x30
 8015dc6:	d0f8      	beq.n	8015dba <_strtod_l+0x1e2>
 8015dc8:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8015dcc:	2b08      	cmp	r3, #8
 8015dce:	f200 8476 	bhi.w	80166be <_strtod_l+0xae6>
 8015dd2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015dd4:	930a      	str	r3, [sp, #40]	@ 0x28
 8015dd6:	4607      	mov	r7, r0
 8015dd8:	2000      	movs	r0, #0
 8015dda:	4603      	mov	r3, r0
 8015ddc:	3a30      	subs	r2, #48	@ 0x30
 8015dde:	f100 0101 	add.w	r1, r0, #1
 8015de2:	d023      	beq.n	8015e2c <_strtod_l+0x254>
 8015de4:	440f      	add	r7, r1
 8015de6:	eb00 0c03 	add.w	ip, r0, r3
 8015dea:	4619      	mov	r1, r3
 8015dec:	240a      	movs	r4, #10
 8015dee:	4561      	cmp	r1, ip
 8015df0:	d10b      	bne.n	8015e0a <_strtod_l+0x232>
 8015df2:	1c5c      	adds	r4, r3, #1
 8015df4:	4403      	add	r3, r0
 8015df6:	2b08      	cmp	r3, #8
 8015df8:	4404      	add	r4, r0
 8015dfa:	dc11      	bgt.n	8015e20 <_strtod_l+0x248>
 8015dfc:	230a      	movs	r3, #10
 8015dfe:	fb03 2909 	mla	r9, r3, r9, r2
 8015e02:	2100      	movs	r1, #0
 8015e04:	e013      	b.n	8015e2e <_strtod_l+0x256>
 8015e06:	4628      	mov	r0, r5
 8015e08:	e7dc      	b.n	8015dc4 <_strtod_l+0x1ec>
 8015e0a:	2908      	cmp	r1, #8
 8015e0c:	f101 0101 	add.w	r1, r1, #1
 8015e10:	dc02      	bgt.n	8015e18 <_strtod_l+0x240>
 8015e12:	fb04 f909 	mul.w	r9, r4, r9
 8015e16:	e7ea      	b.n	8015dee <_strtod_l+0x216>
 8015e18:	2910      	cmp	r1, #16
 8015e1a:	bfd8      	it	le
 8015e1c:	4366      	mulle	r6, r4
 8015e1e:	e7e6      	b.n	8015dee <_strtod_l+0x216>
 8015e20:	2b0f      	cmp	r3, #15
 8015e22:	dcee      	bgt.n	8015e02 <_strtod_l+0x22a>
 8015e24:	230a      	movs	r3, #10
 8015e26:	fb03 2606 	mla	r6, r3, r6, r2
 8015e2a:	e7ea      	b.n	8015e02 <_strtod_l+0x22a>
 8015e2c:	461c      	mov	r4, r3
 8015e2e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015e30:	1c5a      	adds	r2, r3, #1
 8015e32:	9211      	str	r2, [sp, #68]	@ 0x44
 8015e34:	785a      	ldrb	r2, [r3, #1]
 8015e36:	4608      	mov	r0, r1
 8015e38:	4623      	mov	r3, r4
 8015e3a:	e7b7      	b.n	8015dac <_strtod_l+0x1d4>
 8015e3c:	2301      	movs	r3, #1
 8015e3e:	2700      	movs	r7, #0
 8015e40:	9306      	str	r3, [sp, #24]
 8015e42:	e786      	b.n	8015d52 <_strtod_l+0x17a>
 8015e44:	f04f 0e00 	mov.w	lr, #0
 8015e48:	f108 0202 	add.w	r2, r8, #2
 8015e4c:	9211      	str	r2, [sp, #68]	@ 0x44
 8015e4e:	f898 2002 	ldrb.w	r2, [r8, #2]
 8015e52:	e78f      	b.n	8015d74 <_strtod_l+0x19c>
 8015e54:	f04f 0e01 	mov.w	lr, #1
 8015e58:	e7f6      	b.n	8015e48 <_strtod_l+0x270>
 8015e5a:	bf00      	nop
 8015e5c:	0801b0a4 	.word	0x0801b0a4
 8015e60:	0801b08c 	.word	0x0801b08c
 8015e64:	7ff00000 	.word	0x7ff00000
 8015e68:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015e6a:	1c54      	adds	r4, r2, #1
 8015e6c:	9411      	str	r4, [sp, #68]	@ 0x44
 8015e6e:	7852      	ldrb	r2, [r2, #1]
 8015e70:	2a30      	cmp	r2, #48	@ 0x30
 8015e72:	d0f9      	beq.n	8015e68 <_strtod_l+0x290>
 8015e74:	f1a2 0431 	sub.w	r4, r2, #49	@ 0x31
 8015e78:	2c08      	cmp	r4, #8
 8015e7a:	d881      	bhi.n	8015d80 <_strtod_l+0x1a8>
 8015e7c:	f1a2 0c30 	sub.w	ip, r2, #48	@ 0x30
 8015e80:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015e82:	9209      	str	r2, [sp, #36]	@ 0x24
 8015e84:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015e86:	1c51      	adds	r1, r2, #1
 8015e88:	9111      	str	r1, [sp, #68]	@ 0x44
 8015e8a:	7852      	ldrb	r2, [r2, #1]
 8015e8c:	f1a2 0430 	sub.w	r4, r2, #48	@ 0x30
 8015e90:	2c09      	cmp	r4, #9
 8015e92:	d938      	bls.n	8015f06 <_strtod_l+0x32e>
 8015e94:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8015e96:	1b0c      	subs	r4, r1, r4
 8015e98:	2c08      	cmp	r4, #8
 8015e9a:	f644 641f 	movw	r4, #19999	@ 0x4e1f
 8015e9e:	dc02      	bgt.n	8015ea6 <_strtod_l+0x2ce>
 8015ea0:	4564      	cmp	r4, ip
 8015ea2:	bfa8      	it	ge
 8015ea4:	4664      	movge	r4, ip
 8015ea6:	f1be 0f00 	cmp.w	lr, #0
 8015eaa:	d000      	beq.n	8015eae <_strtod_l+0x2d6>
 8015eac:	4264      	negs	r4, r4
 8015eae:	2b00      	cmp	r3, #0
 8015eb0:	d14e      	bne.n	8015f50 <_strtod_l+0x378>
 8015eb2:	9b07      	ldr	r3, [sp, #28]
 8015eb4:	4318      	orrs	r0, r3
 8015eb6:	f47f aeca 	bne.w	8015c4e <_strtod_l+0x76>
 8015eba:	9b06      	ldr	r3, [sp, #24]
 8015ebc:	2b00      	cmp	r3, #0
 8015ebe:	f47f aee2 	bne.w	8015c86 <_strtod_l+0xae>
 8015ec2:	2a69      	cmp	r2, #105	@ 0x69
 8015ec4:	d027      	beq.n	8015f16 <_strtod_l+0x33e>
 8015ec6:	dc24      	bgt.n	8015f12 <_strtod_l+0x33a>
 8015ec8:	2a49      	cmp	r2, #73	@ 0x49
 8015eca:	d024      	beq.n	8015f16 <_strtod_l+0x33e>
 8015ecc:	2a4e      	cmp	r2, #78	@ 0x4e
 8015ece:	f47f aeda 	bne.w	8015c86 <_strtod_l+0xae>
 8015ed2:	4997      	ldr	r1, [pc, #604]	@ (8016130 <_strtod_l+0x558>)
 8015ed4:	a811      	add	r0, sp, #68	@ 0x44
 8015ed6:	f002 fb69 	bl	80185ac <__match>
 8015eda:	2800      	cmp	r0, #0
 8015edc:	f43f aed3 	beq.w	8015c86 <_strtod_l+0xae>
 8015ee0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015ee2:	781b      	ldrb	r3, [r3, #0]
 8015ee4:	2b28      	cmp	r3, #40	@ 0x28
 8015ee6:	d12d      	bne.n	8015f44 <_strtod_l+0x36c>
 8015ee8:	4992      	ldr	r1, [pc, #584]	@ (8016134 <_strtod_l+0x55c>)
 8015eea:	aa14      	add	r2, sp, #80	@ 0x50
 8015eec:	a811      	add	r0, sp, #68	@ 0x44
 8015eee:	f002 fb71 	bl	80185d4 <__hexnan>
 8015ef2:	2805      	cmp	r0, #5
 8015ef4:	d126      	bne.n	8015f44 <_strtod_l+0x36c>
 8015ef6:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8015ef8:	f8dd a050 	ldr.w	sl, [sp, #80]	@ 0x50
 8015efc:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8015f00:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 8015f04:	e6a3      	b.n	8015c4e <_strtod_l+0x76>
 8015f06:	240a      	movs	r4, #10
 8015f08:	fb04 2c0c 	mla	ip, r4, ip, r2
 8015f0c:	f1ac 0c30 	sub.w	ip, ip, #48	@ 0x30
 8015f10:	e7b8      	b.n	8015e84 <_strtod_l+0x2ac>
 8015f12:	2a6e      	cmp	r2, #110	@ 0x6e
 8015f14:	e7db      	b.n	8015ece <_strtod_l+0x2f6>
 8015f16:	4988      	ldr	r1, [pc, #544]	@ (8016138 <_strtod_l+0x560>)
 8015f18:	a811      	add	r0, sp, #68	@ 0x44
 8015f1a:	f002 fb47 	bl	80185ac <__match>
 8015f1e:	2800      	cmp	r0, #0
 8015f20:	f43f aeb1 	beq.w	8015c86 <_strtod_l+0xae>
 8015f24:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015f26:	4985      	ldr	r1, [pc, #532]	@ (801613c <_strtod_l+0x564>)
 8015f28:	3b01      	subs	r3, #1
 8015f2a:	a811      	add	r0, sp, #68	@ 0x44
 8015f2c:	9311      	str	r3, [sp, #68]	@ 0x44
 8015f2e:	f002 fb3d 	bl	80185ac <__match>
 8015f32:	b910      	cbnz	r0, 8015f3a <_strtod_l+0x362>
 8015f34:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015f36:	3301      	adds	r3, #1
 8015f38:	9311      	str	r3, [sp, #68]	@ 0x44
 8015f3a:	f8df b214 	ldr.w	fp, [pc, #532]	@ 8016150 <_strtod_l+0x578>
 8015f3e:	f04f 0a00 	mov.w	sl, #0
 8015f42:	e684      	b.n	8015c4e <_strtod_l+0x76>
 8015f44:	487e      	ldr	r0, [pc, #504]	@ (8016140 <_strtod_l+0x568>)
 8015f46:	f001 fa77 	bl	8017438 <nan>
 8015f4a:	ec5b ab10 	vmov	sl, fp, d0
 8015f4e:	e67e      	b.n	8015c4e <_strtod_l+0x76>
 8015f50:	ee07 9a90 	vmov	s15, r9
 8015f54:	1be2      	subs	r2, r4, r7
 8015f56:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8015f5a:	2d00      	cmp	r5, #0
 8015f5c:	bf08      	it	eq
 8015f5e:	461d      	moveq	r5, r3
 8015f60:	2b10      	cmp	r3, #16
 8015f62:	9209      	str	r2, [sp, #36]	@ 0x24
 8015f64:	461a      	mov	r2, r3
 8015f66:	bfa8      	it	ge
 8015f68:	2210      	movge	r2, #16
 8015f6a:	2b09      	cmp	r3, #9
 8015f6c:	ec5b ab17 	vmov	sl, fp, d7
 8015f70:	dc15      	bgt.n	8015f9e <_strtod_l+0x3c6>
 8015f72:	1be1      	subs	r1, r4, r7
 8015f74:	2900      	cmp	r1, #0
 8015f76:	f43f ae6a 	beq.w	8015c4e <_strtod_l+0x76>
 8015f7a:	eba4 0107 	sub.w	r1, r4, r7
 8015f7e:	dd72      	ble.n	8016066 <_strtod_l+0x48e>
 8015f80:	2916      	cmp	r1, #22
 8015f82:	dc59      	bgt.n	8016038 <_strtod_l+0x460>
 8015f84:	4b6f      	ldr	r3, [pc, #444]	@ (8016144 <_strtod_l+0x56c>)
 8015f86:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8015f88:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8015f8c:	ed93 7b00 	vldr	d7, [r3]
 8015f90:	ec4b ab16 	vmov	d6, sl, fp
 8015f94:	ee27 7b06 	vmul.f64	d7, d7, d6
 8015f98:	ec5b ab17 	vmov	sl, fp, d7
 8015f9c:	e657      	b.n	8015c4e <_strtod_l+0x76>
 8015f9e:	4969      	ldr	r1, [pc, #420]	@ (8016144 <_strtod_l+0x56c>)
 8015fa0:	eb01 01c2 	add.w	r1, r1, r2, lsl #3
 8015fa4:	ed11 5b12 	vldr	d5, [r1, #-72]	@ 0xffffffb8
 8015fa8:	ee06 6a90 	vmov	s13, r6
 8015fac:	2b0f      	cmp	r3, #15
 8015fae:	eeb8 6b66 	vcvt.f64.u32	d6, s13
 8015fb2:	eea7 6b05 	vfma.f64	d6, d7, d5
 8015fb6:	ec5b ab16 	vmov	sl, fp, d6
 8015fba:	ddda      	ble.n	8015f72 <_strtod_l+0x39a>
 8015fbc:	1a9a      	subs	r2, r3, r2
 8015fbe:	1be1      	subs	r1, r4, r7
 8015fc0:	440a      	add	r2, r1
 8015fc2:	2a00      	cmp	r2, #0
 8015fc4:	f340 8094 	ble.w	80160f0 <_strtod_l+0x518>
 8015fc8:	f012 000f 	ands.w	r0, r2, #15
 8015fcc:	d00a      	beq.n	8015fe4 <_strtod_l+0x40c>
 8015fce:	495d      	ldr	r1, [pc, #372]	@ (8016144 <_strtod_l+0x56c>)
 8015fd0:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
 8015fd4:	ed91 7b00 	vldr	d7, [r1]
 8015fd8:	ec4b ab16 	vmov	d6, sl, fp
 8015fdc:	ee27 7b06 	vmul.f64	d7, d7, d6
 8015fe0:	ec5b ab17 	vmov	sl, fp, d7
 8015fe4:	f032 020f 	bics.w	r2, r2, #15
 8015fe8:	d073      	beq.n	80160d2 <_strtod_l+0x4fa>
 8015fea:	f5b2 7f9a 	cmp.w	r2, #308	@ 0x134
 8015fee:	dd47      	ble.n	8016080 <_strtod_l+0x4a8>
 8015ff0:	2400      	movs	r4, #0
 8015ff2:	4625      	mov	r5, r4
 8015ff4:	9407      	str	r4, [sp, #28]
 8015ff6:	4626      	mov	r6, r4
 8015ff8:	9a05      	ldr	r2, [sp, #20]
 8015ffa:	f8df b154 	ldr.w	fp, [pc, #340]	@ 8016150 <_strtod_l+0x578>
 8015ffe:	2322      	movs	r3, #34	@ 0x22
 8016000:	6013      	str	r3, [r2, #0]
 8016002:	f04f 0a00 	mov.w	sl, #0
 8016006:	9b07      	ldr	r3, [sp, #28]
 8016008:	2b00      	cmp	r3, #0
 801600a:	f43f ae20 	beq.w	8015c4e <_strtod_l+0x76>
 801600e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8016010:	9805      	ldr	r0, [sp, #20]
 8016012:	f002 fc83 	bl	801891c <_Bfree>
 8016016:	9805      	ldr	r0, [sp, #20]
 8016018:	4631      	mov	r1, r6
 801601a:	f002 fc7f 	bl	801891c <_Bfree>
 801601e:	9805      	ldr	r0, [sp, #20]
 8016020:	4629      	mov	r1, r5
 8016022:	f002 fc7b 	bl	801891c <_Bfree>
 8016026:	9907      	ldr	r1, [sp, #28]
 8016028:	9805      	ldr	r0, [sp, #20]
 801602a:	f002 fc77 	bl	801891c <_Bfree>
 801602e:	9805      	ldr	r0, [sp, #20]
 8016030:	4621      	mov	r1, r4
 8016032:	f002 fc73 	bl	801891c <_Bfree>
 8016036:	e60a      	b.n	8015c4e <_strtod_l+0x76>
 8016038:	f1c3 0125 	rsb	r1, r3, #37	@ 0x25
 801603c:	1be0      	subs	r0, r4, r7
 801603e:	4281      	cmp	r1, r0
 8016040:	dbbc      	blt.n	8015fbc <_strtod_l+0x3e4>
 8016042:	4a40      	ldr	r2, [pc, #256]	@ (8016144 <_strtod_l+0x56c>)
 8016044:	f1c3 030f 	rsb	r3, r3, #15
 8016048:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 801604c:	ed91 7b00 	vldr	d7, [r1]
 8016050:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016052:	ec4b ab16 	vmov	d6, sl, fp
 8016056:	1acb      	subs	r3, r1, r3
 8016058:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 801605c:	ee27 7b06 	vmul.f64	d7, d7, d6
 8016060:	ed92 6b00 	vldr	d6, [r2]
 8016064:	e796      	b.n	8015f94 <_strtod_l+0x3bc>
 8016066:	3116      	adds	r1, #22
 8016068:	dba8      	blt.n	8015fbc <_strtod_l+0x3e4>
 801606a:	4b36      	ldr	r3, [pc, #216]	@ (8016144 <_strtod_l+0x56c>)
 801606c:	1b3c      	subs	r4, r7, r4
 801606e:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 8016072:	ed94 7b00 	vldr	d7, [r4]
 8016076:	ec4b ab16 	vmov	d6, sl, fp
 801607a:	ee86 7b07 	vdiv.f64	d7, d6, d7
 801607e:	e78b      	b.n	8015f98 <_strtod_l+0x3c0>
 8016080:	2000      	movs	r0, #0
 8016082:	ec4b ab17 	vmov	d7, sl, fp
 8016086:	4e30      	ldr	r6, [pc, #192]	@ (8016148 <_strtod_l+0x570>)
 8016088:	1112      	asrs	r2, r2, #4
 801608a:	4601      	mov	r1, r0
 801608c:	2a01      	cmp	r2, #1
 801608e:	dc23      	bgt.n	80160d8 <_strtod_l+0x500>
 8016090:	b108      	cbz	r0, 8016096 <_strtod_l+0x4be>
 8016092:	ec5b ab17 	vmov	sl, fp, d7
 8016096:	4a2c      	ldr	r2, [pc, #176]	@ (8016148 <_strtod_l+0x570>)
 8016098:	482c      	ldr	r0, [pc, #176]	@ (801614c <_strtod_l+0x574>)
 801609a:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 801609e:	ed92 7b00 	vldr	d7, [r2]
 80160a2:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 80160a6:	ec4b ab16 	vmov	d6, sl, fp
 80160aa:	4a29      	ldr	r2, [pc, #164]	@ (8016150 <_strtod_l+0x578>)
 80160ac:	ee27 7b06 	vmul.f64	d7, d7, d6
 80160b0:	ee17 1a90 	vmov	r1, s15
 80160b4:	400a      	ands	r2, r1
 80160b6:	4282      	cmp	r2, r0
 80160b8:	ec5b ab17 	vmov	sl, fp, d7
 80160bc:	d898      	bhi.n	8015ff0 <_strtod_l+0x418>
 80160be:	f5a0 1080 	sub.w	r0, r0, #1048576	@ 0x100000
 80160c2:	4282      	cmp	r2, r0
 80160c4:	bf86      	itte	hi
 80160c6:	f8df b08c 	ldrhi.w	fp, [pc, #140]	@ 8016154 <_strtod_l+0x57c>
 80160ca:	f04f 3aff 	movhi.w	sl, #4294967295
 80160ce:	f101 7b54 	addls.w	fp, r1, #55574528	@ 0x3500000
 80160d2:	2200      	movs	r2, #0
 80160d4:	9206      	str	r2, [sp, #24]
 80160d6:	e076      	b.n	80161c6 <_strtod_l+0x5ee>
 80160d8:	f012 0f01 	tst.w	r2, #1
 80160dc:	d004      	beq.n	80160e8 <_strtod_l+0x510>
 80160de:	ed96 6b00 	vldr	d6, [r6]
 80160e2:	2001      	movs	r0, #1
 80160e4:	ee27 7b06 	vmul.f64	d7, d7, d6
 80160e8:	3101      	adds	r1, #1
 80160ea:	1052      	asrs	r2, r2, #1
 80160ec:	3608      	adds	r6, #8
 80160ee:	e7cd      	b.n	801608c <_strtod_l+0x4b4>
 80160f0:	d0ef      	beq.n	80160d2 <_strtod_l+0x4fa>
 80160f2:	4252      	negs	r2, r2
 80160f4:	f012 000f 	ands.w	r0, r2, #15
 80160f8:	d00a      	beq.n	8016110 <_strtod_l+0x538>
 80160fa:	4912      	ldr	r1, [pc, #72]	@ (8016144 <_strtod_l+0x56c>)
 80160fc:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
 8016100:	ed91 7b00 	vldr	d7, [r1]
 8016104:	ec4b ab16 	vmov	d6, sl, fp
 8016108:	ee86 7b07 	vdiv.f64	d7, d6, d7
 801610c:	ec5b ab17 	vmov	sl, fp, d7
 8016110:	1112      	asrs	r2, r2, #4
 8016112:	d0de      	beq.n	80160d2 <_strtod_l+0x4fa>
 8016114:	2a1f      	cmp	r2, #31
 8016116:	dd1f      	ble.n	8016158 <_strtod_l+0x580>
 8016118:	2400      	movs	r4, #0
 801611a:	4625      	mov	r5, r4
 801611c:	9407      	str	r4, [sp, #28]
 801611e:	4626      	mov	r6, r4
 8016120:	9a05      	ldr	r2, [sp, #20]
 8016122:	2322      	movs	r3, #34	@ 0x22
 8016124:	f04f 0a00 	mov.w	sl, #0
 8016128:	f04f 0b00 	mov.w	fp, #0
 801612c:	6013      	str	r3, [r2, #0]
 801612e:	e76a      	b.n	8016006 <_strtod_l+0x42e>
 8016130:	0801b1ee 	.word	0x0801b1ee
 8016134:	0801b090 	.word	0x0801b090
 8016138:	0801b1e6 	.word	0x0801b1e6
 801613c:	0801b220 	.word	0x0801b220
 8016140:	0801b4ac 	.word	0x0801b4ac
 8016144:	0801b398 	.word	0x0801b398
 8016148:	0801b370 	.word	0x0801b370
 801614c:	7ca00000 	.word	0x7ca00000
 8016150:	7ff00000 	.word	0x7ff00000
 8016154:	7fefffff 	.word	0x7fefffff
 8016158:	f012 0110 	ands.w	r1, r2, #16
 801615c:	bf18      	it	ne
 801615e:	216a      	movne	r1, #106	@ 0x6a
 8016160:	9106      	str	r1, [sp, #24]
 8016162:	ec4b ab17 	vmov	d7, sl, fp
 8016166:	49b0      	ldr	r1, [pc, #704]	@ (8016428 <_strtod_l+0x850>)
 8016168:	2000      	movs	r0, #0
 801616a:	07d6      	lsls	r6, r2, #31
 801616c:	d504      	bpl.n	8016178 <_strtod_l+0x5a0>
 801616e:	ed91 6b00 	vldr	d6, [r1]
 8016172:	2001      	movs	r0, #1
 8016174:	ee27 7b06 	vmul.f64	d7, d7, d6
 8016178:	1052      	asrs	r2, r2, #1
 801617a:	f101 0108 	add.w	r1, r1, #8
 801617e:	d1f4      	bne.n	801616a <_strtod_l+0x592>
 8016180:	b108      	cbz	r0, 8016186 <_strtod_l+0x5ae>
 8016182:	ec5b ab17 	vmov	sl, fp, d7
 8016186:	9a06      	ldr	r2, [sp, #24]
 8016188:	b1b2      	cbz	r2, 80161b8 <_strtod_l+0x5e0>
 801618a:	f3cb 510a 	ubfx	r1, fp, #20, #11
 801618e:	f1c1 026b 	rsb	r2, r1, #107	@ 0x6b
 8016192:	2a00      	cmp	r2, #0
 8016194:	4658      	mov	r0, fp
 8016196:	dd0f      	ble.n	80161b8 <_strtod_l+0x5e0>
 8016198:	2a1f      	cmp	r2, #31
 801619a:	dd55      	ble.n	8016248 <_strtod_l+0x670>
 801619c:	2a34      	cmp	r2, #52	@ 0x34
 801619e:	bfde      	ittt	le
 80161a0:	f04f 32ff 	movle.w	r2, #4294967295
 80161a4:	f1c1 014b 	rsble	r1, r1, #75	@ 0x4b
 80161a8:	408a      	lslle	r2, r1
 80161aa:	f04f 0a00 	mov.w	sl, #0
 80161ae:	bfcc      	ite	gt
 80161b0:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 80161b4:	ea02 0b00 	andle.w	fp, r2, r0
 80161b8:	ec4b ab17 	vmov	d7, sl, fp
 80161bc:	eeb5 7b40 	vcmp.f64	d7, #0.0
 80161c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80161c4:	d0a8      	beq.n	8016118 <_strtod_l+0x540>
 80161c6:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80161c8:	9805      	ldr	r0, [sp, #20]
 80161ca:	f8cd 9000 	str.w	r9, [sp]
 80161ce:	462a      	mov	r2, r5
 80161d0:	f002 fc0c 	bl	80189ec <__s2b>
 80161d4:	9007      	str	r0, [sp, #28]
 80161d6:	2800      	cmp	r0, #0
 80161d8:	f43f af0a 	beq.w	8015ff0 <_strtod_l+0x418>
 80161dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80161de:	1b3f      	subs	r7, r7, r4
 80161e0:	2b00      	cmp	r3, #0
 80161e2:	bfb4      	ite	lt
 80161e4:	463b      	movlt	r3, r7
 80161e6:	2300      	movge	r3, #0
 80161e8:	930a      	str	r3, [sp, #40]	@ 0x28
 80161ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80161ec:	ed9f bb8a 	vldr	d11, [pc, #552]	@ 8016418 <_strtod_l+0x840>
 80161f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80161f4:	2400      	movs	r4, #0
 80161f6:	930d      	str	r3, [sp, #52]	@ 0x34
 80161f8:	4625      	mov	r5, r4
 80161fa:	9b07      	ldr	r3, [sp, #28]
 80161fc:	9805      	ldr	r0, [sp, #20]
 80161fe:	6859      	ldr	r1, [r3, #4]
 8016200:	f002 fb4c 	bl	801889c <_Balloc>
 8016204:	4606      	mov	r6, r0
 8016206:	2800      	cmp	r0, #0
 8016208:	f43f aef6 	beq.w	8015ff8 <_strtod_l+0x420>
 801620c:	9b07      	ldr	r3, [sp, #28]
 801620e:	691a      	ldr	r2, [r3, #16]
 8016210:	ec4b ab19 	vmov	d9, sl, fp
 8016214:	3202      	adds	r2, #2
 8016216:	f103 010c 	add.w	r1, r3, #12
 801621a:	0092      	lsls	r2, r2, #2
 801621c:	300c      	adds	r0, #12
 801621e:	f001 f8fa 	bl	8017416 <memcpy>
 8016222:	eeb0 0b49 	vmov.f64	d0, d9
 8016226:	9805      	ldr	r0, [sp, #20]
 8016228:	aa14      	add	r2, sp, #80	@ 0x50
 801622a:	a913      	add	r1, sp, #76	@ 0x4c
 801622c:	f002 ff1a 	bl	8019064 <__d2b>
 8016230:	9012      	str	r0, [sp, #72]	@ 0x48
 8016232:	2800      	cmp	r0, #0
 8016234:	f43f aee0 	beq.w	8015ff8 <_strtod_l+0x420>
 8016238:	9805      	ldr	r0, [sp, #20]
 801623a:	2101      	movs	r1, #1
 801623c:	f002 fc6c 	bl	8018b18 <__i2b>
 8016240:	4605      	mov	r5, r0
 8016242:	b940      	cbnz	r0, 8016256 <_strtod_l+0x67e>
 8016244:	2500      	movs	r5, #0
 8016246:	e6d7      	b.n	8015ff8 <_strtod_l+0x420>
 8016248:	f04f 31ff 	mov.w	r1, #4294967295
 801624c:	fa01 f202 	lsl.w	r2, r1, r2
 8016250:	ea02 0a0a 	and.w	sl, r2, sl
 8016254:	e7b0      	b.n	80161b8 <_strtod_l+0x5e0>
 8016256:	9f13      	ldr	r7, [sp, #76]	@ 0x4c
 8016258:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801625a:	2f00      	cmp	r7, #0
 801625c:	bfab      	itete	ge
 801625e:	9b0a      	ldrge	r3, [sp, #40]	@ 0x28
 8016260:	9b0d      	ldrlt	r3, [sp, #52]	@ 0x34
 8016262:	f8dd 8034 	ldrge.w	r8, [sp, #52]	@ 0x34
 8016266:	f8dd 9028 	ldrlt.w	r9, [sp, #40]	@ 0x28
 801626a:	bfac      	ite	ge
 801626c:	eb07 0903 	addge.w	r9, r7, r3
 8016270:	eba3 0807 	sublt.w	r8, r3, r7
 8016274:	9b06      	ldr	r3, [sp, #24]
 8016276:	1aff      	subs	r7, r7, r3
 8016278:	4417      	add	r7, r2
 801627a:	f1c2 0336 	rsb	r3, r2, #54	@ 0x36
 801627e:	4a6b      	ldr	r2, [pc, #428]	@ (801642c <_strtod_l+0x854>)
 8016280:	3f01      	subs	r7, #1
 8016282:	4297      	cmp	r7, r2
 8016284:	da51      	bge.n	801632a <_strtod_l+0x752>
 8016286:	1bd1      	subs	r1, r2, r7
 8016288:	291f      	cmp	r1, #31
 801628a:	eba3 0301 	sub.w	r3, r3, r1
 801628e:	f04f 0201 	mov.w	r2, #1
 8016292:	dc3e      	bgt.n	8016312 <_strtod_l+0x73a>
 8016294:	408a      	lsls	r2, r1
 8016296:	920c      	str	r2, [sp, #48]	@ 0x30
 8016298:	2200      	movs	r2, #0
 801629a:	920b      	str	r2, [sp, #44]	@ 0x2c
 801629c:	eb09 0703 	add.w	r7, r9, r3
 80162a0:	4498      	add	r8, r3
 80162a2:	9b06      	ldr	r3, [sp, #24]
 80162a4:	45b9      	cmp	r9, r7
 80162a6:	4498      	add	r8, r3
 80162a8:	464b      	mov	r3, r9
 80162aa:	bfa8      	it	ge
 80162ac:	463b      	movge	r3, r7
 80162ae:	4543      	cmp	r3, r8
 80162b0:	bfa8      	it	ge
 80162b2:	4643      	movge	r3, r8
 80162b4:	2b00      	cmp	r3, #0
 80162b6:	bfc2      	ittt	gt
 80162b8:	1aff      	subgt	r7, r7, r3
 80162ba:	eba8 0803 	subgt.w	r8, r8, r3
 80162be:	eba9 0903 	subgt.w	r9, r9, r3
 80162c2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80162c4:	2b00      	cmp	r3, #0
 80162c6:	dd16      	ble.n	80162f6 <_strtod_l+0x71e>
 80162c8:	4629      	mov	r1, r5
 80162ca:	9805      	ldr	r0, [sp, #20]
 80162cc:	461a      	mov	r2, r3
 80162ce:	f002 fce3 	bl	8018c98 <__pow5mult>
 80162d2:	4605      	mov	r5, r0
 80162d4:	2800      	cmp	r0, #0
 80162d6:	d0b5      	beq.n	8016244 <_strtod_l+0x66c>
 80162d8:	4601      	mov	r1, r0
 80162da:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80162dc:	9805      	ldr	r0, [sp, #20]
 80162de:	f002 fc31 	bl	8018b44 <__multiply>
 80162e2:	900f      	str	r0, [sp, #60]	@ 0x3c
 80162e4:	2800      	cmp	r0, #0
 80162e6:	f43f ae87 	beq.w	8015ff8 <_strtod_l+0x420>
 80162ea:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80162ec:	9805      	ldr	r0, [sp, #20]
 80162ee:	f002 fb15 	bl	801891c <_Bfree>
 80162f2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80162f4:	9312      	str	r3, [sp, #72]	@ 0x48
 80162f6:	2f00      	cmp	r7, #0
 80162f8:	dc1b      	bgt.n	8016332 <_strtod_l+0x75a>
 80162fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80162fc:	2b00      	cmp	r3, #0
 80162fe:	dd21      	ble.n	8016344 <_strtod_l+0x76c>
 8016300:	4631      	mov	r1, r6
 8016302:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8016304:	9805      	ldr	r0, [sp, #20]
 8016306:	f002 fcc7 	bl	8018c98 <__pow5mult>
 801630a:	4606      	mov	r6, r0
 801630c:	b9d0      	cbnz	r0, 8016344 <_strtod_l+0x76c>
 801630e:	2600      	movs	r6, #0
 8016310:	e672      	b.n	8015ff8 <_strtod_l+0x420>
 8016312:	f1c7 477f 	rsb	r7, r7, #4278190080	@ 0xff000000
 8016316:	f507 077f 	add.w	r7, r7, #16711680	@ 0xff0000
 801631a:	f507 477b 	add.w	r7, r7, #64256	@ 0xfb00
 801631e:	37e2      	adds	r7, #226	@ 0xe2
 8016320:	fa02 f107 	lsl.w	r1, r2, r7
 8016324:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016326:	920c      	str	r2, [sp, #48]	@ 0x30
 8016328:	e7b8      	b.n	801629c <_strtod_l+0x6c4>
 801632a:	2200      	movs	r2, #0
 801632c:	920b      	str	r2, [sp, #44]	@ 0x2c
 801632e:	2201      	movs	r2, #1
 8016330:	e7f9      	b.n	8016326 <_strtod_l+0x74e>
 8016332:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8016334:	9805      	ldr	r0, [sp, #20]
 8016336:	463a      	mov	r2, r7
 8016338:	f002 fd08 	bl	8018d4c <__lshift>
 801633c:	9012      	str	r0, [sp, #72]	@ 0x48
 801633e:	2800      	cmp	r0, #0
 8016340:	d1db      	bne.n	80162fa <_strtod_l+0x722>
 8016342:	e659      	b.n	8015ff8 <_strtod_l+0x420>
 8016344:	f1b8 0f00 	cmp.w	r8, #0
 8016348:	dd07      	ble.n	801635a <_strtod_l+0x782>
 801634a:	4631      	mov	r1, r6
 801634c:	9805      	ldr	r0, [sp, #20]
 801634e:	4642      	mov	r2, r8
 8016350:	f002 fcfc 	bl	8018d4c <__lshift>
 8016354:	4606      	mov	r6, r0
 8016356:	2800      	cmp	r0, #0
 8016358:	d0d9      	beq.n	801630e <_strtod_l+0x736>
 801635a:	f1b9 0f00 	cmp.w	r9, #0
 801635e:	dd08      	ble.n	8016372 <_strtod_l+0x79a>
 8016360:	4629      	mov	r1, r5
 8016362:	9805      	ldr	r0, [sp, #20]
 8016364:	464a      	mov	r2, r9
 8016366:	f002 fcf1 	bl	8018d4c <__lshift>
 801636a:	4605      	mov	r5, r0
 801636c:	2800      	cmp	r0, #0
 801636e:	f43f ae43 	beq.w	8015ff8 <_strtod_l+0x420>
 8016372:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8016374:	9805      	ldr	r0, [sp, #20]
 8016376:	4632      	mov	r2, r6
 8016378:	f002 fd70 	bl	8018e5c <__mdiff>
 801637c:	4604      	mov	r4, r0
 801637e:	2800      	cmp	r0, #0
 8016380:	f43f ae3a 	beq.w	8015ff8 <_strtod_l+0x420>
 8016384:	2300      	movs	r3, #0
 8016386:	f8d0 800c 	ldr.w	r8, [r0, #12]
 801638a:	60c3      	str	r3, [r0, #12]
 801638c:	4629      	mov	r1, r5
 801638e:	f002 fd49 	bl	8018e24 <__mcmp>
 8016392:	2800      	cmp	r0, #0
 8016394:	da4e      	bge.n	8016434 <_strtod_l+0x85c>
 8016396:	ea58 080a 	orrs.w	r8, r8, sl
 801639a:	d174      	bne.n	8016486 <_strtod_l+0x8ae>
 801639c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80163a0:	2b00      	cmp	r3, #0
 80163a2:	d170      	bne.n	8016486 <_strtod_l+0x8ae>
 80163a4:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80163a8:	0d1b      	lsrs	r3, r3, #20
 80163aa:	051b      	lsls	r3, r3, #20
 80163ac:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 80163b0:	d969      	bls.n	8016486 <_strtod_l+0x8ae>
 80163b2:	6963      	ldr	r3, [r4, #20]
 80163b4:	b913      	cbnz	r3, 80163bc <_strtod_l+0x7e4>
 80163b6:	6923      	ldr	r3, [r4, #16]
 80163b8:	2b01      	cmp	r3, #1
 80163ba:	dd64      	ble.n	8016486 <_strtod_l+0x8ae>
 80163bc:	4621      	mov	r1, r4
 80163be:	2201      	movs	r2, #1
 80163c0:	9805      	ldr	r0, [sp, #20]
 80163c2:	f002 fcc3 	bl	8018d4c <__lshift>
 80163c6:	4629      	mov	r1, r5
 80163c8:	4604      	mov	r4, r0
 80163ca:	f002 fd2b 	bl	8018e24 <__mcmp>
 80163ce:	2800      	cmp	r0, #0
 80163d0:	dd59      	ble.n	8016486 <_strtod_l+0x8ae>
 80163d2:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80163d6:	9a06      	ldr	r2, [sp, #24]
 80163d8:	0d1b      	lsrs	r3, r3, #20
 80163da:	051b      	lsls	r3, r3, #20
 80163dc:	2a00      	cmp	r2, #0
 80163de:	d070      	beq.n	80164c2 <_strtod_l+0x8ea>
 80163e0:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 80163e4:	d86d      	bhi.n	80164c2 <_strtod_l+0x8ea>
 80163e6:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 80163ea:	f67f ae99 	bls.w	8016120 <_strtod_l+0x548>
 80163ee:	ed9f 7b0c 	vldr	d7, [pc, #48]	@ 8016420 <_strtod_l+0x848>
 80163f2:	ec4b ab16 	vmov	d6, sl, fp
 80163f6:	4b0e      	ldr	r3, [pc, #56]	@ (8016430 <_strtod_l+0x858>)
 80163f8:	ee26 7b07 	vmul.f64	d7, d6, d7
 80163fc:	ee17 2a90 	vmov	r2, s15
 8016400:	4013      	ands	r3, r2
 8016402:	ec5b ab17 	vmov	sl, fp, d7
 8016406:	2b00      	cmp	r3, #0
 8016408:	f47f ae01 	bne.w	801600e <_strtod_l+0x436>
 801640c:	9a05      	ldr	r2, [sp, #20]
 801640e:	2322      	movs	r3, #34	@ 0x22
 8016410:	6013      	str	r3, [r2, #0]
 8016412:	e5fc      	b.n	801600e <_strtod_l+0x436>
 8016414:	f3af 8000 	nop.w
 8016418:	ffc00000 	.word	0xffc00000
 801641c:	41dfffff 	.word	0x41dfffff
 8016420:	00000000 	.word	0x00000000
 8016424:	39500000 	.word	0x39500000
 8016428:	0801b0b8 	.word	0x0801b0b8
 801642c:	fffffc02 	.word	0xfffffc02
 8016430:	7ff00000 	.word	0x7ff00000
 8016434:	46d9      	mov	r9, fp
 8016436:	d15d      	bne.n	80164f4 <_strtod_l+0x91c>
 8016438:	f3cb 0313 	ubfx	r3, fp, #0, #20
 801643c:	f1b8 0f00 	cmp.w	r8, #0
 8016440:	d02a      	beq.n	8016498 <_strtod_l+0x8c0>
 8016442:	4aab      	ldr	r2, [pc, #684]	@ (80166f0 <_strtod_l+0xb18>)
 8016444:	4293      	cmp	r3, r2
 8016446:	d12a      	bne.n	801649e <_strtod_l+0x8c6>
 8016448:	9b06      	ldr	r3, [sp, #24]
 801644a:	4652      	mov	r2, sl
 801644c:	b1fb      	cbz	r3, 801648e <_strtod_l+0x8b6>
 801644e:	4ba9      	ldr	r3, [pc, #676]	@ (80166f4 <_strtod_l+0xb1c>)
 8016450:	ea0b 0303 	and.w	r3, fp, r3
 8016454:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 8016458:	f04f 31ff 	mov.w	r1, #4294967295
 801645c:	d81a      	bhi.n	8016494 <_strtod_l+0x8bc>
 801645e:	0d1b      	lsrs	r3, r3, #20
 8016460:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8016464:	fa01 f303 	lsl.w	r3, r1, r3
 8016468:	429a      	cmp	r2, r3
 801646a:	d118      	bne.n	801649e <_strtod_l+0x8c6>
 801646c:	4ba2      	ldr	r3, [pc, #648]	@ (80166f8 <_strtod_l+0xb20>)
 801646e:	4599      	cmp	r9, r3
 8016470:	d102      	bne.n	8016478 <_strtod_l+0x8a0>
 8016472:	3201      	adds	r2, #1
 8016474:	f43f adc0 	beq.w	8015ff8 <_strtod_l+0x420>
 8016478:	4b9e      	ldr	r3, [pc, #632]	@ (80166f4 <_strtod_l+0xb1c>)
 801647a:	ea09 0303 	and.w	r3, r9, r3
 801647e:	f503 1b80 	add.w	fp, r3, #1048576	@ 0x100000
 8016482:	f04f 0a00 	mov.w	sl, #0
 8016486:	9b06      	ldr	r3, [sp, #24]
 8016488:	2b00      	cmp	r3, #0
 801648a:	d1b0      	bne.n	80163ee <_strtod_l+0x816>
 801648c:	e5bf      	b.n	801600e <_strtod_l+0x436>
 801648e:	f04f 33ff 	mov.w	r3, #4294967295
 8016492:	e7e9      	b.n	8016468 <_strtod_l+0x890>
 8016494:	460b      	mov	r3, r1
 8016496:	e7e7      	b.n	8016468 <_strtod_l+0x890>
 8016498:	ea53 030a 	orrs.w	r3, r3, sl
 801649c:	d099      	beq.n	80163d2 <_strtod_l+0x7fa>
 801649e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80164a0:	b1c3      	cbz	r3, 80164d4 <_strtod_l+0x8fc>
 80164a2:	ea13 0f09 	tst.w	r3, r9
 80164a6:	d0ee      	beq.n	8016486 <_strtod_l+0x8ae>
 80164a8:	9a06      	ldr	r2, [sp, #24]
 80164aa:	4650      	mov	r0, sl
 80164ac:	4659      	mov	r1, fp
 80164ae:	f1b8 0f00 	cmp.w	r8, #0
 80164b2:	d013      	beq.n	80164dc <_strtod_l+0x904>
 80164b4:	f7ff fb73 	bl	8015b9e <sulp>
 80164b8:	ee39 7b00 	vadd.f64	d7, d9, d0
 80164bc:	ec5b ab17 	vmov	sl, fp, d7
 80164c0:	e7e1      	b.n	8016486 <_strtod_l+0x8ae>
 80164c2:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 80164c6:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 80164ca:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 80164ce:	f04f 3aff 	mov.w	sl, #4294967295
 80164d2:	e7d8      	b.n	8016486 <_strtod_l+0x8ae>
 80164d4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80164d6:	ea13 0f0a 	tst.w	r3, sl
 80164da:	e7e4      	b.n	80164a6 <_strtod_l+0x8ce>
 80164dc:	f7ff fb5f 	bl	8015b9e <sulp>
 80164e0:	ee39 0b40 	vsub.f64	d0, d9, d0
 80164e4:	eeb5 0b40 	vcmp.f64	d0, #0.0
 80164e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80164ec:	ec5b ab10 	vmov	sl, fp, d0
 80164f0:	d1c9      	bne.n	8016486 <_strtod_l+0x8ae>
 80164f2:	e615      	b.n	8016120 <_strtod_l+0x548>
 80164f4:	4629      	mov	r1, r5
 80164f6:	4620      	mov	r0, r4
 80164f8:	f002 fe0c 	bl	8019114 <__ratio>
 80164fc:	eeb0 7b00 	vmov.f64	d7, #0	@ 0x40000000  2.0
 8016500:	eeb4 0bc7 	vcmpe.f64	d0, d7
 8016504:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016508:	d85d      	bhi.n	80165c6 <_strtod_l+0x9ee>
 801650a:	f1b8 0f00 	cmp.w	r8, #0
 801650e:	d164      	bne.n	80165da <_strtod_l+0xa02>
 8016510:	f1ba 0f00 	cmp.w	sl, #0
 8016514:	d14b      	bne.n	80165ae <_strtod_l+0x9d6>
 8016516:	f3cb 0313 	ubfx	r3, fp, #0, #20
 801651a:	eeb7 8b00 	vmov.f64	d8, #112	@ 0x3f800000  1.0
 801651e:	2b00      	cmp	r3, #0
 8016520:	d160      	bne.n	80165e4 <_strtod_l+0xa0c>
 8016522:	eeb4 0bc8 	vcmpe.f64	d0, d8
 8016526:	eeb6 8b00 	vmov.f64	d8, #96	@ 0x3f000000  0.5
 801652a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801652e:	d401      	bmi.n	8016534 <_strtod_l+0x95c>
 8016530:	ee20 8b08 	vmul.f64	d8, d0, d8
 8016534:	eeb1 ab48 	vneg.f64	d10, d8
 8016538:	486e      	ldr	r0, [pc, #440]	@ (80166f4 <_strtod_l+0xb1c>)
 801653a:	4970      	ldr	r1, [pc, #448]	@ (80166fc <_strtod_l+0xb24>)
 801653c:	ea09 0700 	and.w	r7, r9, r0
 8016540:	428f      	cmp	r7, r1
 8016542:	ec53 2b1a 	vmov	r2, r3, d10
 8016546:	d17d      	bne.n	8016644 <_strtod_l+0xa6c>
 8016548:	f1a9 7b54 	sub.w	fp, r9, #55574528	@ 0x3500000
 801654c:	ec4b ab1c 	vmov	d12, sl, fp
 8016550:	eeb0 0b4c 	vmov.f64	d0, d12
 8016554:	f002 fd16 	bl	8018f84 <__ulp>
 8016558:	4866      	ldr	r0, [pc, #408]	@ (80166f4 <_strtod_l+0xb1c>)
 801655a:	eea0 cb0a 	vfma.f64	d12, d0, d10
 801655e:	ee1c 3a90 	vmov	r3, s25
 8016562:	4a67      	ldr	r2, [pc, #412]	@ (8016700 <_strtod_l+0xb28>)
 8016564:	ea03 0100 	and.w	r1, r3, r0
 8016568:	4291      	cmp	r1, r2
 801656a:	ec5b ab1c 	vmov	sl, fp, d12
 801656e:	d93c      	bls.n	80165ea <_strtod_l+0xa12>
 8016570:	ee19 2a90 	vmov	r2, s19
 8016574:	4b60      	ldr	r3, [pc, #384]	@ (80166f8 <_strtod_l+0xb20>)
 8016576:	429a      	cmp	r2, r3
 8016578:	d104      	bne.n	8016584 <_strtod_l+0x9ac>
 801657a:	ee19 3a10 	vmov	r3, s18
 801657e:	3301      	adds	r3, #1
 8016580:	f43f ad3a 	beq.w	8015ff8 <_strtod_l+0x420>
 8016584:	f8df b170 	ldr.w	fp, [pc, #368]	@ 80166f8 <_strtod_l+0xb20>
 8016588:	f04f 3aff 	mov.w	sl, #4294967295
 801658c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801658e:	9805      	ldr	r0, [sp, #20]
 8016590:	f002 f9c4 	bl	801891c <_Bfree>
 8016594:	9805      	ldr	r0, [sp, #20]
 8016596:	4631      	mov	r1, r6
 8016598:	f002 f9c0 	bl	801891c <_Bfree>
 801659c:	9805      	ldr	r0, [sp, #20]
 801659e:	4629      	mov	r1, r5
 80165a0:	f002 f9bc 	bl	801891c <_Bfree>
 80165a4:	9805      	ldr	r0, [sp, #20]
 80165a6:	4621      	mov	r1, r4
 80165a8:	f002 f9b8 	bl	801891c <_Bfree>
 80165ac:	e625      	b.n	80161fa <_strtod_l+0x622>
 80165ae:	f1ba 0f01 	cmp.w	sl, #1
 80165b2:	d103      	bne.n	80165bc <_strtod_l+0x9e4>
 80165b4:	f1bb 0f00 	cmp.w	fp, #0
 80165b8:	f43f adb2 	beq.w	8016120 <_strtod_l+0x548>
 80165bc:	eebf ab00 	vmov.f64	d10, #240	@ 0xbf800000 -1.0
 80165c0:	eeb7 8b00 	vmov.f64	d8, #112	@ 0x3f800000  1.0
 80165c4:	e7b8      	b.n	8016538 <_strtod_l+0x960>
 80165c6:	eeb6 8b00 	vmov.f64	d8, #96	@ 0x3f000000  0.5
 80165ca:	ee20 8b08 	vmul.f64	d8, d0, d8
 80165ce:	f1b8 0f00 	cmp.w	r8, #0
 80165d2:	d0af      	beq.n	8016534 <_strtod_l+0x95c>
 80165d4:	eeb0 ab48 	vmov.f64	d10, d8
 80165d8:	e7ae      	b.n	8016538 <_strtod_l+0x960>
 80165da:	eeb7 ab00 	vmov.f64	d10, #112	@ 0x3f800000  1.0
 80165de:	eeb0 8b4a 	vmov.f64	d8, d10
 80165e2:	e7a9      	b.n	8016538 <_strtod_l+0x960>
 80165e4:	eebf ab00 	vmov.f64	d10, #240	@ 0xbf800000 -1.0
 80165e8:	e7a6      	b.n	8016538 <_strtod_l+0x960>
 80165ea:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 80165ee:	9b06      	ldr	r3, [sp, #24]
 80165f0:	46d9      	mov	r9, fp
 80165f2:	2b00      	cmp	r3, #0
 80165f4:	d1ca      	bne.n	801658c <_strtod_l+0x9b4>
 80165f6:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80165fa:	0d1b      	lsrs	r3, r3, #20
 80165fc:	051b      	lsls	r3, r3, #20
 80165fe:	429f      	cmp	r7, r3
 8016600:	d1c4      	bne.n	801658c <_strtod_l+0x9b4>
 8016602:	ec51 0b18 	vmov	r0, r1, d8
 8016606:	f7ea f8bf 	bl	8000788 <__aeabi_d2lz>
 801660a:	f7ea f877 	bl	80006fc <__aeabi_l2d>
 801660e:	f3cb 0913 	ubfx	r9, fp, #0, #20
 8016612:	ec41 0b17 	vmov	d7, r0, r1
 8016616:	ea49 090a 	orr.w	r9, r9, sl
 801661a:	ea59 0908 	orrs.w	r9, r9, r8
 801661e:	ee38 8b47 	vsub.f64	d8, d8, d7
 8016622:	d03c      	beq.n	801669e <_strtod_l+0xac6>
 8016624:	ed9f 7b2c 	vldr	d7, [pc, #176]	@ 80166d8 <_strtod_l+0xb00>
 8016628:	eeb4 8bc7 	vcmpe.f64	d8, d7
 801662c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016630:	f53f aced 	bmi.w	801600e <_strtod_l+0x436>
 8016634:	ed9f 7b2a 	vldr	d7, [pc, #168]	@ 80166e0 <_strtod_l+0xb08>
 8016638:	eeb4 8bc7 	vcmpe.f64	d8, d7
 801663c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016640:	dda4      	ble.n	801658c <_strtod_l+0x9b4>
 8016642:	e4e4      	b.n	801600e <_strtod_l+0x436>
 8016644:	9906      	ldr	r1, [sp, #24]
 8016646:	b1e1      	cbz	r1, 8016682 <_strtod_l+0xaaa>
 8016648:	f1b7 6fd4 	cmp.w	r7, #111149056	@ 0x6a00000
 801664c:	d819      	bhi.n	8016682 <_strtod_l+0xaaa>
 801664e:	eeb4 8bcb 	vcmpe.f64	d8, d11
 8016652:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016656:	d811      	bhi.n	801667c <_strtod_l+0xaa4>
 8016658:	eebc 8bc8 	vcvt.u32.f64	s16, d8
 801665c:	ee18 3a10 	vmov	r3, s16
 8016660:	2b01      	cmp	r3, #1
 8016662:	bf38      	it	cc
 8016664:	2301      	movcc	r3, #1
 8016666:	ee08 3a10 	vmov	s16, r3
 801666a:	eeb8 8b48 	vcvt.f64.u32	d8, s16
 801666e:	f1b8 0f00 	cmp.w	r8, #0
 8016672:	d111      	bne.n	8016698 <_strtod_l+0xac0>
 8016674:	eeb1 7b48 	vneg.f64	d7, d8
 8016678:	ec53 2b17 	vmov	r2, r3, d7
 801667c:	f103 61d6 	add.w	r1, r3, #112197632	@ 0x6b00000
 8016680:	1bcb      	subs	r3, r1, r7
 8016682:	eeb0 0b49 	vmov.f64	d0, d9
 8016686:	ec43 2b1a 	vmov	d10, r2, r3
 801668a:	f002 fc7b 	bl	8018f84 <__ulp>
 801668e:	eeaa 9b00 	vfma.f64	d9, d10, d0
 8016692:	ec5b ab19 	vmov	sl, fp, d9
 8016696:	e7aa      	b.n	80165ee <_strtod_l+0xa16>
 8016698:	eeb0 7b48 	vmov.f64	d7, d8
 801669c:	e7ec      	b.n	8016678 <_strtod_l+0xaa0>
 801669e:	ed9f 7b12 	vldr	d7, [pc, #72]	@ 80166e8 <_strtod_l+0xb10>
 80166a2:	eeb4 8bc7 	vcmpe.f64	d8, d7
 80166a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80166aa:	f57f af6f 	bpl.w	801658c <_strtod_l+0x9b4>
 80166ae:	e4ae      	b.n	801600e <_strtod_l+0x436>
 80166b0:	2300      	movs	r3, #0
 80166b2:	9308      	str	r3, [sp, #32]
 80166b4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80166b6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80166b8:	6013      	str	r3, [r2, #0]
 80166ba:	f7ff bacc 	b.w	8015c56 <_strtod_l+0x7e>
 80166be:	2a65      	cmp	r2, #101	@ 0x65
 80166c0:	f43f abbc 	beq.w	8015e3c <_strtod_l+0x264>
 80166c4:	2a45      	cmp	r2, #69	@ 0x45
 80166c6:	f43f abb9 	beq.w	8015e3c <_strtod_l+0x264>
 80166ca:	2301      	movs	r3, #1
 80166cc:	9306      	str	r3, [sp, #24]
 80166ce:	f7ff bbf0 	b.w	8015eb2 <_strtod_l+0x2da>
 80166d2:	bf00      	nop
 80166d4:	f3af 8000 	nop.w
 80166d8:	94a03595 	.word	0x94a03595
 80166dc:	3fdfffff 	.word	0x3fdfffff
 80166e0:	35afe535 	.word	0x35afe535
 80166e4:	3fe00000 	.word	0x3fe00000
 80166e8:	94a03595 	.word	0x94a03595
 80166ec:	3fcfffff 	.word	0x3fcfffff
 80166f0:	000fffff 	.word	0x000fffff
 80166f4:	7ff00000 	.word	0x7ff00000
 80166f8:	7fefffff 	.word	0x7fefffff
 80166fc:	7fe00000 	.word	0x7fe00000
 8016700:	7c9fffff 	.word	0x7c9fffff

08016704 <strtod>:
 8016704:	460a      	mov	r2, r1
 8016706:	4601      	mov	r1, r0
 8016708:	4802      	ldr	r0, [pc, #8]	@ (8016714 <strtod+0x10>)
 801670a:	4b03      	ldr	r3, [pc, #12]	@ (8016718 <strtod+0x14>)
 801670c:	6800      	ldr	r0, [r0, #0]
 801670e:	f7ff ba63 	b.w	8015bd8 <_strtod_l>
 8016712:	bf00      	nop
 8016714:	2400027c 	.word	0x2400027c
 8016718:	24000110 	.word	0x24000110

0801671c <_strtol_l.constprop.0>:
 801671c:	2b24      	cmp	r3, #36	@ 0x24
 801671e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016722:	4686      	mov	lr, r0
 8016724:	4690      	mov	r8, r2
 8016726:	d801      	bhi.n	801672c <_strtol_l.constprop.0+0x10>
 8016728:	2b01      	cmp	r3, #1
 801672a:	d106      	bne.n	801673a <_strtol_l.constprop.0+0x1e>
 801672c:	f000 fe46 	bl	80173bc <__errno>
 8016730:	2316      	movs	r3, #22
 8016732:	6003      	str	r3, [r0, #0]
 8016734:	2000      	movs	r0, #0
 8016736:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801673a:	4834      	ldr	r0, [pc, #208]	@ (801680c <_strtol_l.constprop.0+0xf0>)
 801673c:	460d      	mov	r5, r1
 801673e:	462a      	mov	r2, r5
 8016740:	f815 4b01 	ldrb.w	r4, [r5], #1
 8016744:	5d06      	ldrb	r6, [r0, r4]
 8016746:	f016 0608 	ands.w	r6, r6, #8
 801674a:	d1f8      	bne.n	801673e <_strtol_l.constprop.0+0x22>
 801674c:	2c2d      	cmp	r4, #45	@ 0x2d
 801674e:	d12d      	bne.n	80167ac <_strtol_l.constprop.0+0x90>
 8016750:	782c      	ldrb	r4, [r5, #0]
 8016752:	2601      	movs	r6, #1
 8016754:	1c95      	adds	r5, r2, #2
 8016756:	f033 0210 	bics.w	r2, r3, #16
 801675a:	d109      	bne.n	8016770 <_strtol_l.constprop.0+0x54>
 801675c:	2c30      	cmp	r4, #48	@ 0x30
 801675e:	d12a      	bne.n	80167b6 <_strtol_l.constprop.0+0x9a>
 8016760:	782a      	ldrb	r2, [r5, #0]
 8016762:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8016766:	2a58      	cmp	r2, #88	@ 0x58
 8016768:	d125      	bne.n	80167b6 <_strtol_l.constprop.0+0x9a>
 801676a:	786c      	ldrb	r4, [r5, #1]
 801676c:	2310      	movs	r3, #16
 801676e:	3502      	adds	r5, #2
 8016770:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8016774:	f10c 3cff 	add.w	ip, ip, #4294967295
 8016778:	2200      	movs	r2, #0
 801677a:	fbbc f9f3 	udiv	r9, ip, r3
 801677e:	4610      	mov	r0, r2
 8016780:	fb03 ca19 	mls	sl, r3, r9, ip
 8016784:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8016788:	2f09      	cmp	r7, #9
 801678a:	d81b      	bhi.n	80167c4 <_strtol_l.constprop.0+0xa8>
 801678c:	463c      	mov	r4, r7
 801678e:	42a3      	cmp	r3, r4
 8016790:	dd27      	ble.n	80167e2 <_strtol_l.constprop.0+0xc6>
 8016792:	1c57      	adds	r7, r2, #1
 8016794:	d007      	beq.n	80167a6 <_strtol_l.constprop.0+0x8a>
 8016796:	4581      	cmp	r9, r0
 8016798:	d320      	bcc.n	80167dc <_strtol_l.constprop.0+0xc0>
 801679a:	d101      	bne.n	80167a0 <_strtol_l.constprop.0+0x84>
 801679c:	45a2      	cmp	sl, r4
 801679e:	db1d      	blt.n	80167dc <_strtol_l.constprop.0+0xc0>
 80167a0:	fb00 4003 	mla	r0, r0, r3, r4
 80167a4:	2201      	movs	r2, #1
 80167a6:	f815 4b01 	ldrb.w	r4, [r5], #1
 80167aa:	e7eb      	b.n	8016784 <_strtol_l.constprop.0+0x68>
 80167ac:	2c2b      	cmp	r4, #43	@ 0x2b
 80167ae:	bf04      	itt	eq
 80167b0:	782c      	ldrbeq	r4, [r5, #0]
 80167b2:	1c95      	addeq	r5, r2, #2
 80167b4:	e7cf      	b.n	8016756 <_strtol_l.constprop.0+0x3a>
 80167b6:	2b00      	cmp	r3, #0
 80167b8:	d1da      	bne.n	8016770 <_strtol_l.constprop.0+0x54>
 80167ba:	2c30      	cmp	r4, #48	@ 0x30
 80167bc:	bf0c      	ite	eq
 80167be:	2308      	moveq	r3, #8
 80167c0:	230a      	movne	r3, #10
 80167c2:	e7d5      	b.n	8016770 <_strtol_l.constprop.0+0x54>
 80167c4:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 80167c8:	2f19      	cmp	r7, #25
 80167ca:	d801      	bhi.n	80167d0 <_strtol_l.constprop.0+0xb4>
 80167cc:	3c37      	subs	r4, #55	@ 0x37
 80167ce:	e7de      	b.n	801678e <_strtol_l.constprop.0+0x72>
 80167d0:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 80167d4:	2f19      	cmp	r7, #25
 80167d6:	d804      	bhi.n	80167e2 <_strtol_l.constprop.0+0xc6>
 80167d8:	3c57      	subs	r4, #87	@ 0x57
 80167da:	e7d8      	b.n	801678e <_strtol_l.constprop.0+0x72>
 80167dc:	f04f 32ff 	mov.w	r2, #4294967295
 80167e0:	e7e1      	b.n	80167a6 <_strtol_l.constprop.0+0x8a>
 80167e2:	1c53      	adds	r3, r2, #1
 80167e4:	d108      	bne.n	80167f8 <_strtol_l.constprop.0+0xdc>
 80167e6:	2322      	movs	r3, #34	@ 0x22
 80167e8:	f8ce 3000 	str.w	r3, [lr]
 80167ec:	4660      	mov	r0, ip
 80167ee:	f1b8 0f00 	cmp.w	r8, #0
 80167f2:	d0a0      	beq.n	8016736 <_strtol_l.constprop.0+0x1a>
 80167f4:	1e69      	subs	r1, r5, #1
 80167f6:	e006      	b.n	8016806 <_strtol_l.constprop.0+0xea>
 80167f8:	b106      	cbz	r6, 80167fc <_strtol_l.constprop.0+0xe0>
 80167fa:	4240      	negs	r0, r0
 80167fc:	f1b8 0f00 	cmp.w	r8, #0
 8016800:	d099      	beq.n	8016736 <_strtol_l.constprop.0+0x1a>
 8016802:	2a00      	cmp	r2, #0
 8016804:	d1f6      	bne.n	80167f4 <_strtol_l.constprop.0+0xd8>
 8016806:	f8c8 1000 	str.w	r1, [r8]
 801680a:	e794      	b.n	8016736 <_strtol_l.constprop.0+0x1a>
 801680c:	0801b0e1 	.word	0x0801b0e1

08016810 <strtol>:
 8016810:	4613      	mov	r3, r2
 8016812:	460a      	mov	r2, r1
 8016814:	4601      	mov	r1, r0
 8016816:	4802      	ldr	r0, [pc, #8]	@ (8016820 <strtol+0x10>)
 8016818:	6800      	ldr	r0, [r0, #0]
 801681a:	f7ff bf7f 	b.w	801671c <_strtol_l.constprop.0>
 801681e:	bf00      	nop
 8016820:	2400027c 	.word	0x2400027c

08016824 <__cvt>:
 8016824:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016826:	ed2d 8b02 	vpush	{d8}
 801682a:	eeb0 8b40 	vmov.f64	d8, d0
 801682e:	b085      	sub	sp, #20
 8016830:	4617      	mov	r7, r2
 8016832:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8016834:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8016836:	ee18 2a90 	vmov	r2, s17
 801683a:	f025 0520 	bic.w	r5, r5, #32
 801683e:	2a00      	cmp	r2, #0
 8016840:	bfb6      	itet	lt
 8016842:	222d      	movlt	r2, #45	@ 0x2d
 8016844:	2200      	movge	r2, #0
 8016846:	eeb1 8b40 	vneglt.f64	d8, d0
 801684a:	2d46      	cmp	r5, #70	@ 0x46
 801684c:	460c      	mov	r4, r1
 801684e:	701a      	strb	r2, [r3, #0]
 8016850:	d004      	beq.n	801685c <__cvt+0x38>
 8016852:	2d45      	cmp	r5, #69	@ 0x45
 8016854:	d100      	bne.n	8016858 <__cvt+0x34>
 8016856:	3401      	adds	r4, #1
 8016858:	2102      	movs	r1, #2
 801685a:	e000      	b.n	801685e <__cvt+0x3a>
 801685c:	2103      	movs	r1, #3
 801685e:	ab03      	add	r3, sp, #12
 8016860:	9301      	str	r3, [sp, #4]
 8016862:	ab02      	add	r3, sp, #8
 8016864:	9300      	str	r3, [sp, #0]
 8016866:	4622      	mov	r2, r4
 8016868:	4633      	mov	r3, r6
 801686a:	eeb0 0b48 	vmov.f64	d0, d8
 801686e:	f000 fe73 	bl	8017558 <_dtoa_r>
 8016872:	2d47      	cmp	r5, #71	@ 0x47
 8016874:	d114      	bne.n	80168a0 <__cvt+0x7c>
 8016876:	07fb      	lsls	r3, r7, #31
 8016878:	d50a      	bpl.n	8016890 <__cvt+0x6c>
 801687a:	1902      	adds	r2, r0, r4
 801687c:	eeb5 8b40 	vcmp.f64	d8, #0.0
 8016880:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016884:	bf08      	it	eq
 8016886:	9203      	streq	r2, [sp, #12]
 8016888:	2130      	movs	r1, #48	@ 0x30
 801688a:	9b03      	ldr	r3, [sp, #12]
 801688c:	4293      	cmp	r3, r2
 801688e:	d319      	bcc.n	80168c4 <__cvt+0xa0>
 8016890:	9b03      	ldr	r3, [sp, #12]
 8016892:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8016894:	1a1b      	subs	r3, r3, r0
 8016896:	6013      	str	r3, [r2, #0]
 8016898:	b005      	add	sp, #20
 801689a:	ecbd 8b02 	vpop	{d8}
 801689e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80168a0:	2d46      	cmp	r5, #70	@ 0x46
 80168a2:	eb00 0204 	add.w	r2, r0, r4
 80168a6:	d1e9      	bne.n	801687c <__cvt+0x58>
 80168a8:	7803      	ldrb	r3, [r0, #0]
 80168aa:	2b30      	cmp	r3, #48	@ 0x30
 80168ac:	d107      	bne.n	80168be <__cvt+0x9a>
 80168ae:	eeb5 8b40 	vcmp.f64	d8, #0.0
 80168b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168b6:	bf1c      	itt	ne
 80168b8:	f1c4 0401 	rsbne	r4, r4, #1
 80168bc:	6034      	strne	r4, [r6, #0]
 80168be:	6833      	ldr	r3, [r6, #0]
 80168c0:	441a      	add	r2, r3
 80168c2:	e7db      	b.n	801687c <__cvt+0x58>
 80168c4:	1c5c      	adds	r4, r3, #1
 80168c6:	9403      	str	r4, [sp, #12]
 80168c8:	7019      	strb	r1, [r3, #0]
 80168ca:	e7de      	b.n	801688a <__cvt+0x66>

080168cc <__exponent>:
 80168cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80168ce:	2900      	cmp	r1, #0
 80168d0:	bfba      	itte	lt
 80168d2:	4249      	neglt	r1, r1
 80168d4:	232d      	movlt	r3, #45	@ 0x2d
 80168d6:	232b      	movge	r3, #43	@ 0x2b
 80168d8:	2909      	cmp	r1, #9
 80168da:	7002      	strb	r2, [r0, #0]
 80168dc:	7043      	strb	r3, [r0, #1]
 80168de:	dd29      	ble.n	8016934 <__exponent+0x68>
 80168e0:	f10d 0307 	add.w	r3, sp, #7
 80168e4:	461d      	mov	r5, r3
 80168e6:	270a      	movs	r7, #10
 80168e8:	461a      	mov	r2, r3
 80168ea:	fbb1 f6f7 	udiv	r6, r1, r7
 80168ee:	fb07 1416 	mls	r4, r7, r6, r1
 80168f2:	3430      	adds	r4, #48	@ 0x30
 80168f4:	f802 4c01 	strb.w	r4, [r2, #-1]
 80168f8:	460c      	mov	r4, r1
 80168fa:	2c63      	cmp	r4, #99	@ 0x63
 80168fc:	f103 33ff 	add.w	r3, r3, #4294967295
 8016900:	4631      	mov	r1, r6
 8016902:	dcf1      	bgt.n	80168e8 <__exponent+0x1c>
 8016904:	3130      	adds	r1, #48	@ 0x30
 8016906:	1e94      	subs	r4, r2, #2
 8016908:	f803 1c01 	strb.w	r1, [r3, #-1]
 801690c:	1c41      	adds	r1, r0, #1
 801690e:	4623      	mov	r3, r4
 8016910:	42ab      	cmp	r3, r5
 8016912:	d30a      	bcc.n	801692a <__exponent+0x5e>
 8016914:	f10d 0309 	add.w	r3, sp, #9
 8016918:	1a9b      	subs	r3, r3, r2
 801691a:	42ac      	cmp	r4, r5
 801691c:	bf88      	it	hi
 801691e:	2300      	movhi	r3, #0
 8016920:	3302      	adds	r3, #2
 8016922:	4403      	add	r3, r0
 8016924:	1a18      	subs	r0, r3, r0
 8016926:	b003      	add	sp, #12
 8016928:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801692a:	f813 6b01 	ldrb.w	r6, [r3], #1
 801692e:	f801 6f01 	strb.w	r6, [r1, #1]!
 8016932:	e7ed      	b.n	8016910 <__exponent+0x44>
 8016934:	2330      	movs	r3, #48	@ 0x30
 8016936:	3130      	adds	r1, #48	@ 0x30
 8016938:	7083      	strb	r3, [r0, #2]
 801693a:	70c1      	strb	r1, [r0, #3]
 801693c:	1d03      	adds	r3, r0, #4
 801693e:	e7f1      	b.n	8016924 <__exponent+0x58>

08016940 <_printf_float>:
 8016940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016944:	b08d      	sub	sp, #52	@ 0x34
 8016946:	460c      	mov	r4, r1
 8016948:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801694c:	4616      	mov	r6, r2
 801694e:	461f      	mov	r7, r3
 8016950:	4605      	mov	r5, r0
 8016952:	f000 fce9 	bl	8017328 <_localeconv_r>
 8016956:	f8d0 b000 	ldr.w	fp, [r0]
 801695a:	4658      	mov	r0, fp
 801695c:	f7e9 fd38 	bl	80003d0 <strlen>
 8016960:	2300      	movs	r3, #0
 8016962:	930a      	str	r3, [sp, #40]	@ 0x28
 8016964:	f8d8 3000 	ldr.w	r3, [r8]
 8016968:	f894 9018 	ldrb.w	r9, [r4, #24]
 801696c:	6822      	ldr	r2, [r4, #0]
 801696e:	9005      	str	r0, [sp, #20]
 8016970:	3307      	adds	r3, #7
 8016972:	f023 0307 	bic.w	r3, r3, #7
 8016976:	f103 0108 	add.w	r1, r3, #8
 801697a:	f8c8 1000 	str.w	r1, [r8]
 801697e:	ed93 0b00 	vldr	d0, [r3]
 8016982:	ed9f 6b97 	vldr	d6, [pc, #604]	@ 8016be0 <_printf_float+0x2a0>
 8016986:	eeb0 7bc0 	vabs.f64	d7, d0
 801698a:	eeb4 7b46 	vcmp.f64	d7, d6
 801698e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016992:	ed84 0b12 	vstr	d0, [r4, #72]	@ 0x48
 8016996:	dd24      	ble.n	80169e2 <_printf_float+0xa2>
 8016998:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
 801699c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169a0:	d502      	bpl.n	80169a8 <_printf_float+0x68>
 80169a2:	232d      	movs	r3, #45	@ 0x2d
 80169a4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80169a8:	498f      	ldr	r1, [pc, #572]	@ (8016be8 <_printf_float+0x2a8>)
 80169aa:	4b90      	ldr	r3, [pc, #576]	@ (8016bec <_printf_float+0x2ac>)
 80169ac:	f1b9 0f47 	cmp.w	r9, #71	@ 0x47
 80169b0:	bf94      	ite	ls
 80169b2:	4688      	movls	r8, r1
 80169b4:	4698      	movhi	r8, r3
 80169b6:	f022 0204 	bic.w	r2, r2, #4
 80169ba:	2303      	movs	r3, #3
 80169bc:	6123      	str	r3, [r4, #16]
 80169be:	6022      	str	r2, [r4, #0]
 80169c0:	f04f 0a00 	mov.w	sl, #0
 80169c4:	9700      	str	r7, [sp, #0]
 80169c6:	4633      	mov	r3, r6
 80169c8:	aa0b      	add	r2, sp, #44	@ 0x2c
 80169ca:	4621      	mov	r1, r4
 80169cc:	4628      	mov	r0, r5
 80169ce:	f000 f9d1 	bl	8016d74 <_printf_common>
 80169d2:	3001      	adds	r0, #1
 80169d4:	f040 8089 	bne.w	8016aea <_printf_float+0x1aa>
 80169d8:	f04f 30ff 	mov.w	r0, #4294967295
 80169dc:	b00d      	add	sp, #52	@ 0x34
 80169de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80169e2:	eeb4 0b40 	vcmp.f64	d0, d0
 80169e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169ea:	d709      	bvc.n	8016a00 <_printf_float+0xc0>
 80169ec:	ee10 3a90 	vmov	r3, s1
 80169f0:	2b00      	cmp	r3, #0
 80169f2:	bfbc      	itt	lt
 80169f4:	232d      	movlt	r3, #45	@ 0x2d
 80169f6:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80169fa:	497d      	ldr	r1, [pc, #500]	@ (8016bf0 <_printf_float+0x2b0>)
 80169fc:	4b7d      	ldr	r3, [pc, #500]	@ (8016bf4 <_printf_float+0x2b4>)
 80169fe:	e7d5      	b.n	80169ac <_printf_float+0x6c>
 8016a00:	6863      	ldr	r3, [r4, #4]
 8016a02:	1c59      	adds	r1, r3, #1
 8016a04:	f009 0adf 	and.w	sl, r9, #223	@ 0xdf
 8016a08:	d139      	bne.n	8016a7e <_printf_float+0x13e>
 8016a0a:	2306      	movs	r3, #6
 8016a0c:	6063      	str	r3, [r4, #4]
 8016a0e:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8016a12:	2300      	movs	r3, #0
 8016a14:	6022      	str	r2, [r4, #0]
 8016a16:	9303      	str	r3, [sp, #12]
 8016a18:	ab0a      	add	r3, sp, #40	@ 0x28
 8016a1a:	e9cd 9301 	strd	r9, r3, [sp, #4]
 8016a1e:	ab09      	add	r3, sp, #36	@ 0x24
 8016a20:	9300      	str	r3, [sp, #0]
 8016a22:	6861      	ldr	r1, [r4, #4]
 8016a24:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8016a28:	4628      	mov	r0, r5
 8016a2a:	f7ff fefb 	bl	8016824 <__cvt>
 8016a2e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8016a32:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016a34:	4680      	mov	r8, r0
 8016a36:	d129      	bne.n	8016a8c <_printf_float+0x14c>
 8016a38:	1cc8      	adds	r0, r1, #3
 8016a3a:	db02      	blt.n	8016a42 <_printf_float+0x102>
 8016a3c:	6863      	ldr	r3, [r4, #4]
 8016a3e:	4299      	cmp	r1, r3
 8016a40:	dd41      	ble.n	8016ac6 <_printf_float+0x186>
 8016a42:	f1a9 0902 	sub.w	r9, r9, #2
 8016a46:	fa5f f989 	uxtb.w	r9, r9
 8016a4a:	3901      	subs	r1, #1
 8016a4c:	464a      	mov	r2, r9
 8016a4e:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8016a52:	9109      	str	r1, [sp, #36]	@ 0x24
 8016a54:	f7ff ff3a 	bl	80168cc <__exponent>
 8016a58:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8016a5a:	1813      	adds	r3, r2, r0
 8016a5c:	2a01      	cmp	r2, #1
 8016a5e:	4682      	mov	sl, r0
 8016a60:	6123      	str	r3, [r4, #16]
 8016a62:	dc02      	bgt.n	8016a6a <_printf_float+0x12a>
 8016a64:	6822      	ldr	r2, [r4, #0]
 8016a66:	07d2      	lsls	r2, r2, #31
 8016a68:	d501      	bpl.n	8016a6e <_printf_float+0x12e>
 8016a6a:	3301      	adds	r3, #1
 8016a6c:	6123      	str	r3, [r4, #16]
 8016a6e:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8016a72:	2b00      	cmp	r3, #0
 8016a74:	d0a6      	beq.n	80169c4 <_printf_float+0x84>
 8016a76:	232d      	movs	r3, #45	@ 0x2d
 8016a78:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8016a7c:	e7a2      	b.n	80169c4 <_printf_float+0x84>
 8016a7e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8016a82:	d1c4      	bne.n	8016a0e <_printf_float+0xce>
 8016a84:	2b00      	cmp	r3, #0
 8016a86:	d1c2      	bne.n	8016a0e <_printf_float+0xce>
 8016a88:	2301      	movs	r3, #1
 8016a8a:	e7bf      	b.n	8016a0c <_printf_float+0xcc>
 8016a8c:	f1b9 0f65 	cmp.w	r9, #101	@ 0x65
 8016a90:	d9db      	bls.n	8016a4a <_printf_float+0x10a>
 8016a92:	f1b9 0f66 	cmp.w	r9, #102	@ 0x66
 8016a96:	d118      	bne.n	8016aca <_printf_float+0x18a>
 8016a98:	2900      	cmp	r1, #0
 8016a9a:	6863      	ldr	r3, [r4, #4]
 8016a9c:	dd0b      	ble.n	8016ab6 <_printf_float+0x176>
 8016a9e:	6121      	str	r1, [r4, #16]
 8016aa0:	b913      	cbnz	r3, 8016aa8 <_printf_float+0x168>
 8016aa2:	6822      	ldr	r2, [r4, #0]
 8016aa4:	07d0      	lsls	r0, r2, #31
 8016aa6:	d502      	bpl.n	8016aae <_printf_float+0x16e>
 8016aa8:	3301      	adds	r3, #1
 8016aaa:	440b      	add	r3, r1
 8016aac:	6123      	str	r3, [r4, #16]
 8016aae:	65a1      	str	r1, [r4, #88]	@ 0x58
 8016ab0:	f04f 0a00 	mov.w	sl, #0
 8016ab4:	e7db      	b.n	8016a6e <_printf_float+0x12e>
 8016ab6:	b913      	cbnz	r3, 8016abe <_printf_float+0x17e>
 8016ab8:	6822      	ldr	r2, [r4, #0]
 8016aba:	07d2      	lsls	r2, r2, #31
 8016abc:	d501      	bpl.n	8016ac2 <_printf_float+0x182>
 8016abe:	3302      	adds	r3, #2
 8016ac0:	e7f4      	b.n	8016aac <_printf_float+0x16c>
 8016ac2:	2301      	movs	r3, #1
 8016ac4:	e7f2      	b.n	8016aac <_printf_float+0x16c>
 8016ac6:	f04f 0967 	mov.w	r9, #103	@ 0x67
 8016aca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016acc:	4299      	cmp	r1, r3
 8016ace:	db05      	blt.n	8016adc <_printf_float+0x19c>
 8016ad0:	6823      	ldr	r3, [r4, #0]
 8016ad2:	6121      	str	r1, [r4, #16]
 8016ad4:	07d8      	lsls	r0, r3, #31
 8016ad6:	d5ea      	bpl.n	8016aae <_printf_float+0x16e>
 8016ad8:	1c4b      	adds	r3, r1, #1
 8016ada:	e7e7      	b.n	8016aac <_printf_float+0x16c>
 8016adc:	2900      	cmp	r1, #0
 8016ade:	bfd4      	ite	le
 8016ae0:	f1c1 0202 	rsble	r2, r1, #2
 8016ae4:	2201      	movgt	r2, #1
 8016ae6:	4413      	add	r3, r2
 8016ae8:	e7e0      	b.n	8016aac <_printf_float+0x16c>
 8016aea:	6823      	ldr	r3, [r4, #0]
 8016aec:	055a      	lsls	r2, r3, #21
 8016aee:	d407      	bmi.n	8016b00 <_printf_float+0x1c0>
 8016af0:	6923      	ldr	r3, [r4, #16]
 8016af2:	4642      	mov	r2, r8
 8016af4:	4631      	mov	r1, r6
 8016af6:	4628      	mov	r0, r5
 8016af8:	47b8      	blx	r7
 8016afa:	3001      	adds	r0, #1
 8016afc:	d12a      	bne.n	8016b54 <_printf_float+0x214>
 8016afe:	e76b      	b.n	80169d8 <_printf_float+0x98>
 8016b00:	f1b9 0f65 	cmp.w	r9, #101	@ 0x65
 8016b04:	f240 80e0 	bls.w	8016cc8 <_printf_float+0x388>
 8016b08:	ed94 7b12 	vldr	d7, [r4, #72]	@ 0x48
 8016b0c:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8016b10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b14:	d133      	bne.n	8016b7e <_printf_float+0x23e>
 8016b16:	4a38      	ldr	r2, [pc, #224]	@ (8016bf8 <_printf_float+0x2b8>)
 8016b18:	2301      	movs	r3, #1
 8016b1a:	4631      	mov	r1, r6
 8016b1c:	4628      	mov	r0, r5
 8016b1e:	47b8      	blx	r7
 8016b20:	3001      	adds	r0, #1
 8016b22:	f43f af59 	beq.w	80169d8 <_printf_float+0x98>
 8016b26:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8016b2a:	4543      	cmp	r3, r8
 8016b2c:	db02      	blt.n	8016b34 <_printf_float+0x1f4>
 8016b2e:	6823      	ldr	r3, [r4, #0]
 8016b30:	07d8      	lsls	r0, r3, #31
 8016b32:	d50f      	bpl.n	8016b54 <_printf_float+0x214>
 8016b34:	9b05      	ldr	r3, [sp, #20]
 8016b36:	465a      	mov	r2, fp
 8016b38:	4631      	mov	r1, r6
 8016b3a:	4628      	mov	r0, r5
 8016b3c:	47b8      	blx	r7
 8016b3e:	3001      	adds	r0, #1
 8016b40:	f43f af4a 	beq.w	80169d8 <_printf_float+0x98>
 8016b44:	f04f 0900 	mov.w	r9, #0
 8016b48:	f108 38ff 	add.w	r8, r8, #4294967295
 8016b4c:	f104 0a1a 	add.w	sl, r4, #26
 8016b50:	45c8      	cmp	r8, r9
 8016b52:	dc09      	bgt.n	8016b68 <_printf_float+0x228>
 8016b54:	6823      	ldr	r3, [r4, #0]
 8016b56:	079b      	lsls	r3, r3, #30
 8016b58:	f100 8107 	bmi.w	8016d6a <_printf_float+0x42a>
 8016b5c:	68e0      	ldr	r0, [r4, #12]
 8016b5e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016b60:	4298      	cmp	r0, r3
 8016b62:	bfb8      	it	lt
 8016b64:	4618      	movlt	r0, r3
 8016b66:	e739      	b.n	80169dc <_printf_float+0x9c>
 8016b68:	2301      	movs	r3, #1
 8016b6a:	4652      	mov	r2, sl
 8016b6c:	4631      	mov	r1, r6
 8016b6e:	4628      	mov	r0, r5
 8016b70:	47b8      	blx	r7
 8016b72:	3001      	adds	r0, #1
 8016b74:	f43f af30 	beq.w	80169d8 <_printf_float+0x98>
 8016b78:	f109 0901 	add.w	r9, r9, #1
 8016b7c:	e7e8      	b.n	8016b50 <_printf_float+0x210>
 8016b7e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016b80:	2b00      	cmp	r3, #0
 8016b82:	dc3b      	bgt.n	8016bfc <_printf_float+0x2bc>
 8016b84:	4a1c      	ldr	r2, [pc, #112]	@ (8016bf8 <_printf_float+0x2b8>)
 8016b86:	2301      	movs	r3, #1
 8016b88:	4631      	mov	r1, r6
 8016b8a:	4628      	mov	r0, r5
 8016b8c:	47b8      	blx	r7
 8016b8e:	3001      	adds	r0, #1
 8016b90:	f43f af22 	beq.w	80169d8 <_printf_float+0x98>
 8016b94:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8016b98:	ea59 0303 	orrs.w	r3, r9, r3
 8016b9c:	d102      	bne.n	8016ba4 <_printf_float+0x264>
 8016b9e:	6823      	ldr	r3, [r4, #0]
 8016ba0:	07d9      	lsls	r1, r3, #31
 8016ba2:	d5d7      	bpl.n	8016b54 <_printf_float+0x214>
 8016ba4:	9b05      	ldr	r3, [sp, #20]
 8016ba6:	465a      	mov	r2, fp
 8016ba8:	4631      	mov	r1, r6
 8016baa:	4628      	mov	r0, r5
 8016bac:	47b8      	blx	r7
 8016bae:	3001      	adds	r0, #1
 8016bb0:	f43f af12 	beq.w	80169d8 <_printf_float+0x98>
 8016bb4:	f04f 0a00 	mov.w	sl, #0
 8016bb8:	f104 0b1a 	add.w	fp, r4, #26
 8016bbc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016bbe:	425b      	negs	r3, r3
 8016bc0:	4553      	cmp	r3, sl
 8016bc2:	dc01      	bgt.n	8016bc8 <_printf_float+0x288>
 8016bc4:	464b      	mov	r3, r9
 8016bc6:	e794      	b.n	8016af2 <_printf_float+0x1b2>
 8016bc8:	2301      	movs	r3, #1
 8016bca:	465a      	mov	r2, fp
 8016bcc:	4631      	mov	r1, r6
 8016bce:	4628      	mov	r0, r5
 8016bd0:	47b8      	blx	r7
 8016bd2:	3001      	adds	r0, #1
 8016bd4:	f43f af00 	beq.w	80169d8 <_printf_float+0x98>
 8016bd8:	f10a 0a01 	add.w	sl, sl, #1
 8016bdc:	e7ee      	b.n	8016bbc <_printf_float+0x27c>
 8016bde:	bf00      	nop
 8016be0:	ffffffff 	.word	0xffffffff
 8016be4:	7fefffff 	.word	0x7fefffff
 8016be8:	0801b1e1 	.word	0x0801b1e1
 8016bec:	0801b1e5 	.word	0x0801b1e5
 8016bf0:	0801b1e9 	.word	0x0801b1e9
 8016bf4:	0801b1ed 	.word	0x0801b1ed
 8016bf8:	0801b1f1 	.word	0x0801b1f1
 8016bfc:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8016bfe:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8016c02:	4553      	cmp	r3, sl
 8016c04:	bfa8      	it	ge
 8016c06:	4653      	movge	r3, sl
 8016c08:	2b00      	cmp	r3, #0
 8016c0a:	4699      	mov	r9, r3
 8016c0c:	dc37      	bgt.n	8016c7e <_printf_float+0x33e>
 8016c0e:	2300      	movs	r3, #0
 8016c10:	9307      	str	r3, [sp, #28]
 8016c12:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8016c16:	f104 021a 	add.w	r2, r4, #26
 8016c1a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8016c1c:	9907      	ldr	r1, [sp, #28]
 8016c1e:	9306      	str	r3, [sp, #24]
 8016c20:	eba3 0309 	sub.w	r3, r3, r9
 8016c24:	428b      	cmp	r3, r1
 8016c26:	dc31      	bgt.n	8016c8c <_printf_float+0x34c>
 8016c28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016c2a:	459a      	cmp	sl, r3
 8016c2c:	dc3b      	bgt.n	8016ca6 <_printf_float+0x366>
 8016c2e:	6823      	ldr	r3, [r4, #0]
 8016c30:	07da      	lsls	r2, r3, #31
 8016c32:	d438      	bmi.n	8016ca6 <_printf_float+0x366>
 8016c34:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016c36:	ebaa 0903 	sub.w	r9, sl, r3
 8016c3a:	9b06      	ldr	r3, [sp, #24]
 8016c3c:	ebaa 0303 	sub.w	r3, sl, r3
 8016c40:	4599      	cmp	r9, r3
 8016c42:	bfa8      	it	ge
 8016c44:	4699      	movge	r9, r3
 8016c46:	f1b9 0f00 	cmp.w	r9, #0
 8016c4a:	dc34      	bgt.n	8016cb6 <_printf_float+0x376>
 8016c4c:	f04f 0800 	mov.w	r8, #0
 8016c50:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8016c54:	f104 0b1a 	add.w	fp, r4, #26
 8016c58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016c5a:	ebaa 0303 	sub.w	r3, sl, r3
 8016c5e:	eba3 0309 	sub.w	r3, r3, r9
 8016c62:	4543      	cmp	r3, r8
 8016c64:	f77f af76 	ble.w	8016b54 <_printf_float+0x214>
 8016c68:	2301      	movs	r3, #1
 8016c6a:	465a      	mov	r2, fp
 8016c6c:	4631      	mov	r1, r6
 8016c6e:	4628      	mov	r0, r5
 8016c70:	47b8      	blx	r7
 8016c72:	3001      	adds	r0, #1
 8016c74:	f43f aeb0 	beq.w	80169d8 <_printf_float+0x98>
 8016c78:	f108 0801 	add.w	r8, r8, #1
 8016c7c:	e7ec      	b.n	8016c58 <_printf_float+0x318>
 8016c7e:	4642      	mov	r2, r8
 8016c80:	4631      	mov	r1, r6
 8016c82:	4628      	mov	r0, r5
 8016c84:	47b8      	blx	r7
 8016c86:	3001      	adds	r0, #1
 8016c88:	d1c1      	bne.n	8016c0e <_printf_float+0x2ce>
 8016c8a:	e6a5      	b.n	80169d8 <_printf_float+0x98>
 8016c8c:	2301      	movs	r3, #1
 8016c8e:	4631      	mov	r1, r6
 8016c90:	4628      	mov	r0, r5
 8016c92:	9206      	str	r2, [sp, #24]
 8016c94:	47b8      	blx	r7
 8016c96:	3001      	adds	r0, #1
 8016c98:	f43f ae9e 	beq.w	80169d8 <_printf_float+0x98>
 8016c9c:	9b07      	ldr	r3, [sp, #28]
 8016c9e:	9a06      	ldr	r2, [sp, #24]
 8016ca0:	3301      	adds	r3, #1
 8016ca2:	9307      	str	r3, [sp, #28]
 8016ca4:	e7b9      	b.n	8016c1a <_printf_float+0x2da>
 8016ca6:	9b05      	ldr	r3, [sp, #20]
 8016ca8:	465a      	mov	r2, fp
 8016caa:	4631      	mov	r1, r6
 8016cac:	4628      	mov	r0, r5
 8016cae:	47b8      	blx	r7
 8016cb0:	3001      	adds	r0, #1
 8016cb2:	d1bf      	bne.n	8016c34 <_printf_float+0x2f4>
 8016cb4:	e690      	b.n	80169d8 <_printf_float+0x98>
 8016cb6:	9a06      	ldr	r2, [sp, #24]
 8016cb8:	464b      	mov	r3, r9
 8016cba:	4442      	add	r2, r8
 8016cbc:	4631      	mov	r1, r6
 8016cbe:	4628      	mov	r0, r5
 8016cc0:	47b8      	blx	r7
 8016cc2:	3001      	adds	r0, #1
 8016cc4:	d1c2      	bne.n	8016c4c <_printf_float+0x30c>
 8016cc6:	e687      	b.n	80169d8 <_printf_float+0x98>
 8016cc8:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8016ccc:	f1b9 0f01 	cmp.w	r9, #1
 8016cd0:	dc01      	bgt.n	8016cd6 <_printf_float+0x396>
 8016cd2:	07db      	lsls	r3, r3, #31
 8016cd4:	d536      	bpl.n	8016d44 <_printf_float+0x404>
 8016cd6:	2301      	movs	r3, #1
 8016cd8:	4642      	mov	r2, r8
 8016cda:	4631      	mov	r1, r6
 8016cdc:	4628      	mov	r0, r5
 8016cde:	47b8      	blx	r7
 8016ce0:	3001      	adds	r0, #1
 8016ce2:	f43f ae79 	beq.w	80169d8 <_printf_float+0x98>
 8016ce6:	9b05      	ldr	r3, [sp, #20]
 8016ce8:	465a      	mov	r2, fp
 8016cea:	4631      	mov	r1, r6
 8016cec:	4628      	mov	r0, r5
 8016cee:	47b8      	blx	r7
 8016cf0:	3001      	adds	r0, #1
 8016cf2:	f43f ae71 	beq.w	80169d8 <_printf_float+0x98>
 8016cf6:	ed94 7b12 	vldr	d7, [r4, #72]	@ 0x48
 8016cfa:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8016cfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d02:	f109 39ff 	add.w	r9, r9, #4294967295
 8016d06:	d018      	beq.n	8016d3a <_printf_float+0x3fa>
 8016d08:	464b      	mov	r3, r9
 8016d0a:	f108 0201 	add.w	r2, r8, #1
 8016d0e:	4631      	mov	r1, r6
 8016d10:	4628      	mov	r0, r5
 8016d12:	47b8      	blx	r7
 8016d14:	3001      	adds	r0, #1
 8016d16:	d10c      	bne.n	8016d32 <_printf_float+0x3f2>
 8016d18:	e65e      	b.n	80169d8 <_printf_float+0x98>
 8016d1a:	2301      	movs	r3, #1
 8016d1c:	465a      	mov	r2, fp
 8016d1e:	4631      	mov	r1, r6
 8016d20:	4628      	mov	r0, r5
 8016d22:	47b8      	blx	r7
 8016d24:	3001      	adds	r0, #1
 8016d26:	f43f ae57 	beq.w	80169d8 <_printf_float+0x98>
 8016d2a:	f108 0801 	add.w	r8, r8, #1
 8016d2e:	45c8      	cmp	r8, r9
 8016d30:	dbf3      	blt.n	8016d1a <_printf_float+0x3da>
 8016d32:	4653      	mov	r3, sl
 8016d34:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8016d38:	e6dc      	b.n	8016af4 <_printf_float+0x1b4>
 8016d3a:	f04f 0800 	mov.w	r8, #0
 8016d3e:	f104 0b1a 	add.w	fp, r4, #26
 8016d42:	e7f4      	b.n	8016d2e <_printf_float+0x3ee>
 8016d44:	2301      	movs	r3, #1
 8016d46:	4642      	mov	r2, r8
 8016d48:	e7e1      	b.n	8016d0e <_printf_float+0x3ce>
 8016d4a:	2301      	movs	r3, #1
 8016d4c:	464a      	mov	r2, r9
 8016d4e:	4631      	mov	r1, r6
 8016d50:	4628      	mov	r0, r5
 8016d52:	47b8      	blx	r7
 8016d54:	3001      	adds	r0, #1
 8016d56:	f43f ae3f 	beq.w	80169d8 <_printf_float+0x98>
 8016d5a:	f108 0801 	add.w	r8, r8, #1
 8016d5e:	68e3      	ldr	r3, [r4, #12]
 8016d60:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8016d62:	1a5b      	subs	r3, r3, r1
 8016d64:	4543      	cmp	r3, r8
 8016d66:	dcf0      	bgt.n	8016d4a <_printf_float+0x40a>
 8016d68:	e6f8      	b.n	8016b5c <_printf_float+0x21c>
 8016d6a:	f04f 0800 	mov.w	r8, #0
 8016d6e:	f104 0919 	add.w	r9, r4, #25
 8016d72:	e7f4      	b.n	8016d5e <_printf_float+0x41e>

08016d74 <_printf_common>:
 8016d74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016d78:	4616      	mov	r6, r2
 8016d7a:	4698      	mov	r8, r3
 8016d7c:	688a      	ldr	r2, [r1, #8]
 8016d7e:	690b      	ldr	r3, [r1, #16]
 8016d80:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8016d84:	4293      	cmp	r3, r2
 8016d86:	bfb8      	it	lt
 8016d88:	4613      	movlt	r3, r2
 8016d8a:	6033      	str	r3, [r6, #0]
 8016d8c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8016d90:	4607      	mov	r7, r0
 8016d92:	460c      	mov	r4, r1
 8016d94:	b10a      	cbz	r2, 8016d9a <_printf_common+0x26>
 8016d96:	3301      	adds	r3, #1
 8016d98:	6033      	str	r3, [r6, #0]
 8016d9a:	6823      	ldr	r3, [r4, #0]
 8016d9c:	0699      	lsls	r1, r3, #26
 8016d9e:	bf42      	ittt	mi
 8016da0:	6833      	ldrmi	r3, [r6, #0]
 8016da2:	3302      	addmi	r3, #2
 8016da4:	6033      	strmi	r3, [r6, #0]
 8016da6:	6825      	ldr	r5, [r4, #0]
 8016da8:	f015 0506 	ands.w	r5, r5, #6
 8016dac:	d106      	bne.n	8016dbc <_printf_common+0x48>
 8016dae:	f104 0a19 	add.w	sl, r4, #25
 8016db2:	68e3      	ldr	r3, [r4, #12]
 8016db4:	6832      	ldr	r2, [r6, #0]
 8016db6:	1a9b      	subs	r3, r3, r2
 8016db8:	42ab      	cmp	r3, r5
 8016dba:	dc26      	bgt.n	8016e0a <_printf_common+0x96>
 8016dbc:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8016dc0:	6822      	ldr	r2, [r4, #0]
 8016dc2:	3b00      	subs	r3, #0
 8016dc4:	bf18      	it	ne
 8016dc6:	2301      	movne	r3, #1
 8016dc8:	0692      	lsls	r2, r2, #26
 8016dca:	d42b      	bmi.n	8016e24 <_printf_common+0xb0>
 8016dcc:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8016dd0:	4641      	mov	r1, r8
 8016dd2:	4638      	mov	r0, r7
 8016dd4:	47c8      	blx	r9
 8016dd6:	3001      	adds	r0, #1
 8016dd8:	d01e      	beq.n	8016e18 <_printf_common+0xa4>
 8016dda:	6823      	ldr	r3, [r4, #0]
 8016ddc:	6922      	ldr	r2, [r4, #16]
 8016dde:	f003 0306 	and.w	r3, r3, #6
 8016de2:	2b04      	cmp	r3, #4
 8016de4:	bf02      	ittt	eq
 8016de6:	68e5      	ldreq	r5, [r4, #12]
 8016de8:	6833      	ldreq	r3, [r6, #0]
 8016dea:	1aed      	subeq	r5, r5, r3
 8016dec:	68a3      	ldr	r3, [r4, #8]
 8016dee:	bf0c      	ite	eq
 8016df0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8016df4:	2500      	movne	r5, #0
 8016df6:	4293      	cmp	r3, r2
 8016df8:	bfc4      	itt	gt
 8016dfa:	1a9b      	subgt	r3, r3, r2
 8016dfc:	18ed      	addgt	r5, r5, r3
 8016dfe:	2600      	movs	r6, #0
 8016e00:	341a      	adds	r4, #26
 8016e02:	42b5      	cmp	r5, r6
 8016e04:	d11a      	bne.n	8016e3c <_printf_common+0xc8>
 8016e06:	2000      	movs	r0, #0
 8016e08:	e008      	b.n	8016e1c <_printf_common+0xa8>
 8016e0a:	2301      	movs	r3, #1
 8016e0c:	4652      	mov	r2, sl
 8016e0e:	4641      	mov	r1, r8
 8016e10:	4638      	mov	r0, r7
 8016e12:	47c8      	blx	r9
 8016e14:	3001      	adds	r0, #1
 8016e16:	d103      	bne.n	8016e20 <_printf_common+0xac>
 8016e18:	f04f 30ff 	mov.w	r0, #4294967295
 8016e1c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016e20:	3501      	adds	r5, #1
 8016e22:	e7c6      	b.n	8016db2 <_printf_common+0x3e>
 8016e24:	18e1      	adds	r1, r4, r3
 8016e26:	1c5a      	adds	r2, r3, #1
 8016e28:	2030      	movs	r0, #48	@ 0x30
 8016e2a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8016e2e:	4422      	add	r2, r4
 8016e30:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8016e34:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8016e38:	3302      	adds	r3, #2
 8016e3a:	e7c7      	b.n	8016dcc <_printf_common+0x58>
 8016e3c:	2301      	movs	r3, #1
 8016e3e:	4622      	mov	r2, r4
 8016e40:	4641      	mov	r1, r8
 8016e42:	4638      	mov	r0, r7
 8016e44:	47c8      	blx	r9
 8016e46:	3001      	adds	r0, #1
 8016e48:	d0e6      	beq.n	8016e18 <_printf_common+0xa4>
 8016e4a:	3601      	adds	r6, #1
 8016e4c:	e7d9      	b.n	8016e02 <_printf_common+0x8e>
	...

08016e50 <_printf_i>:
 8016e50:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8016e54:	7e0f      	ldrb	r7, [r1, #24]
 8016e56:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8016e58:	2f78      	cmp	r7, #120	@ 0x78
 8016e5a:	4691      	mov	r9, r2
 8016e5c:	4680      	mov	r8, r0
 8016e5e:	460c      	mov	r4, r1
 8016e60:	469a      	mov	sl, r3
 8016e62:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8016e66:	d807      	bhi.n	8016e78 <_printf_i+0x28>
 8016e68:	2f62      	cmp	r7, #98	@ 0x62
 8016e6a:	d80a      	bhi.n	8016e82 <_printf_i+0x32>
 8016e6c:	2f00      	cmp	r7, #0
 8016e6e:	f000 80d2 	beq.w	8017016 <_printf_i+0x1c6>
 8016e72:	2f58      	cmp	r7, #88	@ 0x58
 8016e74:	f000 80b9 	beq.w	8016fea <_printf_i+0x19a>
 8016e78:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8016e7c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8016e80:	e03a      	b.n	8016ef8 <_printf_i+0xa8>
 8016e82:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8016e86:	2b15      	cmp	r3, #21
 8016e88:	d8f6      	bhi.n	8016e78 <_printf_i+0x28>
 8016e8a:	a101      	add	r1, pc, #4	@ (adr r1, 8016e90 <_printf_i+0x40>)
 8016e8c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8016e90:	08016ee9 	.word	0x08016ee9
 8016e94:	08016efd 	.word	0x08016efd
 8016e98:	08016e79 	.word	0x08016e79
 8016e9c:	08016e79 	.word	0x08016e79
 8016ea0:	08016e79 	.word	0x08016e79
 8016ea4:	08016e79 	.word	0x08016e79
 8016ea8:	08016efd 	.word	0x08016efd
 8016eac:	08016e79 	.word	0x08016e79
 8016eb0:	08016e79 	.word	0x08016e79
 8016eb4:	08016e79 	.word	0x08016e79
 8016eb8:	08016e79 	.word	0x08016e79
 8016ebc:	08016ffd 	.word	0x08016ffd
 8016ec0:	08016f27 	.word	0x08016f27
 8016ec4:	08016fb7 	.word	0x08016fb7
 8016ec8:	08016e79 	.word	0x08016e79
 8016ecc:	08016e79 	.word	0x08016e79
 8016ed0:	0801701f 	.word	0x0801701f
 8016ed4:	08016e79 	.word	0x08016e79
 8016ed8:	08016f27 	.word	0x08016f27
 8016edc:	08016e79 	.word	0x08016e79
 8016ee0:	08016e79 	.word	0x08016e79
 8016ee4:	08016fbf 	.word	0x08016fbf
 8016ee8:	6833      	ldr	r3, [r6, #0]
 8016eea:	1d1a      	adds	r2, r3, #4
 8016eec:	681b      	ldr	r3, [r3, #0]
 8016eee:	6032      	str	r2, [r6, #0]
 8016ef0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8016ef4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8016ef8:	2301      	movs	r3, #1
 8016efa:	e09d      	b.n	8017038 <_printf_i+0x1e8>
 8016efc:	6833      	ldr	r3, [r6, #0]
 8016efe:	6820      	ldr	r0, [r4, #0]
 8016f00:	1d19      	adds	r1, r3, #4
 8016f02:	6031      	str	r1, [r6, #0]
 8016f04:	0606      	lsls	r6, r0, #24
 8016f06:	d501      	bpl.n	8016f0c <_printf_i+0xbc>
 8016f08:	681d      	ldr	r5, [r3, #0]
 8016f0a:	e003      	b.n	8016f14 <_printf_i+0xc4>
 8016f0c:	0645      	lsls	r5, r0, #25
 8016f0e:	d5fb      	bpl.n	8016f08 <_printf_i+0xb8>
 8016f10:	f9b3 5000 	ldrsh.w	r5, [r3]
 8016f14:	2d00      	cmp	r5, #0
 8016f16:	da03      	bge.n	8016f20 <_printf_i+0xd0>
 8016f18:	232d      	movs	r3, #45	@ 0x2d
 8016f1a:	426d      	negs	r5, r5
 8016f1c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8016f20:	4859      	ldr	r0, [pc, #356]	@ (8017088 <_printf_i+0x238>)
 8016f22:	230a      	movs	r3, #10
 8016f24:	e011      	b.n	8016f4a <_printf_i+0xfa>
 8016f26:	6821      	ldr	r1, [r4, #0]
 8016f28:	6833      	ldr	r3, [r6, #0]
 8016f2a:	0608      	lsls	r0, r1, #24
 8016f2c:	f853 5b04 	ldr.w	r5, [r3], #4
 8016f30:	d402      	bmi.n	8016f38 <_printf_i+0xe8>
 8016f32:	0649      	lsls	r1, r1, #25
 8016f34:	bf48      	it	mi
 8016f36:	b2ad      	uxthmi	r5, r5
 8016f38:	2f6f      	cmp	r7, #111	@ 0x6f
 8016f3a:	4853      	ldr	r0, [pc, #332]	@ (8017088 <_printf_i+0x238>)
 8016f3c:	6033      	str	r3, [r6, #0]
 8016f3e:	bf14      	ite	ne
 8016f40:	230a      	movne	r3, #10
 8016f42:	2308      	moveq	r3, #8
 8016f44:	2100      	movs	r1, #0
 8016f46:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8016f4a:	6866      	ldr	r6, [r4, #4]
 8016f4c:	60a6      	str	r6, [r4, #8]
 8016f4e:	2e00      	cmp	r6, #0
 8016f50:	bfa2      	ittt	ge
 8016f52:	6821      	ldrge	r1, [r4, #0]
 8016f54:	f021 0104 	bicge.w	r1, r1, #4
 8016f58:	6021      	strge	r1, [r4, #0]
 8016f5a:	b90d      	cbnz	r5, 8016f60 <_printf_i+0x110>
 8016f5c:	2e00      	cmp	r6, #0
 8016f5e:	d04b      	beq.n	8016ff8 <_printf_i+0x1a8>
 8016f60:	4616      	mov	r6, r2
 8016f62:	fbb5 f1f3 	udiv	r1, r5, r3
 8016f66:	fb03 5711 	mls	r7, r3, r1, r5
 8016f6a:	5dc7      	ldrb	r7, [r0, r7]
 8016f6c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8016f70:	462f      	mov	r7, r5
 8016f72:	42bb      	cmp	r3, r7
 8016f74:	460d      	mov	r5, r1
 8016f76:	d9f4      	bls.n	8016f62 <_printf_i+0x112>
 8016f78:	2b08      	cmp	r3, #8
 8016f7a:	d10b      	bne.n	8016f94 <_printf_i+0x144>
 8016f7c:	6823      	ldr	r3, [r4, #0]
 8016f7e:	07df      	lsls	r7, r3, #31
 8016f80:	d508      	bpl.n	8016f94 <_printf_i+0x144>
 8016f82:	6923      	ldr	r3, [r4, #16]
 8016f84:	6861      	ldr	r1, [r4, #4]
 8016f86:	4299      	cmp	r1, r3
 8016f88:	bfde      	ittt	le
 8016f8a:	2330      	movle	r3, #48	@ 0x30
 8016f8c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8016f90:	f106 36ff 	addle.w	r6, r6, #4294967295
 8016f94:	1b92      	subs	r2, r2, r6
 8016f96:	6122      	str	r2, [r4, #16]
 8016f98:	f8cd a000 	str.w	sl, [sp]
 8016f9c:	464b      	mov	r3, r9
 8016f9e:	aa03      	add	r2, sp, #12
 8016fa0:	4621      	mov	r1, r4
 8016fa2:	4640      	mov	r0, r8
 8016fa4:	f7ff fee6 	bl	8016d74 <_printf_common>
 8016fa8:	3001      	adds	r0, #1
 8016faa:	d14a      	bne.n	8017042 <_printf_i+0x1f2>
 8016fac:	f04f 30ff 	mov.w	r0, #4294967295
 8016fb0:	b004      	add	sp, #16
 8016fb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016fb6:	6823      	ldr	r3, [r4, #0]
 8016fb8:	f043 0320 	orr.w	r3, r3, #32
 8016fbc:	6023      	str	r3, [r4, #0]
 8016fbe:	4833      	ldr	r0, [pc, #204]	@ (801708c <_printf_i+0x23c>)
 8016fc0:	2778      	movs	r7, #120	@ 0x78
 8016fc2:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8016fc6:	6823      	ldr	r3, [r4, #0]
 8016fc8:	6831      	ldr	r1, [r6, #0]
 8016fca:	061f      	lsls	r7, r3, #24
 8016fcc:	f851 5b04 	ldr.w	r5, [r1], #4
 8016fd0:	d402      	bmi.n	8016fd8 <_printf_i+0x188>
 8016fd2:	065f      	lsls	r7, r3, #25
 8016fd4:	bf48      	it	mi
 8016fd6:	b2ad      	uxthmi	r5, r5
 8016fd8:	6031      	str	r1, [r6, #0]
 8016fda:	07d9      	lsls	r1, r3, #31
 8016fdc:	bf44      	itt	mi
 8016fde:	f043 0320 	orrmi.w	r3, r3, #32
 8016fe2:	6023      	strmi	r3, [r4, #0]
 8016fe4:	b11d      	cbz	r5, 8016fee <_printf_i+0x19e>
 8016fe6:	2310      	movs	r3, #16
 8016fe8:	e7ac      	b.n	8016f44 <_printf_i+0xf4>
 8016fea:	4827      	ldr	r0, [pc, #156]	@ (8017088 <_printf_i+0x238>)
 8016fec:	e7e9      	b.n	8016fc2 <_printf_i+0x172>
 8016fee:	6823      	ldr	r3, [r4, #0]
 8016ff0:	f023 0320 	bic.w	r3, r3, #32
 8016ff4:	6023      	str	r3, [r4, #0]
 8016ff6:	e7f6      	b.n	8016fe6 <_printf_i+0x196>
 8016ff8:	4616      	mov	r6, r2
 8016ffa:	e7bd      	b.n	8016f78 <_printf_i+0x128>
 8016ffc:	6833      	ldr	r3, [r6, #0]
 8016ffe:	6825      	ldr	r5, [r4, #0]
 8017000:	6961      	ldr	r1, [r4, #20]
 8017002:	1d18      	adds	r0, r3, #4
 8017004:	6030      	str	r0, [r6, #0]
 8017006:	062e      	lsls	r6, r5, #24
 8017008:	681b      	ldr	r3, [r3, #0]
 801700a:	d501      	bpl.n	8017010 <_printf_i+0x1c0>
 801700c:	6019      	str	r1, [r3, #0]
 801700e:	e002      	b.n	8017016 <_printf_i+0x1c6>
 8017010:	0668      	lsls	r0, r5, #25
 8017012:	d5fb      	bpl.n	801700c <_printf_i+0x1bc>
 8017014:	8019      	strh	r1, [r3, #0]
 8017016:	2300      	movs	r3, #0
 8017018:	6123      	str	r3, [r4, #16]
 801701a:	4616      	mov	r6, r2
 801701c:	e7bc      	b.n	8016f98 <_printf_i+0x148>
 801701e:	6833      	ldr	r3, [r6, #0]
 8017020:	1d1a      	adds	r2, r3, #4
 8017022:	6032      	str	r2, [r6, #0]
 8017024:	681e      	ldr	r6, [r3, #0]
 8017026:	6862      	ldr	r2, [r4, #4]
 8017028:	2100      	movs	r1, #0
 801702a:	4630      	mov	r0, r6
 801702c:	f7e9 f980 	bl	8000330 <memchr>
 8017030:	b108      	cbz	r0, 8017036 <_printf_i+0x1e6>
 8017032:	1b80      	subs	r0, r0, r6
 8017034:	6060      	str	r0, [r4, #4]
 8017036:	6863      	ldr	r3, [r4, #4]
 8017038:	6123      	str	r3, [r4, #16]
 801703a:	2300      	movs	r3, #0
 801703c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8017040:	e7aa      	b.n	8016f98 <_printf_i+0x148>
 8017042:	6923      	ldr	r3, [r4, #16]
 8017044:	4632      	mov	r2, r6
 8017046:	4649      	mov	r1, r9
 8017048:	4640      	mov	r0, r8
 801704a:	47d0      	blx	sl
 801704c:	3001      	adds	r0, #1
 801704e:	d0ad      	beq.n	8016fac <_printf_i+0x15c>
 8017050:	6823      	ldr	r3, [r4, #0]
 8017052:	079b      	lsls	r3, r3, #30
 8017054:	d413      	bmi.n	801707e <_printf_i+0x22e>
 8017056:	68e0      	ldr	r0, [r4, #12]
 8017058:	9b03      	ldr	r3, [sp, #12]
 801705a:	4298      	cmp	r0, r3
 801705c:	bfb8      	it	lt
 801705e:	4618      	movlt	r0, r3
 8017060:	e7a6      	b.n	8016fb0 <_printf_i+0x160>
 8017062:	2301      	movs	r3, #1
 8017064:	4632      	mov	r2, r6
 8017066:	4649      	mov	r1, r9
 8017068:	4640      	mov	r0, r8
 801706a:	47d0      	blx	sl
 801706c:	3001      	adds	r0, #1
 801706e:	d09d      	beq.n	8016fac <_printf_i+0x15c>
 8017070:	3501      	adds	r5, #1
 8017072:	68e3      	ldr	r3, [r4, #12]
 8017074:	9903      	ldr	r1, [sp, #12]
 8017076:	1a5b      	subs	r3, r3, r1
 8017078:	42ab      	cmp	r3, r5
 801707a:	dcf2      	bgt.n	8017062 <_printf_i+0x212>
 801707c:	e7eb      	b.n	8017056 <_printf_i+0x206>
 801707e:	2500      	movs	r5, #0
 8017080:	f104 0619 	add.w	r6, r4, #25
 8017084:	e7f5      	b.n	8017072 <_printf_i+0x222>
 8017086:	bf00      	nop
 8017088:	0801b1f3 	.word	0x0801b1f3
 801708c:	0801b204 	.word	0x0801b204

08017090 <std>:
 8017090:	2300      	movs	r3, #0
 8017092:	b510      	push	{r4, lr}
 8017094:	4604      	mov	r4, r0
 8017096:	e9c0 3300 	strd	r3, r3, [r0]
 801709a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801709e:	6083      	str	r3, [r0, #8]
 80170a0:	8181      	strh	r1, [r0, #12]
 80170a2:	6643      	str	r3, [r0, #100]	@ 0x64
 80170a4:	81c2      	strh	r2, [r0, #14]
 80170a6:	6183      	str	r3, [r0, #24]
 80170a8:	4619      	mov	r1, r3
 80170aa:	2208      	movs	r2, #8
 80170ac:	305c      	adds	r0, #92	@ 0x5c
 80170ae:	f000 f914 	bl	80172da <memset>
 80170b2:	4b0d      	ldr	r3, [pc, #52]	@ (80170e8 <std+0x58>)
 80170b4:	6263      	str	r3, [r4, #36]	@ 0x24
 80170b6:	4b0d      	ldr	r3, [pc, #52]	@ (80170ec <std+0x5c>)
 80170b8:	62a3      	str	r3, [r4, #40]	@ 0x28
 80170ba:	4b0d      	ldr	r3, [pc, #52]	@ (80170f0 <std+0x60>)
 80170bc:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80170be:	4b0d      	ldr	r3, [pc, #52]	@ (80170f4 <std+0x64>)
 80170c0:	6323      	str	r3, [r4, #48]	@ 0x30
 80170c2:	4b0d      	ldr	r3, [pc, #52]	@ (80170f8 <std+0x68>)
 80170c4:	6224      	str	r4, [r4, #32]
 80170c6:	429c      	cmp	r4, r3
 80170c8:	d006      	beq.n	80170d8 <std+0x48>
 80170ca:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80170ce:	4294      	cmp	r4, r2
 80170d0:	d002      	beq.n	80170d8 <std+0x48>
 80170d2:	33d0      	adds	r3, #208	@ 0xd0
 80170d4:	429c      	cmp	r4, r3
 80170d6:	d105      	bne.n	80170e4 <std+0x54>
 80170d8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80170dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80170e0:	f000 b996 	b.w	8017410 <__retarget_lock_init_recursive>
 80170e4:	bd10      	pop	{r4, pc}
 80170e6:	bf00      	nop
 80170e8:	08017255 	.word	0x08017255
 80170ec:	08017277 	.word	0x08017277
 80170f0:	080172af 	.word	0x080172af
 80170f4:	080172d3 	.word	0x080172d3
 80170f8:	24006128 	.word	0x24006128

080170fc <stdio_exit_handler>:
 80170fc:	4a02      	ldr	r2, [pc, #8]	@ (8017108 <stdio_exit_handler+0xc>)
 80170fe:	4903      	ldr	r1, [pc, #12]	@ (801710c <stdio_exit_handler+0x10>)
 8017100:	4803      	ldr	r0, [pc, #12]	@ (8017110 <stdio_exit_handler+0x14>)
 8017102:	f000 b869 	b.w	80171d8 <_fwalk_sglue>
 8017106:	bf00      	nop
 8017108:	24000104 	.word	0x24000104
 801710c:	080195cd 	.word	0x080195cd
 8017110:	24000280 	.word	0x24000280

08017114 <cleanup_stdio>:
 8017114:	6841      	ldr	r1, [r0, #4]
 8017116:	4b0c      	ldr	r3, [pc, #48]	@ (8017148 <cleanup_stdio+0x34>)
 8017118:	4299      	cmp	r1, r3
 801711a:	b510      	push	{r4, lr}
 801711c:	4604      	mov	r4, r0
 801711e:	d001      	beq.n	8017124 <cleanup_stdio+0x10>
 8017120:	f002 fa54 	bl	80195cc <_fflush_r>
 8017124:	68a1      	ldr	r1, [r4, #8]
 8017126:	4b09      	ldr	r3, [pc, #36]	@ (801714c <cleanup_stdio+0x38>)
 8017128:	4299      	cmp	r1, r3
 801712a:	d002      	beq.n	8017132 <cleanup_stdio+0x1e>
 801712c:	4620      	mov	r0, r4
 801712e:	f002 fa4d 	bl	80195cc <_fflush_r>
 8017132:	68e1      	ldr	r1, [r4, #12]
 8017134:	4b06      	ldr	r3, [pc, #24]	@ (8017150 <cleanup_stdio+0x3c>)
 8017136:	4299      	cmp	r1, r3
 8017138:	d004      	beq.n	8017144 <cleanup_stdio+0x30>
 801713a:	4620      	mov	r0, r4
 801713c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017140:	f002 ba44 	b.w	80195cc <_fflush_r>
 8017144:	bd10      	pop	{r4, pc}
 8017146:	bf00      	nop
 8017148:	24006128 	.word	0x24006128
 801714c:	24006190 	.word	0x24006190
 8017150:	240061f8 	.word	0x240061f8

08017154 <global_stdio_init.part.0>:
 8017154:	b510      	push	{r4, lr}
 8017156:	4b0b      	ldr	r3, [pc, #44]	@ (8017184 <global_stdio_init.part.0+0x30>)
 8017158:	4c0b      	ldr	r4, [pc, #44]	@ (8017188 <global_stdio_init.part.0+0x34>)
 801715a:	4a0c      	ldr	r2, [pc, #48]	@ (801718c <global_stdio_init.part.0+0x38>)
 801715c:	601a      	str	r2, [r3, #0]
 801715e:	4620      	mov	r0, r4
 8017160:	2200      	movs	r2, #0
 8017162:	2104      	movs	r1, #4
 8017164:	f7ff ff94 	bl	8017090 <std>
 8017168:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 801716c:	2201      	movs	r2, #1
 801716e:	2109      	movs	r1, #9
 8017170:	f7ff ff8e 	bl	8017090 <std>
 8017174:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8017178:	2202      	movs	r2, #2
 801717a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801717e:	2112      	movs	r1, #18
 8017180:	f7ff bf86 	b.w	8017090 <std>
 8017184:	24006260 	.word	0x24006260
 8017188:	24006128 	.word	0x24006128
 801718c:	080170fd 	.word	0x080170fd

08017190 <__sfp_lock_acquire>:
 8017190:	4801      	ldr	r0, [pc, #4]	@ (8017198 <__sfp_lock_acquire+0x8>)
 8017192:	f000 b93e 	b.w	8017412 <__retarget_lock_acquire_recursive>
 8017196:	bf00      	nop
 8017198:	24006269 	.word	0x24006269

0801719c <__sfp_lock_release>:
 801719c:	4801      	ldr	r0, [pc, #4]	@ (80171a4 <__sfp_lock_release+0x8>)
 801719e:	f000 b939 	b.w	8017414 <__retarget_lock_release_recursive>
 80171a2:	bf00      	nop
 80171a4:	24006269 	.word	0x24006269

080171a8 <__sinit>:
 80171a8:	b510      	push	{r4, lr}
 80171aa:	4604      	mov	r4, r0
 80171ac:	f7ff fff0 	bl	8017190 <__sfp_lock_acquire>
 80171b0:	6a23      	ldr	r3, [r4, #32]
 80171b2:	b11b      	cbz	r3, 80171bc <__sinit+0x14>
 80171b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80171b8:	f7ff bff0 	b.w	801719c <__sfp_lock_release>
 80171bc:	4b04      	ldr	r3, [pc, #16]	@ (80171d0 <__sinit+0x28>)
 80171be:	6223      	str	r3, [r4, #32]
 80171c0:	4b04      	ldr	r3, [pc, #16]	@ (80171d4 <__sinit+0x2c>)
 80171c2:	681b      	ldr	r3, [r3, #0]
 80171c4:	2b00      	cmp	r3, #0
 80171c6:	d1f5      	bne.n	80171b4 <__sinit+0xc>
 80171c8:	f7ff ffc4 	bl	8017154 <global_stdio_init.part.0>
 80171cc:	e7f2      	b.n	80171b4 <__sinit+0xc>
 80171ce:	bf00      	nop
 80171d0:	08017115 	.word	0x08017115
 80171d4:	24006260 	.word	0x24006260

080171d8 <_fwalk_sglue>:
 80171d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80171dc:	4607      	mov	r7, r0
 80171de:	4688      	mov	r8, r1
 80171e0:	4614      	mov	r4, r2
 80171e2:	2600      	movs	r6, #0
 80171e4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80171e8:	f1b9 0901 	subs.w	r9, r9, #1
 80171ec:	d505      	bpl.n	80171fa <_fwalk_sglue+0x22>
 80171ee:	6824      	ldr	r4, [r4, #0]
 80171f0:	2c00      	cmp	r4, #0
 80171f2:	d1f7      	bne.n	80171e4 <_fwalk_sglue+0xc>
 80171f4:	4630      	mov	r0, r6
 80171f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80171fa:	89ab      	ldrh	r3, [r5, #12]
 80171fc:	2b01      	cmp	r3, #1
 80171fe:	d907      	bls.n	8017210 <_fwalk_sglue+0x38>
 8017200:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8017204:	3301      	adds	r3, #1
 8017206:	d003      	beq.n	8017210 <_fwalk_sglue+0x38>
 8017208:	4629      	mov	r1, r5
 801720a:	4638      	mov	r0, r7
 801720c:	47c0      	blx	r8
 801720e:	4306      	orrs	r6, r0
 8017210:	3568      	adds	r5, #104	@ 0x68
 8017212:	e7e9      	b.n	80171e8 <_fwalk_sglue+0x10>

08017214 <siprintf>:
 8017214:	b40e      	push	{r1, r2, r3}
 8017216:	b500      	push	{lr}
 8017218:	b09c      	sub	sp, #112	@ 0x70
 801721a:	ab1d      	add	r3, sp, #116	@ 0x74
 801721c:	9002      	str	r0, [sp, #8]
 801721e:	9006      	str	r0, [sp, #24]
 8017220:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8017224:	4809      	ldr	r0, [pc, #36]	@ (801724c <siprintf+0x38>)
 8017226:	9107      	str	r1, [sp, #28]
 8017228:	9104      	str	r1, [sp, #16]
 801722a:	4909      	ldr	r1, [pc, #36]	@ (8017250 <siprintf+0x3c>)
 801722c:	f853 2b04 	ldr.w	r2, [r3], #4
 8017230:	9105      	str	r1, [sp, #20]
 8017232:	6800      	ldr	r0, [r0, #0]
 8017234:	9301      	str	r3, [sp, #4]
 8017236:	a902      	add	r1, sp, #8
 8017238:	f002 f848 	bl	80192cc <_svfiprintf_r>
 801723c:	9b02      	ldr	r3, [sp, #8]
 801723e:	2200      	movs	r2, #0
 8017240:	701a      	strb	r2, [r3, #0]
 8017242:	b01c      	add	sp, #112	@ 0x70
 8017244:	f85d eb04 	ldr.w	lr, [sp], #4
 8017248:	b003      	add	sp, #12
 801724a:	4770      	bx	lr
 801724c:	2400027c 	.word	0x2400027c
 8017250:	ffff0208 	.word	0xffff0208

08017254 <__sread>:
 8017254:	b510      	push	{r4, lr}
 8017256:	460c      	mov	r4, r1
 8017258:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801725c:	f000 f88a 	bl	8017374 <_read_r>
 8017260:	2800      	cmp	r0, #0
 8017262:	bfab      	itete	ge
 8017264:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8017266:	89a3      	ldrhlt	r3, [r4, #12]
 8017268:	181b      	addge	r3, r3, r0
 801726a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 801726e:	bfac      	ite	ge
 8017270:	6563      	strge	r3, [r4, #84]	@ 0x54
 8017272:	81a3      	strhlt	r3, [r4, #12]
 8017274:	bd10      	pop	{r4, pc}

08017276 <__swrite>:
 8017276:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801727a:	461f      	mov	r7, r3
 801727c:	898b      	ldrh	r3, [r1, #12]
 801727e:	05db      	lsls	r3, r3, #23
 8017280:	4605      	mov	r5, r0
 8017282:	460c      	mov	r4, r1
 8017284:	4616      	mov	r6, r2
 8017286:	d505      	bpl.n	8017294 <__swrite+0x1e>
 8017288:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801728c:	2302      	movs	r3, #2
 801728e:	2200      	movs	r2, #0
 8017290:	f000 f85e 	bl	8017350 <_lseek_r>
 8017294:	89a3      	ldrh	r3, [r4, #12]
 8017296:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801729a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801729e:	81a3      	strh	r3, [r4, #12]
 80172a0:	4632      	mov	r2, r6
 80172a2:	463b      	mov	r3, r7
 80172a4:	4628      	mov	r0, r5
 80172a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80172aa:	f000 b875 	b.w	8017398 <_write_r>

080172ae <__sseek>:
 80172ae:	b510      	push	{r4, lr}
 80172b0:	460c      	mov	r4, r1
 80172b2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80172b6:	f000 f84b 	bl	8017350 <_lseek_r>
 80172ba:	1c43      	adds	r3, r0, #1
 80172bc:	89a3      	ldrh	r3, [r4, #12]
 80172be:	bf15      	itete	ne
 80172c0:	6560      	strne	r0, [r4, #84]	@ 0x54
 80172c2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80172c6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80172ca:	81a3      	strheq	r3, [r4, #12]
 80172cc:	bf18      	it	ne
 80172ce:	81a3      	strhne	r3, [r4, #12]
 80172d0:	bd10      	pop	{r4, pc}

080172d2 <__sclose>:
 80172d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80172d6:	f000 b82b 	b.w	8017330 <_close_r>

080172da <memset>:
 80172da:	4402      	add	r2, r0
 80172dc:	4603      	mov	r3, r0
 80172de:	4293      	cmp	r3, r2
 80172e0:	d100      	bne.n	80172e4 <memset+0xa>
 80172e2:	4770      	bx	lr
 80172e4:	f803 1b01 	strb.w	r1, [r3], #1
 80172e8:	e7f9      	b.n	80172de <memset+0x4>

080172ea <strchr>:
 80172ea:	b2c9      	uxtb	r1, r1
 80172ec:	4603      	mov	r3, r0
 80172ee:	4618      	mov	r0, r3
 80172f0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80172f4:	b112      	cbz	r2, 80172fc <strchr+0x12>
 80172f6:	428a      	cmp	r2, r1
 80172f8:	d1f9      	bne.n	80172ee <strchr+0x4>
 80172fa:	4770      	bx	lr
 80172fc:	2900      	cmp	r1, #0
 80172fe:	bf18      	it	ne
 8017300:	2000      	movne	r0, #0
 8017302:	4770      	bx	lr

08017304 <strncmp>:
 8017304:	b510      	push	{r4, lr}
 8017306:	b16a      	cbz	r2, 8017324 <strncmp+0x20>
 8017308:	3901      	subs	r1, #1
 801730a:	1884      	adds	r4, r0, r2
 801730c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8017310:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8017314:	429a      	cmp	r2, r3
 8017316:	d103      	bne.n	8017320 <strncmp+0x1c>
 8017318:	42a0      	cmp	r0, r4
 801731a:	d001      	beq.n	8017320 <strncmp+0x1c>
 801731c:	2a00      	cmp	r2, #0
 801731e:	d1f5      	bne.n	801730c <strncmp+0x8>
 8017320:	1ad0      	subs	r0, r2, r3
 8017322:	bd10      	pop	{r4, pc}
 8017324:	4610      	mov	r0, r2
 8017326:	e7fc      	b.n	8017322 <strncmp+0x1e>

08017328 <_localeconv_r>:
 8017328:	4800      	ldr	r0, [pc, #0]	@ (801732c <_localeconv_r+0x4>)
 801732a:	4770      	bx	lr
 801732c:	24000200 	.word	0x24000200

08017330 <_close_r>:
 8017330:	b538      	push	{r3, r4, r5, lr}
 8017332:	4d06      	ldr	r5, [pc, #24]	@ (801734c <_close_r+0x1c>)
 8017334:	2300      	movs	r3, #0
 8017336:	4604      	mov	r4, r0
 8017338:	4608      	mov	r0, r1
 801733a:	602b      	str	r3, [r5, #0]
 801733c:	f7eb f8c4 	bl	80024c8 <_close>
 8017340:	1c43      	adds	r3, r0, #1
 8017342:	d102      	bne.n	801734a <_close_r+0x1a>
 8017344:	682b      	ldr	r3, [r5, #0]
 8017346:	b103      	cbz	r3, 801734a <_close_r+0x1a>
 8017348:	6023      	str	r3, [r4, #0]
 801734a:	bd38      	pop	{r3, r4, r5, pc}
 801734c:	24006264 	.word	0x24006264

08017350 <_lseek_r>:
 8017350:	b538      	push	{r3, r4, r5, lr}
 8017352:	4d07      	ldr	r5, [pc, #28]	@ (8017370 <_lseek_r+0x20>)
 8017354:	4604      	mov	r4, r0
 8017356:	4608      	mov	r0, r1
 8017358:	4611      	mov	r1, r2
 801735a:	2200      	movs	r2, #0
 801735c:	602a      	str	r2, [r5, #0]
 801735e:	461a      	mov	r2, r3
 8017360:	f7eb f8d9 	bl	8002516 <_lseek>
 8017364:	1c43      	adds	r3, r0, #1
 8017366:	d102      	bne.n	801736e <_lseek_r+0x1e>
 8017368:	682b      	ldr	r3, [r5, #0]
 801736a:	b103      	cbz	r3, 801736e <_lseek_r+0x1e>
 801736c:	6023      	str	r3, [r4, #0]
 801736e:	bd38      	pop	{r3, r4, r5, pc}
 8017370:	24006264 	.word	0x24006264

08017374 <_read_r>:
 8017374:	b538      	push	{r3, r4, r5, lr}
 8017376:	4d07      	ldr	r5, [pc, #28]	@ (8017394 <_read_r+0x20>)
 8017378:	4604      	mov	r4, r0
 801737a:	4608      	mov	r0, r1
 801737c:	4611      	mov	r1, r2
 801737e:	2200      	movs	r2, #0
 8017380:	602a      	str	r2, [r5, #0]
 8017382:	461a      	mov	r2, r3
 8017384:	f7eb f867 	bl	8002456 <_read>
 8017388:	1c43      	adds	r3, r0, #1
 801738a:	d102      	bne.n	8017392 <_read_r+0x1e>
 801738c:	682b      	ldr	r3, [r5, #0]
 801738e:	b103      	cbz	r3, 8017392 <_read_r+0x1e>
 8017390:	6023      	str	r3, [r4, #0]
 8017392:	bd38      	pop	{r3, r4, r5, pc}
 8017394:	24006264 	.word	0x24006264

08017398 <_write_r>:
 8017398:	b538      	push	{r3, r4, r5, lr}
 801739a:	4d07      	ldr	r5, [pc, #28]	@ (80173b8 <_write_r+0x20>)
 801739c:	4604      	mov	r4, r0
 801739e:	4608      	mov	r0, r1
 80173a0:	4611      	mov	r1, r2
 80173a2:	2200      	movs	r2, #0
 80173a4:	602a      	str	r2, [r5, #0]
 80173a6:	461a      	mov	r2, r3
 80173a8:	f7eb f872 	bl	8002490 <_write>
 80173ac:	1c43      	adds	r3, r0, #1
 80173ae:	d102      	bne.n	80173b6 <_write_r+0x1e>
 80173b0:	682b      	ldr	r3, [r5, #0]
 80173b2:	b103      	cbz	r3, 80173b6 <_write_r+0x1e>
 80173b4:	6023      	str	r3, [r4, #0]
 80173b6:	bd38      	pop	{r3, r4, r5, pc}
 80173b8:	24006264 	.word	0x24006264

080173bc <__errno>:
 80173bc:	4b01      	ldr	r3, [pc, #4]	@ (80173c4 <__errno+0x8>)
 80173be:	6818      	ldr	r0, [r3, #0]
 80173c0:	4770      	bx	lr
 80173c2:	bf00      	nop
 80173c4:	2400027c 	.word	0x2400027c

080173c8 <__libc_init_array>:
 80173c8:	b570      	push	{r4, r5, r6, lr}
 80173ca:	4d0d      	ldr	r5, [pc, #52]	@ (8017400 <__libc_init_array+0x38>)
 80173cc:	4c0d      	ldr	r4, [pc, #52]	@ (8017404 <__libc_init_array+0x3c>)
 80173ce:	1b64      	subs	r4, r4, r5
 80173d0:	10a4      	asrs	r4, r4, #2
 80173d2:	2600      	movs	r6, #0
 80173d4:	42a6      	cmp	r6, r4
 80173d6:	d109      	bne.n	80173ec <__libc_init_array+0x24>
 80173d8:	4d0b      	ldr	r5, [pc, #44]	@ (8017408 <__libc_init_array+0x40>)
 80173da:	4c0c      	ldr	r4, [pc, #48]	@ (801740c <__libc_init_array+0x44>)
 80173dc:	f003 fb18 	bl	801aa10 <_init>
 80173e0:	1b64      	subs	r4, r4, r5
 80173e2:	10a4      	asrs	r4, r4, #2
 80173e4:	2600      	movs	r6, #0
 80173e6:	42a6      	cmp	r6, r4
 80173e8:	d105      	bne.n	80173f6 <__libc_init_array+0x2e>
 80173ea:	bd70      	pop	{r4, r5, r6, pc}
 80173ec:	f855 3b04 	ldr.w	r3, [r5], #4
 80173f0:	4798      	blx	r3
 80173f2:	3601      	adds	r6, #1
 80173f4:	e7ee      	b.n	80173d4 <__libc_init_array+0xc>
 80173f6:	f855 3b04 	ldr.w	r3, [r5], #4
 80173fa:	4798      	blx	r3
 80173fc:	3601      	adds	r6, #1
 80173fe:	e7f2      	b.n	80173e6 <__libc_init_array+0x1e>
 8017400:	0801b7d0 	.word	0x0801b7d0
 8017404:	0801b7d0 	.word	0x0801b7d0
 8017408:	0801b7d0 	.word	0x0801b7d0
 801740c:	0801b7d4 	.word	0x0801b7d4

08017410 <__retarget_lock_init_recursive>:
 8017410:	4770      	bx	lr

08017412 <__retarget_lock_acquire_recursive>:
 8017412:	4770      	bx	lr

08017414 <__retarget_lock_release_recursive>:
 8017414:	4770      	bx	lr

08017416 <memcpy>:
 8017416:	440a      	add	r2, r1
 8017418:	4291      	cmp	r1, r2
 801741a:	f100 33ff 	add.w	r3, r0, #4294967295
 801741e:	d100      	bne.n	8017422 <memcpy+0xc>
 8017420:	4770      	bx	lr
 8017422:	b510      	push	{r4, lr}
 8017424:	f811 4b01 	ldrb.w	r4, [r1], #1
 8017428:	f803 4f01 	strb.w	r4, [r3, #1]!
 801742c:	4291      	cmp	r1, r2
 801742e:	d1f9      	bne.n	8017424 <memcpy+0xe>
 8017430:	bd10      	pop	{r4, pc}
 8017432:	0000      	movs	r0, r0
 8017434:	0000      	movs	r0, r0
	...

08017438 <nan>:
 8017438:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 8017440 <nan+0x8>
 801743c:	4770      	bx	lr
 801743e:	bf00      	nop
 8017440:	00000000 	.word	0x00000000
 8017444:	7ff80000 	.word	0x7ff80000

08017448 <quorem>:
 8017448:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801744c:	6903      	ldr	r3, [r0, #16]
 801744e:	690c      	ldr	r4, [r1, #16]
 8017450:	42a3      	cmp	r3, r4
 8017452:	4607      	mov	r7, r0
 8017454:	db7e      	blt.n	8017554 <quorem+0x10c>
 8017456:	3c01      	subs	r4, #1
 8017458:	f101 0814 	add.w	r8, r1, #20
 801745c:	00a3      	lsls	r3, r4, #2
 801745e:	f100 0514 	add.w	r5, r0, #20
 8017462:	9300      	str	r3, [sp, #0]
 8017464:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8017468:	9301      	str	r3, [sp, #4]
 801746a:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 801746e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8017472:	3301      	adds	r3, #1
 8017474:	429a      	cmp	r2, r3
 8017476:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 801747a:	fbb2 f6f3 	udiv	r6, r2, r3
 801747e:	d32e      	bcc.n	80174de <quorem+0x96>
 8017480:	f04f 0a00 	mov.w	sl, #0
 8017484:	46c4      	mov	ip, r8
 8017486:	46ae      	mov	lr, r5
 8017488:	46d3      	mov	fp, sl
 801748a:	f85c 3b04 	ldr.w	r3, [ip], #4
 801748e:	b298      	uxth	r0, r3
 8017490:	fb06 a000 	mla	r0, r6, r0, sl
 8017494:	0c02      	lsrs	r2, r0, #16
 8017496:	0c1b      	lsrs	r3, r3, #16
 8017498:	fb06 2303 	mla	r3, r6, r3, r2
 801749c:	f8de 2000 	ldr.w	r2, [lr]
 80174a0:	b280      	uxth	r0, r0
 80174a2:	b292      	uxth	r2, r2
 80174a4:	1a12      	subs	r2, r2, r0
 80174a6:	445a      	add	r2, fp
 80174a8:	f8de 0000 	ldr.w	r0, [lr]
 80174ac:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80174b0:	b29b      	uxth	r3, r3
 80174b2:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80174b6:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80174ba:	b292      	uxth	r2, r2
 80174bc:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80174c0:	45e1      	cmp	r9, ip
 80174c2:	f84e 2b04 	str.w	r2, [lr], #4
 80174c6:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80174ca:	d2de      	bcs.n	801748a <quorem+0x42>
 80174cc:	9b00      	ldr	r3, [sp, #0]
 80174ce:	58eb      	ldr	r3, [r5, r3]
 80174d0:	b92b      	cbnz	r3, 80174de <quorem+0x96>
 80174d2:	9b01      	ldr	r3, [sp, #4]
 80174d4:	3b04      	subs	r3, #4
 80174d6:	429d      	cmp	r5, r3
 80174d8:	461a      	mov	r2, r3
 80174da:	d32f      	bcc.n	801753c <quorem+0xf4>
 80174dc:	613c      	str	r4, [r7, #16]
 80174de:	4638      	mov	r0, r7
 80174e0:	f001 fca0 	bl	8018e24 <__mcmp>
 80174e4:	2800      	cmp	r0, #0
 80174e6:	db25      	blt.n	8017534 <quorem+0xec>
 80174e8:	4629      	mov	r1, r5
 80174ea:	2000      	movs	r0, #0
 80174ec:	f858 2b04 	ldr.w	r2, [r8], #4
 80174f0:	f8d1 c000 	ldr.w	ip, [r1]
 80174f4:	fa1f fe82 	uxth.w	lr, r2
 80174f8:	fa1f f38c 	uxth.w	r3, ip
 80174fc:	eba3 030e 	sub.w	r3, r3, lr
 8017500:	4403      	add	r3, r0
 8017502:	0c12      	lsrs	r2, r2, #16
 8017504:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8017508:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 801750c:	b29b      	uxth	r3, r3
 801750e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8017512:	45c1      	cmp	r9, r8
 8017514:	f841 3b04 	str.w	r3, [r1], #4
 8017518:	ea4f 4022 	mov.w	r0, r2, asr #16
 801751c:	d2e6      	bcs.n	80174ec <quorem+0xa4>
 801751e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8017522:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8017526:	b922      	cbnz	r2, 8017532 <quorem+0xea>
 8017528:	3b04      	subs	r3, #4
 801752a:	429d      	cmp	r5, r3
 801752c:	461a      	mov	r2, r3
 801752e:	d30b      	bcc.n	8017548 <quorem+0x100>
 8017530:	613c      	str	r4, [r7, #16]
 8017532:	3601      	adds	r6, #1
 8017534:	4630      	mov	r0, r6
 8017536:	b003      	add	sp, #12
 8017538:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801753c:	6812      	ldr	r2, [r2, #0]
 801753e:	3b04      	subs	r3, #4
 8017540:	2a00      	cmp	r2, #0
 8017542:	d1cb      	bne.n	80174dc <quorem+0x94>
 8017544:	3c01      	subs	r4, #1
 8017546:	e7c6      	b.n	80174d6 <quorem+0x8e>
 8017548:	6812      	ldr	r2, [r2, #0]
 801754a:	3b04      	subs	r3, #4
 801754c:	2a00      	cmp	r2, #0
 801754e:	d1ef      	bne.n	8017530 <quorem+0xe8>
 8017550:	3c01      	subs	r4, #1
 8017552:	e7ea      	b.n	801752a <quorem+0xe2>
 8017554:	2000      	movs	r0, #0
 8017556:	e7ee      	b.n	8017536 <quorem+0xee>

08017558 <_dtoa_r>:
 8017558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801755c:	ed2d 8b02 	vpush	{d8}
 8017560:	69c7      	ldr	r7, [r0, #28]
 8017562:	b091      	sub	sp, #68	@ 0x44
 8017564:	ed8d 0b02 	vstr	d0, [sp, #8]
 8017568:	ec55 4b10 	vmov	r4, r5, d0
 801756c:	9e1c      	ldr	r6, [sp, #112]	@ 0x70
 801756e:	9107      	str	r1, [sp, #28]
 8017570:	4681      	mov	r9, r0
 8017572:	9209      	str	r2, [sp, #36]	@ 0x24
 8017574:	930d      	str	r3, [sp, #52]	@ 0x34
 8017576:	b97f      	cbnz	r7, 8017598 <_dtoa_r+0x40>
 8017578:	2010      	movs	r0, #16
 801757a:	f001 f8c7 	bl	801870c <malloc>
 801757e:	4602      	mov	r2, r0
 8017580:	f8c9 001c 	str.w	r0, [r9, #28]
 8017584:	b920      	cbnz	r0, 8017590 <_dtoa_r+0x38>
 8017586:	4ba0      	ldr	r3, [pc, #640]	@ (8017808 <_dtoa_r+0x2b0>)
 8017588:	21ef      	movs	r1, #239	@ 0xef
 801758a:	48a0      	ldr	r0, [pc, #640]	@ (801780c <_dtoa_r+0x2b4>)
 801758c:	f002 f870 	bl	8019670 <__assert_func>
 8017590:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8017594:	6007      	str	r7, [r0, #0]
 8017596:	60c7      	str	r7, [r0, #12]
 8017598:	f8d9 301c 	ldr.w	r3, [r9, #28]
 801759c:	6819      	ldr	r1, [r3, #0]
 801759e:	b159      	cbz	r1, 80175b8 <_dtoa_r+0x60>
 80175a0:	685a      	ldr	r2, [r3, #4]
 80175a2:	604a      	str	r2, [r1, #4]
 80175a4:	2301      	movs	r3, #1
 80175a6:	4093      	lsls	r3, r2
 80175a8:	608b      	str	r3, [r1, #8]
 80175aa:	4648      	mov	r0, r9
 80175ac:	f001 f9b6 	bl	801891c <_Bfree>
 80175b0:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80175b4:	2200      	movs	r2, #0
 80175b6:	601a      	str	r2, [r3, #0]
 80175b8:	1e2b      	subs	r3, r5, #0
 80175ba:	bfbb      	ittet	lt
 80175bc:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80175c0:	9303      	strlt	r3, [sp, #12]
 80175c2:	2300      	movge	r3, #0
 80175c4:	2201      	movlt	r2, #1
 80175c6:	bfac      	ite	ge
 80175c8:	6033      	strge	r3, [r6, #0]
 80175ca:	6032      	strlt	r2, [r6, #0]
 80175cc:	4b90      	ldr	r3, [pc, #576]	@ (8017810 <_dtoa_r+0x2b8>)
 80175ce:	9e03      	ldr	r6, [sp, #12]
 80175d0:	43b3      	bics	r3, r6
 80175d2:	d110      	bne.n	80175f6 <_dtoa_r+0x9e>
 80175d4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80175d6:	f242 730f 	movw	r3, #9999	@ 0x270f
 80175da:	6013      	str	r3, [r2, #0]
 80175dc:	f3c6 0313 	ubfx	r3, r6, #0, #20
 80175e0:	4323      	orrs	r3, r4
 80175e2:	f000 84de 	beq.w	8017fa2 <_dtoa_r+0xa4a>
 80175e6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80175e8:	4f8a      	ldr	r7, [pc, #552]	@ (8017814 <_dtoa_r+0x2bc>)
 80175ea:	2b00      	cmp	r3, #0
 80175ec:	f000 84e0 	beq.w	8017fb0 <_dtoa_r+0xa58>
 80175f0:	1cfb      	adds	r3, r7, #3
 80175f2:	f000 bcdb 	b.w	8017fac <_dtoa_r+0xa54>
 80175f6:	ed9d 8b02 	vldr	d8, [sp, #8]
 80175fa:	eeb5 8b40 	vcmp.f64	d8, #0.0
 80175fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017602:	d10a      	bne.n	801761a <_dtoa_r+0xc2>
 8017604:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017606:	2301      	movs	r3, #1
 8017608:	6013      	str	r3, [r2, #0]
 801760a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801760c:	b113      	cbz	r3, 8017614 <_dtoa_r+0xbc>
 801760e:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8017610:	4b81      	ldr	r3, [pc, #516]	@ (8017818 <_dtoa_r+0x2c0>)
 8017612:	6013      	str	r3, [r2, #0]
 8017614:	4f81      	ldr	r7, [pc, #516]	@ (801781c <_dtoa_r+0x2c4>)
 8017616:	f000 bccb 	b.w	8017fb0 <_dtoa_r+0xa58>
 801761a:	aa0e      	add	r2, sp, #56	@ 0x38
 801761c:	a90f      	add	r1, sp, #60	@ 0x3c
 801761e:	4648      	mov	r0, r9
 8017620:	eeb0 0b48 	vmov.f64	d0, d8
 8017624:	f001 fd1e 	bl	8019064 <__d2b>
 8017628:	f3c6 530a 	ubfx	r3, r6, #20, #11
 801762c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801762e:	9001      	str	r0, [sp, #4]
 8017630:	2b00      	cmp	r3, #0
 8017632:	d045      	beq.n	80176c0 <_dtoa_r+0x168>
 8017634:	eeb0 7b48 	vmov.f64	d7, d8
 8017638:	ee18 1a90 	vmov	r1, s17
 801763c:	f3c1 0113 	ubfx	r1, r1, #0, #20
 8017640:	f041 517f 	orr.w	r1, r1, #1069547520	@ 0x3fc00000
 8017644:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 8017648:	f2a3 33ff 	subw	r3, r3, #1023	@ 0x3ff
 801764c:	2500      	movs	r5, #0
 801764e:	ee07 1a90 	vmov	s15, r1
 8017652:	eeb7 6b08 	vmov.f64	d6, #120	@ 0x3fc00000  1.5
 8017656:	ed9f 5b66 	vldr	d5, [pc, #408]	@ 80177f0 <_dtoa_r+0x298>
 801765a:	ee37 7b46 	vsub.f64	d7, d7, d6
 801765e:	ed9f 6b66 	vldr	d6, [pc, #408]	@ 80177f8 <_dtoa_r+0x2a0>
 8017662:	eea7 6b05 	vfma.f64	d6, d7, d5
 8017666:	ed9f 5b66 	vldr	d5, [pc, #408]	@ 8017800 <_dtoa_r+0x2a8>
 801766a:	ee07 3a90 	vmov	s15, r3
 801766e:	eeb8 4be7 	vcvt.f64.s32	d4, s15
 8017672:	eeb0 7b46 	vmov.f64	d7, d6
 8017676:	eea4 7b05 	vfma.f64	d7, d4, d5
 801767a:	eefd 6bc7 	vcvt.s32.f64	s13, d7
 801767e:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 8017682:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017686:	ee16 8a90 	vmov	r8, s13
 801768a:	d508      	bpl.n	801769e <_dtoa_r+0x146>
 801768c:	eeb8 6be6 	vcvt.f64.s32	d6, s13
 8017690:	eeb4 6b47 	vcmp.f64	d6, d7
 8017694:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017698:	bf18      	it	ne
 801769a:	f108 38ff 	addne.w	r8, r8, #4294967295
 801769e:	f1b8 0f16 	cmp.w	r8, #22
 80176a2:	d82b      	bhi.n	80176fc <_dtoa_r+0x1a4>
 80176a4:	495e      	ldr	r1, [pc, #376]	@ (8017820 <_dtoa_r+0x2c8>)
 80176a6:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
 80176aa:	ed91 7b00 	vldr	d7, [r1]
 80176ae:	eeb4 8bc7 	vcmpe.f64	d8, d7
 80176b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176b6:	d501      	bpl.n	80176bc <_dtoa_r+0x164>
 80176b8:	f108 38ff 	add.w	r8, r8, #4294967295
 80176bc:	2100      	movs	r1, #0
 80176be:	e01e      	b.n	80176fe <_dtoa_r+0x1a6>
 80176c0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80176c2:	4413      	add	r3, r2
 80176c4:	f203 4132 	addw	r1, r3, #1074	@ 0x432
 80176c8:	2920      	cmp	r1, #32
 80176ca:	bfc1      	itttt	gt
 80176cc:	f1c1 0140 	rsbgt	r1, r1, #64	@ 0x40
 80176d0:	408e      	lslgt	r6, r1
 80176d2:	f203 4112 	addwgt	r1, r3, #1042	@ 0x412
 80176d6:	fa24 f101 	lsrgt.w	r1, r4, r1
 80176da:	bfd6      	itet	le
 80176dc:	f1c1 0120 	rsble	r1, r1, #32
 80176e0:	4331      	orrgt	r1, r6
 80176e2:	fa04 f101 	lslle.w	r1, r4, r1
 80176e6:	ee07 1a90 	vmov	s15, r1
 80176ea:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80176ee:	3b01      	subs	r3, #1
 80176f0:	ee17 1a90 	vmov	r1, s15
 80176f4:	2501      	movs	r5, #1
 80176f6:	f1a1 71f8 	sub.w	r1, r1, #32505856	@ 0x1f00000
 80176fa:	e7a8      	b.n	801764e <_dtoa_r+0xf6>
 80176fc:	2101      	movs	r1, #1
 80176fe:	1ad2      	subs	r2, r2, r3
 8017700:	1e53      	subs	r3, r2, #1
 8017702:	9306      	str	r3, [sp, #24]
 8017704:	bf45      	ittet	mi
 8017706:	f1c2 0301 	rsbmi	r3, r2, #1
 801770a:	9305      	strmi	r3, [sp, #20]
 801770c:	2300      	movpl	r3, #0
 801770e:	2300      	movmi	r3, #0
 8017710:	bf4c      	ite	mi
 8017712:	9306      	strmi	r3, [sp, #24]
 8017714:	9305      	strpl	r3, [sp, #20]
 8017716:	f1b8 0f00 	cmp.w	r8, #0
 801771a:	910c      	str	r1, [sp, #48]	@ 0x30
 801771c:	db18      	blt.n	8017750 <_dtoa_r+0x1f8>
 801771e:	9b06      	ldr	r3, [sp, #24]
 8017720:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 8017724:	4443      	add	r3, r8
 8017726:	9306      	str	r3, [sp, #24]
 8017728:	2300      	movs	r3, #0
 801772a:	9a07      	ldr	r2, [sp, #28]
 801772c:	2a09      	cmp	r2, #9
 801772e:	d849      	bhi.n	80177c4 <_dtoa_r+0x26c>
 8017730:	2a05      	cmp	r2, #5
 8017732:	bfc4      	itt	gt
 8017734:	3a04      	subgt	r2, #4
 8017736:	9207      	strgt	r2, [sp, #28]
 8017738:	9a07      	ldr	r2, [sp, #28]
 801773a:	f1a2 0202 	sub.w	r2, r2, #2
 801773e:	bfcc      	ite	gt
 8017740:	2400      	movgt	r4, #0
 8017742:	2401      	movle	r4, #1
 8017744:	2a03      	cmp	r2, #3
 8017746:	d848      	bhi.n	80177da <_dtoa_r+0x282>
 8017748:	e8df f002 	tbb	[pc, r2]
 801774c:	3a2c2e0b 	.word	0x3a2c2e0b
 8017750:	9b05      	ldr	r3, [sp, #20]
 8017752:	2200      	movs	r2, #0
 8017754:	eba3 0308 	sub.w	r3, r3, r8
 8017758:	9305      	str	r3, [sp, #20]
 801775a:	920a      	str	r2, [sp, #40]	@ 0x28
 801775c:	f1c8 0300 	rsb	r3, r8, #0
 8017760:	e7e3      	b.n	801772a <_dtoa_r+0x1d2>
 8017762:	2200      	movs	r2, #0
 8017764:	9208      	str	r2, [sp, #32]
 8017766:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017768:	2a00      	cmp	r2, #0
 801776a:	dc39      	bgt.n	80177e0 <_dtoa_r+0x288>
 801776c:	f04f 0b01 	mov.w	fp, #1
 8017770:	46da      	mov	sl, fp
 8017772:	465a      	mov	r2, fp
 8017774:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 8017778:	f8d9 701c 	ldr.w	r7, [r9, #28]
 801777c:	2100      	movs	r1, #0
 801777e:	2004      	movs	r0, #4
 8017780:	f100 0614 	add.w	r6, r0, #20
 8017784:	4296      	cmp	r6, r2
 8017786:	d930      	bls.n	80177ea <_dtoa_r+0x292>
 8017788:	6079      	str	r1, [r7, #4]
 801778a:	4648      	mov	r0, r9
 801778c:	9304      	str	r3, [sp, #16]
 801778e:	f001 f885 	bl	801889c <_Balloc>
 8017792:	9b04      	ldr	r3, [sp, #16]
 8017794:	4607      	mov	r7, r0
 8017796:	2800      	cmp	r0, #0
 8017798:	d146      	bne.n	8017828 <_dtoa_r+0x2d0>
 801779a:	4b22      	ldr	r3, [pc, #136]	@ (8017824 <_dtoa_r+0x2cc>)
 801779c:	4602      	mov	r2, r0
 801779e:	f240 11af 	movw	r1, #431	@ 0x1af
 80177a2:	e6f2      	b.n	801758a <_dtoa_r+0x32>
 80177a4:	2201      	movs	r2, #1
 80177a6:	e7dd      	b.n	8017764 <_dtoa_r+0x20c>
 80177a8:	2200      	movs	r2, #0
 80177aa:	9208      	str	r2, [sp, #32]
 80177ac:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80177ae:	eb08 0b02 	add.w	fp, r8, r2
 80177b2:	f10b 0a01 	add.w	sl, fp, #1
 80177b6:	4652      	mov	r2, sl
 80177b8:	2a01      	cmp	r2, #1
 80177ba:	bfb8      	it	lt
 80177bc:	2201      	movlt	r2, #1
 80177be:	e7db      	b.n	8017778 <_dtoa_r+0x220>
 80177c0:	2201      	movs	r2, #1
 80177c2:	e7f2      	b.n	80177aa <_dtoa_r+0x252>
 80177c4:	2401      	movs	r4, #1
 80177c6:	2200      	movs	r2, #0
 80177c8:	e9cd 2407 	strd	r2, r4, [sp, #28]
 80177cc:	f04f 3bff 	mov.w	fp, #4294967295
 80177d0:	2100      	movs	r1, #0
 80177d2:	46da      	mov	sl, fp
 80177d4:	2212      	movs	r2, #18
 80177d6:	9109      	str	r1, [sp, #36]	@ 0x24
 80177d8:	e7ce      	b.n	8017778 <_dtoa_r+0x220>
 80177da:	2201      	movs	r2, #1
 80177dc:	9208      	str	r2, [sp, #32]
 80177de:	e7f5      	b.n	80177cc <_dtoa_r+0x274>
 80177e0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80177e4:	46da      	mov	sl, fp
 80177e6:	465a      	mov	r2, fp
 80177e8:	e7c6      	b.n	8017778 <_dtoa_r+0x220>
 80177ea:	3101      	adds	r1, #1
 80177ec:	0040      	lsls	r0, r0, #1
 80177ee:	e7c7      	b.n	8017780 <_dtoa_r+0x228>
 80177f0:	636f4361 	.word	0x636f4361
 80177f4:	3fd287a7 	.word	0x3fd287a7
 80177f8:	8b60c8b3 	.word	0x8b60c8b3
 80177fc:	3fc68a28 	.word	0x3fc68a28
 8017800:	509f79fb 	.word	0x509f79fb
 8017804:	3fd34413 	.word	0x3fd34413
 8017808:	0801b22a 	.word	0x0801b22a
 801780c:	0801b241 	.word	0x0801b241
 8017810:	7ff00000 	.word	0x7ff00000
 8017814:	0801b226 	.word	0x0801b226
 8017818:	0801b1f2 	.word	0x0801b1f2
 801781c:	0801b1f1 	.word	0x0801b1f1
 8017820:	0801b398 	.word	0x0801b398
 8017824:	0801b299 	.word	0x0801b299
 8017828:	f8d9 201c 	ldr.w	r2, [r9, #28]
 801782c:	f1ba 0f0e 	cmp.w	sl, #14
 8017830:	6010      	str	r0, [r2, #0]
 8017832:	d86f      	bhi.n	8017914 <_dtoa_r+0x3bc>
 8017834:	2c00      	cmp	r4, #0
 8017836:	d06d      	beq.n	8017914 <_dtoa_r+0x3bc>
 8017838:	f1b8 0f00 	cmp.w	r8, #0
 801783c:	f340 80c2 	ble.w	80179c4 <_dtoa_r+0x46c>
 8017840:	4aca      	ldr	r2, [pc, #808]	@ (8017b6c <_dtoa_r+0x614>)
 8017842:	f008 010f 	and.w	r1, r8, #15
 8017846:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 801784a:	f418 7f80 	tst.w	r8, #256	@ 0x100
 801784e:	ed92 7b00 	vldr	d7, [r2]
 8017852:	ea4f 1128 	mov.w	r1, r8, asr #4
 8017856:	f000 80a9 	beq.w	80179ac <_dtoa_r+0x454>
 801785a:	4ac5      	ldr	r2, [pc, #788]	@ (8017b70 <_dtoa_r+0x618>)
 801785c:	ed92 6b08 	vldr	d6, [r2, #32]
 8017860:	ee88 6b06 	vdiv.f64	d6, d8, d6
 8017864:	ed8d 6b02 	vstr	d6, [sp, #8]
 8017868:	f001 010f 	and.w	r1, r1, #15
 801786c:	2203      	movs	r2, #3
 801786e:	48c0      	ldr	r0, [pc, #768]	@ (8017b70 <_dtoa_r+0x618>)
 8017870:	2900      	cmp	r1, #0
 8017872:	f040 809d 	bne.w	80179b0 <_dtoa_r+0x458>
 8017876:	ed9d 6b02 	vldr	d6, [sp, #8]
 801787a:	ee86 7b07 	vdiv.f64	d7, d6, d7
 801787e:	ed8d 7b02 	vstr	d7, [sp, #8]
 8017882:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8017884:	ed9d 7b02 	vldr	d7, [sp, #8]
 8017888:	2900      	cmp	r1, #0
 801788a:	f000 80c1 	beq.w	8017a10 <_dtoa_r+0x4b8>
 801788e:	eeb7 6b00 	vmov.f64	d6, #112	@ 0x3f800000  1.0
 8017892:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8017896:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801789a:	f140 80b9 	bpl.w	8017a10 <_dtoa_r+0x4b8>
 801789e:	f1ba 0f00 	cmp.w	sl, #0
 80178a2:	f000 80b5 	beq.w	8017a10 <_dtoa_r+0x4b8>
 80178a6:	f1bb 0f00 	cmp.w	fp, #0
 80178aa:	dd31      	ble.n	8017910 <_dtoa_r+0x3b8>
 80178ac:	eeb2 6b04 	vmov.f64	d6, #36	@ 0x41200000  10.0
 80178b0:	ee27 7b06 	vmul.f64	d7, d7, d6
 80178b4:	ed8d 7b02 	vstr	d7, [sp, #8]
 80178b8:	f108 31ff 	add.w	r1, r8, #4294967295
 80178bc:	9104      	str	r1, [sp, #16]
 80178be:	3201      	adds	r2, #1
 80178c0:	465c      	mov	r4, fp
 80178c2:	ed9d 6b02 	vldr	d6, [sp, #8]
 80178c6:	eeb1 5b0c 	vmov.f64	d5, #28	@ 0x40e00000  7.0
 80178ca:	ee07 2a90 	vmov	s15, r2
 80178ce:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 80178d2:	eea7 5b06 	vfma.f64	d5, d7, d6
 80178d6:	ee15 2a90 	vmov	r2, s11
 80178da:	ec51 0b15 	vmov	r0, r1, d5
 80178de:	f1a2 7150 	sub.w	r1, r2, #54525952	@ 0x3400000
 80178e2:	2c00      	cmp	r4, #0
 80178e4:	f040 8098 	bne.w	8017a18 <_dtoa_r+0x4c0>
 80178e8:	eeb1 7b04 	vmov.f64	d7, #20	@ 0x40a00000  5.0
 80178ec:	ee36 6b47 	vsub.f64	d6, d6, d7
 80178f0:	ec41 0b17 	vmov	d7, r0, r1
 80178f4:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80178f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80178fc:	f300 8261 	bgt.w	8017dc2 <_dtoa_r+0x86a>
 8017900:	eeb1 7b47 	vneg.f64	d7, d7
 8017904:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8017908:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801790c:	f100 80f5 	bmi.w	8017afa <_dtoa_r+0x5a2>
 8017910:	ed8d 8b02 	vstr	d8, [sp, #8]
 8017914:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017916:	2a00      	cmp	r2, #0
 8017918:	f2c0 812c 	blt.w	8017b74 <_dtoa_r+0x61c>
 801791c:	f1b8 0f0e 	cmp.w	r8, #14
 8017920:	f300 8128 	bgt.w	8017b74 <_dtoa_r+0x61c>
 8017924:	4b91      	ldr	r3, [pc, #580]	@ (8017b6c <_dtoa_r+0x614>)
 8017926:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 801792a:	ed93 6b00 	vldr	d6, [r3]
 801792e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017930:	2b00      	cmp	r3, #0
 8017932:	da03      	bge.n	801793c <_dtoa_r+0x3e4>
 8017934:	f1ba 0f00 	cmp.w	sl, #0
 8017938:	f340 80d2 	ble.w	8017ae0 <_dtoa_r+0x588>
 801793c:	eeb2 4b04 	vmov.f64	d4, #36	@ 0x41200000  10.0
 8017940:	ed9d 7b02 	vldr	d7, [sp, #8]
 8017944:	463e      	mov	r6, r7
 8017946:	ee87 5b06 	vdiv.f64	d5, d7, d6
 801794a:	eebd 5bc5 	vcvt.s32.f64	s10, d5
 801794e:	ee15 3a10 	vmov	r3, s10
 8017952:	3330      	adds	r3, #48	@ 0x30
 8017954:	f806 3b01 	strb.w	r3, [r6], #1
 8017958:	1bf3      	subs	r3, r6, r7
 801795a:	459a      	cmp	sl, r3
 801795c:	eeb8 3bc5 	vcvt.f64.s32	d3, s10
 8017960:	eea3 7b46 	vfms.f64	d7, d3, d6
 8017964:	f040 80f8 	bne.w	8017b58 <_dtoa_r+0x600>
 8017968:	ee37 7b07 	vadd.f64	d7, d7, d7
 801796c:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8017970:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017974:	f300 80dd 	bgt.w	8017b32 <_dtoa_r+0x5da>
 8017978:	eeb4 7b46 	vcmp.f64	d7, d6
 801797c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017980:	d104      	bne.n	801798c <_dtoa_r+0x434>
 8017982:	ee15 3a10 	vmov	r3, s10
 8017986:	07db      	lsls	r3, r3, #31
 8017988:	f100 80d3 	bmi.w	8017b32 <_dtoa_r+0x5da>
 801798c:	9901      	ldr	r1, [sp, #4]
 801798e:	4648      	mov	r0, r9
 8017990:	f000 ffc4 	bl	801891c <_Bfree>
 8017994:	2300      	movs	r3, #0
 8017996:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017998:	7033      	strb	r3, [r6, #0]
 801799a:	f108 0301 	add.w	r3, r8, #1
 801799e:	6013      	str	r3, [r2, #0]
 80179a0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80179a2:	2b00      	cmp	r3, #0
 80179a4:	f000 8304 	beq.w	8017fb0 <_dtoa_r+0xa58>
 80179a8:	601e      	str	r6, [r3, #0]
 80179aa:	e301      	b.n	8017fb0 <_dtoa_r+0xa58>
 80179ac:	2202      	movs	r2, #2
 80179ae:	e75e      	b.n	801786e <_dtoa_r+0x316>
 80179b0:	07cc      	lsls	r4, r1, #31
 80179b2:	d504      	bpl.n	80179be <_dtoa_r+0x466>
 80179b4:	ed90 6b00 	vldr	d6, [r0]
 80179b8:	3201      	adds	r2, #1
 80179ba:	ee27 7b06 	vmul.f64	d7, d7, d6
 80179be:	1049      	asrs	r1, r1, #1
 80179c0:	3008      	adds	r0, #8
 80179c2:	e755      	b.n	8017870 <_dtoa_r+0x318>
 80179c4:	d022      	beq.n	8017a0c <_dtoa_r+0x4b4>
 80179c6:	f1c8 0100 	rsb	r1, r8, #0
 80179ca:	4a68      	ldr	r2, [pc, #416]	@ (8017b6c <_dtoa_r+0x614>)
 80179cc:	f001 000f 	and.w	r0, r1, #15
 80179d0:	eb02 02c0 	add.w	r2, r2, r0, lsl #3
 80179d4:	ed92 7b00 	vldr	d7, [r2]
 80179d8:	ee28 7b07 	vmul.f64	d7, d8, d7
 80179dc:	ed8d 7b02 	vstr	d7, [sp, #8]
 80179e0:	4863      	ldr	r0, [pc, #396]	@ (8017b70 <_dtoa_r+0x618>)
 80179e2:	1109      	asrs	r1, r1, #4
 80179e4:	2400      	movs	r4, #0
 80179e6:	2202      	movs	r2, #2
 80179e8:	b929      	cbnz	r1, 80179f6 <_dtoa_r+0x49e>
 80179ea:	2c00      	cmp	r4, #0
 80179ec:	f43f af49 	beq.w	8017882 <_dtoa_r+0x32a>
 80179f0:	ed8d 7b02 	vstr	d7, [sp, #8]
 80179f4:	e745      	b.n	8017882 <_dtoa_r+0x32a>
 80179f6:	07ce      	lsls	r6, r1, #31
 80179f8:	d505      	bpl.n	8017a06 <_dtoa_r+0x4ae>
 80179fa:	ed90 6b00 	vldr	d6, [r0]
 80179fe:	3201      	adds	r2, #1
 8017a00:	2401      	movs	r4, #1
 8017a02:	ee27 7b06 	vmul.f64	d7, d7, d6
 8017a06:	1049      	asrs	r1, r1, #1
 8017a08:	3008      	adds	r0, #8
 8017a0a:	e7ed      	b.n	80179e8 <_dtoa_r+0x490>
 8017a0c:	2202      	movs	r2, #2
 8017a0e:	e738      	b.n	8017882 <_dtoa_r+0x32a>
 8017a10:	f8cd 8010 	str.w	r8, [sp, #16]
 8017a14:	4654      	mov	r4, sl
 8017a16:	e754      	b.n	80178c2 <_dtoa_r+0x36a>
 8017a18:	4a54      	ldr	r2, [pc, #336]	@ (8017b6c <_dtoa_r+0x614>)
 8017a1a:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 8017a1e:	ed12 4b02 	vldr	d4, [r2, #-8]
 8017a22:	9a08      	ldr	r2, [sp, #32]
 8017a24:	ec41 0b17 	vmov	d7, r0, r1
 8017a28:	443c      	add	r4, r7
 8017a2a:	b34a      	cbz	r2, 8017a80 <_dtoa_r+0x528>
 8017a2c:	eeb6 3b00 	vmov.f64	d3, #96	@ 0x3f000000  0.5
 8017a30:	eeb7 2b00 	vmov.f64	d2, #112	@ 0x3f800000  1.0
 8017a34:	463e      	mov	r6, r7
 8017a36:	ee83 5b04 	vdiv.f64	d5, d3, d4
 8017a3a:	eeb2 3b04 	vmov.f64	d3, #36	@ 0x41200000  10.0
 8017a3e:	ee35 7b47 	vsub.f64	d7, d5, d7
 8017a42:	eefd 4bc6 	vcvt.s32.f64	s9, d6
 8017a46:	ee14 2a90 	vmov	r2, s9
 8017a4a:	eeb8 5be4 	vcvt.f64.s32	d5, s9
 8017a4e:	3230      	adds	r2, #48	@ 0x30
 8017a50:	ee36 6b45 	vsub.f64	d6, d6, d5
 8017a54:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8017a58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017a5c:	f806 2b01 	strb.w	r2, [r6], #1
 8017a60:	d438      	bmi.n	8017ad4 <_dtoa_r+0x57c>
 8017a62:	ee32 5b46 	vsub.f64	d5, d2, d6
 8017a66:	eeb4 5bc7 	vcmpe.f64	d5, d7
 8017a6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017a6e:	d462      	bmi.n	8017b36 <_dtoa_r+0x5de>
 8017a70:	42a6      	cmp	r6, r4
 8017a72:	f43f af4d 	beq.w	8017910 <_dtoa_r+0x3b8>
 8017a76:	ee27 7b03 	vmul.f64	d7, d7, d3
 8017a7a:	ee26 6b03 	vmul.f64	d6, d6, d3
 8017a7e:	e7e0      	b.n	8017a42 <_dtoa_r+0x4ea>
 8017a80:	4621      	mov	r1, r4
 8017a82:	463e      	mov	r6, r7
 8017a84:	ee27 7b04 	vmul.f64	d7, d7, d4
 8017a88:	eeb2 3b04 	vmov.f64	d3, #36	@ 0x41200000  10.0
 8017a8c:	eefd 4bc6 	vcvt.s32.f64	s9, d6
 8017a90:	ee14 2a90 	vmov	r2, s9
 8017a94:	3230      	adds	r2, #48	@ 0x30
 8017a96:	f806 2b01 	strb.w	r2, [r6], #1
 8017a9a:	42a6      	cmp	r6, r4
 8017a9c:	eeb8 5be4 	vcvt.f64.s32	d5, s9
 8017aa0:	ee36 6b45 	vsub.f64	d6, d6, d5
 8017aa4:	d119      	bne.n	8017ada <_dtoa_r+0x582>
 8017aa6:	eeb6 5b00 	vmov.f64	d5, #96	@ 0x3f000000  0.5
 8017aaa:	ee37 4b05 	vadd.f64	d4, d7, d5
 8017aae:	eeb4 6bc4 	vcmpe.f64	d6, d4
 8017ab2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017ab6:	dc3e      	bgt.n	8017b36 <_dtoa_r+0x5de>
 8017ab8:	ee35 5b47 	vsub.f64	d5, d5, d7
 8017abc:	eeb4 6bc5 	vcmpe.f64	d6, d5
 8017ac0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017ac4:	f57f af24 	bpl.w	8017910 <_dtoa_r+0x3b8>
 8017ac8:	460e      	mov	r6, r1
 8017aca:	3901      	subs	r1, #1
 8017acc:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8017ad0:	2b30      	cmp	r3, #48	@ 0x30
 8017ad2:	d0f9      	beq.n	8017ac8 <_dtoa_r+0x570>
 8017ad4:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8017ad8:	e758      	b.n	801798c <_dtoa_r+0x434>
 8017ada:	ee26 6b03 	vmul.f64	d6, d6, d3
 8017ade:	e7d5      	b.n	8017a8c <_dtoa_r+0x534>
 8017ae0:	d10b      	bne.n	8017afa <_dtoa_r+0x5a2>
 8017ae2:	eeb1 7b04 	vmov.f64	d7, #20	@ 0x40a00000  5.0
 8017ae6:	ee26 6b07 	vmul.f64	d6, d6, d7
 8017aea:	ed9d 7b02 	vldr	d7, [sp, #8]
 8017aee:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8017af2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017af6:	f2c0 8161 	blt.w	8017dbc <_dtoa_r+0x864>
 8017afa:	2400      	movs	r4, #0
 8017afc:	4625      	mov	r5, r4
 8017afe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017b00:	43db      	mvns	r3, r3
 8017b02:	9304      	str	r3, [sp, #16]
 8017b04:	463e      	mov	r6, r7
 8017b06:	f04f 0800 	mov.w	r8, #0
 8017b0a:	4621      	mov	r1, r4
 8017b0c:	4648      	mov	r0, r9
 8017b0e:	f000 ff05 	bl	801891c <_Bfree>
 8017b12:	2d00      	cmp	r5, #0
 8017b14:	d0de      	beq.n	8017ad4 <_dtoa_r+0x57c>
 8017b16:	f1b8 0f00 	cmp.w	r8, #0
 8017b1a:	d005      	beq.n	8017b28 <_dtoa_r+0x5d0>
 8017b1c:	45a8      	cmp	r8, r5
 8017b1e:	d003      	beq.n	8017b28 <_dtoa_r+0x5d0>
 8017b20:	4641      	mov	r1, r8
 8017b22:	4648      	mov	r0, r9
 8017b24:	f000 fefa 	bl	801891c <_Bfree>
 8017b28:	4629      	mov	r1, r5
 8017b2a:	4648      	mov	r0, r9
 8017b2c:	f000 fef6 	bl	801891c <_Bfree>
 8017b30:	e7d0      	b.n	8017ad4 <_dtoa_r+0x57c>
 8017b32:	f8cd 8010 	str.w	r8, [sp, #16]
 8017b36:	4633      	mov	r3, r6
 8017b38:	461e      	mov	r6, r3
 8017b3a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8017b3e:	2a39      	cmp	r2, #57	@ 0x39
 8017b40:	d106      	bne.n	8017b50 <_dtoa_r+0x5f8>
 8017b42:	429f      	cmp	r7, r3
 8017b44:	d1f8      	bne.n	8017b38 <_dtoa_r+0x5e0>
 8017b46:	9a04      	ldr	r2, [sp, #16]
 8017b48:	3201      	adds	r2, #1
 8017b4a:	9204      	str	r2, [sp, #16]
 8017b4c:	2230      	movs	r2, #48	@ 0x30
 8017b4e:	703a      	strb	r2, [r7, #0]
 8017b50:	781a      	ldrb	r2, [r3, #0]
 8017b52:	3201      	adds	r2, #1
 8017b54:	701a      	strb	r2, [r3, #0]
 8017b56:	e7bd      	b.n	8017ad4 <_dtoa_r+0x57c>
 8017b58:	ee27 7b04 	vmul.f64	d7, d7, d4
 8017b5c:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8017b60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b64:	f47f aeef 	bne.w	8017946 <_dtoa_r+0x3ee>
 8017b68:	e710      	b.n	801798c <_dtoa_r+0x434>
 8017b6a:	bf00      	nop
 8017b6c:	0801b398 	.word	0x0801b398
 8017b70:	0801b370 	.word	0x0801b370
 8017b74:	9908      	ldr	r1, [sp, #32]
 8017b76:	2900      	cmp	r1, #0
 8017b78:	f000 80e3 	beq.w	8017d42 <_dtoa_r+0x7ea>
 8017b7c:	9907      	ldr	r1, [sp, #28]
 8017b7e:	2901      	cmp	r1, #1
 8017b80:	f300 80c8 	bgt.w	8017d14 <_dtoa_r+0x7bc>
 8017b84:	2d00      	cmp	r5, #0
 8017b86:	f000 80c1 	beq.w	8017d0c <_dtoa_r+0x7b4>
 8017b8a:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8017b8e:	9e05      	ldr	r6, [sp, #20]
 8017b90:	461c      	mov	r4, r3
 8017b92:	9304      	str	r3, [sp, #16]
 8017b94:	9b05      	ldr	r3, [sp, #20]
 8017b96:	4413      	add	r3, r2
 8017b98:	9305      	str	r3, [sp, #20]
 8017b9a:	9b06      	ldr	r3, [sp, #24]
 8017b9c:	2101      	movs	r1, #1
 8017b9e:	4413      	add	r3, r2
 8017ba0:	4648      	mov	r0, r9
 8017ba2:	9306      	str	r3, [sp, #24]
 8017ba4:	f000 ffb8 	bl	8018b18 <__i2b>
 8017ba8:	9b04      	ldr	r3, [sp, #16]
 8017baa:	4605      	mov	r5, r0
 8017bac:	b166      	cbz	r6, 8017bc8 <_dtoa_r+0x670>
 8017bae:	9a06      	ldr	r2, [sp, #24]
 8017bb0:	2a00      	cmp	r2, #0
 8017bb2:	dd09      	ble.n	8017bc8 <_dtoa_r+0x670>
 8017bb4:	42b2      	cmp	r2, r6
 8017bb6:	9905      	ldr	r1, [sp, #20]
 8017bb8:	bfa8      	it	ge
 8017bba:	4632      	movge	r2, r6
 8017bbc:	1a89      	subs	r1, r1, r2
 8017bbe:	9105      	str	r1, [sp, #20]
 8017bc0:	9906      	ldr	r1, [sp, #24]
 8017bc2:	1ab6      	subs	r6, r6, r2
 8017bc4:	1a8a      	subs	r2, r1, r2
 8017bc6:	9206      	str	r2, [sp, #24]
 8017bc8:	b1fb      	cbz	r3, 8017c0a <_dtoa_r+0x6b2>
 8017bca:	9a08      	ldr	r2, [sp, #32]
 8017bcc:	2a00      	cmp	r2, #0
 8017bce:	f000 80bc 	beq.w	8017d4a <_dtoa_r+0x7f2>
 8017bd2:	b19c      	cbz	r4, 8017bfc <_dtoa_r+0x6a4>
 8017bd4:	4629      	mov	r1, r5
 8017bd6:	4622      	mov	r2, r4
 8017bd8:	4648      	mov	r0, r9
 8017bda:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017bdc:	f001 f85c 	bl	8018c98 <__pow5mult>
 8017be0:	9a01      	ldr	r2, [sp, #4]
 8017be2:	4601      	mov	r1, r0
 8017be4:	4605      	mov	r5, r0
 8017be6:	4648      	mov	r0, r9
 8017be8:	f000 ffac 	bl	8018b44 <__multiply>
 8017bec:	9901      	ldr	r1, [sp, #4]
 8017bee:	9004      	str	r0, [sp, #16]
 8017bf0:	4648      	mov	r0, r9
 8017bf2:	f000 fe93 	bl	801891c <_Bfree>
 8017bf6:	9a04      	ldr	r2, [sp, #16]
 8017bf8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017bfa:	9201      	str	r2, [sp, #4]
 8017bfc:	1b1a      	subs	r2, r3, r4
 8017bfe:	d004      	beq.n	8017c0a <_dtoa_r+0x6b2>
 8017c00:	9901      	ldr	r1, [sp, #4]
 8017c02:	4648      	mov	r0, r9
 8017c04:	f001 f848 	bl	8018c98 <__pow5mult>
 8017c08:	9001      	str	r0, [sp, #4]
 8017c0a:	2101      	movs	r1, #1
 8017c0c:	4648      	mov	r0, r9
 8017c0e:	f000 ff83 	bl	8018b18 <__i2b>
 8017c12:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017c14:	4604      	mov	r4, r0
 8017c16:	2b00      	cmp	r3, #0
 8017c18:	f000 81d0 	beq.w	8017fbc <_dtoa_r+0xa64>
 8017c1c:	461a      	mov	r2, r3
 8017c1e:	4601      	mov	r1, r0
 8017c20:	4648      	mov	r0, r9
 8017c22:	f001 f839 	bl	8018c98 <__pow5mult>
 8017c26:	9b07      	ldr	r3, [sp, #28]
 8017c28:	2b01      	cmp	r3, #1
 8017c2a:	4604      	mov	r4, r0
 8017c2c:	f300 8095 	bgt.w	8017d5a <_dtoa_r+0x802>
 8017c30:	9b02      	ldr	r3, [sp, #8]
 8017c32:	2b00      	cmp	r3, #0
 8017c34:	f040 808b 	bne.w	8017d4e <_dtoa_r+0x7f6>
 8017c38:	9b03      	ldr	r3, [sp, #12]
 8017c3a:	f3c3 0213 	ubfx	r2, r3, #0, #20
 8017c3e:	2a00      	cmp	r2, #0
 8017c40:	f040 8087 	bne.w	8017d52 <_dtoa_r+0x7fa>
 8017c44:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8017c48:	0d12      	lsrs	r2, r2, #20
 8017c4a:	0512      	lsls	r2, r2, #20
 8017c4c:	2a00      	cmp	r2, #0
 8017c4e:	f000 8082 	beq.w	8017d56 <_dtoa_r+0x7fe>
 8017c52:	9b05      	ldr	r3, [sp, #20]
 8017c54:	3301      	adds	r3, #1
 8017c56:	9305      	str	r3, [sp, #20]
 8017c58:	9b06      	ldr	r3, [sp, #24]
 8017c5a:	3301      	adds	r3, #1
 8017c5c:	9306      	str	r3, [sp, #24]
 8017c5e:	2301      	movs	r3, #1
 8017c60:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017c62:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017c64:	2b00      	cmp	r3, #0
 8017c66:	f000 81af 	beq.w	8017fc8 <_dtoa_r+0xa70>
 8017c6a:	6922      	ldr	r2, [r4, #16]
 8017c6c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8017c70:	6910      	ldr	r0, [r2, #16]
 8017c72:	f000 ff05 	bl	8018a80 <__hi0bits>
 8017c76:	f1c0 0020 	rsb	r0, r0, #32
 8017c7a:	9b06      	ldr	r3, [sp, #24]
 8017c7c:	4418      	add	r0, r3
 8017c7e:	f010 001f 	ands.w	r0, r0, #31
 8017c82:	d076      	beq.n	8017d72 <_dtoa_r+0x81a>
 8017c84:	f1c0 0220 	rsb	r2, r0, #32
 8017c88:	2a04      	cmp	r2, #4
 8017c8a:	dd69      	ble.n	8017d60 <_dtoa_r+0x808>
 8017c8c:	9b05      	ldr	r3, [sp, #20]
 8017c8e:	f1c0 001c 	rsb	r0, r0, #28
 8017c92:	4403      	add	r3, r0
 8017c94:	9305      	str	r3, [sp, #20]
 8017c96:	9b06      	ldr	r3, [sp, #24]
 8017c98:	4406      	add	r6, r0
 8017c9a:	4403      	add	r3, r0
 8017c9c:	9306      	str	r3, [sp, #24]
 8017c9e:	9b05      	ldr	r3, [sp, #20]
 8017ca0:	2b00      	cmp	r3, #0
 8017ca2:	dd05      	ble.n	8017cb0 <_dtoa_r+0x758>
 8017ca4:	9901      	ldr	r1, [sp, #4]
 8017ca6:	461a      	mov	r2, r3
 8017ca8:	4648      	mov	r0, r9
 8017caa:	f001 f84f 	bl	8018d4c <__lshift>
 8017cae:	9001      	str	r0, [sp, #4]
 8017cb0:	9b06      	ldr	r3, [sp, #24]
 8017cb2:	2b00      	cmp	r3, #0
 8017cb4:	dd05      	ble.n	8017cc2 <_dtoa_r+0x76a>
 8017cb6:	4621      	mov	r1, r4
 8017cb8:	461a      	mov	r2, r3
 8017cba:	4648      	mov	r0, r9
 8017cbc:	f001 f846 	bl	8018d4c <__lshift>
 8017cc0:	4604      	mov	r4, r0
 8017cc2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017cc4:	2b00      	cmp	r3, #0
 8017cc6:	d056      	beq.n	8017d76 <_dtoa_r+0x81e>
 8017cc8:	9801      	ldr	r0, [sp, #4]
 8017cca:	4621      	mov	r1, r4
 8017ccc:	f001 f8aa 	bl	8018e24 <__mcmp>
 8017cd0:	2800      	cmp	r0, #0
 8017cd2:	da50      	bge.n	8017d76 <_dtoa_r+0x81e>
 8017cd4:	f108 33ff 	add.w	r3, r8, #4294967295
 8017cd8:	9304      	str	r3, [sp, #16]
 8017cda:	9901      	ldr	r1, [sp, #4]
 8017cdc:	2300      	movs	r3, #0
 8017cde:	220a      	movs	r2, #10
 8017ce0:	4648      	mov	r0, r9
 8017ce2:	f000 fe3d 	bl	8018960 <__multadd>
 8017ce6:	9b08      	ldr	r3, [sp, #32]
 8017ce8:	9001      	str	r0, [sp, #4]
 8017cea:	2b00      	cmp	r3, #0
 8017cec:	f000 816e 	beq.w	8017fcc <_dtoa_r+0xa74>
 8017cf0:	4629      	mov	r1, r5
 8017cf2:	2300      	movs	r3, #0
 8017cf4:	220a      	movs	r2, #10
 8017cf6:	4648      	mov	r0, r9
 8017cf8:	f000 fe32 	bl	8018960 <__multadd>
 8017cfc:	f1bb 0f00 	cmp.w	fp, #0
 8017d00:	4605      	mov	r5, r0
 8017d02:	dc64      	bgt.n	8017dce <_dtoa_r+0x876>
 8017d04:	9b07      	ldr	r3, [sp, #28]
 8017d06:	2b02      	cmp	r3, #2
 8017d08:	dc3e      	bgt.n	8017d88 <_dtoa_r+0x830>
 8017d0a:	e060      	b.n	8017dce <_dtoa_r+0x876>
 8017d0c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8017d0e:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 8017d12:	e73c      	b.n	8017b8e <_dtoa_r+0x636>
 8017d14:	f10a 34ff 	add.w	r4, sl, #4294967295
 8017d18:	42a3      	cmp	r3, r4
 8017d1a:	bfbf      	itttt	lt
 8017d1c:	1ae2      	sublt	r2, r4, r3
 8017d1e:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8017d20:	189b      	addlt	r3, r3, r2
 8017d22:	930a      	strlt	r3, [sp, #40]	@ 0x28
 8017d24:	bfae      	itee	ge
 8017d26:	1b1c      	subge	r4, r3, r4
 8017d28:	4623      	movlt	r3, r4
 8017d2a:	2400      	movlt	r4, #0
 8017d2c:	f1ba 0f00 	cmp.w	sl, #0
 8017d30:	bfb5      	itete	lt
 8017d32:	9a05      	ldrlt	r2, [sp, #20]
 8017d34:	9e05      	ldrge	r6, [sp, #20]
 8017d36:	eba2 060a 	sublt.w	r6, r2, sl
 8017d3a:	4652      	movge	r2, sl
 8017d3c:	bfb8      	it	lt
 8017d3e:	2200      	movlt	r2, #0
 8017d40:	e727      	b.n	8017b92 <_dtoa_r+0x63a>
 8017d42:	9e05      	ldr	r6, [sp, #20]
 8017d44:	9d08      	ldr	r5, [sp, #32]
 8017d46:	461c      	mov	r4, r3
 8017d48:	e730      	b.n	8017bac <_dtoa_r+0x654>
 8017d4a:	461a      	mov	r2, r3
 8017d4c:	e758      	b.n	8017c00 <_dtoa_r+0x6a8>
 8017d4e:	2300      	movs	r3, #0
 8017d50:	e786      	b.n	8017c60 <_dtoa_r+0x708>
 8017d52:	9b02      	ldr	r3, [sp, #8]
 8017d54:	e784      	b.n	8017c60 <_dtoa_r+0x708>
 8017d56:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017d58:	e783      	b.n	8017c62 <_dtoa_r+0x70a>
 8017d5a:	2300      	movs	r3, #0
 8017d5c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017d5e:	e784      	b.n	8017c6a <_dtoa_r+0x712>
 8017d60:	d09d      	beq.n	8017c9e <_dtoa_r+0x746>
 8017d62:	9b05      	ldr	r3, [sp, #20]
 8017d64:	321c      	adds	r2, #28
 8017d66:	4413      	add	r3, r2
 8017d68:	9305      	str	r3, [sp, #20]
 8017d6a:	9b06      	ldr	r3, [sp, #24]
 8017d6c:	4416      	add	r6, r2
 8017d6e:	4413      	add	r3, r2
 8017d70:	e794      	b.n	8017c9c <_dtoa_r+0x744>
 8017d72:	4602      	mov	r2, r0
 8017d74:	e7f5      	b.n	8017d62 <_dtoa_r+0x80a>
 8017d76:	f1ba 0f00 	cmp.w	sl, #0
 8017d7a:	f8cd 8010 	str.w	r8, [sp, #16]
 8017d7e:	46d3      	mov	fp, sl
 8017d80:	dc21      	bgt.n	8017dc6 <_dtoa_r+0x86e>
 8017d82:	9b07      	ldr	r3, [sp, #28]
 8017d84:	2b02      	cmp	r3, #2
 8017d86:	dd1e      	ble.n	8017dc6 <_dtoa_r+0x86e>
 8017d88:	f1bb 0f00 	cmp.w	fp, #0
 8017d8c:	f47f aeb7 	bne.w	8017afe <_dtoa_r+0x5a6>
 8017d90:	4621      	mov	r1, r4
 8017d92:	465b      	mov	r3, fp
 8017d94:	2205      	movs	r2, #5
 8017d96:	4648      	mov	r0, r9
 8017d98:	f000 fde2 	bl	8018960 <__multadd>
 8017d9c:	4601      	mov	r1, r0
 8017d9e:	4604      	mov	r4, r0
 8017da0:	9801      	ldr	r0, [sp, #4]
 8017da2:	f001 f83f 	bl	8018e24 <__mcmp>
 8017da6:	2800      	cmp	r0, #0
 8017da8:	f77f aea9 	ble.w	8017afe <_dtoa_r+0x5a6>
 8017dac:	463e      	mov	r6, r7
 8017dae:	2331      	movs	r3, #49	@ 0x31
 8017db0:	f806 3b01 	strb.w	r3, [r6], #1
 8017db4:	9b04      	ldr	r3, [sp, #16]
 8017db6:	3301      	adds	r3, #1
 8017db8:	9304      	str	r3, [sp, #16]
 8017dba:	e6a4      	b.n	8017b06 <_dtoa_r+0x5ae>
 8017dbc:	f8cd 8010 	str.w	r8, [sp, #16]
 8017dc0:	4654      	mov	r4, sl
 8017dc2:	4625      	mov	r5, r4
 8017dc4:	e7f2      	b.n	8017dac <_dtoa_r+0x854>
 8017dc6:	9b08      	ldr	r3, [sp, #32]
 8017dc8:	2b00      	cmp	r3, #0
 8017dca:	f000 8103 	beq.w	8017fd4 <_dtoa_r+0xa7c>
 8017dce:	2e00      	cmp	r6, #0
 8017dd0:	dd05      	ble.n	8017dde <_dtoa_r+0x886>
 8017dd2:	4629      	mov	r1, r5
 8017dd4:	4632      	mov	r2, r6
 8017dd6:	4648      	mov	r0, r9
 8017dd8:	f000 ffb8 	bl	8018d4c <__lshift>
 8017ddc:	4605      	mov	r5, r0
 8017dde:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017de0:	2b00      	cmp	r3, #0
 8017de2:	d058      	beq.n	8017e96 <_dtoa_r+0x93e>
 8017de4:	6869      	ldr	r1, [r5, #4]
 8017de6:	4648      	mov	r0, r9
 8017de8:	f000 fd58 	bl	801889c <_Balloc>
 8017dec:	4606      	mov	r6, r0
 8017dee:	b928      	cbnz	r0, 8017dfc <_dtoa_r+0x8a4>
 8017df0:	4b82      	ldr	r3, [pc, #520]	@ (8017ffc <_dtoa_r+0xaa4>)
 8017df2:	4602      	mov	r2, r0
 8017df4:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8017df8:	f7ff bbc7 	b.w	801758a <_dtoa_r+0x32>
 8017dfc:	692a      	ldr	r2, [r5, #16]
 8017dfe:	3202      	adds	r2, #2
 8017e00:	0092      	lsls	r2, r2, #2
 8017e02:	f105 010c 	add.w	r1, r5, #12
 8017e06:	300c      	adds	r0, #12
 8017e08:	f7ff fb05 	bl	8017416 <memcpy>
 8017e0c:	2201      	movs	r2, #1
 8017e0e:	4631      	mov	r1, r6
 8017e10:	4648      	mov	r0, r9
 8017e12:	f000 ff9b 	bl	8018d4c <__lshift>
 8017e16:	1c7b      	adds	r3, r7, #1
 8017e18:	9305      	str	r3, [sp, #20]
 8017e1a:	eb07 030b 	add.w	r3, r7, fp
 8017e1e:	9309      	str	r3, [sp, #36]	@ 0x24
 8017e20:	9b02      	ldr	r3, [sp, #8]
 8017e22:	f003 0301 	and.w	r3, r3, #1
 8017e26:	46a8      	mov	r8, r5
 8017e28:	9308      	str	r3, [sp, #32]
 8017e2a:	4605      	mov	r5, r0
 8017e2c:	9b05      	ldr	r3, [sp, #20]
 8017e2e:	9801      	ldr	r0, [sp, #4]
 8017e30:	4621      	mov	r1, r4
 8017e32:	f103 3bff 	add.w	fp, r3, #4294967295
 8017e36:	f7ff fb07 	bl	8017448 <quorem>
 8017e3a:	4641      	mov	r1, r8
 8017e3c:	9002      	str	r0, [sp, #8]
 8017e3e:	f100 0a30 	add.w	sl, r0, #48	@ 0x30
 8017e42:	9801      	ldr	r0, [sp, #4]
 8017e44:	f000 ffee 	bl	8018e24 <__mcmp>
 8017e48:	462a      	mov	r2, r5
 8017e4a:	9006      	str	r0, [sp, #24]
 8017e4c:	4621      	mov	r1, r4
 8017e4e:	4648      	mov	r0, r9
 8017e50:	f001 f804 	bl	8018e5c <__mdiff>
 8017e54:	68c2      	ldr	r2, [r0, #12]
 8017e56:	4606      	mov	r6, r0
 8017e58:	b9fa      	cbnz	r2, 8017e9a <_dtoa_r+0x942>
 8017e5a:	4601      	mov	r1, r0
 8017e5c:	9801      	ldr	r0, [sp, #4]
 8017e5e:	f000 ffe1 	bl	8018e24 <__mcmp>
 8017e62:	4602      	mov	r2, r0
 8017e64:	4631      	mov	r1, r6
 8017e66:	4648      	mov	r0, r9
 8017e68:	920a      	str	r2, [sp, #40]	@ 0x28
 8017e6a:	f000 fd57 	bl	801891c <_Bfree>
 8017e6e:	9b07      	ldr	r3, [sp, #28]
 8017e70:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017e72:	9e05      	ldr	r6, [sp, #20]
 8017e74:	ea43 0102 	orr.w	r1, r3, r2
 8017e78:	9b08      	ldr	r3, [sp, #32]
 8017e7a:	4319      	orrs	r1, r3
 8017e7c:	d10f      	bne.n	8017e9e <_dtoa_r+0x946>
 8017e7e:	f1ba 0f39 	cmp.w	sl, #57	@ 0x39
 8017e82:	d028      	beq.n	8017ed6 <_dtoa_r+0x97e>
 8017e84:	9b06      	ldr	r3, [sp, #24]
 8017e86:	2b00      	cmp	r3, #0
 8017e88:	dd02      	ble.n	8017e90 <_dtoa_r+0x938>
 8017e8a:	9b02      	ldr	r3, [sp, #8]
 8017e8c:	f103 0a31 	add.w	sl, r3, #49	@ 0x31
 8017e90:	f88b a000 	strb.w	sl, [fp]
 8017e94:	e639      	b.n	8017b0a <_dtoa_r+0x5b2>
 8017e96:	4628      	mov	r0, r5
 8017e98:	e7bd      	b.n	8017e16 <_dtoa_r+0x8be>
 8017e9a:	2201      	movs	r2, #1
 8017e9c:	e7e2      	b.n	8017e64 <_dtoa_r+0x90c>
 8017e9e:	9b06      	ldr	r3, [sp, #24]
 8017ea0:	2b00      	cmp	r3, #0
 8017ea2:	db04      	blt.n	8017eae <_dtoa_r+0x956>
 8017ea4:	9907      	ldr	r1, [sp, #28]
 8017ea6:	430b      	orrs	r3, r1
 8017ea8:	9908      	ldr	r1, [sp, #32]
 8017eaa:	430b      	orrs	r3, r1
 8017eac:	d120      	bne.n	8017ef0 <_dtoa_r+0x998>
 8017eae:	2a00      	cmp	r2, #0
 8017eb0:	ddee      	ble.n	8017e90 <_dtoa_r+0x938>
 8017eb2:	9901      	ldr	r1, [sp, #4]
 8017eb4:	2201      	movs	r2, #1
 8017eb6:	4648      	mov	r0, r9
 8017eb8:	f000 ff48 	bl	8018d4c <__lshift>
 8017ebc:	4621      	mov	r1, r4
 8017ebe:	9001      	str	r0, [sp, #4]
 8017ec0:	f000 ffb0 	bl	8018e24 <__mcmp>
 8017ec4:	2800      	cmp	r0, #0
 8017ec6:	dc03      	bgt.n	8017ed0 <_dtoa_r+0x978>
 8017ec8:	d1e2      	bne.n	8017e90 <_dtoa_r+0x938>
 8017eca:	f01a 0f01 	tst.w	sl, #1
 8017ece:	d0df      	beq.n	8017e90 <_dtoa_r+0x938>
 8017ed0:	f1ba 0f39 	cmp.w	sl, #57	@ 0x39
 8017ed4:	d1d9      	bne.n	8017e8a <_dtoa_r+0x932>
 8017ed6:	2339      	movs	r3, #57	@ 0x39
 8017ed8:	f88b 3000 	strb.w	r3, [fp]
 8017edc:	4633      	mov	r3, r6
 8017ede:	461e      	mov	r6, r3
 8017ee0:	3b01      	subs	r3, #1
 8017ee2:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8017ee6:	2a39      	cmp	r2, #57	@ 0x39
 8017ee8:	d053      	beq.n	8017f92 <_dtoa_r+0xa3a>
 8017eea:	3201      	adds	r2, #1
 8017eec:	701a      	strb	r2, [r3, #0]
 8017eee:	e60c      	b.n	8017b0a <_dtoa_r+0x5b2>
 8017ef0:	2a00      	cmp	r2, #0
 8017ef2:	dd07      	ble.n	8017f04 <_dtoa_r+0x9ac>
 8017ef4:	f1ba 0f39 	cmp.w	sl, #57	@ 0x39
 8017ef8:	d0ed      	beq.n	8017ed6 <_dtoa_r+0x97e>
 8017efa:	f10a 0301 	add.w	r3, sl, #1
 8017efe:	f88b 3000 	strb.w	r3, [fp]
 8017f02:	e602      	b.n	8017b0a <_dtoa_r+0x5b2>
 8017f04:	9b05      	ldr	r3, [sp, #20]
 8017f06:	9a05      	ldr	r2, [sp, #20]
 8017f08:	f803 ac01 	strb.w	sl, [r3, #-1]
 8017f0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017f0e:	4293      	cmp	r3, r2
 8017f10:	d029      	beq.n	8017f66 <_dtoa_r+0xa0e>
 8017f12:	9901      	ldr	r1, [sp, #4]
 8017f14:	2300      	movs	r3, #0
 8017f16:	220a      	movs	r2, #10
 8017f18:	4648      	mov	r0, r9
 8017f1a:	f000 fd21 	bl	8018960 <__multadd>
 8017f1e:	45a8      	cmp	r8, r5
 8017f20:	9001      	str	r0, [sp, #4]
 8017f22:	f04f 0300 	mov.w	r3, #0
 8017f26:	f04f 020a 	mov.w	r2, #10
 8017f2a:	4641      	mov	r1, r8
 8017f2c:	4648      	mov	r0, r9
 8017f2e:	d107      	bne.n	8017f40 <_dtoa_r+0x9e8>
 8017f30:	f000 fd16 	bl	8018960 <__multadd>
 8017f34:	4680      	mov	r8, r0
 8017f36:	4605      	mov	r5, r0
 8017f38:	9b05      	ldr	r3, [sp, #20]
 8017f3a:	3301      	adds	r3, #1
 8017f3c:	9305      	str	r3, [sp, #20]
 8017f3e:	e775      	b.n	8017e2c <_dtoa_r+0x8d4>
 8017f40:	f000 fd0e 	bl	8018960 <__multadd>
 8017f44:	4629      	mov	r1, r5
 8017f46:	4680      	mov	r8, r0
 8017f48:	2300      	movs	r3, #0
 8017f4a:	220a      	movs	r2, #10
 8017f4c:	4648      	mov	r0, r9
 8017f4e:	f000 fd07 	bl	8018960 <__multadd>
 8017f52:	4605      	mov	r5, r0
 8017f54:	e7f0      	b.n	8017f38 <_dtoa_r+0x9e0>
 8017f56:	f1bb 0f00 	cmp.w	fp, #0
 8017f5a:	bfcc      	ite	gt
 8017f5c:	465e      	movgt	r6, fp
 8017f5e:	2601      	movle	r6, #1
 8017f60:	443e      	add	r6, r7
 8017f62:	f04f 0800 	mov.w	r8, #0
 8017f66:	9901      	ldr	r1, [sp, #4]
 8017f68:	2201      	movs	r2, #1
 8017f6a:	4648      	mov	r0, r9
 8017f6c:	f000 feee 	bl	8018d4c <__lshift>
 8017f70:	4621      	mov	r1, r4
 8017f72:	9001      	str	r0, [sp, #4]
 8017f74:	f000 ff56 	bl	8018e24 <__mcmp>
 8017f78:	2800      	cmp	r0, #0
 8017f7a:	dcaf      	bgt.n	8017edc <_dtoa_r+0x984>
 8017f7c:	d102      	bne.n	8017f84 <_dtoa_r+0xa2c>
 8017f7e:	f01a 0f01 	tst.w	sl, #1
 8017f82:	d1ab      	bne.n	8017edc <_dtoa_r+0x984>
 8017f84:	4633      	mov	r3, r6
 8017f86:	461e      	mov	r6, r3
 8017f88:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8017f8c:	2a30      	cmp	r2, #48	@ 0x30
 8017f8e:	d0fa      	beq.n	8017f86 <_dtoa_r+0xa2e>
 8017f90:	e5bb      	b.n	8017b0a <_dtoa_r+0x5b2>
 8017f92:	429f      	cmp	r7, r3
 8017f94:	d1a3      	bne.n	8017ede <_dtoa_r+0x986>
 8017f96:	9b04      	ldr	r3, [sp, #16]
 8017f98:	3301      	adds	r3, #1
 8017f9a:	9304      	str	r3, [sp, #16]
 8017f9c:	2331      	movs	r3, #49	@ 0x31
 8017f9e:	703b      	strb	r3, [r7, #0]
 8017fa0:	e5b3      	b.n	8017b0a <_dtoa_r+0x5b2>
 8017fa2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8017fa4:	4f16      	ldr	r7, [pc, #88]	@ (8018000 <_dtoa_r+0xaa8>)
 8017fa6:	b11b      	cbz	r3, 8017fb0 <_dtoa_r+0xa58>
 8017fa8:	f107 0308 	add.w	r3, r7, #8
 8017fac:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8017fae:	6013      	str	r3, [r2, #0]
 8017fb0:	4638      	mov	r0, r7
 8017fb2:	b011      	add	sp, #68	@ 0x44
 8017fb4:	ecbd 8b02 	vpop	{d8}
 8017fb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017fbc:	9b07      	ldr	r3, [sp, #28]
 8017fbe:	2b01      	cmp	r3, #1
 8017fc0:	f77f ae36 	ble.w	8017c30 <_dtoa_r+0x6d8>
 8017fc4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017fc6:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017fc8:	2001      	movs	r0, #1
 8017fca:	e656      	b.n	8017c7a <_dtoa_r+0x722>
 8017fcc:	f1bb 0f00 	cmp.w	fp, #0
 8017fd0:	f77f aed7 	ble.w	8017d82 <_dtoa_r+0x82a>
 8017fd4:	463e      	mov	r6, r7
 8017fd6:	9801      	ldr	r0, [sp, #4]
 8017fd8:	4621      	mov	r1, r4
 8017fda:	f7ff fa35 	bl	8017448 <quorem>
 8017fde:	f100 0a30 	add.w	sl, r0, #48	@ 0x30
 8017fe2:	f806 ab01 	strb.w	sl, [r6], #1
 8017fe6:	1bf2      	subs	r2, r6, r7
 8017fe8:	4593      	cmp	fp, r2
 8017fea:	ddb4      	ble.n	8017f56 <_dtoa_r+0x9fe>
 8017fec:	9901      	ldr	r1, [sp, #4]
 8017fee:	2300      	movs	r3, #0
 8017ff0:	220a      	movs	r2, #10
 8017ff2:	4648      	mov	r0, r9
 8017ff4:	f000 fcb4 	bl	8018960 <__multadd>
 8017ff8:	9001      	str	r0, [sp, #4]
 8017ffa:	e7ec      	b.n	8017fd6 <_dtoa_r+0xa7e>
 8017ffc:	0801b299 	.word	0x0801b299
 8018000:	0801b21d 	.word	0x0801b21d

08018004 <_free_r>:
 8018004:	b538      	push	{r3, r4, r5, lr}
 8018006:	4605      	mov	r5, r0
 8018008:	2900      	cmp	r1, #0
 801800a:	d041      	beq.n	8018090 <_free_r+0x8c>
 801800c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8018010:	1f0c      	subs	r4, r1, #4
 8018012:	2b00      	cmp	r3, #0
 8018014:	bfb8      	it	lt
 8018016:	18e4      	addlt	r4, r4, r3
 8018018:	f000 fc34 	bl	8018884 <__malloc_lock>
 801801c:	4a1d      	ldr	r2, [pc, #116]	@ (8018094 <_free_r+0x90>)
 801801e:	6813      	ldr	r3, [r2, #0]
 8018020:	b933      	cbnz	r3, 8018030 <_free_r+0x2c>
 8018022:	6063      	str	r3, [r4, #4]
 8018024:	6014      	str	r4, [r2, #0]
 8018026:	4628      	mov	r0, r5
 8018028:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801802c:	f000 bc30 	b.w	8018890 <__malloc_unlock>
 8018030:	42a3      	cmp	r3, r4
 8018032:	d908      	bls.n	8018046 <_free_r+0x42>
 8018034:	6820      	ldr	r0, [r4, #0]
 8018036:	1821      	adds	r1, r4, r0
 8018038:	428b      	cmp	r3, r1
 801803a:	bf01      	itttt	eq
 801803c:	6819      	ldreq	r1, [r3, #0]
 801803e:	685b      	ldreq	r3, [r3, #4]
 8018040:	1809      	addeq	r1, r1, r0
 8018042:	6021      	streq	r1, [r4, #0]
 8018044:	e7ed      	b.n	8018022 <_free_r+0x1e>
 8018046:	461a      	mov	r2, r3
 8018048:	685b      	ldr	r3, [r3, #4]
 801804a:	b10b      	cbz	r3, 8018050 <_free_r+0x4c>
 801804c:	42a3      	cmp	r3, r4
 801804e:	d9fa      	bls.n	8018046 <_free_r+0x42>
 8018050:	6811      	ldr	r1, [r2, #0]
 8018052:	1850      	adds	r0, r2, r1
 8018054:	42a0      	cmp	r0, r4
 8018056:	d10b      	bne.n	8018070 <_free_r+0x6c>
 8018058:	6820      	ldr	r0, [r4, #0]
 801805a:	4401      	add	r1, r0
 801805c:	1850      	adds	r0, r2, r1
 801805e:	4283      	cmp	r3, r0
 8018060:	6011      	str	r1, [r2, #0]
 8018062:	d1e0      	bne.n	8018026 <_free_r+0x22>
 8018064:	6818      	ldr	r0, [r3, #0]
 8018066:	685b      	ldr	r3, [r3, #4]
 8018068:	6053      	str	r3, [r2, #4]
 801806a:	4408      	add	r0, r1
 801806c:	6010      	str	r0, [r2, #0]
 801806e:	e7da      	b.n	8018026 <_free_r+0x22>
 8018070:	d902      	bls.n	8018078 <_free_r+0x74>
 8018072:	230c      	movs	r3, #12
 8018074:	602b      	str	r3, [r5, #0]
 8018076:	e7d6      	b.n	8018026 <_free_r+0x22>
 8018078:	6820      	ldr	r0, [r4, #0]
 801807a:	1821      	adds	r1, r4, r0
 801807c:	428b      	cmp	r3, r1
 801807e:	bf04      	itt	eq
 8018080:	6819      	ldreq	r1, [r3, #0]
 8018082:	685b      	ldreq	r3, [r3, #4]
 8018084:	6063      	str	r3, [r4, #4]
 8018086:	bf04      	itt	eq
 8018088:	1809      	addeq	r1, r1, r0
 801808a:	6021      	streq	r1, [r4, #0]
 801808c:	6054      	str	r4, [r2, #4]
 801808e:	e7ca      	b.n	8018026 <_free_r+0x22>
 8018090:	bd38      	pop	{r3, r4, r5, pc}
 8018092:	bf00      	nop
 8018094:	24006270 	.word	0x24006270

08018098 <rshift>:
 8018098:	6903      	ldr	r3, [r0, #16]
 801809a:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 801809e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80180a2:	ea4f 1261 	mov.w	r2, r1, asr #5
 80180a6:	f100 0414 	add.w	r4, r0, #20
 80180aa:	dd45      	ble.n	8018138 <rshift+0xa0>
 80180ac:	f011 011f 	ands.w	r1, r1, #31
 80180b0:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80180b4:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80180b8:	d10c      	bne.n	80180d4 <rshift+0x3c>
 80180ba:	f100 0710 	add.w	r7, r0, #16
 80180be:	4629      	mov	r1, r5
 80180c0:	42b1      	cmp	r1, r6
 80180c2:	d334      	bcc.n	801812e <rshift+0x96>
 80180c4:	1a9b      	subs	r3, r3, r2
 80180c6:	009b      	lsls	r3, r3, #2
 80180c8:	1eea      	subs	r2, r5, #3
 80180ca:	4296      	cmp	r6, r2
 80180cc:	bf38      	it	cc
 80180ce:	2300      	movcc	r3, #0
 80180d0:	4423      	add	r3, r4
 80180d2:	e015      	b.n	8018100 <rshift+0x68>
 80180d4:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80180d8:	f1c1 0820 	rsb	r8, r1, #32
 80180dc:	40cf      	lsrs	r7, r1
 80180de:	f105 0e04 	add.w	lr, r5, #4
 80180e2:	46a1      	mov	r9, r4
 80180e4:	4576      	cmp	r6, lr
 80180e6:	46f4      	mov	ip, lr
 80180e8:	d815      	bhi.n	8018116 <rshift+0x7e>
 80180ea:	1a9a      	subs	r2, r3, r2
 80180ec:	0092      	lsls	r2, r2, #2
 80180ee:	3a04      	subs	r2, #4
 80180f0:	3501      	adds	r5, #1
 80180f2:	42ae      	cmp	r6, r5
 80180f4:	bf38      	it	cc
 80180f6:	2200      	movcc	r2, #0
 80180f8:	18a3      	adds	r3, r4, r2
 80180fa:	50a7      	str	r7, [r4, r2]
 80180fc:	b107      	cbz	r7, 8018100 <rshift+0x68>
 80180fe:	3304      	adds	r3, #4
 8018100:	1b1a      	subs	r2, r3, r4
 8018102:	42a3      	cmp	r3, r4
 8018104:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8018108:	bf08      	it	eq
 801810a:	2300      	moveq	r3, #0
 801810c:	6102      	str	r2, [r0, #16]
 801810e:	bf08      	it	eq
 8018110:	6143      	streq	r3, [r0, #20]
 8018112:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018116:	f8dc c000 	ldr.w	ip, [ip]
 801811a:	fa0c fc08 	lsl.w	ip, ip, r8
 801811e:	ea4c 0707 	orr.w	r7, ip, r7
 8018122:	f849 7b04 	str.w	r7, [r9], #4
 8018126:	f85e 7b04 	ldr.w	r7, [lr], #4
 801812a:	40cf      	lsrs	r7, r1
 801812c:	e7da      	b.n	80180e4 <rshift+0x4c>
 801812e:	f851 cb04 	ldr.w	ip, [r1], #4
 8018132:	f847 cf04 	str.w	ip, [r7, #4]!
 8018136:	e7c3      	b.n	80180c0 <rshift+0x28>
 8018138:	4623      	mov	r3, r4
 801813a:	e7e1      	b.n	8018100 <rshift+0x68>

0801813c <__hexdig_fun>:
 801813c:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 8018140:	2b09      	cmp	r3, #9
 8018142:	d802      	bhi.n	801814a <__hexdig_fun+0xe>
 8018144:	3820      	subs	r0, #32
 8018146:	b2c0      	uxtb	r0, r0
 8018148:	4770      	bx	lr
 801814a:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 801814e:	2b05      	cmp	r3, #5
 8018150:	d801      	bhi.n	8018156 <__hexdig_fun+0x1a>
 8018152:	3847      	subs	r0, #71	@ 0x47
 8018154:	e7f7      	b.n	8018146 <__hexdig_fun+0xa>
 8018156:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 801815a:	2b05      	cmp	r3, #5
 801815c:	d801      	bhi.n	8018162 <__hexdig_fun+0x26>
 801815e:	3827      	subs	r0, #39	@ 0x27
 8018160:	e7f1      	b.n	8018146 <__hexdig_fun+0xa>
 8018162:	2000      	movs	r0, #0
 8018164:	4770      	bx	lr
	...

08018168 <__gethex>:
 8018168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801816c:	b085      	sub	sp, #20
 801816e:	468a      	mov	sl, r1
 8018170:	9302      	str	r3, [sp, #8]
 8018172:	680b      	ldr	r3, [r1, #0]
 8018174:	9001      	str	r0, [sp, #4]
 8018176:	4690      	mov	r8, r2
 8018178:	1c9c      	adds	r4, r3, #2
 801817a:	46a1      	mov	r9, r4
 801817c:	f814 0b01 	ldrb.w	r0, [r4], #1
 8018180:	2830      	cmp	r0, #48	@ 0x30
 8018182:	d0fa      	beq.n	801817a <__gethex+0x12>
 8018184:	eba9 0303 	sub.w	r3, r9, r3
 8018188:	f1a3 0b02 	sub.w	fp, r3, #2
 801818c:	f7ff ffd6 	bl	801813c <__hexdig_fun>
 8018190:	4605      	mov	r5, r0
 8018192:	2800      	cmp	r0, #0
 8018194:	d168      	bne.n	8018268 <__gethex+0x100>
 8018196:	49a0      	ldr	r1, [pc, #640]	@ (8018418 <__gethex+0x2b0>)
 8018198:	2201      	movs	r2, #1
 801819a:	4648      	mov	r0, r9
 801819c:	f7ff f8b2 	bl	8017304 <strncmp>
 80181a0:	4607      	mov	r7, r0
 80181a2:	2800      	cmp	r0, #0
 80181a4:	d167      	bne.n	8018276 <__gethex+0x10e>
 80181a6:	f899 0001 	ldrb.w	r0, [r9, #1]
 80181aa:	4626      	mov	r6, r4
 80181ac:	f7ff ffc6 	bl	801813c <__hexdig_fun>
 80181b0:	2800      	cmp	r0, #0
 80181b2:	d062      	beq.n	801827a <__gethex+0x112>
 80181b4:	4623      	mov	r3, r4
 80181b6:	7818      	ldrb	r0, [r3, #0]
 80181b8:	2830      	cmp	r0, #48	@ 0x30
 80181ba:	4699      	mov	r9, r3
 80181bc:	f103 0301 	add.w	r3, r3, #1
 80181c0:	d0f9      	beq.n	80181b6 <__gethex+0x4e>
 80181c2:	f7ff ffbb 	bl	801813c <__hexdig_fun>
 80181c6:	fab0 f580 	clz	r5, r0
 80181ca:	096d      	lsrs	r5, r5, #5
 80181cc:	f04f 0b01 	mov.w	fp, #1
 80181d0:	464a      	mov	r2, r9
 80181d2:	4616      	mov	r6, r2
 80181d4:	3201      	adds	r2, #1
 80181d6:	7830      	ldrb	r0, [r6, #0]
 80181d8:	f7ff ffb0 	bl	801813c <__hexdig_fun>
 80181dc:	2800      	cmp	r0, #0
 80181de:	d1f8      	bne.n	80181d2 <__gethex+0x6a>
 80181e0:	498d      	ldr	r1, [pc, #564]	@ (8018418 <__gethex+0x2b0>)
 80181e2:	2201      	movs	r2, #1
 80181e4:	4630      	mov	r0, r6
 80181e6:	f7ff f88d 	bl	8017304 <strncmp>
 80181ea:	2800      	cmp	r0, #0
 80181ec:	d13f      	bne.n	801826e <__gethex+0x106>
 80181ee:	b944      	cbnz	r4, 8018202 <__gethex+0x9a>
 80181f0:	1c74      	adds	r4, r6, #1
 80181f2:	4622      	mov	r2, r4
 80181f4:	4616      	mov	r6, r2
 80181f6:	3201      	adds	r2, #1
 80181f8:	7830      	ldrb	r0, [r6, #0]
 80181fa:	f7ff ff9f 	bl	801813c <__hexdig_fun>
 80181fe:	2800      	cmp	r0, #0
 8018200:	d1f8      	bne.n	80181f4 <__gethex+0x8c>
 8018202:	1ba4      	subs	r4, r4, r6
 8018204:	00a7      	lsls	r7, r4, #2
 8018206:	7833      	ldrb	r3, [r6, #0]
 8018208:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 801820c:	2b50      	cmp	r3, #80	@ 0x50
 801820e:	d13e      	bne.n	801828e <__gethex+0x126>
 8018210:	7873      	ldrb	r3, [r6, #1]
 8018212:	2b2b      	cmp	r3, #43	@ 0x2b
 8018214:	d033      	beq.n	801827e <__gethex+0x116>
 8018216:	2b2d      	cmp	r3, #45	@ 0x2d
 8018218:	d034      	beq.n	8018284 <__gethex+0x11c>
 801821a:	1c71      	adds	r1, r6, #1
 801821c:	2400      	movs	r4, #0
 801821e:	7808      	ldrb	r0, [r1, #0]
 8018220:	f7ff ff8c 	bl	801813c <__hexdig_fun>
 8018224:	1e43      	subs	r3, r0, #1
 8018226:	b2db      	uxtb	r3, r3
 8018228:	2b18      	cmp	r3, #24
 801822a:	d830      	bhi.n	801828e <__gethex+0x126>
 801822c:	f1a0 0210 	sub.w	r2, r0, #16
 8018230:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8018234:	f7ff ff82 	bl	801813c <__hexdig_fun>
 8018238:	f100 3cff 	add.w	ip, r0, #4294967295
 801823c:	fa5f fc8c 	uxtb.w	ip, ip
 8018240:	f1bc 0f18 	cmp.w	ip, #24
 8018244:	f04f 030a 	mov.w	r3, #10
 8018248:	d91e      	bls.n	8018288 <__gethex+0x120>
 801824a:	b104      	cbz	r4, 801824e <__gethex+0xe6>
 801824c:	4252      	negs	r2, r2
 801824e:	4417      	add	r7, r2
 8018250:	f8ca 1000 	str.w	r1, [sl]
 8018254:	b1ed      	cbz	r5, 8018292 <__gethex+0x12a>
 8018256:	f1bb 0f00 	cmp.w	fp, #0
 801825a:	bf0c      	ite	eq
 801825c:	2506      	moveq	r5, #6
 801825e:	2500      	movne	r5, #0
 8018260:	4628      	mov	r0, r5
 8018262:	b005      	add	sp, #20
 8018264:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018268:	2500      	movs	r5, #0
 801826a:	462c      	mov	r4, r5
 801826c:	e7b0      	b.n	80181d0 <__gethex+0x68>
 801826e:	2c00      	cmp	r4, #0
 8018270:	d1c7      	bne.n	8018202 <__gethex+0x9a>
 8018272:	4627      	mov	r7, r4
 8018274:	e7c7      	b.n	8018206 <__gethex+0x9e>
 8018276:	464e      	mov	r6, r9
 8018278:	462f      	mov	r7, r5
 801827a:	2501      	movs	r5, #1
 801827c:	e7c3      	b.n	8018206 <__gethex+0x9e>
 801827e:	2400      	movs	r4, #0
 8018280:	1cb1      	adds	r1, r6, #2
 8018282:	e7cc      	b.n	801821e <__gethex+0xb6>
 8018284:	2401      	movs	r4, #1
 8018286:	e7fb      	b.n	8018280 <__gethex+0x118>
 8018288:	fb03 0002 	mla	r0, r3, r2, r0
 801828c:	e7ce      	b.n	801822c <__gethex+0xc4>
 801828e:	4631      	mov	r1, r6
 8018290:	e7de      	b.n	8018250 <__gethex+0xe8>
 8018292:	eba6 0309 	sub.w	r3, r6, r9
 8018296:	3b01      	subs	r3, #1
 8018298:	4629      	mov	r1, r5
 801829a:	2b07      	cmp	r3, #7
 801829c:	dc0a      	bgt.n	80182b4 <__gethex+0x14c>
 801829e:	9801      	ldr	r0, [sp, #4]
 80182a0:	f000 fafc 	bl	801889c <_Balloc>
 80182a4:	4604      	mov	r4, r0
 80182a6:	b940      	cbnz	r0, 80182ba <__gethex+0x152>
 80182a8:	4b5c      	ldr	r3, [pc, #368]	@ (801841c <__gethex+0x2b4>)
 80182aa:	4602      	mov	r2, r0
 80182ac:	21e4      	movs	r1, #228	@ 0xe4
 80182ae:	485c      	ldr	r0, [pc, #368]	@ (8018420 <__gethex+0x2b8>)
 80182b0:	f001 f9de 	bl	8019670 <__assert_func>
 80182b4:	3101      	adds	r1, #1
 80182b6:	105b      	asrs	r3, r3, #1
 80182b8:	e7ef      	b.n	801829a <__gethex+0x132>
 80182ba:	f100 0a14 	add.w	sl, r0, #20
 80182be:	2300      	movs	r3, #0
 80182c0:	4655      	mov	r5, sl
 80182c2:	469b      	mov	fp, r3
 80182c4:	45b1      	cmp	r9, r6
 80182c6:	d337      	bcc.n	8018338 <__gethex+0x1d0>
 80182c8:	f845 bb04 	str.w	fp, [r5], #4
 80182cc:	eba5 050a 	sub.w	r5, r5, sl
 80182d0:	10ad      	asrs	r5, r5, #2
 80182d2:	6125      	str	r5, [r4, #16]
 80182d4:	4658      	mov	r0, fp
 80182d6:	f000 fbd3 	bl	8018a80 <__hi0bits>
 80182da:	016d      	lsls	r5, r5, #5
 80182dc:	f8d8 6000 	ldr.w	r6, [r8]
 80182e0:	1a2d      	subs	r5, r5, r0
 80182e2:	42b5      	cmp	r5, r6
 80182e4:	dd54      	ble.n	8018390 <__gethex+0x228>
 80182e6:	1bad      	subs	r5, r5, r6
 80182e8:	4629      	mov	r1, r5
 80182ea:	4620      	mov	r0, r4
 80182ec:	f000 ff64 	bl	80191b8 <__any_on>
 80182f0:	4681      	mov	r9, r0
 80182f2:	b178      	cbz	r0, 8018314 <__gethex+0x1ac>
 80182f4:	1e6b      	subs	r3, r5, #1
 80182f6:	1159      	asrs	r1, r3, #5
 80182f8:	f003 021f 	and.w	r2, r3, #31
 80182fc:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8018300:	f04f 0901 	mov.w	r9, #1
 8018304:	fa09 f202 	lsl.w	r2, r9, r2
 8018308:	420a      	tst	r2, r1
 801830a:	d003      	beq.n	8018314 <__gethex+0x1ac>
 801830c:	454b      	cmp	r3, r9
 801830e:	dc36      	bgt.n	801837e <__gethex+0x216>
 8018310:	f04f 0902 	mov.w	r9, #2
 8018314:	4629      	mov	r1, r5
 8018316:	4620      	mov	r0, r4
 8018318:	f7ff febe 	bl	8018098 <rshift>
 801831c:	442f      	add	r7, r5
 801831e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8018322:	42bb      	cmp	r3, r7
 8018324:	da42      	bge.n	80183ac <__gethex+0x244>
 8018326:	9801      	ldr	r0, [sp, #4]
 8018328:	4621      	mov	r1, r4
 801832a:	f000 faf7 	bl	801891c <_Bfree>
 801832e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8018330:	2300      	movs	r3, #0
 8018332:	6013      	str	r3, [r2, #0]
 8018334:	25a3      	movs	r5, #163	@ 0xa3
 8018336:	e793      	b.n	8018260 <__gethex+0xf8>
 8018338:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 801833c:	2a2e      	cmp	r2, #46	@ 0x2e
 801833e:	d012      	beq.n	8018366 <__gethex+0x1fe>
 8018340:	2b20      	cmp	r3, #32
 8018342:	d104      	bne.n	801834e <__gethex+0x1e6>
 8018344:	f845 bb04 	str.w	fp, [r5], #4
 8018348:	f04f 0b00 	mov.w	fp, #0
 801834c:	465b      	mov	r3, fp
 801834e:	7830      	ldrb	r0, [r6, #0]
 8018350:	9303      	str	r3, [sp, #12]
 8018352:	f7ff fef3 	bl	801813c <__hexdig_fun>
 8018356:	9b03      	ldr	r3, [sp, #12]
 8018358:	f000 000f 	and.w	r0, r0, #15
 801835c:	4098      	lsls	r0, r3
 801835e:	ea4b 0b00 	orr.w	fp, fp, r0
 8018362:	3304      	adds	r3, #4
 8018364:	e7ae      	b.n	80182c4 <__gethex+0x15c>
 8018366:	45b1      	cmp	r9, r6
 8018368:	d8ea      	bhi.n	8018340 <__gethex+0x1d8>
 801836a:	492b      	ldr	r1, [pc, #172]	@ (8018418 <__gethex+0x2b0>)
 801836c:	9303      	str	r3, [sp, #12]
 801836e:	2201      	movs	r2, #1
 8018370:	4630      	mov	r0, r6
 8018372:	f7fe ffc7 	bl	8017304 <strncmp>
 8018376:	9b03      	ldr	r3, [sp, #12]
 8018378:	2800      	cmp	r0, #0
 801837a:	d1e1      	bne.n	8018340 <__gethex+0x1d8>
 801837c:	e7a2      	b.n	80182c4 <__gethex+0x15c>
 801837e:	1ea9      	subs	r1, r5, #2
 8018380:	4620      	mov	r0, r4
 8018382:	f000 ff19 	bl	80191b8 <__any_on>
 8018386:	2800      	cmp	r0, #0
 8018388:	d0c2      	beq.n	8018310 <__gethex+0x1a8>
 801838a:	f04f 0903 	mov.w	r9, #3
 801838e:	e7c1      	b.n	8018314 <__gethex+0x1ac>
 8018390:	da09      	bge.n	80183a6 <__gethex+0x23e>
 8018392:	1b75      	subs	r5, r6, r5
 8018394:	4621      	mov	r1, r4
 8018396:	9801      	ldr	r0, [sp, #4]
 8018398:	462a      	mov	r2, r5
 801839a:	f000 fcd7 	bl	8018d4c <__lshift>
 801839e:	1b7f      	subs	r7, r7, r5
 80183a0:	4604      	mov	r4, r0
 80183a2:	f100 0a14 	add.w	sl, r0, #20
 80183a6:	f04f 0900 	mov.w	r9, #0
 80183aa:	e7b8      	b.n	801831e <__gethex+0x1b6>
 80183ac:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80183b0:	42bd      	cmp	r5, r7
 80183b2:	dd6f      	ble.n	8018494 <__gethex+0x32c>
 80183b4:	1bed      	subs	r5, r5, r7
 80183b6:	42ae      	cmp	r6, r5
 80183b8:	dc34      	bgt.n	8018424 <__gethex+0x2bc>
 80183ba:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80183be:	2b02      	cmp	r3, #2
 80183c0:	d022      	beq.n	8018408 <__gethex+0x2a0>
 80183c2:	2b03      	cmp	r3, #3
 80183c4:	d024      	beq.n	8018410 <__gethex+0x2a8>
 80183c6:	2b01      	cmp	r3, #1
 80183c8:	d115      	bne.n	80183f6 <__gethex+0x28e>
 80183ca:	42ae      	cmp	r6, r5
 80183cc:	d113      	bne.n	80183f6 <__gethex+0x28e>
 80183ce:	2e01      	cmp	r6, #1
 80183d0:	d10b      	bne.n	80183ea <__gethex+0x282>
 80183d2:	9a02      	ldr	r2, [sp, #8]
 80183d4:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80183d8:	6013      	str	r3, [r2, #0]
 80183da:	2301      	movs	r3, #1
 80183dc:	6123      	str	r3, [r4, #16]
 80183de:	f8ca 3000 	str.w	r3, [sl]
 80183e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80183e4:	2562      	movs	r5, #98	@ 0x62
 80183e6:	601c      	str	r4, [r3, #0]
 80183e8:	e73a      	b.n	8018260 <__gethex+0xf8>
 80183ea:	1e71      	subs	r1, r6, #1
 80183ec:	4620      	mov	r0, r4
 80183ee:	f000 fee3 	bl	80191b8 <__any_on>
 80183f2:	2800      	cmp	r0, #0
 80183f4:	d1ed      	bne.n	80183d2 <__gethex+0x26a>
 80183f6:	9801      	ldr	r0, [sp, #4]
 80183f8:	4621      	mov	r1, r4
 80183fa:	f000 fa8f 	bl	801891c <_Bfree>
 80183fe:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8018400:	2300      	movs	r3, #0
 8018402:	6013      	str	r3, [r2, #0]
 8018404:	2550      	movs	r5, #80	@ 0x50
 8018406:	e72b      	b.n	8018260 <__gethex+0xf8>
 8018408:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801840a:	2b00      	cmp	r3, #0
 801840c:	d1f3      	bne.n	80183f6 <__gethex+0x28e>
 801840e:	e7e0      	b.n	80183d2 <__gethex+0x26a>
 8018410:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8018412:	2b00      	cmp	r3, #0
 8018414:	d1dd      	bne.n	80183d2 <__gethex+0x26a>
 8018416:	e7ee      	b.n	80183f6 <__gethex+0x28e>
 8018418:	0801b08c 	.word	0x0801b08c
 801841c:	0801b299 	.word	0x0801b299
 8018420:	0801b2aa 	.word	0x0801b2aa
 8018424:	1e6f      	subs	r7, r5, #1
 8018426:	f1b9 0f00 	cmp.w	r9, #0
 801842a:	d130      	bne.n	801848e <__gethex+0x326>
 801842c:	b127      	cbz	r7, 8018438 <__gethex+0x2d0>
 801842e:	4639      	mov	r1, r7
 8018430:	4620      	mov	r0, r4
 8018432:	f000 fec1 	bl	80191b8 <__any_on>
 8018436:	4681      	mov	r9, r0
 8018438:	117a      	asrs	r2, r7, #5
 801843a:	2301      	movs	r3, #1
 801843c:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8018440:	f007 071f 	and.w	r7, r7, #31
 8018444:	40bb      	lsls	r3, r7
 8018446:	4213      	tst	r3, r2
 8018448:	4629      	mov	r1, r5
 801844a:	4620      	mov	r0, r4
 801844c:	bf18      	it	ne
 801844e:	f049 0902 	orrne.w	r9, r9, #2
 8018452:	f7ff fe21 	bl	8018098 <rshift>
 8018456:	f8d8 7004 	ldr.w	r7, [r8, #4]
 801845a:	1b76      	subs	r6, r6, r5
 801845c:	2502      	movs	r5, #2
 801845e:	f1b9 0f00 	cmp.w	r9, #0
 8018462:	d047      	beq.n	80184f4 <__gethex+0x38c>
 8018464:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8018468:	2b02      	cmp	r3, #2
 801846a:	d015      	beq.n	8018498 <__gethex+0x330>
 801846c:	2b03      	cmp	r3, #3
 801846e:	d017      	beq.n	80184a0 <__gethex+0x338>
 8018470:	2b01      	cmp	r3, #1
 8018472:	d109      	bne.n	8018488 <__gethex+0x320>
 8018474:	f019 0f02 	tst.w	r9, #2
 8018478:	d006      	beq.n	8018488 <__gethex+0x320>
 801847a:	f8da 3000 	ldr.w	r3, [sl]
 801847e:	ea49 0903 	orr.w	r9, r9, r3
 8018482:	f019 0f01 	tst.w	r9, #1
 8018486:	d10e      	bne.n	80184a6 <__gethex+0x33e>
 8018488:	f045 0510 	orr.w	r5, r5, #16
 801848c:	e032      	b.n	80184f4 <__gethex+0x38c>
 801848e:	f04f 0901 	mov.w	r9, #1
 8018492:	e7d1      	b.n	8018438 <__gethex+0x2d0>
 8018494:	2501      	movs	r5, #1
 8018496:	e7e2      	b.n	801845e <__gethex+0x2f6>
 8018498:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801849a:	f1c3 0301 	rsb	r3, r3, #1
 801849e:	930f      	str	r3, [sp, #60]	@ 0x3c
 80184a0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80184a2:	2b00      	cmp	r3, #0
 80184a4:	d0f0      	beq.n	8018488 <__gethex+0x320>
 80184a6:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80184aa:	f104 0314 	add.w	r3, r4, #20
 80184ae:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 80184b2:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 80184b6:	f04f 0c00 	mov.w	ip, #0
 80184ba:	4618      	mov	r0, r3
 80184bc:	f853 2b04 	ldr.w	r2, [r3], #4
 80184c0:	f1b2 3fff 	cmp.w	r2, #4294967295
 80184c4:	d01b      	beq.n	80184fe <__gethex+0x396>
 80184c6:	3201      	adds	r2, #1
 80184c8:	6002      	str	r2, [r0, #0]
 80184ca:	2d02      	cmp	r5, #2
 80184cc:	f104 0314 	add.w	r3, r4, #20
 80184d0:	d13c      	bne.n	801854c <__gethex+0x3e4>
 80184d2:	f8d8 2000 	ldr.w	r2, [r8]
 80184d6:	3a01      	subs	r2, #1
 80184d8:	42b2      	cmp	r2, r6
 80184da:	d109      	bne.n	80184f0 <__gethex+0x388>
 80184dc:	1171      	asrs	r1, r6, #5
 80184de:	2201      	movs	r2, #1
 80184e0:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80184e4:	f006 061f 	and.w	r6, r6, #31
 80184e8:	fa02 f606 	lsl.w	r6, r2, r6
 80184ec:	421e      	tst	r6, r3
 80184ee:	d13a      	bne.n	8018566 <__gethex+0x3fe>
 80184f0:	f045 0520 	orr.w	r5, r5, #32
 80184f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80184f6:	601c      	str	r4, [r3, #0]
 80184f8:	9b02      	ldr	r3, [sp, #8]
 80184fa:	601f      	str	r7, [r3, #0]
 80184fc:	e6b0      	b.n	8018260 <__gethex+0xf8>
 80184fe:	4299      	cmp	r1, r3
 8018500:	f843 cc04 	str.w	ip, [r3, #-4]
 8018504:	d8d9      	bhi.n	80184ba <__gethex+0x352>
 8018506:	68a3      	ldr	r3, [r4, #8]
 8018508:	459b      	cmp	fp, r3
 801850a:	db17      	blt.n	801853c <__gethex+0x3d4>
 801850c:	6861      	ldr	r1, [r4, #4]
 801850e:	9801      	ldr	r0, [sp, #4]
 8018510:	3101      	adds	r1, #1
 8018512:	f000 f9c3 	bl	801889c <_Balloc>
 8018516:	4681      	mov	r9, r0
 8018518:	b918      	cbnz	r0, 8018522 <__gethex+0x3ba>
 801851a:	4b1a      	ldr	r3, [pc, #104]	@ (8018584 <__gethex+0x41c>)
 801851c:	4602      	mov	r2, r0
 801851e:	2184      	movs	r1, #132	@ 0x84
 8018520:	e6c5      	b.n	80182ae <__gethex+0x146>
 8018522:	6922      	ldr	r2, [r4, #16]
 8018524:	3202      	adds	r2, #2
 8018526:	f104 010c 	add.w	r1, r4, #12
 801852a:	0092      	lsls	r2, r2, #2
 801852c:	300c      	adds	r0, #12
 801852e:	f7fe ff72 	bl	8017416 <memcpy>
 8018532:	4621      	mov	r1, r4
 8018534:	9801      	ldr	r0, [sp, #4]
 8018536:	f000 f9f1 	bl	801891c <_Bfree>
 801853a:	464c      	mov	r4, r9
 801853c:	6923      	ldr	r3, [r4, #16]
 801853e:	1c5a      	adds	r2, r3, #1
 8018540:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8018544:	6122      	str	r2, [r4, #16]
 8018546:	2201      	movs	r2, #1
 8018548:	615a      	str	r2, [r3, #20]
 801854a:	e7be      	b.n	80184ca <__gethex+0x362>
 801854c:	6922      	ldr	r2, [r4, #16]
 801854e:	455a      	cmp	r2, fp
 8018550:	dd0b      	ble.n	801856a <__gethex+0x402>
 8018552:	2101      	movs	r1, #1
 8018554:	4620      	mov	r0, r4
 8018556:	f7ff fd9f 	bl	8018098 <rshift>
 801855a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 801855e:	3701      	adds	r7, #1
 8018560:	42bb      	cmp	r3, r7
 8018562:	f6ff aee0 	blt.w	8018326 <__gethex+0x1be>
 8018566:	2501      	movs	r5, #1
 8018568:	e7c2      	b.n	80184f0 <__gethex+0x388>
 801856a:	f016 061f 	ands.w	r6, r6, #31
 801856e:	d0fa      	beq.n	8018566 <__gethex+0x3fe>
 8018570:	4453      	add	r3, sl
 8018572:	f1c6 0620 	rsb	r6, r6, #32
 8018576:	f853 0c04 	ldr.w	r0, [r3, #-4]
 801857a:	f000 fa81 	bl	8018a80 <__hi0bits>
 801857e:	42b0      	cmp	r0, r6
 8018580:	dbe7      	blt.n	8018552 <__gethex+0x3ea>
 8018582:	e7f0      	b.n	8018566 <__gethex+0x3fe>
 8018584:	0801b299 	.word	0x0801b299

08018588 <L_shift>:
 8018588:	f1c2 0208 	rsb	r2, r2, #8
 801858c:	0092      	lsls	r2, r2, #2
 801858e:	b570      	push	{r4, r5, r6, lr}
 8018590:	f1c2 0620 	rsb	r6, r2, #32
 8018594:	6843      	ldr	r3, [r0, #4]
 8018596:	6804      	ldr	r4, [r0, #0]
 8018598:	fa03 f506 	lsl.w	r5, r3, r6
 801859c:	432c      	orrs	r4, r5
 801859e:	40d3      	lsrs	r3, r2
 80185a0:	6004      	str	r4, [r0, #0]
 80185a2:	f840 3f04 	str.w	r3, [r0, #4]!
 80185a6:	4288      	cmp	r0, r1
 80185a8:	d3f4      	bcc.n	8018594 <L_shift+0xc>
 80185aa:	bd70      	pop	{r4, r5, r6, pc}

080185ac <__match>:
 80185ac:	b530      	push	{r4, r5, lr}
 80185ae:	6803      	ldr	r3, [r0, #0]
 80185b0:	3301      	adds	r3, #1
 80185b2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80185b6:	b914      	cbnz	r4, 80185be <__match+0x12>
 80185b8:	6003      	str	r3, [r0, #0]
 80185ba:	2001      	movs	r0, #1
 80185bc:	bd30      	pop	{r4, r5, pc}
 80185be:	f813 2b01 	ldrb.w	r2, [r3], #1
 80185c2:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 80185c6:	2d19      	cmp	r5, #25
 80185c8:	bf98      	it	ls
 80185ca:	3220      	addls	r2, #32
 80185cc:	42a2      	cmp	r2, r4
 80185ce:	d0f0      	beq.n	80185b2 <__match+0x6>
 80185d0:	2000      	movs	r0, #0
 80185d2:	e7f3      	b.n	80185bc <__match+0x10>

080185d4 <__hexnan>:
 80185d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80185d8:	680b      	ldr	r3, [r1, #0]
 80185da:	6801      	ldr	r1, [r0, #0]
 80185dc:	115e      	asrs	r6, r3, #5
 80185de:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80185e2:	f013 031f 	ands.w	r3, r3, #31
 80185e6:	b087      	sub	sp, #28
 80185e8:	bf18      	it	ne
 80185ea:	3604      	addne	r6, #4
 80185ec:	2500      	movs	r5, #0
 80185ee:	1f37      	subs	r7, r6, #4
 80185f0:	4682      	mov	sl, r0
 80185f2:	4690      	mov	r8, r2
 80185f4:	9301      	str	r3, [sp, #4]
 80185f6:	f846 5c04 	str.w	r5, [r6, #-4]
 80185fa:	46b9      	mov	r9, r7
 80185fc:	463c      	mov	r4, r7
 80185fe:	9502      	str	r5, [sp, #8]
 8018600:	46ab      	mov	fp, r5
 8018602:	784a      	ldrb	r2, [r1, #1]
 8018604:	1c4b      	adds	r3, r1, #1
 8018606:	9303      	str	r3, [sp, #12]
 8018608:	b342      	cbz	r2, 801865c <__hexnan+0x88>
 801860a:	4610      	mov	r0, r2
 801860c:	9105      	str	r1, [sp, #20]
 801860e:	9204      	str	r2, [sp, #16]
 8018610:	f7ff fd94 	bl	801813c <__hexdig_fun>
 8018614:	2800      	cmp	r0, #0
 8018616:	d151      	bne.n	80186bc <__hexnan+0xe8>
 8018618:	9a04      	ldr	r2, [sp, #16]
 801861a:	9905      	ldr	r1, [sp, #20]
 801861c:	2a20      	cmp	r2, #32
 801861e:	d818      	bhi.n	8018652 <__hexnan+0x7e>
 8018620:	9b02      	ldr	r3, [sp, #8]
 8018622:	459b      	cmp	fp, r3
 8018624:	dd13      	ble.n	801864e <__hexnan+0x7a>
 8018626:	454c      	cmp	r4, r9
 8018628:	d206      	bcs.n	8018638 <__hexnan+0x64>
 801862a:	2d07      	cmp	r5, #7
 801862c:	dc04      	bgt.n	8018638 <__hexnan+0x64>
 801862e:	462a      	mov	r2, r5
 8018630:	4649      	mov	r1, r9
 8018632:	4620      	mov	r0, r4
 8018634:	f7ff ffa8 	bl	8018588 <L_shift>
 8018638:	4544      	cmp	r4, r8
 801863a:	d952      	bls.n	80186e2 <__hexnan+0x10e>
 801863c:	2300      	movs	r3, #0
 801863e:	f1a4 0904 	sub.w	r9, r4, #4
 8018642:	f844 3c04 	str.w	r3, [r4, #-4]
 8018646:	f8cd b008 	str.w	fp, [sp, #8]
 801864a:	464c      	mov	r4, r9
 801864c:	461d      	mov	r5, r3
 801864e:	9903      	ldr	r1, [sp, #12]
 8018650:	e7d7      	b.n	8018602 <__hexnan+0x2e>
 8018652:	2a29      	cmp	r2, #41	@ 0x29
 8018654:	d157      	bne.n	8018706 <__hexnan+0x132>
 8018656:	3102      	adds	r1, #2
 8018658:	f8ca 1000 	str.w	r1, [sl]
 801865c:	f1bb 0f00 	cmp.w	fp, #0
 8018660:	d051      	beq.n	8018706 <__hexnan+0x132>
 8018662:	454c      	cmp	r4, r9
 8018664:	d206      	bcs.n	8018674 <__hexnan+0xa0>
 8018666:	2d07      	cmp	r5, #7
 8018668:	dc04      	bgt.n	8018674 <__hexnan+0xa0>
 801866a:	462a      	mov	r2, r5
 801866c:	4649      	mov	r1, r9
 801866e:	4620      	mov	r0, r4
 8018670:	f7ff ff8a 	bl	8018588 <L_shift>
 8018674:	4544      	cmp	r4, r8
 8018676:	d936      	bls.n	80186e6 <__hexnan+0x112>
 8018678:	f1a8 0204 	sub.w	r2, r8, #4
 801867c:	4623      	mov	r3, r4
 801867e:	f853 1b04 	ldr.w	r1, [r3], #4
 8018682:	f842 1f04 	str.w	r1, [r2, #4]!
 8018686:	429f      	cmp	r7, r3
 8018688:	d2f9      	bcs.n	801867e <__hexnan+0xaa>
 801868a:	1b3b      	subs	r3, r7, r4
 801868c:	f023 0303 	bic.w	r3, r3, #3
 8018690:	3304      	adds	r3, #4
 8018692:	3401      	adds	r4, #1
 8018694:	3e03      	subs	r6, #3
 8018696:	42b4      	cmp	r4, r6
 8018698:	bf88      	it	hi
 801869a:	2304      	movhi	r3, #4
 801869c:	4443      	add	r3, r8
 801869e:	2200      	movs	r2, #0
 80186a0:	f843 2b04 	str.w	r2, [r3], #4
 80186a4:	429f      	cmp	r7, r3
 80186a6:	d2fb      	bcs.n	80186a0 <__hexnan+0xcc>
 80186a8:	683b      	ldr	r3, [r7, #0]
 80186aa:	b91b      	cbnz	r3, 80186b4 <__hexnan+0xe0>
 80186ac:	4547      	cmp	r7, r8
 80186ae:	d128      	bne.n	8018702 <__hexnan+0x12e>
 80186b0:	2301      	movs	r3, #1
 80186b2:	603b      	str	r3, [r7, #0]
 80186b4:	2005      	movs	r0, #5
 80186b6:	b007      	add	sp, #28
 80186b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80186bc:	3501      	adds	r5, #1
 80186be:	2d08      	cmp	r5, #8
 80186c0:	f10b 0b01 	add.w	fp, fp, #1
 80186c4:	dd06      	ble.n	80186d4 <__hexnan+0x100>
 80186c6:	4544      	cmp	r4, r8
 80186c8:	d9c1      	bls.n	801864e <__hexnan+0x7a>
 80186ca:	2300      	movs	r3, #0
 80186cc:	f844 3c04 	str.w	r3, [r4, #-4]
 80186d0:	2501      	movs	r5, #1
 80186d2:	3c04      	subs	r4, #4
 80186d4:	6822      	ldr	r2, [r4, #0]
 80186d6:	f000 000f 	and.w	r0, r0, #15
 80186da:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 80186de:	6020      	str	r0, [r4, #0]
 80186e0:	e7b5      	b.n	801864e <__hexnan+0x7a>
 80186e2:	2508      	movs	r5, #8
 80186e4:	e7b3      	b.n	801864e <__hexnan+0x7a>
 80186e6:	9b01      	ldr	r3, [sp, #4]
 80186e8:	2b00      	cmp	r3, #0
 80186ea:	d0dd      	beq.n	80186a8 <__hexnan+0xd4>
 80186ec:	f1c3 0320 	rsb	r3, r3, #32
 80186f0:	f04f 32ff 	mov.w	r2, #4294967295
 80186f4:	40da      	lsrs	r2, r3
 80186f6:	f856 3c04 	ldr.w	r3, [r6, #-4]
 80186fa:	4013      	ands	r3, r2
 80186fc:	f846 3c04 	str.w	r3, [r6, #-4]
 8018700:	e7d2      	b.n	80186a8 <__hexnan+0xd4>
 8018702:	3f04      	subs	r7, #4
 8018704:	e7d0      	b.n	80186a8 <__hexnan+0xd4>
 8018706:	2004      	movs	r0, #4
 8018708:	e7d5      	b.n	80186b6 <__hexnan+0xe2>
	...

0801870c <malloc>:
 801870c:	4b02      	ldr	r3, [pc, #8]	@ (8018718 <malloc+0xc>)
 801870e:	4601      	mov	r1, r0
 8018710:	6818      	ldr	r0, [r3, #0]
 8018712:	f000 b825 	b.w	8018760 <_malloc_r>
 8018716:	bf00      	nop
 8018718:	2400027c 	.word	0x2400027c

0801871c <sbrk_aligned>:
 801871c:	b570      	push	{r4, r5, r6, lr}
 801871e:	4e0f      	ldr	r6, [pc, #60]	@ (801875c <sbrk_aligned+0x40>)
 8018720:	460c      	mov	r4, r1
 8018722:	6831      	ldr	r1, [r6, #0]
 8018724:	4605      	mov	r5, r0
 8018726:	b911      	cbnz	r1, 801872e <sbrk_aligned+0x12>
 8018728:	f000 ff92 	bl	8019650 <_sbrk_r>
 801872c:	6030      	str	r0, [r6, #0]
 801872e:	4621      	mov	r1, r4
 8018730:	4628      	mov	r0, r5
 8018732:	f000 ff8d 	bl	8019650 <_sbrk_r>
 8018736:	1c43      	adds	r3, r0, #1
 8018738:	d103      	bne.n	8018742 <sbrk_aligned+0x26>
 801873a:	f04f 34ff 	mov.w	r4, #4294967295
 801873e:	4620      	mov	r0, r4
 8018740:	bd70      	pop	{r4, r5, r6, pc}
 8018742:	1cc4      	adds	r4, r0, #3
 8018744:	f024 0403 	bic.w	r4, r4, #3
 8018748:	42a0      	cmp	r0, r4
 801874a:	d0f8      	beq.n	801873e <sbrk_aligned+0x22>
 801874c:	1a21      	subs	r1, r4, r0
 801874e:	4628      	mov	r0, r5
 8018750:	f000 ff7e 	bl	8019650 <_sbrk_r>
 8018754:	3001      	adds	r0, #1
 8018756:	d1f2      	bne.n	801873e <sbrk_aligned+0x22>
 8018758:	e7ef      	b.n	801873a <sbrk_aligned+0x1e>
 801875a:	bf00      	nop
 801875c:	2400626c 	.word	0x2400626c

08018760 <_malloc_r>:
 8018760:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018764:	1ccd      	adds	r5, r1, #3
 8018766:	f025 0503 	bic.w	r5, r5, #3
 801876a:	3508      	adds	r5, #8
 801876c:	2d0c      	cmp	r5, #12
 801876e:	bf38      	it	cc
 8018770:	250c      	movcc	r5, #12
 8018772:	2d00      	cmp	r5, #0
 8018774:	4606      	mov	r6, r0
 8018776:	db01      	blt.n	801877c <_malloc_r+0x1c>
 8018778:	42a9      	cmp	r1, r5
 801877a:	d904      	bls.n	8018786 <_malloc_r+0x26>
 801877c:	230c      	movs	r3, #12
 801877e:	6033      	str	r3, [r6, #0]
 8018780:	2000      	movs	r0, #0
 8018782:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018786:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 801885c <_malloc_r+0xfc>
 801878a:	f000 f87b 	bl	8018884 <__malloc_lock>
 801878e:	f8d8 3000 	ldr.w	r3, [r8]
 8018792:	461c      	mov	r4, r3
 8018794:	bb44      	cbnz	r4, 80187e8 <_malloc_r+0x88>
 8018796:	4629      	mov	r1, r5
 8018798:	4630      	mov	r0, r6
 801879a:	f7ff ffbf 	bl	801871c <sbrk_aligned>
 801879e:	1c43      	adds	r3, r0, #1
 80187a0:	4604      	mov	r4, r0
 80187a2:	d158      	bne.n	8018856 <_malloc_r+0xf6>
 80187a4:	f8d8 4000 	ldr.w	r4, [r8]
 80187a8:	4627      	mov	r7, r4
 80187aa:	2f00      	cmp	r7, #0
 80187ac:	d143      	bne.n	8018836 <_malloc_r+0xd6>
 80187ae:	2c00      	cmp	r4, #0
 80187b0:	d04b      	beq.n	801884a <_malloc_r+0xea>
 80187b2:	6823      	ldr	r3, [r4, #0]
 80187b4:	4639      	mov	r1, r7
 80187b6:	4630      	mov	r0, r6
 80187b8:	eb04 0903 	add.w	r9, r4, r3
 80187bc:	f000 ff48 	bl	8019650 <_sbrk_r>
 80187c0:	4581      	cmp	r9, r0
 80187c2:	d142      	bne.n	801884a <_malloc_r+0xea>
 80187c4:	6821      	ldr	r1, [r4, #0]
 80187c6:	1a6d      	subs	r5, r5, r1
 80187c8:	4629      	mov	r1, r5
 80187ca:	4630      	mov	r0, r6
 80187cc:	f7ff ffa6 	bl	801871c <sbrk_aligned>
 80187d0:	3001      	adds	r0, #1
 80187d2:	d03a      	beq.n	801884a <_malloc_r+0xea>
 80187d4:	6823      	ldr	r3, [r4, #0]
 80187d6:	442b      	add	r3, r5
 80187d8:	6023      	str	r3, [r4, #0]
 80187da:	f8d8 3000 	ldr.w	r3, [r8]
 80187de:	685a      	ldr	r2, [r3, #4]
 80187e0:	bb62      	cbnz	r2, 801883c <_malloc_r+0xdc>
 80187e2:	f8c8 7000 	str.w	r7, [r8]
 80187e6:	e00f      	b.n	8018808 <_malloc_r+0xa8>
 80187e8:	6822      	ldr	r2, [r4, #0]
 80187ea:	1b52      	subs	r2, r2, r5
 80187ec:	d420      	bmi.n	8018830 <_malloc_r+0xd0>
 80187ee:	2a0b      	cmp	r2, #11
 80187f0:	d917      	bls.n	8018822 <_malloc_r+0xc2>
 80187f2:	1961      	adds	r1, r4, r5
 80187f4:	42a3      	cmp	r3, r4
 80187f6:	6025      	str	r5, [r4, #0]
 80187f8:	bf18      	it	ne
 80187fa:	6059      	strne	r1, [r3, #4]
 80187fc:	6863      	ldr	r3, [r4, #4]
 80187fe:	bf08      	it	eq
 8018800:	f8c8 1000 	streq.w	r1, [r8]
 8018804:	5162      	str	r2, [r4, r5]
 8018806:	604b      	str	r3, [r1, #4]
 8018808:	4630      	mov	r0, r6
 801880a:	f000 f841 	bl	8018890 <__malloc_unlock>
 801880e:	f104 000b 	add.w	r0, r4, #11
 8018812:	1d23      	adds	r3, r4, #4
 8018814:	f020 0007 	bic.w	r0, r0, #7
 8018818:	1ac2      	subs	r2, r0, r3
 801881a:	bf1c      	itt	ne
 801881c:	1a1b      	subne	r3, r3, r0
 801881e:	50a3      	strne	r3, [r4, r2]
 8018820:	e7af      	b.n	8018782 <_malloc_r+0x22>
 8018822:	6862      	ldr	r2, [r4, #4]
 8018824:	42a3      	cmp	r3, r4
 8018826:	bf0c      	ite	eq
 8018828:	f8c8 2000 	streq.w	r2, [r8]
 801882c:	605a      	strne	r2, [r3, #4]
 801882e:	e7eb      	b.n	8018808 <_malloc_r+0xa8>
 8018830:	4623      	mov	r3, r4
 8018832:	6864      	ldr	r4, [r4, #4]
 8018834:	e7ae      	b.n	8018794 <_malloc_r+0x34>
 8018836:	463c      	mov	r4, r7
 8018838:	687f      	ldr	r7, [r7, #4]
 801883a:	e7b6      	b.n	80187aa <_malloc_r+0x4a>
 801883c:	461a      	mov	r2, r3
 801883e:	685b      	ldr	r3, [r3, #4]
 8018840:	42a3      	cmp	r3, r4
 8018842:	d1fb      	bne.n	801883c <_malloc_r+0xdc>
 8018844:	2300      	movs	r3, #0
 8018846:	6053      	str	r3, [r2, #4]
 8018848:	e7de      	b.n	8018808 <_malloc_r+0xa8>
 801884a:	230c      	movs	r3, #12
 801884c:	6033      	str	r3, [r6, #0]
 801884e:	4630      	mov	r0, r6
 8018850:	f000 f81e 	bl	8018890 <__malloc_unlock>
 8018854:	e794      	b.n	8018780 <_malloc_r+0x20>
 8018856:	6005      	str	r5, [r0, #0]
 8018858:	e7d6      	b.n	8018808 <_malloc_r+0xa8>
 801885a:	bf00      	nop
 801885c:	24006270 	.word	0x24006270

08018860 <__ascii_mbtowc>:
 8018860:	b082      	sub	sp, #8
 8018862:	b901      	cbnz	r1, 8018866 <__ascii_mbtowc+0x6>
 8018864:	a901      	add	r1, sp, #4
 8018866:	b142      	cbz	r2, 801887a <__ascii_mbtowc+0x1a>
 8018868:	b14b      	cbz	r3, 801887e <__ascii_mbtowc+0x1e>
 801886a:	7813      	ldrb	r3, [r2, #0]
 801886c:	600b      	str	r3, [r1, #0]
 801886e:	7812      	ldrb	r2, [r2, #0]
 8018870:	1e10      	subs	r0, r2, #0
 8018872:	bf18      	it	ne
 8018874:	2001      	movne	r0, #1
 8018876:	b002      	add	sp, #8
 8018878:	4770      	bx	lr
 801887a:	4610      	mov	r0, r2
 801887c:	e7fb      	b.n	8018876 <__ascii_mbtowc+0x16>
 801887e:	f06f 0001 	mvn.w	r0, #1
 8018882:	e7f8      	b.n	8018876 <__ascii_mbtowc+0x16>

08018884 <__malloc_lock>:
 8018884:	4801      	ldr	r0, [pc, #4]	@ (801888c <__malloc_lock+0x8>)
 8018886:	f7fe bdc4 	b.w	8017412 <__retarget_lock_acquire_recursive>
 801888a:	bf00      	nop
 801888c:	24006268 	.word	0x24006268

08018890 <__malloc_unlock>:
 8018890:	4801      	ldr	r0, [pc, #4]	@ (8018898 <__malloc_unlock+0x8>)
 8018892:	f7fe bdbf 	b.w	8017414 <__retarget_lock_release_recursive>
 8018896:	bf00      	nop
 8018898:	24006268 	.word	0x24006268

0801889c <_Balloc>:
 801889c:	b570      	push	{r4, r5, r6, lr}
 801889e:	69c6      	ldr	r6, [r0, #28]
 80188a0:	4604      	mov	r4, r0
 80188a2:	460d      	mov	r5, r1
 80188a4:	b976      	cbnz	r6, 80188c4 <_Balloc+0x28>
 80188a6:	2010      	movs	r0, #16
 80188a8:	f7ff ff30 	bl	801870c <malloc>
 80188ac:	4602      	mov	r2, r0
 80188ae:	61e0      	str	r0, [r4, #28]
 80188b0:	b920      	cbnz	r0, 80188bc <_Balloc+0x20>
 80188b2:	4b18      	ldr	r3, [pc, #96]	@ (8018914 <_Balloc+0x78>)
 80188b4:	4818      	ldr	r0, [pc, #96]	@ (8018918 <_Balloc+0x7c>)
 80188b6:	216b      	movs	r1, #107	@ 0x6b
 80188b8:	f000 feda 	bl	8019670 <__assert_func>
 80188bc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80188c0:	6006      	str	r6, [r0, #0]
 80188c2:	60c6      	str	r6, [r0, #12]
 80188c4:	69e6      	ldr	r6, [r4, #28]
 80188c6:	68f3      	ldr	r3, [r6, #12]
 80188c8:	b183      	cbz	r3, 80188ec <_Balloc+0x50>
 80188ca:	69e3      	ldr	r3, [r4, #28]
 80188cc:	68db      	ldr	r3, [r3, #12]
 80188ce:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80188d2:	b9b8      	cbnz	r0, 8018904 <_Balloc+0x68>
 80188d4:	2101      	movs	r1, #1
 80188d6:	fa01 f605 	lsl.w	r6, r1, r5
 80188da:	1d72      	adds	r2, r6, #5
 80188dc:	0092      	lsls	r2, r2, #2
 80188de:	4620      	mov	r0, r4
 80188e0:	f000 fee4 	bl	80196ac <_calloc_r>
 80188e4:	b160      	cbz	r0, 8018900 <_Balloc+0x64>
 80188e6:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80188ea:	e00e      	b.n	801890a <_Balloc+0x6e>
 80188ec:	2221      	movs	r2, #33	@ 0x21
 80188ee:	2104      	movs	r1, #4
 80188f0:	4620      	mov	r0, r4
 80188f2:	f000 fedb 	bl	80196ac <_calloc_r>
 80188f6:	69e3      	ldr	r3, [r4, #28]
 80188f8:	60f0      	str	r0, [r6, #12]
 80188fa:	68db      	ldr	r3, [r3, #12]
 80188fc:	2b00      	cmp	r3, #0
 80188fe:	d1e4      	bne.n	80188ca <_Balloc+0x2e>
 8018900:	2000      	movs	r0, #0
 8018902:	bd70      	pop	{r4, r5, r6, pc}
 8018904:	6802      	ldr	r2, [r0, #0]
 8018906:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 801890a:	2300      	movs	r3, #0
 801890c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8018910:	e7f7      	b.n	8018902 <_Balloc+0x66>
 8018912:	bf00      	nop
 8018914:	0801b22a 	.word	0x0801b22a
 8018918:	0801b30a 	.word	0x0801b30a

0801891c <_Bfree>:
 801891c:	b570      	push	{r4, r5, r6, lr}
 801891e:	69c6      	ldr	r6, [r0, #28]
 8018920:	4605      	mov	r5, r0
 8018922:	460c      	mov	r4, r1
 8018924:	b976      	cbnz	r6, 8018944 <_Bfree+0x28>
 8018926:	2010      	movs	r0, #16
 8018928:	f7ff fef0 	bl	801870c <malloc>
 801892c:	4602      	mov	r2, r0
 801892e:	61e8      	str	r0, [r5, #28]
 8018930:	b920      	cbnz	r0, 801893c <_Bfree+0x20>
 8018932:	4b09      	ldr	r3, [pc, #36]	@ (8018958 <_Bfree+0x3c>)
 8018934:	4809      	ldr	r0, [pc, #36]	@ (801895c <_Bfree+0x40>)
 8018936:	218f      	movs	r1, #143	@ 0x8f
 8018938:	f000 fe9a 	bl	8019670 <__assert_func>
 801893c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8018940:	6006      	str	r6, [r0, #0]
 8018942:	60c6      	str	r6, [r0, #12]
 8018944:	b13c      	cbz	r4, 8018956 <_Bfree+0x3a>
 8018946:	69eb      	ldr	r3, [r5, #28]
 8018948:	6862      	ldr	r2, [r4, #4]
 801894a:	68db      	ldr	r3, [r3, #12]
 801894c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8018950:	6021      	str	r1, [r4, #0]
 8018952:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8018956:	bd70      	pop	{r4, r5, r6, pc}
 8018958:	0801b22a 	.word	0x0801b22a
 801895c:	0801b30a 	.word	0x0801b30a

08018960 <__multadd>:
 8018960:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018964:	690d      	ldr	r5, [r1, #16]
 8018966:	4607      	mov	r7, r0
 8018968:	460c      	mov	r4, r1
 801896a:	461e      	mov	r6, r3
 801896c:	f101 0c14 	add.w	ip, r1, #20
 8018970:	2000      	movs	r0, #0
 8018972:	f8dc 3000 	ldr.w	r3, [ip]
 8018976:	b299      	uxth	r1, r3
 8018978:	fb02 6101 	mla	r1, r2, r1, r6
 801897c:	0c1e      	lsrs	r6, r3, #16
 801897e:	0c0b      	lsrs	r3, r1, #16
 8018980:	fb02 3306 	mla	r3, r2, r6, r3
 8018984:	b289      	uxth	r1, r1
 8018986:	3001      	adds	r0, #1
 8018988:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801898c:	4285      	cmp	r5, r0
 801898e:	f84c 1b04 	str.w	r1, [ip], #4
 8018992:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8018996:	dcec      	bgt.n	8018972 <__multadd+0x12>
 8018998:	b30e      	cbz	r6, 80189de <__multadd+0x7e>
 801899a:	68a3      	ldr	r3, [r4, #8]
 801899c:	42ab      	cmp	r3, r5
 801899e:	dc19      	bgt.n	80189d4 <__multadd+0x74>
 80189a0:	6861      	ldr	r1, [r4, #4]
 80189a2:	4638      	mov	r0, r7
 80189a4:	3101      	adds	r1, #1
 80189a6:	f7ff ff79 	bl	801889c <_Balloc>
 80189aa:	4680      	mov	r8, r0
 80189ac:	b928      	cbnz	r0, 80189ba <__multadd+0x5a>
 80189ae:	4602      	mov	r2, r0
 80189b0:	4b0c      	ldr	r3, [pc, #48]	@ (80189e4 <__multadd+0x84>)
 80189b2:	480d      	ldr	r0, [pc, #52]	@ (80189e8 <__multadd+0x88>)
 80189b4:	21ba      	movs	r1, #186	@ 0xba
 80189b6:	f000 fe5b 	bl	8019670 <__assert_func>
 80189ba:	6922      	ldr	r2, [r4, #16]
 80189bc:	3202      	adds	r2, #2
 80189be:	f104 010c 	add.w	r1, r4, #12
 80189c2:	0092      	lsls	r2, r2, #2
 80189c4:	300c      	adds	r0, #12
 80189c6:	f7fe fd26 	bl	8017416 <memcpy>
 80189ca:	4621      	mov	r1, r4
 80189cc:	4638      	mov	r0, r7
 80189ce:	f7ff ffa5 	bl	801891c <_Bfree>
 80189d2:	4644      	mov	r4, r8
 80189d4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80189d8:	3501      	adds	r5, #1
 80189da:	615e      	str	r6, [r3, #20]
 80189dc:	6125      	str	r5, [r4, #16]
 80189de:	4620      	mov	r0, r4
 80189e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80189e4:	0801b299 	.word	0x0801b299
 80189e8:	0801b30a 	.word	0x0801b30a

080189ec <__s2b>:
 80189ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80189f0:	460c      	mov	r4, r1
 80189f2:	4615      	mov	r5, r2
 80189f4:	461f      	mov	r7, r3
 80189f6:	2209      	movs	r2, #9
 80189f8:	3308      	adds	r3, #8
 80189fa:	4606      	mov	r6, r0
 80189fc:	fb93 f3f2 	sdiv	r3, r3, r2
 8018a00:	2100      	movs	r1, #0
 8018a02:	2201      	movs	r2, #1
 8018a04:	429a      	cmp	r2, r3
 8018a06:	db09      	blt.n	8018a1c <__s2b+0x30>
 8018a08:	4630      	mov	r0, r6
 8018a0a:	f7ff ff47 	bl	801889c <_Balloc>
 8018a0e:	b940      	cbnz	r0, 8018a22 <__s2b+0x36>
 8018a10:	4602      	mov	r2, r0
 8018a12:	4b19      	ldr	r3, [pc, #100]	@ (8018a78 <__s2b+0x8c>)
 8018a14:	4819      	ldr	r0, [pc, #100]	@ (8018a7c <__s2b+0x90>)
 8018a16:	21d3      	movs	r1, #211	@ 0xd3
 8018a18:	f000 fe2a 	bl	8019670 <__assert_func>
 8018a1c:	0052      	lsls	r2, r2, #1
 8018a1e:	3101      	adds	r1, #1
 8018a20:	e7f0      	b.n	8018a04 <__s2b+0x18>
 8018a22:	9b08      	ldr	r3, [sp, #32]
 8018a24:	6143      	str	r3, [r0, #20]
 8018a26:	2d09      	cmp	r5, #9
 8018a28:	f04f 0301 	mov.w	r3, #1
 8018a2c:	6103      	str	r3, [r0, #16]
 8018a2e:	dd16      	ble.n	8018a5e <__s2b+0x72>
 8018a30:	f104 0909 	add.w	r9, r4, #9
 8018a34:	46c8      	mov	r8, r9
 8018a36:	442c      	add	r4, r5
 8018a38:	f818 3b01 	ldrb.w	r3, [r8], #1
 8018a3c:	4601      	mov	r1, r0
 8018a3e:	3b30      	subs	r3, #48	@ 0x30
 8018a40:	220a      	movs	r2, #10
 8018a42:	4630      	mov	r0, r6
 8018a44:	f7ff ff8c 	bl	8018960 <__multadd>
 8018a48:	45a0      	cmp	r8, r4
 8018a4a:	d1f5      	bne.n	8018a38 <__s2b+0x4c>
 8018a4c:	f1a5 0408 	sub.w	r4, r5, #8
 8018a50:	444c      	add	r4, r9
 8018a52:	1b2d      	subs	r5, r5, r4
 8018a54:	1963      	adds	r3, r4, r5
 8018a56:	42bb      	cmp	r3, r7
 8018a58:	db04      	blt.n	8018a64 <__s2b+0x78>
 8018a5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018a5e:	340a      	adds	r4, #10
 8018a60:	2509      	movs	r5, #9
 8018a62:	e7f6      	b.n	8018a52 <__s2b+0x66>
 8018a64:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018a68:	4601      	mov	r1, r0
 8018a6a:	3b30      	subs	r3, #48	@ 0x30
 8018a6c:	220a      	movs	r2, #10
 8018a6e:	4630      	mov	r0, r6
 8018a70:	f7ff ff76 	bl	8018960 <__multadd>
 8018a74:	e7ee      	b.n	8018a54 <__s2b+0x68>
 8018a76:	bf00      	nop
 8018a78:	0801b299 	.word	0x0801b299
 8018a7c:	0801b30a 	.word	0x0801b30a

08018a80 <__hi0bits>:
 8018a80:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8018a84:	4603      	mov	r3, r0
 8018a86:	bf36      	itet	cc
 8018a88:	0403      	lslcc	r3, r0, #16
 8018a8a:	2000      	movcs	r0, #0
 8018a8c:	2010      	movcc	r0, #16
 8018a8e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8018a92:	bf3c      	itt	cc
 8018a94:	021b      	lslcc	r3, r3, #8
 8018a96:	3008      	addcc	r0, #8
 8018a98:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8018a9c:	bf3c      	itt	cc
 8018a9e:	011b      	lslcc	r3, r3, #4
 8018aa0:	3004      	addcc	r0, #4
 8018aa2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8018aa6:	bf3c      	itt	cc
 8018aa8:	009b      	lslcc	r3, r3, #2
 8018aaa:	3002      	addcc	r0, #2
 8018aac:	2b00      	cmp	r3, #0
 8018aae:	db05      	blt.n	8018abc <__hi0bits+0x3c>
 8018ab0:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8018ab4:	f100 0001 	add.w	r0, r0, #1
 8018ab8:	bf08      	it	eq
 8018aba:	2020      	moveq	r0, #32
 8018abc:	4770      	bx	lr

08018abe <__lo0bits>:
 8018abe:	6803      	ldr	r3, [r0, #0]
 8018ac0:	4602      	mov	r2, r0
 8018ac2:	f013 0007 	ands.w	r0, r3, #7
 8018ac6:	d00b      	beq.n	8018ae0 <__lo0bits+0x22>
 8018ac8:	07d9      	lsls	r1, r3, #31
 8018aca:	d421      	bmi.n	8018b10 <__lo0bits+0x52>
 8018acc:	0798      	lsls	r0, r3, #30
 8018ace:	bf49      	itett	mi
 8018ad0:	085b      	lsrmi	r3, r3, #1
 8018ad2:	089b      	lsrpl	r3, r3, #2
 8018ad4:	2001      	movmi	r0, #1
 8018ad6:	6013      	strmi	r3, [r2, #0]
 8018ad8:	bf5c      	itt	pl
 8018ada:	6013      	strpl	r3, [r2, #0]
 8018adc:	2002      	movpl	r0, #2
 8018ade:	4770      	bx	lr
 8018ae0:	b299      	uxth	r1, r3
 8018ae2:	b909      	cbnz	r1, 8018ae8 <__lo0bits+0x2a>
 8018ae4:	0c1b      	lsrs	r3, r3, #16
 8018ae6:	2010      	movs	r0, #16
 8018ae8:	b2d9      	uxtb	r1, r3
 8018aea:	b909      	cbnz	r1, 8018af0 <__lo0bits+0x32>
 8018aec:	3008      	adds	r0, #8
 8018aee:	0a1b      	lsrs	r3, r3, #8
 8018af0:	0719      	lsls	r1, r3, #28
 8018af2:	bf04      	itt	eq
 8018af4:	091b      	lsreq	r3, r3, #4
 8018af6:	3004      	addeq	r0, #4
 8018af8:	0799      	lsls	r1, r3, #30
 8018afa:	bf04      	itt	eq
 8018afc:	089b      	lsreq	r3, r3, #2
 8018afe:	3002      	addeq	r0, #2
 8018b00:	07d9      	lsls	r1, r3, #31
 8018b02:	d403      	bmi.n	8018b0c <__lo0bits+0x4e>
 8018b04:	085b      	lsrs	r3, r3, #1
 8018b06:	f100 0001 	add.w	r0, r0, #1
 8018b0a:	d003      	beq.n	8018b14 <__lo0bits+0x56>
 8018b0c:	6013      	str	r3, [r2, #0]
 8018b0e:	4770      	bx	lr
 8018b10:	2000      	movs	r0, #0
 8018b12:	4770      	bx	lr
 8018b14:	2020      	movs	r0, #32
 8018b16:	4770      	bx	lr

08018b18 <__i2b>:
 8018b18:	b510      	push	{r4, lr}
 8018b1a:	460c      	mov	r4, r1
 8018b1c:	2101      	movs	r1, #1
 8018b1e:	f7ff febd 	bl	801889c <_Balloc>
 8018b22:	4602      	mov	r2, r0
 8018b24:	b928      	cbnz	r0, 8018b32 <__i2b+0x1a>
 8018b26:	4b05      	ldr	r3, [pc, #20]	@ (8018b3c <__i2b+0x24>)
 8018b28:	4805      	ldr	r0, [pc, #20]	@ (8018b40 <__i2b+0x28>)
 8018b2a:	f240 1145 	movw	r1, #325	@ 0x145
 8018b2e:	f000 fd9f 	bl	8019670 <__assert_func>
 8018b32:	2301      	movs	r3, #1
 8018b34:	6144      	str	r4, [r0, #20]
 8018b36:	6103      	str	r3, [r0, #16]
 8018b38:	bd10      	pop	{r4, pc}
 8018b3a:	bf00      	nop
 8018b3c:	0801b299 	.word	0x0801b299
 8018b40:	0801b30a 	.word	0x0801b30a

08018b44 <__multiply>:
 8018b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b48:	4614      	mov	r4, r2
 8018b4a:	690a      	ldr	r2, [r1, #16]
 8018b4c:	6923      	ldr	r3, [r4, #16]
 8018b4e:	429a      	cmp	r2, r3
 8018b50:	bfa8      	it	ge
 8018b52:	4623      	movge	r3, r4
 8018b54:	460f      	mov	r7, r1
 8018b56:	bfa4      	itt	ge
 8018b58:	460c      	movge	r4, r1
 8018b5a:	461f      	movge	r7, r3
 8018b5c:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8018b60:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8018b64:	68a3      	ldr	r3, [r4, #8]
 8018b66:	6861      	ldr	r1, [r4, #4]
 8018b68:	eb0a 0609 	add.w	r6, sl, r9
 8018b6c:	42b3      	cmp	r3, r6
 8018b6e:	b085      	sub	sp, #20
 8018b70:	bfb8      	it	lt
 8018b72:	3101      	addlt	r1, #1
 8018b74:	f7ff fe92 	bl	801889c <_Balloc>
 8018b78:	b930      	cbnz	r0, 8018b88 <__multiply+0x44>
 8018b7a:	4602      	mov	r2, r0
 8018b7c:	4b44      	ldr	r3, [pc, #272]	@ (8018c90 <__multiply+0x14c>)
 8018b7e:	4845      	ldr	r0, [pc, #276]	@ (8018c94 <__multiply+0x150>)
 8018b80:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8018b84:	f000 fd74 	bl	8019670 <__assert_func>
 8018b88:	f100 0514 	add.w	r5, r0, #20
 8018b8c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8018b90:	462b      	mov	r3, r5
 8018b92:	2200      	movs	r2, #0
 8018b94:	4543      	cmp	r3, r8
 8018b96:	d321      	bcc.n	8018bdc <__multiply+0x98>
 8018b98:	f107 0114 	add.w	r1, r7, #20
 8018b9c:	f104 0214 	add.w	r2, r4, #20
 8018ba0:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8018ba4:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8018ba8:	9302      	str	r3, [sp, #8]
 8018baa:	1b13      	subs	r3, r2, r4
 8018bac:	3b15      	subs	r3, #21
 8018bae:	f023 0303 	bic.w	r3, r3, #3
 8018bb2:	3304      	adds	r3, #4
 8018bb4:	f104 0715 	add.w	r7, r4, #21
 8018bb8:	42ba      	cmp	r2, r7
 8018bba:	bf38      	it	cc
 8018bbc:	2304      	movcc	r3, #4
 8018bbe:	9301      	str	r3, [sp, #4]
 8018bc0:	9b02      	ldr	r3, [sp, #8]
 8018bc2:	9103      	str	r1, [sp, #12]
 8018bc4:	428b      	cmp	r3, r1
 8018bc6:	d80c      	bhi.n	8018be2 <__multiply+0x9e>
 8018bc8:	2e00      	cmp	r6, #0
 8018bca:	dd03      	ble.n	8018bd4 <__multiply+0x90>
 8018bcc:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8018bd0:	2b00      	cmp	r3, #0
 8018bd2:	d05b      	beq.n	8018c8c <__multiply+0x148>
 8018bd4:	6106      	str	r6, [r0, #16]
 8018bd6:	b005      	add	sp, #20
 8018bd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018bdc:	f843 2b04 	str.w	r2, [r3], #4
 8018be0:	e7d8      	b.n	8018b94 <__multiply+0x50>
 8018be2:	f8b1 a000 	ldrh.w	sl, [r1]
 8018be6:	f1ba 0f00 	cmp.w	sl, #0
 8018bea:	d024      	beq.n	8018c36 <__multiply+0xf2>
 8018bec:	f104 0e14 	add.w	lr, r4, #20
 8018bf0:	46a9      	mov	r9, r5
 8018bf2:	f04f 0c00 	mov.w	ip, #0
 8018bf6:	f85e 7b04 	ldr.w	r7, [lr], #4
 8018bfa:	f8d9 3000 	ldr.w	r3, [r9]
 8018bfe:	fa1f fb87 	uxth.w	fp, r7
 8018c02:	b29b      	uxth	r3, r3
 8018c04:	fb0a 330b 	mla	r3, sl, fp, r3
 8018c08:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 8018c0c:	f8d9 7000 	ldr.w	r7, [r9]
 8018c10:	4463      	add	r3, ip
 8018c12:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8018c16:	fb0a c70b 	mla	r7, sl, fp, ip
 8018c1a:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8018c1e:	b29b      	uxth	r3, r3
 8018c20:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8018c24:	4572      	cmp	r2, lr
 8018c26:	f849 3b04 	str.w	r3, [r9], #4
 8018c2a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8018c2e:	d8e2      	bhi.n	8018bf6 <__multiply+0xb2>
 8018c30:	9b01      	ldr	r3, [sp, #4]
 8018c32:	f845 c003 	str.w	ip, [r5, r3]
 8018c36:	9b03      	ldr	r3, [sp, #12]
 8018c38:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8018c3c:	3104      	adds	r1, #4
 8018c3e:	f1b9 0f00 	cmp.w	r9, #0
 8018c42:	d021      	beq.n	8018c88 <__multiply+0x144>
 8018c44:	682b      	ldr	r3, [r5, #0]
 8018c46:	f104 0c14 	add.w	ip, r4, #20
 8018c4a:	46ae      	mov	lr, r5
 8018c4c:	f04f 0a00 	mov.w	sl, #0
 8018c50:	f8bc b000 	ldrh.w	fp, [ip]
 8018c54:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8018c58:	fb09 770b 	mla	r7, r9, fp, r7
 8018c5c:	4457      	add	r7, sl
 8018c5e:	b29b      	uxth	r3, r3
 8018c60:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8018c64:	f84e 3b04 	str.w	r3, [lr], #4
 8018c68:	f85c 3b04 	ldr.w	r3, [ip], #4
 8018c6c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8018c70:	f8be 3000 	ldrh.w	r3, [lr]
 8018c74:	fb09 330a 	mla	r3, r9, sl, r3
 8018c78:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8018c7c:	4562      	cmp	r2, ip
 8018c7e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8018c82:	d8e5      	bhi.n	8018c50 <__multiply+0x10c>
 8018c84:	9f01      	ldr	r7, [sp, #4]
 8018c86:	51eb      	str	r3, [r5, r7]
 8018c88:	3504      	adds	r5, #4
 8018c8a:	e799      	b.n	8018bc0 <__multiply+0x7c>
 8018c8c:	3e01      	subs	r6, #1
 8018c8e:	e79b      	b.n	8018bc8 <__multiply+0x84>
 8018c90:	0801b299 	.word	0x0801b299
 8018c94:	0801b30a 	.word	0x0801b30a

08018c98 <__pow5mult>:
 8018c98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018c9c:	4615      	mov	r5, r2
 8018c9e:	f012 0203 	ands.w	r2, r2, #3
 8018ca2:	4607      	mov	r7, r0
 8018ca4:	460e      	mov	r6, r1
 8018ca6:	d007      	beq.n	8018cb8 <__pow5mult+0x20>
 8018ca8:	4c25      	ldr	r4, [pc, #148]	@ (8018d40 <__pow5mult+0xa8>)
 8018caa:	3a01      	subs	r2, #1
 8018cac:	2300      	movs	r3, #0
 8018cae:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8018cb2:	f7ff fe55 	bl	8018960 <__multadd>
 8018cb6:	4606      	mov	r6, r0
 8018cb8:	10ad      	asrs	r5, r5, #2
 8018cba:	d03d      	beq.n	8018d38 <__pow5mult+0xa0>
 8018cbc:	69fc      	ldr	r4, [r7, #28]
 8018cbe:	b97c      	cbnz	r4, 8018ce0 <__pow5mult+0x48>
 8018cc0:	2010      	movs	r0, #16
 8018cc2:	f7ff fd23 	bl	801870c <malloc>
 8018cc6:	4602      	mov	r2, r0
 8018cc8:	61f8      	str	r0, [r7, #28]
 8018cca:	b928      	cbnz	r0, 8018cd8 <__pow5mult+0x40>
 8018ccc:	4b1d      	ldr	r3, [pc, #116]	@ (8018d44 <__pow5mult+0xac>)
 8018cce:	481e      	ldr	r0, [pc, #120]	@ (8018d48 <__pow5mult+0xb0>)
 8018cd0:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8018cd4:	f000 fccc 	bl	8019670 <__assert_func>
 8018cd8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8018cdc:	6004      	str	r4, [r0, #0]
 8018cde:	60c4      	str	r4, [r0, #12]
 8018ce0:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8018ce4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8018ce8:	b94c      	cbnz	r4, 8018cfe <__pow5mult+0x66>
 8018cea:	f240 2171 	movw	r1, #625	@ 0x271
 8018cee:	4638      	mov	r0, r7
 8018cf0:	f7ff ff12 	bl	8018b18 <__i2b>
 8018cf4:	2300      	movs	r3, #0
 8018cf6:	f8c8 0008 	str.w	r0, [r8, #8]
 8018cfa:	4604      	mov	r4, r0
 8018cfc:	6003      	str	r3, [r0, #0]
 8018cfe:	f04f 0900 	mov.w	r9, #0
 8018d02:	07eb      	lsls	r3, r5, #31
 8018d04:	d50a      	bpl.n	8018d1c <__pow5mult+0x84>
 8018d06:	4631      	mov	r1, r6
 8018d08:	4622      	mov	r2, r4
 8018d0a:	4638      	mov	r0, r7
 8018d0c:	f7ff ff1a 	bl	8018b44 <__multiply>
 8018d10:	4631      	mov	r1, r6
 8018d12:	4680      	mov	r8, r0
 8018d14:	4638      	mov	r0, r7
 8018d16:	f7ff fe01 	bl	801891c <_Bfree>
 8018d1a:	4646      	mov	r6, r8
 8018d1c:	106d      	asrs	r5, r5, #1
 8018d1e:	d00b      	beq.n	8018d38 <__pow5mult+0xa0>
 8018d20:	6820      	ldr	r0, [r4, #0]
 8018d22:	b938      	cbnz	r0, 8018d34 <__pow5mult+0x9c>
 8018d24:	4622      	mov	r2, r4
 8018d26:	4621      	mov	r1, r4
 8018d28:	4638      	mov	r0, r7
 8018d2a:	f7ff ff0b 	bl	8018b44 <__multiply>
 8018d2e:	6020      	str	r0, [r4, #0]
 8018d30:	f8c0 9000 	str.w	r9, [r0]
 8018d34:	4604      	mov	r4, r0
 8018d36:	e7e4      	b.n	8018d02 <__pow5mult+0x6a>
 8018d38:	4630      	mov	r0, r6
 8018d3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018d3e:	bf00      	nop
 8018d40:	0801b364 	.word	0x0801b364
 8018d44:	0801b22a 	.word	0x0801b22a
 8018d48:	0801b30a 	.word	0x0801b30a

08018d4c <__lshift>:
 8018d4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018d50:	460c      	mov	r4, r1
 8018d52:	6849      	ldr	r1, [r1, #4]
 8018d54:	6923      	ldr	r3, [r4, #16]
 8018d56:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8018d5a:	68a3      	ldr	r3, [r4, #8]
 8018d5c:	4607      	mov	r7, r0
 8018d5e:	4691      	mov	r9, r2
 8018d60:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8018d64:	f108 0601 	add.w	r6, r8, #1
 8018d68:	42b3      	cmp	r3, r6
 8018d6a:	db0b      	blt.n	8018d84 <__lshift+0x38>
 8018d6c:	4638      	mov	r0, r7
 8018d6e:	f7ff fd95 	bl	801889c <_Balloc>
 8018d72:	4605      	mov	r5, r0
 8018d74:	b948      	cbnz	r0, 8018d8a <__lshift+0x3e>
 8018d76:	4602      	mov	r2, r0
 8018d78:	4b28      	ldr	r3, [pc, #160]	@ (8018e1c <__lshift+0xd0>)
 8018d7a:	4829      	ldr	r0, [pc, #164]	@ (8018e20 <__lshift+0xd4>)
 8018d7c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8018d80:	f000 fc76 	bl	8019670 <__assert_func>
 8018d84:	3101      	adds	r1, #1
 8018d86:	005b      	lsls	r3, r3, #1
 8018d88:	e7ee      	b.n	8018d68 <__lshift+0x1c>
 8018d8a:	2300      	movs	r3, #0
 8018d8c:	f100 0114 	add.w	r1, r0, #20
 8018d90:	f100 0210 	add.w	r2, r0, #16
 8018d94:	4618      	mov	r0, r3
 8018d96:	4553      	cmp	r3, sl
 8018d98:	db33      	blt.n	8018e02 <__lshift+0xb6>
 8018d9a:	6920      	ldr	r0, [r4, #16]
 8018d9c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8018da0:	f104 0314 	add.w	r3, r4, #20
 8018da4:	f019 091f 	ands.w	r9, r9, #31
 8018da8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8018dac:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8018db0:	d02b      	beq.n	8018e0a <__lshift+0xbe>
 8018db2:	f1c9 0e20 	rsb	lr, r9, #32
 8018db6:	468a      	mov	sl, r1
 8018db8:	2200      	movs	r2, #0
 8018dba:	6818      	ldr	r0, [r3, #0]
 8018dbc:	fa00 f009 	lsl.w	r0, r0, r9
 8018dc0:	4310      	orrs	r0, r2
 8018dc2:	f84a 0b04 	str.w	r0, [sl], #4
 8018dc6:	f853 2b04 	ldr.w	r2, [r3], #4
 8018dca:	459c      	cmp	ip, r3
 8018dcc:	fa22 f20e 	lsr.w	r2, r2, lr
 8018dd0:	d8f3      	bhi.n	8018dba <__lshift+0x6e>
 8018dd2:	ebac 0304 	sub.w	r3, ip, r4
 8018dd6:	3b15      	subs	r3, #21
 8018dd8:	f023 0303 	bic.w	r3, r3, #3
 8018ddc:	3304      	adds	r3, #4
 8018dde:	f104 0015 	add.w	r0, r4, #21
 8018de2:	4584      	cmp	ip, r0
 8018de4:	bf38      	it	cc
 8018de6:	2304      	movcc	r3, #4
 8018de8:	50ca      	str	r2, [r1, r3]
 8018dea:	b10a      	cbz	r2, 8018df0 <__lshift+0xa4>
 8018dec:	f108 0602 	add.w	r6, r8, #2
 8018df0:	3e01      	subs	r6, #1
 8018df2:	4638      	mov	r0, r7
 8018df4:	612e      	str	r6, [r5, #16]
 8018df6:	4621      	mov	r1, r4
 8018df8:	f7ff fd90 	bl	801891c <_Bfree>
 8018dfc:	4628      	mov	r0, r5
 8018dfe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018e02:	f842 0f04 	str.w	r0, [r2, #4]!
 8018e06:	3301      	adds	r3, #1
 8018e08:	e7c5      	b.n	8018d96 <__lshift+0x4a>
 8018e0a:	3904      	subs	r1, #4
 8018e0c:	f853 2b04 	ldr.w	r2, [r3], #4
 8018e10:	f841 2f04 	str.w	r2, [r1, #4]!
 8018e14:	459c      	cmp	ip, r3
 8018e16:	d8f9      	bhi.n	8018e0c <__lshift+0xc0>
 8018e18:	e7ea      	b.n	8018df0 <__lshift+0xa4>
 8018e1a:	bf00      	nop
 8018e1c:	0801b299 	.word	0x0801b299
 8018e20:	0801b30a 	.word	0x0801b30a

08018e24 <__mcmp>:
 8018e24:	690a      	ldr	r2, [r1, #16]
 8018e26:	4603      	mov	r3, r0
 8018e28:	6900      	ldr	r0, [r0, #16]
 8018e2a:	1a80      	subs	r0, r0, r2
 8018e2c:	b530      	push	{r4, r5, lr}
 8018e2e:	d10e      	bne.n	8018e4e <__mcmp+0x2a>
 8018e30:	3314      	adds	r3, #20
 8018e32:	3114      	adds	r1, #20
 8018e34:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8018e38:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8018e3c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8018e40:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8018e44:	4295      	cmp	r5, r2
 8018e46:	d003      	beq.n	8018e50 <__mcmp+0x2c>
 8018e48:	d205      	bcs.n	8018e56 <__mcmp+0x32>
 8018e4a:	f04f 30ff 	mov.w	r0, #4294967295
 8018e4e:	bd30      	pop	{r4, r5, pc}
 8018e50:	42a3      	cmp	r3, r4
 8018e52:	d3f3      	bcc.n	8018e3c <__mcmp+0x18>
 8018e54:	e7fb      	b.n	8018e4e <__mcmp+0x2a>
 8018e56:	2001      	movs	r0, #1
 8018e58:	e7f9      	b.n	8018e4e <__mcmp+0x2a>
	...

08018e5c <__mdiff>:
 8018e5c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e60:	4689      	mov	r9, r1
 8018e62:	4606      	mov	r6, r0
 8018e64:	4611      	mov	r1, r2
 8018e66:	4648      	mov	r0, r9
 8018e68:	4614      	mov	r4, r2
 8018e6a:	f7ff ffdb 	bl	8018e24 <__mcmp>
 8018e6e:	1e05      	subs	r5, r0, #0
 8018e70:	d112      	bne.n	8018e98 <__mdiff+0x3c>
 8018e72:	4629      	mov	r1, r5
 8018e74:	4630      	mov	r0, r6
 8018e76:	f7ff fd11 	bl	801889c <_Balloc>
 8018e7a:	4602      	mov	r2, r0
 8018e7c:	b928      	cbnz	r0, 8018e8a <__mdiff+0x2e>
 8018e7e:	4b3f      	ldr	r3, [pc, #252]	@ (8018f7c <__mdiff+0x120>)
 8018e80:	f240 2137 	movw	r1, #567	@ 0x237
 8018e84:	483e      	ldr	r0, [pc, #248]	@ (8018f80 <__mdiff+0x124>)
 8018e86:	f000 fbf3 	bl	8019670 <__assert_func>
 8018e8a:	2301      	movs	r3, #1
 8018e8c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8018e90:	4610      	mov	r0, r2
 8018e92:	b003      	add	sp, #12
 8018e94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018e98:	bfbc      	itt	lt
 8018e9a:	464b      	movlt	r3, r9
 8018e9c:	46a1      	movlt	r9, r4
 8018e9e:	4630      	mov	r0, r6
 8018ea0:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8018ea4:	bfba      	itte	lt
 8018ea6:	461c      	movlt	r4, r3
 8018ea8:	2501      	movlt	r5, #1
 8018eaa:	2500      	movge	r5, #0
 8018eac:	f7ff fcf6 	bl	801889c <_Balloc>
 8018eb0:	4602      	mov	r2, r0
 8018eb2:	b918      	cbnz	r0, 8018ebc <__mdiff+0x60>
 8018eb4:	4b31      	ldr	r3, [pc, #196]	@ (8018f7c <__mdiff+0x120>)
 8018eb6:	f240 2145 	movw	r1, #581	@ 0x245
 8018eba:	e7e3      	b.n	8018e84 <__mdiff+0x28>
 8018ebc:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8018ec0:	6926      	ldr	r6, [r4, #16]
 8018ec2:	60c5      	str	r5, [r0, #12]
 8018ec4:	f109 0310 	add.w	r3, r9, #16
 8018ec8:	f109 0514 	add.w	r5, r9, #20
 8018ecc:	f104 0e14 	add.w	lr, r4, #20
 8018ed0:	f100 0b14 	add.w	fp, r0, #20
 8018ed4:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8018ed8:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8018edc:	9301      	str	r3, [sp, #4]
 8018ede:	46d9      	mov	r9, fp
 8018ee0:	f04f 0c00 	mov.w	ip, #0
 8018ee4:	9b01      	ldr	r3, [sp, #4]
 8018ee6:	f85e 0b04 	ldr.w	r0, [lr], #4
 8018eea:	f853 af04 	ldr.w	sl, [r3, #4]!
 8018eee:	9301      	str	r3, [sp, #4]
 8018ef0:	fa1f f38a 	uxth.w	r3, sl
 8018ef4:	4619      	mov	r1, r3
 8018ef6:	b283      	uxth	r3, r0
 8018ef8:	1acb      	subs	r3, r1, r3
 8018efa:	0c00      	lsrs	r0, r0, #16
 8018efc:	4463      	add	r3, ip
 8018efe:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8018f02:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8018f06:	b29b      	uxth	r3, r3
 8018f08:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8018f0c:	4576      	cmp	r6, lr
 8018f0e:	f849 3b04 	str.w	r3, [r9], #4
 8018f12:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8018f16:	d8e5      	bhi.n	8018ee4 <__mdiff+0x88>
 8018f18:	1b33      	subs	r3, r6, r4
 8018f1a:	3b15      	subs	r3, #21
 8018f1c:	f023 0303 	bic.w	r3, r3, #3
 8018f20:	3415      	adds	r4, #21
 8018f22:	3304      	adds	r3, #4
 8018f24:	42a6      	cmp	r6, r4
 8018f26:	bf38      	it	cc
 8018f28:	2304      	movcc	r3, #4
 8018f2a:	441d      	add	r5, r3
 8018f2c:	445b      	add	r3, fp
 8018f2e:	461e      	mov	r6, r3
 8018f30:	462c      	mov	r4, r5
 8018f32:	4544      	cmp	r4, r8
 8018f34:	d30e      	bcc.n	8018f54 <__mdiff+0xf8>
 8018f36:	f108 0103 	add.w	r1, r8, #3
 8018f3a:	1b49      	subs	r1, r1, r5
 8018f3c:	f021 0103 	bic.w	r1, r1, #3
 8018f40:	3d03      	subs	r5, #3
 8018f42:	45a8      	cmp	r8, r5
 8018f44:	bf38      	it	cc
 8018f46:	2100      	movcc	r1, #0
 8018f48:	440b      	add	r3, r1
 8018f4a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8018f4e:	b191      	cbz	r1, 8018f76 <__mdiff+0x11a>
 8018f50:	6117      	str	r7, [r2, #16]
 8018f52:	e79d      	b.n	8018e90 <__mdiff+0x34>
 8018f54:	f854 1b04 	ldr.w	r1, [r4], #4
 8018f58:	46e6      	mov	lr, ip
 8018f5a:	0c08      	lsrs	r0, r1, #16
 8018f5c:	fa1c fc81 	uxtah	ip, ip, r1
 8018f60:	4471      	add	r1, lr
 8018f62:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8018f66:	b289      	uxth	r1, r1
 8018f68:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8018f6c:	f846 1b04 	str.w	r1, [r6], #4
 8018f70:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8018f74:	e7dd      	b.n	8018f32 <__mdiff+0xd6>
 8018f76:	3f01      	subs	r7, #1
 8018f78:	e7e7      	b.n	8018f4a <__mdiff+0xee>
 8018f7a:	bf00      	nop
 8018f7c:	0801b299 	.word	0x0801b299
 8018f80:	0801b30a 	.word	0x0801b30a

08018f84 <__ulp>:
 8018f84:	b082      	sub	sp, #8
 8018f86:	ed8d 0b00 	vstr	d0, [sp]
 8018f8a:	9a01      	ldr	r2, [sp, #4]
 8018f8c:	4b0f      	ldr	r3, [pc, #60]	@ (8018fcc <__ulp+0x48>)
 8018f8e:	4013      	ands	r3, r2
 8018f90:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8018f94:	2b00      	cmp	r3, #0
 8018f96:	dc08      	bgt.n	8018faa <__ulp+0x26>
 8018f98:	425b      	negs	r3, r3
 8018f9a:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 8018f9e:	ea4f 5223 	mov.w	r2, r3, asr #20
 8018fa2:	da04      	bge.n	8018fae <__ulp+0x2a>
 8018fa4:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8018fa8:	4113      	asrs	r3, r2
 8018faa:	2200      	movs	r2, #0
 8018fac:	e008      	b.n	8018fc0 <__ulp+0x3c>
 8018fae:	f1a2 0314 	sub.w	r3, r2, #20
 8018fb2:	2b1e      	cmp	r3, #30
 8018fb4:	bfda      	itte	le
 8018fb6:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 8018fba:	40da      	lsrle	r2, r3
 8018fbc:	2201      	movgt	r2, #1
 8018fbe:	2300      	movs	r3, #0
 8018fc0:	4619      	mov	r1, r3
 8018fc2:	4610      	mov	r0, r2
 8018fc4:	ec41 0b10 	vmov	d0, r0, r1
 8018fc8:	b002      	add	sp, #8
 8018fca:	4770      	bx	lr
 8018fcc:	7ff00000 	.word	0x7ff00000

08018fd0 <__b2d>:
 8018fd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018fd4:	6906      	ldr	r6, [r0, #16]
 8018fd6:	f100 0814 	add.w	r8, r0, #20
 8018fda:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8018fde:	1f37      	subs	r7, r6, #4
 8018fe0:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8018fe4:	4610      	mov	r0, r2
 8018fe6:	f7ff fd4b 	bl	8018a80 <__hi0bits>
 8018fea:	f1c0 0320 	rsb	r3, r0, #32
 8018fee:	280a      	cmp	r0, #10
 8018ff0:	600b      	str	r3, [r1, #0]
 8018ff2:	491b      	ldr	r1, [pc, #108]	@ (8019060 <__b2d+0x90>)
 8018ff4:	dc15      	bgt.n	8019022 <__b2d+0x52>
 8018ff6:	f1c0 0c0b 	rsb	ip, r0, #11
 8018ffa:	fa22 f30c 	lsr.w	r3, r2, ip
 8018ffe:	45b8      	cmp	r8, r7
 8019000:	ea43 0501 	orr.w	r5, r3, r1
 8019004:	bf34      	ite	cc
 8019006:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 801900a:	2300      	movcs	r3, #0
 801900c:	3015      	adds	r0, #21
 801900e:	fa02 f000 	lsl.w	r0, r2, r0
 8019012:	fa23 f30c 	lsr.w	r3, r3, ip
 8019016:	4303      	orrs	r3, r0
 8019018:	461c      	mov	r4, r3
 801901a:	ec45 4b10 	vmov	d0, r4, r5
 801901e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019022:	45b8      	cmp	r8, r7
 8019024:	bf3a      	itte	cc
 8019026:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 801902a:	f1a6 0708 	subcc.w	r7, r6, #8
 801902e:	2300      	movcs	r3, #0
 8019030:	380b      	subs	r0, #11
 8019032:	d012      	beq.n	801905a <__b2d+0x8a>
 8019034:	f1c0 0120 	rsb	r1, r0, #32
 8019038:	fa23 f401 	lsr.w	r4, r3, r1
 801903c:	4082      	lsls	r2, r0
 801903e:	4322      	orrs	r2, r4
 8019040:	4547      	cmp	r7, r8
 8019042:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 8019046:	bf8c      	ite	hi
 8019048:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 801904c:	2200      	movls	r2, #0
 801904e:	4083      	lsls	r3, r0
 8019050:	40ca      	lsrs	r2, r1
 8019052:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 8019056:	4313      	orrs	r3, r2
 8019058:	e7de      	b.n	8019018 <__b2d+0x48>
 801905a:	ea42 0501 	orr.w	r5, r2, r1
 801905e:	e7db      	b.n	8019018 <__b2d+0x48>
 8019060:	3ff00000 	.word	0x3ff00000

08019064 <__d2b>:
 8019064:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8019068:	460f      	mov	r7, r1
 801906a:	2101      	movs	r1, #1
 801906c:	ec59 8b10 	vmov	r8, r9, d0
 8019070:	4616      	mov	r6, r2
 8019072:	f7ff fc13 	bl	801889c <_Balloc>
 8019076:	4604      	mov	r4, r0
 8019078:	b930      	cbnz	r0, 8019088 <__d2b+0x24>
 801907a:	4602      	mov	r2, r0
 801907c:	4b23      	ldr	r3, [pc, #140]	@ (801910c <__d2b+0xa8>)
 801907e:	4824      	ldr	r0, [pc, #144]	@ (8019110 <__d2b+0xac>)
 8019080:	f240 310f 	movw	r1, #783	@ 0x30f
 8019084:	f000 faf4 	bl	8019670 <__assert_func>
 8019088:	f3c9 550a 	ubfx	r5, r9, #20, #11
 801908c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8019090:	b10d      	cbz	r5, 8019096 <__d2b+0x32>
 8019092:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8019096:	9301      	str	r3, [sp, #4]
 8019098:	f1b8 0300 	subs.w	r3, r8, #0
 801909c:	d023      	beq.n	80190e6 <__d2b+0x82>
 801909e:	4668      	mov	r0, sp
 80190a0:	9300      	str	r3, [sp, #0]
 80190a2:	f7ff fd0c 	bl	8018abe <__lo0bits>
 80190a6:	e9dd 1200 	ldrd	r1, r2, [sp]
 80190aa:	b1d0      	cbz	r0, 80190e2 <__d2b+0x7e>
 80190ac:	f1c0 0320 	rsb	r3, r0, #32
 80190b0:	fa02 f303 	lsl.w	r3, r2, r3
 80190b4:	430b      	orrs	r3, r1
 80190b6:	40c2      	lsrs	r2, r0
 80190b8:	6163      	str	r3, [r4, #20]
 80190ba:	9201      	str	r2, [sp, #4]
 80190bc:	9b01      	ldr	r3, [sp, #4]
 80190be:	61a3      	str	r3, [r4, #24]
 80190c0:	2b00      	cmp	r3, #0
 80190c2:	bf0c      	ite	eq
 80190c4:	2201      	moveq	r2, #1
 80190c6:	2202      	movne	r2, #2
 80190c8:	6122      	str	r2, [r4, #16]
 80190ca:	b1a5      	cbz	r5, 80190f6 <__d2b+0x92>
 80190cc:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80190d0:	4405      	add	r5, r0
 80190d2:	603d      	str	r5, [r7, #0]
 80190d4:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80190d8:	6030      	str	r0, [r6, #0]
 80190da:	4620      	mov	r0, r4
 80190dc:	b003      	add	sp, #12
 80190de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80190e2:	6161      	str	r1, [r4, #20]
 80190e4:	e7ea      	b.n	80190bc <__d2b+0x58>
 80190e6:	a801      	add	r0, sp, #4
 80190e8:	f7ff fce9 	bl	8018abe <__lo0bits>
 80190ec:	9b01      	ldr	r3, [sp, #4]
 80190ee:	6163      	str	r3, [r4, #20]
 80190f0:	3020      	adds	r0, #32
 80190f2:	2201      	movs	r2, #1
 80190f4:	e7e8      	b.n	80190c8 <__d2b+0x64>
 80190f6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80190fa:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80190fe:	6038      	str	r0, [r7, #0]
 8019100:	6918      	ldr	r0, [r3, #16]
 8019102:	f7ff fcbd 	bl	8018a80 <__hi0bits>
 8019106:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 801910a:	e7e5      	b.n	80190d8 <__d2b+0x74>
 801910c:	0801b299 	.word	0x0801b299
 8019110:	0801b30a 	.word	0x0801b30a

08019114 <__ratio>:
 8019114:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019118:	4688      	mov	r8, r1
 801911a:	4669      	mov	r1, sp
 801911c:	4681      	mov	r9, r0
 801911e:	f7ff ff57 	bl	8018fd0 <__b2d>
 8019122:	a901      	add	r1, sp, #4
 8019124:	4640      	mov	r0, r8
 8019126:	ec55 4b10 	vmov	r4, r5, d0
 801912a:	f7ff ff51 	bl	8018fd0 <__b2d>
 801912e:	f8d8 3010 	ldr.w	r3, [r8, #16]
 8019132:	f8d9 2010 	ldr.w	r2, [r9, #16]
 8019136:	1ad2      	subs	r2, r2, r3
 8019138:	e9dd 3100 	ldrd	r3, r1, [sp]
 801913c:	1a5b      	subs	r3, r3, r1
 801913e:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 8019142:	ec57 6b10 	vmov	r6, r7, d0
 8019146:	2b00      	cmp	r3, #0
 8019148:	bfd6      	itet	le
 801914a:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 801914e:	462a      	movgt	r2, r5
 8019150:	463a      	movle	r2, r7
 8019152:	46ab      	mov	fp, r5
 8019154:	46a2      	mov	sl, r4
 8019156:	bfce      	itee	gt
 8019158:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 801915c:	eb02 5303 	addle.w	r3, r2, r3, lsl #20
 8019160:	ee00 3a90 	vmovle	s1, r3
 8019164:	ec4b ab17 	vmov	d7, sl, fp
 8019168:	ee87 0b00 	vdiv.f64	d0, d7, d0
 801916c:	b003      	add	sp, #12
 801916e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019172 <__copybits>:
 8019172:	3901      	subs	r1, #1
 8019174:	b570      	push	{r4, r5, r6, lr}
 8019176:	1149      	asrs	r1, r1, #5
 8019178:	6914      	ldr	r4, [r2, #16]
 801917a:	3101      	adds	r1, #1
 801917c:	f102 0314 	add.w	r3, r2, #20
 8019180:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8019184:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8019188:	1f05      	subs	r5, r0, #4
 801918a:	42a3      	cmp	r3, r4
 801918c:	d30c      	bcc.n	80191a8 <__copybits+0x36>
 801918e:	1aa3      	subs	r3, r4, r2
 8019190:	3b11      	subs	r3, #17
 8019192:	f023 0303 	bic.w	r3, r3, #3
 8019196:	3211      	adds	r2, #17
 8019198:	42a2      	cmp	r2, r4
 801919a:	bf88      	it	hi
 801919c:	2300      	movhi	r3, #0
 801919e:	4418      	add	r0, r3
 80191a0:	2300      	movs	r3, #0
 80191a2:	4288      	cmp	r0, r1
 80191a4:	d305      	bcc.n	80191b2 <__copybits+0x40>
 80191a6:	bd70      	pop	{r4, r5, r6, pc}
 80191a8:	f853 6b04 	ldr.w	r6, [r3], #4
 80191ac:	f845 6f04 	str.w	r6, [r5, #4]!
 80191b0:	e7eb      	b.n	801918a <__copybits+0x18>
 80191b2:	f840 3b04 	str.w	r3, [r0], #4
 80191b6:	e7f4      	b.n	80191a2 <__copybits+0x30>

080191b8 <__any_on>:
 80191b8:	f100 0214 	add.w	r2, r0, #20
 80191bc:	6900      	ldr	r0, [r0, #16]
 80191be:	114b      	asrs	r3, r1, #5
 80191c0:	4298      	cmp	r0, r3
 80191c2:	b510      	push	{r4, lr}
 80191c4:	db11      	blt.n	80191ea <__any_on+0x32>
 80191c6:	dd0a      	ble.n	80191de <__any_on+0x26>
 80191c8:	f011 011f 	ands.w	r1, r1, #31
 80191cc:	d007      	beq.n	80191de <__any_on+0x26>
 80191ce:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80191d2:	fa24 f001 	lsr.w	r0, r4, r1
 80191d6:	fa00 f101 	lsl.w	r1, r0, r1
 80191da:	428c      	cmp	r4, r1
 80191dc:	d10b      	bne.n	80191f6 <__any_on+0x3e>
 80191de:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80191e2:	4293      	cmp	r3, r2
 80191e4:	d803      	bhi.n	80191ee <__any_on+0x36>
 80191e6:	2000      	movs	r0, #0
 80191e8:	bd10      	pop	{r4, pc}
 80191ea:	4603      	mov	r3, r0
 80191ec:	e7f7      	b.n	80191de <__any_on+0x26>
 80191ee:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80191f2:	2900      	cmp	r1, #0
 80191f4:	d0f5      	beq.n	80191e2 <__any_on+0x2a>
 80191f6:	2001      	movs	r0, #1
 80191f8:	e7f6      	b.n	80191e8 <__any_on+0x30>

080191fa <__ascii_wctomb>:
 80191fa:	4603      	mov	r3, r0
 80191fc:	4608      	mov	r0, r1
 80191fe:	b141      	cbz	r1, 8019212 <__ascii_wctomb+0x18>
 8019200:	2aff      	cmp	r2, #255	@ 0xff
 8019202:	d904      	bls.n	801920e <__ascii_wctomb+0x14>
 8019204:	228a      	movs	r2, #138	@ 0x8a
 8019206:	601a      	str	r2, [r3, #0]
 8019208:	f04f 30ff 	mov.w	r0, #4294967295
 801920c:	4770      	bx	lr
 801920e:	700a      	strb	r2, [r1, #0]
 8019210:	2001      	movs	r0, #1
 8019212:	4770      	bx	lr

08019214 <__ssputs_r>:
 8019214:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019218:	688e      	ldr	r6, [r1, #8]
 801921a:	461f      	mov	r7, r3
 801921c:	42be      	cmp	r6, r7
 801921e:	680b      	ldr	r3, [r1, #0]
 8019220:	4682      	mov	sl, r0
 8019222:	460c      	mov	r4, r1
 8019224:	4690      	mov	r8, r2
 8019226:	d82d      	bhi.n	8019284 <__ssputs_r+0x70>
 8019228:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 801922c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8019230:	d026      	beq.n	8019280 <__ssputs_r+0x6c>
 8019232:	6965      	ldr	r5, [r4, #20]
 8019234:	6909      	ldr	r1, [r1, #16]
 8019236:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801923a:	eba3 0901 	sub.w	r9, r3, r1
 801923e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8019242:	1c7b      	adds	r3, r7, #1
 8019244:	444b      	add	r3, r9
 8019246:	106d      	asrs	r5, r5, #1
 8019248:	429d      	cmp	r5, r3
 801924a:	bf38      	it	cc
 801924c:	461d      	movcc	r5, r3
 801924e:	0553      	lsls	r3, r2, #21
 8019250:	d527      	bpl.n	80192a2 <__ssputs_r+0x8e>
 8019252:	4629      	mov	r1, r5
 8019254:	f7ff fa84 	bl	8018760 <_malloc_r>
 8019258:	4606      	mov	r6, r0
 801925a:	b360      	cbz	r0, 80192b6 <__ssputs_r+0xa2>
 801925c:	6921      	ldr	r1, [r4, #16]
 801925e:	464a      	mov	r2, r9
 8019260:	f7fe f8d9 	bl	8017416 <memcpy>
 8019264:	89a3      	ldrh	r3, [r4, #12]
 8019266:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 801926a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801926e:	81a3      	strh	r3, [r4, #12]
 8019270:	6126      	str	r6, [r4, #16]
 8019272:	6165      	str	r5, [r4, #20]
 8019274:	444e      	add	r6, r9
 8019276:	eba5 0509 	sub.w	r5, r5, r9
 801927a:	6026      	str	r6, [r4, #0]
 801927c:	60a5      	str	r5, [r4, #8]
 801927e:	463e      	mov	r6, r7
 8019280:	42be      	cmp	r6, r7
 8019282:	d900      	bls.n	8019286 <__ssputs_r+0x72>
 8019284:	463e      	mov	r6, r7
 8019286:	6820      	ldr	r0, [r4, #0]
 8019288:	4632      	mov	r2, r6
 801928a:	4641      	mov	r1, r8
 801928c:	f000 f9c6 	bl	801961c <memmove>
 8019290:	68a3      	ldr	r3, [r4, #8]
 8019292:	1b9b      	subs	r3, r3, r6
 8019294:	60a3      	str	r3, [r4, #8]
 8019296:	6823      	ldr	r3, [r4, #0]
 8019298:	4433      	add	r3, r6
 801929a:	6023      	str	r3, [r4, #0]
 801929c:	2000      	movs	r0, #0
 801929e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80192a2:	462a      	mov	r2, r5
 80192a4:	f000 fa16 	bl	80196d4 <_realloc_r>
 80192a8:	4606      	mov	r6, r0
 80192aa:	2800      	cmp	r0, #0
 80192ac:	d1e0      	bne.n	8019270 <__ssputs_r+0x5c>
 80192ae:	6921      	ldr	r1, [r4, #16]
 80192b0:	4650      	mov	r0, sl
 80192b2:	f7fe fea7 	bl	8018004 <_free_r>
 80192b6:	230c      	movs	r3, #12
 80192b8:	f8ca 3000 	str.w	r3, [sl]
 80192bc:	89a3      	ldrh	r3, [r4, #12]
 80192be:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80192c2:	81a3      	strh	r3, [r4, #12]
 80192c4:	f04f 30ff 	mov.w	r0, #4294967295
 80192c8:	e7e9      	b.n	801929e <__ssputs_r+0x8a>
	...

080192cc <_svfiprintf_r>:
 80192cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192d0:	4698      	mov	r8, r3
 80192d2:	898b      	ldrh	r3, [r1, #12]
 80192d4:	061b      	lsls	r3, r3, #24
 80192d6:	b09d      	sub	sp, #116	@ 0x74
 80192d8:	4607      	mov	r7, r0
 80192da:	460d      	mov	r5, r1
 80192dc:	4614      	mov	r4, r2
 80192de:	d510      	bpl.n	8019302 <_svfiprintf_r+0x36>
 80192e0:	690b      	ldr	r3, [r1, #16]
 80192e2:	b973      	cbnz	r3, 8019302 <_svfiprintf_r+0x36>
 80192e4:	2140      	movs	r1, #64	@ 0x40
 80192e6:	f7ff fa3b 	bl	8018760 <_malloc_r>
 80192ea:	6028      	str	r0, [r5, #0]
 80192ec:	6128      	str	r0, [r5, #16]
 80192ee:	b930      	cbnz	r0, 80192fe <_svfiprintf_r+0x32>
 80192f0:	230c      	movs	r3, #12
 80192f2:	603b      	str	r3, [r7, #0]
 80192f4:	f04f 30ff 	mov.w	r0, #4294967295
 80192f8:	b01d      	add	sp, #116	@ 0x74
 80192fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80192fe:	2340      	movs	r3, #64	@ 0x40
 8019300:	616b      	str	r3, [r5, #20]
 8019302:	2300      	movs	r3, #0
 8019304:	9309      	str	r3, [sp, #36]	@ 0x24
 8019306:	2320      	movs	r3, #32
 8019308:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 801930c:	f8cd 800c 	str.w	r8, [sp, #12]
 8019310:	2330      	movs	r3, #48	@ 0x30
 8019312:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80194b0 <_svfiprintf_r+0x1e4>
 8019316:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 801931a:	f04f 0901 	mov.w	r9, #1
 801931e:	4623      	mov	r3, r4
 8019320:	469a      	mov	sl, r3
 8019322:	f813 2b01 	ldrb.w	r2, [r3], #1
 8019326:	b10a      	cbz	r2, 801932c <_svfiprintf_r+0x60>
 8019328:	2a25      	cmp	r2, #37	@ 0x25
 801932a:	d1f9      	bne.n	8019320 <_svfiprintf_r+0x54>
 801932c:	ebba 0b04 	subs.w	fp, sl, r4
 8019330:	d00b      	beq.n	801934a <_svfiprintf_r+0x7e>
 8019332:	465b      	mov	r3, fp
 8019334:	4622      	mov	r2, r4
 8019336:	4629      	mov	r1, r5
 8019338:	4638      	mov	r0, r7
 801933a:	f7ff ff6b 	bl	8019214 <__ssputs_r>
 801933e:	3001      	adds	r0, #1
 8019340:	f000 80a7 	beq.w	8019492 <_svfiprintf_r+0x1c6>
 8019344:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8019346:	445a      	add	r2, fp
 8019348:	9209      	str	r2, [sp, #36]	@ 0x24
 801934a:	f89a 3000 	ldrb.w	r3, [sl]
 801934e:	2b00      	cmp	r3, #0
 8019350:	f000 809f 	beq.w	8019492 <_svfiprintf_r+0x1c6>
 8019354:	2300      	movs	r3, #0
 8019356:	f04f 32ff 	mov.w	r2, #4294967295
 801935a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801935e:	f10a 0a01 	add.w	sl, sl, #1
 8019362:	9304      	str	r3, [sp, #16]
 8019364:	9307      	str	r3, [sp, #28]
 8019366:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 801936a:	931a      	str	r3, [sp, #104]	@ 0x68
 801936c:	4654      	mov	r4, sl
 801936e:	2205      	movs	r2, #5
 8019370:	f814 1b01 	ldrb.w	r1, [r4], #1
 8019374:	484e      	ldr	r0, [pc, #312]	@ (80194b0 <_svfiprintf_r+0x1e4>)
 8019376:	f7e6 ffdb 	bl	8000330 <memchr>
 801937a:	9a04      	ldr	r2, [sp, #16]
 801937c:	b9d8      	cbnz	r0, 80193b6 <_svfiprintf_r+0xea>
 801937e:	06d0      	lsls	r0, r2, #27
 8019380:	bf44      	itt	mi
 8019382:	2320      	movmi	r3, #32
 8019384:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8019388:	0711      	lsls	r1, r2, #28
 801938a:	bf44      	itt	mi
 801938c:	232b      	movmi	r3, #43	@ 0x2b
 801938e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8019392:	f89a 3000 	ldrb.w	r3, [sl]
 8019396:	2b2a      	cmp	r3, #42	@ 0x2a
 8019398:	d015      	beq.n	80193c6 <_svfiprintf_r+0xfa>
 801939a:	9a07      	ldr	r2, [sp, #28]
 801939c:	4654      	mov	r4, sl
 801939e:	2000      	movs	r0, #0
 80193a0:	f04f 0c0a 	mov.w	ip, #10
 80193a4:	4621      	mov	r1, r4
 80193a6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80193aa:	3b30      	subs	r3, #48	@ 0x30
 80193ac:	2b09      	cmp	r3, #9
 80193ae:	d94b      	bls.n	8019448 <_svfiprintf_r+0x17c>
 80193b0:	b1b0      	cbz	r0, 80193e0 <_svfiprintf_r+0x114>
 80193b2:	9207      	str	r2, [sp, #28]
 80193b4:	e014      	b.n	80193e0 <_svfiprintf_r+0x114>
 80193b6:	eba0 0308 	sub.w	r3, r0, r8
 80193ba:	fa09 f303 	lsl.w	r3, r9, r3
 80193be:	4313      	orrs	r3, r2
 80193c0:	9304      	str	r3, [sp, #16]
 80193c2:	46a2      	mov	sl, r4
 80193c4:	e7d2      	b.n	801936c <_svfiprintf_r+0xa0>
 80193c6:	9b03      	ldr	r3, [sp, #12]
 80193c8:	1d19      	adds	r1, r3, #4
 80193ca:	681b      	ldr	r3, [r3, #0]
 80193cc:	9103      	str	r1, [sp, #12]
 80193ce:	2b00      	cmp	r3, #0
 80193d0:	bfbb      	ittet	lt
 80193d2:	425b      	neglt	r3, r3
 80193d4:	f042 0202 	orrlt.w	r2, r2, #2
 80193d8:	9307      	strge	r3, [sp, #28]
 80193da:	9307      	strlt	r3, [sp, #28]
 80193dc:	bfb8      	it	lt
 80193de:	9204      	strlt	r2, [sp, #16]
 80193e0:	7823      	ldrb	r3, [r4, #0]
 80193e2:	2b2e      	cmp	r3, #46	@ 0x2e
 80193e4:	d10a      	bne.n	80193fc <_svfiprintf_r+0x130>
 80193e6:	7863      	ldrb	r3, [r4, #1]
 80193e8:	2b2a      	cmp	r3, #42	@ 0x2a
 80193ea:	d132      	bne.n	8019452 <_svfiprintf_r+0x186>
 80193ec:	9b03      	ldr	r3, [sp, #12]
 80193ee:	1d1a      	adds	r2, r3, #4
 80193f0:	681b      	ldr	r3, [r3, #0]
 80193f2:	9203      	str	r2, [sp, #12]
 80193f4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80193f8:	3402      	adds	r4, #2
 80193fa:	9305      	str	r3, [sp, #20]
 80193fc:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 80194c0 <_svfiprintf_r+0x1f4>
 8019400:	7821      	ldrb	r1, [r4, #0]
 8019402:	2203      	movs	r2, #3
 8019404:	4650      	mov	r0, sl
 8019406:	f7e6 ff93 	bl	8000330 <memchr>
 801940a:	b138      	cbz	r0, 801941c <_svfiprintf_r+0x150>
 801940c:	9b04      	ldr	r3, [sp, #16]
 801940e:	eba0 000a 	sub.w	r0, r0, sl
 8019412:	2240      	movs	r2, #64	@ 0x40
 8019414:	4082      	lsls	r2, r0
 8019416:	4313      	orrs	r3, r2
 8019418:	3401      	adds	r4, #1
 801941a:	9304      	str	r3, [sp, #16]
 801941c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8019420:	4824      	ldr	r0, [pc, #144]	@ (80194b4 <_svfiprintf_r+0x1e8>)
 8019422:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8019426:	2206      	movs	r2, #6
 8019428:	f7e6 ff82 	bl	8000330 <memchr>
 801942c:	2800      	cmp	r0, #0
 801942e:	d036      	beq.n	801949e <_svfiprintf_r+0x1d2>
 8019430:	4b21      	ldr	r3, [pc, #132]	@ (80194b8 <_svfiprintf_r+0x1ec>)
 8019432:	bb1b      	cbnz	r3, 801947c <_svfiprintf_r+0x1b0>
 8019434:	9b03      	ldr	r3, [sp, #12]
 8019436:	3307      	adds	r3, #7
 8019438:	f023 0307 	bic.w	r3, r3, #7
 801943c:	3308      	adds	r3, #8
 801943e:	9303      	str	r3, [sp, #12]
 8019440:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019442:	4433      	add	r3, r6
 8019444:	9309      	str	r3, [sp, #36]	@ 0x24
 8019446:	e76a      	b.n	801931e <_svfiprintf_r+0x52>
 8019448:	fb0c 3202 	mla	r2, ip, r2, r3
 801944c:	460c      	mov	r4, r1
 801944e:	2001      	movs	r0, #1
 8019450:	e7a8      	b.n	80193a4 <_svfiprintf_r+0xd8>
 8019452:	2300      	movs	r3, #0
 8019454:	3401      	adds	r4, #1
 8019456:	9305      	str	r3, [sp, #20]
 8019458:	4619      	mov	r1, r3
 801945a:	f04f 0c0a 	mov.w	ip, #10
 801945e:	4620      	mov	r0, r4
 8019460:	f810 2b01 	ldrb.w	r2, [r0], #1
 8019464:	3a30      	subs	r2, #48	@ 0x30
 8019466:	2a09      	cmp	r2, #9
 8019468:	d903      	bls.n	8019472 <_svfiprintf_r+0x1a6>
 801946a:	2b00      	cmp	r3, #0
 801946c:	d0c6      	beq.n	80193fc <_svfiprintf_r+0x130>
 801946e:	9105      	str	r1, [sp, #20]
 8019470:	e7c4      	b.n	80193fc <_svfiprintf_r+0x130>
 8019472:	fb0c 2101 	mla	r1, ip, r1, r2
 8019476:	4604      	mov	r4, r0
 8019478:	2301      	movs	r3, #1
 801947a:	e7f0      	b.n	801945e <_svfiprintf_r+0x192>
 801947c:	ab03      	add	r3, sp, #12
 801947e:	9300      	str	r3, [sp, #0]
 8019480:	462a      	mov	r2, r5
 8019482:	4b0e      	ldr	r3, [pc, #56]	@ (80194bc <_svfiprintf_r+0x1f0>)
 8019484:	a904      	add	r1, sp, #16
 8019486:	4638      	mov	r0, r7
 8019488:	f7fd fa5a 	bl	8016940 <_printf_float>
 801948c:	1c42      	adds	r2, r0, #1
 801948e:	4606      	mov	r6, r0
 8019490:	d1d6      	bne.n	8019440 <_svfiprintf_r+0x174>
 8019492:	89ab      	ldrh	r3, [r5, #12]
 8019494:	065b      	lsls	r3, r3, #25
 8019496:	f53f af2d 	bmi.w	80192f4 <_svfiprintf_r+0x28>
 801949a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801949c:	e72c      	b.n	80192f8 <_svfiprintf_r+0x2c>
 801949e:	ab03      	add	r3, sp, #12
 80194a0:	9300      	str	r3, [sp, #0]
 80194a2:	462a      	mov	r2, r5
 80194a4:	4b05      	ldr	r3, [pc, #20]	@ (80194bc <_svfiprintf_r+0x1f0>)
 80194a6:	a904      	add	r1, sp, #16
 80194a8:	4638      	mov	r0, r7
 80194aa:	f7fd fcd1 	bl	8016e50 <_printf_i>
 80194ae:	e7ed      	b.n	801948c <_svfiprintf_r+0x1c0>
 80194b0:	0801b460 	.word	0x0801b460
 80194b4:	0801b46a 	.word	0x0801b46a
 80194b8:	08016941 	.word	0x08016941
 80194bc:	08019215 	.word	0x08019215
 80194c0:	0801b466 	.word	0x0801b466

080194c4 <__sflush_r>:
 80194c4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80194c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80194cc:	0716      	lsls	r6, r2, #28
 80194ce:	4605      	mov	r5, r0
 80194d0:	460c      	mov	r4, r1
 80194d2:	d454      	bmi.n	801957e <__sflush_r+0xba>
 80194d4:	684b      	ldr	r3, [r1, #4]
 80194d6:	2b00      	cmp	r3, #0
 80194d8:	dc02      	bgt.n	80194e0 <__sflush_r+0x1c>
 80194da:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80194dc:	2b00      	cmp	r3, #0
 80194de:	dd48      	ble.n	8019572 <__sflush_r+0xae>
 80194e0:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80194e2:	2e00      	cmp	r6, #0
 80194e4:	d045      	beq.n	8019572 <__sflush_r+0xae>
 80194e6:	2300      	movs	r3, #0
 80194e8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80194ec:	682f      	ldr	r7, [r5, #0]
 80194ee:	6a21      	ldr	r1, [r4, #32]
 80194f0:	602b      	str	r3, [r5, #0]
 80194f2:	d030      	beq.n	8019556 <__sflush_r+0x92>
 80194f4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80194f6:	89a3      	ldrh	r3, [r4, #12]
 80194f8:	0759      	lsls	r1, r3, #29
 80194fa:	d505      	bpl.n	8019508 <__sflush_r+0x44>
 80194fc:	6863      	ldr	r3, [r4, #4]
 80194fe:	1ad2      	subs	r2, r2, r3
 8019500:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8019502:	b10b      	cbz	r3, 8019508 <__sflush_r+0x44>
 8019504:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8019506:	1ad2      	subs	r2, r2, r3
 8019508:	2300      	movs	r3, #0
 801950a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 801950c:	6a21      	ldr	r1, [r4, #32]
 801950e:	4628      	mov	r0, r5
 8019510:	47b0      	blx	r6
 8019512:	1c43      	adds	r3, r0, #1
 8019514:	89a3      	ldrh	r3, [r4, #12]
 8019516:	d106      	bne.n	8019526 <__sflush_r+0x62>
 8019518:	6829      	ldr	r1, [r5, #0]
 801951a:	291d      	cmp	r1, #29
 801951c:	d82b      	bhi.n	8019576 <__sflush_r+0xb2>
 801951e:	4a2a      	ldr	r2, [pc, #168]	@ (80195c8 <__sflush_r+0x104>)
 8019520:	410a      	asrs	r2, r1
 8019522:	07d6      	lsls	r6, r2, #31
 8019524:	d427      	bmi.n	8019576 <__sflush_r+0xb2>
 8019526:	2200      	movs	r2, #0
 8019528:	6062      	str	r2, [r4, #4]
 801952a:	04d9      	lsls	r1, r3, #19
 801952c:	6922      	ldr	r2, [r4, #16]
 801952e:	6022      	str	r2, [r4, #0]
 8019530:	d504      	bpl.n	801953c <__sflush_r+0x78>
 8019532:	1c42      	adds	r2, r0, #1
 8019534:	d101      	bne.n	801953a <__sflush_r+0x76>
 8019536:	682b      	ldr	r3, [r5, #0]
 8019538:	b903      	cbnz	r3, 801953c <__sflush_r+0x78>
 801953a:	6560      	str	r0, [r4, #84]	@ 0x54
 801953c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801953e:	602f      	str	r7, [r5, #0]
 8019540:	b1b9      	cbz	r1, 8019572 <__sflush_r+0xae>
 8019542:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8019546:	4299      	cmp	r1, r3
 8019548:	d002      	beq.n	8019550 <__sflush_r+0x8c>
 801954a:	4628      	mov	r0, r5
 801954c:	f7fe fd5a 	bl	8018004 <_free_r>
 8019550:	2300      	movs	r3, #0
 8019552:	6363      	str	r3, [r4, #52]	@ 0x34
 8019554:	e00d      	b.n	8019572 <__sflush_r+0xae>
 8019556:	2301      	movs	r3, #1
 8019558:	4628      	mov	r0, r5
 801955a:	47b0      	blx	r6
 801955c:	4602      	mov	r2, r0
 801955e:	1c50      	adds	r0, r2, #1
 8019560:	d1c9      	bne.n	80194f6 <__sflush_r+0x32>
 8019562:	682b      	ldr	r3, [r5, #0]
 8019564:	2b00      	cmp	r3, #0
 8019566:	d0c6      	beq.n	80194f6 <__sflush_r+0x32>
 8019568:	2b1d      	cmp	r3, #29
 801956a:	d001      	beq.n	8019570 <__sflush_r+0xac>
 801956c:	2b16      	cmp	r3, #22
 801956e:	d11e      	bne.n	80195ae <__sflush_r+0xea>
 8019570:	602f      	str	r7, [r5, #0]
 8019572:	2000      	movs	r0, #0
 8019574:	e022      	b.n	80195bc <__sflush_r+0xf8>
 8019576:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801957a:	b21b      	sxth	r3, r3
 801957c:	e01b      	b.n	80195b6 <__sflush_r+0xf2>
 801957e:	690f      	ldr	r7, [r1, #16]
 8019580:	2f00      	cmp	r7, #0
 8019582:	d0f6      	beq.n	8019572 <__sflush_r+0xae>
 8019584:	0793      	lsls	r3, r2, #30
 8019586:	680e      	ldr	r6, [r1, #0]
 8019588:	bf08      	it	eq
 801958a:	694b      	ldreq	r3, [r1, #20]
 801958c:	600f      	str	r7, [r1, #0]
 801958e:	bf18      	it	ne
 8019590:	2300      	movne	r3, #0
 8019592:	eba6 0807 	sub.w	r8, r6, r7
 8019596:	608b      	str	r3, [r1, #8]
 8019598:	f1b8 0f00 	cmp.w	r8, #0
 801959c:	dde9      	ble.n	8019572 <__sflush_r+0xae>
 801959e:	6a21      	ldr	r1, [r4, #32]
 80195a0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80195a2:	4643      	mov	r3, r8
 80195a4:	463a      	mov	r2, r7
 80195a6:	4628      	mov	r0, r5
 80195a8:	47b0      	blx	r6
 80195aa:	2800      	cmp	r0, #0
 80195ac:	dc08      	bgt.n	80195c0 <__sflush_r+0xfc>
 80195ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80195b2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80195b6:	81a3      	strh	r3, [r4, #12]
 80195b8:	f04f 30ff 	mov.w	r0, #4294967295
 80195bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80195c0:	4407      	add	r7, r0
 80195c2:	eba8 0800 	sub.w	r8, r8, r0
 80195c6:	e7e7      	b.n	8019598 <__sflush_r+0xd4>
 80195c8:	dfbffffe 	.word	0xdfbffffe

080195cc <_fflush_r>:
 80195cc:	b538      	push	{r3, r4, r5, lr}
 80195ce:	690b      	ldr	r3, [r1, #16]
 80195d0:	4605      	mov	r5, r0
 80195d2:	460c      	mov	r4, r1
 80195d4:	b913      	cbnz	r3, 80195dc <_fflush_r+0x10>
 80195d6:	2500      	movs	r5, #0
 80195d8:	4628      	mov	r0, r5
 80195da:	bd38      	pop	{r3, r4, r5, pc}
 80195dc:	b118      	cbz	r0, 80195e6 <_fflush_r+0x1a>
 80195de:	6a03      	ldr	r3, [r0, #32]
 80195e0:	b90b      	cbnz	r3, 80195e6 <_fflush_r+0x1a>
 80195e2:	f7fd fde1 	bl	80171a8 <__sinit>
 80195e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80195ea:	2b00      	cmp	r3, #0
 80195ec:	d0f3      	beq.n	80195d6 <_fflush_r+0xa>
 80195ee:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80195f0:	07d0      	lsls	r0, r2, #31
 80195f2:	d404      	bmi.n	80195fe <_fflush_r+0x32>
 80195f4:	0599      	lsls	r1, r3, #22
 80195f6:	d402      	bmi.n	80195fe <_fflush_r+0x32>
 80195f8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80195fa:	f7fd ff0a 	bl	8017412 <__retarget_lock_acquire_recursive>
 80195fe:	4628      	mov	r0, r5
 8019600:	4621      	mov	r1, r4
 8019602:	f7ff ff5f 	bl	80194c4 <__sflush_r>
 8019606:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8019608:	07da      	lsls	r2, r3, #31
 801960a:	4605      	mov	r5, r0
 801960c:	d4e4      	bmi.n	80195d8 <_fflush_r+0xc>
 801960e:	89a3      	ldrh	r3, [r4, #12]
 8019610:	059b      	lsls	r3, r3, #22
 8019612:	d4e1      	bmi.n	80195d8 <_fflush_r+0xc>
 8019614:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8019616:	f7fd fefd 	bl	8017414 <__retarget_lock_release_recursive>
 801961a:	e7dd      	b.n	80195d8 <_fflush_r+0xc>

0801961c <memmove>:
 801961c:	4288      	cmp	r0, r1
 801961e:	b510      	push	{r4, lr}
 8019620:	eb01 0402 	add.w	r4, r1, r2
 8019624:	d902      	bls.n	801962c <memmove+0x10>
 8019626:	4284      	cmp	r4, r0
 8019628:	4623      	mov	r3, r4
 801962a:	d807      	bhi.n	801963c <memmove+0x20>
 801962c:	1e43      	subs	r3, r0, #1
 801962e:	42a1      	cmp	r1, r4
 8019630:	d008      	beq.n	8019644 <memmove+0x28>
 8019632:	f811 2b01 	ldrb.w	r2, [r1], #1
 8019636:	f803 2f01 	strb.w	r2, [r3, #1]!
 801963a:	e7f8      	b.n	801962e <memmove+0x12>
 801963c:	4402      	add	r2, r0
 801963e:	4601      	mov	r1, r0
 8019640:	428a      	cmp	r2, r1
 8019642:	d100      	bne.n	8019646 <memmove+0x2a>
 8019644:	bd10      	pop	{r4, pc}
 8019646:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801964a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 801964e:	e7f7      	b.n	8019640 <memmove+0x24>

08019650 <_sbrk_r>:
 8019650:	b538      	push	{r3, r4, r5, lr}
 8019652:	4d06      	ldr	r5, [pc, #24]	@ (801966c <_sbrk_r+0x1c>)
 8019654:	2300      	movs	r3, #0
 8019656:	4604      	mov	r4, r0
 8019658:	4608      	mov	r0, r1
 801965a:	602b      	str	r3, [r5, #0]
 801965c:	f7e8 ff68 	bl	8002530 <_sbrk>
 8019660:	1c43      	adds	r3, r0, #1
 8019662:	d102      	bne.n	801966a <_sbrk_r+0x1a>
 8019664:	682b      	ldr	r3, [r5, #0]
 8019666:	b103      	cbz	r3, 801966a <_sbrk_r+0x1a>
 8019668:	6023      	str	r3, [r4, #0]
 801966a:	bd38      	pop	{r3, r4, r5, pc}
 801966c:	24006264 	.word	0x24006264

08019670 <__assert_func>:
 8019670:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8019672:	4614      	mov	r4, r2
 8019674:	461a      	mov	r2, r3
 8019676:	4b09      	ldr	r3, [pc, #36]	@ (801969c <__assert_func+0x2c>)
 8019678:	681b      	ldr	r3, [r3, #0]
 801967a:	4605      	mov	r5, r0
 801967c:	68d8      	ldr	r0, [r3, #12]
 801967e:	b954      	cbnz	r4, 8019696 <__assert_func+0x26>
 8019680:	4b07      	ldr	r3, [pc, #28]	@ (80196a0 <__assert_func+0x30>)
 8019682:	461c      	mov	r4, r3
 8019684:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8019688:	9100      	str	r1, [sp, #0]
 801968a:	462b      	mov	r3, r5
 801968c:	4905      	ldr	r1, [pc, #20]	@ (80196a4 <__assert_func+0x34>)
 801968e:	f000 f84f 	bl	8019730 <fiprintf>
 8019692:	f000 f85f 	bl	8019754 <abort>
 8019696:	4b04      	ldr	r3, [pc, #16]	@ (80196a8 <__assert_func+0x38>)
 8019698:	e7f4      	b.n	8019684 <__assert_func+0x14>
 801969a:	bf00      	nop
 801969c:	2400027c 	.word	0x2400027c
 80196a0:	0801b4ac 	.word	0x0801b4ac
 80196a4:	0801b47e 	.word	0x0801b47e
 80196a8:	0801b471 	.word	0x0801b471

080196ac <_calloc_r>:
 80196ac:	b570      	push	{r4, r5, r6, lr}
 80196ae:	fba1 5402 	umull	r5, r4, r1, r2
 80196b2:	b93c      	cbnz	r4, 80196c4 <_calloc_r+0x18>
 80196b4:	4629      	mov	r1, r5
 80196b6:	f7ff f853 	bl	8018760 <_malloc_r>
 80196ba:	4606      	mov	r6, r0
 80196bc:	b928      	cbnz	r0, 80196ca <_calloc_r+0x1e>
 80196be:	2600      	movs	r6, #0
 80196c0:	4630      	mov	r0, r6
 80196c2:	bd70      	pop	{r4, r5, r6, pc}
 80196c4:	220c      	movs	r2, #12
 80196c6:	6002      	str	r2, [r0, #0]
 80196c8:	e7f9      	b.n	80196be <_calloc_r+0x12>
 80196ca:	462a      	mov	r2, r5
 80196cc:	4621      	mov	r1, r4
 80196ce:	f7fd fe04 	bl	80172da <memset>
 80196d2:	e7f5      	b.n	80196c0 <_calloc_r+0x14>

080196d4 <_realloc_r>:
 80196d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80196d8:	4680      	mov	r8, r0
 80196da:	4615      	mov	r5, r2
 80196dc:	460c      	mov	r4, r1
 80196de:	b921      	cbnz	r1, 80196ea <_realloc_r+0x16>
 80196e0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80196e4:	4611      	mov	r1, r2
 80196e6:	f7ff b83b 	b.w	8018760 <_malloc_r>
 80196ea:	b92a      	cbnz	r2, 80196f8 <_realloc_r+0x24>
 80196ec:	f7fe fc8a 	bl	8018004 <_free_r>
 80196f0:	2400      	movs	r4, #0
 80196f2:	4620      	mov	r0, r4
 80196f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80196f8:	f000 f833 	bl	8019762 <_malloc_usable_size_r>
 80196fc:	4285      	cmp	r5, r0
 80196fe:	4606      	mov	r6, r0
 8019700:	d802      	bhi.n	8019708 <_realloc_r+0x34>
 8019702:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8019706:	d8f4      	bhi.n	80196f2 <_realloc_r+0x1e>
 8019708:	4629      	mov	r1, r5
 801970a:	4640      	mov	r0, r8
 801970c:	f7ff f828 	bl	8018760 <_malloc_r>
 8019710:	4607      	mov	r7, r0
 8019712:	2800      	cmp	r0, #0
 8019714:	d0ec      	beq.n	80196f0 <_realloc_r+0x1c>
 8019716:	42b5      	cmp	r5, r6
 8019718:	462a      	mov	r2, r5
 801971a:	4621      	mov	r1, r4
 801971c:	bf28      	it	cs
 801971e:	4632      	movcs	r2, r6
 8019720:	f7fd fe79 	bl	8017416 <memcpy>
 8019724:	4621      	mov	r1, r4
 8019726:	4640      	mov	r0, r8
 8019728:	f7fe fc6c 	bl	8018004 <_free_r>
 801972c:	463c      	mov	r4, r7
 801972e:	e7e0      	b.n	80196f2 <_realloc_r+0x1e>

08019730 <fiprintf>:
 8019730:	b40e      	push	{r1, r2, r3}
 8019732:	b503      	push	{r0, r1, lr}
 8019734:	4601      	mov	r1, r0
 8019736:	ab03      	add	r3, sp, #12
 8019738:	4805      	ldr	r0, [pc, #20]	@ (8019750 <fiprintf+0x20>)
 801973a:	f853 2b04 	ldr.w	r2, [r3], #4
 801973e:	6800      	ldr	r0, [r0, #0]
 8019740:	9301      	str	r3, [sp, #4]
 8019742:	f000 f83f 	bl	80197c4 <_vfiprintf_r>
 8019746:	b002      	add	sp, #8
 8019748:	f85d eb04 	ldr.w	lr, [sp], #4
 801974c:	b003      	add	sp, #12
 801974e:	4770      	bx	lr
 8019750:	2400027c 	.word	0x2400027c

08019754 <abort>:
 8019754:	b508      	push	{r3, lr}
 8019756:	2006      	movs	r0, #6
 8019758:	f000 fa08 	bl	8019b6c <raise>
 801975c:	2001      	movs	r0, #1
 801975e:	f7e8 fe6f 	bl	8002440 <_exit>

08019762 <_malloc_usable_size_r>:
 8019762:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8019766:	1f18      	subs	r0, r3, #4
 8019768:	2b00      	cmp	r3, #0
 801976a:	bfbc      	itt	lt
 801976c:	580b      	ldrlt	r3, [r1, r0]
 801976e:	18c0      	addlt	r0, r0, r3
 8019770:	4770      	bx	lr

08019772 <__sfputc_r>:
 8019772:	6893      	ldr	r3, [r2, #8]
 8019774:	3b01      	subs	r3, #1
 8019776:	2b00      	cmp	r3, #0
 8019778:	b410      	push	{r4}
 801977a:	6093      	str	r3, [r2, #8]
 801977c:	da08      	bge.n	8019790 <__sfputc_r+0x1e>
 801977e:	6994      	ldr	r4, [r2, #24]
 8019780:	42a3      	cmp	r3, r4
 8019782:	db01      	blt.n	8019788 <__sfputc_r+0x16>
 8019784:	290a      	cmp	r1, #10
 8019786:	d103      	bne.n	8019790 <__sfputc_r+0x1e>
 8019788:	f85d 4b04 	ldr.w	r4, [sp], #4
 801978c:	f000 b932 	b.w	80199f4 <__swbuf_r>
 8019790:	6813      	ldr	r3, [r2, #0]
 8019792:	1c58      	adds	r0, r3, #1
 8019794:	6010      	str	r0, [r2, #0]
 8019796:	7019      	strb	r1, [r3, #0]
 8019798:	4608      	mov	r0, r1
 801979a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801979e:	4770      	bx	lr

080197a0 <__sfputs_r>:
 80197a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80197a2:	4606      	mov	r6, r0
 80197a4:	460f      	mov	r7, r1
 80197a6:	4614      	mov	r4, r2
 80197a8:	18d5      	adds	r5, r2, r3
 80197aa:	42ac      	cmp	r4, r5
 80197ac:	d101      	bne.n	80197b2 <__sfputs_r+0x12>
 80197ae:	2000      	movs	r0, #0
 80197b0:	e007      	b.n	80197c2 <__sfputs_r+0x22>
 80197b2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80197b6:	463a      	mov	r2, r7
 80197b8:	4630      	mov	r0, r6
 80197ba:	f7ff ffda 	bl	8019772 <__sfputc_r>
 80197be:	1c43      	adds	r3, r0, #1
 80197c0:	d1f3      	bne.n	80197aa <__sfputs_r+0xa>
 80197c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080197c4 <_vfiprintf_r>:
 80197c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197c8:	460d      	mov	r5, r1
 80197ca:	b09d      	sub	sp, #116	@ 0x74
 80197cc:	4614      	mov	r4, r2
 80197ce:	4698      	mov	r8, r3
 80197d0:	4606      	mov	r6, r0
 80197d2:	b118      	cbz	r0, 80197dc <_vfiprintf_r+0x18>
 80197d4:	6a03      	ldr	r3, [r0, #32]
 80197d6:	b90b      	cbnz	r3, 80197dc <_vfiprintf_r+0x18>
 80197d8:	f7fd fce6 	bl	80171a8 <__sinit>
 80197dc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80197de:	07d9      	lsls	r1, r3, #31
 80197e0:	d405      	bmi.n	80197ee <_vfiprintf_r+0x2a>
 80197e2:	89ab      	ldrh	r3, [r5, #12]
 80197e4:	059a      	lsls	r2, r3, #22
 80197e6:	d402      	bmi.n	80197ee <_vfiprintf_r+0x2a>
 80197e8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80197ea:	f7fd fe12 	bl	8017412 <__retarget_lock_acquire_recursive>
 80197ee:	89ab      	ldrh	r3, [r5, #12]
 80197f0:	071b      	lsls	r3, r3, #28
 80197f2:	d501      	bpl.n	80197f8 <_vfiprintf_r+0x34>
 80197f4:	692b      	ldr	r3, [r5, #16]
 80197f6:	b99b      	cbnz	r3, 8019820 <_vfiprintf_r+0x5c>
 80197f8:	4629      	mov	r1, r5
 80197fa:	4630      	mov	r0, r6
 80197fc:	f000 f938 	bl	8019a70 <__swsetup_r>
 8019800:	b170      	cbz	r0, 8019820 <_vfiprintf_r+0x5c>
 8019802:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8019804:	07dc      	lsls	r4, r3, #31
 8019806:	d504      	bpl.n	8019812 <_vfiprintf_r+0x4e>
 8019808:	f04f 30ff 	mov.w	r0, #4294967295
 801980c:	b01d      	add	sp, #116	@ 0x74
 801980e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019812:	89ab      	ldrh	r3, [r5, #12]
 8019814:	0598      	lsls	r0, r3, #22
 8019816:	d4f7      	bmi.n	8019808 <_vfiprintf_r+0x44>
 8019818:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801981a:	f7fd fdfb 	bl	8017414 <__retarget_lock_release_recursive>
 801981e:	e7f3      	b.n	8019808 <_vfiprintf_r+0x44>
 8019820:	2300      	movs	r3, #0
 8019822:	9309      	str	r3, [sp, #36]	@ 0x24
 8019824:	2320      	movs	r3, #32
 8019826:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 801982a:	f8cd 800c 	str.w	r8, [sp, #12]
 801982e:	2330      	movs	r3, #48	@ 0x30
 8019830:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80199e0 <_vfiprintf_r+0x21c>
 8019834:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8019838:	f04f 0901 	mov.w	r9, #1
 801983c:	4623      	mov	r3, r4
 801983e:	469a      	mov	sl, r3
 8019840:	f813 2b01 	ldrb.w	r2, [r3], #1
 8019844:	b10a      	cbz	r2, 801984a <_vfiprintf_r+0x86>
 8019846:	2a25      	cmp	r2, #37	@ 0x25
 8019848:	d1f9      	bne.n	801983e <_vfiprintf_r+0x7a>
 801984a:	ebba 0b04 	subs.w	fp, sl, r4
 801984e:	d00b      	beq.n	8019868 <_vfiprintf_r+0xa4>
 8019850:	465b      	mov	r3, fp
 8019852:	4622      	mov	r2, r4
 8019854:	4629      	mov	r1, r5
 8019856:	4630      	mov	r0, r6
 8019858:	f7ff ffa2 	bl	80197a0 <__sfputs_r>
 801985c:	3001      	adds	r0, #1
 801985e:	f000 80a7 	beq.w	80199b0 <_vfiprintf_r+0x1ec>
 8019862:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8019864:	445a      	add	r2, fp
 8019866:	9209      	str	r2, [sp, #36]	@ 0x24
 8019868:	f89a 3000 	ldrb.w	r3, [sl]
 801986c:	2b00      	cmp	r3, #0
 801986e:	f000 809f 	beq.w	80199b0 <_vfiprintf_r+0x1ec>
 8019872:	2300      	movs	r3, #0
 8019874:	f04f 32ff 	mov.w	r2, #4294967295
 8019878:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801987c:	f10a 0a01 	add.w	sl, sl, #1
 8019880:	9304      	str	r3, [sp, #16]
 8019882:	9307      	str	r3, [sp, #28]
 8019884:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8019888:	931a      	str	r3, [sp, #104]	@ 0x68
 801988a:	4654      	mov	r4, sl
 801988c:	2205      	movs	r2, #5
 801988e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8019892:	4853      	ldr	r0, [pc, #332]	@ (80199e0 <_vfiprintf_r+0x21c>)
 8019894:	f7e6 fd4c 	bl	8000330 <memchr>
 8019898:	9a04      	ldr	r2, [sp, #16]
 801989a:	b9d8      	cbnz	r0, 80198d4 <_vfiprintf_r+0x110>
 801989c:	06d1      	lsls	r1, r2, #27
 801989e:	bf44      	itt	mi
 80198a0:	2320      	movmi	r3, #32
 80198a2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80198a6:	0713      	lsls	r3, r2, #28
 80198a8:	bf44      	itt	mi
 80198aa:	232b      	movmi	r3, #43	@ 0x2b
 80198ac:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80198b0:	f89a 3000 	ldrb.w	r3, [sl]
 80198b4:	2b2a      	cmp	r3, #42	@ 0x2a
 80198b6:	d015      	beq.n	80198e4 <_vfiprintf_r+0x120>
 80198b8:	9a07      	ldr	r2, [sp, #28]
 80198ba:	4654      	mov	r4, sl
 80198bc:	2000      	movs	r0, #0
 80198be:	f04f 0c0a 	mov.w	ip, #10
 80198c2:	4621      	mov	r1, r4
 80198c4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80198c8:	3b30      	subs	r3, #48	@ 0x30
 80198ca:	2b09      	cmp	r3, #9
 80198cc:	d94b      	bls.n	8019966 <_vfiprintf_r+0x1a2>
 80198ce:	b1b0      	cbz	r0, 80198fe <_vfiprintf_r+0x13a>
 80198d0:	9207      	str	r2, [sp, #28]
 80198d2:	e014      	b.n	80198fe <_vfiprintf_r+0x13a>
 80198d4:	eba0 0308 	sub.w	r3, r0, r8
 80198d8:	fa09 f303 	lsl.w	r3, r9, r3
 80198dc:	4313      	orrs	r3, r2
 80198de:	9304      	str	r3, [sp, #16]
 80198e0:	46a2      	mov	sl, r4
 80198e2:	e7d2      	b.n	801988a <_vfiprintf_r+0xc6>
 80198e4:	9b03      	ldr	r3, [sp, #12]
 80198e6:	1d19      	adds	r1, r3, #4
 80198e8:	681b      	ldr	r3, [r3, #0]
 80198ea:	9103      	str	r1, [sp, #12]
 80198ec:	2b00      	cmp	r3, #0
 80198ee:	bfbb      	ittet	lt
 80198f0:	425b      	neglt	r3, r3
 80198f2:	f042 0202 	orrlt.w	r2, r2, #2
 80198f6:	9307      	strge	r3, [sp, #28]
 80198f8:	9307      	strlt	r3, [sp, #28]
 80198fa:	bfb8      	it	lt
 80198fc:	9204      	strlt	r2, [sp, #16]
 80198fe:	7823      	ldrb	r3, [r4, #0]
 8019900:	2b2e      	cmp	r3, #46	@ 0x2e
 8019902:	d10a      	bne.n	801991a <_vfiprintf_r+0x156>
 8019904:	7863      	ldrb	r3, [r4, #1]
 8019906:	2b2a      	cmp	r3, #42	@ 0x2a
 8019908:	d132      	bne.n	8019970 <_vfiprintf_r+0x1ac>
 801990a:	9b03      	ldr	r3, [sp, #12]
 801990c:	1d1a      	adds	r2, r3, #4
 801990e:	681b      	ldr	r3, [r3, #0]
 8019910:	9203      	str	r2, [sp, #12]
 8019912:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8019916:	3402      	adds	r4, #2
 8019918:	9305      	str	r3, [sp, #20]
 801991a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80199f0 <_vfiprintf_r+0x22c>
 801991e:	7821      	ldrb	r1, [r4, #0]
 8019920:	2203      	movs	r2, #3
 8019922:	4650      	mov	r0, sl
 8019924:	f7e6 fd04 	bl	8000330 <memchr>
 8019928:	b138      	cbz	r0, 801993a <_vfiprintf_r+0x176>
 801992a:	9b04      	ldr	r3, [sp, #16]
 801992c:	eba0 000a 	sub.w	r0, r0, sl
 8019930:	2240      	movs	r2, #64	@ 0x40
 8019932:	4082      	lsls	r2, r0
 8019934:	4313      	orrs	r3, r2
 8019936:	3401      	adds	r4, #1
 8019938:	9304      	str	r3, [sp, #16]
 801993a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801993e:	4829      	ldr	r0, [pc, #164]	@ (80199e4 <_vfiprintf_r+0x220>)
 8019940:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8019944:	2206      	movs	r2, #6
 8019946:	f7e6 fcf3 	bl	8000330 <memchr>
 801994a:	2800      	cmp	r0, #0
 801994c:	d03f      	beq.n	80199ce <_vfiprintf_r+0x20a>
 801994e:	4b26      	ldr	r3, [pc, #152]	@ (80199e8 <_vfiprintf_r+0x224>)
 8019950:	bb1b      	cbnz	r3, 801999a <_vfiprintf_r+0x1d6>
 8019952:	9b03      	ldr	r3, [sp, #12]
 8019954:	3307      	adds	r3, #7
 8019956:	f023 0307 	bic.w	r3, r3, #7
 801995a:	3308      	adds	r3, #8
 801995c:	9303      	str	r3, [sp, #12]
 801995e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019960:	443b      	add	r3, r7
 8019962:	9309      	str	r3, [sp, #36]	@ 0x24
 8019964:	e76a      	b.n	801983c <_vfiprintf_r+0x78>
 8019966:	fb0c 3202 	mla	r2, ip, r2, r3
 801996a:	460c      	mov	r4, r1
 801996c:	2001      	movs	r0, #1
 801996e:	e7a8      	b.n	80198c2 <_vfiprintf_r+0xfe>
 8019970:	2300      	movs	r3, #0
 8019972:	3401      	adds	r4, #1
 8019974:	9305      	str	r3, [sp, #20]
 8019976:	4619      	mov	r1, r3
 8019978:	f04f 0c0a 	mov.w	ip, #10
 801997c:	4620      	mov	r0, r4
 801997e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8019982:	3a30      	subs	r2, #48	@ 0x30
 8019984:	2a09      	cmp	r2, #9
 8019986:	d903      	bls.n	8019990 <_vfiprintf_r+0x1cc>
 8019988:	2b00      	cmp	r3, #0
 801998a:	d0c6      	beq.n	801991a <_vfiprintf_r+0x156>
 801998c:	9105      	str	r1, [sp, #20]
 801998e:	e7c4      	b.n	801991a <_vfiprintf_r+0x156>
 8019990:	fb0c 2101 	mla	r1, ip, r1, r2
 8019994:	4604      	mov	r4, r0
 8019996:	2301      	movs	r3, #1
 8019998:	e7f0      	b.n	801997c <_vfiprintf_r+0x1b8>
 801999a:	ab03      	add	r3, sp, #12
 801999c:	9300      	str	r3, [sp, #0]
 801999e:	462a      	mov	r2, r5
 80199a0:	4b12      	ldr	r3, [pc, #72]	@ (80199ec <_vfiprintf_r+0x228>)
 80199a2:	a904      	add	r1, sp, #16
 80199a4:	4630      	mov	r0, r6
 80199a6:	f7fc ffcb 	bl	8016940 <_printf_float>
 80199aa:	4607      	mov	r7, r0
 80199ac:	1c78      	adds	r0, r7, #1
 80199ae:	d1d6      	bne.n	801995e <_vfiprintf_r+0x19a>
 80199b0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80199b2:	07d9      	lsls	r1, r3, #31
 80199b4:	d405      	bmi.n	80199c2 <_vfiprintf_r+0x1fe>
 80199b6:	89ab      	ldrh	r3, [r5, #12]
 80199b8:	059a      	lsls	r2, r3, #22
 80199ba:	d402      	bmi.n	80199c2 <_vfiprintf_r+0x1fe>
 80199bc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80199be:	f7fd fd29 	bl	8017414 <__retarget_lock_release_recursive>
 80199c2:	89ab      	ldrh	r3, [r5, #12]
 80199c4:	065b      	lsls	r3, r3, #25
 80199c6:	f53f af1f 	bmi.w	8019808 <_vfiprintf_r+0x44>
 80199ca:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80199cc:	e71e      	b.n	801980c <_vfiprintf_r+0x48>
 80199ce:	ab03      	add	r3, sp, #12
 80199d0:	9300      	str	r3, [sp, #0]
 80199d2:	462a      	mov	r2, r5
 80199d4:	4b05      	ldr	r3, [pc, #20]	@ (80199ec <_vfiprintf_r+0x228>)
 80199d6:	a904      	add	r1, sp, #16
 80199d8:	4630      	mov	r0, r6
 80199da:	f7fd fa39 	bl	8016e50 <_printf_i>
 80199de:	e7e4      	b.n	80199aa <_vfiprintf_r+0x1e6>
 80199e0:	0801b460 	.word	0x0801b460
 80199e4:	0801b46a 	.word	0x0801b46a
 80199e8:	08016941 	.word	0x08016941
 80199ec:	080197a1 	.word	0x080197a1
 80199f0:	0801b466 	.word	0x0801b466

080199f4 <__swbuf_r>:
 80199f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80199f6:	460e      	mov	r6, r1
 80199f8:	4614      	mov	r4, r2
 80199fa:	4605      	mov	r5, r0
 80199fc:	b118      	cbz	r0, 8019a06 <__swbuf_r+0x12>
 80199fe:	6a03      	ldr	r3, [r0, #32]
 8019a00:	b90b      	cbnz	r3, 8019a06 <__swbuf_r+0x12>
 8019a02:	f7fd fbd1 	bl	80171a8 <__sinit>
 8019a06:	69a3      	ldr	r3, [r4, #24]
 8019a08:	60a3      	str	r3, [r4, #8]
 8019a0a:	89a3      	ldrh	r3, [r4, #12]
 8019a0c:	071a      	lsls	r2, r3, #28
 8019a0e:	d501      	bpl.n	8019a14 <__swbuf_r+0x20>
 8019a10:	6923      	ldr	r3, [r4, #16]
 8019a12:	b943      	cbnz	r3, 8019a26 <__swbuf_r+0x32>
 8019a14:	4621      	mov	r1, r4
 8019a16:	4628      	mov	r0, r5
 8019a18:	f000 f82a 	bl	8019a70 <__swsetup_r>
 8019a1c:	b118      	cbz	r0, 8019a26 <__swbuf_r+0x32>
 8019a1e:	f04f 37ff 	mov.w	r7, #4294967295
 8019a22:	4638      	mov	r0, r7
 8019a24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019a26:	6823      	ldr	r3, [r4, #0]
 8019a28:	6922      	ldr	r2, [r4, #16]
 8019a2a:	1a98      	subs	r0, r3, r2
 8019a2c:	6963      	ldr	r3, [r4, #20]
 8019a2e:	b2f6      	uxtb	r6, r6
 8019a30:	4283      	cmp	r3, r0
 8019a32:	4637      	mov	r7, r6
 8019a34:	dc05      	bgt.n	8019a42 <__swbuf_r+0x4e>
 8019a36:	4621      	mov	r1, r4
 8019a38:	4628      	mov	r0, r5
 8019a3a:	f7ff fdc7 	bl	80195cc <_fflush_r>
 8019a3e:	2800      	cmp	r0, #0
 8019a40:	d1ed      	bne.n	8019a1e <__swbuf_r+0x2a>
 8019a42:	68a3      	ldr	r3, [r4, #8]
 8019a44:	3b01      	subs	r3, #1
 8019a46:	60a3      	str	r3, [r4, #8]
 8019a48:	6823      	ldr	r3, [r4, #0]
 8019a4a:	1c5a      	adds	r2, r3, #1
 8019a4c:	6022      	str	r2, [r4, #0]
 8019a4e:	701e      	strb	r6, [r3, #0]
 8019a50:	6962      	ldr	r2, [r4, #20]
 8019a52:	1c43      	adds	r3, r0, #1
 8019a54:	429a      	cmp	r2, r3
 8019a56:	d004      	beq.n	8019a62 <__swbuf_r+0x6e>
 8019a58:	89a3      	ldrh	r3, [r4, #12]
 8019a5a:	07db      	lsls	r3, r3, #31
 8019a5c:	d5e1      	bpl.n	8019a22 <__swbuf_r+0x2e>
 8019a5e:	2e0a      	cmp	r6, #10
 8019a60:	d1df      	bne.n	8019a22 <__swbuf_r+0x2e>
 8019a62:	4621      	mov	r1, r4
 8019a64:	4628      	mov	r0, r5
 8019a66:	f7ff fdb1 	bl	80195cc <_fflush_r>
 8019a6a:	2800      	cmp	r0, #0
 8019a6c:	d0d9      	beq.n	8019a22 <__swbuf_r+0x2e>
 8019a6e:	e7d6      	b.n	8019a1e <__swbuf_r+0x2a>

08019a70 <__swsetup_r>:
 8019a70:	b538      	push	{r3, r4, r5, lr}
 8019a72:	4b29      	ldr	r3, [pc, #164]	@ (8019b18 <__swsetup_r+0xa8>)
 8019a74:	4605      	mov	r5, r0
 8019a76:	6818      	ldr	r0, [r3, #0]
 8019a78:	460c      	mov	r4, r1
 8019a7a:	b118      	cbz	r0, 8019a84 <__swsetup_r+0x14>
 8019a7c:	6a03      	ldr	r3, [r0, #32]
 8019a7e:	b90b      	cbnz	r3, 8019a84 <__swsetup_r+0x14>
 8019a80:	f7fd fb92 	bl	80171a8 <__sinit>
 8019a84:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8019a88:	0719      	lsls	r1, r3, #28
 8019a8a:	d422      	bmi.n	8019ad2 <__swsetup_r+0x62>
 8019a8c:	06da      	lsls	r2, r3, #27
 8019a8e:	d407      	bmi.n	8019aa0 <__swsetup_r+0x30>
 8019a90:	2209      	movs	r2, #9
 8019a92:	602a      	str	r2, [r5, #0]
 8019a94:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8019a98:	81a3      	strh	r3, [r4, #12]
 8019a9a:	f04f 30ff 	mov.w	r0, #4294967295
 8019a9e:	e033      	b.n	8019b08 <__swsetup_r+0x98>
 8019aa0:	0758      	lsls	r0, r3, #29
 8019aa2:	d512      	bpl.n	8019aca <__swsetup_r+0x5a>
 8019aa4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8019aa6:	b141      	cbz	r1, 8019aba <__swsetup_r+0x4a>
 8019aa8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8019aac:	4299      	cmp	r1, r3
 8019aae:	d002      	beq.n	8019ab6 <__swsetup_r+0x46>
 8019ab0:	4628      	mov	r0, r5
 8019ab2:	f7fe faa7 	bl	8018004 <_free_r>
 8019ab6:	2300      	movs	r3, #0
 8019ab8:	6363      	str	r3, [r4, #52]	@ 0x34
 8019aba:	89a3      	ldrh	r3, [r4, #12]
 8019abc:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8019ac0:	81a3      	strh	r3, [r4, #12]
 8019ac2:	2300      	movs	r3, #0
 8019ac4:	6063      	str	r3, [r4, #4]
 8019ac6:	6923      	ldr	r3, [r4, #16]
 8019ac8:	6023      	str	r3, [r4, #0]
 8019aca:	89a3      	ldrh	r3, [r4, #12]
 8019acc:	f043 0308 	orr.w	r3, r3, #8
 8019ad0:	81a3      	strh	r3, [r4, #12]
 8019ad2:	6923      	ldr	r3, [r4, #16]
 8019ad4:	b94b      	cbnz	r3, 8019aea <__swsetup_r+0x7a>
 8019ad6:	89a3      	ldrh	r3, [r4, #12]
 8019ad8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8019adc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8019ae0:	d003      	beq.n	8019aea <__swsetup_r+0x7a>
 8019ae2:	4621      	mov	r1, r4
 8019ae4:	4628      	mov	r0, r5
 8019ae6:	f000 f883 	bl	8019bf0 <__smakebuf_r>
 8019aea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8019aee:	f013 0201 	ands.w	r2, r3, #1
 8019af2:	d00a      	beq.n	8019b0a <__swsetup_r+0x9a>
 8019af4:	2200      	movs	r2, #0
 8019af6:	60a2      	str	r2, [r4, #8]
 8019af8:	6962      	ldr	r2, [r4, #20]
 8019afa:	4252      	negs	r2, r2
 8019afc:	61a2      	str	r2, [r4, #24]
 8019afe:	6922      	ldr	r2, [r4, #16]
 8019b00:	b942      	cbnz	r2, 8019b14 <__swsetup_r+0xa4>
 8019b02:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8019b06:	d1c5      	bne.n	8019a94 <__swsetup_r+0x24>
 8019b08:	bd38      	pop	{r3, r4, r5, pc}
 8019b0a:	0799      	lsls	r1, r3, #30
 8019b0c:	bf58      	it	pl
 8019b0e:	6962      	ldrpl	r2, [r4, #20]
 8019b10:	60a2      	str	r2, [r4, #8]
 8019b12:	e7f4      	b.n	8019afe <__swsetup_r+0x8e>
 8019b14:	2000      	movs	r0, #0
 8019b16:	e7f7      	b.n	8019b08 <__swsetup_r+0x98>
 8019b18:	2400027c 	.word	0x2400027c

08019b1c <_raise_r>:
 8019b1c:	291f      	cmp	r1, #31
 8019b1e:	b538      	push	{r3, r4, r5, lr}
 8019b20:	4605      	mov	r5, r0
 8019b22:	460c      	mov	r4, r1
 8019b24:	d904      	bls.n	8019b30 <_raise_r+0x14>
 8019b26:	2316      	movs	r3, #22
 8019b28:	6003      	str	r3, [r0, #0]
 8019b2a:	f04f 30ff 	mov.w	r0, #4294967295
 8019b2e:	bd38      	pop	{r3, r4, r5, pc}
 8019b30:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8019b32:	b112      	cbz	r2, 8019b3a <_raise_r+0x1e>
 8019b34:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8019b38:	b94b      	cbnz	r3, 8019b4e <_raise_r+0x32>
 8019b3a:	4628      	mov	r0, r5
 8019b3c:	f000 f830 	bl	8019ba0 <_getpid_r>
 8019b40:	4622      	mov	r2, r4
 8019b42:	4601      	mov	r1, r0
 8019b44:	4628      	mov	r0, r5
 8019b46:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8019b4a:	f000 b817 	b.w	8019b7c <_kill_r>
 8019b4e:	2b01      	cmp	r3, #1
 8019b50:	d00a      	beq.n	8019b68 <_raise_r+0x4c>
 8019b52:	1c59      	adds	r1, r3, #1
 8019b54:	d103      	bne.n	8019b5e <_raise_r+0x42>
 8019b56:	2316      	movs	r3, #22
 8019b58:	6003      	str	r3, [r0, #0]
 8019b5a:	2001      	movs	r0, #1
 8019b5c:	e7e7      	b.n	8019b2e <_raise_r+0x12>
 8019b5e:	2100      	movs	r1, #0
 8019b60:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8019b64:	4620      	mov	r0, r4
 8019b66:	4798      	blx	r3
 8019b68:	2000      	movs	r0, #0
 8019b6a:	e7e0      	b.n	8019b2e <_raise_r+0x12>

08019b6c <raise>:
 8019b6c:	4b02      	ldr	r3, [pc, #8]	@ (8019b78 <raise+0xc>)
 8019b6e:	4601      	mov	r1, r0
 8019b70:	6818      	ldr	r0, [r3, #0]
 8019b72:	f7ff bfd3 	b.w	8019b1c <_raise_r>
 8019b76:	bf00      	nop
 8019b78:	2400027c 	.word	0x2400027c

08019b7c <_kill_r>:
 8019b7c:	b538      	push	{r3, r4, r5, lr}
 8019b7e:	4d07      	ldr	r5, [pc, #28]	@ (8019b9c <_kill_r+0x20>)
 8019b80:	2300      	movs	r3, #0
 8019b82:	4604      	mov	r4, r0
 8019b84:	4608      	mov	r0, r1
 8019b86:	4611      	mov	r1, r2
 8019b88:	602b      	str	r3, [r5, #0]
 8019b8a:	f7e8 fc49 	bl	8002420 <_kill>
 8019b8e:	1c43      	adds	r3, r0, #1
 8019b90:	d102      	bne.n	8019b98 <_kill_r+0x1c>
 8019b92:	682b      	ldr	r3, [r5, #0]
 8019b94:	b103      	cbz	r3, 8019b98 <_kill_r+0x1c>
 8019b96:	6023      	str	r3, [r4, #0]
 8019b98:	bd38      	pop	{r3, r4, r5, pc}
 8019b9a:	bf00      	nop
 8019b9c:	24006264 	.word	0x24006264

08019ba0 <_getpid_r>:
 8019ba0:	f7e8 bc36 	b.w	8002410 <_getpid>

08019ba4 <__swhatbuf_r>:
 8019ba4:	b570      	push	{r4, r5, r6, lr}
 8019ba6:	460c      	mov	r4, r1
 8019ba8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8019bac:	2900      	cmp	r1, #0
 8019bae:	b096      	sub	sp, #88	@ 0x58
 8019bb0:	4615      	mov	r5, r2
 8019bb2:	461e      	mov	r6, r3
 8019bb4:	da0d      	bge.n	8019bd2 <__swhatbuf_r+0x2e>
 8019bb6:	89a3      	ldrh	r3, [r4, #12]
 8019bb8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8019bbc:	f04f 0100 	mov.w	r1, #0
 8019bc0:	bf14      	ite	ne
 8019bc2:	2340      	movne	r3, #64	@ 0x40
 8019bc4:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8019bc8:	2000      	movs	r0, #0
 8019bca:	6031      	str	r1, [r6, #0]
 8019bcc:	602b      	str	r3, [r5, #0]
 8019bce:	b016      	add	sp, #88	@ 0x58
 8019bd0:	bd70      	pop	{r4, r5, r6, pc}
 8019bd2:	466a      	mov	r2, sp
 8019bd4:	f000 f848 	bl	8019c68 <_fstat_r>
 8019bd8:	2800      	cmp	r0, #0
 8019bda:	dbec      	blt.n	8019bb6 <__swhatbuf_r+0x12>
 8019bdc:	9901      	ldr	r1, [sp, #4]
 8019bde:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8019be2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8019be6:	4259      	negs	r1, r3
 8019be8:	4159      	adcs	r1, r3
 8019bea:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8019bee:	e7eb      	b.n	8019bc8 <__swhatbuf_r+0x24>

08019bf0 <__smakebuf_r>:
 8019bf0:	898b      	ldrh	r3, [r1, #12]
 8019bf2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8019bf4:	079d      	lsls	r5, r3, #30
 8019bf6:	4606      	mov	r6, r0
 8019bf8:	460c      	mov	r4, r1
 8019bfa:	d507      	bpl.n	8019c0c <__smakebuf_r+0x1c>
 8019bfc:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8019c00:	6023      	str	r3, [r4, #0]
 8019c02:	6123      	str	r3, [r4, #16]
 8019c04:	2301      	movs	r3, #1
 8019c06:	6163      	str	r3, [r4, #20]
 8019c08:	b003      	add	sp, #12
 8019c0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019c0c:	ab01      	add	r3, sp, #4
 8019c0e:	466a      	mov	r2, sp
 8019c10:	f7ff ffc8 	bl	8019ba4 <__swhatbuf_r>
 8019c14:	9f00      	ldr	r7, [sp, #0]
 8019c16:	4605      	mov	r5, r0
 8019c18:	4639      	mov	r1, r7
 8019c1a:	4630      	mov	r0, r6
 8019c1c:	f7fe fda0 	bl	8018760 <_malloc_r>
 8019c20:	b948      	cbnz	r0, 8019c36 <__smakebuf_r+0x46>
 8019c22:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8019c26:	059a      	lsls	r2, r3, #22
 8019c28:	d4ee      	bmi.n	8019c08 <__smakebuf_r+0x18>
 8019c2a:	f023 0303 	bic.w	r3, r3, #3
 8019c2e:	f043 0302 	orr.w	r3, r3, #2
 8019c32:	81a3      	strh	r3, [r4, #12]
 8019c34:	e7e2      	b.n	8019bfc <__smakebuf_r+0xc>
 8019c36:	89a3      	ldrh	r3, [r4, #12]
 8019c38:	6020      	str	r0, [r4, #0]
 8019c3a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8019c3e:	81a3      	strh	r3, [r4, #12]
 8019c40:	9b01      	ldr	r3, [sp, #4]
 8019c42:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8019c46:	b15b      	cbz	r3, 8019c60 <__smakebuf_r+0x70>
 8019c48:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8019c4c:	4630      	mov	r0, r6
 8019c4e:	f000 f81d 	bl	8019c8c <_isatty_r>
 8019c52:	b128      	cbz	r0, 8019c60 <__smakebuf_r+0x70>
 8019c54:	89a3      	ldrh	r3, [r4, #12]
 8019c56:	f023 0303 	bic.w	r3, r3, #3
 8019c5a:	f043 0301 	orr.w	r3, r3, #1
 8019c5e:	81a3      	strh	r3, [r4, #12]
 8019c60:	89a3      	ldrh	r3, [r4, #12]
 8019c62:	431d      	orrs	r5, r3
 8019c64:	81a5      	strh	r5, [r4, #12]
 8019c66:	e7cf      	b.n	8019c08 <__smakebuf_r+0x18>

08019c68 <_fstat_r>:
 8019c68:	b538      	push	{r3, r4, r5, lr}
 8019c6a:	4d07      	ldr	r5, [pc, #28]	@ (8019c88 <_fstat_r+0x20>)
 8019c6c:	2300      	movs	r3, #0
 8019c6e:	4604      	mov	r4, r0
 8019c70:	4608      	mov	r0, r1
 8019c72:	4611      	mov	r1, r2
 8019c74:	602b      	str	r3, [r5, #0]
 8019c76:	f7e8 fc33 	bl	80024e0 <_fstat>
 8019c7a:	1c43      	adds	r3, r0, #1
 8019c7c:	d102      	bne.n	8019c84 <_fstat_r+0x1c>
 8019c7e:	682b      	ldr	r3, [r5, #0]
 8019c80:	b103      	cbz	r3, 8019c84 <_fstat_r+0x1c>
 8019c82:	6023      	str	r3, [r4, #0]
 8019c84:	bd38      	pop	{r3, r4, r5, pc}
 8019c86:	bf00      	nop
 8019c88:	24006264 	.word	0x24006264

08019c8c <_isatty_r>:
 8019c8c:	b538      	push	{r3, r4, r5, lr}
 8019c8e:	4d06      	ldr	r5, [pc, #24]	@ (8019ca8 <_isatty_r+0x1c>)
 8019c90:	2300      	movs	r3, #0
 8019c92:	4604      	mov	r4, r0
 8019c94:	4608      	mov	r0, r1
 8019c96:	602b      	str	r3, [r5, #0]
 8019c98:	f7e8 fc32 	bl	8002500 <_isatty>
 8019c9c:	1c43      	adds	r3, r0, #1
 8019c9e:	d102      	bne.n	8019ca6 <_isatty_r+0x1a>
 8019ca0:	682b      	ldr	r3, [r5, #0]
 8019ca2:	b103      	cbz	r3, 8019ca6 <_isatty_r+0x1a>
 8019ca4:	6023      	str	r3, [r4, #0]
 8019ca6:	bd38      	pop	{r3, r4, r5, pc}
 8019ca8:	24006264 	.word	0x24006264
 8019cac:	00000000 	.word	0x00000000

08019cb0 <sin>:
 8019cb0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8019cb2:	eeb0 7b40 	vmov.f64	d7, d0
 8019cb6:	ee17 3a90 	vmov	r3, s15
 8019cba:	4a21      	ldr	r2, [pc, #132]	@ (8019d40 <sin+0x90>)
 8019cbc:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8019cc0:	4293      	cmp	r3, r2
 8019cc2:	d807      	bhi.n	8019cd4 <sin+0x24>
 8019cc4:	ed9f 1b1c 	vldr	d1, [pc, #112]	@ 8019d38 <sin+0x88>
 8019cc8:	2000      	movs	r0, #0
 8019cca:	b005      	add	sp, #20
 8019ccc:	f85d eb04 	ldr.w	lr, [sp], #4
 8019cd0:	f000 b986 	b.w	8019fe0 <__kernel_sin>
 8019cd4:	4a1b      	ldr	r2, [pc, #108]	@ (8019d44 <sin+0x94>)
 8019cd6:	4293      	cmp	r3, r2
 8019cd8:	d904      	bls.n	8019ce4 <sin+0x34>
 8019cda:	ee30 0b40 	vsub.f64	d0, d0, d0
 8019cde:	b005      	add	sp, #20
 8019ce0:	f85d fb04 	ldr.w	pc, [sp], #4
 8019ce4:	4668      	mov	r0, sp
 8019ce6:	f000 f9d3 	bl	801a090 <__ieee754_rem_pio2>
 8019cea:	f000 0003 	and.w	r0, r0, #3
 8019cee:	2801      	cmp	r0, #1
 8019cf0:	d00a      	beq.n	8019d08 <sin+0x58>
 8019cf2:	2802      	cmp	r0, #2
 8019cf4:	d00f      	beq.n	8019d16 <sin+0x66>
 8019cf6:	b9c0      	cbnz	r0, 8019d2a <sin+0x7a>
 8019cf8:	ed9d 1b02 	vldr	d1, [sp, #8]
 8019cfc:	ed9d 0b00 	vldr	d0, [sp]
 8019d00:	2001      	movs	r0, #1
 8019d02:	f000 f96d 	bl	8019fe0 <__kernel_sin>
 8019d06:	e7ea      	b.n	8019cde <sin+0x2e>
 8019d08:	ed9d 1b02 	vldr	d1, [sp, #8]
 8019d0c:	ed9d 0b00 	vldr	d0, [sp]
 8019d10:	f000 f8fe 	bl	8019f10 <__kernel_cos>
 8019d14:	e7e3      	b.n	8019cde <sin+0x2e>
 8019d16:	ed9d 1b02 	vldr	d1, [sp, #8]
 8019d1a:	ed9d 0b00 	vldr	d0, [sp]
 8019d1e:	2001      	movs	r0, #1
 8019d20:	f000 f95e 	bl	8019fe0 <__kernel_sin>
 8019d24:	eeb1 0b40 	vneg.f64	d0, d0
 8019d28:	e7d9      	b.n	8019cde <sin+0x2e>
 8019d2a:	ed9d 1b02 	vldr	d1, [sp, #8]
 8019d2e:	ed9d 0b00 	vldr	d0, [sp]
 8019d32:	f000 f8ed 	bl	8019f10 <__kernel_cos>
 8019d36:	e7f5      	b.n	8019d24 <sin+0x74>
	...
 8019d40:	3fe921fb 	.word	0x3fe921fb
 8019d44:	7fefffff 	.word	0x7fefffff

08019d48 <sinf_poly>:
 8019d48:	07cb      	lsls	r3, r1, #31
 8019d4a:	d412      	bmi.n	8019d72 <sinf_poly+0x2a>
 8019d4c:	ee21 5b00 	vmul.f64	d5, d1, d0
 8019d50:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
 8019d54:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
 8019d58:	eea6 7b01 	vfma.f64	d7, d6, d1
 8019d5c:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
 8019d60:	ee21 1b05 	vmul.f64	d1, d1, d5
 8019d64:	eea6 0b05 	vfma.f64	d0, d6, d5
 8019d68:	eea7 0b01 	vfma.f64	d0, d7, d1
 8019d6c:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
 8019d70:	4770      	bx	lr
 8019d72:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
 8019d76:	ee21 5b01 	vmul.f64	d5, d1, d1
 8019d7a:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
 8019d7e:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
 8019d82:	eea1 7b06 	vfma.f64	d7, d1, d6
 8019d86:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
 8019d8a:	eea1 0b06 	vfma.f64	d0, d1, d6
 8019d8e:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
 8019d92:	ee21 1b05 	vmul.f64	d1, d1, d5
 8019d96:	eea5 0b06 	vfma.f64	d0, d5, d6
 8019d9a:	e7e5      	b.n	8019d68 <sinf_poly+0x20>
 8019d9c:	0000      	movs	r0, r0
	...

08019da0 <sinf>:
 8019da0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8019da2:	ee10 4a10 	vmov	r4, s0
 8019da6:	f3c4 530a 	ubfx	r3, r4, #20, #11
 8019daa:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
 8019dae:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
 8019db2:	eef0 7a40 	vmov.f32	s15, s0
 8019db6:	ea4f 5214 	mov.w	r2, r4, lsr #20
 8019dba:	d218      	bcs.n	8019dee <sinf+0x4e>
 8019dbc:	ee26 1b06 	vmul.f64	d1, d6, d6
 8019dc0:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
 8019dc4:	d20a      	bcs.n	8019ddc <sinf+0x3c>
 8019dc6:	f412 6fff 	tst.w	r2, #2040	@ 0x7f8
 8019dca:	d103      	bne.n	8019dd4 <sinf+0x34>
 8019dcc:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
 8019dd0:	ed8d 1a01 	vstr	s2, [sp, #4]
 8019dd4:	eeb0 0a67 	vmov.f32	s0, s15
 8019dd8:	b003      	add	sp, #12
 8019dda:	bd30      	pop	{r4, r5, pc}
 8019ddc:	483a      	ldr	r0, [pc, #232]	@ (8019ec8 <sinf+0x128>)
 8019dde:	eeb0 0b46 	vmov.f64	d0, d6
 8019de2:	2100      	movs	r1, #0
 8019de4:	b003      	add	sp, #12
 8019de6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8019dea:	f7ff bfad 	b.w	8019d48 <sinf_poly>
 8019dee:	f240 422e 	movw	r2, #1070	@ 0x42e
 8019df2:	4293      	cmp	r3, r2
 8019df4:	d824      	bhi.n	8019e40 <sinf+0xa0>
 8019df6:	4b34      	ldr	r3, [pc, #208]	@ (8019ec8 <sinf+0x128>)
 8019df8:	ed93 7b08 	vldr	d7, [r3, #32]
 8019dfc:	ee26 7b07 	vmul.f64	d7, d6, d7
 8019e00:	eefd 7bc7 	vcvt.s32.f64	s15, d7
 8019e04:	f103 0070 	add.w	r0, r3, #112	@ 0x70
 8019e08:	ee17 1a90 	vmov	r1, s15
 8019e0c:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
 8019e10:	1609      	asrs	r1, r1, #24
 8019e12:	ee07 1a90 	vmov	s15, r1
 8019e16:	f001 0203 	and.w	r2, r1, #3
 8019e1a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 8019e1e:	eeb8 5be7 	vcvt.f64.s32	d5, s15
 8019e22:	ed92 0b00 	vldr	d0, [r2]
 8019e26:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
 8019e2a:	f011 0f02 	tst.w	r1, #2
 8019e2e:	eea5 6b47 	vfms.f64	d6, d5, d7
 8019e32:	bf08      	it	eq
 8019e34:	4618      	moveq	r0, r3
 8019e36:	ee26 1b06 	vmul.f64	d1, d6, d6
 8019e3a:	ee20 0b06 	vmul.f64	d0, d0, d6
 8019e3e:	e7d1      	b.n	8019de4 <sinf+0x44>
 8019e40:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
 8019e44:	d237      	bcs.n	8019eb6 <sinf+0x116>
 8019e46:	4921      	ldr	r1, [pc, #132]	@ (8019ecc <sinf+0x12c>)
 8019e48:	f3c4 6083 	ubfx	r0, r4, #26, #4
 8019e4c:	eb01 0280 	add.w	r2, r1, r0, lsl #2
 8019e50:	f3c4 0316 	ubfx	r3, r4, #0, #23
 8019e54:	f3c4 55c2 	ubfx	r5, r4, #23, #3
 8019e58:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8019e5c:	6a10      	ldr	r0, [r2, #32]
 8019e5e:	6912      	ldr	r2, [r2, #16]
 8019e60:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8019e64:	40ab      	lsls	r3, r5
 8019e66:	fba0 5003 	umull	r5, r0, r0, r3
 8019e6a:	4359      	muls	r1, r3
 8019e6c:	fbe3 0102 	umlal	r0, r1, r3, r2
 8019e70:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
 8019e74:	0f9d      	lsrs	r5, r3, #30
 8019e76:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8019e7a:	1ac9      	subs	r1, r1, r3
 8019e7c:	f7e6 fc3e 	bl	80006fc <__aeabi_l2d>
 8019e80:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
 8019e84:	4b10      	ldr	r3, [pc, #64]	@ (8019ec8 <sinf+0x128>)
 8019e86:	f004 0203 	and.w	r2, r4, #3
 8019e8a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 8019e8e:	ed9f 6b0c 	vldr	d6, [pc, #48]	@ 8019ec0 <sinf+0x120>
 8019e92:	ed92 0b00 	vldr	d0, [r2]
 8019e96:	ec41 0b17 	vmov	d7, r0, r1
 8019e9a:	f014 0f02 	tst.w	r4, #2
 8019e9e:	ee27 7b06 	vmul.f64	d7, d7, d6
 8019ea2:	f103 0070 	add.w	r0, r3, #112	@ 0x70
 8019ea6:	4629      	mov	r1, r5
 8019ea8:	bf08      	it	eq
 8019eaa:	4618      	moveq	r0, r3
 8019eac:	ee27 1b07 	vmul.f64	d1, d7, d7
 8019eb0:	ee20 0b07 	vmul.f64	d0, d0, d7
 8019eb4:	e796      	b.n	8019de4 <sinf+0x44>
 8019eb6:	b003      	add	sp, #12
 8019eb8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8019ebc:	f000 b816 	b.w	8019eec <__math_invalidf>
 8019ec0:	54442d18 	.word	0x54442d18
 8019ec4:	3c1921fb 	.word	0x3c1921fb
 8019ec8:	0801b510 	.word	0x0801b510
 8019ecc:	0801b4b0 	.word	0x0801b4b0

08019ed0 <with_errnof>:
 8019ed0:	b510      	push	{r4, lr}
 8019ed2:	ed2d 8b02 	vpush	{d8}
 8019ed6:	eeb0 8a40 	vmov.f32	s16, s0
 8019eda:	4604      	mov	r4, r0
 8019edc:	f7fd fa6e 	bl	80173bc <__errno>
 8019ee0:	eeb0 0a48 	vmov.f32	s0, s16
 8019ee4:	ecbd 8b02 	vpop	{d8}
 8019ee8:	6004      	str	r4, [r0, #0]
 8019eea:	bd10      	pop	{r4, pc}

08019eec <__math_invalidf>:
 8019eec:	eef0 7a40 	vmov.f32	s15, s0
 8019ef0:	ee30 7a40 	vsub.f32	s14, s0, s0
 8019ef4:	eef4 7a67 	vcmp.f32	s15, s15
 8019ef8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019efc:	ee87 0a07 	vdiv.f32	s0, s14, s14
 8019f00:	d602      	bvs.n	8019f08 <__math_invalidf+0x1c>
 8019f02:	2021      	movs	r0, #33	@ 0x21
 8019f04:	f7ff bfe4 	b.w	8019ed0 <with_errnof>
 8019f08:	4770      	bx	lr
 8019f0a:	0000      	movs	r0, r0
 8019f0c:	0000      	movs	r0, r0
	...

08019f10 <__kernel_cos>:
 8019f10:	eeb0 5b40 	vmov.f64	d5, d0
 8019f14:	ee15 1a90 	vmov	r1, s11
 8019f18:	eeb7 0b00 	vmov.f64	d0, #112	@ 0x3f800000  1.0
 8019f1c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8019f20:	f1b1 5f79 	cmp.w	r1, #1044381696	@ 0x3e400000
 8019f24:	d204      	bcs.n	8019f30 <__kernel_cos+0x20>
 8019f26:	eefd 7bc5 	vcvt.s32.f64	s15, d5
 8019f2a:	ee17 3a90 	vmov	r3, s15
 8019f2e:	b343      	cbz	r3, 8019f82 <__kernel_cos+0x72>
 8019f30:	ee25 6b05 	vmul.f64	d6, d5, d5
 8019f34:	ee21 1b45 	vnmul.f64	d1, d1, d5
 8019f38:	ed9f 7b1b 	vldr	d7, [pc, #108]	@ 8019fa8 <__kernel_cos+0x98>
 8019f3c:	ed9f 4b1c 	vldr	d4, [pc, #112]	@ 8019fb0 <__kernel_cos+0xa0>
 8019f40:	eea6 4b07 	vfma.f64	d4, d6, d7
 8019f44:	ed9f 7b1c 	vldr	d7, [pc, #112]	@ 8019fb8 <__kernel_cos+0xa8>
 8019f48:	eea4 7b06 	vfma.f64	d7, d4, d6
 8019f4c:	ed9f 4b1c 	vldr	d4, [pc, #112]	@ 8019fc0 <__kernel_cos+0xb0>
 8019f50:	eea7 4b06 	vfma.f64	d4, d7, d6
 8019f54:	ed9f 7b1c 	vldr	d7, [pc, #112]	@ 8019fc8 <__kernel_cos+0xb8>
 8019f58:	4b1f      	ldr	r3, [pc, #124]	@ (8019fd8 <__kernel_cos+0xc8>)
 8019f5a:	eea4 7b06 	vfma.f64	d7, d4, d6
 8019f5e:	ed9f 4b1c 	vldr	d4, [pc, #112]	@ 8019fd0 <__kernel_cos+0xc0>
 8019f62:	4299      	cmp	r1, r3
 8019f64:	eea7 4b06 	vfma.f64	d4, d7, d6
 8019f68:	eeb6 7b00 	vmov.f64	d7, #96	@ 0x3f000000  0.5
 8019f6c:	ee24 4b06 	vmul.f64	d4, d4, d6
 8019f70:	ee26 7b07 	vmul.f64	d7, d6, d7
 8019f74:	eea6 1b04 	vfma.f64	d1, d6, d4
 8019f78:	d804      	bhi.n	8019f84 <__kernel_cos+0x74>
 8019f7a:	ee37 7b41 	vsub.f64	d7, d7, d1
 8019f7e:	ee30 0b47 	vsub.f64	d0, d0, d7
 8019f82:	4770      	bx	lr
 8019f84:	4b15      	ldr	r3, [pc, #84]	@ (8019fdc <__kernel_cos+0xcc>)
 8019f86:	4299      	cmp	r1, r3
 8019f88:	d809      	bhi.n	8019f9e <__kernel_cos+0x8e>
 8019f8a:	2200      	movs	r2, #0
 8019f8c:	f5a1 1300 	sub.w	r3, r1, #2097152	@ 0x200000
 8019f90:	ec43 2b16 	vmov	d6, r2, r3
 8019f94:	ee30 0b46 	vsub.f64	d0, d0, d6
 8019f98:	ee37 7b46 	vsub.f64	d7, d7, d6
 8019f9c:	e7ed      	b.n	8019f7a <__kernel_cos+0x6a>
 8019f9e:	eeb5 6b02 	vmov.f64	d6, #82	@ 0x3e900000  0.2812500
 8019fa2:	e7f7      	b.n	8019f94 <__kernel_cos+0x84>
 8019fa4:	f3af 8000 	nop.w
 8019fa8:	be8838d4 	.word	0xbe8838d4
 8019fac:	bda8fae9 	.word	0xbda8fae9
 8019fb0:	bdb4b1c4 	.word	0xbdb4b1c4
 8019fb4:	3e21ee9e 	.word	0x3e21ee9e
 8019fb8:	809c52ad 	.word	0x809c52ad
 8019fbc:	be927e4f 	.word	0xbe927e4f
 8019fc0:	19cb1590 	.word	0x19cb1590
 8019fc4:	3efa01a0 	.word	0x3efa01a0
 8019fc8:	16c15177 	.word	0x16c15177
 8019fcc:	bf56c16c 	.word	0xbf56c16c
 8019fd0:	5555554c 	.word	0x5555554c
 8019fd4:	3fa55555 	.word	0x3fa55555
 8019fd8:	3fd33332 	.word	0x3fd33332
 8019fdc:	3fe90000 	.word	0x3fe90000

08019fe0 <__kernel_sin>:
 8019fe0:	ee10 3a90 	vmov	r3, s1
 8019fe4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8019fe8:	f1b3 5f79 	cmp.w	r3, #1044381696	@ 0x3e400000
 8019fec:	d204      	bcs.n	8019ff8 <__kernel_sin+0x18>
 8019fee:	eefd 7bc0 	vcvt.s32.f64	s15, d0
 8019ff2:	ee17 3a90 	vmov	r3, s15
 8019ff6:	b35b      	cbz	r3, 801a050 <__kernel_sin+0x70>
 8019ff8:	ee20 6b00 	vmul.f64	d6, d0, d0
 8019ffc:	ee20 5b06 	vmul.f64	d5, d0, d6
 801a000:	ed9f 7b15 	vldr	d7, [pc, #84]	@ 801a058 <__kernel_sin+0x78>
 801a004:	ed9f 4b16 	vldr	d4, [pc, #88]	@ 801a060 <__kernel_sin+0x80>
 801a008:	eea6 4b07 	vfma.f64	d4, d6, d7
 801a00c:	ed9f 7b16 	vldr	d7, [pc, #88]	@ 801a068 <__kernel_sin+0x88>
 801a010:	eea4 7b06 	vfma.f64	d7, d4, d6
 801a014:	ed9f 4b16 	vldr	d4, [pc, #88]	@ 801a070 <__kernel_sin+0x90>
 801a018:	eea7 4b06 	vfma.f64	d4, d7, d6
 801a01c:	ed9f 7b16 	vldr	d7, [pc, #88]	@ 801a078 <__kernel_sin+0x98>
 801a020:	eea4 7b06 	vfma.f64	d7, d4, d6
 801a024:	b930      	cbnz	r0, 801a034 <__kernel_sin+0x54>
 801a026:	ed9f 4b16 	vldr	d4, [pc, #88]	@ 801a080 <__kernel_sin+0xa0>
 801a02a:	eea6 4b07 	vfma.f64	d4, d6, d7
 801a02e:	eea4 0b05 	vfma.f64	d0, d4, d5
 801a032:	4770      	bx	lr
 801a034:	ee27 7b45 	vnmul.f64	d7, d7, d5
 801a038:	eeb6 4b00 	vmov.f64	d4, #96	@ 0x3f000000  0.5
 801a03c:	eea1 7b04 	vfma.f64	d7, d1, d4
 801a040:	ee97 1b06 	vfnms.f64	d1, d7, d6
 801a044:	ed9f 7b10 	vldr	d7, [pc, #64]	@ 801a088 <__kernel_sin+0xa8>
 801a048:	eea5 1b07 	vfma.f64	d1, d5, d7
 801a04c:	ee30 0b41 	vsub.f64	d0, d0, d1
 801a050:	4770      	bx	lr
 801a052:	bf00      	nop
 801a054:	f3af 8000 	nop.w
 801a058:	5acfd57c 	.word	0x5acfd57c
 801a05c:	3de5d93a 	.word	0x3de5d93a
 801a060:	8a2b9ceb 	.word	0x8a2b9ceb
 801a064:	be5ae5e6 	.word	0xbe5ae5e6
 801a068:	57b1fe7d 	.word	0x57b1fe7d
 801a06c:	3ec71de3 	.word	0x3ec71de3
 801a070:	19c161d5 	.word	0x19c161d5
 801a074:	bf2a01a0 	.word	0xbf2a01a0
 801a078:	1110f8a6 	.word	0x1110f8a6
 801a07c:	3f811111 	.word	0x3f811111
 801a080:	55555549 	.word	0x55555549
 801a084:	bfc55555 	.word	0xbfc55555
 801a088:	55555549 	.word	0x55555549
 801a08c:	3fc55555 	.word	0x3fc55555

0801a090 <__ieee754_rem_pio2>:
 801a090:	b570      	push	{r4, r5, r6, lr}
 801a092:	eeb0 7b40 	vmov.f64	d7, d0
 801a096:	ee17 5a90 	vmov	r5, s15
 801a09a:	4b99      	ldr	r3, [pc, #612]	@ (801a300 <__ieee754_rem_pio2+0x270>)
 801a09c:	f025 4600 	bic.w	r6, r5, #2147483648	@ 0x80000000
 801a0a0:	429e      	cmp	r6, r3
 801a0a2:	b088      	sub	sp, #32
 801a0a4:	4604      	mov	r4, r0
 801a0a6:	d807      	bhi.n	801a0b8 <__ieee754_rem_pio2+0x28>
 801a0a8:	2200      	movs	r2, #0
 801a0aa:	2300      	movs	r3, #0
 801a0ac:	ed84 0b00 	vstr	d0, [r4]
 801a0b0:	e9c0 2302 	strd	r2, r3, [r0, #8]
 801a0b4:	2000      	movs	r0, #0
 801a0b6:	e01b      	b.n	801a0f0 <__ieee754_rem_pio2+0x60>
 801a0b8:	4b92      	ldr	r3, [pc, #584]	@ (801a304 <__ieee754_rem_pio2+0x274>)
 801a0ba:	429e      	cmp	r6, r3
 801a0bc:	d83b      	bhi.n	801a136 <__ieee754_rem_pio2+0xa6>
 801a0be:	f5a3 231b 	sub.w	r3, r3, #634880	@ 0x9b000
 801a0c2:	2d00      	cmp	r5, #0
 801a0c4:	ed9f 6b7e 	vldr	d6, [pc, #504]	@ 801a2c0 <__ieee754_rem_pio2+0x230>
 801a0c8:	f5a3 63f0 	sub.w	r3, r3, #1920	@ 0x780
 801a0cc:	dd19      	ble.n	801a102 <__ieee754_rem_pio2+0x72>
 801a0ce:	ee30 7b46 	vsub.f64	d7, d0, d6
 801a0d2:	429e      	cmp	r6, r3
 801a0d4:	d00e      	beq.n	801a0f4 <__ieee754_rem_pio2+0x64>
 801a0d6:	ed9f 5b7c 	vldr	d5, [pc, #496]	@ 801a2c8 <__ieee754_rem_pio2+0x238>
 801a0da:	ee37 6b45 	vsub.f64	d6, d7, d5
 801a0de:	ee37 7b46 	vsub.f64	d7, d7, d6
 801a0e2:	ed84 6b00 	vstr	d6, [r4]
 801a0e6:	ee37 7b45 	vsub.f64	d7, d7, d5
 801a0ea:	ed84 7b02 	vstr	d7, [r4, #8]
 801a0ee:	2001      	movs	r0, #1
 801a0f0:	b008      	add	sp, #32
 801a0f2:	bd70      	pop	{r4, r5, r6, pc}
 801a0f4:	ed9f 6b76 	vldr	d6, [pc, #472]	@ 801a2d0 <__ieee754_rem_pio2+0x240>
 801a0f8:	ed9f 5b77 	vldr	d5, [pc, #476]	@ 801a2d8 <__ieee754_rem_pio2+0x248>
 801a0fc:	ee37 7b46 	vsub.f64	d7, d7, d6
 801a100:	e7eb      	b.n	801a0da <__ieee754_rem_pio2+0x4a>
 801a102:	429e      	cmp	r6, r3
 801a104:	ee30 7b06 	vadd.f64	d7, d0, d6
 801a108:	d00e      	beq.n	801a128 <__ieee754_rem_pio2+0x98>
 801a10a:	ed9f 5b6f 	vldr	d5, [pc, #444]	@ 801a2c8 <__ieee754_rem_pio2+0x238>
 801a10e:	ee37 6b05 	vadd.f64	d6, d7, d5
 801a112:	ee37 7b46 	vsub.f64	d7, d7, d6
 801a116:	ed84 6b00 	vstr	d6, [r4]
 801a11a:	ee37 7b05 	vadd.f64	d7, d7, d5
 801a11e:	f04f 30ff 	mov.w	r0, #4294967295
 801a122:	ed84 7b02 	vstr	d7, [r4, #8]
 801a126:	e7e3      	b.n	801a0f0 <__ieee754_rem_pio2+0x60>
 801a128:	ed9f 6b69 	vldr	d6, [pc, #420]	@ 801a2d0 <__ieee754_rem_pio2+0x240>
 801a12c:	ed9f 5b6a 	vldr	d5, [pc, #424]	@ 801a2d8 <__ieee754_rem_pio2+0x248>
 801a130:	ee37 7b06 	vadd.f64	d7, d7, d6
 801a134:	e7eb      	b.n	801a10e <__ieee754_rem_pio2+0x7e>
 801a136:	4b74      	ldr	r3, [pc, #464]	@ (801a308 <__ieee754_rem_pio2+0x278>)
 801a138:	429e      	cmp	r6, r3
 801a13a:	d870      	bhi.n	801a21e <__ieee754_rem_pio2+0x18e>
 801a13c:	f000 f8ec 	bl	801a318 <fabs>
 801a140:	eeb6 7b00 	vmov.f64	d7, #96	@ 0x3f000000  0.5
 801a144:	ed9f 6b66 	vldr	d6, [pc, #408]	@ 801a2e0 <__ieee754_rem_pio2+0x250>
 801a148:	eea0 7b06 	vfma.f64	d7, d0, d6
 801a14c:	eefd 7bc7 	vcvt.s32.f64	s15, d7
 801a150:	eeb8 5be7 	vcvt.f64.s32	d5, s15
 801a154:	ee17 0a90 	vmov	r0, s15
 801a158:	eeb1 4b45 	vneg.f64	d4, d5
 801a15c:	ed9f 7b58 	vldr	d7, [pc, #352]	@ 801a2c0 <__ieee754_rem_pio2+0x230>
 801a160:	eea5 0b47 	vfms.f64	d0, d5, d7
 801a164:	ed9f 7b58 	vldr	d7, [pc, #352]	@ 801a2c8 <__ieee754_rem_pio2+0x238>
 801a168:	281f      	cmp	r0, #31
 801a16a:	ee25 7b07 	vmul.f64	d7, d5, d7
 801a16e:	ee30 6b47 	vsub.f64	d6, d0, d7
 801a172:	dc05      	bgt.n	801a180 <__ieee754_rem_pio2+0xf0>
 801a174:	4b65      	ldr	r3, [pc, #404]	@ (801a30c <__ieee754_rem_pio2+0x27c>)
 801a176:	1e42      	subs	r2, r0, #1
 801a178:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a17c:	42b3      	cmp	r3, r6
 801a17e:	d109      	bne.n	801a194 <__ieee754_rem_pio2+0x104>
 801a180:	ee16 3a90 	vmov	r3, s13
 801a184:	f3c3 530a 	ubfx	r3, r3, #20, #11
 801a188:	ebc3 5316 	rsb	r3, r3, r6, lsr #20
 801a18c:	2b10      	cmp	r3, #16
 801a18e:	ea4f 5226 	mov.w	r2, r6, asr #20
 801a192:	dc02      	bgt.n	801a19a <__ieee754_rem_pio2+0x10a>
 801a194:	ed84 6b00 	vstr	d6, [r4]
 801a198:	e01a      	b.n	801a1d0 <__ieee754_rem_pio2+0x140>
 801a19a:	ed9f 3b4d 	vldr	d3, [pc, #308]	@ 801a2d0 <__ieee754_rem_pio2+0x240>
 801a19e:	eeb0 6b40 	vmov.f64	d6, d0
 801a1a2:	eea4 6b03 	vfma.f64	d6, d4, d3
 801a1a6:	ee30 7b46 	vsub.f64	d7, d0, d6
 801a1aa:	eea4 7b03 	vfma.f64	d7, d4, d3
 801a1ae:	ed9f 3b4a 	vldr	d3, [pc, #296]	@ 801a2d8 <__ieee754_rem_pio2+0x248>
 801a1b2:	ee95 7b03 	vfnms.f64	d7, d5, d3
 801a1b6:	ee36 3b47 	vsub.f64	d3, d6, d7
 801a1ba:	ee13 3a90 	vmov	r3, s7
 801a1be:	f3c3 530a 	ubfx	r3, r3, #20, #11
 801a1c2:	1ad3      	subs	r3, r2, r3
 801a1c4:	2b31      	cmp	r3, #49	@ 0x31
 801a1c6:	dc17      	bgt.n	801a1f8 <__ieee754_rem_pio2+0x168>
 801a1c8:	eeb0 0b46 	vmov.f64	d0, d6
 801a1cc:	ed84 3b00 	vstr	d3, [r4]
 801a1d0:	ed94 6b00 	vldr	d6, [r4]
 801a1d4:	2d00      	cmp	r5, #0
 801a1d6:	ee30 0b46 	vsub.f64	d0, d0, d6
 801a1da:	ee30 0b47 	vsub.f64	d0, d0, d7
 801a1de:	ed84 0b02 	vstr	d0, [r4, #8]
 801a1e2:	da85      	bge.n	801a0f0 <__ieee754_rem_pio2+0x60>
 801a1e4:	eeb1 6b46 	vneg.f64	d6, d6
 801a1e8:	eeb1 0b40 	vneg.f64	d0, d0
 801a1ec:	ed84 6b00 	vstr	d6, [r4]
 801a1f0:	ed84 0b02 	vstr	d0, [r4, #8]
 801a1f4:	4240      	negs	r0, r0
 801a1f6:	e77b      	b.n	801a0f0 <__ieee754_rem_pio2+0x60>
 801a1f8:	ed9f 7b3b 	vldr	d7, [pc, #236]	@ 801a2e8 <__ieee754_rem_pio2+0x258>
 801a1fc:	eeb0 0b46 	vmov.f64	d0, d6
 801a200:	eea4 0b07 	vfma.f64	d0, d4, d7
 801a204:	ee36 6b40 	vsub.f64	d6, d6, d0
 801a208:	eea4 6b07 	vfma.f64	d6, d4, d7
 801a20c:	ed9f 4b38 	vldr	d4, [pc, #224]	@ 801a2f0 <__ieee754_rem_pio2+0x260>
 801a210:	eeb0 7b46 	vmov.f64	d7, d6
 801a214:	ee95 7b04 	vfnms.f64	d7, d5, d4
 801a218:	ee30 6b47 	vsub.f64	d6, d0, d7
 801a21c:	e7ba      	b.n	801a194 <__ieee754_rem_pio2+0x104>
 801a21e:	4b3c      	ldr	r3, [pc, #240]	@ (801a310 <__ieee754_rem_pio2+0x280>)
 801a220:	429e      	cmp	r6, r3
 801a222:	d906      	bls.n	801a232 <__ieee754_rem_pio2+0x1a2>
 801a224:	ee30 7b40 	vsub.f64	d7, d0, d0
 801a228:	ed80 7b02 	vstr	d7, [r0, #8]
 801a22c:	ed80 7b00 	vstr	d7, [r0]
 801a230:	e740      	b.n	801a0b4 <__ieee754_rem_pio2+0x24>
 801a232:	ee10 3a10 	vmov	r3, s0
 801a236:	1532      	asrs	r2, r6, #20
 801a238:	f2a2 4216 	subw	r2, r2, #1046	@ 0x416
 801a23c:	4618      	mov	r0, r3
 801a23e:	eba6 5102 	sub.w	r1, r6, r2, lsl #20
 801a242:	ec41 0b17 	vmov	d7, r0, r1
 801a246:	eebd 6bc7 	vcvt.s32.f64	s12, d7
 801a24a:	ed9f 5b2b 	vldr	d5, [pc, #172]	@ 801a2f8 <__ieee754_rem_pio2+0x268>
 801a24e:	eeb8 6bc6 	vcvt.f64.s32	d6, s12
 801a252:	ee37 7b46 	vsub.f64	d7, d7, d6
 801a256:	ed8d 6b02 	vstr	d6, [sp, #8]
 801a25a:	ee27 7b05 	vmul.f64	d7, d7, d5
 801a25e:	eebd 6bc7 	vcvt.s32.f64	s12, d7
 801a262:	a808      	add	r0, sp, #32
 801a264:	eeb8 6bc6 	vcvt.f64.s32	d6, s12
 801a268:	ee37 7b46 	vsub.f64	d7, d7, d6
 801a26c:	ed8d 6b04 	vstr	d6, [sp, #16]
 801a270:	ee27 7b05 	vmul.f64	d7, d7, d5
 801a274:	ed8d 7b06 	vstr	d7, [sp, #24]
 801a278:	2103      	movs	r1, #3
 801a27a:	ed30 7b02 	vldmdb	r0!, {d7}
 801a27e:	eeb5 7b40 	vcmp.f64	d7, #0.0
 801a282:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a286:	460b      	mov	r3, r1
 801a288:	f101 31ff 	add.w	r1, r1, #4294967295
 801a28c:	d0f5      	beq.n	801a27a <__ieee754_rem_pio2+0x1ea>
 801a28e:	4921      	ldr	r1, [pc, #132]	@ (801a314 <__ieee754_rem_pio2+0x284>)
 801a290:	9101      	str	r1, [sp, #4]
 801a292:	2102      	movs	r1, #2
 801a294:	9100      	str	r1, [sp, #0]
 801a296:	a802      	add	r0, sp, #8
 801a298:	4621      	mov	r1, r4
 801a29a:	f000 f845 	bl	801a328 <__kernel_rem_pio2>
 801a29e:	2d00      	cmp	r5, #0
 801a2a0:	f6bf af26 	bge.w	801a0f0 <__ieee754_rem_pio2+0x60>
 801a2a4:	ed94 7b00 	vldr	d7, [r4]
 801a2a8:	eeb1 7b47 	vneg.f64	d7, d7
 801a2ac:	ed84 7b00 	vstr	d7, [r4]
 801a2b0:	ed94 7b02 	vldr	d7, [r4, #8]
 801a2b4:	eeb1 7b47 	vneg.f64	d7, d7
 801a2b8:	ed84 7b02 	vstr	d7, [r4, #8]
 801a2bc:	e79a      	b.n	801a1f4 <__ieee754_rem_pio2+0x164>
 801a2be:	bf00      	nop
 801a2c0:	54400000 	.word	0x54400000
 801a2c4:	3ff921fb 	.word	0x3ff921fb
 801a2c8:	1a626331 	.word	0x1a626331
 801a2cc:	3dd0b461 	.word	0x3dd0b461
 801a2d0:	1a600000 	.word	0x1a600000
 801a2d4:	3dd0b461 	.word	0x3dd0b461
 801a2d8:	2e037073 	.word	0x2e037073
 801a2dc:	3ba3198a 	.word	0x3ba3198a
 801a2e0:	6dc9c883 	.word	0x6dc9c883
 801a2e4:	3fe45f30 	.word	0x3fe45f30
 801a2e8:	2e000000 	.word	0x2e000000
 801a2ec:	3ba3198a 	.word	0x3ba3198a
 801a2f0:	252049c1 	.word	0x252049c1
 801a2f4:	397b839a 	.word	0x397b839a
 801a2f8:	00000000 	.word	0x00000000
 801a2fc:	41700000 	.word	0x41700000
 801a300:	3fe921fb 	.word	0x3fe921fb
 801a304:	4002d97b 	.word	0x4002d97b
 801a308:	413921fb 	.word	0x413921fb
 801a30c:	0801b5f0 	.word	0x0801b5f0
 801a310:	7fefffff 	.word	0x7fefffff
 801a314:	0801b670 	.word	0x0801b670

0801a318 <fabs>:
 801a318:	ec51 0b10 	vmov	r0, r1, d0
 801a31c:	4602      	mov	r2, r0
 801a31e:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 801a322:	ec43 2b10 	vmov	d0, r2, r3
 801a326:	4770      	bx	lr

0801a328 <__kernel_rem_pio2>:
 801a328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a32c:	ed2d 8b06 	vpush	{d8-d10}
 801a330:	f5ad 7d13 	sub.w	sp, sp, #588	@ 0x24c
 801a334:	469b      	mov	fp, r3
 801a336:	9001      	str	r0, [sp, #4]
 801a338:	4bbb      	ldr	r3, [pc, #748]	@ (801a628 <__kernel_rem_pio2+0x300>)
 801a33a:	98a2      	ldr	r0, [sp, #648]	@ 0x288
 801a33c:	f8dd 828c 	ldr.w	r8, [sp, #652]	@ 0x28c
 801a340:	f853 9020 	ldr.w	r9, [r3, r0, lsl #2]
 801a344:	f112 0f14 	cmn.w	r2, #20
 801a348:	bfa8      	it	ge
 801a34a:	1ed3      	subge	r3, r2, #3
 801a34c:	f10b 3aff 	add.w	sl, fp, #4294967295
 801a350:	bfb8      	it	lt
 801a352:	2300      	movlt	r3, #0
 801a354:	f06f 0517 	mvn.w	r5, #23
 801a358:	ed9f 6bad 	vldr	d6, [pc, #692]	@ 801a610 <__kernel_rem_pio2+0x2e8>
 801a35c:	bfa4      	itt	ge
 801a35e:	2018      	movge	r0, #24
 801a360:	fb93 f3f0 	sdivge	r3, r3, r0
 801a364:	fb03 5505 	mla	r5, r3, r5, r5
 801a368:	eba3 040a 	sub.w	r4, r3, sl
 801a36c:	4415      	add	r5, r2
 801a36e:	460f      	mov	r7, r1
 801a370:	eb09 060a 	add.w	r6, r9, sl
 801a374:	a81a      	add	r0, sp, #104	@ 0x68
 801a376:	eb08 0c84 	add.w	ip, r8, r4, lsl #2
 801a37a:	2200      	movs	r2, #0
 801a37c:	42b2      	cmp	r2, r6
 801a37e:	dd0e      	ble.n	801a39e <__kernel_rem_pio2+0x76>
 801a380:	aa1a      	add	r2, sp, #104	@ 0x68
 801a382:	eb02 02cb 	add.w	r2, r2, fp, lsl #3
 801a386:	f50d 7ed4 	add.w	lr, sp, #424	@ 0x1a8
 801a38a:	2600      	movs	r6, #0
 801a38c:	454e      	cmp	r6, r9
 801a38e:	dc25      	bgt.n	801a3dc <__kernel_rem_pio2+0xb4>
 801a390:	ed9f 7b9f 	vldr	d7, [pc, #636]	@ 801a610 <__kernel_rem_pio2+0x2e8>
 801a394:	f8dd c004 	ldr.w	ip, [sp, #4]
 801a398:	4614      	mov	r4, r2
 801a39a:	2000      	movs	r0, #0
 801a39c:	e015      	b.n	801a3ca <__kernel_rem_pio2+0xa2>
 801a39e:	42d4      	cmn	r4, r2
 801a3a0:	d409      	bmi.n	801a3b6 <__kernel_rem_pio2+0x8e>
 801a3a2:	f85c 1022 	ldr.w	r1, [ip, r2, lsl #2]
 801a3a6:	ee07 1a90 	vmov	s15, r1
 801a3aa:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 801a3ae:	eca0 7b02 	vstmia	r0!, {d7}
 801a3b2:	3201      	adds	r2, #1
 801a3b4:	e7e2      	b.n	801a37c <__kernel_rem_pio2+0x54>
 801a3b6:	eeb0 7b46 	vmov.f64	d7, d6
 801a3ba:	e7f8      	b.n	801a3ae <__kernel_rem_pio2+0x86>
 801a3bc:	ecbc 5b02 	vldmia	ip!, {d5}
 801a3c0:	ed94 6b00 	vldr	d6, [r4]
 801a3c4:	3001      	adds	r0, #1
 801a3c6:	eea5 7b06 	vfma.f64	d7, d5, d6
 801a3ca:	4550      	cmp	r0, sl
 801a3cc:	f1a4 0408 	sub.w	r4, r4, #8
 801a3d0:	ddf4      	ble.n	801a3bc <__kernel_rem_pio2+0x94>
 801a3d2:	ecae 7b02 	vstmia	lr!, {d7}
 801a3d6:	3601      	adds	r6, #1
 801a3d8:	3208      	adds	r2, #8
 801a3da:	e7d7      	b.n	801a38c <__kernel_rem_pio2+0x64>
 801a3dc:	aa06      	add	r2, sp, #24
 801a3de:	ed9f 9b8e 	vldr	d9, [pc, #568]	@ 801a618 <__kernel_rem_pio2+0x2f0>
 801a3e2:	ed9f ab8f 	vldr	d10, [pc, #572]	@ 801a620 <__kernel_rem_pio2+0x2f8>
 801a3e6:	eb02 0289 	add.w	r2, r2, r9, lsl #2
 801a3ea:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 801a3ee:	9203      	str	r2, [sp, #12]
 801a3f0:	9302      	str	r3, [sp, #8]
 801a3f2:	464c      	mov	r4, r9
 801a3f4:	00e3      	lsls	r3, r4, #3
 801a3f6:	9304      	str	r3, [sp, #16]
 801a3f8:	ab92      	add	r3, sp, #584	@ 0x248
 801a3fa:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801a3fe:	ed13 0b28 	vldr	d0, [r3, #-160]	@ 0xffffff60
 801a402:	aa6a      	add	r2, sp, #424	@ 0x1a8
 801a404:	ab06      	add	r3, sp, #24
 801a406:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 801a40a:	461e      	mov	r6, r3
 801a40c:	4620      	mov	r0, r4
 801a40e:	2800      	cmp	r0, #0
 801a410:	f1a2 0208 	sub.w	r2, r2, #8
 801a414:	dc4a      	bgt.n	801a4ac <__kernel_rem_pio2+0x184>
 801a416:	4628      	mov	r0, r5
 801a418:	9305      	str	r3, [sp, #20]
 801a41a:	f000 fa01 	bl	801a820 <scalbn>
 801a41e:	eeb0 8b40 	vmov.f64	d8, d0
 801a422:	eeb4 0b00 	vmov.f64	d0, #64	@ 0x3e000000  0.125
 801a426:	ee28 0b00 	vmul.f64	d0, d8, d0
 801a42a:	f000 fa79 	bl	801a920 <floor>
 801a42e:	eeb2 7b00 	vmov.f64	d7, #32	@ 0x41000000  8.0
 801a432:	eea0 8b47 	vfms.f64	d8, d0, d7
 801a436:	eefd 7bc8 	vcvt.s32.f64	s15, d8
 801a43a:	2d00      	cmp	r5, #0
 801a43c:	ee17 8a90 	vmov	r8, s15
 801a440:	9b05      	ldr	r3, [sp, #20]
 801a442:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 801a446:	ee38 8b47 	vsub.f64	d8, d8, d7
 801a44a:	dd41      	ble.n	801a4d0 <__kernel_rem_pio2+0x1a8>
 801a44c:	1e60      	subs	r0, r4, #1
 801a44e:	aa06      	add	r2, sp, #24
 801a450:	f1c5 0c18 	rsb	ip, r5, #24
 801a454:	f852 6020 	ldr.w	r6, [r2, r0, lsl #2]
 801a458:	fa46 f20c 	asr.w	r2, r6, ip
 801a45c:	4490      	add	r8, r2
 801a45e:	fa02 f20c 	lsl.w	r2, r2, ip
 801a462:	1ab6      	subs	r6, r6, r2
 801a464:	aa06      	add	r2, sp, #24
 801a466:	f842 6020 	str.w	r6, [r2, r0, lsl #2]
 801a46a:	f1c5 0217 	rsb	r2, r5, #23
 801a46e:	4116      	asrs	r6, r2
 801a470:	2e00      	cmp	r6, #0
 801a472:	dd3c      	ble.n	801a4ee <__kernel_rem_pio2+0x1c6>
 801a474:	f04f 0c00 	mov.w	ip, #0
 801a478:	f108 0801 	add.w	r8, r8, #1
 801a47c:	4660      	mov	r0, ip
 801a47e:	f06f 4e7f 	mvn.w	lr, #4278190080	@ 0xff000000
 801a482:	4564      	cmp	r4, ip
 801a484:	dc66      	bgt.n	801a554 <__kernel_rem_pio2+0x22c>
 801a486:	2d00      	cmp	r5, #0
 801a488:	dd03      	ble.n	801a492 <__kernel_rem_pio2+0x16a>
 801a48a:	2d01      	cmp	r5, #1
 801a48c:	d072      	beq.n	801a574 <__kernel_rem_pio2+0x24c>
 801a48e:	2d02      	cmp	r5, #2
 801a490:	d07a      	beq.n	801a588 <__kernel_rem_pio2+0x260>
 801a492:	2e02      	cmp	r6, #2
 801a494:	d12b      	bne.n	801a4ee <__kernel_rem_pio2+0x1c6>
 801a496:	eeb7 0b00 	vmov.f64	d0, #112	@ 0x3f800000  1.0
 801a49a:	ee30 8b48 	vsub.f64	d8, d0, d8
 801a49e:	b330      	cbz	r0, 801a4ee <__kernel_rem_pio2+0x1c6>
 801a4a0:	4628      	mov	r0, r5
 801a4a2:	f000 f9bd 	bl	801a820 <scalbn>
 801a4a6:	ee38 8b40 	vsub.f64	d8, d8, d0
 801a4aa:	e020      	b.n	801a4ee <__kernel_rem_pio2+0x1c6>
 801a4ac:	ee20 7b09 	vmul.f64	d7, d0, d9
 801a4b0:	eebd 7bc7 	vcvt.s32.f64	s14, d7
 801a4b4:	3801      	subs	r0, #1
 801a4b6:	eeb8 7bc7 	vcvt.f64.s32	d7, s14
 801a4ba:	eea7 0b4a 	vfms.f64	d0, d7, d10
 801a4be:	eebd 0bc0 	vcvt.s32.f64	s0, d0
 801a4c2:	eca6 0a01 	vstmia	r6!, {s0}
 801a4c6:	ed92 0b00 	vldr	d0, [r2]
 801a4ca:	ee37 0b00 	vadd.f64	d0, d7, d0
 801a4ce:	e79e      	b.n	801a40e <__kernel_rem_pio2+0xe6>
 801a4d0:	d105      	bne.n	801a4de <__kernel_rem_pio2+0x1b6>
 801a4d2:	1e62      	subs	r2, r4, #1
 801a4d4:	a906      	add	r1, sp, #24
 801a4d6:	f851 6022 	ldr.w	r6, [r1, r2, lsl #2]
 801a4da:	15f6      	asrs	r6, r6, #23
 801a4dc:	e7c8      	b.n	801a470 <__kernel_rem_pio2+0x148>
 801a4de:	eeb6 7b00 	vmov.f64	d7, #96	@ 0x3f000000  0.5
 801a4e2:	eeb4 8bc7 	vcmpe.f64	d8, d7
 801a4e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4ea:	da31      	bge.n	801a550 <__kernel_rem_pio2+0x228>
 801a4ec:	2600      	movs	r6, #0
 801a4ee:	eeb5 8b40 	vcmp.f64	d8, #0.0
 801a4f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4f6:	f040 809b 	bne.w	801a630 <__kernel_rem_pio2+0x308>
 801a4fa:	1e62      	subs	r2, r4, #1
 801a4fc:	2000      	movs	r0, #0
 801a4fe:	454a      	cmp	r2, r9
 801a500:	da49      	bge.n	801a596 <__kernel_rem_pio2+0x26e>
 801a502:	2800      	cmp	r0, #0
 801a504:	d062      	beq.n	801a5cc <__kernel_rem_pio2+0x2a4>
 801a506:	3c01      	subs	r4, #1
 801a508:	ab06      	add	r3, sp, #24
 801a50a:	3d18      	subs	r5, #24
 801a50c:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 801a510:	2b00      	cmp	r3, #0
 801a512:	d0f8      	beq.n	801a506 <__kernel_rem_pio2+0x1de>
 801a514:	eeb7 0b00 	vmov.f64	d0, #112	@ 0x3f800000  1.0
 801a518:	4628      	mov	r0, r5
 801a51a:	f000 f981 	bl	801a820 <scalbn>
 801a51e:	ed9f 6b3e 	vldr	d6, [pc, #248]	@ 801a618 <__kernel_rem_pio2+0x2f0>
 801a522:	1c62      	adds	r2, r4, #1
 801a524:	a96a      	add	r1, sp, #424	@ 0x1a8
 801a526:	00d3      	lsls	r3, r2, #3
 801a528:	eb01 01c2 	add.w	r1, r1, r2, lsl #3
 801a52c:	4622      	mov	r2, r4
 801a52e:	2a00      	cmp	r2, #0
 801a530:	f280 80a8 	bge.w	801a684 <__kernel_rem_pio2+0x35c>
 801a534:	4622      	mov	r2, r4
 801a536:	2a00      	cmp	r2, #0
 801a538:	f2c0 80c6 	blt.w	801a6c8 <__kernel_rem_pio2+0x3a0>
 801a53c:	a96a      	add	r1, sp, #424	@ 0x1a8
 801a53e:	eb01 05c2 	add.w	r5, r1, r2, lsl #3
 801a542:	ed9f 7b33 	vldr	d7, [pc, #204]	@ 801a610 <__kernel_rem_pio2+0x2e8>
 801a546:	f8df c0e4 	ldr.w	ip, [pc, #228]	@ 801a62c <__kernel_rem_pio2+0x304>
 801a54a:	2000      	movs	r0, #0
 801a54c:	1aa1      	subs	r1, r4, r2
 801a54e:	e0b0      	b.n	801a6b2 <__kernel_rem_pio2+0x38a>
 801a550:	2602      	movs	r6, #2
 801a552:	e78f      	b.n	801a474 <__kernel_rem_pio2+0x14c>
 801a554:	f853 2b04 	ldr.w	r2, [r3], #4
 801a558:	b948      	cbnz	r0, 801a56e <__kernel_rem_pio2+0x246>
 801a55a:	b122      	cbz	r2, 801a566 <__kernel_rem_pio2+0x23e>
 801a55c:	f1c2 7280 	rsb	r2, r2, #16777216	@ 0x1000000
 801a560:	f843 2c04 	str.w	r2, [r3, #-4]
 801a564:	2201      	movs	r2, #1
 801a566:	f10c 0c01 	add.w	ip, ip, #1
 801a56a:	4610      	mov	r0, r2
 801a56c:	e789      	b.n	801a482 <__kernel_rem_pio2+0x15a>
 801a56e:	ebae 0202 	sub.w	r2, lr, r2
 801a572:	e7f5      	b.n	801a560 <__kernel_rem_pio2+0x238>
 801a574:	1e62      	subs	r2, r4, #1
 801a576:	ab06      	add	r3, sp, #24
 801a578:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a57c:	f3c3 0316 	ubfx	r3, r3, #0, #23
 801a580:	a906      	add	r1, sp, #24
 801a582:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 801a586:	e784      	b.n	801a492 <__kernel_rem_pio2+0x16a>
 801a588:	1e62      	subs	r2, r4, #1
 801a58a:	ab06      	add	r3, sp, #24
 801a58c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a590:	f3c3 0315 	ubfx	r3, r3, #0, #22
 801a594:	e7f4      	b.n	801a580 <__kernel_rem_pio2+0x258>
 801a596:	ab06      	add	r3, sp, #24
 801a598:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801a59c:	3a01      	subs	r2, #1
 801a59e:	4318      	orrs	r0, r3
 801a5a0:	e7ad      	b.n	801a4fe <__kernel_rem_pio2+0x1d6>
 801a5a2:	3301      	adds	r3, #1
 801a5a4:	f852 0d04 	ldr.w	r0, [r2, #-4]!
 801a5a8:	2800      	cmp	r0, #0
 801a5aa:	d0fa      	beq.n	801a5a2 <__kernel_rem_pio2+0x27a>
 801a5ac:	9a04      	ldr	r2, [sp, #16]
 801a5ae:	f502 7212 	add.w	r2, r2, #584	@ 0x248
 801a5b2:	446a      	add	r2, sp
 801a5b4:	eb04 000b 	add.w	r0, r4, fp
 801a5b8:	a91a      	add	r1, sp, #104	@ 0x68
 801a5ba:	1c66      	adds	r6, r4, #1
 801a5bc:	3a98      	subs	r2, #152	@ 0x98
 801a5be:	eb01 00c0 	add.w	r0, r1, r0, lsl #3
 801a5c2:	4423      	add	r3, r4
 801a5c4:	42b3      	cmp	r3, r6
 801a5c6:	da04      	bge.n	801a5d2 <__kernel_rem_pio2+0x2aa>
 801a5c8:	461c      	mov	r4, r3
 801a5ca:	e713      	b.n	801a3f4 <__kernel_rem_pio2+0xcc>
 801a5cc:	9a03      	ldr	r2, [sp, #12]
 801a5ce:	2301      	movs	r3, #1
 801a5d0:	e7e8      	b.n	801a5a4 <__kernel_rem_pio2+0x27c>
 801a5d2:	9902      	ldr	r1, [sp, #8]
 801a5d4:	f8dd c004 	ldr.w	ip, [sp, #4]
 801a5d8:	f851 1026 	ldr.w	r1, [r1, r6, lsl #2]
 801a5dc:	9104      	str	r1, [sp, #16]
 801a5de:	ee07 1a90 	vmov	s15, r1
 801a5e2:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 801a5e6:	2400      	movs	r4, #0
 801a5e8:	eca0 7b02 	vstmia	r0!, {d7}
 801a5ec:	ed9f 7b08 	vldr	d7, [pc, #32]	@ 801a610 <__kernel_rem_pio2+0x2e8>
 801a5f0:	4686      	mov	lr, r0
 801a5f2:	4554      	cmp	r4, sl
 801a5f4:	dd03      	ble.n	801a5fe <__kernel_rem_pio2+0x2d6>
 801a5f6:	eca2 7b02 	vstmia	r2!, {d7}
 801a5fa:	3601      	adds	r6, #1
 801a5fc:	e7e2      	b.n	801a5c4 <__kernel_rem_pio2+0x29c>
 801a5fe:	ecbc 5b02 	vldmia	ip!, {d5}
 801a602:	ed3e 6b02 	vldmdb	lr!, {d6}
 801a606:	3401      	adds	r4, #1
 801a608:	eea5 7b06 	vfma.f64	d7, d5, d6
 801a60c:	e7f1      	b.n	801a5f2 <__kernel_rem_pio2+0x2ca>
 801a60e:	bf00      	nop
	...
 801a61c:	3e700000 	.word	0x3e700000
 801a620:	00000000 	.word	0x00000000
 801a624:	41700000 	.word	0x41700000
 801a628:	0801b7b8 	.word	0x0801b7b8
 801a62c:	0801b778 	.word	0x0801b778
 801a630:	4268      	negs	r0, r5
 801a632:	eeb0 0b48 	vmov.f64	d0, d8
 801a636:	f000 f8f3 	bl	801a820 <scalbn>
 801a63a:	ed9f 6b73 	vldr	d6, [pc, #460]	@ 801a808 <__kernel_rem_pio2+0x4e0>
 801a63e:	eeb4 0bc6 	vcmpe.f64	d0, d6
 801a642:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a646:	db17      	blt.n	801a678 <__kernel_rem_pio2+0x350>
 801a648:	ed9f 7b71 	vldr	d7, [pc, #452]	@ 801a810 <__kernel_rem_pio2+0x4e8>
 801a64c:	ee20 7b07 	vmul.f64	d7, d0, d7
 801a650:	eebd 7bc7 	vcvt.s32.f64	s14, d7
 801a654:	aa06      	add	r2, sp, #24
 801a656:	eeb8 5bc7 	vcvt.f64.s32	d5, s14
 801a65a:	eea5 0b46 	vfms.f64	d0, d5, d6
 801a65e:	eebd 0bc0 	vcvt.s32.f64	s0, d0
 801a662:	3518      	adds	r5, #24
 801a664:	ee10 3a10 	vmov	r3, s0
 801a668:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 801a66c:	ee17 3a10 	vmov	r3, s14
 801a670:	3401      	adds	r4, #1
 801a672:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 801a676:	e74d      	b.n	801a514 <__kernel_rem_pio2+0x1ec>
 801a678:	eebd 0bc0 	vcvt.s32.f64	s0, d0
 801a67c:	aa06      	add	r2, sp, #24
 801a67e:	ee10 3a10 	vmov	r3, s0
 801a682:	e7f6      	b.n	801a672 <__kernel_rem_pio2+0x34a>
 801a684:	a806      	add	r0, sp, #24
 801a686:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 801a68a:	9001      	str	r0, [sp, #4]
 801a68c:	ee07 0a90 	vmov	s15, r0
 801a690:	3a01      	subs	r2, #1
 801a692:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 801a696:	ee27 7b00 	vmul.f64	d7, d7, d0
 801a69a:	ee20 0b06 	vmul.f64	d0, d0, d6
 801a69e:	ed21 7b02 	vstmdb	r1!, {d7}
 801a6a2:	e744      	b.n	801a52e <__kernel_rem_pio2+0x206>
 801a6a4:	ecbc 5b02 	vldmia	ip!, {d5}
 801a6a8:	ecb5 6b02 	vldmia	r5!, {d6}
 801a6ac:	3001      	adds	r0, #1
 801a6ae:	eea5 7b06 	vfma.f64	d7, d5, d6
 801a6b2:	4548      	cmp	r0, r9
 801a6b4:	dc01      	bgt.n	801a6ba <__kernel_rem_pio2+0x392>
 801a6b6:	4281      	cmp	r1, r0
 801a6b8:	daf4      	bge.n	801a6a4 <__kernel_rem_pio2+0x37c>
 801a6ba:	a842      	add	r0, sp, #264	@ 0x108
 801a6bc:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801a6c0:	ed81 7b00 	vstr	d7, [r1]
 801a6c4:	3a01      	subs	r2, #1
 801a6c6:	e736      	b.n	801a536 <__kernel_rem_pio2+0x20e>
 801a6c8:	9aa2      	ldr	r2, [sp, #648]	@ 0x288
 801a6ca:	2a02      	cmp	r2, #2
 801a6cc:	dc0a      	bgt.n	801a6e4 <__kernel_rem_pio2+0x3bc>
 801a6ce:	2a00      	cmp	r2, #0
 801a6d0:	dc2d      	bgt.n	801a72e <__kernel_rem_pio2+0x406>
 801a6d2:	d046      	beq.n	801a762 <__kernel_rem_pio2+0x43a>
 801a6d4:	f008 0007 	and.w	r0, r8, #7
 801a6d8:	f50d 7d13 	add.w	sp, sp, #588	@ 0x24c
 801a6dc:	ecbd 8b06 	vpop	{d8-d10}
 801a6e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a6e4:	9aa2      	ldr	r2, [sp, #648]	@ 0x288
 801a6e6:	2a03      	cmp	r2, #3
 801a6e8:	d1f4      	bne.n	801a6d4 <__kernel_rem_pio2+0x3ac>
 801a6ea:	a942      	add	r1, sp, #264	@ 0x108
 801a6ec:	f1a3 0208 	sub.w	r2, r3, #8
 801a6f0:	440a      	add	r2, r1
 801a6f2:	4611      	mov	r1, r2
 801a6f4:	4620      	mov	r0, r4
 801a6f6:	2800      	cmp	r0, #0
 801a6f8:	f1a1 0108 	sub.w	r1, r1, #8
 801a6fc:	dc52      	bgt.n	801a7a4 <__kernel_rem_pio2+0x47c>
 801a6fe:	4621      	mov	r1, r4
 801a700:	2901      	cmp	r1, #1
 801a702:	f1a2 0208 	sub.w	r2, r2, #8
 801a706:	dc5d      	bgt.n	801a7c4 <__kernel_rem_pio2+0x49c>
 801a708:	ed9f 7b43 	vldr	d7, [pc, #268]	@ 801a818 <__kernel_rem_pio2+0x4f0>
 801a70c:	aa42      	add	r2, sp, #264	@ 0x108
 801a70e:	4413      	add	r3, r2
 801a710:	2c01      	cmp	r4, #1
 801a712:	dc67      	bgt.n	801a7e4 <__kernel_rem_pio2+0x4bc>
 801a714:	ed9d 5b42 	vldr	d5, [sp, #264]	@ 0x108
 801a718:	ed9d 6b44 	vldr	d6, [sp, #272]	@ 0x110
 801a71c:	2e00      	cmp	r6, #0
 801a71e:	d167      	bne.n	801a7f0 <__kernel_rem_pio2+0x4c8>
 801a720:	ed87 5b00 	vstr	d5, [r7]
 801a724:	ed87 6b02 	vstr	d6, [r7, #8]
 801a728:	ed87 7b04 	vstr	d7, [r7, #16]
 801a72c:	e7d2      	b.n	801a6d4 <__kernel_rem_pio2+0x3ac>
 801a72e:	ed9f 6b3a 	vldr	d6, [pc, #232]	@ 801a818 <__kernel_rem_pio2+0x4f0>
 801a732:	aa42      	add	r2, sp, #264	@ 0x108
 801a734:	4413      	add	r3, r2
 801a736:	4622      	mov	r2, r4
 801a738:	2a00      	cmp	r2, #0
 801a73a:	da24      	bge.n	801a786 <__kernel_rem_pio2+0x45e>
 801a73c:	b34e      	cbz	r6, 801a792 <__kernel_rem_pio2+0x46a>
 801a73e:	eeb1 7b46 	vneg.f64	d7, d6
 801a742:	ed87 7b00 	vstr	d7, [r7]
 801a746:	ed9d 7b42 	vldr	d7, [sp, #264]	@ 0x108
 801a74a:	aa44      	add	r2, sp, #272	@ 0x110
 801a74c:	2301      	movs	r3, #1
 801a74e:	ee37 7b46 	vsub.f64	d7, d7, d6
 801a752:	429c      	cmp	r4, r3
 801a754:	da20      	bge.n	801a798 <__kernel_rem_pio2+0x470>
 801a756:	b10e      	cbz	r6, 801a75c <__kernel_rem_pio2+0x434>
 801a758:	eeb1 7b47 	vneg.f64	d7, d7
 801a75c:	ed87 7b02 	vstr	d7, [r7, #8]
 801a760:	e7b8      	b.n	801a6d4 <__kernel_rem_pio2+0x3ac>
 801a762:	ed9f 7b2d 	vldr	d7, [pc, #180]	@ 801a818 <__kernel_rem_pio2+0x4f0>
 801a766:	aa42      	add	r2, sp, #264	@ 0x108
 801a768:	4413      	add	r3, r2
 801a76a:	2c00      	cmp	r4, #0
 801a76c:	da05      	bge.n	801a77a <__kernel_rem_pio2+0x452>
 801a76e:	b10e      	cbz	r6, 801a774 <__kernel_rem_pio2+0x44c>
 801a770:	eeb1 7b47 	vneg.f64	d7, d7
 801a774:	ed87 7b00 	vstr	d7, [r7]
 801a778:	e7ac      	b.n	801a6d4 <__kernel_rem_pio2+0x3ac>
 801a77a:	ed33 6b02 	vldmdb	r3!, {d6}
 801a77e:	3c01      	subs	r4, #1
 801a780:	ee37 7b06 	vadd.f64	d7, d7, d6
 801a784:	e7f1      	b.n	801a76a <__kernel_rem_pio2+0x442>
 801a786:	ed33 7b02 	vldmdb	r3!, {d7}
 801a78a:	3a01      	subs	r2, #1
 801a78c:	ee36 6b07 	vadd.f64	d6, d6, d7
 801a790:	e7d2      	b.n	801a738 <__kernel_rem_pio2+0x410>
 801a792:	eeb0 7b46 	vmov.f64	d7, d6
 801a796:	e7d4      	b.n	801a742 <__kernel_rem_pio2+0x41a>
 801a798:	ecb2 6b02 	vldmia	r2!, {d6}
 801a79c:	3301      	adds	r3, #1
 801a79e:	ee37 7b06 	vadd.f64	d7, d7, d6
 801a7a2:	e7d6      	b.n	801a752 <__kernel_rem_pio2+0x42a>
 801a7a4:	ed91 7b00 	vldr	d7, [r1]
 801a7a8:	ed91 5b02 	vldr	d5, [r1, #8]
 801a7ac:	3801      	subs	r0, #1
 801a7ae:	ee37 6b05 	vadd.f64	d6, d7, d5
 801a7b2:	ee37 7b46 	vsub.f64	d7, d7, d6
 801a7b6:	ed81 6b00 	vstr	d6, [r1]
 801a7ba:	ee37 7b05 	vadd.f64	d7, d7, d5
 801a7be:	ed81 7b02 	vstr	d7, [r1, #8]
 801a7c2:	e798      	b.n	801a6f6 <__kernel_rem_pio2+0x3ce>
 801a7c4:	ed92 7b00 	vldr	d7, [r2]
 801a7c8:	ed92 5b02 	vldr	d5, [r2, #8]
 801a7cc:	3901      	subs	r1, #1
 801a7ce:	ee37 6b05 	vadd.f64	d6, d7, d5
 801a7d2:	ee37 7b46 	vsub.f64	d7, d7, d6
 801a7d6:	ed82 6b00 	vstr	d6, [r2]
 801a7da:	ee37 7b05 	vadd.f64	d7, d7, d5
 801a7de:	ed82 7b02 	vstr	d7, [r2, #8]
 801a7e2:	e78d      	b.n	801a700 <__kernel_rem_pio2+0x3d8>
 801a7e4:	ed33 6b02 	vldmdb	r3!, {d6}
 801a7e8:	3c01      	subs	r4, #1
 801a7ea:	ee37 7b06 	vadd.f64	d7, d7, d6
 801a7ee:	e78f      	b.n	801a710 <__kernel_rem_pio2+0x3e8>
 801a7f0:	eeb1 5b45 	vneg.f64	d5, d5
 801a7f4:	eeb1 6b46 	vneg.f64	d6, d6
 801a7f8:	ed87 5b00 	vstr	d5, [r7]
 801a7fc:	eeb1 7b47 	vneg.f64	d7, d7
 801a800:	ed87 6b02 	vstr	d6, [r7, #8]
 801a804:	e790      	b.n	801a728 <__kernel_rem_pio2+0x400>
 801a806:	bf00      	nop
 801a808:	00000000 	.word	0x00000000
 801a80c:	41700000 	.word	0x41700000
 801a810:	00000000 	.word	0x00000000
 801a814:	3e700000 	.word	0x3e700000
	...

0801a820 <scalbn>:
 801a820:	ee10 1a90 	vmov	r1, s1
 801a824:	f3c1 530a 	ubfx	r3, r1, #20, #11
 801a828:	b98b      	cbnz	r3, 801a84e <scalbn+0x2e>
 801a82a:	ee10 3a10 	vmov	r3, s0
 801a82e:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 801a832:	4319      	orrs	r1, r3
 801a834:	d00a      	beq.n	801a84c <scalbn+0x2c>
 801a836:	ed9f 7b2c 	vldr	d7, [pc, #176]	@ 801a8e8 <scalbn+0xc8>
 801a83a:	4b37      	ldr	r3, [pc, #220]	@ (801a918 <scalbn+0xf8>)
 801a83c:	ee20 0b07 	vmul.f64	d0, d0, d7
 801a840:	4298      	cmp	r0, r3
 801a842:	da0b      	bge.n	801a85c <scalbn+0x3c>
 801a844:	ed9f 7b2a 	vldr	d7, [pc, #168]	@ 801a8f0 <scalbn+0xd0>
 801a848:	ee20 0b07 	vmul.f64	d0, d0, d7
 801a84c:	4770      	bx	lr
 801a84e:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 801a852:	4293      	cmp	r3, r2
 801a854:	d107      	bne.n	801a866 <scalbn+0x46>
 801a856:	ee30 0b00 	vadd.f64	d0, d0, d0
 801a85a:	4770      	bx	lr
 801a85c:	ee10 1a90 	vmov	r1, s1
 801a860:	f3c1 530a 	ubfx	r3, r1, #20, #11
 801a864:	3b36      	subs	r3, #54	@ 0x36
 801a866:	f24c 3250 	movw	r2, #50000	@ 0xc350
 801a86a:	4290      	cmp	r0, r2
 801a86c:	dd0d      	ble.n	801a88a <scalbn+0x6a>
 801a86e:	ed9f 7b22 	vldr	d7, [pc, #136]	@ 801a8f8 <scalbn+0xd8>
 801a872:	ee10 3a90 	vmov	r3, s1
 801a876:	eeb0 6b47 	vmov.f64	d6, d7
 801a87a:	ed9f 5b21 	vldr	d5, [pc, #132]	@ 801a900 <scalbn+0xe0>
 801a87e:	2b00      	cmp	r3, #0
 801a880:	fe27 7b05 	vselge.f64	d7, d7, d5
 801a884:	ee27 0b06 	vmul.f64	d0, d7, d6
 801a888:	4770      	bx	lr
 801a88a:	4418      	add	r0, r3
 801a88c:	f240 73fe 	movw	r3, #2046	@ 0x7fe
 801a890:	4298      	cmp	r0, r3
 801a892:	dcec      	bgt.n	801a86e <scalbn+0x4e>
 801a894:	2800      	cmp	r0, #0
 801a896:	dd0a      	ble.n	801a8ae <scalbn+0x8e>
 801a898:	f021 41ff 	bic.w	r1, r1, #2139095040	@ 0x7f800000
 801a89c:	ec53 2b10 	vmov	r2, r3, d0
 801a8a0:	f421 01e0 	bic.w	r1, r1, #7340032	@ 0x700000
 801a8a4:	ea41 5300 	orr.w	r3, r1, r0, lsl #20
 801a8a8:	ec43 2b10 	vmov	d0, r2, r3
 801a8ac:	4770      	bx	lr
 801a8ae:	f110 0f35 	cmn.w	r0, #53	@ 0x35
 801a8b2:	da09      	bge.n	801a8c8 <scalbn+0xa8>
 801a8b4:	ed9f 7b0e 	vldr	d7, [pc, #56]	@ 801a8f0 <scalbn+0xd0>
 801a8b8:	ee10 3a90 	vmov	r3, s1
 801a8bc:	eeb0 6b47 	vmov.f64	d6, d7
 801a8c0:	ed9f 5b11 	vldr	d5, [pc, #68]	@ 801a908 <scalbn+0xe8>
 801a8c4:	2b00      	cmp	r3, #0
 801a8c6:	e7db      	b.n	801a880 <scalbn+0x60>
 801a8c8:	f021 41ff 	bic.w	r1, r1, #2139095040	@ 0x7f800000
 801a8cc:	ec53 2b10 	vmov	r2, r3, d0
 801a8d0:	3036      	adds	r0, #54	@ 0x36
 801a8d2:	f421 01e0 	bic.w	r1, r1, #7340032	@ 0x700000
 801a8d6:	ea41 5300 	orr.w	r3, r1, r0, lsl #20
 801a8da:	ed9f 7b0d 	vldr	d7, [pc, #52]	@ 801a910 <scalbn+0xf0>
 801a8de:	ec43 2b10 	vmov	d0, r2, r3
 801a8e2:	e7b1      	b.n	801a848 <scalbn+0x28>
 801a8e4:	f3af 8000 	nop.w
 801a8e8:	00000000 	.word	0x00000000
 801a8ec:	43500000 	.word	0x43500000
 801a8f0:	c2f8f359 	.word	0xc2f8f359
 801a8f4:	01a56e1f 	.word	0x01a56e1f
 801a8f8:	8800759c 	.word	0x8800759c
 801a8fc:	7e37e43c 	.word	0x7e37e43c
 801a900:	8800759c 	.word	0x8800759c
 801a904:	fe37e43c 	.word	0xfe37e43c
 801a908:	c2f8f359 	.word	0xc2f8f359
 801a90c:	81a56e1f 	.word	0x81a56e1f
 801a910:	00000000 	.word	0x00000000
 801a914:	3c900000 	.word	0x3c900000
 801a918:	ffff3cb0 	.word	0xffff3cb0
 801a91c:	00000000 	.word	0x00000000

0801a920 <floor>:
 801a920:	ee10 3a90 	vmov	r3, s1
 801a924:	f3c3 500a 	ubfx	r0, r3, #20, #11
 801a928:	ee10 2a10 	vmov	r2, s0
 801a92c:	f2a0 31ff 	subw	r1, r0, #1023	@ 0x3ff
 801a930:	2913      	cmp	r1, #19
 801a932:	b530      	push	{r4, r5, lr}
 801a934:	4615      	mov	r5, r2
 801a936:	dc33      	bgt.n	801a9a0 <floor+0x80>
 801a938:	2900      	cmp	r1, #0
 801a93a:	da18      	bge.n	801a96e <floor+0x4e>
 801a93c:	ed9f 7b30 	vldr	d7, [pc, #192]	@ 801aa00 <floor+0xe0>
 801a940:	ee30 0b07 	vadd.f64	d0, d0, d7
 801a944:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
 801a948:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a94c:	dd0a      	ble.n	801a964 <floor+0x44>
 801a94e:	2b00      	cmp	r3, #0
 801a950:	da50      	bge.n	801a9f4 <floor+0xd4>
 801a952:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 801a956:	4313      	orrs	r3, r2
 801a958:	2200      	movs	r2, #0
 801a95a:	4293      	cmp	r3, r2
 801a95c:	4b2a      	ldr	r3, [pc, #168]	@ (801aa08 <floor+0xe8>)
 801a95e:	bf08      	it	eq
 801a960:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 801a964:	4619      	mov	r1, r3
 801a966:	4610      	mov	r0, r2
 801a968:	ec41 0b10 	vmov	d0, r0, r1
 801a96c:	e01f      	b.n	801a9ae <floor+0x8e>
 801a96e:	4827      	ldr	r0, [pc, #156]	@ (801aa0c <floor+0xec>)
 801a970:	4108      	asrs	r0, r1
 801a972:	ea03 0400 	and.w	r4, r3, r0
 801a976:	4314      	orrs	r4, r2
 801a978:	d019      	beq.n	801a9ae <floor+0x8e>
 801a97a:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 801aa00 <floor+0xe0>
 801a97e:	ee30 0b07 	vadd.f64	d0, d0, d7
 801a982:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
 801a986:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a98a:	ddeb      	ble.n	801a964 <floor+0x44>
 801a98c:	2b00      	cmp	r3, #0
 801a98e:	bfbe      	ittt	lt
 801a990:	f44f 1280 	movlt.w	r2, #1048576	@ 0x100000
 801a994:	410a      	asrlt	r2, r1
 801a996:	189b      	addlt	r3, r3, r2
 801a998:	ea23 0300 	bic.w	r3, r3, r0
 801a99c:	2200      	movs	r2, #0
 801a99e:	e7e1      	b.n	801a964 <floor+0x44>
 801a9a0:	2933      	cmp	r1, #51	@ 0x33
 801a9a2:	dd05      	ble.n	801a9b0 <floor+0x90>
 801a9a4:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 801a9a8:	d101      	bne.n	801a9ae <floor+0x8e>
 801a9aa:	ee30 0b00 	vadd.f64	d0, d0, d0
 801a9ae:	bd30      	pop	{r4, r5, pc}
 801a9b0:	f2a0 4413 	subw	r4, r0, #1043	@ 0x413
 801a9b4:	f04f 30ff 	mov.w	r0, #4294967295
 801a9b8:	40e0      	lsrs	r0, r4
 801a9ba:	4210      	tst	r0, r2
 801a9bc:	d0f7      	beq.n	801a9ae <floor+0x8e>
 801a9be:	ed9f 7b10 	vldr	d7, [pc, #64]	@ 801aa00 <floor+0xe0>
 801a9c2:	ee30 0b07 	vadd.f64	d0, d0, d7
 801a9c6:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
 801a9ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9ce:	ddc9      	ble.n	801a964 <floor+0x44>
 801a9d0:	2b00      	cmp	r3, #0
 801a9d2:	da02      	bge.n	801a9da <floor+0xba>
 801a9d4:	2914      	cmp	r1, #20
 801a9d6:	d103      	bne.n	801a9e0 <floor+0xc0>
 801a9d8:	3301      	adds	r3, #1
 801a9da:	ea22 0200 	bic.w	r2, r2, r0
 801a9de:	e7c1      	b.n	801a964 <floor+0x44>
 801a9e0:	2401      	movs	r4, #1
 801a9e2:	f1c1 0134 	rsb	r1, r1, #52	@ 0x34
 801a9e6:	fa04 f101 	lsl.w	r1, r4, r1
 801a9ea:	440a      	add	r2, r1
 801a9ec:	42aa      	cmp	r2, r5
 801a9ee:	bf38      	it	cc
 801a9f0:	191b      	addcc	r3, r3, r4
 801a9f2:	e7f2      	b.n	801a9da <floor+0xba>
 801a9f4:	2200      	movs	r2, #0
 801a9f6:	4613      	mov	r3, r2
 801a9f8:	e7b4      	b.n	801a964 <floor+0x44>
 801a9fa:	bf00      	nop
 801a9fc:	f3af 8000 	nop.w
 801aa00:	8800759c 	.word	0x8800759c
 801aa04:	7e37e43c 	.word	0x7e37e43c
 801aa08:	bff00000 	.word	0xbff00000
 801aa0c:	000fffff 	.word	0x000fffff

0801aa10 <_init>:
 801aa10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801aa12:	bf00      	nop
 801aa14:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801aa16:	bc08      	pop	{r3}
 801aa18:	469e      	mov	lr, r3
 801aa1a:	4770      	bx	lr

0801aa1c <_fini>:
 801aa1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801aa1e:	bf00      	nop
 801aa20:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801aa22:	bc08      	pop	{r3}
 801aa24:	469e      	mov	lr, r3
 801aa26:	4770      	bx	lr
